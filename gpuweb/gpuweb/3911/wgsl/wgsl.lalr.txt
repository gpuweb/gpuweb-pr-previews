=Grammar:

_blankspace:/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_block_comment:/\u200B_block_comment/
_comment:/\/\/.*/
_disambiguate_template:/\u200B_disambiguate_template/
_error_sentinel:/\u200B_error_sentinel/
_greater_than:/\u200B_greater_than/
_greater_than_equal:/\u200B_greater_than_equal/
_less_than:/\u200B_less_than/
_less_than_equal:/\u200B_less_than_equal/
_shift_left:/\u200B_shift_left/
_shift_left_assign:/\u200B_shift_left_assign/
_shift_right:/\u200B_shift_right/
_shift_right_assign:/\u200B_shift_right_assign/
_template_args_end:/\u200B_template_args_end/
_template_args_start:/\u200B_template_args_start/
additive_expression:
   additive_expression additive_operator multiplicative_expression
 | multiplicative_expression
additive_operator:
   '+'
 | '-'
argument_expression_list:
   '(' expression_comma_list ? ')'
assignment_statement:
   '_' '=' expression
 | lhs_expression ( '=' | compound_assignment_operator ) expression
assignment_statement/0.1:
   '='
 | compound_assignment_operator
attribute:
   '@' ident_pattern_token argument_expression_list ?
binary_and_expression:
   binary_and_expression '&' unary_expression
 | unary_expression
binary_or_expression:
   binary_or_expression '|' unary_expression
 | unary_expression
binary_xor_expression:
   binary_xor_expression '^' unary_expression
 | unary_expression
bitwise_expression:
   binary_and_expression '&' unary_expression
 | binary_or_expression '|' unary_expression
 | binary_xor_expression '^' unary_expression
bool_literal:
   'false'
 | 'true'
break_if_statement:
   'break' 'if' expression ';'
break_statement:'break'
call_expression:call_phrase
call_phrase:
   template_elaborated_ident argument_expression_list
case_clause:
   'case' case_selectors ':' ? compound_statement
case_selector:
   'default'
 | expression
case_selectors:
   case_selector ( ',' case_selector ) * ? ',' ?
case_selectors/0.1/0/0.0:
   ',' case_selector
component_or_swizzle_specifier:
   '.' member_ident component_or_swizzle_specifier ?
 | '.' swizzle_name component_or_swizzle_specifier ?
 | '[' expression ']' component_or_swizzle_specifier ?
compound_assignment_operator:
   '%='
 | '&='
 | '*='
 | '+='
 | '-='
 | '/='
 | '^='
 | '|='
 | _shift_left_assign
 | _shift_right_assign
compound_statement:
   '{' statement * ? '}'
const_assert_statement:
   'const_assert' expression
continue_statement:'continue'
continuing_compound_statement:
   '{' statement * ? break_if_statement ? '}'
continuing_statement:
   'continuing' continuing_compound_statement
core_lhs_expression:
   '(' lhs_expression ')'
 | ident _disambiguate_template
decimal_float_literal:
   /0[fh]/
 | /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/
 | /[0-9]+[eE][+-]?[0-9]+[fh]?/
 | /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/
 | /[1-9][0-9]*[fh]/
decimal_int_literal:
   /0[iu]?/
 | /[1-9][0-9]*[iu]?/
decrement_statement:
   lhs_expression '--'
default_alone_clause:
   'default' ':' ? compound_statement
else_clause:
   'else' compound_statement
else_if_clause:
   'else' 'if' expression compound_statement
enable_directive:
   'enable' enable_extension_name ';'
enable_extension_name:ident_pattern_token
expression:
   bitwise_expression
 | relational_expression
 | short_circuit_and_expression '&&' relational_expression
 | short_circuit_or_expression '||' relational_expression
expression_comma_list:
   expression ( ',' expression ) * ? ',' ?
expression_comma_list/0.1/0/0.0:
   ',' expression
float_literal:
   decimal_float_literal
 | hex_float_literal
for_header:
   for_init ? ';' expression ? ';' for_update ?
for_init:
   func_call_statement
 | variable_statement
 | variable_updating_statement
for_statement:
   'for' '(' for_header ')' compound_statement
for_update:
   func_call_statement
 | variable_updating_statement
func_call_statement:call_phrase
function_decl:
   attribute * ? function_header compound_statement
function_header:
   'fn' ident '(' param_list ? ')' ( '->' attribute * ? template_elaborated_ident )?
global_constant_decl:
   'const' optionally_typed_ident '=' expression
 | attribute * ? 'override' optionally_typed_ident ( '=' expression )?
global_decl:
   ';'
 | const_assert_statement ';'
 | function_decl
 | global_constant_decl ';'
 | global_variable_decl ';'
 | struct_decl
 | type_alias_decl ';'
global_directive:
   enable_directive
 | requires_directive
global_variable_decl:
   attribute * ? variable_decl ( '=' expression )?
hex_float_literal:
   /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/
 | /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/
 | /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/
hex_int_literal:/0[xX][0-9a-fA-F]+[iu]?/
ident:
   ident_pattern_token _disambiguate_template
ident_pattern_token:/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
if_clause:
   'if' expression compound_statement
if_statement:
   if_clause else_if_clause * ? else_clause ?
increment_statement:
   lhs_expression '++'
int_literal:
   decimal_int_literal
 | hex_int_literal
lhs_expression:
   '&' lhs_expression
 | '*' lhs_expression
 | core_lhs_expression component_or_swizzle_specifier ?
literal:
   bool_literal
 | float_literal
 | int_literal
loop_statement:
   'loop' '{' statement * ? continuing_statement ? '}'
member_ident:ident_pattern_token
multiplicative_expression:
   multiplicative_expression multiplicative_operator unary_expression
 | unary_expression
multiplicative_operator:
   '%'
 | '*'
 | '/'
optionally_typed_ident:
   ident ( ':' type_specifier )?
param:
   attribute * ? ident ':' type_specifier
param_list:
   param ( ',' param ) * ? ',' ?
param_list/0.1/0/0.0:
   ',' param
paren_expression:
   '(' expression ')'
primary_expression:
   call_expression
 | literal
 | paren_expression
 | template_elaborated_ident
relational_expression:
   shift_expression
 | shift_expression '!=' shift_expression
 | shift_expression '==' shift_expression
 | shift_expression _greater_than shift_expression
 | shift_expression _greater_than_equal shift_expression
 | shift_expression _less_than shift_expression
 | shift_expression _less_than_equal shift_expression
requires_directive:
   'requires' software_extension_list ';'
return_statement:
   'return' expression ?
shift_expression:
   additive_expression
 | unary_expression _shift_left unary_expression
 | unary_expression _shift_right unary_expression
short_circuit_and_expression:
   relational_expression
 | short_circuit_and_expression '&&' relational_expression
short_circuit_or_expression:
   relational_expression
 | short_circuit_or_expression '||' relational_expression
singular_expression:
   primary_expression component_or_swizzle_specifier ?
software_extension_list:
   software_extension_name ( ',' software_extension_name ) * ? ',' ?
software_extension_list/0.1/0/0.0:
   ',' software_extension_name
software_extension_name:ident_pattern_token
statement:
   ';'
 | 'discard' ';'
 | break_statement ';'
 | compound_statement
 | const_assert_statement ';'
 | continue_statement ';'
 | for_statement
 | func_call_statement ';'
 | if_statement
 | loop_statement
 | return_statement ';'
 | switch_statement
 | variable_statement ';'
 | variable_updating_statement ';'
 | while_statement
struct_body_decl:
   '{' struct_member ( ',' struct_member ) * ? ',' ? '}'
struct_body_decl/0.2/0/0.0:
   ',' struct_member
struct_decl:
   'struct' ident struct_body_decl
struct_member:
   attribute * ? member_ident ':' type_specifier
switch_body:
   case_clause
 | default_alone_clause
switch_statement:
   'switch' expression '{' ( switch_body * ) '}'
switch_statement/0.3:
   switch_body *
swizzle_name:
   '/[rgba]/'
 | '/[rgba][rgba]/'
 | '/[rgba][rgba][rgba]/'
 | '/[rgba][rgba][rgba][rgba]/'
 | '/[xyzw]/'
 | '/[xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw][xyzw]/'
template_arg_comma_list:
   template_arg_expression ( ',' template_arg_expression ) * ? ',' ?
template_arg_comma_list/0.1/0/0.0:
   ',' template_arg_expression
template_arg_expression:expression
template_elaborated_ident:
   ident _disambiguate_template template_list ?
template_list:
   _template_args_start template_arg_comma_list _template_args_end
translation_unit:
   global_directive * ? global_decl * ?
type_alias_decl:
   'alias' ident '=' type_specifier
type_specifier:template_elaborated_ident
unary_expression:
   '!' unary_expression
 | '&' unary_expression
 | '*' unary_expression
 | '-' unary_expression
 | '~' unary_expression
 | singular_expression
variable_decl:
   'var' _disambiguate_template template_list ? optionally_typed_ident
variable_statement:
   'const' optionally_typed_ident '=' expression
 | 'let' optionally_typed_ident '=' expression
 | variable_decl
 | variable_decl '=' expression
variable_updating_statement:
   assignment_statement
 | decrement_statement
 | increment_statement
while_statement:
   'while' expression compound_statement

=Raw rules:
translation_unit  -> ( Choice ( Seq translation_unit/0.0 translation_unit/0.1 ) )
translation_unit .reg_info.index: 439
translation_unit .first: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' Îµ}
translation_unit .derives_empty: True
translation_unit .follow: {EndOfText}
global_directive  -> ( Choice enable_directive requires_directive )
global_directive .reg_info.index: 109
global_directive .first: {'enable' 'requires'}
global_directive .derives_empty: False
global_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_decl  -> ( Choice ';' ( Seq global_variable_decl ';' ) ( Seq global_constant_decl ';' ) ( Seq type_alias_decl ';' ) struct_decl function_decl ( Seq const_assert_statement ';' ) )
global_decl .reg_info.index: 120
global_decl .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var'}
global_decl .derives_empty: False
global_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
bool_literal  -> ( Choice 'true' 'false' )
bool_literal .reg_info.index: 121
bool_literal .first: {'false' 'true'}
bool_literal .derives_empty: False
bool_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal  -> ( Choice decimal_int_literal hex_int_literal )
int_literal .reg_info.index: 124
int_literal .first: {/0[iu]?/ /0[xX][0-9a-fA-F]+[iu]?/ /[1-9][0-9]*[iu]?/}
int_literal .derives_empty: False
int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal  -> ( Choice /0[iu]?/ /[1-9][0-9]*[iu]?/ )
decimal_int_literal .reg_info.index: 125
decimal_int_literal .first: {/0[iu]?/ /[1-9][0-9]*[iu]?/}
decimal_int_literal .derives_empty: False
decimal_int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal  -> /0[xX][0-9a-fA-F]+[iu]?/
hex_int_literal .reg_info.index: 7
hex_int_literal .first: {/0[xX][0-9a-fA-F]+[iu]?/}
hex_int_literal .derives_empty: False
hex_int_literal .follow: {}
float_literal  -> ( Choice decimal_float_literal hex_float_literal )
float_literal .reg_info.index: 128
float_literal .first: {/0[fh]/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
float_literal .derives_empty: False
float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal  -> ( Choice /0[fh]/ /[1-9][0-9]*[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ )
decimal_float_literal .reg_info.index: 129
decimal_float_literal .first: {/0[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
decimal_float_literal .derives_empty: False
decimal_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal  -> ( Choice /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ )
hex_float_literal .reg_info.index: 130
hex_float_literal .first: {/0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/}
hex_float_literal .derives_empty: False
hex_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal  -> ( Choice int_literal float_literal bool_literal )
literal .reg_info.index: 134
literal .first: {'false' 'true' /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
literal .derives_empty: False
literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident  -> ( Choice ( Seq ident_pattern_token _disambiguate_template ) )
ident .reg_info.index: 388
ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident .derives_empty: False
ident .follow: {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}
member_ident  -> ident_pattern_token
member_ident .reg_info.index: 135
member_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
member_ident .derives_empty: False
member_ident .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
template_list  -> ( Choice ( Seq _template_args_start template_arg_comma_list _template_args_end ) )
template_list .reg_info.index: 389
template_list .first: {/\u200B_template_args_start/}
template_list .derives_empty: False
template_list .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_arg_comma_list  -> ( Choice ( Seq template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 ) )
template_arg_comma_list .reg_info.index: 490
template_arg_comma_list .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_arg_comma_list .derives_empty: False
template_arg_comma_list .follow: {/\u200B_template_args_end/}
template_arg_expression  -> expression
template_arg_expression .reg_info.index: 148
template_arg_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_arg_expression .derives_empty: False
template_arg_expression .follow: {',' /\u200B_template_args_end/}
attribute  -> ( Choice ( Seq '@' ident_pattern_token attribute/0.2 ) )
attribute .reg_info.index: 497
attribute .first: {'@'}
attribute .derives_empty: False
attribute .follow: {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_decl  -> ( Choice ( Seq 'struct' ident struct_body_decl ) )
struct_decl .reg_info.index: 392
struct_decl .first: {'struct'}
struct_decl .derives_empty: False
struct_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl  -> ( Choice ( Seq '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' ) )
struct_body_decl .reg_info.index: 510
struct_body_decl .first: {'{'}
struct_body_decl .derives_empty: False
struct_body_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_member  -> ( Choice ( Seq struct_member/0.0 member_ident ':' type_specifier ) )
struct_member .reg_info.index: 518
struct_member .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member .derives_empty: False
struct_member .follow: {',' '}'}
type_alias_decl  -> ( Choice ( Seq 'alias' ident '=' type_specifier ) )
type_alias_decl .reg_info.index: 395
type_alias_decl .first: {'alias'}
type_alias_decl .derives_empty: False
type_alias_decl .follow: {';'}
type_specifier  -> template_elaborated_ident
type_specifier .reg_info.index: 167
type_specifier .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
type_specifier .derives_empty: False
type_specifier .follow: {')' ',' ';' '=' '}'}
template_elaborated_ident  -> ( Choice ( Seq ident _disambiguate_template template_elaborated_ident/0.2 ) )
template_elaborated_ident .reg_info.index: 530
template_elaborated_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident .derives_empty: False
template_elaborated_ident .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
variable_statement  -> ( Choice variable_decl ( Seq variable_decl '=' expression ) ( Seq 'let' optionally_typed_ident '=' expression ) ( Seq 'const' optionally_typed_ident '=' expression ) )
variable_statement .reg_info.index: 176
variable_statement .first: {'const' 'let' 'var'}
variable_statement .derives_empty: False
variable_statement .follow: {';'}
variable_decl  -> ( Choice ( Seq 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident ) )
variable_decl .reg_info.index: 552
variable_decl .first: {'var'}
variable_decl .derives_empty: False
variable_decl .follow: {';' '='}
optionally_typed_ident  -> ( Choice ( Seq ident optionally_typed_ident/0.1 ) )
optionally_typed_ident .reg_info.index: 558
optionally_typed_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
optionally_typed_ident .derives_empty: False
optionally_typed_ident .follow: {';' '='}
global_variable_decl  -> ( Choice ( Seq global_variable_decl/0.0 variable_decl global_variable_decl/0.2 ) )
global_variable_decl .reg_info.index: 565
global_variable_decl .first: {'@' 'var'}
global_variable_decl .derives_empty: False
global_variable_decl .follow: {';'}
global_constant_decl  -> ( Choice ( Seq 'const' optionally_typed_ident '=' expression ) ( Seq global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 ) )
global_constant_decl .reg_info.index: 577
global_constant_decl .first: {'@' 'const' 'override'}
global_constant_decl .derives_empty: False
global_constant_decl .follow: {';'}
primary_expression  -> ( Choice template_elaborated_ident call_expression literal paren_expression )
primary_expression .reg_info.index: 189
primary_expression .first: {'(' 'false' 'true' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
primary_expression .derives_empty: False
primary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression  -> call_phrase
call_expression .reg_info.index: 190
call_expression .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_expression .derives_empty: False
call_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_phrase  -> ( Choice ( Seq template_elaborated_ident argument_expression_list ) )
call_phrase .reg_info.index: 400
call_phrase .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_phrase .derives_empty: False
call_phrase .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression  -> ( Choice ( Seq '(' expression ')' ) )
paren_expression .reg_info.index: 401
paren_expression .first: {'('}
paren_expression .derives_empty: False
paren_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list  -> ( Choice ( Seq '(' argument_expression_list/0.1 ')' ) )
argument_expression_list .reg_info.index: 595
argument_expression_list .first: {'('}
argument_expression_list .derives_empty: False
argument_expression_list .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' 'fn' 'override' 'var' '{' '|' '||' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
expression_comma_list  -> ( Choice ( Seq expression expression_comma_list/0.1 expression_comma_list/0.2 ) )
expression_comma_list .reg_info.index: 602
expression_comma_list .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression_comma_list .derives_empty: False
expression_comma_list .follow: {')'}
component_or_swizzle_specifier  -> ( Choice ( Seq '[' expression ']' component_or_swizzle_specifier/0.3 ) ( Seq '.' member_ident component_or_swizzle_specifier/1.2 ) ( Seq '.' swizzle_name component_or_swizzle_specifier/2.2 ) )
component_or_swizzle_specifier .reg_info.index: 620
component_or_swizzle_specifier .first: {'.' '['}
component_or_swizzle_specifier .derives_empty: False
component_or_swizzle_specifier .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
unary_expression  -> ( Choice singular_expression ( Seq '-' unary_expression ) ( Seq '!' unary_expression ) ( Seq '~' unary_expression ) ( Seq '*' unary_expression ) ( Seq '&' unary_expression ) )
unary_expression .reg_info.index: 214
unary_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
unary_expression .derives_empty: False
unary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression  -> ( Choice ( Seq primary_expression singular_expression/0.1 ) )
singular_expression .reg_info.index: 641
singular_expression .first: {'(' 'false' 'true' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
singular_expression .derives_empty: False
singular_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
lhs_expression  -> ( Choice ( Seq core_lhs_expression lhs_expression/0.1 ) ( Seq '*' lhs_expression ) ( Seq '&' lhs_expression ) )
lhs_expression .reg_info.index: 652
lhs_expression .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
lhs_expression .derives_empty: False
lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression  -> ( Choice ( Seq ident _disambiguate_template ) ( Seq '(' lhs_expression ')' ) )
core_lhs_expression .reg_info.index: 225
core_lhs_expression .first: {'(' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
core_lhs_expression .derives_empty: False
core_lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
multiplicative_expression  -> ( Choice unary_expression ( Seq multiplicative_expression multiplicative_operator unary_expression ) )
multiplicative_expression .reg_info.index: 229
multiplicative_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_expression .derives_empty: False
multiplicative_expression .follow: {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator  -> ( Choice '*' '/' '%' )
multiplicative_operator .reg_info.index: 230
multiplicative_operator .first: {'%' '*' '/'}
multiplicative_operator .derives_empty: False
multiplicative_operator .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression  -> ( Choice multiplicative_expression ( Seq additive_expression additive_operator multiplicative_expression ) )
additive_expression .reg_info.index: 234
additive_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression .derives_empty: False
additive_expression .follow: {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_operator  -> ( Choice '+' '-' )
additive_operator .reg_info.index: 235
additive_operator .first: {'+' '-'}
additive_operator .derives_empty: False
additive_operator .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression  -> ( Choice additive_expression ( Seq unary_expression _shift_left unary_expression ) ( Seq unary_expression _shift_right unary_expression ) )
shift_expression .reg_info.index: 240
shift_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression .derives_empty: False
shift_expression .follow: {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
relational_expression  -> ( Choice shift_expression ( Seq shift_expression _less_than shift_expression ) ( Seq shift_expression _greater_than shift_expression ) ( Seq shift_expression _less_than_equal shift_expression ) ( Seq shift_expression _greater_than_equal shift_expression ) ( Seq shift_expression '==' shift_expression ) ( Seq shift_expression '!=' shift_expression ) )
relational_expression .reg_info.index: 252
relational_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
relational_expression .derives_empty: False
relational_expression .follow: {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
short_circuit_and_expression  -> ( Choice relational_expression ( Seq short_circuit_and_expression '&&' relational_expression ) )
short_circuit_and_expression .reg_info.index: 256
short_circuit_and_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_and_expression .derives_empty: False
short_circuit_and_expression .follow: {'&&'}
short_circuit_or_expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) )
short_circuit_or_expression .reg_info.index: 259
short_circuit_or_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_or_expression .derives_empty: False
short_circuit_or_expression .follow: {'||'}
binary_or_expression  -> ( Choice unary_expression ( Seq binary_or_expression '|' unary_expression ) )
binary_or_expression .reg_info.index: 262
binary_or_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_or_expression .derives_empty: False
binary_or_expression .follow: {'|'}
binary_and_expression  -> ( Choice unary_expression ( Seq binary_and_expression '&' unary_expression ) )
binary_and_expression .reg_info.index: 265
binary_and_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_and_expression .derives_empty: False
binary_and_expression .follow: {'&'}
binary_xor_expression  -> ( Choice unary_expression ( Seq binary_xor_expression '^' unary_expression ) )
binary_xor_expression .reg_info.index: 268
binary_xor_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_xor_expression .derives_empty: False
binary_xor_expression .follow: {'^'}
bitwise_expression  -> ( Choice ( Seq binary_and_expression '&' unary_expression ) ( Seq binary_or_expression '|' unary_expression ) ( Seq binary_xor_expression '^' unary_expression ) )
bitwise_expression .reg_info.index: 269
bitwise_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
bitwise_expression .derives_empty: False
bitwise_expression .follow: {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) ( Seq short_circuit_and_expression '&&' relational_expression ) bitwise_expression )
expression .reg_info.index: 271
expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression .derives_empty: False
expression .follow: {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
compound_statement  -> ( Choice ( Seq '{' compound_statement/0.1 '}' ) )
compound_statement .reg_info.index: 762
compound_statement .first: {'{'}
compound_statement .derives_empty: False
compound_statement .follow: {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
assignment_statement  -> ( Choice ( Seq lhs_expression assignment_statement/0.1 expression ) ( Seq '_' '=' expression ) )
assignment_statement .reg_info.index: 773
assignment_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement .derives_empty: False
assignment_statement .follow: {')' ';'}
compound_assignment_operator  -> ( Choice '+=' '-=' '*=' '/=' '%=' '&=' '|=' '^=' _shift_right_assign _shift_left_assign )
compound_assignment_operator .reg_info.index: 283
compound_assignment_operator .first: {'%=' '&=' '*=' '+=' '-=' '/=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
compound_assignment_operator .derives_empty: False
compound_assignment_operator .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
increment_statement  -> ( Choice ( Seq lhs_expression '++' ) )
increment_statement .reg_info.index: 406
increment_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement .derives_empty: False
increment_statement .follow: {')' ';'}
decrement_statement  -> ( Choice ( Seq lhs_expression '--' ) )
decrement_statement .reg_info.index: 407
decrement_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
decrement_statement .derives_empty: False
decrement_statement .follow: {')' ';'}
if_statement  -> ( Choice ( Seq if_clause if_statement/0.1 if_statement/0.2 ) )
if_statement .reg_info.index: 797
if_statement .first: {'if'}
if_statement .derives_empty: False
if_statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_clause  -> ( Choice ( Seq 'if' expression compound_statement ) )
if_clause .reg_info.index: 409
if_clause .first: {'if'}
if_clause .derives_empty: False
if_clause .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause  -> ( Choice ( Seq 'else' 'if' expression compound_statement ) )
else_if_clause .reg_info.index: 410
else_if_clause .first: {'else'}
else_if_clause .derives_empty: False
else_if_clause .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause  -> ( Choice ( Seq 'else' compound_statement ) )
else_clause .reg_info.index: 411
else_clause .first: {'else'}
else_clause .derives_empty: False
else_clause .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement  -> ( Choice ( Seq 'switch' expression '{' switch_statement/0.3 '}' ) )
switch_statement .reg_info.index: 818
switch_statement .first: {'switch'}
switch_statement .derives_empty: False
switch_statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_body  -> ( Choice case_clause default_alone_clause )
switch_body .reg_info.index: 302
switch_body .first: {'case' 'default'}
switch_body .derives_empty: False
switch_body .follow: {'case' 'default' '}'}
case_clause  -> ( Choice ( Seq 'case' case_selectors case_clause/0.2 compound_statement ) )
case_clause .reg_info.index: 828
case_clause .first: {'case'}
case_clause .derives_empty: False
case_clause .follow: {'case' 'default' '}'}
default_alone_clause  -> ( Choice ( Seq 'default' default_alone_clause/0.1 compound_statement ) )
default_alone_clause .reg_info.index: 834
default_alone_clause .first: {'default'}
default_alone_clause .derives_empty: False
default_alone_clause .follow: {'case' 'default' '}'}
case_selectors  -> ( Choice ( Seq case_selector case_selectors/0.1 case_selectors/0.2 ) )
case_selectors .reg_info.index: 841
case_selectors .first: {'!' '&' '(' '*' '-' 'default' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selectors .derives_empty: False
case_selectors .follow: {':' '{'}
case_selector  -> ( Choice 'default' expression )
case_selector .reg_info.index: 312
case_selector .first: {'!' '&' '(' '*' '-' 'default' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selector .derives_empty: False
case_selector .follow: {',' ':' '{'}
loop_statement  -> ( Choice ( Seq 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' ) )
loop_statement .reg_info.index: 852
loop_statement .first: {'loop'}
loop_statement .derives_empty: False
loop_statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement  -> ( Choice ( Seq 'for' '(' for_header ')' compound_statement ) )
for_statement .reg_info.index: 417
for_statement .first: {'for'}
for_statement .derives_empty: False
for_statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header  -> ( Choice ( Seq for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 ) )
for_header .reg_info.index: 869
for_header .first: {'&' '(' '*' ';' '_' 'const' 'let' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header .derives_empty: False
for_header .follow: {')'}
for_init  -> ( Choice variable_statement variable_updating_statement func_call_statement )
for_init .reg_info.index: 327
for_init .first: {'&' '(' '*' '_' 'const' 'let' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_init .derives_empty: False
for_init .follow: {';'}
for_update  -> ( Choice variable_updating_statement func_call_statement )
for_update .reg_info.index: 328
for_update .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_update .derives_empty: False
for_update .follow: {')'}
while_statement  -> ( Choice ( Seq 'while' expression compound_statement ) )
while_statement .reg_info.index: 419
while_statement .first: {'while'}
while_statement .derives_empty: False
while_statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
break_statement  -> 'break'
break_statement .reg_info.index: 66
break_statement .first: {'break'}
break_statement .derives_empty: False
break_statement .follow: {}
break_if_statement  -> ( Choice ( Seq 'break' 'if' expression ';' ) )
break_if_statement .reg_info.index: 420
break_if_statement .first: {'break'}
break_if_statement .derives_empty: False
break_if_statement .follow: {'}'}
continue_statement  -> 'continue'
continue_statement .reg_info.index: 67
continue_statement .first: {'continue'}
continue_statement .derives_empty: False
continue_statement .follow: {}
continuing_statement  -> ( Choice ( Seq 'continuing' continuing_compound_statement ) )
continuing_statement .reg_info.index: 421
continuing_statement .first: {'continuing'}
continuing_statement .derives_empty: False
continuing_statement .follow: {'}'}
continuing_compound_statement  -> ( Choice ( Seq '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' ) )
continuing_compound_statement .reg_info.index: 894
continuing_compound_statement .first: {'{'}
continuing_compound_statement .derives_empty: False
continuing_compound_statement .follow: {'}'}
return_statement  -> ( Choice ( Seq 'return' return_statement/0.1 ) )
return_statement .reg_info.index: 899
return_statement .first: {'return'}
return_statement .derives_empty: False
return_statement .follow: {';'}
func_call_statement  -> call_phrase
func_call_statement .reg_info.index: 190
func_call_statement .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement .derives_empty: False
func_call_statement .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
const_assert_statement  -> ( Choice ( Seq 'const_assert' expression ) )
const_assert_statement .reg_info.index: 424
const_assert_statement .first: {'const_assert'}
const_assert_statement .derives_empty: False
const_assert_statement .follow: {';'}
statement  -> ( Choice ';' ( Seq return_statement ';' ) if_statement switch_statement loop_statement for_statement while_statement ( Seq func_call_statement ';' ) ( Seq variable_statement ';' ) ( Seq break_statement ';' ) ( Seq continue_statement ';' ) ( Seq 'discard' ';' ) ( Seq variable_updating_statement ';' ) compound_statement ( Seq const_assert_statement ';' ) )
statement .reg_info.index: 353
statement .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement .derives_empty: False
statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement  -> ( Choice assignment_statement increment_statement decrement_statement )
variable_updating_statement .reg_info.index: 357
variable_updating_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement .derives_empty: False
variable_updating_statement .follow: {')' ';'}
function_decl  -> ( Choice ( Seq function_decl/0.0 function_header compound_statement ) )
function_decl .reg_info.index: 942
function_decl .first: {'@' 'fn'}
function_decl .derives_empty: False
function_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header  -> ( Choice ( Seq 'fn' ident '(' function_header/0.3 ')' function_header/0.5 ) )
function_header .reg_info.index: 953
function_header .first: {'fn'}
function_header .derives_empty: False
function_header .follow: {'{'}
param_list  -> ( Choice ( Seq param param_list/0.1 param_list/0.2 ) )
param_list .reg_info.index: 960
param_list .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list .derives_empty: False
param_list .follow: {')'}
param  -> ( Choice ( Seq param/0.0 ident ':' type_specifier ) )
param .reg_info.index: 967
param .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param .derives_empty: False
param .follow: {')' ','}
enable_directive  -> ( Choice ( Seq 'enable' enable_extension_name ';' ) )
enable_directive .reg_info.index: 429
enable_directive .first: {'enable'}
enable_directive .derives_empty: False
enable_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive  -> ( Choice ( Seq 'requires' software_extension_list ';' ) )
requires_directive .reg_info.index: 430
requires_directive .first: {'requires'}
requires_directive .derives_empty: False
requires_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
software_extension_list  -> ( Choice ( Seq software_extension_name software_extension_list/0.1 software_extension_list/0.2 ) )
software_extension_list .reg_info.index: 982
software_extension_list .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list .derives_empty: False
software_extension_list .follow: {';'}
enable_extension_name  -> ident_pattern_token
enable_extension_name .reg_info.index: 135
enable_extension_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
enable_extension_name .derives_empty: False
enable_extension_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
software_extension_name  -> ident_pattern_token
software_extension_name .reg_info.index: 135
software_extension_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_name .derives_empty: False
software_extension_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
ident_pattern_token  -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
ident_pattern_token .reg_info.index: 76
ident_pattern_token .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident_pattern_token .derives_empty: False
ident_pattern_token .follow: {}
swizzle_name  -> ( Choice '/[rgba]/' '/[rgba][rgba]/' '/[rgba][rgba][rgba]/' '/[rgba][rgba][rgba][rgba]/' '/[xyzw]/' '/[xyzw][xyzw]/' '/[xyzw][xyzw][xyzw]/' '/[xyzw][xyzw][xyzw][xyzw]/' )
swizzle_name .reg_info.index: 380
swizzle_name .first: {'/[rgba]/' '/[rgba][rgba]/' '/[rgba][rgba][rgba]/' '/[rgba][rgba][rgba][rgba]/' '/[xyzw]/' '/[xyzw][xyzw]/' '/[xyzw][xyzw][xyzw]/' '/[xyzw][xyzw][xyzw][xyzw]/'}
swizzle_name .derives_empty: False
swizzle_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
_comment  -> /\/\/.*/
_comment .reg_info.index: 85
_comment .first: {/\/\/.*/}
_comment .derives_empty: False
_comment .follow: {}
_blankspace  -> /[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_blankspace .reg_info.index: 86
_blankspace .first: {/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/}
_blankspace .derives_empty: False
_blankspace .follow: {}
_disambiguate_template  -> /\u200B_disambiguate_template/
_disambiguate_template .reg_info.index: 87
_disambiguate_template .first: {/\u200B_disambiguate_template/}
_disambiguate_template .derives_empty: False
_disambiguate_template .follow: {}
_less_than_equal  -> /\u200B_less_than_equal/
_less_than_equal .reg_info.index: 88
_less_than_equal .first: {/\u200B_less_than_equal/}
_less_than_equal .derives_empty: False
_less_than_equal .follow: {}
_template_args_end  -> /\u200B_template_args_end/
_template_args_end .reg_info.index: 89
_template_args_end .first: {/\u200B_template_args_end/}
_template_args_end .derives_empty: False
_template_args_end .follow: {}
_template_args_start  -> /\u200B_template_args_start/
_template_args_start .reg_info.index: 90
_template_args_start .first: {/\u200B_template_args_start/}
_template_args_start .derives_empty: False
_template_args_start .follow: {}
_shift_right  -> /\u200B_shift_right/
_shift_right .reg_info.index: 91
_shift_right .first: {/\u200B_shift_right/}
_shift_right .derives_empty: False
_shift_right .follow: {}
_less_than  -> /\u200B_less_than/
_less_than .reg_info.index: 92
_less_than .first: {/\u200B_less_than/}
_less_than .derives_empty: False
_less_than .follow: {}
_shift_left_assign  -> /\u200B_shift_left_assign/
_shift_left_assign .reg_info.index: 93
_shift_left_assign .first: {/\u200B_shift_left_assign/}
_shift_left_assign .derives_empty: False
_shift_left_assign .follow: {}
_shift_left  -> /\u200B_shift_left/
_shift_left .reg_info.index: 94
_shift_left .first: {/\u200B_shift_left/}
_shift_left .derives_empty: False
_shift_left .follow: {}
_shift_right_assign  -> /\u200B_shift_right_assign/
_shift_right_assign .reg_info.index: 95
_shift_right_assign .first: {/\u200B_shift_right_assign/}
_shift_right_assign .derives_empty: False
_shift_right_assign .follow: {}
_error_sentinel  -> /\u200B_error_sentinel/
_error_sentinel .reg_info.index: 96
_error_sentinel .first: {/\u200B_error_sentinel/}
_error_sentinel .derives_empty: False
_error_sentinel .follow: {}
_block_comment  -> /\u200B_block_comment/
_block_comment .reg_info.index: 97
_block_comment .first: {/\u200B_block_comment/}
_block_comment .derives_empty: False
_block_comment .follow: {}
_greater_than  -> /\u200B_greater_than/
_greater_than .reg_info.index: 98
_greater_than .first: {/\u200B_greater_than/}
_greater_than .derives_empty: False
_greater_than .follow: {}
_greater_than_equal  -> /\u200B_greater_than_equal/
_greater_than_equal .reg_info.index: 99
_greater_than_equal .first: {/\u200B_greater_than_equal/}
_greater_than_equal .derives_empty: False
_greater_than_equal .follow: {}
language  -> ( Choice ( Seq translation_unit EndOfText ) )
language .reg_info.index: 432
language .first: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
language .derives_empty: False
language .follow: {}
translation_unit/0.0  -> ( Choice translation_unit/0.0/0 Îµ )
translation_unit/0.0 .reg_info.index: 1048
translation_unit/0.0 .first: {'enable' 'requires' Îµ}
translation_unit/0.0 .derives_empty: True
translation_unit/0.0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1  -> ( Choice translation_unit/0.1/0 Îµ )
translation_unit/0.1 .reg_info.index: 1052
translation_unit/0.1 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' Îµ}
translation_unit/0.1 .derives_empty: True
translation_unit/0.1 .follow: {EndOfText}
template_arg_comma_list/0.1  -> ( Choice template_arg_comma_list/0.1/0 Îµ )
template_arg_comma_list/0.1 .reg_info.index: 1056
template_arg_comma_list/0.1 .first: {',' Îµ}
template_arg_comma_list/0.1 .derives_empty: True
template_arg_comma_list/0.1 .follow: {',' /\u200B_template_args_end/}
template_arg_comma_list/0.2  -> ( Choice ',' Îµ )
template_arg_comma_list/0.2 .reg_info.index: 146
template_arg_comma_list/0.2 .first: {',' Îµ}
template_arg_comma_list/0.2 .derives_empty: True
template_arg_comma_list/0.2 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
attribute/0.2  -> ( Choice argument_expression_list Îµ )
attribute/0.2 .reg_info.index: 150
attribute/0.2 .first: {'(' Îµ}
attribute/0.2 .derives_empty: True
attribute/0.2 .follow: {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_body_decl/0.2  -> ( Choice struct_body_decl/0.2/0 Îµ )
struct_body_decl/0.2 .reg_info.index: 1062
struct_body_decl/0.2 .first: {',' Îµ}
struct_body_decl/0.2 .derives_empty: True
struct_body_decl/0.2 .follow: {',' '}'}
struct_body_decl/0.3  -> ( Choice ',' Îµ )
struct_body_decl/0.3 .reg_info.index: 146
struct_body_decl/0.3 .first: {',' Îµ}
struct_body_decl/0.3 .derives_empty: True
struct_body_decl/0.3 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
struct_member/0.0  -> ( Choice struct_member/0.0/0 Îµ )
struct_member/0.0 .reg_info.index: 1067
struct_member/0.0 .first: {'@' Îµ}
struct_member/0.0 .derives_empty: True
struct_member/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident/0.2  -> ( Choice template_list Îµ )
template_elaborated_ident/0.2 .reg_info.index: 169
template_elaborated_ident/0.2 .first: {/\u200B_template_args_start/ Îµ}
template_elaborated_ident/0.2 .derives_empty: True
template_elaborated_ident/0.2 .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
variable_decl/0.2  -> ( Choice template_list Îµ )
variable_decl/0.2 .reg_info.index: 169
variable_decl/0.2 .first: {/\u200B_template_args_start/ Îµ}
variable_decl/0.2 .derives_empty: True
variable_decl/0.2 .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
optionally_typed_ident/0.1  -> ( Choice ( Seq ':' type_specifier ) Îµ )
optionally_typed_ident/0.1 .reg_info.index: 179
optionally_typed_ident/0.1 .first: {':' Îµ}
optionally_typed_ident/0.1 .derives_empty: True
optionally_typed_ident/0.1 .follow: {';' '='}
global_variable_decl/0.0  -> ( Choice global_variable_decl/0.0/0 Îµ )
global_variable_decl/0.0 .reg_info.index: 1076
global_variable_decl/0.0 .first: {'@' Îµ}
global_variable_decl/0.0 .derives_empty: True
global_variable_decl/0.0 .follow: {'var'}
global_variable_decl/0.2  -> ( Choice ( Seq '=' expression ) Îµ )
global_variable_decl/0.2 .reg_info.index: 182
global_variable_decl/0.2 .first: {'=' Îµ}
global_variable_decl/0.2 .derives_empty: True
global_variable_decl/0.2 .follow: {';'}
global_constant_decl/1.0  -> ( Choice global_constant_decl/1.0/0 Îµ )
global_constant_decl/1.0 .reg_info.index: 1083
global_constant_decl/1.0 .first: {'@' Îµ}
global_constant_decl/1.0 .derives_empty: True
global_constant_decl/1.0 .follow: {'override'}
global_constant_decl/1.3  -> ( Choice ( Seq '=' expression ) Îµ )
global_constant_decl/1.3 .reg_info.index: 182
global_constant_decl/1.3 .first: {'=' Îµ}
global_constant_decl/1.3 .derives_empty: True
global_constant_decl/1.3 .follow: {';'}
argument_expression_list/0.1  -> ( Choice expression_comma_list Îµ )
argument_expression_list/0.1 .reg_info.index: 194
argument_expression_list/0.1 .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ Îµ}
argument_expression_list/0.1 .derives_empty: True
argument_expression_list/0.1 .follow: {')'}
expression_comma_list/0.1  -> ( Choice expression_comma_list/0.1/0 Îµ )
expression_comma_list/0.1 .reg_info.index: 1091
expression_comma_list/0.1 .first: {',' Îµ}
expression_comma_list/0.1 .derives_empty: True
expression_comma_list/0.1 .follow: {')' ','}
expression_comma_list/0.2  -> ( Choice ',' Îµ )
expression_comma_list/0.2 .reg_info.index: 146
expression_comma_list/0.2 .first: {',' Îµ}
expression_comma_list/0.2 .derives_empty: True
expression_comma_list/0.2 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
component_or_swizzle_specifier/0.3  -> ( Choice component_or_swizzle_specifier Îµ )
component_or_swizzle_specifier/0.3 .reg_info.index: 201
component_or_swizzle_specifier/0.3 .first: {'.' '[' Îµ}
component_or_swizzle_specifier/0.3 .derives_empty: True
component_or_swizzle_specifier/0.3 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2  -> ( Choice component_or_swizzle_specifier Îµ )
component_or_swizzle_specifier/1.2 .reg_info.index: 201
component_or_swizzle_specifier/1.2 .first: {'.' '[' Îµ}
component_or_swizzle_specifier/1.2 .derives_empty: True
component_or_swizzle_specifier/1.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2  -> ( Choice component_or_swizzle_specifier Îµ )
component_or_swizzle_specifier/2.2 .reg_info.index: 201
component_or_swizzle_specifier/2.2 .first: {'.' '[' Îµ}
component_or_swizzle_specifier/2.2 .derives_empty: True
component_or_swizzle_specifier/2.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
singular_expression/0.1  -> ( Choice component_or_swizzle_specifier Îµ )
singular_expression/0.1 .reg_info.index: 201
singular_expression/0.1 .first: {'.' '[' Îµ}
singular_expression/0.1 .derives_empty: True
singular_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
lhs_expression/0.1  -> ( Choice component_or_swizzle_specifier Îµ )
lhs_expression/0.1 .reg_info.index: 201
lhs_expression/0.1 .first: {'.' '[' Îµ}
lhs_expression/0.1 .derives_empty: True
lhs_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
compound_statement/0.1  -> ( Choice compound_statement/0.1/0 Îµ )
compound_statement/0.1 .reg_info.index: 1101
compound_statement/0.1 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
compound_statement/0.1 .derives_empty: True
compound_statement/0.1 .follow: {'}'}
assignment_statement/0.1  -> ( Choice '=' compound_assignment_operator )
assignment_statement/0.1 .reg_info.index: 277
assignment_statement/0.1 .first: {'%=' '&=' '*=' '+=' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
assignment_statement/0.1 .derives_empty: False
assignment_statement/0.1 .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
if_statement/0.1  -> ( Choice if_statement/0.1/0 Îµ )
if_statement/0.1 .reg_info.index: 1106
if_statement/0.1 .first: {'else' Îµ}
if_statement/0.1 .derives_empty: True
if_statement/0.1 .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2  -> ( Choice else_clause Îµ )
if_statement/0.2 .reg_info.index: 291
if_statement/0.2 .first: {'else' Îµ}
if_statement/0.2 .derives_empty: True
if_statement/0.2 .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.3  -> ( Choice switch_statement/0.3/0 )
switch_statement/0.3 .reg_info.index: 1024
switch_statement/0.3 .first: {'case' 'default' Îµ}
switch_statement/0.3 .derives_empty: True
switch_statement/0.3 .follow: {'}'}
case_clause/0.2  -> ( Choice ':' Îµ )
case_clause/0.2 .reg_info.index: 304
case_clause/0.2 .first: {':' Îµ}
case_clause/0.2 .derives_empty: True
case_clause/0.2 .follow: {'{'}
default_alone_clause/0.1  -> ( Choice ':' Îµ )
default_alone_clause/0.1 .reg_info.index: 304
default_alone_clause/0.1 .first: {':' Îµ}
default_alone_clause/0.1 .derives_empty: True
default_alone_clause/0.1 .follow: {'{'}
case_selectors/0.1  -> ( Choice case_selectors/0.1/0 Îµ )
case_selectors/0.1 .reg_info.index: 1113
case_selectors/0.1 .first: {',' Îµ}
case_selectors/0.1 .derives_empty: True
case_selectors/0.1 .follow: {',' ':' '{'}
case_selectors/0.2  -> ( Choice ',' Îµ )
case_selectors/0.2 .reg_info.index: 146
case_selectors/0.2 .first: {',' Îµ}
case_selectors/0.2 .derives_empty: True
case_selectors/0.2 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
loop_statement/0.2  -> ( Choice loop_statement/0.2/0 Îµ )
loop_statement/0.2 .reg_info.index: 1118
loop_statement/0.2 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
loop_statement/0.2 .derives_empty: True
loop_statement/0.2 .follow: {'continuing' '}'}
loop_statement/0.3  -> ( Choice continuing_statement Îµ )
loop_statement/0.3 .reg_info.index: 314
loop_statement/0.3 .first: {'continuing' Îµ}
loop_statement/0.3 .derives_empty: True
loop_statement/0.3 .follow: {'}'}
for_header/0.0  -> ( Choice for_init Îµ )
for_header/0.0 .reg_info.index: 319
for_header/0.0 .first: {'&' '(' '*' '_' 'const' 'let' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
for_header/0.0 .derives_empty: True
for_header/0.0 .follow: {';'}
for_header/0.2  -> ( Choice expression Îµ )
for_header/0.2 .reg_info.index: 320
for_header/0.2 .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ Îµ}
for_header/0.2 .derives_empty: True
for_header/0.2 .follow: {';'}
for_header/0.4  -> ( Choice for_update Îµ )
for_header/0.4 .reg_info.index: 322
for_header/0.4 .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
for_header/0.4 .derives_empty: True
for_header/0.4 .follow: {')'}
continuing_compound_statement/0.1  -> ( Choice continuing_compound_statement/0.1/0 Îµ )
continuing_compound_statement/0.1 .reg_info.index: 1126
continuing_compound_statement/0.1 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
continuing_compound_statement/0.1 .derives_empty: True
continuing_compound_statement/0.1 .follow: {'break' '}'}
continuing_compound_statement/0.2  -> ( Choice break_if_statement Îµ )
continuing_compound_statement/0.2 .reg_info.index: 334
continuing_compound_statement/0.2 .first: {'break' Îµ}
continuing_compound_statement/0.2 .derives_empty: True
continuing_compound_statement/0.2 .follow: {'}'}
return_statement/0.1  -> ( Choice expression Îµ )
return_statement/0.1 .reg_info.index: 320
return_statement/0.1 .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ Îµ}
return_statement/0.1 .derives_empty: True
return_statement/0.1 .follow: {';'}
function_decl/0.0  -> ( Choice function_decl/0.0/0 Îµ )
function_decl/0.0 .reg_info.index: 1132
function_decl/0.0 .first: {'@' Îµ}
function_decl/0.0 .derives_empty: True
function_decl/0.0 .follow: {'fn'}
function_header/0.3  -> ( Choice param_list Îµ )
function_header/0.3 .reg_info.index: 361
function_header/0.3 .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
function_header/0.3 .derives_empty: True
function_header/0.3 .follow: {')'}
function_header/0.5  -> ( Choice ( Seq '->' function_header/0.5/0.1 template_elaborated_ident ) Îµ )
function_header/0.5 .reg_info.index: 1139
function_header/0.5 .first: {'->' Îµ}
function_header/0.5 .derives_empty: True
function_header/0.5 .follow: {'{'}
param_list/0.1  -> ( Choice param_list/0.1/0 Îµ )
param_list/0.1 .reg_info.index: 1143
param_list/0.1 .first: {',' Îµ}
param_list/0.1 .derives_empty: True
param_list/0.1 .follow: {')' ','}
param_list/0.2  -> ( Choice ',' Îµ )
param_list/0.2 .reg_info.index: 146
param_list/0.2 .first: {',' Îµ}
param_list/0.2 .derives_empty: True
param_list/0.2 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
param/0.0  -> ( Choice param/0.0/0 Îµ )
param/0.0 .reg_info.index: 1148
param/0.0 .first: {'@' Îµ}
param/0.0 .derives_empty: True
param/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list/0.1  -> ( Choice software_extension_list/0.1/0 Îµ )
software_extension_list/0.1 .reg_info.index: 1152
software_extension_list/0.1 .first: {',' Îµ}
software_extension_list/0.1 .derives_empty: True
software_extension_list/0.1 .follow: {',' ';'}
software_extension_list/0.2  -> ( Choice ',' Îµ )
software_extension_list/0.2 .reg_info.index: 146
software_extension_list/0.2 .first: {',' Îµ}
software_extension_list/0.2 .derives_empty: True
software_extension_list/0.2 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
switch_statement/0.3/0  -> ( Choice ( Seq switch_body switch_statement/0.3/0 ) Îµ )
switch_statement/0.3/0 .reg_info.index: 1023
switch_statement/0.3/0 .first: {'case' 'default' Îµ}
switch_statement/0.3/0 .derives_empty: True
switch_statement/0.3/0 .follow: {'}'}
translation_unit/0.0/0  -> ( Choice ( Seq global_directive translation_unit/0.0/0 ) Îµ )
translation_unit/0.0/0 .reg_info.index: 1046
translation_unit/0.0/0 .first: {'enable' 'requires' Îµ}
translation_unit/0.0/0 .derives_empty: True
translation_unit/0.0/0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0  -> ( Choice ( Seq global_decl translation_unit/0.1/0 ) Îµ )
translation_unit/0.1/0 .reg_info.index: 1050
translation_unit/0.1/0 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' Îµ}
translation_unit/0.1/0 .derives_empty: True
translation_unit/0.1/0 .follow: {EndOfText}
template_arg_comma_list/0.1/0  -> ( Choice ( Seq template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 ) Îµ )
template_arg_comma_list/0.1/0 .reg_info.index: 1172
template_arg_comma_list/0.1/0 .first: {',' Îµ}
template_arg_comma_list/0.1/0 .derives_empty: True
template_arg_comma_list/0.1/0 .follow: {',' /\u200B_template_args_end/}
struct_body_decl/0.2/0  -> ( Choice ( Seq struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 ) Îµ )
struct_body_decl/0.2/0 .reg_info.index: 1179
struct_body_decl/0.2/0 .first: {',' Îµ}
struct_body_decl/0.2/0 .derives_empty: True
struct_body_decl/0.2/0 .follow: {',' '}'}
struct_member/0.0/0  -> ( Choice ( Seq attribute struct_member/0.0/0 ) Îµ )
struct_member/0.0/0 .reg_info.index: 1065
struct_member/0.0/0 .first: {'@' Îµ}
struct_member/0.0/0 .derives_empty: True
struct_member/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
global_variable_decl/0.0/0  -> ( Choice ( Seq attribute global_variable_decl/0.0/0 ) Îµ )
global_variable_decl/0.0/0 .reg_info.index: 1074
global_variable_decl/0.0/0 .first: {'@' Îµ}
global_variable_decl/0.0/0 .derives_empty: True
global_variable_decl/0.0/0 .follow: {'var'}
global_constant_decl/1.0/0  -> ( Choice ( Seq attribute global_constant_decl/1.0/0 ) Îµ )
global_constant_decl/1.0/0 .reg_info.index: 1081
global_constant_decl/1.0/0 .first: {'@' Îµ}
global_constant_decl/1.0/0 .derives_empty: True
global_constant_decl/1.0/0 .follow: {'override'}
expression_comma_list/0.1/0  -> ( Choice ( Seq expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 ) Îµ )
expression_comma_list/0.1/0 .reg_info.index: 1198
expression_comma_list/0.1/0 .first: {',' Îµ}
expression_comma_list/0.1/0 .derives_empty: True
expression_comma_list/0.1/0 .follow: {')' ','}
compound_statement/0.1/0  -> ( Choice ( Seq statement compound_statement/0.1/0 ) Îµ )
compound_statement/0.1/0 .reg_info.index: 1099
compound_statement/0.1/0 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
compound_statement/0.1/0 .derives_empty: True
compound_statement/0.1/0 .follow: {'}'}
if_statement/0.1/0  -> ( Choice ( Seq else_if_clause if_statement/0.1/0 ) Îµ )
if_statement/0.1/0 .reg_info.index: 1104
if_statement/0.1/0 .first: {'else' Îµ}
if_statement/0.1/0 .derives_empty: True
if_statement/0.1/0 .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
case_selectors/0.1/0  -> ( Choice ( Seq case_selectors/0.1/0/0.0 case_selectors/0.1/0 ) Îµ )
case_selectors/0.1/0 .reg_info.index: 1213
case_selectors/0.1/0 .first: {',' Îµ}
case_selectors/0.1/0 .derives_empty: True
case_selectors/0.1/0 .follow: {',' ':' '{'}
loop_statement/0.2/0  -> ( Choice ( Seq statement loop_statement/0.2/0 ) Îµ )
loop_statement/0.2/0 .reg_info.index: 1116
loop_statement/0.2/0 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
loop_statement/0.2/0 .derives_empty: True
loop_statement/0.2/0 .follow: {'continuing' '}'}
continuing_compound_statement/0.1/0  -> ( Choice ( Seq statement continuing_compound_statement/0.1/0 ) Îµ )
continuing_compound_statement/0.1/0 .reg_info.index: 1124
continuing_compound_statement/0.1/0 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
continuing_compound_statement/0.1/0 .derives_empty: True
continuing_compound_statement/0.1/0 .follow: {'break' '}'}
function_decl/0.0/0  -> ( Choice ( Seq attribute function_decl/0.0/0 ) Îµ )
function_decl/0.0/0 .reg_info.index: 1130
function_decl/0.0/0 .first: {'@' Îµ}
function_decl/0.0/0 .derives_empty: True
function_decl/0.0/0 .follow: {'fn'}
function_header/0.5/0.1  -> ( Choice function_header/0.5/0.1/0 Îµ )
function_header/0.5/0.1 .reg_info.index: 1248
function_header/0.5/0.1 .first: {'@' Îµ}
function_header/0.5/0.1 .derives_empty: True
function_header/0.5/0.1 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list/0.1/0  -> ( Choice ( Seq param_list/0.1/0/0.0 param_list/0.1/0 ) Îµ )
param_list/0.1/0 .reg_info.index: 1233
param_list/0.1/0 .first: {',' Îµ}
param_list/0.1/0 .derives_empty: True
param_list/0.1/0 .follow: {')' ','}
param/0.0/0  -> ( Choice ( Seq attribute param/0.0/0 ) Îµ )
param/0.0/0 .reg_info.index: 1146
param/0.0/0 .first: {'@' Îµ}
param/0.0/0 .derives_empty: True
param/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list/0.1/0  -> ( Choice ( Seq software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 ) Îµ )
software_extension_list/0.1/0 .reg_info.index: 1244
software_extension_list/0.1/0 .first: {',' Îµ}
software_extension_list/0.1/0 .derives_empty: True
software_extension_list/0.1/0 .follow: {',' ';'}
template_arg_comma_list/0.1/0/0.0  -> ( Choice ( Seq ',' template_arg_expression ) )
template_arg_comma_list/0.1/0/0.0 .reg_info.index: 1168
template_arg_comma_list/0.1/0/0.0 .first: {','}
template_arg_comma_list/0.1/0/0.0 .derives_empty: False
template_arg_comma_list/0.1/0/0.0 .follow: {',' /\u200B_template_args_end/}
struct_body_decl/0.2/0/0.0  -> ( Choice ( Seq ',' struct_member ) )
struct_body_decl/0.2/0/0.0 .reg_info.index: 1175
struct_body_decl/0.2/0/0.0 .first: {','}
struct_body_decl/0.2/0/0.0 .derives_empty: False
struct_body_decl/0.2/0/0.0 .follow: {',' '}'}
expression_comma_list/0.1/0/0.0  -> ( Choice ( Seq ',' expression ) )
expression_comma_list/0.1/0/0.0 .reg_info.index: 1194
expression_comma_list/0.1/0/0.0 .first: {','}
expression_comma_list/0.1/0/0.0 .derives_empty: False
expression_comma_list/0.1/0/0.0 .follow: {')' ','}
case_selectors/0.1/0/0.0  -> ( Choice ( Seq ',' case_selector ) )
case_selectors/0.1/0/0.0 .reg_info.index: 1209
case_selectors/0.1/0/0.0 .first: {','}
case_selectors/0.1/0/0.0 .derives_empty: False
case_selectors/0.1/0/0.0 .follow: {',' ':' '{'}
param_list/0.1/0/0.0  -> ( Choice ( Seq ',' param ) )
param_list/0.1/0/0.0 .reg_info.index: 1229
param_list/0.1/0/0.0 .first: {','}
param_list/0.1/0/0.0 .derives_empty: False
param_list/0.1/0/0.0 .follow: {')' ','}
software_extension_list/0.1/0/0.0  -> ( Choice ( Seq ',' software_extension_name ) )
software_extension_list/0.1/0/0.0 .reg_info.index: 1240
software_extension_list/0.1/0/0.0 .first: {','}
software_extension_list/0.1/0/0.0 .derives_empty: False
software_extension_list/0.1/0/0.0 .follow: {',' ';'}
function_header/0.5/0.1/0  -> ( Choice ( Seq attribute function_header/0.5/0.1/0 ) Îµ )
function_header/0.5/0.1/0 .reg_info.index: 1246
function_header/0.5/0.1/0 .first: {'@' Îµ}
function_header/0.5/0.1/0 .derives_empty: True
function_header/0.5/0.1/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

=LALR1 item sets:
#0
language -> Â· translation_unit EndOfText : {EndOfText}
enable_directive -> Â· 'enable' enable_extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> Â· enable_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> Â· requires_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive -> Â· 'requires' software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
translation_unit -> Â· translation_unit/0.0 translation_unit/0.1 : {EndOfText}
translation_unit/0.0 -> Â· translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> Â· global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#1
language -> translation_unit Â· EndOfText : {EndOfText}

#2
translation_unit -> translation_unit/0.0 Â· translation_unit/0.1 : {EndOfText}
attribute -> Â· '@' ident_pattern_token attribute/0.2 : {'@' 'fn' 'override' 'var'}
const_assert_statement -> Â· 'const_assert' expression : {';'}
function_decl -> Â· function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> Â· function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> Â· attribute function_decl/0.0/0 : {'fn'}
global_constant_decl -> Â· 'const' optionally_typed_ident '=' expression : {';'}
global_constant_decl -> Â· global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}
global_constant_decl/1.0 -> Â· global_constant_decl/1.0/0 : {'override'}
global_constant_decl/1.0/0 -> Â· attribute global_constant_decl/1.0/0 : {'override'}
global_decl -> Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· global_constant_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_variable_decl -> Â· global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> Â· global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> Â· attribute global_variable_decl/0.0/0 : {'var'}
struct_decl -> Â· 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1 -> Â· translation_unit/0.1/0 : {EndOfText}
translation_unit/0.1/0 -> Â· global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> Â· 'alias' ident '=' type_specifier : {';'}

#3
translation_unit/0.0 -> translation_unit/0.0/0 Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#4
translation_unit/0.0/0 -> global_directive Â· translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
enable_directive -> Â· 'enable' enable_extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> Â· enable_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> Â· requires_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive -> Â· 'requires' software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> Â· global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#5
global_directive -> enable_directive Â· : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#6
global_directive -> requires_directive Â· : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#7
enable_directive -> 'enable' Â· enable_extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
enable_extension_name -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {';'}

#8
requires_directive -> 'requires' Â· software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
software_extension_list -> Â· software_extension_name software_extension_list/0.1 software_extension_list/0.2 : {';'}
software_extension_name -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' ';'}

#9
requires_directive -> 'requires' software_extension_list Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#10
software_extension_list -> software_extension_name Â· software_extension_list/0.1 software_extension_list/0.2 : {';'}
software_extension_list/0.1 -> Â· software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0 -> Â· software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0/0.0 -> Â· ',' software_extension_name : {',' ';'}

#11
software_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â· : {',' ';'}

#12
enable_directive -> 'enable' enable_extension_name Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#13
enable_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â· : {';'}

#14
translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#15
translation_unit -> translation_unit/0.0 translation_unit/0.1 Â· : {EndOfText}

#16
translation_unit/0.1 -> translation_unit/0.1/0 Â· : {EndOfText}

#17
translation_unit/0.1/0 -> global_decl Â· translation_unit/0.1/0 : {EndOfText}
attribute -> Â· '@' ident_pattern_token attribute/0.2 : {'@' 'fn' 'override' 'var'}
const_assert_statement -> Â· 'const_assert' expression : {';'}
function_decl -> Â· function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> Â· function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> Â· attribute function_decl/0.0/0 : {'fn'}
global_constant_decl -> Â· 'const' optionally_typed_ident '=' expression : {';'}
global_constant_decl -> Â· global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}
global_constant_decl/1.0 -> Â· global_constant_decl/1.0/0 : {'override'}
global_constant_decl/1.0/0 -> Â· attribute global_constant_decl/1.0/0 : {'override'}
global_decl -> Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· global_constant_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_variable_decl -> Â· global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> Â· global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> Â· attribute global_variable_decl/0.0/0 : {'var'}
struct_decl -> Â· 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0 -> Â· global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> Â· 'alias' ident '=' type_specifier : {';'}

#18
global_decl -> ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#19
global_decl -> global_variable_decl Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#20
global_decl -> global_constant_decl Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#21
global_decl -> type_alias_decl Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#22
global_decl -> struct_decl Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#23
global_decl -> function_decl Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#24
global_decl -> const_assert_statement Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#25
global_variable_decl -> global_variable_decl/0.0 Â· variable_decl global_variable_decl/0.2 : {';'}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}

#26
global_constant_decl -> 'const' Â· optionally_typed_ident '=' expression : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {':' '='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> Â· ident optionally_typed_ident/0.1 : {'='}

#27
global_constant_decl -> global_constant_decl/1.0 Â· 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}

#28
type_alias_decl -> 'alias' Â· ident '=' type_specifier : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {'='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#29
struct_decl -> 'struct' Â· ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
ident -> Â· ident_pattern_token _disambiguate_template : {'{'}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#30
function_decl -> function_decl/0.0 Â· function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header -> Â· 'fn' ident '(' function_header/0.3 ')' function_header/0.5 : {'{'}

#31
const_assert_statement -> 'const_assert' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#32
global_variable_decl/0.0 -> global_variable_decl/0.0/0 Â· : {'var'}

#33
global_constant_decl/1.0 -> global_constant_decl/1.0/0 Â· : {'override'}

#34
function_decl/0.0 -> function_decl/0.0/0 Â· : {'fn'}

#35
function_decl/0.0/0 -> attribute Â· function_decl/0.0/0 : {'fn'}
global_constant_decl/1.0/0 -> attribute Â· global_constant_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> attribute Â· global_variable_decl/0.0/0 : {'var'}
attribute -> Â· '@' ident_pattern_token attribute/0.2 : {'@' 'fn' 'override' 'var'}
function_decl/0.0/0 -> Â· attribute function_decl/0.0/0 : {'fn'}
global_constant_decl/1.0/0 -> Â· attribute global_constant_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> Â· attribute global_variable_decl/0.0/0 : {'var'}

#36
attribute -> '@' Â· ident_pattern_token attribute/0.2 : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'(' '@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#37
attribute -> '@' ident_pattern_token Â· attribute/0.2 : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
argument_expression_list -> Â· '(' argument_expression_list/0.1 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute/0.2 -> Â· argument_expression_list : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#38
ident_pattern_token -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â· : {'(' '@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_disambiguate_template/}

#39
global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 Â· : {'var'}

#40
global_constant_decl/1.0/0 -> attribute global_constant_decl/1.0/0 Â· : {'override'}

#41
function_decl/0.0/0 -> attribute function_decl/0.0/0 Â· : {'fn'}

#42
const_assert_statement -> 'const_assert' expression Â· : {';'}

#43
expression -> relational_expression Â· : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> relational_expression Â· : {'&&'}
short_circuit_or_expression -> relational_expression Â· : {'||'}

#44
expression -> short_circuit_or_expression Â· '||' relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression Â· '||' relational_expression : {'||'}

#45
expression -> short_circuit_and_expression Â· '&&' relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression Â· '&&' relational_expression : {'&&'}

#46
expression -> bitwise_expression Â· : {')' ',' ':' ';' ']' '{'}

#47
relational_expression -> shift_expression Â· '!=' shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· '==' shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· _greater_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· _less_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
_greater_than -> Â· /\u200B_greater_than/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_greater_than_equal -> Â· /\u200B_greater_than_equal/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than -> Â· /\u200B_less_than/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than_equal -> Â· /\u200B_less_than_equal/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#48
binary_and_expression -> binary_and_expression Â· '&' unary_expression : {'&'}
bitwise_expression -> binary_and_expression Â· '&' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#49
binary_or_expression -> binary_or_expression Â· '|' unary_expression : {'|'}
bitwise_expression -> binary_or_expression Â· '|' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#50
binary_xor_expression -> binary_xor_expression Â· '^' unary_expression : {'^'}
bitwise_expression -> binary_xor_expression Â· '^' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#51
additive_expression -> additive_expression Â· additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> additive_expression Â· : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_operator -> Â· '+' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_operator -> Â· '-' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#52
binary_and_expression -> unary_expression Â· : {'&'}
binary_or_expression -> unary_expression Â· : {'|'}
binary_xor_expression -> unary_expression Â· : {'^'}
multiplicative_expression -> unary_expression Â· : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression Â· _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression Â· _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
_shift_left -> Â· /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> Â· /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#53
additive_expression -> multiplicative_expression Â· : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression Â· multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> Â· '%' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> Â· '*' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> Â· '/' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#54
unary_expression -> singular_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#55
unary_expression -> '-' Â· unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#56
unary_expression -> '!' Â· unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#57
unary_expression -> '~' Â· unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#58
unary_expression -> '*' Â· unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#59
unary_expression -> '&' Â· unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#60
singular_expression -> primary_expression Â· singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression/0.1 -> Â· component_or_swizzle_specifier : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#61
call_expression -> template_elaborated_ident Â· argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> template_elaborated_ident Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list -> Â· '(' argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#62
primary_expression -> call_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#63
primary_expression -> literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#64
primary_expression -> paren_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#65
template_elaborated_ident -> ident Â· _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/ /\u200B_template_args_start/}

#66
literal -> int_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#67
literal -> float_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#68
literal -> bool_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#69
paren_expression -> '(' Â· expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')'}
expression -> Â· relational_expression : {')'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#70
ident -> ident_pattern_token Â· _disambiguate_template : {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}

#71
int_literal -> decimal_int_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#72
int_literal -> hex_int_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#73
float_literal -> decimal_float_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#74
float_literal -> hex_float_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#75
bool_literal -> 'true' Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#76
bool_literal -> 'false' Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#77
decimal_int_literal -> /0[iu]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#78
decimal_int_literal -> /[1-9][0-9]*[iu]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#79
hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#80
decimal_float_literal -> /0[fh]/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#81
decimal_float_literal -> /[1-9][0-9]*[fh]/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#82
decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#83
decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#84
decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#85
hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#86
hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#87
hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#88
function_decl -> function_decl/0.0 function_header Â· compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#89
function_header -> 'fn' Â· ident '(' function_header/0.3 ')' function_header/0.5 : {'{'}
ident -> Â· ident_pattern_token _disambiguate_template : {'('}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#90
struct_decl -> 'struct' ident Â· struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl -> Â· '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#91
type_alias_decl -> 'alias' ident Â· '=' type_specifier : {';'}

#92
global_constant_decl -> global_constant_decl/1.0 'override' Â· optionally_typed_ident global_constant_decl/1.3 : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {':' ';' '='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> Â· ident optionally_typed_ident/0.1 : {';' '='}

#93
global_constant_decl -> 'const' optionally_typed_ident Â· '=' expression : {';'}

#94
optionally_typed_ident -> ident Â· optionally_typed_ident/0.1 : {';' '='}
optionally_typed_ident/0.1 -> Â· ':' type_specifier : {';' '='}

#95
global_variable_decl -> global_variable_decl/0.0 variable_decl Â· global_variable_decl/0.2 : {';'}
global_variable_decl/0.2 -> Â· '=' expression : {';'}

#96
variable_decl -> 'var' Â· _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_template_args_start/}

#97
global_decl -> const_assert_statement ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#98
global_decl -> type_alias_decl ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#99
global_decl -> global_constant_decl ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#100
global_decl -> global_variable_decl ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#101
translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 Â· : {EndOfText}

#102
enable_directive -> 'enable' enable_extension_name ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#103
software_extension_list -> software_extension_name software_extension_list/0.1 Â· software_extension_list/0.2 : {';'}
software_extension_list/0.2 -> Â· ',' : {';'}

#104
software_extension_list/0.1 -> software_extension_list/0.1/0 Â· : {',' ';'}

#105
software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 Â· software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0 -> Â· software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0/0.0 -> Â· ',' software_extension_name : {',' ';'}

#106
software_extension_list/0.1/0/0.0 -> ',' Â· software_extension_name : {',' ';'}
software_extension_name -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' ';'}

#107
requires_directive -> 'requires' software_extension_list ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#108
software_extension_list/0.1/0/0.0 -> ',' software_extension_name Â· : {',' ';'}

#109
software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 Â· : {',' ';'}

#110
software_extension_list -> software_extension_name software_extension_list/0.1 software_extension_list/0.2 Â· : {';'}

#111
software_extension_list/0.2 -> ',' Â· : {';'}

#112
variable_decl -> 'var' _disambiguate_template Â· variable_decl/0.2 optionally_typed_ident : {';' '='}
_template_args_start -> Â· /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_list -> Â· _template_args_start template_arg_comma_list _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_decl/0.2 -> Â· template_list : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#113
_disambiguate_template -> /\u200B_disambiguate_template/ Â· : {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_disambiguate_template/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/ /\u200B_template_args_start/}

#114
global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 Â· : {';'}

#115
global_variable_decl/0.2 -> '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#116
optionally_typed_ident -> ident optionally_typed_ident/0.1 Â· : {';' '='}

#117
optionally_typed_ident/0.1 -> ':' Â· type_specifier : {';' '='}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {';' '='}

#118
global_constant_decl -> 'const' optionally_typed_ident '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#119
global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident Â· global_constant_decl/1.3 : {';'}
global_constant_decl/1.3 -> Â· '=' expression : {';'}

#120
type_alias_decl -> 'alias' ident '=' Â· type_specifier : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {';'}

#121
struct_decl -> 'struct' ident struct_body_decl Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#122
struct_body_decl -> '{' Â· struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
attribute -> Â· '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> Â· struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> Â· struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> Â· attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#123
function_header -> 'fn' ident Â· '(' function_header/0.3 ')' function_header/0.5 : {'{'}

#124
function_decl -> function_decl/0.0 function_header compound_statement Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#125
compound_statement -> '{' Â· compound_statement/0.1 '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.1 -> Â· compound_statement/0.1/0 : {'}'}
compound_statement/0.1/0 -> Â· statement compound_statement/0.1/0 : {'}'}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#126
ident -> ident_pattern_token _disambiguate_template Â· : {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}

#127
paren_expression -> '(' expression Â· ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#128
template_elaborated_ident -> ident _disambiguate_template Â· template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_start -> Â· /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_elaborated_ident/0.2 -> Â· template_list : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_list -> Â· _template_args_start template_arg_comma_list _template_args_end : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#129
call_expression -> template_elaborated_ident argument_expression_list Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#130
argument_expression_list -> '(' Â· argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' 'fn' 'override' 'var' '{' '|' '||' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
argument_expression_list/0.1 -> Â· expression_comma_list : {')'}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
expression_comma_list -> Â· expression expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#131
singular_expression -> primary_expression singular_expression/0.1 Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#132
singular_expression/0.1 -> component_or_swizzle_specifier Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#133
component_or_swizzle_specifier -> '[' Â· expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {']'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {']'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {']'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {']'}
expression -> Â· relational_expression : {']'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {']'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {']'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ']' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#134
component_or_swizzle_specifier -> '.' Â· member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> '.' Â· swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
member_ident -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[rgba][rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[xyzw][xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#135
unary_expression -> '&' unary_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#136
unary_expression -> '*' unary_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#137
unary_expression -> '~' unary_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#138
unary_expression -> '!' unary_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#139
unary_expression -> '-' unary_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#140
multiplicative_expression -> multiplicative_expression multiplicative_operator Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#141
multiplicative_operator -> '*' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#142
multiplicative_operator -> '/' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#143
multiplicative_operator -> '%' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#144
shift_expression -> unary_expression _shift_left Â· unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#145
shift_expression -> unary_expression _shift_right Â· unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#146
_shift_left -> /\u200B_shift_left/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#147
_shift_right -> /\u200B_shift_right/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#148
additive_expression -> additive_expression additive_operator Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#149
additive_operator -> '+' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#150
additive_operator -> '-' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#151
binary_xor_expression -> binary_xor_expression '^' Â· unary_expression : {'^'}
bitwise_expression -> binary_xor_expression '^' Â· unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> Â· bool_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> Â· float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> Â· int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> Â· literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'(' ')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}

#152
binary_or_expression -> binary_or_expression '|' Â· unary_expression : {'|'}
bitwise_expression -> binary_or_expression '|' Â· unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> Â· bool_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> Â· float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> Â· int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> Â· literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'(' ')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}

#153
binary_and_expression -> binary_and_expression '&' Â· unary_expression : {'&'}
bitwise_expression -> binary_and_expression '&' Â· unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> Â· bool_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> Â· float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> Â· int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> Â· literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'&' '(' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#154
relational_expression -> shift_expression _less_than Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#155
relational_expression -> shift_expression _greater_than Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#156
relational_expression -> shift_expression _less_than_equal Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#157
relational_expression -> shift_expression _greater_than_equal Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#158
relational_expression -> shift_expression '==' Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#159
relational_expression -> shift_expression '!=' Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#160
_less_than -> /\u200B_less_than/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#161
_greater_than -> /\u200B_greater_than/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#162
_less_than_equal -> /\u200B_less_than_equal/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#163
_greater_than_equal -> /\u200B_greater_than_equal/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#164
expression -> short_circuit_and_expression '&&' Â· relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' Â· relational_expression : {'&&'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#165
expression -> short_circuit_or_expression '||' Â· relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' Â· relational_expression : {'||'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> Â· 'false' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· decimal_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#166
attribute -> '@' ident_pattern_token attribute/0.2 Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#167
attribute/0.2 -> argument_expression_list Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#168
expression -> short_circuit_or_expression '||' relational_expression Â· : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression Â· : {'||'}

#169
multiplicative_expression -> unary_expression Â· : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression Â· _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression Â· _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
_shift_left -> Â· /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> Â· /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#170
expression -> short_circuit_and_expression '&&' relational_expression Â· : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression Â· : {'&&'}

#171
relational_expression -> shift_expression '!=' shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#172
relational_expression -> shift_expression '==' shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#173
relational_expression -> shift_expression _greater_than_equal shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#174
relational_expression -> shift_expression _less_than_equal shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#175
relational_expression -> shift_expression _greater_than shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#176
relational_expression -> shift_expression _less_than shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#177
binary_and_expression -> binary_and_expression '&' unary_expression Â· : {'&'}
bitwise_expression -> binary_and_expression '&' unary_expression Â· : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#178
binary_or_expression -> binary_or_expression '|' unary_expression Â· : {'|'}
bitwise_expression -> binary_or_expression '|' unary_expression Â· : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#179
binary_xor_expression -> binary_xor_expression '^' unary_expression Â· : {'^'}
bitwise_expression -> binary_xor_expression '^' unary_expression Â· : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#180
additive_expression -> additive_expression additive_operator multiplicative_expression Â· : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression Â· multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> Â· '%' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> Â· '*' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> Â· '/' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#181
multiplicative_expression -> unary_expression Â· : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#182
shift_expression -> unary_expression _shift_right unary_expression Â· : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#183
shift_expression -> unary_expression _shift_left unary_expression Â· : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#184
multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression Â· : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#185
component_or_swizzle_specifier -> '.' member_ident Â· component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2 -> Â· component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#186
component_or_swizzle_specifier -> '.' swizzle_name Â· component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2 -> Â· component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#187
member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#188
swizzle_name -> '/[rgba]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#189
swizzle_name -> '/[rgba][rgba]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#190
swizzle_name -> '/[rgba][rgba][rgba]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#191
swizzle_name -> '/[rgba][rgba][rgba][rgba]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#192
swizzle_name -> '/[xyzw]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#193
swizzle_name -> '/[xyzw][xyzw]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#194
swizzle_name -> '/[xyzw][xyzw][xyzw]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#195
swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#196
component_or_swizzle_specifier -> '[' expression Â· ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#197
argument_expression_list -> '(' argument_expression_list/0.1 Â· ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' 'fn' 'override' 'var' '{' '|' '||' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#198
argument_expression_list/0.1 -> expression_comma_list Â· : {')'}

#199
expression_comma_list -> expression Â· expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
expression_comma_list/0.1 -> Â· expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> Â· expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> Â· ',' expression : {')' ','}

#200
template_elaborated_ident -> ident _disambiguate_template template_elaborated_ident/0.2 Â· : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#201
template_elaborated_ident/0.2 -> template_list Â· : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#202
template_list -> _template_args_start Â· template_arg_comma_list _template_args_end : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {',' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_arg_comma_list -> Â· template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 : {/\u200B_template_args_end/}
template_arg_expression -> Â· bitwise_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· short_circuit_and_expression '&&' relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· short_circuit_or_expression '||' relational_expression : {',' /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#203
_template_args_start -> /\u200B_template_args_start/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#204
paren_expression -> '(' expression ')' Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#205
compound_statement -> '{' compound_statement/0.1 Â· '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#206
compound_statement/0.1 -> compound_statement/0.1/0 Â· : {'}'}

#207
compound_statement/0.1/0 -> statement Â· compound_statement/0.1/0 : {'}'}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.1/0 -> Â· statement compound_statement/0.1/0 : {'}'}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#208
statement -> ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#209
statement -> return_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#210
statement -> if_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#211
statement -> switch_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#212
statement -> loop_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#213
statement -> for_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#214
statement -> while_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#215
statement -> func_call_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#216
statement -> variable_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#217
statement -> break_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#218
statement -> continue_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#219
statement -> 'discard' Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#220
statement -> variable_updating_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#221
statement -> compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#222
statement -> const_assert_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#223
return_statement -> 'return' Â· return_statement/0.1 : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
return_statement/0.1 -> Â· expression : {';'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#224
if_statement -> if_clause Â· if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> Â· 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1 -> Â· if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1/0 -> Â· else_if_clause if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#225
switch_statement -> 'switch' Â· expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {'{'}
expression -> Â· relational_expression : {'{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#226
loop_statement -> 'loop' Â· '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#227
for_statement -> 'for' Â· '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#228
while_statement -> 'while' Â· expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {'{'}
expression -> Â· relational_expression : {'{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#229
func_call_statement -> template_elaborated_ident Â· argument_expression_list : {')' ';'}
argument_expression_list -> Â· '(' argument_expression_list/0.1 ')' : {')' ';'}

#230
variable_statement -> variable_decl Â· '=' expression : {';'}
variable_statement -> variable_decl Â· : {';'}

#231
variable_statement -> 'let' Â· optionally_typed_ident '=' expression : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {':' '='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> Â· ident optionally_typed_ident/0.1 : {'='}

#232
variable_statement -> 'const' Â· optionally_typed_ident '=' expression : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {':' '='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> Â· ident optionally_typed_ident/0.1 : {'='}

#233
break_statement -> 'break' Â· : {';'}

#234
continue_statement -> 'continue' Â· : {';'}

#235
variable_updating_statement -> assignment_statement Â· : {')' ';'}

#236
variable_updating_statement -> increment_statement Â· : {')' ';'}

#237
variable_updating_statement -> decrement_statement Â· : {')' ';'}

#238
if_clause -> 'if' Â· expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {'{'}
expression -> Â· relational_expression : {'{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#239
core_lhs_expression -> ident Â· _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> ident Â· _disambiguate_template template_elaborated_ident/0.2 : {'('}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/ /\u200B_template_args_start/}

#240
assignment_statement -> lhs_expression Â· assignment_statement/0.1 expression : {')' ';'}
decrement_statement -> lhs_expression Â· '--' : {')' ';'}
increment_statement -> lhs_expression Â· '++' : {')' ';'}
_shift_left_assign -> Â· /\u200B_shift_left_assign/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right_assign -> Â· /\u200B_shift_right_assign/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> Â· '=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> Â· compound_assignment_operator : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '%=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '&=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '*=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '+=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '-=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '/=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '^=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '|=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· _shift_left_assign : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· _shift_right_assign : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#241
assignment_statement -> '_' Â· '=' expression : {')' ';'}

#242
lhs_expression -> core_lhs_expression Â· lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> Â· '.' member_ident component_or_swizzle_specifier/1.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> Â· '.' swizzle_name component_or_swizzle_specifier/2.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> Â· '[' expression ']' component_or_swizzle_specifier/0.3 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression/0.1 -> Â· component_or_swizzle_specifier : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#243
lhs_expression -> '*' Â· lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#244
lhs_expression -> '&' Â· lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#245
core_lhs_expression -> '(' Â· lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· '(' lhs_expression ')' : {')' '.' '['}
core_lhs_expression -> Â· ident _disambiguate_template : {')' '.' '['}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
lhs_expression -> Â· '&' lhs_expression : {')'}
lhs_expression -> Â· '*' lhs_expression : {')'}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {')'}

#246
function_header -> 'fn' ident '(' Â· function_header/0.3 ')' function_header/0.5 : {'{'}
attribute -> Â· '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.3 -> Â· param_list : {')'}
param -> Â· param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> Â· param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> Â· attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list -> Â· param param_list/0.1 param_list/0.2 : {')'}

#247
struct_body_decl -> '{' struct_member Â· struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.2 -> Â· struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> Â· struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> Â· ',' struct_member : {',' '}'}

#248
struct_member -> struct_member/0.0 Â· member_ident ':' type_specifier : {',' '}'}
member_ident -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':'}

#249
struct_member/0.0 -> struct_member/0.0/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#250
struct_member/0.0/0 -> attribute Â· struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> Â· attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#251
type_alias_decl -> 'alias' ident '=' type_specifier Â· : {';'}

#252
type_specifier -> ident Â· _disambiguate_template template_elaborated_ident/0.2 : {')' ',' ';' '=' '}'}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {')' ',' ';' '=' '}' /\u200B_template_args_start/}

#253
global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 Â· : {';'}

#254
global_constant_decl/1.3 -> '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#255
global_constant_decl -> 'const' optionally_typed_ident '=' expression Â· : {';'}

#256
optionally_typed_ident/0.1 -> ':' type_specifier Â· : {';' '='}

#257
global_variable_decl/0.2 -> '=' expression Â· : {';'}

#258
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 Â· optionally_typed_ident : {';' '='}
ident -> Â· ident_pattern_token _disambiguate_template : {':' ';' '='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> Â· ident optionally_typed_ident/0.1 : {';' '='}

#259
variable_decl/0.2 -> template_list Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#260
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident Â· : {';' '='}

#261
global_constant_decl/1.3 -> '=' expression Â· : {';'}

#262
type_specifier -> ident _disambiguate_template Â· template_elaborated_ident/0.2 : {')' ',' ';' '=' '}'}
_template_args_start -> Â· /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_elaborated_ident/0.2 -> Â· template_list : {')' ',' ';' '=' '}'}
template_list -> Â· _template_args_start template_arg_comma_list _template_args_end : {')' ',' ';' '=' '}'}

#263
struct_member/0.0/0 -> attribute struct_member/0.0/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#264
struct_member -> struct_member/0.0 member_ident Â· ':' type_specifier : {',' '}'}

#265
struct_body_decl -> '{' struct_member struct_body_decl/0.2 Â· struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.3 -> Â· ',' : {'}'}

#266
struct_body_decl/0.2 -> struct_body_decl/0.2/0 Â· : {',' '}'}

#267
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 Â· struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> Â· struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> Â· ',' struct_member : {',' '}'}

#268
struct_body_decl/0.2/0/0.0 -> ',' Â· struct_member : {',' '}'}
attribute -> Â· '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> Â· struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> Â· struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> Â· attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#269
function_header -> 'fn' ident '(' function_header/0.3 Â· ')' function_header/0.5 : {'{'}

#270
function_header/0.3 -> param_list Â· : {')'}

#271
param_list -> param Â· param_list/0.1 param_list/0.2 : {')'}
param_list/0.1 -> Â· param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> Â· param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> Â· ',' param : {')' ','}

#272
param -> param/0.0 Â· ident ':' type_specifier : {')' ','}
ident -> Â· ident_pattern_token _disambiguate_template : {':'}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#273
param/0.0 -> param/0.0/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#274
param/0.0/0 -> attribute Â· param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> Â· attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#275
core_lhs_expression -> '(' lhs_expression Â· ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#276
core_lhs_expression -> ident Â· _disambiguate_template : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#277
lhs_expression -> '&' lhs_expression Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#278
lhs_expression -> '*' lhs_expression Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#279
lhs_expression -> core_lhs_expression lhs_expression/0.1 Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#280
lhs_expression/0.1 -> component_or_swizzle_specifier Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#281
assignment_statement -> '_' '=' Â· expression : {')' ';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ';'}
expression -> Â· relational_expression : {')' ';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#282
assignment_statement -> lhs_expression assignment_statement/0.1 Â· expression : {')' ';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ';'}
expression -> Â· relational_expression : {')' ';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#283
increment_statement -> lhs_expression '++' Â· : {')' ';'}

#284
decrement_statement -> lhs_expression '--' Â· : {')' ';'}

#285
assignment_statement/0.1 -> '=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#286
assignment_statement/0.1 -> compound_assignment_operator Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#287
compound_assignment_operator -> '+=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#288
compound_assignment_operator -> '-=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#289
compound_assignment_operator -> '*=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#290
compound_assignment_operator -> '/=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#291
compound_assignment_operator -> '%=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#292
compound_assignment_operator -> '&=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#293
compound_assignment_operator -> '|=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#294
compound_assignment_operator -> '^=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#295
compound_assignment_operator -> _shift_right_assign Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#296
compound_assignment_operator -> _shift_left_assign Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#297
_shift_right_assign -> /\u200B_shift_right_assign/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#298
_shift_left_assign -> /\u200B_shift_left_assign/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#299
core_lhs_expression -> ident _disambiguate_template Â· : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> ident _disambiguate_template Â· template_elaborated_ident/0.2 : {'('}
_template_args_start -> Â· /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_elaborated_ident/0.2 -> Â· template_list : {'('}
template_list -> Â· _template_args_start template_arg_comma_list _template_args_end : {'('}

#300
if_clause -> 'if' expression Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#301
variable_statement -> 'const' optionally_typed_ident Â· '=' expression : {';'}

#302
variable_statement -> 'let' optionally_typed_ident Â· '=' expression : {';'}

#303
variable_statement -> variable_decl '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#304
func_call_statement -> template_elaborated_ident argument_expression_list Â· : {')' ';'}

#305
while_statement -> 'while' expression Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#306
for_statement -> 'for' '(' Â· for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_header -> Â· for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 : {')'}
for_header/0.0 -> Â· for_init : {';'}
for_init -> Â· func_call_statement : {';'}
for_init -> Â· variable_statement : {';'}
for_init -> Â· variable_updating_statement : {';'}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}

#307
loop_statement -> 'loop' '{' Â· loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.2 -> Â· loop_statement/0.2/0 : {'continuing' '}'}
loop_statement/0.2/0 -> Â· statement loop_statement/0.2/0 : {'continuing' '}'}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#308
switch_statement -> 'switch' expression Â· '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#309
if_statement -> if_clause if_statement/0.1 Â· if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause -> Â· 'else' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2 -> Â· else_clause : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#310
if_statement/0.1 -> if_statement/0.1/0 Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#311
if_statement/0.1/0 -> else_if_clause Â· if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> Â· 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1/0 -> Â· else_if_clause if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#312
else_if_clause -> 'else' Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#313
return_statement -> 'return' return_statement/0.1 Â· : {';'}

#314
return_statement/0.1 -> expression Â· : {';'}

#315
statement -> const_assert_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#316
statement -> variable_updating_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#317
statement -> 'discard' ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#318
statement -> continue_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#319
statement -> break_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#320
statement -> variable_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#321
statement -> func_call_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#322
statement -> return_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#323
compound_statement/0.1/0 -> statement compound_statement/0.1/0 Â· : {'}'}

#324
compound_statement -> '{' compound_statement/0.1 '}' Â· : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#325
template_list -> _template_args_start template_arg_comma_list Â· _template_args_end : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_end -> Â· /\u200B_template_args_end/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#326
template_arg_comma_list -> template_arg_expression Â· template_arg_comma_list/0.1 template_arg_comma_list/0.2 : {/\u200B_template_args_end/}
template_arg_comma_list/0.1 -> Â· template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0 -> Â· template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0/0.0 -> Â· ',' template_arg_expression : {',' /\u200B_template_args_end/}

#327
short_circuit_and_expression -> relational_expression Â· : {'&&'}
short_circuit_or_expression -> relational_expression Â· : {'||'}
template_arg_expression -> relational_expression Â· : {',' /\u200B_template_args_end/}

#328
short_circuit_or_expression -> short_circuit_or_expression Â· '||' relational_expression : {'||'}
template_arg_expression -> short_circuit_or_expression Â· '||' relational_expression : {',' /\u200B_template_args_end/}

#329
short_circuit_and_expression -> short_circuit_and_expression Â· '&&' relational_expression : {'&&'}
template_arg_expression -> short_circuit_and_expression Â· '&&' relational_expression : {',' /\u200B_template_args_end/}

#330
template_arg_expression -> bitwise_expression Â· : {',' /\u200B_template_args_end/}

#331
expression_comma_list -> expression expression_comma_list/0.1 Â· expression_comma_list/0.2 : {')'}
expression_comma_list/0.2 -> Â· ',' : {')'}

#332
expression_comma_list/0.1 -> expression_comma_list/0.1/0 Â· : {')' ','}

#333
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 Â· expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> Â· expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> Â· ',' expression : {')' ','}

#334
expression_comma_list/0.1/0/0.0 -> ',' Â· expression : {')' ','}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#335
argument_expression_list -> '(' argument_expression_list/0.1 ')' Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' 'fn' 'override' 'var' '{' '|' '||' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#336
component_or_swizzle_specifier -> '[' expression ']' Â· component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/0.3 -> Â· component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#337
component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#338
component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#339
component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#340
component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#341
component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#342
component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#343
expression_comma_list/0.1/0/0.0 -> ',' expression Â· : {')' ','}

#344
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 Â· : {')' ','}

#345
expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 Â· : {')'}

#346
expression_comma_list/0.2 -> ',' Â· : {')'}

#347
short_circuit_and_expression -> short_circuit_and_expression '&&' Â· relational_expression : {'&&'}
template_arg_expression -> short_circuit_and_expression '&&' Â· relational_expression : {',' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ',' /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'!=' '&&' ',' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ',' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ',' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#348
short_circuit_or_expression -> short_circuit_or_expression '||' Â· relational_expression : {'||'}
template_arg_expression -> short_circuit_or_expression '||' Â· relational_expression : {',' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'!=' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '!=' shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '==' shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {',' '||' /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'!=' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '(' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#349
template_arg_comma_list -> template_arg_expression template_arg_comma_list/0.1 Â· template_arg_comma_list/0.2 : {/\u200B_template_args_end/}
template_arg_comma_list/0.2 -> Â· ',' : {/\u200B_template_args_end/}

#350
template_arg_comma_list/0.1 -> template_arg_comma_list/0.1/0 Â· : {',' /\u200B_template_args_end/}

#351
template_arg_comma_list/0.1/0 -> template_arg_comma_list/0.1/0/0.0 Â· template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0 -> Â· template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0/0.0 -> Â· ',' template_arg_expression : {',' /\u200B_template_args_end/}

#352
template_arg_comma_list/0.1/0/0.0 -> ',' Â· template_arg_expression : {',' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {',' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_arg_expression -> Â· bitwise_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· short_circuit_and_expression '&&' relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· short_circuit_or_expression '||' relational_expression : {',' /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#353
template_list -> _template_args_start template_arg_comma_list _template_args_end Â· : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#354
_template_args_end -> /\u200B_template_args_end/ Â· : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#355
else_if_clause -> 'else' 'if' Â· expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {'{'}
expression -> Â· relational_expression : {'{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#356
if_statement/0.1/0 -> else_if_clause if_statement/0.1/0 Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#357
if_statement -> if_clause if_statement/0.1 if_statement/0.2 Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#358
if_statement/0.2 -> else_clause Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#359
else_clause -> 'else' Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#360
switch_statement -> 'switch' expression '{' Â· switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
case_clause -> Â· 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> Â· 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body -> Â· case_clause : {'case' 'default' '}'}
switch_body -> Â· default_alone_clause : {'case' 'default' '}'}
switch_statement/0.3 -> Â· switch_statement/0.3/0 : {'}'}
switch_statement/0.3/0 -> Â· switch_body switch_statement/0.3/0 : {'}'}

#361
loop_statement -> 'loop' '{' loop_statement/0.2 Â· loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
continuing_statement -> Â· 'continuing' continuing_compound_statement : {'}'}
loop_statement/0.3 -> Â· continuing_statement : {'}'}

#362
loop_statement/0.2 -> loop_statement/0.2/0 Â· : {'continuing' '}'}

#363
loop_statement/0.2/0 -> statement Â· loop_statement/0.2/0 : {'continuing' '}'}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.2/0 -> Â· statement loop_statement/0.2/0 : {'continuing' '}'}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#364
for_statement -> 'for' '(' for_header Â· ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#365
for_header -> for_header/0.0 Â· ';' for_header/0.2 ';' for_header/0.4 : {')'}

#366
for_header/0.0 -> for_init Â· : {';'}

#367
for_init -> variable_statement Â· : {';'}

#368
for_init -> variable_updating_statement Â· : {';'}

#369
for_init -> func_call_statement Â· : {';'}

#370
while_statement -> 'while' expression compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#371
variable_statement -> variable_decl '=' expression Â· : {';'}

#372
variable_statement -> 'let' optionally_typed_ident '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#373
variable_statement -> 'const' optionally_typed_ident '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#374
if_clause -> 'if' expression compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#375
assignment_statement -> lhs_expression assignment_statement/0.1 expression Â· : {')' ';'}

#376
assignment_statement -> '_' '=' expression Â· : {')' ';'}

#377
core_lhs_expression -> ident _disambiguate_template Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#378
core_lhs_expression -> '(' lhs_expression ')' Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#379
param/0.0/0 -> attribute param/0.0/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#380
param -> param/0.0 ident Â· ':' type_specifier : {')' ','}

#381
param_list -> param param_list/0.1 Â· param_list/0.2 : {')'}
param_list/0.2 -> Â· ',' : {')'}

#382
param_list/0.1 -> param_list/0.1/0 Â· : {')' ','}

#383
param_list/0.1/0 -> param_list/0.1/0/0.0 Â· param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> Â· param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> Â· ',' param : {')' ','}

#384
param_list/0.1/0/0.0 -> ',' Â· param : {')' ','}
attribute -> Â· '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param -> Â· param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> Â· param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> Â· attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#385
function_header -> 'fn' ident '(' function_header/0.3 ')' Â· function_header/0.5 : {'{'}
function_header/0.5 -> Â· '->' function_header/0.5/0.1 template_elaborated_ident : {'{'}

#386
struct_body_decl/0.2/0/0.0 -> ',' struct_member Â· : {',' '}'}

#387
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 Â· : {',' '}'}

#388
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 Â· '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#389
struct_body_decl/0.3 -> ',' Â· : {'}'}

#390
struct_member -> struct_member/0.0 member_ident ':' Â· type_specifier : {',' '}'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {',' '}'}

#391
type_specifier -> ident _disambiguate_template template_elaborated_ident/0.2 Â· : {')' ',' ';' '=' '}'}

#392
struct_member -> struct_member/0.0 member_ident ':' type_specifier Â· : {',' '}'}

#393
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#394
function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 Â· : {'{'}

#395
function_header/0.5 -> '->' Â· function_header/0.5/0.1 template_elaborated_ident : {'{'}
attribute -> Â· '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1 -> Â· function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> Â· attribute function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#396
param_list/0.1/0/0.0 -> ',' param Â· : {')' ','}

#397
param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 Â· : {')' ','}

#398
param_list -> param param_list/0.1 param_list/0.2 Â· : {')'}

#399
param_list/0.2 -> ',' Â· : {')'}

#400
param -> param/0.0 ident ':' Â· type_specifier : {')' ','}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {')' ','}

#401
variable_statement -> 'const' optionally_typed_ident '=' expression Â· : {';'}

#402
variable_statement -> 'let' optionally_typed_ident '=' expression Â· : {';'}

#403
for_header -> for_header/0.0 ';' Â· for_header/0.2 ';' for_header/0.4 : {')'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
for_header/0.2 -> Â· expression : {';'}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#404
for_statement -> 'for' '(' for_header ')' Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#405
loop_statement/0.2/0 -> statement loop_statement/0.2/0 Â· : {'continuing' '}'}

#406
loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 Â· '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#407
loop_statement/0.3 -> continuing_statement Â· : {'}'}

#408
continuing_statement -> 'continuing' Â· continuing_compound_statement : {'}'}
continuing_compound_statement -> Â· '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' : {'}'}

#409
switch_statement -> 'switch' expression '{' switch_statement/0.3 Â· '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#410
switch_statement/0.3 -> switch_statement/0.3/0 Â· : {'}'}

#411
switch_statement/0.3/0 -> switch_body Â· switch_statement/0.3/0 : {'}'}
case_clause -> Â· 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> Â· 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body -> Â· case_clause : {'case' 'default' '}'}
switch_body -> Â· default_alone_clause : {'case' 'default' '}'}
switch_statement/0.3/0 -> Â· switch_body switch_statement/0.3/0 : {'}'}

#412
switch_body -> case_clause Â· : {'case' 'default' '}'}

#413
switch_body -> default_alone_clause Â· : {'case' 'default' '}'}

#414
case_clause -> 'case' Â· case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {',' ':' '{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {',' ':' '{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {',' ':' '{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
case_selector -> Â· 'default' : {',' ':' '{'}
case_selector -> Â· expression : {',' ':' '{'}
case_selectors -> Â· case_selector case_selectors/0.1 case_selectors/0.2 : {':' '{'}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {',' ':' '{'}
expression -> Â· relational_expression : {',' ':' '{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {',' ':' '{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {',' ':' '{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#415
default_alone_clause -> 'default' Â· default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
default_alone_clause/0.1 -> Â· ':' : {'{'}

#416
else_clause -> 'else' compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#417
else_if_clause -> 'else' 'if' expression Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#418
template_arg_comma_list/0.1/0/0.0 -> ',' template_arg_expression Â· : {',' /\u200B_template_args_end/}

#419
template_arg_comma_list/0.1/0 -> template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 Â· : {',' /\u200B_template_args_end/}

#420
template_arg_comma_list -> template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 Â· : {/\u200B_template_args_end/}

#421
template_arg_comma_list/0.2 -> ',' Â· : {/\u200B_template_args_end/}

#422
short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression Â· : {'||'}
template_arg_expression -> short_circuit_or_expression '||' relational_expression Â· : {',' /\u200B_template_args_end/}

#423
short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression Â· : {'&&'}
template_arg_expression -> short_circuit_and_expression '&&' relational_expression Â· : {',' /\u200B_template_args_end/}

#424
else_if_clause -> 'else' 'if' expression compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#425
default_alone_clause -> 'default' default_alone_clause/0.1 Â· compound_statement : {'case' 'default' '}'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'case' 'default' '}'}

#426
default_alone_clause/0.1 -> ':' Â· : {'{'}

#427
case_clause -> 'case' case_selectors Â· case_clause/0.2 compound_statement : {'case' 'default' '}'}
case_clause/0.2 -> Â· ':' : {'{'}

#428
case_selectors -> case_selector Â· case_selectors/0.1 case_selectors/0.2 : {':' '{'}
case_selectors/0.1 -> Â· case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0 -> Â· case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0/0.0 -> Â· ',' case_selector : {',' ':' '{'}

#429
case_selector -> 'default' Â· : {',' ':' '{'}

#430
case_selector -> expression Â· : {',' ':' '{'}

#431
switch_statement/0.3/0 -> switch_body switch_statement/0.3/0 Â· : {'}'}

#432
switch_statement -> 'switch' expression '{' switch_statement/0.3 '}' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#433
continuing_statement -> 'continuing' continuing_compound_statement Â· : {'}'}

#434
continuing_compound_statement -> '{' Â· continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' : {'}'}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
continuing_compound_statement/0.1 -> Â· continuing_compound_statement/0.1/0 : {'break' '}'}
continuing_compound_statement/0.1/0 -> Â· statement continuing_compound_statement/0.1/0 : {'break' '}'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#435
loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#436
for_statement -> 'for' '(' for_header ')' compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#437
for_header -> for_header/0.0 ';' for_header/0.2 Â· ';' for_header/0.4 : {')'}

#438
for_header/0.2 -> expression Â· : {';'}

#439
param -> param/0.0 ident ':' type_specifier Â· : {')' ','}

#440
function_header/0.5 -> '->' function_header/0.5/0.1 Â· template_elaborated_ident : {'{'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'{'}

#441
function_header/0.5/0.1 -> function_header/0.5/0.1/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#442
function_header/0.5/0.1/0 -> attribute Â· function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' ident_pattern_token attribute/0.2 : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> Â· attribute function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#443
function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#444
function_header/0.5 -> '->' function_header/0.5/0.1 template_elaborated_ident Â· : {'{'}

#445
for_header -> for_header/0.0 ';' for_header/0.2 ';' Â· for_header/0.4 : {')'}
assignment_statement -> Â· '_' '=' expression : {')'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {')'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {')'}
for_header/0.4 -> Â· for_update : {')'}
for_update -> Â· func_call_statement : {')'}
for_update -> Â· variable_updating_statement : {')'}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {')'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
increment_statement -> Â· lhs_expression '++' : {')'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_updating_statement -> Â· assignment_statement : {')'}
variable_updating_statement -> Â· decrement_statement : {')'}
variable_updating_statement -> Â· increment_statement : {')'}

#446
continuing_compound_statement -> '{' continuing_compound_statement/0.1 Â· continuing_compound_statement/0.2 '}' : {'}'}
break_if_statement -> Â· 'break' 'if' expression ';' : {'}'}
continuing_compound_statement/0.2 -> Â· break_if_statement : {'}'}

#447
continuing_compound_statement/0.1 -> continuing_compound_statement/0.1/0 Â· : {'break' '}'}

#448
continuing_compound_statement/0.1/0 -> statement Â· continuing_compound_statement/0.1/0 : {'break' '}'}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
continuing_compound_statement/0.1/0 -> Â· statement continuing_compound_statement/0.1/0 : {'break' '}'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#449
case_selectors -> case_selector case_selectors/0.1 Â· case_selectors/0.2 : {':' '{'}
case_selectors/0.2 -> Â· ',' : {':' '{'}

#450
case_selectors/0.1 -> case_selectors/0.1/0 Â· : {',' ':' '{'}

#451
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 Â· case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0 -> Â· case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0/0.0 -> Â· ',' case_selector : {',' ':' '{'}

#452
case_selectors/0.1/0/0.0 -> ',' Â· case_selector : {',' ':' '{'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {',' ':' '{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {',' ':' '{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {',' ':' '{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
case_selector -> Â· 'default' : {',' ':' '{'}
case_selector -> Â· expression : {',' ':' '{'}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {',' ':' '{'}
expression -> Â· relational_expression : {',' ':' '{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {',' ':' '{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {',' ':' '{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#453
case_clause -> 'case' case_selectors case_clause/0.2 Â· compound_statement : {'case' 'default' '}'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'case' 'default' '}'}

#454
case_clause/0.2 -> ':' Â· : {'{'}

#455
default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement Â· : {'case' 'default' '}'}

#456
case_clause -> 'case' case_selectors case_clause/0.2 compound_statement Â· : {'case' 'default' '}'}

#457
case_selectors/0.1/0/0.0 -> ',' case_selector Â· : {',' ':' '{'}

#458
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 Â· : {',' ':' '{'}

#459
case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 Â· : {':' '{'}

#460
case_selectors/0.2 -> ',' Â· : {':' '{'}

#461
continuing_compound_statement/0.1/0 -> statement continuing_compound_statement/0.1/0 Â· : {'break' '}'}

#462
continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 Â· '}' : {'}'}

#463
continuing_compound_statement/0.2 -> break_if_statement Â· : {'}'}

#464
break_if_statement -> 'break' Â· 'if' expression ';' : {'}'}

#465
for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 Â· : {')'}

#466
for_header/0.4 -> for_update Â· : {')'}

#467
for_update -> variable_updating_statement Â· : {')'}

#468
for_update -> func_call_statement Â· : {')'}

#469
break_if_statement -> 'break' 'if' Â· expression ';' : {'}'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#470
continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' Â· : {'}'}

#471
break_if_statement -> 'break' 'if' expression Â· ';' : {'}'}

#472
break_if_statement -> 'break' 'if' expression ';' Â· : {'}'}


=Reductions:
r#0 translation_unit/0.0 -> translation_unit/0.0/0 Â·
r#1 global_directive -> enable_directive Â·
r#2 global_directive -> requires_directive Â·
r#3 software_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â·
r#4 enable_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â·
r#5 translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 Â·
r#6 translation_unit -> translation_unit/0.0 translation_unit/0.1 Â·
r#7 translation_unit/0.1 -> translation_unit/0.1/0 Â·
r#8 global_decl -> ';' Â·
r#9 global_decl -> struct_decl Â·
r#10 global_decl -> function_decl Â·
r#11 global_variable_decl/0.0 -> global_variable_decl/0.0/0 Â·
r#12 global_constant_decl/1.0 -> global_constant_decl/1.0/0 Â·
r#13 function_decl/0.0 -> function_decl/0.0/0 Â·
r#14 ident_pattern_token -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â·
r#15 global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 Â·
r#16 global_constant_decl/1.0/0 -> attribute global_constant_decl/1.0/0 Â·
r#17 function_decl/0.0/0 -> attribute function_decl/0.0/0 Â·
r#18 const_assert_statement -> 'const_assert' expression Â·
r#19 expression -> relational_expression Â·
r#20 short_circuit_or_expression -> relational_expression Â·
r#21 short_circuit_and_expression -> relational_expression Â·
r#22 expression -> bitwise_expression Â·
r#23 relational_expression -> shift_expression Â·
r#24 shift_expression -> additive_expression Â·
r#25 binary_and_expression -> unary_expression Â·
r#26 binary_or_expression -> unary_expression Â·
r#27 binary_xor_expression -> unary_expression Â·
r#28 multiplicative_expression -> unary_expression Â·
r#29 additive_expression -> multiplicative_expression Â·
r#30 unary_expression -> singular_expression Â·
r#31 primary_expression -> template_elaborated_ident Â·
r#32 primary_expression -> call_expression Â·
r#33 primary_expression -> literal Â·
r#34 primary_expression -> paren_expression Â·
r#35 literal -> int_literal Â·
r#36 literal -> float_literal Â·
r#37 literal -> bool_literal Â·
r#38 int_literal -> decimal_int_literal Â·
r#39 int_literal -> hex_int_literal Â·
r#40 float_literal -> decimal_float_literal Â·
r#41 float_literal -> hex_float_literal Â·
r#42 bool_literal -> 'true' Â·
r#43 bool_literal -> 'false' Â·
r#44 decimal_int_literal -> /0[iu]?/ Â·
r#45 decimal_int_literal -> /[1-9][0-9]*[iu]?/ Â·
r#46 hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ Â·
r#47 decimal_float_literal -> /0[fh]/ Â·
r#48 decimal_float_literal -> /[1-9][0-9]*[fh]/ Â·
r#49 decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ Â·
r#50 decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ Â·
r#51 decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ Â·
r#52 hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ Â·
r#53 hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ Â·
r#54 hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ Â·
r#55 global_decl -> const_assert_statement ';' Â·
r#56 global_decl -> type_alias_decl ';' Â·
r#57 global_decl -> global_constant_decl ';' Â·
r#58 global_decl -> global_variable_decl ';' Â·
r#59 translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 Â·
r#60 enable_directive -> 'enable' enable_extension_name ';' Â·
r#61 software_extension_list/0.1 -> software_extension_list/0.1/0 Â·
r#62 requires_directive -> 'requires' software_extension_list ';' Â·
r#63 software_extension_list/0.1/0/0.0 -> ',' software_extension_name Â·
r#64 software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 Â·
r#65 software_extension_list -> software_extension_name software_extension_list/0.1 software_extension_list/0.2 Â·
r#66 software_extension_list/0.2 -> ',' Â·
r#67 _disambiguate_template -> /\u200B_disambiguate_template/ Â·
r#68 global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 Â·
r#69 optionally_typed_ident -> ident optionally_typed_ident/0.1 Â·
r#70 struct_decl -> 'struct' ident struct_body_decl Â·
r#71 function_decl -> function_decl/0.0 function_header compound_statement Â·
r#72 ident -> ident_pattern_token _disambiguate_template Â·
r#73 call_expression -> template_elaborated_ident argument_expression_list Â·
r#74 singular_expression -> primary_expression singular_expression/0.1 Â·
r#75 singular_expression/0.1 -> component_or_swizzle_specifier Â·
r#76 unary_expression -> '&' unary_expression Â·
r#77 unary_expression -> '*' unary_expression Â·
r#78 unary_expression -> '~' unary_expression Â·
r#79 unary_expression -> '!' unary_expression Â·
r#80 unary_expression -> '-' unary_expression Â·
r#81 multiplicative_operator -> '*' Â·
r#82 multiplicative_operator -> '/' Â·
r#83 multiplicative_operator -> '%' Â·
r#84 _shift_left -> /\u200B_shift_left/ Â·
r#85 _shift_right -> /\u200B_shift_right/ Â·
r#86 additive_operator -> '+' Â·
r#87 additive_operator -> '-' Â·
r#88 _less_than -> /\u200B_less_than/ Â·
r#89 _greater_than -> /\u200B_greater_than/ Â·
r#90 _less_than_equal -> /\u200B_less_than_equal/ Â·
r#91 _greater_than_equal -> /\u200B_greater_than_equal/ Â·
r#92 attribute -> '@' ident_pattern_token attribute/0.2 Â·
r#93 attribute/0.2 -> argument_expression_list Â·
r#94 expression -> short_circuit_or_expression '||' relational_expression Â·
r#95 short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression Â·
r#96 expression -> short_circuit_and_expression '&&' relational_expression Â·
r#97 short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression Â·
r#98 relational_expression -> shift_expression '!=' shift_expression Â·
r#99 relational_expression -> shift_expression '==' shift_expression Â·
r#100 relational_expression -> shift_expression _greater_than_equal shift_expression Â·
r#101 relational_expression -> shift_expression _less_than_equal shift_expression Â·
r#102 relational_expression -> shift_expression _greater_than shift_expression Â·
r#103 relational_expression -> shift_expression _less_than shift_expression Â·
r#104 bitwise_expression -> binary_and_expression '&' unary_expression Â·
r#105 binary_and_expression -> binary_and_expression '&' unary_expression Â·
r#106 bitwise_expression -> binary_or_expression '|' unary_expression Â·
r#107 binary_or_expression -> binary_or_expression '|' unary_expression Â·
r#108 bitwise_expression -> binary_xor_expression '^' unary_expression Â·
r#109 binary_xor_expression -> binary_xor_expression '^' unary_expression Â·
r#110 additive_expression -> additive_expression additive_operator multiplicative_expression Â·
r#111 shift_expression -> unary_expression _shift_right unary_expression Â·
r#112 shift_expression -> unary_expression _shift_left unary_expression Â·
r#113 multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression Â·
r#114 member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â·
r#115 swizzle_name -> '/[rgba]/' Â·
r#116 swizzle_name -> '/[rgba][rgba]/' Â·
r#117 swizzle_name -> '/[rgba][rgba][rgba]/' Â·
r#118 swizzle_name -> '/[rgba][rgba][rgba][rgba]/' Â·
r#119 swizzle_name -> '/[xyzw]/' Â·
r#120 swizzle_name -> '/[xyzw][xyzw]/' Â·
r#121 swizzle_name -> '/[xyzw][xyzw][xyzw]/' Â·
r#122 swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' Â·
r#123 argument_expression_list/0.1 -> expression_comma_list Â·
r#124 template_elaborated_ident -> ident _disambiguate_template template_elaborated_ident/0.2 Â·
r#125 template_elaborated_ident/0.2 -> template_list Â·
r#126 _template_args_start -> /\u200B_template_args_start/ Â·
r#127 paren_expression -> '(' expression ')' Â·
r#128 compound_statement/0.1 -> compound_statement/0.1/0 Â·
r#129 statement -> ';' Â·
r#130 statement -> if_statement Â·
r#131 statement -> switch_statement Â·
r#132 statement -> loop_statement Â·
r#133 statement -> for_statement Â·
r#134 statement -> while_statement Â·
r#135 statement -> compound_statement Â·
r#136 variable_statement -> variable_decl Â·
r#137 break_statement -> 'break' Â·
r#138 continue_statement -> 'continue' Â·
r#139 variable_updating_statement -> assignment_statement Â·
r#140 variable_updating_statement -> increment_statement Â·
r#141 variable_updating_statement -> decrement_statement Â·
r#142 struct_member/0.0 -> struct_member/0.0/0 Â·
r#143 type_alias_decl -> 'alias' ident '=' type_specifier Â·
r#144 global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 Â·
r#145 global_constant_decl -> 'const' optionally_typed_ident '=' expression Â·
r#146 optionally_typed_ident/0.1 -> ':' type_specifier Â·
r#147 global_variable_decl/0.2 -> '=' expression Â·
r#148 variable_decl/0.2 -> template_list Â·
r#149 variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident Â·
r#150 global_constant_decl/1.3 -> '=' expression Â·
r#151 struct_member/0.0/0 -> attribute struct_member/0.0/0 Â·
r#152 struct_body_decl/0.2 -> struct_body_decl/0.2/0 Â·
r#153 function_header/0.3 -> param_list Â·
r#154 param/0.0 -> param/0.0/0 Â·
r#155 lhs_expression -> '&' lhs_expression Â·
r#156 lhs_expression -> '*' lhs_expression Â·
r#157 lhs_expression -> core_lhs_expression lhs_expression/0.1 Â·
r#158 lhs_expression/0.1 -> component_or_swizzle_specifier Â·
r#159 increment_statement -> lhs_expression '++' Â·
r#160 decrement_statement -> lhs_expression '--' Â·
r#161 assignment_statement/0.1 -> '=' Â·
r#162 assignment_statement/0.1 -> compound_assignment_operator Â·
r#163 compound_assignment_operator -> '+=' Â·
r#164 compound_assignment_operator -> '-=' Â·
r#165 compound_assignment_operator -> '*=' Â·
r#166 compound_assignment_operator -> '/=' Â·
r#167 compound_assignment_operator -> '%=' Â·
r#168 compound_assignment_operator -> '&=' Â·
r#169 compound_assignment_operator -> '|=' Â·
r#170 compound_assignment_operator -> '^=' Â·
r#171 compound_assignment_operator -> _shift_right_assign Â·
r#172 compound_assignment_operator -> _shift_left_assign Â·
r#173 _shift_right_assign -> /\u200B_shift_right_assign/ Â·
r#174 _shift_left_assign -> /\u200B_shift_left_assign/ Â·
r#175 core_lhs_expression -> ident _disambiguate_template Â·
r#176 func_call_statement -> template_elaborated_ident argument_expression_list Â·
r#177 if_statement/0.1 -> if_statement/0.1/0 Â·
r#178 return_statement -> 'return' return_statement/0.1 Â·
r#179 return_statement/0.1 -> expression Â·
r#180 statement -> const_assert_statement ';' Â·
r#181 statement -> variable_updating_statement ';' Â·
r#182 statement -> 'discard' ';' Â·
r#183 statement -> continue_statement ';' Â·
r#184 statement -> break_statement ';' Â·
r#185 statement -> variable_statement ';' Â·
r#186 statement -> func_call_statement ';' Â·
r#187 statement -> return_statement ';' Â·
r#188 compound_statement/0.1/0 -> statement compound_statement/0.1/0 Â·
r#189 compound_statement -> '{' compound_statement/0.1 '}' Â·
r#190 template_arg_expression -> relational_expression Â·
r#191 template_arg_expression -> bitwise_expression Â·
r#192 expression_comma_list/0.1 -> expression_comma_list/0.1/0 Â·
r#193 argument_expression_list -> '(' argument_expression_list/0.1 ')' Â·
r#194 component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 Â·
r#195 component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier Â·
r#196 component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 Â·
r#197 component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier Â·
r#198 component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 Â·
r#199 component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier Â·
r#200 expression_comma_list/0.1/0/0.0 -> ',' expression Â·
r#201 expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 Â·
r#202 expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 Â·
r#203 expression_comma_list/0.2 -> ',' Â·
r#204 template_arg_comma_list/0.1 -> template_arg_comma_list/0.1/0 Â·
r#205 template_list -> _template_args_start template_arg_comma_list _template_args_end Â·
r#206 _template_args_end -> /\u200B_template_args_end/ Â·
r#207 if_statement/0.1/0 -> else_if_clause if_statement/0.1/0 Â·
r#208 if_statement -> if_clause if_statement/0.1 if_statement/0.2 Â·
r#209 if_statement/0.2 -> else_clause Â·
r#210 loop_statement/0.2 -> loop_statement/0.2/0 Â·
r#211 for_header/0.0 -> for_init Â·
r#212 for_init -> variable_statement Â·
r#213 for_init -> variable_updating_statement Â·
r#214 for_init -> func_call_statement Â·
r#215 while_statement -> 'while' expression compound_statement Â·
r#216 variable_statement -> variable_decl '=' expression Â·
r#217 if_clause -> 'if' expression compound_statement Â·
r#218 assignment_statement -> lhs_expression assignment_statement/0.1 expression Â·
r#219 assignment_statement -> '_' '=' expression Â·
r#220 core_lhs_expression -> '(' lhs_expression ')' Â·
r#221 param/0.0/0 -> attribute param/0.0/0 Â·
r#222 param_list/0.1 -> param_list/0.1/0 Â·
r#223 struct_body_decl/0.2/0/0.0 -> ',' struct_member Â·
r#224 struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 Â·
r#225 struct_body_decl/0.3 -> ',' Â·
r#226 type_specifier -> ident _disambiguate_template template_elaborated_ident/0.2 Â·
r#227 struct_member -> struct_member/0.0 member_ident ':' type_specifier Â·
r#228 struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' Â·
r#229 function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 Â·
r#230 param_list/0.1/0/0.0 -> ',' param Â·
r#231 param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 Â·
r#232 param_list -> param param_list/0.1 param_list/0.2 Â·
r#233 param_list/0.2 -> ',' Â·
r#234 variable_statement -> 'const' optionally_typed_ident '=' expression Â·
r#235 variable_statement -> 'let' optionally_typed_ident '=' expression Â·
r#236 loop_statement/0.2/0 -> statement loop_statement/0.2/0 Â·
r#237 loop_statement/0.3 -> continuing_statement Â·
r#238 switch_statement/0.3 -> switch_statement/0.3/0 Â·
r#239 switch_body -> case_clause Â·
r#240 switch_body -> default_alone_clause Â·
r#241 else_clause -> 'else' compound_statement Â·
r#242 template_arg_comma_list/0.1/0/0.0 -> ',' template_arg_expression Â·
r#243 template_arg_comma_list/0.1/0 -> template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 Â·
r#244 template_arg_comma_list -> template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 Â·
r#245 template_arg_comma_list/0.2 -> ',' Â·
r#246 template_arg_expression -> short_circuit_or_expression '||' relational_expression Â·
r#247 template_arg_expression -> short_circuit_and_expression '&&' relational_expression Â·
r#248 else_if_clause -> 'else' 'if' expression compound_statement Â·
r#249 default_alone_clause/0.1 -> ':' Â·
r#250 case_selector -> 'default' Â·
r#251 case_selector -> expression Â·
r#252 switch_statement/0.3/0 -> switch_body switch_statement/0.3/0 Â·
r#253 switch_statement -> 'switch' expression '{' switch_statement/0.3 '}' Â·
r#254 continuing_statement -> 'continuing' continuing_compound_statement Â·
r#255 loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' Â·
r#256 for_statement -> 'for' '(' for_header ')' compound_statement Â·
r#257 for_header/0.2 -> expression Â·
r#258 param -> param/0.0 ident ':' type_specifier Â·
r#259 function_header/0.5/0.1 -> function_header/0.5/0.1/0 Â·
r#260 function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 Â·
r#261 function_header/0.5 -> '->' function_header/0.5/0.1 template_elaborated_ident Â·
r#262 continuing_compound_statement/0.1 -> continuing_compound_statement/0.1/0 Â·
r#263 case_selectors/0.1 -> case_selectors/0.1/0 Â·
r#264 case_clause/0.2 -> ':' Â·
r#265 default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement Â·
r#266 case_clause -> 'case' case_selectors case_clause/0.2 compound_statement Â·
r#267 case_selectors/0.1/0/0.0 -> ',' case_selector Â·
r#268 case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 Â·
r#269 case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 Â·
r#270 case_selectors/0.2 -> ',' Â·
r#271 continuing_compound_statement/0.1/0 -> statement continuing_compound_statement/0.1/0 Â·
r#272 continuing_compound_statement/0.2 -> break_if_statement Â·
r#273 for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 Â·
r#274 for_header/0.4 -> for_update Â·
r#275 for_update -> variable_updating_statement Â·
r#276 for_update -> func_call_statement Â·
r#277 continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' Â·
r#278 break_if_statement -> 'break' 'if' expression ';' Â·

=Action:
[#0 'enable']: s#7
[#0 'requires']: s#8
[#1 EndOfText]: acc
[#2 ';']: s#18
[#2 '@']: s#36
[#2 'alias']: s#28
[#2 'const']: s#26
[#2 'const_assert']: s#31
[#2 'struct']: s#29
[#3 ';']: r#0
[#3 '@']: r#0
[#3 'alias']: r#0
[#3 'const']: r#0
[#3 'const_assert']: r#0
[#3 'fn']: r#0
[#3 'override']: r#0
[#3 'struct']: r#0
[#3 'var']: r#0
[#3 EndOfText]: r#0
[#4 'enable']: s#7
[#4 'requires']: s#8
[#5 ';']: r#1
[#5 '@']: r#1
[#5 'alias']: r#1
[#5 'const']: r#1
[#5 'const_assert']: r#1
[#5 'enable']: r#1
[#5 'fn']: r#1
[#5 'override']: r#1
[#5 'requires']: r#1
[#5 'struct']: r#1
[#5 'var']: r#1
[#5 EndOfText]: r#1
[#6 ';']: r#2
[#6 '@']: r#2
[#6 'alias']: r#2
[#6 'const']: r#2
[#6 'const_assert']: r#2
[#6 'enable']: r#2
[#6 'fn']: r#2
[#6 'override']: r#2
[#6 'requires']: r#2
[#6 'struct']: r#2
[#6 'var']: r#2
[#6 EndOfText]: r#2
[#7 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#13
[#8 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#11
[#9 ';']: s#107
[#10 ',']: s#106
[#11 ',']: r#3
[#11 ';']: r#3
[#12 ';']: s#102
[#13 ';']: r#4
[#14 ';']: r#5
[#14 '@']: r#5
[#14 'alias']: r#5
[#14 'const']: r#5
[#14 'const_assert']: r#5
[#14 'fn']: r#5
[#14 'override']: r#5
[#14 'struct']: r#5
[#14 'var']: r#5
[#14 EndOfText]: r#5
[#15 EndOfText]: r#6
[#16 EndOfText]: r#7
[#17 ';']: s#18
[#17 '@']: s#36
[#17 'alias']: s#28
[#17 'const']: s#26
[#17 'const_assert']: s#31
[#17 'struct']: s#29
[#18 ';']: r#8
[#18 '@']: r#8
[#18 'alias']: r#8
[#18 'const']: r#8
[#18 'const_assert']: r#8
[#18 'fn']: r#8
[#18 'override']: r#8
[#18 'struct']: r#8
[#18 'var']: r#8
[#18 EndOfText]: r#8
[#19 ';']: s#100
[#20 ';']: s#99
[#21 ';']: s#98
[#22 ';']: r#9
[#22 '@']: r#9
[#22 'alias']: r#9
[#22 'const']: r#9
[#22 'const_assert']: r#9
[#22 'fn']: r#9
[#22 'override']: r#9
[#22 'struct']: r#9
[#22 'var']: r#9
[#22 EndOfText]: r#9
[#23 ';']: r#10
[#23 '@']: r#10
[#23 'alias']: r#10
[#23 'const']: r#10
[#23 'const_assert']: r#10
[#23 'fn']: r#10
[#23 'override']: r#10
[#23 'struct']: r#10
[#23 'var']: r#10
[#23 EndOfText]: r#10
[#24 ';']: s#97
[#25 'var']: s#96
[#26 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#27 'override']: s#92
[#28 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#29 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#30 'fn']: s#89
[#31 '!']: s#56
[#31 '&']: s#59
[#31 '(']: s#69
[#31 '*']: s#58
[#31 '-']: s#55
[#31 'false']: s#76
[#31 'true']: s#75
[#31 '~']: s#57
[#31 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#31 /0[fh]/]: s#80
[#31 /0[iu]?/]: s#77
[#31 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#31 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#31 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#31 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#31 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#31 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#31 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#31 /[1-9][0-9]*[fh]/]: s#81
[#31 /[1-9][0-9]*[iu]?/]: s#78
[#32 'var']: r#11
[#33 'override']: r#12
[#34 'fn']: r#13
[#35 '@']: s#36
[#36 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#37 '(']: s#130
[#38 '(']: r#14
[#38 '@']: r#14
[#38 'fn']: r#14
[#38 'override']: r#14
[#38 'var']: r#14
[#38 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#14
[#38 /\u200B_disambiguate_template/]: r#14
[#39 'var']: r#15
[#40 'override']: r#16
[#41 'fn']: r#17
[#42 ';']: r#18
[#43 '&&']: r#21
[#43 ')']: r#19
[#43 ',']: r#19
[#43 ':']: r#19
[#43 ';']: r#19
[#43 ']']: r#19
[#43 '{']: r#19
[#43 '||']: r#20
[#44 '||']: s#165
[#45 '&&']: s#164
[#46 ')']: r#22
[#46 ',']: r#22
[#46 ':']: r#22
[#46 ';']: r#22
[#46 ']']: r#22
[#46 '{']: r#22
[#47 '!=']: s#159
[#47 '&&']: r#23
[#47 ')']: r#23
[#47 ',']: r#23
[#47 ':']: r#23
[#47 ';']: r#23
[#47 '==']: s#158
[#47 ']']: r#23
[#47 '{']: r#23
[#47 '||']: r#23
[#47 /\u200B_greater_than/]: s#161
[#47 /\u200B_greater_than_equal/]: s#163
[#47 /\u200B_less_than/]: s#160
[#47 /\u200B_less_than_equal/]: s#162
[#47 /\u200B_template_args_end/]: r#23
[#48 '&']: s#153
[#49 '|']: s#152
[#50 '^']: s#151
[#51 '!=']: r#24
[#51 '&&']: r#24
[#51 ')']: r#24
[#51 '+']: s#149
[#51 ',']: r#24
[#51 '-']: s#150
[#51 ':']: r#24
[#51 ';']: r#24
[#51 '==']: r#24
[#51 ']']: r#24
[#51 '{']: r#24
[#51 '||']: r#24
[#51 /\u200B_greater_than/]: r#24
[#51 /\u200B_greater_than_equal/]: r#24
[#51 /\u200B_less_than/]: r#24
[#51 /\u200B_less_than_equal/]: r#24
[#51 /\u200B_template_args_end/]: r#24
[#52 '!=']: r#28
[#52 '%']: r#28
[#52 '&&']: r#28
[#52 '&']: r#25
[#52 ')']: r#28
[#52 '*']: r#28
[#52 '+']: r#28
[#52 ',']: r#28
[#52 '-']: r#28
[#52 '/']: r#28
[#52 ':']: r#28
[#52 ';']: r#28
[#52 '==']: r#28
[#52 ']']: r#28
[#52 '^']: r#27
[#52 '{']: r#28
[#52 '|']: r#26
[#52 '||']: r#28
[#52 /\u200B_greater_than/]: r#28
[#52 /\u200B_greater_than_equal/]: r#28
[#52 /\u200B_less_than/]: r#28
[#52 /\u200B_less_than_equal/]: r#28
[#52 /\u200B_shift_left/]: s#146
[#52 /\u200B_shift_right/]: s#147
[#52 /\u200B_template_args_end/]: r#28
[#53 '!=']: r#29
[#53 '%']: s#143
[#53 '&&']: r#29
[#53 ')']: r#29
[#53 '*']: s#141
[#53 '+']: r#29
[#53 ',']: r#29
[#53 '-']: r#29
[#53 '/']: s#142
[#53 ':']: r#29
[#53 ';']: r#29
[#53 '==']: r#29
[#53 ']']: r#29
[#53 '{']: r#29
[#53 '||']: r#29
[#53 /\u200B_greater_than/]: r#29
[#53 /\u200B_greater_than_equal/]: r#29
[#53 /\u200B_less_than/]: r#29
[#53 /\u200B_less_than_equal/]: r#29
[#53 /\u200B_template_args_end/]: r#29
[#54 '!=']: r#30
[#54 '%']: r#30
[#54 '&&']: r#30
[#54 '&']: r#30
[#54 ')']: r#30
[#54 '*']: r#30
[#54 '+']: r#30
[#54 ',']: r#30
[#54 '-']: r#30
[#54 '/']: r#30
[#54 ':']: r#30
[#54 ';']: r#30
[#54 '==']: r#30
[#54 ']']: r#30
[#54 '^']: r#30
[#54 '{']: r#30
[#54 '|']: r#30
[#54 '||']: r#30
[#54 /\u200B_greater_than/]: r#30
[#54 /\u200B_greater_than_equal/]: r#30
[#54 /\u200B_less_than/]: r#30
[#54 /\u200B_less_than_equal/]: r#30
[#54 /\u200B_shift_left/]: r#30
[#54 /\u200B_shift_right/]: r#30
[#54 /\u200B_template_args_end/]: r#30
[#55 '!']: s#56
[#55 '&']: s#59
[#55 '(']: s#69
[#55 '*']: s#58
[#55 '-']: s#55
[#55 'false']: s#76
[#55 'true']: s#75
[#55 '~']: s#57
[#55 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#55 /0[fh]/]: s#80
[#55 /0[iu]?/]: s#77
[#55 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#55 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#55 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#55 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#55 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#55 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#55 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#55 /[1-9][0-9]*[fh]/]: s#81
[#55 /[1-9][0-9]*[iu]?/]: s#78
[#56 '!']: s#56
[#56 '&']: s#59
[#56 '(']: s#69
[#56 '*']: s#58
[#56 '-']: s#55
[#56 'false']: s#76
[#56 'true']: s#75
[#56 '~']: s#57
[#56 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#56 /0[fh]/]: s#80
[#56 /0[iu]?/]: s#77
[#56 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#56 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#56 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#56 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#56 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#56 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#56 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#56 /[1-9][0-9]*[fh]/]: s#81
[#56 /[1-9][0-9]*[iu]?/]: s#78
[#57 '!']: s#56
[#57 '&']: s#59
[#57 '(']: s#69
[#57 '*']: s#58
[#57 '-']: s#55
[#57 'false']: s#76
[#57 'true']: s#75
[#57 '~']: s#57
[#57 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#57 /0[fh]/]: s#80
[#57 /0[iu]?/]: s#77
[#57 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#57 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#57 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#57 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#57 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#57 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#57 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#57 /[1-9][0-9]*[fh]/]: s#81
[#57 /[1-9][0-9]*[iu]?/]: s#78
[#58 '!']: s#56
[#58 '&']: s#59
[#58 '(']: s#69
[#58 '*']: s#58
[#58 '-']: s#55
[#58 'false']: s#76
[#58 'true']: s#75
[#58 '~']: s#57
[#58 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#58 /0[fh]/]: s#80
[#58 /0[iu]?/]: s#77
[#58 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#58 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#58 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#58 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#58 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#58 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#58 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#58 /[1-9][0-9]*[fh]/]: s#81
[#58 /[1-9][0-9]*[iu]?/]: s#78
[#59 '!']: s#56
[#59 '&']: s#59
[#59 '(']: s#69
[#59 '*']: s#58
[#59 '-']: s#55
[#59 'false']: s#76
[#59 'true']: s#75
[#59 '~']: s#57
[#59 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#59 /0[fh]/]: s#80
[#59 /0[iu]?/]: s#77
[#59 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#59 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#59 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#59 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#59 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#59 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#59 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#59 /[1-9][0-9]*[fh]/]: s#81
[#59 /[1-9][0-9]*[iu]?/]: s#78
[#60 '.']: s#134
[#60 '[']: s#133
[#61 '!=']: r#31
[#61 '%']: r#31
[#61 '&&']: r#31
[#61 '&']: r#31
[#61 '(']: s#130
[#61 ')']: r#31
[#61 '*']: r#31
[#61 '+']: r#31
[#61 ',']: r#31
[#61 '-']: r#31
[#61 '.']: r#31
[#61 '/']: r#31
[#61 ':']: r#31
[#61 ';']: r#31
[#61 '==']: r#31
[#61 '[']: r#31
[#61 ']']: r#31
[#61 '^']: r#31
[#61 '{']: r#31
[#61 '|']: r#31
[#61 '||']: r#31
[#61 /\u200B_greater_than/]: r#31
[#61 /\u200B_greater_than_equal/]: r#31
[#61 /\u200B_less_than/]: r#31
[#61 /\u200B_less_than_equal/]: r#31
[#61 /\u200B_shift_left/]: r#31
[#61 /\u200B_shift_right/]: r#31
[#61 /\u200B_template_args_end/]: r#31
[#62 '!=']: r#32
[#62 '%']: r#32
[#62 '&&']: r#32
[#62 '&']: r#32
[#62 ')']: r#32
[#62 '*']: r#32
[#62 '+']: r#32
[#62 ',']: r#32
[#62 '-']: r#32
[#62 '.']: r#32
[#62 '/']: r#32
[#62 ':']: r#32
[#62 ';']: r#32
[#62 '==']: r#32
[#62 '[']: r#32
[#62 ']']: r#32
[#62 '^']: r#32
[#62 '{']: r#32
[#62 '|']: r#32
[#62 '||']: r#32
[#62 /\u200B_greater_than/]: r#32
[#62 /\u200B_greater_than_equal/]: r#32
[#62 /\u200B_less_than/]: r#32
[#62 /\u200B_less_than_equal/]: r#32
[#62 /\u200B_shift_left/]: r#32
[#62 /\u200B_shift_right/]: r#32
[#62 /\u200B_template_args_end/]: r#32
[#63 '!=']: r#33
[#63 '%']: r#33
[#63 '&&']: r#33
[#63 '&']: r#33
[#63 ')']: r#33
[#63 '*']: r#33
[#63 '+']: r#33
[#63 ',']: r#33
[#63 '-']: r#33
[#63 '.']: r#33
[#63 '/']: r#33
[#63 ':']: r#33
[#63 ';']: r#33
[#63 '==']: r#33
[#63 '[']: r#33
[#63 ']']: r#33
[#63 '^']: r#33
[#63 '{']: r#33
[#63 '|']: r#33
[#63 '||']: r#33
[#63 /\u200B_greater_than/]: r#33
[#63 /\u200B_greater_than_equal/]: r#33
[#63 /\u200B_less_than/]: r#33
[#63 /\u200B_less_than_equal/]: r#33
[#63 /\u200B_shift_left/]: r#33
[#63 /\u200B_shift_right/]: r#33
[#63 /\u200B_template_args_end/]: r#33
[#64 '!=']: r#34
[#64 '%']: r#34
[#64 '&&']: r#34
[#64 '&']: r#34
[#64 ')']: r#34
[#64 '*']: r#34
[#64 '+']: r#34
[#64 ',']: r#34
[#64 '-']: r#34
[#64 '.']: r#34
[#64 '/']: r#34
[#64 ':']: r#34
[#64 ';']: r#34
[#64 '==']: r#34
[#64 '[']: r#34
[#64 ']']: r#34
[#64 '^']: r#34
[#64 '{']: r#34
[#64 '|']: r#34
[#64 '||']: r#34
[#64 /\u200B_greater_than/]: r#34
[#64 /\u200B_greater_than_equal/]: r#34
[#64 /\u200B_less_than/]: r#34
[#64 /\u200B_less_than_equal/]: r#34
[#64 /\u200B_shift_left/]: r#34
[#64 /\u200B_shift_right/]: r#34
[#64 /\u200B_template_args_end/]: r#34
[#65 /\u200B_disambiguate_template/]: s#113
[#66 '!=']: r#35
[#66 '%']: r#35
[#66 '&&']: r#35
[#66 '&']: r#35
[#66 ')']: r#35
[#66 '*']: r#35
[#66 '+']: r#35
[#66 ',']: r#35
[#66 '-']: r#35
[#66 '.']: r#35
[#66 '/']: r#35
[#66 ':']: r#35
[#66 ';']: r#35
[#66 '==']: r#35
[#66 '[']: r#35
[#66 ']']: r#35
[#66 '^']: r#35
[#66 '{']: r#35
[#66 '|']: r#35
[#66 '||']: r#35
[#66 /\u200B_greater_than/]: r#35
[#66 /\u200B_greater_than_equal/]: r#35
[#66 /\u200B_less_than/]: r#35
[#66 /\u200B_less_than_equal/]: r#35
[#66 /\u200B_shift_left/]: r#35
[#66 /\u200B_shift_right/]: r#35
[#66 /\u200B_template_args_end/]: r#35
[#67 '!=']: r#36
[#67 '%']: r#36
[#67 '&&']: r#36
[#67 '&']: r#36
[#67 ')']: r#36
[#67 '*']: r#36
[#67 '+']: r#36
[#67 ',']: r#36
[#67 '-']: r#36
[#67 '.']: r#36
[#67 '/']: r#36
[#67 ':']: r#36
[#67 ';']: r#36
[#67 '==']: r#36
[#67 '[']: r#36
[#67 ']']: r#36
[#67 '^']: r#36
[#67 '{']: r#36
[#67 '|']: r#36
[#67 '||']: r#36
[#67 /\u200B_greater_than/]: r#36
[#67 /\u200B_greater_than_equal/]: r#36
[#67 /\u200B_less_than/]: r#36
[#67 /\u200B_less_than_equal/]: r#36
[#67 /\u200B_shift_left/]: r#36
[#67 /\u200B_shift_right/]: r#36
[#67 /\u200B_template_args_end/]: r#36
[#68 '!=']: r#37
[#68 '%']: r#37
[#68 '&&']: r#37
[#68 '&']: r#37
[#68 ')']: r#37
[#68 '*']: r#37
[#68 '+']: r#37
[#68 ',']: r#37
[#68 '-']: r#37
[#68 '.']: r#37
[#68 '/']: r#37
[#68 ':']: r#37
[#68 ';']: r#37
[#68 '==']: r#37
[#68 '[']: r#37
[#68 ']']: r#37
[#68 '^']: r#37
[#68 '{']: r#37
[#68 '|']: r#37
[#68 '||']: r#37
[#68 /\u200B_greater_than/]: r#37
[#68 /\u200B_greater_than_equal/]: r#37
[#68 /\u200B_less_than/]: r#37
[#68 /\u200B_less_than_equal/]: r#37
[#68 /\u200B_shift_left/]: r#37
[#68 /\u200B_shift_right/]: r#37
[#68 /\u200B_template_args_end/]: r#37
[#69 '!']: s#56
[#69 '&']: s#59
[#69 '(']: s#69
[#69 '*']: s#58
[#69 '-']: s#55
[#69 'false']: s#76
[#69 'true']: s#75
[#69 '~']: s#57
[#69 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#69 /0[fh]/]: s#80
[#69 /0[iu]?/]: s#77
[#69 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#69 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#69 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#69 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#69 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#69 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#69 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#69 /[1-9][0-9]*[fh]/]: s#81
[#69 /[1-9][0-9]*[iu]?/]: s#78
[#70 /\u200B_disambiguate_template/]: s#113
[#71 '!=']: r#38
[#71 '%']: r#38
[#71 '&&']: r#38
[#71 '&']: r#38
[#71 ')']: r#38
[#71 '*']: r#38
[#71 '+']: r#38
[#71 ',']: r#38
[#71 '-']: r#38
[#71 '.']: r#38
[#71 '/']: r#38
[#71 ':']: r#38
[#71 ';']: r#38
[#71 '==']: r#38
[#71 '[']: r#38
[#71 ']']: r#38
[#71 '^']: r#38
[#71 '{']: r#38
[#71 '|']: r#38
[#71 '||']: r#38
[#71 /\u200B_greater_than/]: r#38
[#71 /\u200B_greater_than_equal/]: r#38
[#71 /\u200B_less_than/]: r#38
[#71 /\u200B_less_than_equal/]: r#38
[#71 /\u200B_shift_left/]: r#38
[#71 /\u200B_shift_right/]: r#38
[#71 /\u200B_template_args_end/]: r#38
[#72 '!=']: r#39
[#72 '%']: r#39
[#72 '&&']: r#39
[#72 '&']: r#39
[#72 ')']: r#39
[#72 '*']: r#39
[#72 '+']: r#39
[#72 ',']: r#39
[#72 '-']: r#39
[#72 '.']: r#39
[#72 '/']: r#39
[#72 ':']: r#39
[#72 ';']: r#39
[#72 '==']: r#39
[#72 '[']: r#39
[#72 ']']: r#39
[#72 '^']: r#39
[#72 '{']: r#39
[#72 '|']: r#39
[#72 '||']: r#39
[#72 /\u200B_greater_than/]: r#39
[#72 /\u200B_greater_than_equal/]: r#39
[#72 /\u200B_less_than/]: r#39
[#72 /\u200B_less_than_equal/]: r#39
[#72 /\u200B_shift_left/]: r#39
[#72 /\u200B_shift_right/]: r#39
[#72 /\u200B_template_args_end/]: r#39
[#73 '!=']: r#40
[#73 '%']: r#40
[#73 '&&']: r#40
[#73 '&']: r#40
[#73 ')']: r#40
[#73 '*']: r#40
[#73 '+']: r#40
[#73 ',']: r#40
[#73 '-']: r#40
[#73 '.']: r#40
[#73 '/']: r#40
[#73 ':']: r#40
[#73 ';']: r#40
[#73 '==']: r#40
[#73 '[']: r#40
[#73 ']']: r#40
[#73 '^']: r#40
[#73 '{']: r#40
[#73 '|']: r#40
[#73 '||']: r#40
[#73 /\u200B_greater_than/]: r#40
[#73 /\u200B_greater_than_equal/]: r#40
[#73 /\u200B_less_than/]: r#40
[#73 /\u200B_less_than_equal/]: r#40
[#73 /\u200B_shift_left/]: r#40
[#73 /\u200B_shift_right/]: r#40
[#73 /\u200B_template_args_end/]: r#40
[#74 '!=']: r#41
[#74 '%']: r#41
[#74 '&&']: r#41
[#74 '&']: r#41
[#74 ')']: r#41
[#74 '*']: r#41
[#74 '+']: r#41
[#74 ',']: r#41
[#74 '-']: r#41
[#74 '.']: r#41
[#74 '/']: r#41
[#74 ':']: r#41
[#74 ';']: r#41
[#74 '==']: r#41
[#74 '[']: r#41
[#74 ']']: r#41
[#74 '^']: r#41
[#74 '{']: r#41
[#74 '|']: r#41
[#74 '||']: r#41
[#74 /\u200B_greater_than/]: r#41
[#74 /\u200B_greater_than_equal/]: r#41
[#74 /\u200B_less_than/]: r#41
[#74 /\u200B_less_than_equal/]: r#41
[#74 /\u200B_shift_left/]: r#41
[#74 /\u200B_shift_right/]: r#41
[#74 /\u200B_template_args_end/]: r#41
[#75 '!=']: r#42
[#75 '%']: r#42
[#75 '&&']: r#42
[#75 '&']: r#42
[#75 ')']: r#42
[#75 '*']: r#42
[#75 '+']: r#42
[#75 ',']: r#42
[#75 '-']: r#42
[#75 '.']: r#42
[#75 '/']: r#42
[#75 ':']: r#42
[#75 ';']: r#42
[#75 '==']: r#42
[#75 '[']: r#42
[#75 ']']: r#42
[#75 '^']: r#42
[#75 '{']: r#42
[#75 '|']: r#42
[#75 '||']: r#42
[#75 /\u200B_greater_than/]: r#42
[#75 /\u200B_greater_than_equal/]: r#42
[#75 /\u200B_less_than/]: r#42
[#75 /\u200B_less_than_equal/]: r#42
[#75 /\u200B_shift_left/]: r#42
[#75 /\u200B_shift_right/]: r#42
[#75 /\u200B_template_args_end/]: r#42
[#76 '!=']: r#43
[#76 '%']: r#43
[#76 '&&']: r#43
[#76 '&']: r#43
[#76 ')']: r#43
[#76 '*']: r#43
[#76 '+']: r#43
[#76 ',']: r#43
[#76 '-']: r#43
[#76 '.']: r#43
[#76 '/']: r#43
[#76 ':']: r#43
[#76 ';']: r#43
[#76 '==']: r#43
[#76 '[']: r#43
[#76 ']']: r#43
[#76 '^']: r#43
[#76 '{']: r#43
[#76 '|']: r#43
[#76 '||']: r#43
[#76 /\u200B_greater_than/]: r#43
[#76 /\u200B_greater_than_equal/]: r#43
[#76 /\u200B_less_than/]: r#43
[#76 /\u200B_less_than_equal/]: r#43
[#76 /\u200B_shift_left/]: r#43
[#76 /\u200B_shift_right/]: r#43
[#76 /\u200B_template_args_end/]: r#43
[#77 '!=']: r#44
[#77 '%']: r#44
[#77 '&&']: r#44
[#77 '&']: r#44
[#77 ')']: r#44
[#77 '*']: r#44
[#77 '+']: r#44
[#77 ',']: r#44
[#77 '-']: r#44
[#77 '.']: r#44
[#77 '/']: r#44
[#77 ':']: r#44
[#77 ';']: r#44
[#77 '==']: r#44
[#77 '[']: r#44
[#77 ']']: r#44
[#77 '^']: r#44
[#77 '{']: r#44
[#77 '|']: r#44
[#77 '||']: r#44
[#77 /\u200B_greater_than/]: r#44
[#77 /\u200B_greater_than_equal/]: r#44
[#77 /\u200B_less_than/]: r#44
[#77 /\u200B_less_than_equal/]: r#44
[#77 /\u200B_shift_left/]: r#44
[#77 /\u200B_shift_right/]: r#44
[#77 /\u200B_template_args_end/]: r#44
[#78 '!=']: r#45
[#78 '%']: r#45
[#78 '&&']: r#45
[#78 '&']: r#45
[#78 ')']: r#45
[#78 '*']: r#45
[#78 '+']: r#45
[#78 ',']: r#45
[#78 '-']: r#45
[#78 '.']: r#45
[#78 '/']: r#45
[#78 ':']: r#45
[#78 ';']: r#45
[#78 '==']: r#45
[#78 '[']: r#45
[#78 ']']: r#45
[#78 '^']: r#45
[#78 '{']: r#45
[#78 '|']: r#45
[#78 '||']: r#45
[#78 /\u200B_greater_than/]: r#45
[#78 /\u200B_greater_than_equal/]: r#45
[#78 /\u200B_less_than/]: r#45
[#78 /\u200B_less_than_equal/]: r#45
[#78 /\u200B_shift_left/]: r#45
[#78 /\u200B_shift_right/]: r#45
[#78 /\u200B_template_args_end/]: r#45
[#79 '!=']: r#46
[#79 '%']: r#46
[#79 '&&']: r#46
[#79 '&']: r#46
[#79 ')']: r#46
[#79 '*']: r#46
[#79 '+']: r#46
[#79 ',']: r#46
[#79 '-']: r#46
[#79 '.']: r#46
[#79 '/']: r#46
[#79 ':']: r#46
[#79 ';']: r#46
[#79 '==']: r#46
[#79 '[']: r#46
[#79 ']']: r#46
[#79 '^']: r#46
[#79 '{']: r#46
[#79 '|']: r#46
[#79 '||']: r#46
[#79 /\u200B_greater_than/]: r#46
[#79 /\u200B_greater_than_equal/]: r#46
[#79 /\u200B_less_than/]: r#46
[#79 /\u200B_less_than_equal/]: r#46
[#79 /\u200B_shift_left/]: r#46
[#79 /\u200B_shift_right/]: r#46
[#79 /\u200B_template_args_end/]: r#46
[#80 '!=']: r#47
[#80 '%']: r#47
[#80 '&&']: r#47
[#80 '&']: r#47
[#80 ')']: r#47
[#80 '*']: r#47
[#80 '+']: r#47
[#80 ',']: r#47
[#80 '-']: r#47
[#80 '.']: r#47
[#80 '/']: r#47
[#80 ':']: r#47
[#80 ';']: r#47
[#80 '==']: r#47
[#80 '[']: r#47
[#80 ']']: r#47
[#80 '^']: r#47
[#80 '{']: r#47
[#80 '|']: r#47
[#80 '||']: r#47
[#80 /\u200B_greater_than/]: r#47
[#80 /\u200B_greater_than_equal/]: r#47
[#80 /\u200B_less_than/]: r#47
[#80 /\u200B_less_than_equal/]: r#47
[#80 /\u200B_shift_left/]: r#47
[#80 /\u200B_shift_right/]: r#47
[#80 /\u200B_template_args_end/]: r#47
[#81 '!=']: r#48
[#81 '%']: r#48
[#81 '&&']: r#48
[#81 '&']: r#48
[#81 ')']: r#48
[#81 '*']: r#48
[#81 '+']: r#48
[#81 ',']: r#48
[#81 '-']: r#48
[#81 '.']: r#48
[#81 '/']: r#48
[#81 ':']: r#48
[#81 ';']: r#48
[#81 '==']: r#48
[#81 '[']: r#48
[#81 ']']: r#48
[#81 '^']: r#48
[#81 '{']: r#48
[#81 '|']: r#48
[#81 '||']: r#48
[#81 /\u200B_greater_than/]: r#48
[#81 /\u200B_greater_than_equal/]: r#48
[#81 /\u200B_less_than/]: r#48
[#81 /\u200B_less_than_equal/]: r#48
[#81 /\u200B_shift_left/]: r#48
[#81 /\u200B_shift_right/]: r#48
[#81 /\u200B_template_args_end/]: r#48
[#82 '!=']: r#49
[#82 '%']: r#49
[#82 '&&']: r#49
[#82 '&']: r#49
[#82 ')']: r#49
[#82 '*']: r#49
[#82 '+']: r#49
[#82 ',']: r#49
[#82 '-']: r#49
[#82 '.']: r#49
[#82 '/']: r#49
[#82 ':']: r#49
[#82 ';']: r#49
[#82 '==']: r#49
[#82 '[']: r#49
[#82 ']']: r#49
[#82 '^']: r#49
[#82 '{']: r#49
[#82 '|']: r#49
[#82 '||']: r#49
[#82 /\u200B_greater_than/]: r#49
[#82 /\u200B_greater_than_equal/]: r#49
[#82 /\u200B_less_than/]: r#49
[#82 /\u200B_less_than_equal/]: r#49
[#82 /\u200B_shift_left/]: r#49
[#82 /\u200B_shift_right/]: r#49
[#82 /\u200B_template_args_end/]: r#49
[#83 '!=']: r#50
[#83 '%']: r#50
[#83 '&&']: r#50
[#83 '&']: r#50
[#83 ')']: r#50
[#83 '*']: r#50
[#83 '+']: r#50
[#83 ',']: r#50
[#83 '-']: r#50
[#83 '.']: r#50
[#83 '/']: r#50
[#83 ':']: r#50
[#83 ';']: r#50
[#83 '==']: r#50
[#83 '[']: r#50
[#83 ']']: r#50
[#83 '^']: r#50
[#83 '{']: r#50
[#83 '|']: r#50
[#83 '||']: r#50
[#83 /\u200B_greater_than/]: r#50
[#83 /\u200B_greater_than_equal/]: r#50
[#83 /\u200B_less_than/]: r#50
[#83 /\u200B_less_than_equal/]: r#50
[#83 /\u200B_shift_left/]: r#50
[#83 /\u200B_shift_right/]: r#50
[#83 /\u200B_template_args_end/]: r#50
[#84 '!=']: r#51
[#84 '%']: r#51
[#84 '&&']: r#51
[#84 '&']: r#51
[#84 ')']: r#51
[#84 '*']: r#51
[#84 '+']: r#51
[#84 ',']: r#51
[#84 '-']: r#51
[#84 '.']: r#51
[#84 '/']: r#51
[#84 ':']: r#51
[#84 ';']: r#51
[#84 '==']: r#51
[#84 '[']: r#51
[#84 ']']: r#51
[#84 '^']: r#51
[#84 '{']: r#51
[#84 '|']: r#51
[#84 '||']: r#51
[#84 /\u200B_greater_than/]: r#51
[#84 /\u200B_greater_than_equal/]: r#51
[#84 /\u200B_less_than/]: r#51
[#84 /\u200B_less_than_equal/]: r#51
[#84 /\u200B_shift_left/]: r#51
[#84 /\u200B_shift_right/]: r#51
[#84 /\u200B_template_args_end/]: r#51
[#85 '!=']: r#52
[#85 '%']: r#52
[#85 '&&']: r#52
[#85 '&']: r#52
[#85 ')']: r#52
[#85 '*']: r#52
[#85 '+']: r#52
[#85 ',']: r#52
[#85 '-']: r#52
[#85 '.']: r#52
[#85 '/']: r#52
[#85 ':']: r#52
[#85 ';']: r#52
[#85 '==']: r#52
[#85 '[']: r#52
[#85 ']']: r#52
[#85 '^']: r#52
[#85 '{']: r#52
[#85 '|']: r#52
[#85 '||']: r#52
[#85 /\u200B_greater_than/]: r#52
[#85 /\u200B_greater_than_equal/]: r#52
[#85 /\u200B_less_than/]: r#52
[#85 /\u200B_less_than_equal/]: r#52
[#85 /\u200B_shift_left/]: r#52
[#85 /\u200B_shift_right/]: r#52
[#85 /\u200B_template_args_end/]: r#52
[#86 '!=']: r#53
[#86 '%']: r#53
[#86 '&&']: r#53
[#86 '&']: r#53
[#86 ')']: r#53
[#86 '*']: r#53
[#86 '+']: r#53
[#86 ',']: r#53
[#86 '-']: r#53
[#86 '.']: r#53
[#86 '/']: r#53
[#86 ':']: r#53
[#86 ';']: r#53
[#86 '==']: r#53
[#86 '[']: r#53
[#86 ']']: r#53
[#86 '^']: r#53
[#86 '{']: r#53
[#86 '|']: r#53
[#86 '||']: r#53
[#86 /\u200B_greater_than/]: r#53
[#86 /\u200B_greater_than_equal/]: r#53
[#86 /\u200B_less_than/]: r#53
[#86 /\u200B_less_than_equal/]: r#53
[#86 /\u200B_shift_left/]: r#53
[#86 /\u200B_shift_right/]: r#53
[#86 /\u200B_template_args_end/]: r#53
[#87 '!=']: r#54
[#87 '%']: r#54
[#87 '&&']: r#54
[#87 '&']: r#54
[#87 ')']: r#54
[#87 '*']: r#54
[#87 '+']: r#54
[#87 ',']: r#54
[#87 '-']: r#54
[#87 '.']: r#54
[#87 '/']: r#54
[#87 ':']: r#54
[#87 ';']: r#54
[#87 '==']: r#54
[#87 '[']: r#54
[#87 ']']: r#54
[#87 '^']: r#54
[#87 '{']: r#54
[#87 '|']: r#54
[#87 '||']: r#54
[#87 /\u200B_greater_than/]: r#54
[#87 /\u200B_greater_than_equal/]: r#54
[#87 /\u200B_less_than/]: r#54
[#87 /\u200B_less_than_equal/]: r#54
[#87 /\u200B_shift_left/]: r#54
[#87 /\u200B_shift_right/]: r#54
[#87 /\u200B_template_args_end/]: r#54
[#88 '{']: s#125
[#89 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#90 '{']: s#122
[#91 '=']: s#120
[#92 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#93 '=']: s#118
[#94 ':']: s#117
[#95 '=']: s#115
[#96 /\u200B_disambiguate_template/]: s#113
[#97 ';']: r#55
[#97 '@']: r#55
[#97 'alias']: r#55
[#97 'const']: r#55
[#97 'const_assert']: r#55
[#97 'fn']: r#55
[#97 'override']: r#55
[#97 'struct']: r#55
[#97 'var']: r#55
[#97 EndOfText]: r#55
[#98 ';']: r#56
[#98 '@']: r#56
[#98 'alias']: r#56
[#98 'const']: r#56
[#98 'const_assert']: r#56
[#98 'fn']: r#56
[#98 'override']: r#56
[#98 'struct']: r#56
[#98 'var']: r#56
[#98 EndOfText]: r#56
[#99 ';']: r#57
[#99 '@']: r#57
[#99 'alias']: r#57
[#99 'const']: r#57
[#99 'const_assert']: r#57
[#99 'fn']: r#57
[#99 'override']: r#57
[#99 'struct']: r#57
[#99 'var']: r#57
[#99 EndOfText]: r#57
[#100 ';']: r#58
[#100 '@']: r#58
[#100 'alias']: r#58
[#100 'const']: r#58
[#100 'const_assert']: r#58
[#100 'fn']: r#58
[#100 'override']: r#58
[#100 'struct']: r#58
[#100 'var']: r#58
[#100 EndOfText]: r#58
[#101 EndOfText]: r#59
[#102 ';']: r#60
[#102 '@']: r#60
[#102 'alias']: r#60
[#102 'const']: r#60
[#102 'const_assert']: r#60
[#102 'enable']: r#60
[#102 'fn']: r#60
[#102 'override']: r#60
[#102 'requires']: r#60
[#102 'struct']: r#60
[#102 'var']: r#60
[#102 EndOfText]: r#60
[#103 ',']: s#111
[#104 ',']: r#61
[#104 ';']: r#61
[#105 ',']: s#106
[#106 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#11
[#107 ';']: r#62
[#107 '@']: r#62
[#107 'alias']: r#62
[#107 'const']: r#62
[#107 'const_assert']: r#62
[#107 'enable']: r#62
[#107 'fn']: r#62
[#107 'override']: r#62
[#107 'requires']: r#62
[#107 'struct']: r#62
[#107 'var']: r#62
[#107 EndOfText]: r#62
[#108 ',']: r#63
[#108 ';']: r#63
[#109 ',']: r#64
[#109 ';']: r#64
[#110 ';']: r#65
[#111 ';']: r#66
[#112 /\u200B_template_args_start/]: s#203
[#113 '!=']: r#67
[#113 '%']: r#67
[#113 '%=']: r#67
[#113 '&&']: r#67
[#113 '&']: r#67
[#113 '&=']: r#67
[#113 '(']: r#67
[#113 ')']: r#67
[#113 '*']: r#67
[#113 '*=']: r#67
[#113 '+']: r#67
[#113 '++']: r#67
[#113 '+=']: r#67
[#113 ',']: r#67
[#113 '-']: r#67
[#113 '--']: r#67
[#113 '-=']: r#67
[#113 '.']: r#67
[#113 '/']: r#67
[#113 '/=']: r#67
[#113 ':']: r#67
[#113 ';']: r#67
[#113 '=']: r#67
[#113 '==']: r#67
[#113 '[']: r#67
[#113 ']']: r#67
[#113 '^']: r#67
[#113 '^=']: r#67
[#113 '{']: r#67
[#113 '|']: r#67
[#113 '|=']: r#67
[#113 '||']: r#67
[#113 '}']: r#67
[#113 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#67
[#113 /\u200B_disambiguate_template/]: r#67
[#113 /\u200B_greater_than/]: r#67
[#113 /\u200B_greater_than_equal/]: r#67
[#113 /\u200B_less_than/]: r#67
[#113 /\u200B_less_than_equal/]: r#67
[#113 /\u200B_shift_left/]: r#67
[#113 /\u200B_shift_left_assign/]: r#67
[#113 /\u200B_shift_right/]: r#67
[#113 /\u200B_shift_right_assign/]: r#67
[#113 /\u200B_template_args_end/]: r#67
[#113 /\u200B_template_args_start/]: r#67
[#114 ';']: r#68
[#115 '!']: s#56
[#115 '&']: s#59
[#115 '(']: s#69
[#115 '*']: s#58
[#115 '-']: s#55
[#115 'false']: s#76
[#115 'true']: s#75
[#115 '~']: s#57
[#115 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#115 /0[fh]/]: s#80
[#115 /0[iu]?/]: s#77
[#115 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#115 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#115 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#115 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#115 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#115 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#115 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#115 /[1-9][0-9]*[fh]/]: s#81
[#115 /[1-9][0-9]*[iu]?/]: s#78
[#116 ';']: r#69
[#116 '=']: r#69
[#117 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#118 '!']: s#56
[#118 '&']: s#59
[#118 '(']: s#69
[#118 '*']: s#58
[#118 '-']: s#55
[#118 'false']: s#76
[#118 'true']: s#75
[#118 '~']: s#57
[#118 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#118 /0[fh]/]: s#80
[#118 /0[iu]?/]: s#77
[#118 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#118 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#118 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#118 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#118 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#118 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#118 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#118 /[1-9][0-9]*[fh]/]: s#81
[#118 /[1-9][0-9]*[iu]?/]: s#78
[#119 '=']: s#254
[#120 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#121 ';']: r#70
[#121 '@']: r#70
[#121 'alias']: r#70
[#121 'const']: r#70
[#121 'const_assert']: r#70
[#121 'fn']: r#70
[#121 'override']: r#70
[#121 'struct']: r#70
[#121 'var']: r#70
[#121 EndOfText]: r#70
[#122 '@']: s#36
[#123 '(']: s#246
[#124 ';']: r#71
[#124 '@']: r#71
[#124 'alias']: r#71
[#124 'const']: r#71
[#124 'const_assert']: r#71
[#124 'fn']: r#71
[#124 'override']: r#71
[#124 'struct']: r#71
[#124 'var']: r#71
[#124 EndOfText]: r#71
[#125 '&']: s#244
[#125 '(']: s#245
[#125 '*']: s#243
[#125 ';']: s#208
[#125 '_']: s#241
[#125 'break']: s#233
[#125 'const']: s#232
[#125 'const_assert']: s#31
[#125 'continue']: s#234
[#125 'discard']: s#219
[#125 'for']: s#227
[#125 'if']: s#238
[#125 'let']: s#231
[#125 'loop']: s#226
[#125 'return']: s#223
[#125 'switch']: s#225
[#125 'var']: s#96
[#125 'while']: s#228
[#125 '{']: s#125
[#125 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#126 '(']: r#72
[#126 ':']: r#72
[#126 ';']: r#72
[#126 '=']: r#72
[#126 '{']: r#72
[#126 /\u200B_disambiguate_template/]: r#72
[#127 ')']: s#204
[#128 /\u200B_template_args_start/]: s#203
[#129 '!=']: r#73
[#129 '%']: r#73
[#129 '&&']: r#73
[#129 '&']: r#73
[#129 ')']: r#73
[#129 '*']: r#73
[#129 '+']: r#73
[#129 ',']: r#73
[#129 '-']: r#73
[#129 '.']: r#73
[#129 '/']: r#73
[#129 ':']: r#73
[#129 ';']: r#73
[#129 '==']: r#73
[#129 '[']: r#73
[#129 ']']: r#73
[#129 '^']: r#73
[#129 '{']: r#73
[#129 '|']: r#73
[#129 '||']: r#73
[#129 /\u200B_greater_than/]: r#73
[#129 /\u200B_greater_than_equal/]: r#73
[#129 /\u200B_less_than/]: r#73
[#129 /\u200B_less_than_equal/]: r#73
[#129 /\u200B_shift_left/]: r#73
[#129 /\u200B_shift_right/]: r#73
[#129 /\u200B_template_args_end/]: r#73
[#130 '!']: s#56
[#130 '&']: s#59
[#130 '(']: s#69
[#130 '*']: s#58
[#130 '-']: s#55
[#130 'false']: s#76
[#130 'true']: s#75
[#130 '~']: s#57
[#130 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#130 /0[fh]/]: s#80
[#130 /0[iu]?/]: s#77
[#130 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#130 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#130 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#130 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#130 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#130 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#130 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#130 /[1-9][0-9]*[fh]/]: s#81
[#130 /[1-9][0-9]*[iu]?/]: s#78
[#131 '!=']: r#74
[#131 '%']: r#74
[#131 '&&']: r#74
[#131 '&']: r#74
[#131 ')']: r#74
[#131 '*']: r#74
[#131 '+']: r#74
[#131 ',']: r#74
[#131 '-']: r#74
[#131 '/']: r#74
[#131 ':']: r#74
[#131 ';']: r#74
[#131 '==']: r#74
[#131 ']']: r#74
[#131 '^']: r#74
[#131 '{']: r#74
[#131 '|']: r#74
[#131 '||']: r#74
[#131 /\u200B_greater_than/]: r#74
[#131 /\u200B_greater_than_equal/]: r#74
[#131 /\u200B_less_than/]: r#74
[#131 /\u200B_less_than_equal/]: r#74
[#131 /\u200B_shift_left/]: r#74
[#131 /\u200B_shift_right/]: r#74
[#131 /\u200B_template_args_end/]: r#74
[#132 '!=']: r#75
[#132 '%']: r#75
[#132 '&&']: r#75
[#132 '&']: r#75
[#132 ')']: r#75
[#132 '*']: r#75
[#132 '+']: r#75
[#132 ',']: r#75
[#132 '-']: r#75
[#132 '/']: r#75
[#132 ':']: r#75
[#132 ';']: r#75
[#132 '==']: r#75
[#132 ']']: r#75
[#132 '^']: r#75
[#132 '{']: r#75
[#132 '|']: r#75
[#132 '||']: r#75
[#132 /\u200B_greater_than/]: r#75
[#132 /\u200B_greater_than_equal/]: r#75
[#132 /\u200B_less_than/]: r#75
[#132 /\u200B_less_than_equal/]: r#75
[#132 /\u200B_shift_left/]: r#75
[#132 /\u200B_shift_right/]: r#75
[#132 /\u200B_template_args_end/]: r#75
[#133 '!']: s#56
[#133 '&']: s#59
[#133 '(']: s#69
[#133 '*']: s#58
[#133 '-']: s#55
[#133 'false']: s#76
[#133 'true']: s#75
[#133 '~']: s#57
[#133 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#133 /0[fh]/]: s#80
[#133 /0[iu]?/]: s#77
[#133 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#133 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#133 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#133 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#133 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#133 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#133 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#133 /[1-9][0-9]*[fh]/]: s#81
[#133 /[1-9][0-9]*[iu]?/]: s#78
[#134 '/[rgba]/']: s#188
[#134 '/[rgba][rgba]/']: s#189
[#134 '/[rgba][rgba][rgba]/']: s#190
[#134 '/[rgba][rgba][rgba][rgba]/']: s#191
[#134 '/[xyzw]/']: s#192
[#134 '/[xyzw][xyzw]/']: s#193
[#134 '/[xyzw][xyzw][xyzw]/']: s#194
[#134 '/[xyzw][xyzw][xyzw][xyzw]/']: s#195
[#134 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#187
[#135 '!=']: r#76
[#135 '%']: r#76
[#135 '&&']: r#76
[#135 '&']: r#76
[#135 ')']: r#76
[#135 '*']: r#76
[#135 '+']: r#76
[#135 ',']: r#76
[#135 '-']: r#76
[#135 '/']: r#76
[#135 ':']: r#76
[#135 ';']: r#76
[#135 '==']: r#76
[#135 ']']: r#76
[#135 '^']: r#76
[#135 '{']: r#76
[#135 '|']: r#76
[#135 '||']: r#76
[#135 /\u200B_greater_than/]: r#76
[#135 /\u200B_greater_than_equal/]: r#76
[#135 /\u200B_less_than/]: r#76
[#135 /\u200B_less_than_equal/]: r#76
[#135 /\u200B_shift_left/]: r#76
[#135 /\u200B_shift_right/]: r#76
[#135 /\u200B_template_args_end/]: r#76
[#136 '!=']: r#77
[#136 '%']: r#77
[#136 '&&']: r#77
[#136 '&']: r#77
[#136 ')']: r#77
[#136 '*']: r#77
[#136 '+']: r#77
[#136 ',']: r#77
[#136 '-']: r#77
[#136 '/']: r#77
[#136 ':']: r#77
[#136 ';']: r#77
[#136 '==']: r#77
[#136 ']']: r#77
[#136 '^']: r#77
[#136 '{']: r#77
[#136 '|']: r#77
[#136 '||']: r#77
[#136 /\u200B_greater_than/]: r#77
[#136 /\u200B_greater_than_equal/]: r#77
[#136 /\u200B_less_than/]: r#77
[#136 /\u200B_less_than_equal/]: r#77
[#136 /\u200B_shift_left/]: r#77
[#136 /\u200B_shift_right/]: r#77
[#136 /\u200B_template_args_end/]: r#77
[#137 '!=']: r#78
[#137 '%']: r#78
[#137 '&&']: r#78
[#137 '&']: r#78
[#137 ')']: r#78
[#137 '*']: r#78
[#137 '+']: r#78
[#137 ',']: r#78
[#137 '-']: r#78
[#137 '/']: r#78
[#137 ':']: r#78
[#137 ';']: r#78
[#137 '==']: r#78
[#137 ']']: r#78
[#137 '^']: r#78
[#137 '{']: r#78
[#137 '|']: r#78
[#137 '||']: r#78
[#137 /\u200B_greater_than/]: r#78
[#137 /\u200B_greater_than_equal/]: r#78
[#137 /\u200B_less_than/]: r#78
[#137 /\u200B_less_than_equal/]: r#78
[#137 /\u200B_shift_left/]: r#78
[#137 /\u200B_shift_right/]: r#78
[#137 /\u200B_template_args_end/]: r#78
[#138 '!=']: r#79
[#138 '%']: r#79
[#138 '&&']: r#79
[#138 '&']: r#79
[#138 ')']: r#79
[#138 '*']: r#79
[#138 '+']: r#79
[#138 ',']: r#79
[#138 '-']: r#79
[#138 '/']: r#79
[#138 ':']: r#79
[#138 ';']: r#79
[#138 '==']: r#79
[#138 ']']: r#79
[#138 '^']: r#79
[#138 '{']: r#79
[#138 '|']: r#79
[#138 '||']: r#79
[#138 /\u200B_greater_than/]: r#79
[#138 /\u200B_greater_than_equal/]: r#79
[#138 /\u200B_less_than/]: r#79
[#138 /\u200B_less_than_equal/]: r#79
[#138 /\u200B_shift_left/]: r#79
[#138 /\u200B_shift_right/]: r#79
[#138 /\u200B_template_args_end/]: r#79
[#139 '!=']: r#80
[#139 '%']: r#80
[#139 '&&']: r#80
[#139 '&']: r#80
[#139 ')']: r#80
[#139 '*']: r#80
[#139 '+']: r#80
[#139 ',']: r#80
[#139 '-']: r#80
[#139 '/']: r#80
[#139 ':']: r#80
[#139 ';']: r#80
[#139 '==']: r#80
[#139 ']']: r#80
[#139 '^']: r#80
[#139 '{']: r#80
[#139 '|']: r#80
[#139 '||']: r#80
[#139 /\u200B_greater_than/]: r#80
[#139 /\u200B_greater_than_equal/]: r#80
[#139 /\u200B_less_than/]: r#80
[#139 /\u200B_less_than_equal/]: r#80
[#139 /\u200B_shift_left/]: r#80
[#139 /\u200B_shift_right/]: r#80
[#139 /\u200B_template_args_end/]: r#80
[#140 '!']: s#56
[#140 '&']: s#59
[#140 '(']: s#69
[#140 '*']: s#58
[#140 '-']: s#55
[#140 'false']: s#76
[#140 'true']: s#75
[#140 '~']: s#57
[#140 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#140 /0[fh]/]: s#80
[#140 /0[iu]?/]: s#77
[#140 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#140 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#140 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#140 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#140 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#140 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#140 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#140 /[1-9][0-9]*[fh]/]: s#81
[#140 /[1-9][0-9]*[iu]?/]: s#78
[#141 '!']: r#81
[#141 '&']: r#81
[#141 '(']: r#81
[#141 '*']: r#81
[#141 '-']: r#81
[#141 'false']: r#81
[#141 'true']: r#81
[#141 '~']: r#81
[#141 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#81
[#141 /0[fh]/]: r#81
[#141 /0[iu]?/]: r#81
[#141 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#81
[#141 /0[xX][0-9a-fA-F]+[iu]?/]: r#81
[#141 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#81
[#141 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#81
[#141 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#81
[#141 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#81
[#141 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#81
[#141 /[1-9][0-9]*[fh]/]: r#81
[#141 /[1-9][0-9]*[iu]?/]: r#81
[#142 '!']: r#82
[#142 '&']: r#82
[#142 '(']: r#82
[#142 '*']: r#82
[#142 '-']: r#82
[#142 'false']: r#82
[#142 'true']: r#82
[#142 '~']: r#82
[#142 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#82
[#142 /0[fh]/]: r#82
[#142 /0[iu]?/]: r#82
[#142 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#82
[#142 /0[xX][0-9a-fA-F]+[iu]?/]: r#82
[#142 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#82
[#142 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#82
[#142 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#82
[#142 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#82
[#142 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#82
[#142 /[1-9][0-9]*[fh]/]: r#82
[#142 /[1-9][0-9]*[iu]?/]: r#82
[#143 '!']: r#83
[#143 '&']: r#83
[#143 '(']: r#83
[#143 '*']: r#83
[#143 '-']: r#83
[#143 'false']: r#83
[#143 'true']: r#83
[#143 '~']: r#83
[#143 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#83
[#143 /0[fh]/]: r#83
[#143 /0[iu]?/]: r#83
[#143 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#83
[#143 /0[xX][0-9a-fA-F]+[iu]?/]: r#83
[#143 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#83
[#143 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#83
[#143 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#83
[#143 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#83
[#143 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#83
[#143 /[1-9][0-9]*[fh]/]: r#83
[#143 /[1-9][0-9]*[iu]?/]: r#83
[#144 '!']: s#56
[#144 '&']: s#59
[#144 '(']: s#69
[#144 '*']: s#58
[#144 '-']: s#55
[#144 'false']: s#76
[#144 'true']: s#75
[#144 '~']: s#57
[#144 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#144 /0[fh]/]: s#80
[#144 /0[iu]?/]: s#77
[#144 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#144 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#144 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#144 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#144 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#144 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#144 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#144 /[1-9][0-9]*[fh]/]: s#81
[#144 /[1-9][0-9]*[iu]?/]: s#78
[#145 '!']: s#56
[#145 '&']: s#59
[#145 '(']: s#69
[#145 '*']: s#58
[#145 '-']: s#55
[#145 'false']: s#76
[#145 'true']: s#75
[#145 '~']: s#57
[#145 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#145 /0[fh]/]: s#80
[#145 /0[iu]?/]: s#77
[#145 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#145 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#145 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#145 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#145 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#145 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#145 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#145 /[1-9][0-9]*[fh]/]: s#81
[#145 /[1-9][0-9]*[iu]?/]: s#78
[#146 '!']: r#84
[#146 '&']: r#84
[#146 '(']: r#84
[#146 '*']: r#84
[#146 '-']: r#84
[#146 'false']: r#84
[#146 'true']: r#84
[#146 '~']: r#84
[#146 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#84
[#146 /0[fh]/]: r#84
[#146 /0[iu]?/]: r#84
[#146 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#84
[#146 /0[xX][0-9a-fA-F]+[iu]?/]: r#84
[#146 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#84
[#146 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#84
[#146 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#84
[#146 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#84
[#146 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#84
[#146 /[1-9][0-9]*[fh]/]: r#84
[#146 /[1-9][0-9]*[iu]?/]: r#84
[#147 '!']: r#85
[#147 '&']: r#85
[#147 '(']: r#85
[#147 '*']: r#85
[#147 '-']: r#85
[#147 'false']: r#85
[#147 'true']: r#85
[#147 '~']: r#85
[#147 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#85
[#147 /0[fh]/]: r#85
[#147 /0[iu]?/]: r#85
[#147 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#85
[#147 /0[xX][0-9a-fA-F]+[iu]?/]: r#85
[#147 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#85
[#147 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#85
[#147 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#85
[#147 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#85
[#147 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#85
[#147 /[1-9][0-9]*[fh]/]: r#85
[#147 /[1-9][0-9]*[iu]?/]: r#85
[#148 '!']: s#56
[#148 '&']: s#59
[#148 '(']: s#69
[#148 '*']: s#58
[#148 '-']: s#55
[#148 'false']: s#76
[#148 'true']: s#75
[#148 '~']: s#57
[#148 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#148 /0[fh]/]: s#80
[#148 /0[iu]?/]: s#77
[#148 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#148 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#148 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#148 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#148 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#148 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#148 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#148 /[1-9][0-9]*[fh]/]: s#81
[#148 /[1-9][0-9]*[iu]?/]: s#78
[#149 '!']: r#86
[#149 '&']: r#86
[#149 '(']: r#86
[#149 '*']: r#86
[#149 '-']: r#86
[#149 'false']: r#86
[#149 'true']: r#86
[#149 '~']: r#86
[#149 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#86
[#149 /0[fh]/]: r#86
[#149 /0[iu]?/]: r#86
[#149 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#86
[#149 /0[xX][0-9a-fA-F]+[iu]?/]: r#86
[#149 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#86
[#149 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#86
[#149 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#86
[#149 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#86
[#149 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#86
[#149 /[1-9][0-9]*[fh]/]: r#86
[#149 /[1-9][0-9]*[iu]?/]: r#86
[#150 '!']: r#87
[#150 '&']: r#87
[#150 '(']: r#87
[#150 '*']: r#87
[#150 '-']: r#87
[#150 'false']: r#87
[#150 'true']: r#87
[#150 '~']: r#87
[#150 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#87
[#150 /0[fh]/]: r#87
[#150 /0[iu]?/]: r#87
[#150 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#87
[#150 /0[xX][0-9a-fA-F]+[iu]?/]: r#87
[#150 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#87
[#150 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#87
[#150 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#87
[#150 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#87
[#150 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#87
[#150 /[1-9][0-9]*[fh]/]: r#87
[#150 /[1-9][0-9]*[iu]?/]: r#87
[#151 '!']: s#56
[#151 '&']: s#59
[#151 '(']: s#69
[#151 '*']: s#58
[#151 '-']: s#55
[#151 'false']: s#76
[#151 'true']: s#75
[#151 '~']: s#57
[#151 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#151 /0[fh]/]: s#80
[#151 /0[iu]?/]: s#77
[#151 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#151 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#151 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#151 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#151 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#151 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#151 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#151 /[1-9][0-9]*[fh]/]: s#81
[#151 /[1-9][0-9]*[iu]?/]: s#78
[#152 '!']: s#56
[#152 '&']: s#59
[#152 '(']: s#69
[#152 '*']: s#58
[#152 '-']: s#55
[#152 'false']: s#76
[#152 'true']: s#75
[#152 '~']: s#57
[#152 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#152 /0[fh]/]: s#80
[#152 /0[iu]?/]: s#77
[#152 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#152 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#152 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#152 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#152 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#152 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#152 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#152 /[1-9][0-9]*[fh]/]: s#81
[#152 /[1-9][0-9]*[iu]?/]: s#78
[#153 '!']: s#56
[#153 '&']: s#59
[#153 '(']: s#69
[#153 '*']: s#58
[#153 '-']: s#55
[#153 'false']: s#76
[#153 'true']: s#75
[#153 '~']: s#57
[#153 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#153 /0[fh]/]: s#80
[#153 /0[iu]?/]: s#77
[#153 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#153 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#153 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#153 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#153 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#153 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#153 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#153 /[1-9][0-9]*[fh]/]: s#81
[#153 /[1-9][0-9]*[iu]?/]: s#78
[#154 '!']: s#56
[#154 '&']: s#59
[#154 '(']: s#69
[#154 '*']: s#58
[#154 '-']: s#55
[#154 'false']: s#76
[#154 'true']: s#75
[#154 '~']: s#57
[#154 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#154 /0[fh]/]: s#80
[#154 /0[iu]?/]: s#77
[#154 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#154 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#154 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#154 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#154 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#154 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#154 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#154 /[1-9][0-9]*[fh]/]: s#81
[#154 /[1-9][0-9]*[iu]?/]: s#78
[#155 '!']: s#56
[#155 '&']: s#59
[#155 '(']: s#69
[#155 '*']: s#58
[#155 '-']: s#55
[#155 'false']: s#76
[#155 'true']: s#75
[#155 '~']: s#57
[#155 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#155 /0[fh]/]: s#80
[#155 /0[iu]?/]: s#77
[#155 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#155 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#155 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#155 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#155 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#155 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#155 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#155 /[1-9][0-9]*[fh]/]: s#81
[#155 /[1-9][0-9]*[iu]?/]: s#78
[#156 '!']: s#56
[#156 '&']: s#59
[#156 '(']: s#69
[#156 '*']: s#58
[#156 '-']: s#55
[#156 'false']: s#76
[#156 'true']: s#75
[#156 '~']: s#57
[#156 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#156 /0[fh]/]: s#80
[#156 /0[iu]?/]: s#77
[#156 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#156 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#156 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#156 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#156 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#156 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#156 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#156 /[1-9][0-9]*[fh]/]: s#81
[#156 /[1-9][0-9]*[iu]?/]: s#78
[#157 '!']: s#56
[#157 '&']: s#59
[#157 '(']: s#69
[#157 '*']: s#58
[#157 '-']: s#55
[#157 'false']: s#76
[#157 'true']: s#75
[#157 '~']: s#57
[#157 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#157 /0[fh]/]: s#80
[#157 /0[iu]?/]: s#77
[#157 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#157 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#157 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#157 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#157 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#157 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#157 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#157 /[1-9][0-9]*[fh]/]: s#81
[#157 /[1-9][0-9]*[iu]?/]: s#78
[#158 '!']: s#56
[#158 '&']: s#59
[#158 '(']: s#69
[#158 '*']: s#58
[#158 '-']: s#55
[#158 'false']: s#76
[#158 'true']: s#75
[#158 '~']: s#57
[#158 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#158 /0[fh]/]: s#80
[#158 /0[iu]?/]: s#77
[#158 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#158 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#158 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#158 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#158 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#158 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#158 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#158 /[1-9][0-9]*[fh]/]: s#81
[#158 /[1-9][0-9]*[iu]?/]: s#78
[#159 '!']: s#56
[#159 '&']: s#59
[#159 '(']: s#69
[#159 '*']: s#58
[#159 '-']: s#55
[#159 'false']: s#76
[#159 'true']: s#75
[#159 '~']: s#57
[#159 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#159 /0[fh]/]: s#80
[#159 /0[iu]?/]: s#77
[#159 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#159 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#159 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#159 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#159 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#159 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#159 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#159 /[1-9][0-9]*[fh]/]: s#81
[#159 /[1-9][0-9]*[iu]?/]: s#78
[#160 '!']: r#88
[#160 '&']: r#88
[#160 '(']: r#88
[#160 '*']: r#88
[#160 '-']: r#88
[#160 'false']: r#88
[#160 'true']: r#88
[#160 '~']: r#88
[#160 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#88
[#160 /0[fh]/]: r#88
[#160 /0[iu]?/]: r#88
[#160 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#88
[#160 /0[xX][0-9a-fA-F]+[iu]?/]: r#88
[#160 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#88
[#160 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#88
[#160 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#88
[#160 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#88
[#160 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#88
[#160 /[1-9][0-9]*[fh]/]: r#88
[#160 /[1-9][0-9]*[iu]?/]: r#88
[#161 '!']: r#89
[#161 '&']: r#89
[#161 '(']: r#89
[#161 '*']: r#89
[#161 '-']: r#89
[#161 'false']: r#89
[#161 'true']: r#89
[#161 '~']: r#89
[#161 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#89
[#161 /0[fh]/]: r#89
[#161 /0[iu]?/]: r#89
[#161 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#89
[#161 /0[xX][0-9a-fA-F]+[iu]?/]: r#89
[#161 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#89
[#161 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#89
[#161 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#89
[#161 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#89
[#161 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#89
[#161 /[1-9][0-9]*[fh]/]: r#89
[#161 /[1-9][0-9]*[iu]?/]: r#89
[#162 '!']: r#90
[#162 '&']: r#90
[#162 '(']: r#90
[#162 '*']: r#90
[#162 '-']: r#90
[#162 'false']: r#90
[#162 'true']: r#90
[#162 '~']: r#90
[#162 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#90
[#162 /0[fh]/]: r#90
[#162 /0[iu]?/]: r#90
[#162 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#90
[#162 /0[xX][0-9a-fA-F]+[iu]?/]: r#90
[#162 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#90
[#162 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#90
[#162 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#90
[#162 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#90
[#162 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#90
[#162 /[1-9][0-9]*[fh]/]: r#90
[#162 /[1-9][0-9]*[iu]?/]: r#90
[#163 '!']: r#91
[#163 '&']: r#91
[#163 '(']: r#91
[#163 '*']: r#91
[#163 '-']: r#91
[#163 'false']: r#91
[#163 'true']: r#91
[#163 '~']: r#91
[#163 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#91
[#163 /0[fh]/]: r#91
[#163 /0[iu]?/]: r#91
[#163 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#91
[#163 /0[xX][0-9a-fA-F]+[iu]?/]: r#91
[#163 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#91
[#163 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#91
[#163 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#91
[#163 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#91
[#163 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#91
[#163 /[1-9][0-9]*[fh]/]: r#91
[#163 /[1-9][0-9]*[iu]?/]: r#91
[#164 '!']: s#56
[#164 '&']: s#59
[#164 '(']: s#69
[#164 '*']: s#58
[#164 '-']: s#55
[#164 'false']: s#76
[#164 'true']: s#75
[#164 '~']: s#57
[#164 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#164 /0[fh]/]: s#80
[#164 /0[iu]?/]: s#77
[#164 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#164 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#164 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#164 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#164 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#164 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#164 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#164 /[1-9][0-9]*[fh]/]: s#81
[#164 /[1-9][0-9]*[iu]?/]: s#78
[#165 '!']: s#56
[#165 '&']: s#59
[#165 '(']: s#69
[#165 '*']: s#58
[#165 '-']: s#55
[#165 'false']: s#76
[#165 'true']: s#75
[#165 '~']: s#57
[#165 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#165 /0[fh]/]: s#80
[#165 /0[iu]?/]: s#77
[#165 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#165 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#165 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#165 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#165 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#165 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#165 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#165 /[1-9][0-9]*[fh]/]: s#81
[#165 /[1-9][0-9]*[iu]?/]: s#78
[#166 '@']: r#92
[#166 'fn']: r#92
[#166 'override']: r#92
[#166 'var']: r#92
[#166 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#92
[#167 '@']: r#93
[#167 'fn']: r#93
[#167 'override']: r#93
[#167 'var']: r#93
[#167 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#93
[#168 ')']: r#94
[#168 ',']: r#94
[#168 ':']: r#94
[#168 ';']: r#94
[#168 ']']: r#94
[#168 '{']: r#94
[#168 '||']: r#95
[#169 '!=']: r#28
[#169 '%']: r#28
[#169 '&&']: r#28
[#169 ')']: r#28
[#169 '*']: r#28
[#169 '+']: r#28
[#169 ',']: r#28
[#169 '-']: r#28
[#169 '/']: r#28
[#169 ':']: r#28
[#169 ';']: r#28
[#169 '==']: r#28
[#169 ']']: r#28
[#169 '{']: r#28
[#169 '||']: r#28
[#169 /\u200B_greater_than/]: r#28
[#169 /\u200B_greater_than_equal/]: r#28
[#169 /\u200B_less_than/]: r#28
[#169 /\u200B_less_than_equal/]: r#28
[#169 /\u200B_shift_left/]: s#146
[#169 /\u200B_shift_right/]: s#147
[#169 /\u200B_template_args_end/]: r#28
[#170 '&&']: r#97
[#170 ')']: r#96
[#170 ',']: r#96
[#170 ':']: r#96
[#170 ';']: r#96
[#170 ']']: r#96
[#170 '{']: r#96
[#171 '&&']: r#98
[#171 ')']: r#98
[#171 ',']: r#98
[#171 ':']: r#98
[#171 ';']: r#98
[#171 ']']: r#98
[#171 '{']: r#98
[#171 '||']: r#98
[#171 /\u200B_template_args_end/]: r#98
[#172 '&&']: r#99
[#172 ')']: r#99
[#172 ',']: r#99
[#172 ':']: r#99
[#172 ';']: r#99
[#172 ']']: r#99
[#172 '{']: r#99
[#172 '||']: r#99
[#172 /\u200B_template_args_end/]: r#99
[#173 '&&']: r#100
[#173 ')']: r#100
[#173 ',']: r#100
[#173 ':']: r#100
[#173 ';']: r#100
[#173 ']']: r#100
[#173 '{']: r#100
[#173 '||']: r#100
[#173 /\u200B_template_args_end/]: r#100
[#174 '&&']: r#101
[#174 ')']: r#101
[#174 ',']: r#101
[#174 ':']: r#101
[#174 ';']: r#101
[#174 ']']: r#101
[#174 '{']: r#101
[#174 '||']: r#101
[#174 /\u200B_template_args_end/]: r#101
[#175 '&&']: r#102
[#175 ')']: r#102
[#175 ',']: r#102
[#175 ':']: r#102
[#175 ';']: r#102
[#175 ']']: r#102
[#175 '{']: r#102
[#175 '||']: r#102
[#175 /\u200B_template_args_end/]: r#102
[#176 '&&']: r#103
[#176 ')']: r#103
[#176 ',']: r#103
[#176 ':']: r#103
[#176 ';']: r#103
[#176 ']']: r#103
[#176 '{']: r#103
[#176 '||']: r#103
[#176 /\u200B_template_args_end/]: r#103
[#177 '&']: r#105
[#177 ')']: r#104
[#177 ',']: r#104
[#177 ':']: r#104
[#177 ';']: r#104
[#177 ']']: r#104
[#177 '{']: r#104
[#177 /\u200B_template_args_end/]: r#104
[#178 ')']: r#106
[#178 ',']: r#106
[#178 ':']: r#106
[#178 ';']: r#106
[#178 ']']: r#106
[#178 '{']: r#106
[#178 '|']: r#107
[#178 /\u200B_template_args_end/]: r#106
[#179 ')']: r#108
[#179 ',']: r#108
[#179 ':']: r#108
[#179 ';']: r#108
[#179 ']']: r#108
[#179 '^']: r#109
[#179 '{']: r#108
[#179 /\u200B_template_args_end/]: r#108
[#180 '!=']: r#110
[#180 '%']: s#143
[#180 '&&']: r#110
[#180 ')']: r#110
[#180 '*']: s#141
[#180 '+']: r#110
[#180 ',']: r#110
[#180 '-']: r#110
[#180 '/']: s#142
[#180 ':']: r#110
[#180 ';']: r#110
[#180 '==']: r#110
[#180 ']']: r#110
[#180 '{']: r#110
[#180 '||']: r#110
[#180 /\u200B_greater_than/]: r#110
[#180 /\u200B_greater_than_equal/]: r#110
[#180 /\u200B_less_than/]: r#110
[#180 /\u200B_less_than_equal/]: r#110
[#180 /\u200B_template_args_end/]: r#110
[#181 '!=']: r#28
[#181 '%']: r#28
[#181 '&&']: r#28
[#181 ')']: r#28
[#181 '*']: r#28
[#181 '+']: r#28
[#181 ',']: r#28
[#181 '-']: r#28
[#181 '/']: r#28
[#181 ':']: r#28
[#181 ';']: r#28
[#181 '==']: r#28
[#181 ']']: r#28
[#181 '{']: r#28
[#181 '||']: r#28
[#181 /\u200B_greater_than/]: r#28
[#181 /\u200B_greater_than_equal/]: r#28
[#181 /\u200B_less_than/]: r#28
[#181 /\u200B_less_than_equal/]: r#28
[#181 /\u200B_template_args_end/]: r#28
[#182 '!=']: r#111
[#182 '&&']: r#111
[#182 ')']: r#111
[#182 ',']: r#111
[#182 ':']: r#111
[#182 ';']: r#111
[#182 '==']: r#111
[#182 ']']: r#111
[#182 '{']: r#111
[#182 '||']: r#111
[#182 /\u200B_greater_than/]: r#111
[#182 /\u200B_greater_than_equal/]: r#111
[#182 /\u200B_less_than/]: r#111
[#182 /\u200B_less_than_equal/]: r#111
[#182 /\u200B_template_args_end/]: r#111
[#183 '!=']: r#112
[#183 '&&']: r#112
[#183 ')']: r#112
[#183 ',']: r#112
[#183 ':']: r#112
[#183 ';']: r#112
[#183 '==']: r#112
[#183 ']']: r#112
[#183 '{']: r#112
[#183 '||']: r#112
[#183 /\u200B_greater_than/]: r#112
[#183 /\u200B_greater_than_equal/]: r#112
[#183 /\u200B_less_than/]: r#112
[#183 /\u200B_less_than_equal/]: r#112
[#183 /\u200B_template_args_end/]: r#112
[#184 '!=']: r#113
[#184 '%']: r#113
[#184 '&&']: r#113
[#184 ')']: r#113
[#184 '*']: r#113
[#184 '+']: r#113
[#184 ',']: r#113
[#184 '-']: r#113
[#184 '/']: r#113
[#184 ':']: r#113
[#184 ';']: r#113
[#184 '==']: r#113
[#184 ']']: r#113
[#184 '{']: r#113
[#184 '||']: r#113
[#184 /\u200B_greater_than/]: r#113
[#184 /\u200B_greater_than_equal/]: r#113
[#184 /\u200B_less_than/]: r#113
[#184 /\u200B_less_than_equal/]: r#113
[#184 /\u200B_template_args_end/]: r#113
[#185 '.']: s#134
[#185 '[']: s#133
[#186 '.']: s#134
[#186 '[']: s#133
[#187 '!=']: r#114
[#187 '%']: r#114
[#187 '%=']: r#114
[#187 '&&']: r#114
[#187 '&']: r#114
[#187 '&=']: r#114
[#187 ')']: r#114
[#187 '*']: r#114
[#187 '*=']: r#114
[#187 '+']: r#114
[#187 '++']: r#114
[#187 '+=']: r#114
[#187 ',']: r#114
[#187 '-']: r#114
[#187 '--']: r#114
[#187 '-=']: r#114
[#187 '.']: r#114
[#187 '/']: r#114
[#187 '/=']: r#114
[#187 ':']: r#114
[#187 ';']: r#114
[#187 '=']: r#114
[#187 '==']: r#114
[#187 '[']: r#114
[#187 ']']: r#114
[#187 '^']: r#114
[#187 '^=']: r#114
[#187 '{']: r#114
[#187 '|']: r#114
[#187 '|=']: r#114
[#187 '||']: r#114
[#187 /\u200B_greater_than/]: r#114
[#187 /\u200B_greater_than_equal/]: r#114
[#187 /\u200B_less_than/]: r#114
[#187 /\u200B_less_than_equal/]: r#114
[#187 /\u200B_shift_left/]: r#114
[#187 /\u200B_shift_left_assign/]: r#114
[#187 /\u200B_shift_right/]: r#114
[#187 /\u200B_shift_right_assign/]: r#114
[#187 /\u200B_template_args_end/]: r#114
[#188 '!=']: r#115
[#188 '%']: r#115
[#188 '%=']: r#115
[#188 '&&']: r#115
[#188 '&']: r#115
[#188 '&=']: r#115
[#188 ')']: r#115
[#188 '*']: r#115
[#188 '*=']: r#115
[#188 '+']: r#115
[#188 '++']: r#115
[#188 '+=']: r#115
[#188 ',']: r#115
[#188 '-']: r#115
[#188 '--']: r#115
[#188 '-=']: r#115
[#188 '.']: r#115
[#188 '/']: r#115
[#188 '/=']: r#115
[#188 ':']: r#115
[#188 ';']: r#115
[#188 '=']: r#115
[#188 '==']: r#115
[#188 '[']: r#115
[#188 ']']: r#115
[#188 '^']: r#115
[#188 '^=']: r#115
[#188 '{']: r#115
[#188 '|']: r#115
[#188 '|=']: r#115
[#188 '||']: r#115
[#188 /\u200B_greater_than/]: r#115
[#188 /\u200B_greater_than_equal/]: r#115
[#188 /\u200B_less_than/]: r#115
[#188 /\u200B_less_than_equal/]: r#115
[#188 /\u200B_shift_left/]: r#115
[#188 /\u200B_shift_left_assign/]: r#115
[#188 /\u200B_shift_right/]: r#115
[#188 /\u200B_shift_right_assign/]: r#115
[#188 /\u200B_template_args_end/]: r#115
[#189 '!=']: r#116
[#189 '%']: r#116
[#189 '%=']: r#116
[#189 '&&']: r#116
[#189 '&']: r#116
[#189 '&=']: r#116
[#189 ')']: r#116
[#189 '*']: r#116
[#189 '*=']: r#116
[#189 '+']: r#116
[#189 '++']: r#116
[#189 '+=']: r#116
[#189 ',']: r#116
[#189 '-']: r#116
[#189 '--']: r#116
[#189 '-=']: r#116
[#189 '.']: r#116
[#189 '/']: r#116
[#189 '/=']: r#116
[#189 ':']: r#116
[#189 ';']: r#116
[#189 '=']: r#116
[#189 '==']: r#116
[#189 '[']: r#116
[#189 ']']: r#116
[#189 '^']: r#116
[#189 '^=']: r#116
[#189 '{']: r#116
[#189 '|']: r#116
[#189 '|=']: r#116
[#189 '||']: r#116
[#189 /\u200B_greater_than/]: r#116
[#189 /\u200B_greater_than_equal/]: r#116
[#189 /\u200B_less_than/]: r#116
[#189 /\u200B_less_than_equal/]: r#116
[#189 /\u200B_shift_left/]: r#116
[#189 /\u200B_shift_left_assign/]: r#116
[#189 /\u200B_shift_right/]: r#116
[#189 /\u200B_shift_right_assign/]: r#116
[#189 /\u200B_template_args_end/]: r#116
[#190 '!=']: r#117
[#190 '%']: r#117
[#190 '%=']: r#117
[#190 '&&']: r#117
[#190 '&']: r#117
[#190 '&=']: r#117
[#190 ')']: r#117
[#190 '*']: r#117
[#190 '*=']: r#117
[#190 '+']: r#117
[#190 '++']: r#117
[#190 '+=']: r#117
[#190 ',']: r#117
[#190 '-']: r#117
[#190 '--']: r#117
[#190 '-=']: r#117
[#190 '.']: r#117
[#190 '/']: r#117
[#190 '/=']: r#117
[#190 ':']: r#117
[#190 ';']: r#117
[#190 '=']: r#117
[#190 '==']: r#117
[#190 '[']: r#117
[#190 ']']: r#117
[#190 '^']: r#117
[#190 '^=']: r#117
[#190 '{']: r#117
[#190 '|']: r#117
[#190 '|=']: r#117
[#190 '||']: r#117
[#190 /\u200B_greater_than/]: r#117
[#190 /\u200B_greater_than_equal/]: r#117
[#190 /\u200B_less_than/]: r#117
[#190 /\u200B_less_than_equal/]: r#117
[#190 /\u200B_shift_left/]: r#117
[#190 /\u200B_shift_left_assign/]: r#117
[#190 /\u200B_shift_right/]: r#117
[#190 /\u200B_shift_right_assign/]: r#117
[#190 /\u200B_template_args_end/]: r#117
[#191 '!=']: r#118
[#191 '%']: r#118
[#191 '%=']: r#118
[#191 '&&']: r#118
[#191 '&']: r#118
[#191 '&=']: r#118
[#191 ')']: r#118
[#191 '*']: r#118
[#191 '*=']: r#118
[#191 '+']: r#118
[#191 '++']: r#118
[#191 '+=']: r#118
[#191 ',']: r#118
[#191 '-']: r#118
[#191 '--']: r#118
[#191 '-=']: r#118
[#191 '.']: r#118
[#191 '/']: r#118
[#191 '/=']: r#118
[#191 ':']: r#118
[#191 ';']: r#118
[#191 '=']: r#118
[#191 '==']: r#118
[#191 '[']: r#118
[#191 ']']: r#118
[#191 '^']: r#118
[#191 '^=']: r#118
[#191 '{']: r#118
[#191 '|']: r#118
[#191 '|=']: r#118
[#191 '||']: r#118
[#191 /\u200B_greater_than/]: r#118
[#191 /\u200B_greater_than_equal/]: r#118
[#191 /\u200B_less_than/]: r#118
[#191 /\u200B_less_than_equal/]: r#118
[#191 /\u200B_shift_left/]: r#118
[#191 /\u200B_shift_left_assign/]: r#118
[#191 /\u200B_shift_right/]: r#118
[#191 /\u200B_shift_right_assign/]: r#118
[#191 /\u200B_template_args_end/]: r#118
[#192 '!=']: r#119
[#192 '%']: r#119
[#192 '%=']: r#119
[#192 '&&']: r#119
[#192 '&']: r#119
[#192 '&=']: r#119
[#192 ')']: r#119
[#192 '*']: r#119
[#192 '*=']: r#119
[#192 '+']: r#119
[#192 '++']: r#119
[#192 '+=']: r#119
[#192 ',']: r#119
[#192 '-']: r#119
[#192 '--']: r#119
[#192 '-=']: r#119
[#192 '.']: r#119
[#192 '/']: r#119
[#192 '/=']: r#119
[#192 ':']: r#119
[#192 ';']: r#119
[#192 '=']: r#119
[#192 '==']: r#119
[#192 '[']: r#119
[#192 ']']: r#119
[#192 '^']: r#119
[#192 '^=']: r#119
[#192 '{']: r#119
[#192 '|']: r#119
[#192 '|=']: r#119
[#192 '||']: r#119
[#192 /\u200B_greater_than/]: r#119
[#192 /\u200B_greater_than_equal/]: r#119
[#192 /\u200B_less_than/]: r#119
[#192 /\u200B_less_than_equal/]: r#119
[#192 /\u200B_shift_left/]: r#119
[#192 /\u200B_shift_left_assign/]: r#119
[#192 /\u200B_shift_right/]: r#119
[#192 /\u200B_shift_right_assign/]: r#119
[#192 /\u200B_template_args_end/]: r#119
[#193 '!=']: r#120
[#193 '%']: r#120
[#193 '%=']: r#120
[#193 '&&']: r#120
[#193 '&']: r#120
[#193 '&=']: r#120
[#193 ')']: r#120
[#193 '*']: r#120
[#193 '*=']: r#120
[#193 '+']: r#120
[#193 '++']: r#120
[#193 '+=']: r#120
[#193 ',']: r#120
[#193 '-']: r#120
[#193 '--']: r#120
[#193 '-=']: r#120
[#193 '.']: r#120
[#193 '/']: r#120
[#193 '/=']: r#120
[#193 ':']: r#120
[#193 ';']: r#120
[#193 '=']: r#120
[#193 '==']: r#120
[#193 '[']: r#120
[#193 ']']: r#120
[#193 '^']: r#120
[#193 '^=']: r#120
[#193 '{']: r#120
[#193 '|']: r#120
[#193 '|=']: r#120
[#193 '||']: r#120
[#193 /\u200B_greater_than/]: r#120
[#193 /\u200B_greater_than_equal/]: r#120
[#193 /\u200B_less_than/]: r#120
[#193 /\u200B_less_than_equal/]: r#120
[#193 /\u200B_shift_left/]: r#120
[#193 /\u200B_shift_left_assign/]: r#120
[#193 /\u200B_shift_right/]: r#120
[#193 /\u200B_shift_right_assign/]: r#120
[#193 /\u200B_template_args_end/]: r#120
[#194 '!=']: r#121
[#194 '%']: r#121
[#194 '%=']: r#121
[#194 '&&']: r#121
[#194 '&']: r#121
[#194 '&=']: r#121
[#194 ')']: r#121
[#194 '*']: r#121
[#194 '*=']: r#121
[#194 '+']: r#121
[#194 '++']: r#121
[#194 '+=']: r#121
[#194 ',']: r#121
[#194 '-']: r#121
[#194 '--']: r#121
[#194 '-=']: r#121
[#194 '.']: r#121
[#194 '/']: r#121
[#194 '/=']: r#121
[#194 ':']: r#121
[#194 ';']: r#121
[#194 '=']: r#121
[#194 '==']: r#121
[#194 '[']: r#121
[#194 ']']: r#121
[#194 '^']: r#121
[#194 '^=']: r#121
[#194 '{']: r#121
[#194 '|']: r#121
[#194 '|=']: r#121
[#194 '||']: r#121
[#194 /\u200B_greater_than/]: r#121
[#194 /\u200B_greater_than_equal/]: r#121
[#194 /\u200B_less_than/]: r#121
[#194 /\u200B_less_than_equal/]: r#121
[#194 /\u200B_shift_left/]: r#121
[#194 /\u200B_shift_left_assign/]: r#121
[#194 /\u200B_shift_right/]: r#121
[#194 /\u200B_shift_right_assign/]: r#121
[#194 /\u200B_template_args_end/]: r#121
[#195 '!=']: r#122
[#195 '%']: r#122
[#195 '%=']: r#122
[#195 '&&']: r#122
[#195 '&']: r#122
[#195 '&=']: r#122
[#195 ')']: r#122
[#195 '*']: r#122
[#195 '*=']: r#122
[#195 '+']: r#122
[#195 '++']: r#122
[#195 '+=']: r#122
[#195 ',']: r#122
[#195 '-']: r#122
[#195 '--']: r#122
[#195 '-=']: r#122
[#195 '.']: r#122
[#195 '/']: r#122
[#195 '/=']: r#122
[#195 ':']: r#122
[#195 ';']: r#122
[#195 '=']: r#122
[#195 '==']: r#122
[#195 '[']: r#122
[#195 ']']: r#122
[#195 '^']: r#122
[#195 '^=']: r#122
[#195 '{']: r#122
[#195 '|']: r#122
[#195 '|=']: r#122
[#195 '||']: r#122
[#195 /\u200B_greater_than/]: r#122
[#195 /\u200B_greater_than_equal/]: r#122
[#195 /\u200B_less_than/]: r#122
[#195 /\u200B_less_than_equal/]: r#122
[#195 /\u200B_shift_left/]: r#122
[#195 /\u200B_shift_left_assign/]: r#122
[#195 /\u200B_shift_right/]: r#122
[#195 /\u200B_shift_right_assign/]: r#122
[#195 /\u200B_template_args_end/]: r#122
[#196 ']']: s#336
[#197 ')']: s#335
[#198 ')']: r#123
[#199 ',']: s#334
[#200 '!=']: r#124
[#200 '%']: r#124
[#200 '&&']: r#124
[#200 '&']: r#124
[#200 '(']: r#124
[#200 ')']: r#124
[#200 '*']: r#124
[#200 '+']: r#124
[#200 ',']: r#124
[#200 '-']: r#124
[#200 '.']: r#124
[#200 '/']: r#124
[#200 ':']: r#124
[#200 ';']: r#124
[#200 '==']: r#124
[#200 '[']: r#124
[#200 ']']: r#124
[#200 '^']: r#124
[#200 '{']: r#124
[#200 '|']: r#124
[#200 '||']: r#124
[#200 /\u200B_greater_than/]: r#124
[#200 /\u200B_greater_than_equal/]: r#124
[#200 /\u200B_less_than/]: r#124
[#200 /\u200B_less_than_equal/]: r#124
[#200 /\u200B_shift_left/]: r#124
[#200 /\u200B_shift_right/]: r#124
[#200 /\u200B_template_args_end/]: r#124
[#201 '!=']: r#125
[#201 '%']: r#125
[#201 '&&']: r#125
[#201 '&']: r#125
[#201 '(']: r#125
[#201 ')']: r#125
[#201 '*']: r#125
[#201 '+']: r#125
[#201 ',']: r#125
[#201 '-']: r#125
[#201 '.']: r#125
[#201 '/']: r#125
[#201 ':']: r#125
[#201 ';']: r#125
[#201 '=']: r#125
[#201 '==']: r#125
[#201 '[']: r#125
[#201 ']']: r#125
[#201 '^']: r#125
[#201 '{']: r#125
[#201 '|']: r#125
[#201 '||']: r#125
[#201 '}']: r#125
[#201 /\u200B_greater_than/]: r#125
[#201 /\u200B_greater_than_equal/]: r#125
[#201 /\u200B_less_than/]: r#125
[#201 /\u200B_less_than_equal/]: r#125
[#201 /\u200B_shift_left/]: r#125
[#201 /\u200B_shift_right/]: r#125
[#201 /\u200B_template_args_end/]: r#125
[#202 '!']: s#56
[#202 '&']: s#59
[#202 '(']: s#69
[#202 '*']: s#58
[#202 '-']: s#55
[#202 'false']: s#76
[#202 'true']: s#75
[#202 '~']: s#57
[#202 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#202 /0[fh]/]: s#80
[#202 /0[iu]?/]: s#77
[#202 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#202 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#202 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#202 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#202 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#202 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#202 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#202 /[1-9][0-9]*[fh]/]: s#81
[#202 /[1-9][0-9]*[iu]?/]: s#78
[#203 '!']: r#126
[#203 '&']: r#126
[#203 '(']: r#126
[#203 '*']: r#126
[#203 '-']: r#126
[#203 'false']: r#126
[#203 'true']: r#126
[#203 '~']: r#126
[#203 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#126
[#203 /0[fh]/]: r#126
[#203 /0[iu]?/]: r#126
[#203 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#126
[#203 /0[xX][0-9a-fA-F]+[iu]?/]: r#126
[#203 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#126
[#203 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#126
[#203 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#126
[#203 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#126
[#203 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#126
[#203 /[1-9][0-9]*[fh]/]: r#126
[#203 /[1-9][0-9]*[iu]?/]: r#126
[#204 '!=']: r#127
[#204 '%']: r#127
[#204 '&&']: r#127
[#204 '&']: r#127
[#204 ')']: r#127
[#204 '*']: r#127
[#204 '+']: r#127
[#204 ',']: r#127
[#204 '-']: r#127
[#204 '.']: r#127
[#204 '/']: r#127
[#204 ':']: r#127
[#204 ';']: r#127
[#204 '==']: r#127
[#204 '[']: r#127
[#204 ']']: r#127
[#204 '^']: r#127
[#204 '{']: r#127
[#204 '|']: r#127
[#204 '||']: r#127
[#204 /\u200B_greater_than/]: r#127
[#204 /\u200B_greater_than_equal/]: r#127
[#204 /\u200B_less_than/]: r#127
[#204 /\u200B_less_than_equal/]: r#127
[#204 /\u200B_shift_left/]: r#127
[#204 /\u200B_shift_right/]: r#127
[#204 /\u200B_template_args_end/]: r#127
[#205 '}']: s#324
[#206 '}']: r#128
[#207 '&']: s#244
[#207 '(']: s#245
[#207 '*']: s#243
[#207 ';']: s#208
[#207 '_']: s#241
[#207 'break']: s#233
[#207 'const']: s#232
[#207 'const_assert']: s#31
[#207 'continue']: s#234
[#207 'discard']: s#219
[#207 'for']: s#227
[#207 'if']: s#238
[#207 'let']: s#231
[#207 'loop']: s#226
[#207 'return']: s#223
[#207 'switch']: s#225
[#207 'var']: s#96
[#207 'while']: s#228
[#207 '{']: s#125
[#207 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#208 '&']: r#129
[#208 '(']: r#129
[#208 '*']: r#129
[#208 ';']: r#129
[#208 '_']: r#129
[#208 'break']: r#129
[#208 'const']: r#129
[#208 'const_assert']: r#129
[#208 'continue']: r#129
[#208 'continuing']: r#129
[#208 'discard']: r#129
[#208 'for']: r#129
[#208 'if']: r#129
[#208 'let']: r#129
[#208 'loop']: r#129
[#208 'return']: r#129
[#208 'switch']: r#129
[#208 'var']: r#129
[#208 'while']: r#129
[#208 '{']: r#129
[#208 '}']: r#129
[#208 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#129
[#209 ';']: s#322
[#210 '&']: r#130
[#210 '(']: r#130
[#210 '*']: r#130
[#210 ';']: r#130
[#210 '_']: r#130
[#210 'break']: r#130
[#210 'const']: r#130
[#210 'const_assert']: r#130
[#210 'continue']: r#130
[#210 'continuing']: r#130
[#210 'discard']: r#130
[#210 'for']: r#130
[#210 'if']: r#130
[#210 'let']: r#130
[#210 'loop']: r#130
[#210 'return']: r#130
[#210 'switch']: r#130
[#210 'var']: r#130
[#210 'while']: r#130
[#210 '{']: r#130
[#210 '}']: r#130
[#210 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#130
[#211 '&']: r#131
[#211 '(']: r#131
[#211 '*']: r#131
[#211 ';']: r#131
[#211 '_']: r#131
[#211 'break']: r#131
[#211 'const']: r#131
[#211 'const_assert']: r#131
[#211 'continue']: r#131
[#211 'continuing']: r#131
[#211 'discard']: r#131
[#211 'for']: r#131
[#211 'if']: r#131
[#211 'let']: r#131
[#211 'loop']: r#131
[#211 'return']: r#131
[#211 'switch']: r#131
[#211 'var']: r#131
[#211 'while']: r#131
[#211 '{']: r#131
[#211 '}']: r#131
[#211 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#131
[#212 '&']: r#132
[#212 '(']: r#132
[#212 '*']: r#132
[#212 ';']: r#132
[#212 '_']: r#132
[#212 'break']: r#132
[#212 'const']: r#132
[#212 'const_assert']: r#132
[#212 'continue']: r#132
[#212 'continuing']: r#132
[#212 'discard']: r#132
[#212 'for']: r#132
[#212 'if']: r#132
[#212 'let']: r#132
[#212 'loop']: r#132
[#212 'return']: r#132
[#212 'switch']: r#132
[#212 'var']: r#132
[#212 'while']: r#132
[#212 '{']: r#132
[#212 '}']: r#132
[#212 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#132
[#213 '&']: r#133
[#213 '(']: r#133
[#213 '*']: r#133
[#213 ';']: r#133
[#213 '_']: r#133
[#213 'break']: r#133
[#213 'const']: r#133
[#213 'const_assert']: r#133
[#213 'continue']: r#133
[#213 'continuing']: r#133
[#213 'discard']: r#133
[#213 'for']: r#133
[#213 'if']: r#133
[#213 'let']: r#133
[#213 'loop']: r#133
[#213 'return']: r#133
[#213 'switch']: r#133
[#213 'var']: r#133
[#213 'while']: r#133
[#213 '{']: r#133
[#213 '}']: r#133
[#213 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#133
[#214 '&']: r#134
[#214 '(']: r#134
[#214 '*']: r#134
[#214 ';']: r#134
[#214 '_']: r#134
[#214 'break']: r#134
[#214 'const']: r#134
[#214 'const_assert']: r#134
[#214 'continue']: r#134
[#214 'continuing']: r#134
[#214 'discard']: r#134
[#214 'for']: r#134
[#214 'if']: r#134
[#214 'let']: r#134
[#214 'loop']: r#134
[#214 'return']: r#134
[#214 'switch']: r#134
[#214 'var']: r#134
[#214 'while']: r#134
[#214 '{']: r#134
[#214 '}']: r#134
[#214 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#134
[#215 ';']: s#321
[#216 ';']: s#320
[#217 ';']: s#319
[#218 ';']: s#318
[#219 ';']: s#317
[#220 ';']: s#316
[#221 '&']: r#135
[#221 '(']: r#135
[#221 '*']: r#135
[#221 ';']: r#135
[#221 '_']: r#135
[#221 'break']: r#135
[#221 'const']: r#135
[#221 'const_assert']: r#135
[#221 'continue']: r#135
[#221 'continuing']: r#135
[#221 'discard']: r#135
[#221 'for']: r#135
[#221 'if']: r#135
[#221 'let']: r#135
[#221 'loop']: r#135
[#221 'return']: r#135
[#221 'switch']: r#135
[#221 'var']: r#135
[#221 'while']: r#135
[#221 '{']: r#135
[#221 '}']: r#135
[#221 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#135
[#222 ';']: s#315
[#223 '!']: s#56
[#223 '&']: s#59
[#223 '(']: s#69
[#223 '*']: s#58
[#223 '-']: s#55
[#223 'false']: s#76
[#223 'true']: s#75
[#223 '~']: s#57
[#223 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#223 /0[fh]/]: s#80
[#223 /0[iu]?/]: s#77
[#223 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#223 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#223 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#223 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#223 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#223 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#223 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#223 /[1-9][0-9]*[fh]/]: s#81
[#223 /[1-9][0-9]*[iu]?/]: s#78
[#224 'else']: s#312
[#225 '!']: s#56
[#225 '&']: s#59
[#225 '(']: s#69
[#225 '*']: s#58
[#225 '-']: s#55
[#225 'false']: s#76
[#225 'true']: s#75
[#225 '~']: s#57
[#225 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#225 /0[fh]/]: s#80
[#225 /0[iu]?/]: s#77
[#225 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#225 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#225 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#225 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#225 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#225 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#225 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#225 /[1-9][0-9]*[fh]/]: s#81
[#225 /[1-9][0-9]*[iu]?/]: s#78
[#226 '{']: s#307
[#227 '(']: s#306
[#228 '!']: s#56
[#228 '&']: s#59
[#228 '(']: s#69
[#228 '*']: s#58
[#228 '-']: s#55
[#228 'false']: s#76
[#228 'true']: s#75
[#228 '~']: s#57
[#228 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#228 /0[fh]/]: s#80
[#228 /0[iu]?/]: s#77
[#228 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#228 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#228 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#228 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#228 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#228 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#228 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#228 /[1-9][0-9]*[fh]/]: s#81
[#228 /[1-9][0-9]*[iu]?/]: s#78
[#229 '(']: s#130
[#230 ';']: r#136
[#230 '=']: s#303
[#231 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#232 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#233 ';']: r#137
[#234 ';']: r#138
[#235 ')']: r#139
[#235 ';']: r#139
[#236 ')']: r#140
[#236 ';']: r#140
[#237 ')']: r#141
[#237 ';']: r#141
[#238 '!']: s#56
[#238 '&']: s#59
[#238 '(']: s#69
[#238 '*']: s#58
[#238 '-']: s#55
[#238 'false']: s#76
[#238 'true']: s#75
[#238 '~']: s#57
[#238 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#238 /0[fh]/]: s#80
[#238 /0[iu]?/]: s#77
[#238 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#238 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#238 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#238 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#238 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#238 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#238 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#238 /[1-9][0-9]*[fh]/]: s#81
[#238 /[1-9][0-9]*[iu]?/]: s#78
[#239 /\u200B_disambiguate_template/]: s#113
[#240 '%=']: s#291
[#240 '&=']: s#292
[#240 '*=']: s#289
[#240 '++']: s#283
[#240 '+=']: s#287
[#240 '--']: s#284
[#240 '-=']: s#288
[#240 '/=']: s#290
[#240 '=']: s#285
[#240 '^=']: s#294
[#240 '|=']: s#293
[#240 /\u200B_shift_left_assign/]: s#298
[#240 /\u200B_shift_right_assign/]: s#297
[#241 '=']: s#281
[#242 '.']: s#134
[#242 '[']: s#133
[#243 '&']: s#244
[#243 '(']: s#245
[#243 '*']: s#243
[#243 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#244 '&']: s#244
[#244 '(']: s#245
[#244 '*']: s#243
[#244 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#245 '&']: s#244
[#245 '(']: s#245
[#245 '*']: s#243
[#245 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#246 '@']: s#36
[#247 ',']: s#268
[#248 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#187
[#249 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#142
[#250 '@']: s#36
[#251 ';']: r#143
[#252 /\u200B_disambiguate_template/]: s#113
[#253 ';']: r#144
[#254 '!']: s#56
[#254 '&']: s#59
[#254 '(']: s#69
[#254 '*']: s#58
[#254 '-']: s#55
[#254 'false']: s#76
[#254 'true']: s#75
[#254 '~']: s#57
[#254 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#254 /0[fh]/]: s#80
[#254 /0[iu]?/]: s#77
[#254 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#254 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#254 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#254 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#254 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#254 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#254 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#254 /[1-9][0-9]*[fh]/]: s#81
[#254 /[1-9][0-9]*[iu]?/]: s#78
[#255 ';']: r#145
[#256 ';']: r#146
[#256 '=']: r#146
[#257 ';']: r#147
[#258 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#259 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#148
[#260 ';']: r#149
[#260 '=']: r#149
[#261 ';']: r#150
[#262 /\u200B_template_args_start/]: s#203
[#263 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#151
[#264 ':']: s#390
[#265 ',']: s#389
[#266 ',']: r#152
[#266 '}']: r#152
[#267 ',']: s#268
[#268 '@']: s#36
[#269 ')']: s#385
[#270 ')']: r#153
[#271 ',']: s#384
[#272 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#273 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#154
[#274 '@']: s#36
[#275 ')']: s#378
[#276 /\u200B_disambiguate_template/]: s#113
[#277 '%=']: r#155
[#277 '&=']: r#155
[#277 ')']: r#155
[#277 '*=']: r#155
[#277 '++']: r#155
[#277 '+=']: r#155
[#277 '--']: r#155
[#277 '-=']: r#155
[#277 '/=']: r#155
[#277 '=']: r#155
[#277 '^=']: r#155
[#277 '|=']: r#155
[#277 /\u200B_shift_left_assign/]: r#155
[#277 /\u200B_shift_right_assign/]: r#155
[#278 '%=']: r#156
[#278 '&=']: r#156
[#278 ')']: r#156
[#278 '*=']: r#156
[#278 '++']: r#156
[#278 '+=']: r#156
[#278 '--']: r#156
[#278 '-=']: r#156
[#278 '/=']: r#156
[#278 '=']: r#156
[#278 '^=']: r#156
[#278 '|=']: r#156
[#278 /\u200B_shift_left_assign/]: r#156
[#278 /\u200B_shift_right_assign/]: r#156
[#279 '%=']: r#157
[#279 '&=']: r#157
[#279 ')']: r#157
[#279 '*=']: r#157
[#279 '++']: r#157
[#279 '+=']: r#157
[#279 '--']: r#157
[#279 '-=']: r#157
[#279 '/=']: r#157
[#279 '=']: r#157
[#279 '^=']: r#157
[#279 '|=']: r#157
[#279 /\u200B_shift_left_assign/]: r#157
[#279 /\u200B_shift_right_assign/]: r#157
[#280 '%=']: r#158
[#280 '&=']: r#158
[#280 ')']: r#158
[#280 '*=']: r#158
[#280 '++']: r#158
[#280 '+=']: r#158
[#280 '--']: r#158
[#280 '-=']: r#158
[#280 '/=']: r#158
[#280 '=']: r#158
[#280 '^=']: r#158
[#280 '|=']: r#158
[#280 /\u200B_shift_left_assign/]: r#158
[#280 /\u200B_shift_right_assign/]: r#158
[#281 '!']: s#56
[#281 '&']: s#59
[#281 '(']: s#69
[#281 '*']: s#58
[#281 '-']: s#55
[#281 'false']: s#76
[#281 'true']: s#75
[#281 '~']: s#57
[#281 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#281 /0[fh]/]: s#80
[#281 /0[iu]?/]: s#77
[#281 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#281 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#281 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#281 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#281 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#281 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#281 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#281 /[1-9][0-9]*[fh]/]: s#81
[#281 /[1-9][0-9]*[iu]?/]: s#78
[#282 '!']: s#56
[#282 '&']: s#59
[#282 '(']: s#69
[#282 '*']: s#58
[#282 '-']: s#55
[#282 'false']: s#76
[#282 'true']: s#75
[#282 '~']: s#57
[#282 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#282 /0[fh]/]: s#80
[#282 /0[iu]?/]: s#77
[#282 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#282 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#282 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#282 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#282 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#282 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#282 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#282 /[1-9][0-9]*[fh]/]: s#81
[#282 /[1-9][0-9]*[iu]?/]: s#78
[#283 ')']: r#159
[#283 ';']: r#159
[#284 ')']: r#160
[#284 ';']: r#160
[#285 '!']: r#161
[#285 '&']: r#161
[#285 '(']: r#161
[#285 '*']: r#161
[#285 '-']: r#161
[#285 'false']: r#161
[#285 'true']: r#161
[#285 '~']: r#161
[#285 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#161
[#285 /0[fh]/]: r#161
[#285 /0[iu]?/]: r#161
[#285 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#161
[#285 /0[xX][0-9a-fA-F]+[iu]?/]: r#161
[#285 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#161
[#285 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#161
[#285 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#161
[#285 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#161
[#285 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#161
[#285 /[1-9][0-9]*[fh]/]: r#161
[#285 /[1-9][0-9]*[iu]?/]: r#161
[#286 '!']: r#162
[#286 '&']: r#162
[#286 '(']: r#162
[#286 '*']: r#162
[#286 '-']: r#162
[#286 'false']: r#162
[#286 'true']: r#162
[#286 '~']: r#162
[#286 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#162
[#286 /0[fh]/]: r#162
[#286 /0[iu]?/]: r#162
[#286 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#162
[#286 /0[xX][0-9a-fA-F]+[iu]?/]: r#162
[#286 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#162
[#286 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#162
[#286 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#162
[#286 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#162
[#286 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#162
[#286 /[1-9][0-9]*[fh]/]: r#162
[#286 /[1-9][0-9]*[iu]?/]: r#162
[#287 '!']: r#163
[#287 '&']: r#163
[#287 '(']: r#163
[#287 '*']: r#163
[#287 '-']: r#163
[#287 'false']: r#163
[#287 'true']: r#163
[#287 '~']: r#163
[#287 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#163
[#287 /0[fh]/]: r#163
[#287 /0[iu]?/]: r#163
[#287 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#163
[#287 /0[xX][0-9a-fA-F]+[iu]?/]: r#163
[#287 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#163
[#287 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#163
[#287 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#163
[#287 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#163
[#287 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#163
[#287 /[1-9][0-9]*[fh]/]: r#163
[#287 /[1-9][0-9]*[iu]?/]: r#163
[#288 '!']: r#164
[#288 '&']: r#164
[#288 '(']: r#164
[#288 '*']: r#164
[#288 '-']: r#164
[#288 'false']: r#164
[#288 'true']: r#164
[#288 '~']: r#164
[#288 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#164
[#288 /0[fh]/]: r#164
[#288 /0[iu]?/]: r#164
[#288 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#164
[#288 /0[xX][0-9a-fA-F]+[iu]?/]: r#164
[#288 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#164
[#288 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#164
[#288 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#164
[#288 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#164
[#288 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#164
[#288 /[1-9][0-9]*[fh]/]: r#164
[#288 /[1-9][0-9]*[iu]?/]: r#164
[#289 '!']: r#165
[#289 '&']: r#165
[#289 '(']: r#165
[#289 '*']: r#165
[#289 '-']: r#165
[#289 'false']: r#165
[#289 'true']: r#165
[#289 '~']: r#165
[#289 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#165
[#289 /0[fh]/]: r#165
[#289 /0[iu]?/]: r#165
[#289 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#165
[#289 /0[xX][0-9a-fA-F]+[iu]?/]: r#165
[#289 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#165
[#289 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#165
[#289 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#165
[#289 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#165
[#289 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#165
[#289 /[1-9][0-9]*[fh]/]: r#165
[#289 /[1-9][0-9]*[iu]?/]: r#165
[#290 '!']: r#166
[#290 '&']: r#166
[#290 '(']: r#166
[#290 '*']: r#166
[#290 '-']: r#166
[#290 'false']: r#166
[#290 'true']: r#166
[#290 '~']: r#166
[#290 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#166
[#290 /0[fh]/]: r#166
[#290 /0[iu]?/]: r#166
[#290 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#166
[#290 /0[xX][0-9a-fA-F]+[iu]?/]: r#166
[#290 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#166
[#290 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#166
[#290 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#166
[#290 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#166
[#290 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#166
[#290 /[1-9][0-9]*[fh]/]: r#166
[#290 /[1-9][0-9]*[iu]?/]: r#166
[#291 '!']: r#167
[#291 '&']: r#167
[#291 '(']: r#167
[#291 '*']: r#167
[#291 '-']: r#167
[#291 'false']: r#167
[#291 'true']: r#167
[#291 '~']: r#167
[#291 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#167
[#291 /0[fh]/]: r#167
[#291 /0[iu]?/]: r#167
[#291 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#167
[#291 /0[xX][0-9a-fA-F]+[iu]?/]: r#167
[#291 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#167
[#291 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#167
[#291 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#167
[#291 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#167
[#291 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#167
[#291 /[1-9][0-9]*[fh]/]: r#167
[#291 /[1-9][0-9]*[iu]?/]: r#167
[#292 '!']: r#168
[#292 '&']: r#168
[#292 '(']: r#168
[#292 '*']: r#168
[#292 '-']: r#168
[#292 'false']: r#168
[#292 'true']: r#168
[#292 '~']: r#168
[#292 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#168
[#292 /0[fh]/]: r#168
[#292 /0[iu]?/]: r#168
[#292 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#168
[#292 /0[xX][0-9a-fA-F]+[iu]?/]: r#168
[#292 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#168
[#292 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#168
[#292 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#168
[#292 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#168
[#292 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#168
[#292 /[1-9][0-9]*[fh]/]: r#168
[#292 /[1-9][0-9]*[iu]?/]: r#168
[#293 '!']: r#169
[#293 '&']: r#169
[#293 '(']: r#169
[#293 '*']: r#169
[#293 '-']: r#169
[#293 'false']: r#169
[#293 'true']: r#169
[#293 '~']: r#169
[#293 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#169
[#293 /0[fh]/]: r#169
[#293 /0[iu]?/]: r#169
[#293 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#169
[#293 /0[xX][0-9a-fA-F]+[iu]?/]: r#169
[#293 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#169
[#293 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#169
[#293 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#169
[#293 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#169
[#293 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#169
[#293 /[1-9][0-9]*[fh]/]: r#169
[#293 /[1-9][0-9]*[iu]?/]: r#169
[#294 '!']: r#170
[#294 '&']: r#170
[#294 '(']: r#170
[#294 '*']: r#170
[#294 '-']: r#170
[#294 'false']: r#170
[#294 'true']: r#170
[#294 '~']: r#170
[#294 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#170
[#294 /0[fh]/]: r#170
[#294 /0[iu]?/]: r#170
[#294 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#170
[#294 /0[xX][0-9a-fA-F]+[iu]?/]: r#170
[#294 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#170
[#294 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#170
[#294 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#170
[#294 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#170
[#294 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#170
[#294 /[1-9][0-9]*[fh]/]: r#170
[#294 /[1-9][0-9]*[iu]?/]: r#170
[#295 '!']: r#171
[#295 '&']: r#171
[#295 '(']: r#171
[#295 '*']: r#171
[#295 '-']: r#171
[#295 'false']: r#171
[#295 'true']: r#171
[#295 '~']: r#171
[#295 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#171
[#295 /0[fh]/]: r#171
[#295 /0[iu]?/]: r#171
[#295 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#171
[#295 /0[xX][0-9a-fA-F]+[iu]?/]: r#171
[#295 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#171
[#295 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#171
[#295 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#171
[#295 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#171
[#295 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#171
[#295 /[1-9][0-9]*[fh]/]: r#171
[#295 /[1-9][0-9]*[iu]?/]: r#171
[#296 '!']: r#172
[#296 '&']: r#172
[#296 '(']: r#172
[#296 '*']: r#172
[#296 '-']: r#172
[#296 'false']: r#172
[#296 'true']: r#172
[#296 '~']: r#172
[#296 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#172
[#296 /0[fh]/]: r#172
[#296 /0[iu]?/]: r#172
[#296 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#172
[#296 /0[xX][0-9a-fA-F]+[iu]?/]: r#172
[#296 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#172
[#296 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#172
[#296 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#172
[#296 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#172
[#296 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#172
[#296 /[1-9][0-9]*[fh]/]: r#172
[#296 /[1-9][0-9]*[iu]?/]: r#172
[#297 '!']: r#173
[#297 '&']: r#173
[#297 '(']: r#173
[#297 '*']: r#173
[#297 '-']: r#173
[#297 'false']: r#173
[#297 'true']: r#173
[#297 '~']: r#173
[#297 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#173
[#297 /0[fh]/]: r#173
[#297 /0[iu]?/]: r#173
[#297 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#173
[#297 /0[xX][0-9a-fA-F]+[iu]?/]: r#173
[#297 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#173
[#297 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#173
[#297 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#173
[#297 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#173
[#297 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#173
[#297 /[1-9][0-9]*[fh]/]: r#173
[#297 /[1-9][0-9]*[iu]?/]: r#173
[#298 '!']: r#174
[#298 '&']: r#174
[#298 '(']: r#174
[#298 '*']: r#174
[#298 '-']: r#174
[#298 'false']: r#174
[#298 'true']: r#174
[#298 '~']: r#174
[#298 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#174
[#298 /0[fh]/]: r#174
[#298 /0[iu]?/]: r#174
[#298 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#174
[#298 /0[xX][0-9a-fA-F]+[iu]?/]: r#174
[#298 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#174
[#298 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#174
[#298 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#174
[#298 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#174
[#298 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#174
[#298 /[1-9][0-9]*[fh]/]: r#174
[#298 /[1-9][0-9]*[iu]?/]: r#174
[#299 '%=']: r#175
[#299 '&=']: r#175
[#299 '*=']: r#175
[#299 '++']: r#175
[#299 '+=']: r#175
[#299 '--']: r#175
[#299 '-=']: r#175
[#299 '.']: r#175
[#299 '/=']: r#175
[#299 '=']: r#175
[#299 '[']: r#175
[#299 '^=']: r#175
[#299 '|=']: r#175
[#299 /\u200B_shift_left_assign/]: r#175
[#299 /\u200B_shift_right_assign/]: r#175
[#299 /\u200B_template_args_start/]: s#203
[#300 '{']: s#125
[#301 '=']: s#373
[#302 '=']: s#372
[#303 '!']: s#56
[#303 '&']: s#59
[#303 '(']: s#69
[#303 '*']: s#58
[#303 '-']: s#55
[#303 'false']: s#76
[#303 'true']: s#75
[#303 '~']: s#57
[#303 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#303 /0[fh]/]: s#80
[#303 /0[iu]?/]: s#77
[#303 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#303 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#303 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#303 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#303 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#303 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#303 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#303 /[1-9][0-9]*[fh]/]: s#81
[#303 /[1-9][0-9]*[iu]?/]: s#78
[#304 ')']: r#176
[#304 ';']: r#176
[#305 '{']: s#125
[#306 '&']: s#244
[#306 '(']: s#245
[#306 '*']: s#243
[#306 '_']: s#241
[#306 'const']: s#232
[#306 'let']: s#231
[#306 'var']: s#96
[#306 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#307 '&']: s#244
[#307 '(']: s#245
[#307 '*']: s#243
[#307 ';']: s#208
[#307 '_']: s#241
[#307 'break']: s#233
[#307 'const']: s#232
[#307 'const_assert']: s#31
[#307 'continue']: s#234
[#307 'discard']: s#219
[#307 'for']: s#227
[#307 'if']: s#238
[#307 'let']: s#231
[#307 'loop']: s#226
[#307 'return']: s#223
[#307 'switch']: s#225
[#307 'var']: s#96
[#307 'while']: s#228
[#307 '{']: s#125
[#307 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#308 '{']: s#360
[#309 'else']: s#359
[#310 '&']: r#177
[#310 '(']: r#177
[#310 '*']: r#177
[#310 ';']: r#177
[#310 '_']: r#177
[#310 'break']: r#177
[#310 'const']: r#177
[#310 'const_assert']: r#177
[#310 'continue']: r#177
[#310 'continuing']: r#177
[#310 'discard']: r#177
[#310 'else']: r#177
[#310 'for']: r#177
[#310 'if']: r#177
[#310 'let']: r#177
[#310 'loop']: r#177
[#310 'return']: r#177
[#310 'switch']: r#177
[#310 'var']: r#177
[#310 'while']: r#177
[#310 '{']: r#177
[#310 '}']: r#177
[#310 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#177
[#311 'else']: s#312
[#312 'if']: s#355
[#313 ';']: r#178
[#314 ';']: r#179
[#315 '&']: r#180
[#315 '(']: r#180
[#315 '*']: r#180
[#315 ';']: r#180
[#315 '_']: r#180
[#315 'break']: r#180
[#315 'const']: r#180
[#315 'const_assert']: r#180
[#315 'continue']: r#180
[#315 'continuing']: r#180
[#315 'discard']: r#180
[#315 'for']: r#180
[#315 'if']: r#180
[#315 'let']: r#180
[#315 'loop']: r#180
[#315 'return']: r#180
[#315 'switch']: r#180
[#315 'var']: r#180
[#315 'while']: r#180
[#315 '{']: r#180
[#315 '}']: r#180
[#315 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#180
[#316 '&']: r#181
[#316 '(']: r#181
[#316 '*']: r#181
[#316 ';']: r#181
[#316 '_']: r#181
[#316 'break']: r#181
[#316 'const']: r#181
[#316 'const_assert']: r#181
[#316 'continue']: r#181
[#316 'continuing']: r#181
[#316 'discard']: r#181
[#316 'for']: r#181
[#316 'if']: r#181
[#316 'let']: r#181
[#316 'loop']: r#181
[#316 'return']: r#181
[#316 'switch']: r#181
[#316 'var']: r#181
[#316 'while']: r#181
[#316 '{']: r#181
[#316 '}']: r#181
[#316 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#181
[#317 '&']: r#182
[#317 '(']: r#182
[#317 '*']: r#182
[#317 ';']: r#182
[#317 '_']: r#182
[#317 'break']: r#182
[#317 'const']: r#182
[#317 'const_assert']: r#182
[#317 'continue']: r#182
[#317 'continuing']: r#182
[#317 'discard']: r#182
[#317 'for']: r#182
[#317 'if']: r#182
[#317 'let']: r#182
[#317 'loop']: r#182
[#317 'return']: r#182
[#317 'switch']: r#182
[#317 'var']: r#182
[#317 'while']: r#182
[#317 '{']: r#182
[#317 '}']: r#182
[#317 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#182
[#318 '&']: r#183
[#318 '(']: r#183
[#318 '*']: r#183
[#318 ';']: r#183
[#318 '_']: r#183
[#318 'break']: r#183
[#318 'const']: r#183
[#318 'const_assert']: r#183
[#318 'continue']: r#183
[#318 'continuing']: r#183
[#318 'discard']: r#183
[#318 'for']: r#183
[#318 'if']: r#183
[#318 'let']: r#183
[#318 'loop']: r#183
[#318 'return']: r#183
[#318 'switch']: r#183
[#318 'var']: r#183
[#318 'while']: r#183
[#318 '{']: r#183
[#318 '}']: r#183
[#318 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#183
[#319 '&']: r#184
[#319 '(']: r#184
[#319 '*']: r#184
[#319 ';']: r#184
[#319 '_']: r#184
[#319 'break']: r#184
[#319 'const']: r#184
[#319 'const_assert']: r#184
[#319 'continue']: r#184
[#319 'continuing']: r#184
[#319 'discard']: r#184
[#319 'for']: r#184
[#319 'if']: r#184
[#319 'let']: r#184
[#319 'loop']: r#184
[#319 'return']: r#184
[#319 'switch']: r#184
[#319 'var']: r#184
[#319 'while']: r#184
[#319 '{']: r#184
[#319 '}']: r#184
[#319 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#184
[#320 '&']: r#185
[#320 '(']: r#185
[#320 '*']: r#185
[#320 ';']: r#185
[#320 '_']: r#185
[#320 'break']: r#185
[#320 'const']: r#185
[#320 'const_assert']: r#185
[#320 'continue']: r#185
[#320 'continuing']: r#185
[#320 'discard']: r#185
[#320 'for']: r#185
[#320 'if']: r#185
[#320 'let']: r#185
[#320 'loop']: r#185
[#320 'return']: r#185
[#320 'switch']: r#185
[#320 'var']: r#185
[#320 'while']: r#185
[#320 '{']: r#185
[#320 '}']: r#185
[#320 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#185
[#321 '&']: r#186
[#321 '(']: r#186
[#321 '*']: r#186
[#321 ';']: r#186
[#321 '_']: r#186
[#321 'break']: r#186
[#321 'const']: r#186
[#321 'const_assert']: r#186
[#321 'continue']: r#186
[#321 'continuing']: r#186
[#321 'discard']: r#186
[#321 'for']: r#186
[#321 'if']: r#186
[#321 'let']: r#186
[#321 'loop']: r#186
[#321 'return']: r#186
[#321 'switch']: r#186
[#321 'var']: r#186
[#321 'while']: r#186
[#321 '{']: r#186
[#321 '}']: r#186
[#321 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#186
[#322 '&']: r#187
[#322 '(']: r#187
[#322 '*']: r#187
[#322 ';']: r#187
[#322 '_']: r#187
[#322 'break']: r#187
[#322 'const']: r#187
[#322 'const_assert']: r#187
[#322 'continue']: r#187
[#322 'continuing']: r#187
[#322 'discard']: r#187
[#322 'for']: r#187
[#322 'if']: r#187
[#322 'let']: r#187
[#322 'loop']: r#187
[#322 'return']: r#187
[#322 'switch']: r#187
[#322 'var']: r#187
[#322 'while']: r#187
[#322 '{']: r#187
[#322 '}']: r#187
[#322 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#187
[#323 '}']: r#188
[#324 '&']: r#189
[#324 '(']: r#189
[#324 '*']: r#189
[#324 ';']: r#189
[#324 '@']: r#189
[#324 '_']: r#189
[#324 'alias']: r#189
[#324 'break']: r#189
[#324 'case']: r#189
[#324 'const']: r#189
[#324 'const_assert']: r#189
[#324 'continue']: r#189
[#324 'continuing']: r#189
[#324 'default']: r#189
[#324 'discard']: r#189
[#324 'else']: r#189
[#324 'fn']: r#189
[#324 'for']: r#189
[#324 'if']: r#189
[#324 'let']: r#189
[#324 'loop']: r#189
[#324 'override']: r#189
[#324 'return']: r#189
[#324 'struct']: r#189
[#324 'switch']: r#189
[#324 'var']: r#189
[#324 'while']: r#189
[#324 '{']: r#189
[#324 '}']: r#189
[#324 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#189
[#324 EndOfText]: r#189
[#325 /\u200B_template_args_end/]: s#354
[#326 ',']: s#352
[#327 '&&']: r#21
[#327 ',']: r#190
[#327 '||']: r#20
[#327 /\u200B_template_args_end/]: r#190
[#328 '||']: s#348
[#329 '&&']: s#347
[#330 ',']: r#191
[#330 /\u200B_template_args_end/]: r#191
[#331 ',']: s#346
[#332 ')']: r#192
[#332 ',']: r#192
[#333 ',']: s#334
[#334 '!']: s#56
[#334 '&']: s#59
[#334 '(']: s#69
[#334 '*']: s#58
[#334 '-']: s#55
[#334 'false']: s#76
[#334 'true']: s#75
[#334 '~']: s#57
[#334 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#334 /0[fh]/]: s#80
[#334 /0[iu]?/]: s#77
[#334 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#334 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#334 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#334 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#334 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#334 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#334 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#334 /[1-9][0-9]*[fh]/]: s#81
[#334 /[1-9][0-9]*[iu]?/]: s#78
[#335 '!=']: r#193
[#335 '%']: r#193
[#335 '&&']: r#193
[#335 '&']: r#193
[#335 ')']: r#193
[#335 '*']: r#193
[#335 '+']: r#193
[#335 ',']: r#193
[#335 '-']: r#193
[#335 '.']: r#193
[#335 '/']: r#193
[#335 ':']: r#193
[#335 ';']: r#193
[#335 '==']: r#193
[#335 '@']: r#193
[#335 '[']: r#193
[#335 ']']: r#193
[#335 '^']: r#193
[#335 'fn']: r#193
[#335 'override']: r#193
[#335 'var']: r#193
[#335 '{']: r#193
[#335 '|']: r#193
[#335 '||']: r#193
[#335 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#193
[#335 /\u200B_greater_than/]: r#193
[#335 /\u200B_greater_than_equal/]: r#193
[#335 /\u200B_less_than/]: r#193
[#335 /\u200B_less_than_equal/]: r#193
[#335 /\u200B_shift_left/]: r#193
[#335 /\u200B_shift_right/]: r#193
[#335 /\u200B_template_args_end/]: r#193
[#336 '.']: s#134
[#336 '[']: s#133
[#337 '!=']: r#194
[#337 '%']: r#194
[#337 '%=']: r#194
[#337 '&&']: r#194
[#337 '&']: r#194
[#337 '&=']: r#194
[#337 ')']: r#194
[#337 '*']: r#194
[#337 '*=']: r#194
[#337 '+']: r#194
[#337 '++']: r#194
[#337 '+=']: r#194
[#337 ',']: r#194
[#337 '-']: r#194
[#337 '--']: r#194
[#337 '-=']: r#194
[#337 '/']: r#194
[#337 '/=']: r#194
[#337 ':']: r#194
[#337 ';']: r#194
[#337 '=']: r#194
[#337 '==']: r#194
[#337 ']']: r#194
[#337 '^']: r#194
[#337 '^=']: r#194
[#337 '{']: r#194
[#337 '|']: r#194
[#337 '|=']: r#194
[#337 '||']: r#194
[#337 /\u200B_greater_than/]: r#194
[#337 /\u200B_greater_than_equal/]: r#194
[#337 /\u200B_less_than/]: r#194
[#337 /\u200B_less_than_equal/]: r#194
[#337 /\u200B_shift_left/]: r#194
[#337 /\u200B_shift_left_assign/]: r#194
[#337 /\u200B_shift_right/]: r#194
[#337 /\u200B_shift_right_assign/]: r#194
[#337 /\u200B_template_args_end/]: r#194
[#338 '!=']: r#195
[#338 '%']: r#195
[#338 '%=']: r#195
[#338 '&&']: r#195
[#338 '&']: r#195
[#338 '&=']: r#195
[#338 ')']: r#195
[#338 '*']: r#195
[#338 '*=']: r#195
[#338 '+']: r#195
[#338 '++']: r#195
[#338 '+=']: r#195
[#338 ',']: r#195
[#338 '-']: r#195
[#338 '--']: r#195
[#338 '-=']: r#195
[#338 '/']: r#195
[#338 '/=']: r#195
[#338 ':']: r#195
[#338 ';']: r#195
[#338 '=']: r#195
[#338 '==']: r#195
[#338 ']']: r#195
[#338 '^']: r#195
[#338 '^=']: r#195
[#338 '{']: r#195
[#338 '|']: r#195
[#338 '|=']: r#195
[#338 '||']: r#195
[#338 /\u200B_greater_than/]: r#195
[#338 /\u200B_greater_than_equal/]: r#195
[#338 /\u200B_less_than/]: r#195
[#338 /\u200B_less_than_equal/]: r#195
[#338 /\u200B_shift_left/]: r#195
[#338 /\u200B_shift_left_assign/]: r#195
[#338 /\u200B_shift_right/]: r#195
[#338 /\u200B_shift_right_assign/]: r#195
[#338 /\u200B_template_args_end/]: r#195
[#339 '!=']: r#196
[#339 '%']: r#196
[#339 '%=']: r#196
[#339 '&&']: r#196
[#339 '&']: r#196
[#339 '&=']: r#196
[#339 ')']: r#196
[#339 '*']: r#196
[#339 '*=']: r#196
[#339 '+']: r#196
[#339 '++']: r#196
[#339 '+=']: r#196
[#339 ',']: r#196
[#339 '-']: r#196
[#339 '--']: r#196
[#339 '-=']: r#196
[#339 '/']: r#196
[#339 '/=']: r#196
[#339 ':']: r#196
[#339 ';']: r#196
[#339 '=']: r#196
[#339 '==']: r#196
[#339 ']']: r#196
[#339 '^']: r#196
[#339 '^=']: r#196
[#339 '{']: r#196
[#339 '|']: r#196
[#339 '|=']: r#196
[#339 '||']: r#196
[#339 /\u200B_greater_than/]: r#196
[#339 /\u200B_greater_than_equal/]: r#196
[#339 /\u200B_less_than/]: r#196
[#339 /\u200B_less_than_equal/]: r#196
[#339 /\u200B_shift_left/]: r#196
[#339 /\u200B_shift_left_assign/]: r#196
[#339 /\u200B_shift_right/]: r#196
[#339 /\u200B_shift_right_assign/]: r#196
[#339 /\u200B_template_args_end/]: r#196
[#340 '!=']: r#197
[#340 '%']: r#197
[#340 '%=']: r#197
[#340 '&&']: r#197
[#340 '&']: r#197
[#340 '&=']: r#197
[#340 ')']: r#197
[#340 '*']: r#197
[#340 '*=']: r#197
[#340 '+']: r#197
[#340 '++']: r#197
[#340 '+=']: r#197
[#340 ',']: r#197
[#340 '-']: r#197
[#340 '--']: r#197
[#340 '-=']: r#197
[#340 '/']: r#197
[#340 '/=']: r#197
[#340 ':']: r#197
[#340 ';']: r#197
[#340 '=']: r#197
[#340 '==']: r#197
[#340 ']']: r#197
[#340 '^']: r#197
[#340 '^=']: r#197
[#340 '{']: r#197
[#340 '|']: r#197
[#340 '|=']: r#197
[#340 '||']: r#197
[#340 /\u200B_greater_than/]: r#197
[#340 /\u200B_greater_than_equal/]: r#197
[#340 /\u200B_less_than/]: r#197
[#340 /\u200B_less_than_equal/]: r#197
[#340 /\u200B_shift_left/]: r#197
[#340 /\u200B_shift_left_assign/]: r#197
[#340 /\u200B_shift_right/]: r#197
[#340 /\u200B_shift_right_assign/]: r#197
[#340 /\u200B_template_args_end/]: r#197
[#341 '!=']: r#198
[#341 '%']: r#198
[#341 '%=']: r#198
[#341 '&&']: r#198
[#341 '&']: r#198
[#341 '&=']: r#198
[#341 ')']: r#198
[#341 '*']: r#198
[#341 '*=']: r#198
[#341 '+']: r#198
[#341 '++']: r#198
[#341 '+=']: r#198
[#341 ',']: r#198
[#341 '-']: r#198
[#341 '--']: r#198
[#341 '-=']: r#198
[#341 '/']: r#198
[#341 '/=']: r#198
[#341 ':']: r#198
[#341 ';']: r#198
[#341 '=']: r#198
[#341 '==']: r#198
[#341 ']']: r#198
[#341 '^']: r#198
[#341 '^=']: r#198
[#341 '{']: r#198
[#341 '|']: r#198
[#341 '|=']: r#198
[#341 '||']: r#198
[#341 /\u200B_greater_than/]: r#198
[#341 /\u200B_greater_than_equal/]: r#198
[#341 /\u200B_less_than/]: r#198
[#341 /\u200B_less_than_equal/]: r#198
[#341 /\u200B_shift_left/]: r#198
[#341 /\u200B_shift_left_assign/]: r#198
[#341 /\u200B_shift_right/]: r#198
[#341 /\u200B_shift_right_assign/]: r#198
[#341 /\u200B_template_args_end/]: r#198
[#342 '!=']: r#199
[#342 '%']: r#199
[#342 '%=']: r#199
[#342 '&&']: r#199
[#342 '&']: r#199
[#342 '&=']: r#199
[#342 ')']: r#199
[#342 '*']: r#199
[#342 '*=']: r#199
[#342 '+']: r#199
[#342 '++']: r#199
[#342 '+=']: r#199
[#342 ',']: r#199
[#342 '-']: r#199
[#342 '--']: r#199
[#342 '-=']: r#199
[#342 '/']: r#199
[#342 '/=']: r#199
[#342 ':']: r#199
[#342 ';']: r#199
[#342 '=']: r#199
[#342 '==']: r#199
[#342 ']']: r#199
[#342 '^']: r#199
[#342 '^=']: r#199
[#342 '{']: r#199
[#342 '|']: r#199
[#342 '|=']: r#199
[#342 '||']: r#199
[#342 /\u200B_greater_than/]: r#199
[#342 /\u200B_greater_than_equal/]: r#199
[#342 /\u200B_less_than/]: r#199
[#342 /\u200B_less_than_equal/]: r#199
[#342 /\u200B_shift_left/]: r#199
[#342 /\u200B_shift_left_assign/]: r#199
[#342 /\u200B_shift_right/]: r#199
[#342 /\u200B_shift_right_assign/]: r#199
[#342 /\u200B_template_args_end/]: r#199
[#343 ')']: r#200
[#343 ',']: r#200
[#344 ')']: r#201
[#344 ',']: r#201
[#345 ')']: r#202
[#346 ')']: r#203
[#347 '!']: s#56
[#347 '&']: s#59
[#347 '(']: s#69
[#347 '*']: s#58
[#347 '-']: s#55
[#347 'false']: s#76
[#347 'true']: s#75
[#347 '~']: s#57
[#347 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#347 /0[fh]/]: s#80
[#347 /0[iu]?/]: s#77
[#347 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#347 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#347 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#347 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#347 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#347 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#347 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#347 /[1-9][0-9]*[fh]/]: s#81
[#347 /[1-9][0-9]*[iu]?/]: s#78
[#348 '!']: s#56
[#348 '&']: s#59
[#348 '(']: s#69
[#348 '*']: s#58
[#348 '-']: s#55
[#348 'false']: s#76
[#348 'true']: s#75
[#348 '~']: s#57
[#348 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#348 /0[fh]/]: s#80
[#348 /0[iu]?/]: s#77
[#348 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#348 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#348 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#348 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#348 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#348 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#348 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#348 /[1-9][0-9]*[fh]/]: s#81
[#348 /[1-9][0-9]*[iu]?/]: s#78
[#349 ',']: s#421
[#350 ',']: r#204
[#350 /\u200B_template_args_end/]: r#204
[#351 ',']: s#352
[#352 '!']: s#56
[#352 '&']: s#59
[#352 '(']: s#69
[#352 '*']: s#58
[#352 '-']: s#55
[#352 'false']: s#76
[#352 'true']: s#75
[#352 '~']: s#57
[#352 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#352 /0[fh]/]: s#80
[#352 /0[iu]?/]: s#77
[#352 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#352 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#352 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#352 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#352 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#352 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#352 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#352 /[1-9][0-9]*[fh]/]: s#81
[#352 /[1-9][0-9]*[iu]?/]: s#78
[#353 '!=']: r#205
[#353 '%']: r#205
[#353 '&&']: r#205
[#353 '&']: r#205
[#353 '(']: r#205
[#353 ')']: r#205
[#353 '*']: r#205
[#353 '+']: r#205
[#353 ',']: r#205
[#353 '-']: r#205
[#353 '.']: r#205
[#353 '/']: r#205
[#353 ':']: r#205
[#353 ';']: r#205
[#353 '=']: r#205
[#353 '==']: r#205
[#353 '[']: r#205
[#353 ']']: r#205
[#353 '^']: r#205
[#353 '{']: r#205
[#353 '|']: r#205
[#353 '||']: r#205
[#353 '}']: r#205
[#353 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#205
[#353 /\u200B_greater_than/]: r#205
[#353 /\u200B_greater_than_equal/]: r#205
[#353 /\u200B_less_than/]: r#205
[#353 /\u200B_less_than_equal/]: r#205
[#353 /\u200B_shift_left/]: r#205
[#353 /\u200B_shift_right/]: r#205
[#353 /\u200B_template_args_end/]: r#205
[#354 '!=']: r#206
[#354 '%']: r#206
[#354 '&&']: r#206
[#354 '&']: r#206
[#354 '(']: r#206
[#354 ')']: r#206
[#354 '*']: r#206
[#354 '+']: r#206
[#354 ',']: r#206
[#354 '-']: r#206
[#354 '.']: r#206
[#354 '/']: r#206
[#354 ':']: r#206
[#354 ';']: r#206
[#354 '=']: r#206
[#354 '==']: r#206
[#354 '[']: r#206
[#354 ']']: r#206
[#354 '^']: r#206
[#354 '{']: r#206
[#354 '|']: r#206
[#354 '||']: r#206
[#354 '}']: r#206
[#354 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#206
[#354 /\u200B_greater_than/]: r#206
[#354 /\u200B_greater_than_equal/]: r#206
[#354 /\u200B_less_than/]: r#206
[#354 /\u200B_less_than_equal/]: r#206
[#354 /\u200B_shift_left/]: r#206
[#354 /\u200B_shift_right/]: r#206
[#354 /\u200B_template_args_end/]: r#206
[#355 '!']: s#56
[#355 '&']: s#59
[#355 '(']: s#69
[#355 '*']: s#58
[#355 '-']: s#55
[#355 'false']: s#76
[#355 'true']: s#75
[#355 '~']: s#57
[#355 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#355 /0[fh]/]: s#80
[#355 /0[iu]?/]: s#77
[#355 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#355 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#355 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#355 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#355 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#355 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#355 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#355 /[1-9][0-9]*[fh]/]: s#81
[#355 /[1-9][0-9]*[iu]?/]: s#78
[#356 '&']: r#207
[#356 '(']: r#207
[#356 '*']: r#207
[#356 ';']: r#207
[#356 '_']: r#207
[#356 'break']: r#207
[#356 'const']: r#207
[#356 'const_assert']: r#207
[#356 'continue']: r#207
[#356 'continuing']: r#207
[#356 'discard']: r#207
[#356 'else']: r#207
[#356 'for']: r#207
[#356 'if']: r#207
[#356 'let']: r#207
[#356 'loop']: r#207
[#356 'return']: r#207
[#356 'switch']: r#207
[#356 'var']: r#207
[#356 'while']: r#207
[#356 '{']: r#207
[#356 '}']: r#207
[#356 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#207
[#357 '&']: r#208
[#357 '(']: r#208
[#357 '*']: r#208
[#357 ';']: r#208
[#357 '_']: r#208
[#357 'break']: r#208
[#357 'const']: r#208
[#357 'const_assert']: r#208
[#357 'continue']: r#208
[#357 'continuing']: r#208
[#357 'discard']: r#208
[#357 'for']: r#208
[#357 'if']: r#208
[#357 'let']: r#208
[#357 'loop']: r#208
[#357 'return']: r#208
[#357 'switch']: r#208
[#357 'var']: r#208
[#357 'while']: r#208
[#357 '{']: r#208
[#357 '}']: r#208
[#357 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#208
[#358 '&']: r#209
[#358 '(']: r#209
[#358 '*']: r#209
[#358 ';']: r#209
[#358 '_']: r#209
[#358 'break']: r#209
[#358 'const']: r#209
[#358 'const_assert']: r#209
[#358 'continue']: r#209
[#358 'continuing']: r#209
[#358 'discard']: r#209
[#358 'for']: r#209
[#358 'if']: r#209
[#358 'let']: r#209
[#358 'loop']: r#209
[#358 'return']: r#209
[#358 'switch']: r#209
[#358 'var']: r#209
[#358 'while']: r#209
[#358 '{']: r#209
[#358 '}']: r#209
[#358 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#209
[#359 '{']: s#125
[#360 'case']: s#414
[#360 'default']: s#415
[#361 'continuing']: s#408
[#362 'continuing']: r#210
[#362 '}']: r#210
[#363 '&']: s#244
[#363 '(']: s#245
[#363 '*']: s#243
[#363 ';']: s#208
[#363 '_']: s#241
[#363 'break']: s#233
[#363 'const']: s#232
[#363 'const_assert']: s#31
[#363 'continue']: s#234
[#363 'discard']: s#219
[#363 'for']: s#227
[#363 'if']: s#238
[#363 'let']: s#231
[#363 'loop']: s#226
[#363 'return']: s#223
[#363 'switch']: s#225
[#363 'var']: s#96
[#363 'while']: s#228
[#363 '{']: s#125
[#363 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#364 ')']: s#404
[#365 ';']: s#403
[#366 ';']: r#211
[#367 ';']: r#212
[#368 ';']: r#213
[#369 ';']: r#214
[#370 '&']: r#215
[#370 '(']: r#215
[#370 '*']: r#215
[#370 ';']: r#215
[#370 '_']: r#215
[#370 'break']: r#215
[#370 'const']: r#215
[#370 'const_assert']: r#215
[#370 'continue']: r#215
[#370 'continuing']: r#215
[#370 'discard']: r#215
[#370 'for']: r#215
[#370 'if']: r#215
[#370 'let']: r#215
[#370 'loop']: r#215
[#370 'return']: r#215
[#370 'switch']: r#215
[#370 'var']: r#215
[#370 'while']: r#215
[#370 '{']: r#215
[#370 '}']: r#215
[#370 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#215
[#371 ';']: r#216
[#372 '!']: s#56
[#372 '&']: s#59
[#372 '(']: s#69
[#372 '*']: s#58
[#372 '-']: s#55
[#372 'false']: s#76
[#372 'true']: s#75
[#372 '~']: s#57
[#372 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#372 /0[fh]/]: s#80
[#372 /0[iu]?/]: s#77
[#372 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#372 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#372 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#372 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#372 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#372 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#372 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#372 /[1-9][0-9]*[fh]/]: s#81
[#372 /[1-9][0-9]*[iu]?/]: s#78
[#373 '!']: s#56
[#373 '&']: s#59
[#373 '(']: s#69
[#373 '*']: s#58
[#373 '-']: s#55
[#373 'false']: s#76
[#373 'true']: s#75
[#373 '~']: s#57
[#373 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#373 /0[fh]/]: s#80
[#373 /0[iu]?/]: s#77
[#373 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#373 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#373 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#373 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#373 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#373 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#373 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#373 /[1-9][0-9]*[fh]/]: s#81
[#373 /[1-9][0-9]*[iu]?/]: s#78
[#374 '&']: r#217
[#374 '(']: r#217
[#374 '*']: r#217
[#374 ';']: r#217
[#374 '_']: r#217
[#374 'break']: r#217
[#374 'const']: r#217
[#374 'const_assert']: r#217
[#374 'continue']: r#217
[#374 'continuing']: r#217
[#374 'discard']: r#217
[#374 'else']: r#217
[#374 'for']: r#217
[#374 'if']: r#217
[#374 'let']: r#217
[#374 'loop']: r#217
[#374 'return']: r#217
[#374 'switch']: r#217
[#374 'var']: r#217
[#374 'while']: r#217
[#374 '{']: r#217
[#374 '}']: r#217
[#374 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#217
[#375 ')']: r#218
[#375 ';']: r#218
[#376 ')']: r#219
[#376 ';']: r#219
[#377 '%=']: r#175
[#377 '&=']: r#175
[#377 ')']: r#175
[#377 '*=']: r#175
[#377 '++']: r#175
[#377 '+=']: r#175
[#377 '--']: r#175
[#377 '-=']: r#175
[#377 '.']: r#175
[#377 '/=']: r#175
[#377 '=']: r#175
[#377 '[']: r#175
[#377 '^=']: r#175
[#377 '|=']: r#175
[#377 /\u200B_shift_left_assign/]: r#175
[#377 /\u200B_shift_right_assign/]: r#175
[#378 '%=']: r#220
[#378 '&=']: r#220
[#378 ')']: r#220
[#378 '*=']: r#220
[#378 '++']: r#220
[#378 '+=']: r#220
[#378 '--']: r#220
[#378 '-=']: r#220
[#378 '.']: r#220
[#378 '/=']: r#220
[#378 '=']: r#220
[#378 '[']: r#220
[#378 '^=']: r#220
[#378 '|=']: r#220
[#378 /\u200B_shift_left_assign/]: r#220
[#378 /\u200B_shift_right_assign/]: r#220
[#379 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#221
[#380 ':']: s#400
[#381 ',']: s#399
[#382 ')']: r#222
[#382 ',']: r#222
[#383 ',']: s#384
[#384 '@']: s#36
[#385 '->']: s#395
[#386 ',']: r#223
[#386 '}']: r#223
[#387 ',']: r#224
[#387 '}']: r#224
[#388 '}']: s#393
[#389 '}']: r#225
[#390 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#391 ')']: r#226
[#391 ',']: r#226
[#391 ';']: r#226
[#391 '=']: r#226
[#391 '}']: r#226
[#392 ',']: r#227
[#392 '}']: r#227
[#393 ';']: r#228
[#393 '@']: r#228
[#393 'alias']: r#228
[#393 'const']: r#228
[#393 'const_assert']: r#228
[#393 'fn']: r#228
[#393 'override']: r#228
[#393 'struct']: r#228
[#393 'var']: r#228
[#393 EndOfText]: r#228
[#394 '{']: r#229
[#395 '@']: s#36
[#396 ')']: r#230
[#396 ',']: r#230
[#397 ')']: r#231
[#397 ',']: r#231
[#398 ')']: r#232
[#399 ')']: r#233
[#400 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#401 ';']: r#234
[#402 ';']: r#235
[#403 '!']: s#56
[#403 '&']: s#59
[#403 '(']: s#69
[#403 '*']: s#58
[#403 '-']: s#55
[#403 'false']: s#76
[#403 'true']: s#75
[#403 '~']: s#57
[#403 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#403 /0[fh]/]: s#80
[#403 /0[iu]?/]: s#77
[#403 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#403 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#403 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#403 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#403 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#403 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#403 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#403 /[1-9][0-9]*[fh]/]: s#81
[#403 /[1-9][0-9]*[iu]?/]: s#78
[#404 '{']: s#125
[#405 'continuing']: r#236
[#405 '}']: r#236
[#406 '}']: s#435
[#407 '}']: r#237
[#408 '{']: s#434
[#409 '}']: s#432
[#410 '}']: r#238
[#411 'case']: s#414
[#411 'default']: s#415
[#412 'case']: r#239
[#412 'default']: r#239
[#412 '}']: r#239
[#413 'case']: r#240
[#413 'default']: r#240
[#413 '}']: r#240
[#414 '!']: s#56
[#414 '&']: s#59
[#414 '(']: s#69
[#414 '*']: s#58
[#414 '-']: s#55
[#414 'default']: s#429
[#414 'false']: s#76
[#414 'true']: s#75
[#414 '~']: s#57
[#414 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#414 /0[fh]/]: s#80
[#414 /0[iu]?/]: s#77
[#414 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#414 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#414 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#414 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#414 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#414 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#414 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#414 /[1-9][0-9]*[fh]/]: s#81
[#414 /[1-9][0-9]*[iu]?/]: s#78
[#415 ':']: s#426
[#416 '&']: r#241
[#416 '(']: r#241
[#416 '*']: r#241
[#416 ';']: r#241
[#416 '_']: r#241
[#416 'break']: r#241
[#416 'const']: r#241
[#416 'const_assert']: r#241
[#416 'continue']: r#241
[#416 'continuing']: r#241
[#416 'discard']: r#241
[#416 'for']: r#241
[#416 'if']: r#241
[#416 'let']: r#241
[#416 'loop']: r#241
[#416 'return']: r#241
[#416 'switch']: r#241
[#416 'var']: r#241
[#416 'while']: r#241
[#416 '{']: r#241
[#416 '}']: r#241
[#416 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#241
[#417 '{']: s#125
[#418 ',']: r#242
[#418 /\u200B_template_args_end/]: r#242
[#419 ',']: r#243
[#419 /\u200B_template_args_end/]: r#243
[#420 /\u200B_template_args_end/]: r#244
[#421 /\u200B_template_args_end/]: r#245
[#422 ',']: r#246
[#422 '||']: r#95
[#422 /\u200B_template_args_end/]: r#246
[#423 '&&']: r#97
[#423 ',']: r#247
[#423 /\u200B_template_args_end/]: r#247
[#424 '&']: r#248
[#424 '(']: r#248
[#424 '*']: r#248
[#424 ';']: r#248
[#424 '_']: r#248
[#424 'break']: r#248
[#424 'const']: r#248
[#424 'const_assert']: r#248
[#424 'continue']: r#248
[#424 'continuing']: r#248
[#424 'discard']: r#248
[#424 'else']: r#248
[#424 'for']: r#248
[#424 'if']: r#248
[#424 'let']: r#248
[#424 'loop']: r#248
[#424 'return']: r#248
[#424 'switch']: r#248
[#424 'var']: r#248
[#424 'while']: r#248
[#424 '{']: r#248
[#424 '}']: r#248
[#424 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#248
[#425 '{']: s#125
[#426 '{']: r#249
[#427 ':']: s#454
[#428 ',']: s#452
[#429 ',']: r#250
[#429 ':']: r#250
[#429 '{']: r#250
[#430 ',']: r#251
[#430 ':']: r#251
[#430 '{']: r#251
[#431 '}']: r#252
[#432 '&']: r#253
[#432 '(']: r#253
[#432 '*']: r#253
[#432 ';']: r#253
[#432 '_']: r#253
[#432 'break']: r#253
[#432 'const']: r#253
[#432 'const_assert']: r#253
[#432 'continue']: r#253
[#432 'continuing']: r#253
[#432 'discard']: r#253
[#432 'for']: r#253
[#432 'if']: r#253
[#432 'let']: r#253
[#432 'loop']: r#253
[#432 'return']: r#253
[#432 'switch']: r#253
[#432 'var']: r#253
[#432 'while']: r#253
[#432 '{']: r#253
[#432 '}']: r#253
[#432 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#253
[#433 '}']: r#254
[#434 '&']: s#244
[#434 '(']: s#245
[#434 '*']: s#243
[#434 ';']: s#208
[#434 '_']: s#241
[#434 'break']: s#233
[#434 'const']: s#232
[#434 'const_assert']: s#31
[#434 'continue']: s#234
[#434 'discard']: s#219
[#434 'for']: s#227
[#434 'if']: s#238
[#434 'let']: s#231
[#434 'loop']: s#226
[#434 'return']: s#223
[#434 'switch']: s#225
[#434 'var']: s#96
[#434 'while']: s#228
[#434 '{']: s#125
[#434 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#435 '&']: r#255
[#435 '(']: r#255
[#435 '*']: r#255
[#435 ';']: r#255
[#435 '_']: r#255
[#435 'break']: r#255
[#435 'const']: r#255
[#435 'const_assert']: r#255
[#435 'continue']: r#255
[#435 'continuing']: r#255
[#435 'discard']: r#255
[#435 'for']: r#255
[#435 'if']: r#255
[#435 'let']: r#255
[#435 'loop']: r#255
[#435 'return']: r#255
[#435 'switch']: r#255
[#435 'var']: r#255
[#435 'while']: r#255
[#435 '{']: r#255
[#435 '}']: r#255
[#435 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#255
[#436 '&']: r#256
[#436 '(']: r#256
[#436 '*']: r#256
[#436 ';']: r#256
[#436 '_']: r#256
[#436 'break']: r#256
[#436 'const']: r#256
[#436 'const_assert']: r#256
[#436 'continue']: r#256
[#436 'continuing']: r#256
[#436 'discard']: r#256
[#436 'for']: r#256
[#436 'if']: r#256
[#436 'let']: r#256
[#436 'loop']: r#256
[#436 'return']: r#256
[#436 'switch']: r#256
[#436 'var']: r#256
[#436 'while']: r#256
[#436 '{']: r#256
[#436 '}']: r#256
[#436 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#256
[#437 ';']: s#445
[#438 ';']: r#257
[#439 ')']: r#258
[#439 ',']: r#258
[#440 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#441 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#259
[#442 '@']: s#36
[#443 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#260
[#444 '{']: r#261
[#445 '&']: s#244
[#445 '(']: s#245
[#445 '*']: s#243
[#445 '_']: s#241
[#445 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#446 'break']: s#464
[#447 'break']: r#262
[#447 '}']: r#262
[#448 '&']: s#244
[#448 '(']: s#245
[#448 '*']: s#243
[#448 ';']: s#208
[#448 '_']: s#241
[#448 'break']: s#233
[#448 'const']: s#232
[#448 'const_assert']: s#31
[#448 'continue']: s#234
[#448 'discard']: s#219
[#448 'for']: s#227
[#448 'if']: s#238
[#448 'let']: s#231
[#448 'loop']: s#226
[#448 'return']: s#223
[#448 'switch']: s#225
[#448 'var']: s#96
[#448 'while']: s#228
[#448 '{']: s#125
[#448 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#449 ',']: s#460
[#450 ',']: r#263
[#450 ':']: r#263
[#450 '{']: r#263
[#451 ',']: s#452
[#452 '!']: s#56
[#452 '&']: s#59
[#452 '(']: s#69
[#452 '*']: s#58
[#452 '-']: s#55
[#452 'default']: s#429
[#452 'false']: s#76
[#452 'true']: s#75
[#452 '~']: s#57
[#452 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#452 /0[fh]/]: s#80
[#452 /0[iu]?/]: s#77
[#452 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#452 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#452 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#452 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#452 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#452 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#452 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#452 /[1-9][0-9]*[fh]/]: s#81
[#452 /[1-9][0-9]*[iu]?/]: s#78
[#453 '{']: s#125
[#454 '{']: r#264
[#455 'case']: r#265
[#455 'default']: r#265
[#455 '}']: r#265
[#456 'case']: r#266
[#456 'default']: r#266
[#456 '}']: r#266
[#457 ',']: r#267
[#457 ':']: r#267
[#457 '{']: r#267
[#458 ',']: r#268
[#458 ':']: r#268
[#458 '{']: r#268
[#459 ':']: r#269
[#459 '{']: r#269
[#460 ':']: r#270
[#460 '{']: r#270
[#461 'break']: r#271
[#461 '}']: r#271
[#462 '}']: s#470
[#463 '}']: r#272
[#464 'if']: s#469
[#465 ')']: r#273
[#466 ')']: r#274
[#467 ')']: r#275
[#468 ')']: r#276
[#469 '!']: s#56
[#469 '&']: s#59
[#469 '(']: s#69
[#469 '*']: s#58
[#469 '-']: s#55
[#469 'false']: s#76
[#469 'true']: s#75
[#469 '~']: s#57
[#469 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#38
[#469 /0[fh]/]: s#80
[#469 /0[iu]?/]: s#77
[#469 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#85
[#469 /0[xX][0-9a-fA-F]+[iu]?/]: s#79
[#469 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#87
[#469 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#86
[#469 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#82
[#469 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#84
[#469 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#83
[#469 /[1-9][0-9]*[fh]/]: s#81
[#469 /[1-9][0-9]*[iu]?/]: s#78
[#470 '}']: r#277
[#471 ';']: s#472
[#472 '}']: r#278

=Goto:
[#0 enable_directive]: #5
[#0 global_directive]: #4
[#0 requires_directive]: #6
[#0 translation_unit]: #1
[#0 translation_unit/0.0]: #2
[#0 translation_unit/0.0/0]: #3
[#2 attribute]: #35
[#2 const_assert_statement]: #24
[#2 function_decl]: #23
[#2 function_decl/0.0]: #30
[#2 function_decl/0.0/0]: #34
[#2 global_constant_decl]: #20
[#2 global_constant_decl/1.0]: #27
[#2 global_constant_decl/1.0/0]: #33
[#2 global_decl]: #17
[#2 global_variable_decl]: #19
[#2 global_variable_decl/0.0]: #25
[#2 global_variable_decl/0.0/0]: #32
[#2 struct_decl]: #22
[#2 translation_unit/0.1]: #15
[#2 translation_unit/0.1/0]: #16
[#2 type_alias_decl]: #21
[#4 enable_directive]: #5
[#4 global_directive]: #4
[#4 requires_directive]: #6
[#4 translation_unit/0.0/0]: #14
[#7 enable_extension_name]: #12
[#8 software_extension_list]: #9
[#8 software_extension_name]: #10
[#10 software_extension_list/0.1]: #103
[#10 software_extension_list/0.1/0]: #104
[#10 software_extension_list/0.1/0/0.0]: #105
[#17 attribute]: #35
[#17 const_assert_statement]: #24
[#17 function_decl]: #23
[#17 function_decl/0.0]: #30
[#17 function_decl/0.0/0]: #34
[#17 global_constant_decl]: #20
[#17 global_constant_decl/1.0]: #27
[#17 global_constant_decl/1.0/0]: #33
[#17 global_decl]: #17
[#17 global_variable_decl]: #19
[#17 global_variable_decl/0.0]: #25
[#17 global_variable_decl/0.0/0]: #32
[#17 struct_decl]: #22
[#17 translation_unit/0.1/0]: #101
[#17 type_alias_decl]: #21
[#25 variable_decl]: #95
[#26 ident]: #94
[#26 ident_pattern_token]: #70
[#26 optionally_typed_ident]: #93
[#28 ident]: #91
[#28 ident_pattern_token]: #70
[#29 ident]: #90
[#29 ident_pattern_token]: #70
[#30 function_header]: #88
[#31 additive_expression]: #51
[#31 binary_and_expression]: #48
[#31 binary_or_expression]: #49
[#31 binary_xor_expression]: #50
[#31 bitwise_expression]: #46
[#31 bool_literal]: #68
[#31 call_expression]: #62
[#31 decimal_float_literal]: #73
[#31 decimal_int_literal]: #71
[#31 expression]: #42
[#31 float_literal]: #67
[#31 hex_float_literal]: #74
[#31 hex_int_literal]: #72
[#31 ident]: #65
[#31 ident_pattern_token]: #70
[#31 int_literal]: #66
[#31 literal]: #63
[#31 multiplicative_expression]: #53
[#31 paren_expression]: #64
[#31 primary_expression]: #60
[#31 relational_expression]: #43
[#31 shift_expression]: #47
[#31 short_circuit_and_expression]: #45
[#31 short_circuit_or_expression]: #44
[#31 singular_expression]: #54
[#31 template_elaborated_ident]: #61
[#31 unary_expression]: #52
[#35 attribute]: #35
[#35 function_decl/0.0/0]: #41
[#35 global_constant_decl/1.0/0]: #40
[#35 global_variable_decl/0.0/0]: #39
[#36 ident_pattern_token]: #37
[#37 argument_expression_list]: #167
[#37 attribute/0.2]: #166
[#47 _greater_than]: #155
[#47 _greater_than_equal]: #157
[#47 _less_than]: #154
[#47 _less_than_equal]: #156
[#51 additive_operator]: #148
[#52 _shift_left]: #144
[#52 _shift_right]: #145
[#53 multiplicative_operator]: #140
[#55 bool_literal]: #68
[#55 call_expression]: #62
[#55 decimal_float_literal]: #73
[#55 decimal_int_literal]: #71
[#55 float_literal]: #67
[#55 hex_float_literal]: #74
[#55 hex_int_literal]: #72
[#55 ident]: #65
[#55 ident_pattern_token]: #70
[#55 int_literal]: #66
[#55 literal]: #63
[#55 paren_expression]: #64
[#55 primary_expression]: #60
[#55 singular_expression]: #54
[#55 template_elaborated_ident]: #61
[#55 unary_expression]: #139
[#56 bool_literal]: #68
[#56 call_expression]: #62
[#56 decimal_float_literal]: #73
[#56 decimal_int_literal]: #71
[#56 float_literal]: #67
[#56 hex_float_literal]: #74
[#56 hex_int_literal]: #72
[#56 ident]: #65
[#56 ident_pattern_token]: #70
[#56 int_literal]: #66
[#56 literal]: #63
[#56 paren_expression]: #64
[#56 primary_expression]: #60
[#56 singular_expression]: #54
[#56 template_elaborated_ident]: #61
[#56 unary_expression]: #138
[#57 bool_literal]: #68
[#57 call_expression]: #62
[#57 decimal_float_literal]: #73
[#57 decimal_int_literal]: #71
[#57 float_literal]: #67
[#57 hex_float_literal]: #74
[#57 hex_int_literal]: #72
[#57 ident]: #65
[#57 ident_pattern_token]: #70
[#57 int_literal]: #66
[#57 literal]: #63
[#57 paren_expression]: #64
[#57 primary_expression]: #60
[#57 singular_expression]: #54
[#57 template_elaborated_ident]: #61
[#57 unary_expression]: #137
[#58 bool_literal]: #68
[#58 call_expression]: #62
[#58 decimal_float_literal]: #73
[#58 decimal_int_literal]: #71
[#58 float_literal]: #67
[#58 hex_float_literal]: #74
[#58 hex_int_literal]: #72
[#58 ident]: #65
[#58 ident_pattern_token]: #70
[#58 int_literal]: #66
[#58 literal]: #63
[#58 paren_expression]: #64
[#58 primary_expression]: #60
[#58 singular_expression]: #54
[#58 template_elaborated_ident]: #61
[#58 unary_expression]: #136
[#59 bool_literal]: #68
[#59 call_expression]: #62
[#59 decimal_float_literal]: #73
[#59 decimal_int_literal]: #71
[#59 float_literal]: #67
[#59 hex_float_literal]: #74
[#59 hex_int_literal]: #72
[#59 ident]: #65
[#59 ident_pattern_token]: #70
[#59 int_literal]: #66
[#59 literal]: #63
[#59 paren_expression]: #64
[#59 primary_expression]: #60
[#59 singular_expression]: #54
[#59 template_elaborated_ident]: #61
[#59 unary_expression]: #135
[#60 component_or_swizzle_specifier]: #132
[#60 singular_expression/0.1]: #131
[#61 argument_expression_list]: #129
[#65 _disambiguate_template]: #128
[#69 additive_expression]: #51
[#69 binary_and_expression]: #48
[#69 binary_or_expression]: #49
[#69 binary_xor_expression]: #50
[#69 bitwise_expression]: #46
[#69 bool_literal]: #68
[#69 call_expression]: #62
[#69 decimal_float_literal]: #73
[#69 decimal_int_literal]: #71
[#69 expression]: #127
[#69 float_literal]: #67
[#69 hex_float_literal]: #74
[#69 hex_int_literal]: #72
[#69 ident]: #65
[#69 ident_pattern_token]: #70
[#69 int_literal]: #66
[#69 literal]: #63
[#69 multiplicative_expression]: #53
[#69 paren_expression]: #64
[#69 primary_expression]: #60
[#69 relational_expression]: #43
[#69 shift_expression]: #47
[#69 short_circuit_and_expression]: #45
[#69 short_circuit_or_expression]: #44
[#69 singular_expression]: #54
[#69 template_elaborated_ident]: #61
[#69 unary_expression]: #52
[#70 _disambiguate_template]: #126
[#88 compound_statement]: #124
[#89 ident]: #123
[#89 ident_pattern_token]: #70
[#90 struct_body_decl]: #121
[#92 ident]: #94
[#92 ident_pattern_token]: #70
[#92 optionally_typed_ident]: #119
[#94 optionally_typed_ident/0.1]: #116
[#95 global_variable_decl/0.2]: #114
[#96 _disambiguate_template]: #112
[#103 software_extension_list/0.2]: #110
[#105 software_extension_list/0.1/0]: #109
[#105 software_extension_list/0.1/0/0.0]: #105
[#106 software_extension_name]: #108
[#112 _template_args_start]: #202
[#112 template_list]: #259
[#112 variable_decl/0.2]: #258
[#115 additive_expression]: #51
[#115 binary_and_expression]: #48
[#115 binary_or_expression]: #49
[#115 binary_xor_expression]: #50
[#115 bitwise_expression]: #46
[#115 bool_literal]: #68
[#115 call_expression]: #62
[#115 decimal_float_literal]: #73
[#115 decimal_int_literal]: #71
[#115 expression]: #257
[#115 float_literal]: #67
[#115 hex_float_literal]: #74
[#115 hex_int_literal]: #72
[#115 ident]: #65
[#115 ident_pattern_token]: #70
[#115 int_literal]: #66
[#115 literal]: #63
[#115 multiplicative_expression]: #53
[#115 paren_expression]: #64
[#115 primary_expression]: #60
[#115 relational_expression]: #43
[#115 shift_expression]: #47
[#115 short_circuit_and_expression]: #45
[#115 short_circuit_or_expression]: #44
[#115 singular_expression]: #54
[#115 template_elaborated_ident]: #61
[#115 unary_expression]: #52
[#117 ident]: #252
[#117 ident_pattern_token]: #70
[#117 type_specifier]: #256
[#118 additive_expression]: #51
[#118 binary_and_expression]: #48
[#118 binary_or_expression]: #49
[#118 binary_xor_expression]: #50
[#118 bitwise_expression]: #46
[#118 bool_literal]: #68
[#118 call_expression]: #62
[#118 decimal_float_literal]: #73
[#118 decimal_int_literal]: #71
[#118 expression]: #255
[#118 float_literal]: #67
[#118 hex_float_literal]: #74
[#118 hex_int_literal]: #72
[#118 ident]: #65
[#118 ident_pattern_token]: #70
[#118 int_literal]: #66
[#118 literal]: #63
[#118 multiplicative_expression]: #53
[#118 paren_expression]: #64
[#118 primary_expression]: #60
[#118 relational_expression]: #43
[#118 shift_expression]: #47
[#118 short_circuit_and_expression]: #45
[#118 short_circuit_or_expression]: #44
[#118 singular_expression]: #54
[#118 template_elaborated_ident]: #61
[#118 unary_expression]: #52
[#119 global_constant_decl/1.3]: #253
[#120 ident]: #252
[#120 ident_pattern_token]: #70
[#120 type_specifier]: #251
[#122 attribute]: #250
[#122 struct_member]: #247
[#122 struct_member/0.0]: #248
[#122 struct_member/0.0/0]: #249
[#125 assignment_statement]: #235
[#125 break_statement]: #217
[#125 compound_statement]: #221
[#125 compound_statement/0.1]: #205
[#125 compound_statement/0.1/0]: #206
[#125 const_assert_statement]: #222
[#125 continue_statement]: #218
[#125 core_lhs_expression]: #242
[#125 decrement_statement]: #237
[#125 for_statement]: #213
[#125 func_call_statement]: #215
[#125 ident]: #239
[#125 ident_pattern_token]: #70
[#125 if_clause]: #224
[#125 if_statement]: #210
[#125 increment_statement]: #236
[#125 lhs_expression]: #240
[#125 loop_statement]: #212
[#125 return_statement]: #209
[#125 statement]: #207
[#125 switch_statement]: #211
[#125 template_elaborated_ident]: #229
[#125 variable_decl]: #230
[#125 variable_statement]: #216
[#125 variable_updating_statement]: #220
[#125 while_statement]: #214
[#128 _template_args_start]: #202
[#128 template_elaborated_ident/0.2]: #200
[#128 template_list]: #201
[#130 additive_expression]: #51
[#130 argument_expression_list/0.1]: #197
[#130 binary_and_expression]: #48
[#130 binary_or_expression]: #49
[#130 binary_xor_expression]: #50
[#130 bitwise_expression]: #46
[#130 bool_literal]: #68
[#130 call_expression]: #62
[#130 decimal_float_literal]: #73
[#130 decimal_int_literal]: #71
[#130 expression]: #199
[#130 expression_comma_list]: #198
[#130 float_literal]: #67
[#130 hex_float_literal]: #74
[#130 hex_int_literal]: #72
[#130 ident]: #65
[#130 ident_pattern_token]: #70
[#130 int_literal]: #66
[#130 literal]: #63
[#130 multiplicative_expression]: #53
[#130 paren_expression]: #64
[#130 primary_expression]: #60
[#130 relational_expression]: #43
[#130 shift_expression]: #47
[#130 short_circuit_and_expression]: #45
[#130 short_circuit_or_expression]: #44
[#130 singular_expression]: #54
[#130 template_elaborated_ident]: #61
[#130 unary_expression]: #52
[#133 additive_expression]: #51
[#133 binary_and_expression]: #48
[#133 binary_or_expression]: #49
[#133 binary_xor_expression]: #50
[#133 bitwise_expression]: #46
[#133 bool_literal]: #68
[#133 call_expression]: #62
[#133 decimal_float_literal]: #73
[#133 decimal_int_literal]: #71
[#133 expression]: #196
[#133 float_literal]: #67
[#133 hex_float_literal]: #74
[#133 hex_int_literal]: #72
[#133 ident]: #65
[#133 ident_pattern_token]: #70
[#133 int_literal]: #66
[#133 literal]: #63
[#133 multiplicative_expression]: #53
[#133 paren_expression]: #64
[#133 primary_expression]: #60
[#133 relational_expression]: #43
[#133 shift_expression]: #47
[#133 short_circuit_and_expression]: #45
[#133 short_circuit_or_expression]: #44
[#133 singular_expression]: #54
[#133 template_elaborated_ident]: #61
[#133 unary_expression]: #52
[#134 member_ident]: #185
[#134 swizzle_name]: #186
[#140 bool_literal]: #68
[#140 call_expression]: #62
[#140 decimal_float_literal]: #73
[#140 decimal_int_literal]: #71
[#140 float_literal]: #67
[#140 hex_float_literal]: #74
[#140 hex_int_literal]: #72
[#140 ident]: #65
[#140 ident_pattern_token]: #70
[#140 int_literal]: #66
[#140 literal]: #63
[#140 paren_expression]: #64
[#140 primary_expression]: #60
[#140 singular_expression]: #54
[#140 template_elaborated_ident]: #61
[#140 unary_expression]: #184
[#144 bool_literal]: #68
[#144 call_expression]: #62
[#144 decimal_float_literal]: #73
[#144 decimal_int_literal]: #71
[#144 float_literal]: #67
[#144 hex_float_literal]: #74
[#144 hex_int_literal]: #72
[#144 ident]: #65
[#144 ident_pattern_token]: #70
[#144 int_literal]: #66
[#144 literal]: #63
[#144 paren_expression]: #64
[#144 primary_expression]: #60
[#144 singular_expression]: #54
[#144 template_elaborated_ident]: #61
[#144 unary_expression]: #183
[#145 bool_literal]: #68
[#145 call_expression]: #62
[#145 decimal_float_literal]: #73
[#145 decimal_int_literal]: #71
[#145 float_literal]: #67
[#145 hex_float_literal]: #74
[#145 hex_int_literal]: #72
[#145 ident]: #65
[#145 ident_pattern_token]: #70
[#145 int_literal]: #66
[#145 literal]: #63
[#145 paren_expression]: #64
[#145 primary_expression]: #60
[#145 singular_expression]: #54
[#145 template_elaborated_ident]: #61
[#145 unary_expression]: #182
[#148 bool_literal]: #68
[#148 call_expression]: #62
[#148 decimal_float_literal]: #73
[#148 decimal_int_literal]: #71
[#148 float_literal]: #67
[#148 hex_float_literal]: #74
[#148 hex_int_literal]: #72
[#148 ident]: #65
[#148 ident_pattern_token]: #70
[#148 int_literal]: #66
[#148 literal]: #63
[#148 multiplicative_expression]: #180
[#148 paren_expression]: #64
[#148 primary_expression]: #60
[#148 singular_expression]: #54
[#148 template_elaborated_ident]: #61
[#148 unary_expression]: #181
[#151 bool_literal]: #68
[#151 call_expression]: #62
[#151 decimal_float_literal]: #73
[#151 decimal_int_literal]: #71
[#151 float_literal]: #67
[#151 hex_float_literal]: #74
[#151 hex_int_literal]: #72
[#151 ident]: #65
[#151 ident_pattern_token]: #70
[#151 int_literal]: #66
[#151 literal]: #63
[#151 paren_expression]: #64
[#151 primary_expression]: #60
[#151 singular_expression]: #54
[#151 template_elaborated_ident]: #61
[#151 unary_expression]: #179
[#152 bool_literal]: #68
[#152 call_expression]: #62
[#152 decimal_float_literal]: #73
[#152 decimal_int_literal]: #71
[#152 float_literal]: #67
[#152 hex_float_literal]: #74
[#152 hex_int_literal]: #72
[#152 ident]: #65
[#152 ident_pattern_token]: #70
[#152 int_literal]: #66
[#152 literal]: #63
[#152 paren_expression]: #64
[#152 primary_expression]: #60
[#152 singular_expression]: #54
[#152 template_elaborated_ident]: #61
[#152 unary_expression]: #178
[#153 bool_literal]: #68
[#153 call_expression]: #62
[#153 decimal_float_literal]: #73
[#153 decimal_int_literal]: #71
[#153 float_literal]: #67
[#153 hex_float_literal]: #74
[#153 hex_int_literal]: #72
[#153 ident]: #65
[#153 ident_pattern_token]: #70
[#153 int_literal]: #66
[#153 literal]: #63
[#153 paren_expression]: #64
[#153 primary_expression]: #60
[#153 singular_expression]: #54
[#153 template_elaborated_ident]: #61
[#153 unary_expression]: #177
[#154 additive_expression]: #51
[#154 bool_literal]: #68
[#154 call_expression]: #62
[#154 decimal_float_literal]: #73
[#154 decimal_int_literal]: #71
[#154 float_literal]: #67
[#154 hex_float_literal]: #74
[#154 hex_int_literal]: #72
[#154 ident]: #65
[#154 ident_pattern_token]: #70
[#154 int_literal]: #66
[#154 literal]: #63
[#154 multiplicative_expression]: #53
[#154 paren_expression]: #64
[#154 primary_expression]: #60
[#154 shift_expression]: #176
[#154 singular_expression]: #54
[#154 template_elaborated_ident]: #61
[#154 unary_expression]: #169
[#155 additive_expression]: #51
[#155 bool_literal]: #68
[#155 call_expression]: #62
[#155 decimal_float_literal]: #73
[#155 decimal_int_literal]: #71
[#155 float_literal]: #67
[#155 hex_float_literal]: #74
[#155 hex_int_literal]: #72
[#155 ident]: #65
[#155 ident_pattern_token]: #70
[#155 int_literal]: #66
[#155 literal]: #63
[#155 multiplicative_expression]: #53
[#155 paren_expression]: #64
[#155 primary_expression]: #60
[#155 shift_expression]: #175
[#155 singular_expression]: #54
[#155 template_elaborated_ident]: #61
[#155 unary_expression]: #169
[#156 additive_expression]: #51
[#156 bool_literal]: #68
[#156 call_expression]: #62
[#156 decimal_float_literal]: #73
[#156 decimal_int_literal]: #71
[#156 float_literal]: #67
[#156 hex_float_literal]: #74
[#156 hex_int_literal]: #72
[#156 ident]: #65
[#156 ident_pattern_token]: #70
[#156 int_literal]: #66
[#156 literal]: #63
[#156 multiplicative_expression]: #53
[#156 paren_expression]: #64
[#156 primary_expression]: #60
[#156 shift_expression]: #174
[#156 singular_expression]: #54
[#156 template_elaborated_ident]: #61
[#156 unary_expression]: #169
[#157 additive_expression]: #51
[#157 bool_literal]: #68
[#157 call_expression]: #62
[#157 decimal_float_literal]: #73
[#157 decimal_int_literal]: #71
[#157 float_literal]: #67
[#157 hex_float_literal]: #74
[#157 hex_int_literal]: #72
[#157 ident]: #65
[#157 ident_pattern_token]: #70
[#157 int_literal]: #66
[#157 literal]: #63
[#157 multiplicative_expression]: #53
[#157 paren_expression]: #64
[#157 primary_expression]: #60
[#157 shift_expression]: #173
[#157 singular_expression]: #54
[#157 template_elaborated_ident]: #61
[#157 unary_expression]: #169
[#158 additive_expression]: #51
[#158 bool_literal]: #68
[#158 call_expression]: #62
[#158 decimal_float_literal]: #73
[#158 decimal_int_literal]: #71
[#158 float_literal]: #67
[#158 hex_float_literal]: #74
[#158 hex_int_literal]: #72
[#158 ident]: #65
[#158 ident_pattern_token]: #70
[#158 int_literal]: #66
[#158 literal]: #63
[#158 multiplicative_expression]: #53
[#158 paren_expression]: #64
[#158 primary_expression]: #60
[#158 shift_expression]: #172
[#158 singular_expression]: #54
[#158 template_elaborated_ident]: #61
[#158 unary_expression]: #169
[#159 additive_expression]: #51
[#159 bool_literal]: #68
[#159 call_expression]: #62
[#159 decimal_float_literal]: #73
[#159 decimal_int_literal]: #71
[#159 float_literal]: #67
[#159 hex_float_literal]: #74
[#159 hex_int_literal]: #72
[#159 ident]: #65
[#159 ident_pattern_token]: #70
[#159 int_literal]: #66
[#159 literal]: #63
[#159 multiplicative_expression]: #53
[#159 paren_expression]: #64
[#159 primary_expression]: #60
[#159 shift_expression]: #171
[#159 singular_expression]: #54
[#159 template_elaborated_ident]: #61
[#159 unary_expression]: #169
[#164 additive_expression]: #51
[#164 bool_literal]: #68
[#164 call_expression]: #62
[#164 decimal_float_literal]: #73
[#164 decimal_int_literal]: #71
[#164 float_literal]: #67
[#164 hex_float_literal]: #74
[#164 hex_int_literal]: #72
[#164 ident]: #65
[#164 ident_pattern_token]: #70
[#164 int_literal]: #66
[#164 literal]: #63
[#164 multiplicative_expression]: #53
[#164 paren_expression]: #64
[#164 primary_expression]: #60
[#164 relational_expression]: #170
[#164 shift_expression]: #47
[#164 singular_expression]: #54
[#164 template_elaborated_ident]: #61
[#164 unary_expression]: #169
[#165 additive_expression]: #51
[#165 bool_literal]: #68
[#165 call_expression]: #62
[#165 decimal_float_literal]: #73
[#165 decimal_int_literal]: #71
[#165 float_literal]: #67
[#165 hex_float_literal]: #74
[#165 hex_int_literal]: #72
[#165 ident]: #65
[#165 ident_pattern_token]: #70
[#165 int_literal]: #66
[#165 literal]: #63
[#165 multiplicative_expression]: #53
[#165 paren_expression]: #64
[#165 primary_expression]: #60
[#165 relational_expression]: #168
[#165 shift_expression]: #47
[#165 singular_expression]: #54
[#165 template_elaborated_ident]: #61
[#165 unary_expression]: #169
[#169 _shift_left]: #144
[#169 _shift_right]: #145
[#180 multiplicative_operator]: #140
[#185 component_or_swizzle_specifier]: #340
[#185 component_or_swizzle_specifier/1.2]: #339
[#186 component_or_swizzle_specifier]: #338
[#186 component_or_swizzle_specifier/2.2]: #337
[#199 expression_comma_list/0.1]: #331
[#199 expression_comma_list/0.1/0]: #332
[#199 expression_comma_list/0.1/0/0.0]: #333
[#202 additive_expression]: #51
[#202 binary_and_expression]: #48
[#202 binary_or_expression]: #49
[#202 binary_xor_expression]: #50
[#202 bitwise_expression]: #330
[#202 bool_literal]: #68
[#202 call_expression]: #62
[#202 decimal_float_literal]: #73
[#202 decimal_int_literal]: #71
[#202 float_literal]: #67
[#202 hex_float_literal]: #74
[#202 hex_int_literal]: #72
[#202 ident]: #65
[#202 ident_pattern_token]: #70
[#202 int_literal]: #66
[#202 literal]: #63
[#202 multiplicative_expression]: #53
[#202 paren_expression]: #64
[#202 primary_expression]: #60
[#202 relational_expression]: #327
[#202 shift_expression]: #47
[#202 short_circuit_and_expression]: #329
[#202 short_circuit_or_expression]: #328
[#202 singular_expression]: #54
[#202 template_arg_comma_list]: #325
[#202 template_arg_expression]: #326
[#202 template_elaborated_ident]: #61
[#202 unary_expression]: #52
[#207 assignment_statement]: #235
[#207 break_statement]: #217
[#207 compound_statement]: #221
[#207 compound_statement/0.1/0]: #323
[#207 const_assert_statement]: #222
[#207 continue_statement]: #218
[#207 core_lhs_expression]: #242
[#207 decrement_statement]: #237
[#207 for_statement]: #213
[#207 func_call_statement]: #215
[#207 ident]: #239
[#207 ident_pattern_token]: #70
[#207 if_clause]: #224
[#207 if_statement]: #210
[#207 increment_statement]: #236
[#207 lhs_expression]: #240
[#207 loop_statement]: #212
[#207 return_statement]: #209
[#207 statement]: #207
[#207 switch_statement]: #211
[#207 template_elaborated_ident]: #229
[#207 variable_decl]: #230
[#207 variable_statement]: #216
[#207 variable_updating_statement]: #220
[#207 while_statement]: #214
[#223 additive_expression]: #51
[#223 binary_and_expression]: #48
[#223 binary_or_expression]: #49
[#223 binary_xor_expression]: #50
[#223 bitwise_expression]: #46
[#223 bool_literal]: #68
[#223 call_expression]: #62
[#223 decimal_float_literal]: #73
[#223 decimal_int_literal]: #71
[#223 expression]: #314
[#223 float_literal]: #67
[#223 hex_float_literal]: #74
[#223 hex_int_literal]: #72
[#223 ident]: #65
[#223 ident_pattern_token]: #70
[#223 int_literal]: #66
[#223 literal]: #63
[#223 multiplicative_expression]: #53
[#223 paren_expression]: #64
[#223 primary_expression]: #60
[#223 relational_expression]: #43
[#223 return_statement/0.1]: #313
[#223 shift_expression]: #47
[#223 short_circuit_and_expression]: #45
[#223 short_circuit_or_expression]: #44
[#223 singular_expression]: #54
[#223 template_elaborated_ident]: #61
[#223 unary_expression]: #52
[#224 else_if_clause]: #311
[#224 if_statement/0.1]: #309
[#224 if_statement/0.1/0]: #310
[#225 additive_expression]: #51
[#225 binary_and_expression]: #48
[#225 binary_or_expression]: #49
[#225 binary_xor_expression]: #50
[#225 bitwise_expression]: #46
[#225 bool_literal]: #68
[#225 call_expression]: #62
[#225 decimal_float_literal]: #73
[#225 decimal_int_literal]: #71
[#225 expression]: #308
[#225 float_literal]: #67
[#225 hex_float_literal]: #74
[#225 hex_int_literal]: #72
[#225 ident]: #65
[#225 ident_pattern_token]: #70
[#225 int_literal]: #66
[#225 literal]: #63
[#225 multiplicative_expression]: #53
[#225 paren_expression]: #64
[#225 primary_expression]: #60
[#225 relational_expression]: #43
[#225 shift_expression]: #47
[#225 short_circuit_and_expression]: #45
[#225 short_circuit_or_expression]: #44
[#225 singular_expression]: #54
[#225 template_elaborated_ident]: #61
[#225 unary_expression]: #52
[#228 additive_expression]: #51
[#228 binary_and_expression]: #48
[#228 binary_or_expression]: #49
[#228 binary_xor_expression]: #50
[#228 bitwise_expression]: #46
[#228 bool_literal]: #68
[#228 call_expression]: #62
[#228 decimal_float_literal]: #73
[#228 decimal_int_literal]: #71
[#228 expression]: #305
[#228 float_literal]: #67
[#228 hex_float_literal]: #74
[#228 hex_int_literal]: #72
[#228 ident]: #65
[#228 ident_pattern_token]: #70
[#228 int_literal]: #66
[#228 literal]: #63
[#228 multiplicative_expression]: #53
[#228 paren_expression]: #64
[#228 primary_expression]: #60
[#228 relational_expression]: #43
[#228 shift_expression]: #47
[#228 short_circuit_and_expression]: #45
[#228 short_circuit_or_expression]: #44
[#228 singular_expression]: #54
[#228 template_elaborated_ident]: #61
[#228 unary_expression]: #52
[#229 argument_expression_list]: #304
[#231 ident]: #94
[#231 ident_pattern_token]: #70
[#231 optionally_typed_ident]: #302
[#232 ident]: #94
[#232 ident_pattern_token]: #70
[#232 optionally_typed_ident]: #301
[#238 additive_expression]: #51
[#238 binary_and_expression]: #48
[#238 binary_or_expression]: #49
[#238 binary_xor_expression]: #50
[#238 bitwise_expression]: #46
[#238 bool_literal]: #68
[#238 call_expression]: #62
[#238 decimal_float_literal]: #73
[#238 decimal_int_literal]: #71
[#238 expression]: #300
[#238 float_literal]: #67
[#238 hex_float_literal]: #74
[#238 hex_int_literal]: #72
[#238 ident]: #65
[#238 ident_pattern_token]: #70
[#238 int_literal]: #66
[#238 literal]: #63
[#238 multiplicative_expression]: #53
[#238 paren_expression]: #64
[#238 primary_expression]: #60
[#238 relational_expression]: #43
[#238 shift_expression]: #47
[#238 short_circuit_and_expression]: #45
[#238 short_circuit_or_expression]: #44
[#238 singular_expression]: #54
[#238 template_elaborated_ident]: #61
[#238 unary_expression]: #52
[#239 _disambiguate_template]: #299
[#240 _shift_left_assign]: #296
[#240 _shift_right_assign]: #295
[#240 assignment_statement/0.1]: #282
[#240 compound_assignment_operator]: #286
[#242 component_or_swizzle_specifier]: #280
[#242 lhs_expression/0.1]: #279
[#243 core_lhs_expression]: #242
[#243 ident]: #276
[#243 ident_pattern_token]: #70
[#243 lhs_expression]: #278
[#244 core_lhs_expression]: #242
[#244 ident]: #276
[#244 ident_pattern_token]: #70
[#244 lhs_expression]: #277
[#245 core_lhs_expression]: #242
[#245 ident]: #276
[#245 ident_pattern_token]: #70
[#245 lhs_expression]: #275
[#246 attribute]: #274
[#246 function_header/0.3]: #269
[#246 param]: #271
[#246 param/0.0]: #272
[#246 param/0.0/0]: #273
[#246 param_list]: #270
[#247 struct_body_decl/0.2]: #265
[#247 struct_body_decl/0.2/0]: #266
[#247 struct_body_decl/0.2/0/0.0]: #267
[#248 member_ident]: #264
[#250 attribute]: #250
[#250 struct_member/0.0/0]: #263
[#252 _disambiguate_template]: #262
[#254 additive_expression]: #51
[#254 binary_and_expression]: #48
[#254 binary_or_expression]: #49
[#254 binary_xor_expression]: #50
[#254 bitwise_expression]: #46
[#254 bool_literal]: #68
[#254 call_expression]: #62
[#254 decimal_float_literal]: #73
[#254 decimal_int_literal]: #71
[#254 expression]: #261
[#254 float_literal]: #67
[#254 hex_float_literal]: #74
[#254 hex_int_literal]: #72
[#254 ident]: #65
[#254 ident_pattern_token]: #70
[#254 int_literal]: #66
[#254 literal]: #63
[#254 multiplicative_expression]: #53
[#254 paren_expression]: #64
[#254 primary_expression]: #60
[#254 relational_expression]: #43
[#254 shift_expression]: #47
[#254 short_circuit_and_expression]: #45
[#254 short_circuit_or_expression]: #44
[#254 singular_expression]: #54
[#254 template_elaborated_ident]: #61
[#254 unary_expression]: #52
[#258 ident]: #94
[#258 ident_pattern_token]: #70
[#258 optionally_typed_ident]: #260
[#262 _template_args_start]: #202
[#262 template_elaborated_ident/0.2]: #391
[#262 template_list]: #201
[#265 struct_body_decl/0.3]: #388
[#267 struct_body_decl/0.2/0]: #387
[#267 struct_body_decl/0.2/0/0.0]: #267
[#268 attribute]: #250
[#268 struct_member]: #386
[#268 struct_member/0.0]: #248
[#268 struct_member/0.0/0]: #249
[#271 param_list/0.1]: #381
[#271 param_list/0.1/0]: #382
[#271 param_list/0.1/0/0.0]: #383
[#272 ident]: #380
[#272 ident_pattern_token]: #70
[#274 attribute]: #274
[#274 param/0.0/0]: #379
[#276 _disambiguate_template]: #377
[#281 additive_expression]: #51
[#281 binary_and_expression]: #48
[#281 binary_or_expression]: #49
[#281 binary_xor_expression]: #50
[#281 bitwise_expression]: #46
[#281 bool_literal]: #68
[#281 call_expression]: #62
[#281 decimal_float_literal]: #73
[#281 decimal_int_literal]: #71
[#281 expression]: #376
[#281 float_literal]: #67
[#281 hex_float_literal]: #74
[#281 hex_int_literal]: #72
[#281 ident]: #65
[#281 ident_pattern_token]: #70
[#281 int_literal]: #66
[#281 literal]: #63
[#281 multiplicative_expression]: #53
[#281 paren_expression]: #64
[#281 primary_expression]: #60
[#281 relational_expression]: #43
[#281 shift_expression]: #47
[#281 short_circuit_and_expression]: #45
[#281 short_circuit_or_expression]: #44
[#281 singular_expression]: #54
[#281 template_elaborated_ident]: #61
[#281 unary_expression]: #52
[#282 additive_expression]: #51
[#282 binary_and_expression]: #48
[#282 binary_or_expression]: #49
[#282 binary_xor_expression]: #50
[#282 bitwise_expression]: #46
[#282 bool_literal]: #68
[#282 call_expression]: #62
[#282 decimal_float_literal]: #73
[#282 decimal_int_literal]: #71
[#282 expression]: #375
[#282 float_literal]: #67
[#282 hex_float_literal]: #74
[#282 hex_int_literal]: #72
[#282 ident]: #65
[#282 ident_pattern_token]: #70
[#282 int_literal]: #66
[#282 literal]: #63
[#282 multiplicative_expression]: #53
[#282 paren_expression]: #64
[#282 primary_expression]: #60
[#282 relational_expression]: #43
[#282 shift_expression]: #47
[#282 short_circuit_and_expression]: #45
[#282 short_circuit_or_expression]: #44
[#282 singular_expression]: #54
[#282 template_elaborated_ident]: #61
[#282 unary_expression]: #52
[#299 _template_args_start]: #202
[#299 template_elaborated_ident/0.2]: #200
[#299 template_list]: #201
[#300 compound_statement]: #374
[#303 additive_expression]: #51
[#303 binary_and_expression]: #48
[#303 binary_or_expression]: #49
[#303 binary_xor_expression]: #50
[#303 bitwise_expression]: #46
[#303 bool_literal]: #68
[#303 call_expression]: #62
[#303 decimal_float_literal]: #73
[#303 decimal_int_literal]: #71
[#303 expression]: #371
[#303 float_literal]: #67
[#303 hex_float_literal]: #74
[#303 hex_int_literal]: #72
[#303 ident]: #65
[#303 ident_pattern_token]: #70
[#303 int_literal]: #66
[#303 literal]: #63
[#303 multiplicative_expression]: #53
[#303 paren_expression]: #64
[#303 primary_expression]: #60
[#303 relational_expression]: #43
[#303 shift_expression]: #47
[#303 short_circuit_and_expression]: #45
[#303 short_circuit_or_expression]: #44
[#303 singular_expression]: #54
[#303 template_elaborated_ident]: #61
[#303 unary_expression]: #52
[#305 compound_statement]: #370
[#306 assignment_statement]: #235
[#306 core_lhs_expression]: #242
[#306 decrement_statement]: #237
[#306 for_header]: #364
[#306 for_header/0.0]: #365
[#306 for_init]: #366
[#306 func_call_statement]: #369
[#306 ident]: #239
[#306 ident_pattern_token]: #70
[#306 increment_statement]: #236
[#306 lhs_expression]: #240
[#306 template_elaborated_ident]: #229
[#306 variable_decl]: #230
[#306 variable_statement]: #367
[#306 variable_updating_statement]: #368
[#307 assignment_statement]: #235
[#307 break_statement]: #217
[#307 compound_statement]: #221
[#307 const_assert_statement]: #222
[#307 continue_statement]: #218
[#307 core_lhs_expression]: #242
[#307 decrement_statement]: #237
[#307 for_statement]: #213
[#307 func_call_statement]: #215
[#307 ident]: #239
[#307 ident_pattern_token]: #70
[#307 if_clause]: #224
[#307 if_statement]: #210
[#307 increment_statement]: #236
[#307 lhs_expression]: #240
[#307 loop_statement]: #212
[#307 loop_statement/0.2]: #361
[#307 loop_statement/0.2/0]: #362
[#307 return_statement]: #209
[#307 statement]: #363
[#307 switch_statement]: #211
[#307 template_elaborated_ident]: #229
[#307 variable_decl]: #230
[#307 variable_statement]: #216
[#307 variable_updating_statement]: #220
[#307 while_statement]: #214
[#309 else_clause]: #358
[#309 if_statement/0.2]: #357
[#311 else_if_clause]: #311
[#311 if_statement/0.1/0]: #356
[#325 _template_args_end]: #353
[#326 template_arg_comma_list/0.1]: #349
[#326 template_arg_comma_list/0.1/0]: #350
[#326 template_arg_comma_list/0.1/0/0.0]: #351
[#331 expression_comma_list/0.2]: #345
[#333 expression_comma_list/0.1/0]: #344
[#333 expression_comma_list/0.1/0/0.0]: #333
[#334 additive_expression]: #51
[#334 binary_and_expression]: #48
[#334 binary_or_expression]: #49
[#334 binary_xor_expression]: #50
[#334 bitwise_expression]: #46
[#334 bool_literal]: #68
[#334 call_expression]: #62
[#334 decimal_float_literal]: #73
[#334 decimal_int_literal]: #71
[#334 expression]: #343
[#334 float_literal]: #67
[#334 hex_float_literal]: #74
[#334 hex_int_literal]: #72
[#334 ident]: #65
[#334 ident_pattern_token]: #70
[#334 int_literal]: #66
[#334 literal]: #63
[#334 multiplicative_expression]: #53
[#334 paren_expression]: #64
[#334 primary_expression]: #60
[#334 relational_expression]: #43
[#334 shift_expression]: #47
[#334 short_circuit_and_expression]: #45
[#334 short_circuit_or_expression]: #44
[#334 singular_expression]: #54
[#334 template_elaborated_ident]: #61
[#334 unary_expression]: #52
[#336 component_or_swizzle_specifier]: #342
[#336 component_or_swizzle_specifier/0.3]: #341
[#347 additive_expression]: #51
[#347 bool_literal]: #68
[#347 call_expression]: #62
[#347 decimal_float_literal]: #73
[#347 decimal_int_literal]: #71
[#347 float_literal]: #67
[#347 hex_float_literal]: #74
[#347 hex_int_literal]: #72
[#347 ident]: #65
[#347 ident_pattern_token]: #70
[#347 int_literal]: #66
[#347 literal]: #63
[#347 multiplicative_expression]: #53
[#347 paren_expression]: #64
[#347 primary_expression]: #60
[#347 relational_expression]: #423
[#347 shift_expression]: #47
[#347 singular_expression]: #54
[#347 template_elaborated_ident]: #61
[#347 unary_expression]: #169
[#348 additive_expression]: #51
[#348 bool_literal]: #68
[#348 call_expression]: #62
[#348 decimal_float_literal]: #73
[#348 decimal_int_literal]: #71
[#348 float_literal]: #67
[#348 hex_float_literal]: #74
[#348 hex_int_literal]: #72
[#348 ident]: #65
[#348 ident_pattern_token]: #70
[#348 int_literal]: #66
[#348 literal]: #63
[#348 multiplicative_expression]: #53
[#348 paren_expression]: #64
[#348 primary_expression]: #60
[#348 relational_expression]: #422
[#348 shift_expression]: #47
[#348 singular_expression]: #54
[#348 template_elaborated_ident]: #61
[#348 unary_expression]: #169
[#349 template_arg_comma_list/0.2]: #420
[#351 template_arg_comma_list/0.1/0]: #419
[#351 template_arg_comma_list/0.1/0/0.0]: #351
[#352 additive_expression]: #51
[#352 binary_and_expression]: #48
[#352 binary_or_expression]: #49
[#352 binary_xor_expression]: #50
[#352 bitwise_expression]: #330
[#352 bool_literal]: #68
[#352 call_expression]: #62
[#352 decimal_float_literal]: #73
[#352 decimal_int_literal]: #71
[#352 float_literal]: #67
[#352 hex_float_literal]: #74
[#352 hex_int_literal]: #72
[#352 ident]: #65
[#352 ident_pattern_token]: #70
[#352 int_literal]: #66
[#352 literal]: #63
[#352 multiplicative_expression]: #53
[#352 paren_expression]: #64
[#352 primary_expression]: #60
[#352 relational_expression]: #327
[#352 shift_expression]: #47
[#352 short_circuit_and_expression]: #329
[#352 short_circuit_or_expression]: #328
[#352 singular_expression]: #54
[#352 template_arg_expression]: #418
[#352 template_elaborated_ident]: #61
[#352 unary_expression]: #52
[#355 additive_expression]: #51
[#355 binary_and_expression]: #48
[#355 binary_or_expression]: #49
[#355 binary_xor_expression]: #50
[#355 bitwise_expression]: #46
[#355 bool_literal]: #68
[#355 call_expression]: #62
[#355 decimal_float_literal]: #73
[#355 decimal_int_literal]: #71
[#355 expression]: #417
[#355 float_literal]: #67
[#355 hex_float_literal]: #74
[#355 hex_int_literal]: #72
[#355 ident]: #65
[#355 ident_pattern_token]: #70
[#355 int_literal]: #66
[#355 literal]: #63
[#355 multiplicative_expression]: #53
[#355 paren_expression]: #64
[#355 primary_expression]: #60
[#355 relational_expression]: #43
[#355 shift_expression]: #47
[#355 short_circuit_and_expression]: #45
[#355 short_circuit_or_expression]: #44
[#355 singular_expression]: #54
[#355 template_elaborated_ident]: #61
[#355 unary_expression]: #52
[#359 compound_statement]: #416
[#360 case_clause]: #412
[#360 default_alone_clause]: #413
[#360 switch_body]: #411
[#360 switch_statement/0.3]: #409
[#360 switch_statement/0.3/0]: #410
[#361 continuing_statement]: #407
[#361 loop_statement/0.3]: #406
[#363 assignment_statement]: #235
[#363 break_statement]: #217
[#363 compound_statement]: #221
[#363 const_assert_statement]: #222
[#363 continue_statement]: #218
[#363 core_lhs_expression]: #242
[#363 decrement_statement]: #237
[#363 for_statement]: #213
[#363 func_call_statement]: #215
[#363 ident]: #239
[#363 ident_pattern_token]: #70
[#363 if_clause]: #224
[#363 if_statement]: #210
[#363 increment_statement]: #236
[#363 lhs_expression]: #240
[#363 loop_statement]: #212
[#363 loop_statement/0.2/0]: #405
[#363 return_statement]: #209
[#363 statement]: #363
[#363 switch_statement]: #211
[#363 template_elaborated_ident]: #229
[#363 variable_decl]: #230
[#363 variable_statement]: #216
[#363 variable_updating_statement]: #220
[#363 while_statement]: #214
[#372 additive_expression]: #51
[#372 binary_and_expression]: #48
[#372 binary_or_expression]: #49
[#372 binary_xor_expression]: #50
[#372 bitwise_expression]: #46
[#372 bool_literal]: #68
[#372 call_expression]: #62
[#372 decimal_float_literal]: #73
[#372 decimal_int_literal]: #71
[#372 expression]: #402
[#372 float_literal]: #67
[#372 hex_float_literal]: #74
[#372 hex_int_literal]: #72
[#372 ident]: #65
[#372 ident_pattern_token]: #70
[#372 int_literal]: #66
[#372 literal]: #63
[#372 multiplicative_expression]: #53
[#372 paren_expression]: #64
[#372 primary_expression]: #60
[#372 relational_expression]: #43
[#372 shift_expression]: #47
[#372 short_circuit_and_expression]: #45
[#372 short_circuit_or_expression]: #44
[#372 singular_expression]: #54
[#372 template_elaborated_ident]: #61
[#372 unary_expression]: #52
[#373 additive_expression]: #51
[#373 binary_and_expression]: #48
[#373 binary_or_expression]: #49
[#373 binary_xor_expression]: #50
[#373 bitwise_expression]: #46
[#373 bool_literal]: #68
[#373 call_expression]: #62
[#373 decimal_float_literal]: #73
[#373 decimal_int_literal]: #71
[#373 expression]: #401
[#373 float_literal]: #67
[#373 hex_float_literal]: #74
[#373 hex_int_literal]: #72
[#373 ident]: #65
[#373 ident_pattern_token]: #70
[#373 int_literal]: #66
[#373 literal]: #63
[#373 multiplicative_expression]: #53
[#373 paren_expression]: #64
[#373 primary_expression]: #60
[#373 relational_expression]: #43
[#373 shift_expression]: #47
[#373 short_circuit_and_expression]: #45
[#373 short_circuit_or_expression]: #44
[#373 singular_expression]: #54
[#373 template_elaborated_ident]: #61
[#373 unary_expression]: #52
[#381 param_list/0.2]: #398
[#383 param_list/0.1/0]: #397
[#383 param_list/0.1/0/0.0]: #383
[#384 attribute]: #274
[#384 param]: #396
[#384 param/0.0]: #272
[#384 param/0.0/0]: #273
[#385 function_header/0.5]: #394
[#390 ident]: #252
[#390 ident_pattern_token]: #70
[#390 type_specifier]: #392
[#395 attribute]: #442
[#395 function_header/0.5/0.1]: #440
[#395 function_header/0.5/0.1/0]: #441
[#400 ident]: #252
[#400 ident_pattern_token]: #70
[#400 type_specifier]: #439
[#403 additive_expression]: #51
[#403 binary_and_expression]: #48
[#403 binary_or_expression]: #49
[#403 binary_xor_expression]: #50
[#403 bitwise_expression]: #46
[#403 bool_literal]: #68
[#403 call_expression]: #62
[#403 decimal_float_literal]: #73
[#403 decimal_int_literal]: #71
[#403 expression]: #438
[#403 float_literal]: #67
[#403 for_header/0.2]: #437
[#403 hex_float_literal]: #74
[#403 hex_int_literal]: #72
[#403 ident]: #65
[#403 ident_pattern_token]: #70
[#403 int_literal]: #66
[#403 literal]: #63
[#403 multiplicative_expression]: #53
[#403 paren_expression]: #64
[#403 primary_expression]: #60
[#403 relational_expression]: #43
[#403 shift_expression]: #47
[#403 short_circuit_and_expression]: #45
[#403 short_circuit_or_expression]: #44
[#403 singular_expression]: #54
[#403 template_elaborated_ident]: #61
[#403 unary_expression]: #52
[#404 compound_statement]: #436
[#408 continuing_compound_statement]: #433
[#411 case_clause]: #412
[#411 default_alone_clause]: #413
[#411 switch_body]: #411
[#411 switch_statement/0.3/0]: #431
[#414 additive_expression]: #51
[#414 binary_and_expression]: #48
[#414 binary_or_expression]: #49
[#414 binary_xor_expression]: #50
[#414 bitwise_expression]: #46
[#414 bool_literal]: #68
[#414 call_expression]: #62
[#414 case_selector]: #428
[#414 case_selectors]: #427
[#414 decimal_float_literal]: #73
[#414 decimal_int_literal]: #71
[#414 expression]: #430
[#414 float_literal]: #67
[#414 hex_float_literal]: #74
[#414 hex_int_literal]: #72
[#414 ident]: #65
[#414 ident_pattern_token]: #70
[#414 int_literal]: #66
[#414 literal]: #63
[#414 multiplicative_expression]: #53
[#414 paren_expression]: #64
[#414 primary_expression]: #60
[#414 relational_expression]: #43
[#414 shift_expression]: #47
[#414 short_circuit_and_expression]: #45
[#414 short_circuit_or_expression]: #44
[#414 singular_expression]: #54
[#414 template_elaborated_ident]: #61
[#414 unary_expression]: #52
[#415 default_alone_clause/0.1]: #425
[#417 compound_statement]: #424
[#425 compound_statement]: #455
[#427 case_clause/0.2]: #453
[#428 case_selectors/0.1]: #449
[#428 case_selectors/0.1/0]: #450
[#428 case_selectors/0.1/0/0.0]: #451
[#434 assignment_statement]: #235
[#434 break_statement]: #217
[#434 compound_statement]: #221
[#434 const_assert_statement]: #222
[#434 continue_statement]: #218
[#434 continuing_compound_statement/0.1]: #446
[#434 continuing_compound_statement/0.1/0]: #447
[#434 core_lhs_expression]: #242
[#434 decrement_statement]: #237
[#434 for_statement]: #213
[#434 func_call_statement]: #215
[#434 ident]: #239
[#434 ident_pattern_token]: #70
[#434 if_clause]: #224
[#434 if_statement]: #210
[#434 increment_statement]: #236
[#434 lhs_expression]: #240
[#434 loop_statement]: #212
[#434 return_statement]: #209
[#434 statement]: #448
[#434 switch_statement]: #211
[#434 template_elaborated_ident]: #229
[#434 variable_decl]: #230
[#434 variable_statement]: #216
[#434 variable_updating_statement]: #220
[#434 while_statement]: #214
[#440 ident]: #65
[#440 ident_pattern_token]: #70
[#440 template_elaborated_ident]: #444
[#442 attribute]: #442
[#442 function_header/0.5/0.1/0]: #443
[#445 assignment_statement]: #235
[#445 core_lhs_expression]: #242
[#445 decrement_statement]: #237
[#445 for_header/0.4]: #465
[#445 for_update]: #466
[#445 func_call_statement]: #468
[#445 ident]: #239
[#445 ident_pattern_token]: #70
[#445 increment_statement]: #236
[#445 lhs_expression]: #240
[#445 template_elaborated_ident]: #229
[#445 variable_updating_statement]: #467
[#446 break_if_statement]: #463
[#446 continuing_compound_statement/0.2]: #462
[#448 assignment_statement]: #235
[#448 break_statement]: #217
[#448 compound_statement]: #221
[#448 const_assert_statement]: #222
[#448 continue_statement]: #218
[#448 continuing_compound_statement/0.1/0]: #461
[#448 core_lhs_expression]: #242
[#448 decrement_statement]: #237
[#448 for_statement]: #213
[#448 func_call_statement]: #215
[#448 ident]: #239
[#448 ident_pattern_token]: #70
[#448 if_clause]: #224
[#448 if_statement]: #210
[#448 increment_statement]: #236
[#448 lhs_expression]: #240
[#448 loop_statement]: #212
[#448 return_statement]: #209
[#448 statement]: #448
[#448 switch_statement]: #211
[#448 template_elaborated_ident]: #229
[#448 variable_decl]: #230
[#448 variable_statement]: #216
[#448 variable_updating_statement]: #220
[#448 while_statement]: #214
[#449 case_selectors/0.2]: #459
[#451 case_selectors/0.1/0]: #458
[#451 case_selectors/0.1/0/0.0]: #451
[#452 additive_expression]: #51
[#452 binary_and_expression]: #48
[#452 binary_or_expression]: #49
[#452 binary_xor_expression]: #50
[#452 bitwise_expression]: #46
[#452 bool_literal]: #68
[#452 call_expression]: #62
[#452 case_selector]: #457
[#452 decimal_float_literal]: #73
[#452 decimal_int_literal]: #71
[#452 expression]: #430
[#452 float_literal]: #67
[#452 hex_float_literal]: #74
[#452 hex_int_literal]: #72
[#452 ident]: #65
[#452 ident_pattern_token]: #70
[#452 int_literal]: #66
[#452 literal]: #63
[#452 multiplicative_expression]: #53
[#452 paren_expression]: #64
[#452 primary_expression]: #60
[#452 relational_expression]: #43
[#452 shift_expression]: #47
[#452 short_circuit_and_expression]: #45
[#452 short_circuit_or_expression]: #44
[#452 singular_expression]: #54
[#452 template_elaborated_ident]: #61
[#452 unary_expression]: #52
[#453 compound_statement]: #456
[#469 additive_expression]: #51
[#469 binary_and_expression]: #48
[#469 binary_or_expression]: #49
[#469 binary_xor_expression]: #50
[#469 bitwise_expression]: #46
[#469 bool_literal]: #68
[#469 call_expression]: #62
[#469 decimal_float_literal]: #73
[#469 decimal_int_literal]: #71
[#469 expression]: #471
[#469 float_literal]: #67
[#469 hex_float_literal]: #74
[#469 hex_int_literal]: #72
[#469 ident]: #65
[#469 ident_pattern_token]: #70
[#469 int_literal]: #66
[#469 literal]: #63
[#469 multiplicative_expression]: #53
[#469 paren_expression]: #64
[#469 primary_expression]: #60
[#469 relational_expression]: #43
[#469 shift_expression]: #47
[#469 short_circuit_and_expression]: #45
[#469 short_circuit_or_expression]: #44
[#469 singular_expression]: #54
[#469 template_elaborated_ident]: #61
[#469 unary_expression]: #52
