=Grammar:

_blankspace:/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_block_comment:/\u200B_block_comment/
_comment:/\/\/.*/
_disambiguate_template:/\u200B_disambiguate_template/
_error_sentinel:/\u200B_error_sentinel/
_greater_than:/\u200B_greater_than/
_greater_than_equal:/\u200B_greater_than_equal/
_less_than:/\u200B_less_than/
_less_than_equal:/\u200B_less_than_equal/
_shift_left:/\u200B_shift_left/
_shift_left_assign:/\u200B_shift_left_assign/
_shift_right:/\u200B_shift_right/
_shift_right_assign:/\u200B_shift_right_assign/
_template_args_end:/\u200B_template_args_end/
_template_args_start:/\u200B_template_args_start/
access_mode:
   'read'
 | 'read_write'
 | 'write'
additive_expression:
   additive_expression additive_operator multiplicative_expression
 | multiplicative_expression
additive_operator:
   '+'
 | '-'
address_space:
   'function'
 | 'private'
 | 'storage'
 | 'uniform'
 | 'workgroup'
argument_expression_list:
   '(' expression_comma_list ? ')'
array_type_specifier:
   'array' _disambiguate_template _template_args_start type_specifier ( ',' element_count_expression )? _template_args_end
assignment_statement:
   '_' '=' expression
 | lhs_expression ( '=' | compound_assignment_operator ) expression
assignment_statement/0.1:
   '='
 | compound_assignment_operator
attrib_end:
   ',' ? ')'
attribute:
   '@' 'align' '(' expression attrib_end
 | '@' 'binding' '(' expression attrib_end
 | '@' 'builtin' '(' builtin_value_name attrib_end
 | '@' 'compute'
 | '@' 'const'
 | '@' 'fragment'
 | '@' 'group' '(' expression attrib_end
 | '@' 'id' '(' expression attrib_end
 | '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end
 | '@' 'interpolate' '(' interpolation_type_name attrib_end
 | '@' 'invariant'
 | '@' 'location' '(' expression attrib_end
 | '@' 'size' '(' expression attrib_end
 | '@' 'vertex'
 | '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end
 | '@' 'workgroup_size' '(' expression ',' expression attrib_end
 | '@' 'workgroup_size' '(' expression attrib_end
binary_and_expression:
   binary_and_expression '&' unary_expression
 | unary_expression
binary_or_expression:
   binary_or_expression '|' unary_expression
 | unary_expression
binary_xor_expression:
   binary_xor_expression '^' unary_expression
 | unary_expression
bitwise_expression:
   binary_and_expression '&' unary_expression
 | binary_or_expression '|' unary_expression
 | binary_xor_expression '^' unary_expression
bool_literal:
   'false'
 | 'true'
break_if_statement:
   'break' 'if' expression ';'
break_statement:'break'
builtin_value_name:
   'frag_depth'
 | 'front_facing'
 | 'global_invocation_id'
 | 'instance_index'
 | 'local_invocation_id'
 | 'local_invocation_index'
 | 'num_workgroups'
 | 'position'
 | 'sample_index'
 | 'sample_mask'
 | 'vertex_index'
 | 'workgroup_id'
call_expression:call_phrase
call_phrase:
   callable argument_expression_list
callable:
   'array' _disambiguate_template
 | ident
 | mat_prefix _disambiguate_template
 | type_specifier_without_ident
 | vec_prefix _disambiguate_template
case_clause:
   'case' case_selectors ':' ? compound_statement
case_selector:
   'default'
 | expression
case_selectors:
   case_selector ( ',' case_selector ) * ? ',' ?
case_selectors/0.1/0/0.0:
   ',' case_selector
component_or_swizzle_specifier:
   '.' member_ident component_or_swizzle_specifier ?
 | '.' swizzle_name component_or_swizzle_specifier ?
 | '[' expression ']' component_or_swizzle_specifier ?
compound_assignment_operator:
   '%='
 | '&='
 | '*='
 | '+='
 | '-='
 | '/='
 | '^='
 | '|='
 | _shift_left_assign
 | _shift_right_assign
compound_statement:
   '{' statement * ? '}'
const_assert_statement:
   'const_assert' expression
continue_statement:'continue'
continuing_compound_statement:
   '{' statement * ? break_if_statement ? '}'
continuing_statement:
   'continuing' continuing_compound_statement
core_lhs_expression:
   '(' lhs_expression ')'
 | ident
decimal_float_literal:
   /0[fh]/
 | /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/
 | /[0-9]+[eE][+-]?[0-9]+[fh]?/
 | /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/
 | /[1-9][0-9]*[fh]/
decimal_int_literal:
   /0[iu]?/
 | /[1-9][0-9]*[iu]?/
decrement_statement:
   lhs_expression '--'
default_alone_clause:
   'default' ':' ? compound_statement
depth_texture_type:
   'texture_depth_2d'
 | 'texture_depth_2d_array'
 | 'texture_depth_cube'
 | 'texture_depth_cube_array'
 | 'texture_depth_multisampled_2d'
element_count_expression:
   additive_expression
 | bitwise_expression
else_clause:
   'else' compound_statement
else_if_clause:
   'else' 'if' expression compound_statement
enable_directive:
   'enable' extension_name ';'
expression:
   bitwise_expression
 | relational_expression
 | short_circuit_and_expression '&&' relational_expression
 | short_circuit_or_expression '||' relational_expression
expression_comma_list:
   expression ( ',' expression ) * ? ',' ?
expression_comma_list/0.1/0/0.0:
   ',' expression
extension_name:'f16'
float_literal:
   decimal_float_literal
 | hex_float_literal
for_header:
   for_init ? ';' expression ? ';' for_update ?
for_init:
   func_call_statement
 | variable_statement
 | variable_updating_statement
for_statement:
   'for' '(' for_header ')' compound_statement
for_update:
   func_call_statement
 | variable_updating_statement
func_call_statement:call_phrase
function_decl:
   attribute * ? function_header compound_statement
function_header:
   'fn' ident '(' param_list ? ')' ( '->' attribute * ? type_specifier )?
global_constant_decl:
   'const' optionally_typed_ident '=' expression
 | attribute * ? 'override' optionally_typed_ident ( '=' expression )?
global_decl:
   ';'
 | const_assert_statement ';'
 | function_decl
 | global_constant_decl ';'
 | global_variable_decl ';'
 | struct_decl
 | type_alias_decl ';'
global_directive:enable_directive
global_variable_decl:
   attribute * ? variable_decl ( '=' expression )?
hex_float_literal:
   /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/
 | /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/
 | /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/
hex_int_literal:/0[xX][0-9a-fA-F]+[iu]?/
ident:ident_pattern_token
ident_pattern_token:/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
if_clause:
   'if' expression compound_statement
if_statement:
   if_clause else_if_clause * ? else_clause ?
increment_statement:
   lhs_expression '++'
int_literal:
   decimal_int_literal
 | hex_int_literal
interpolation_sample_name:
   'center'
 | 'centroid'
 | 'sample'
interpolation_type_name:
   'flat'
 | 'linear'
 | 'perspective'
lhs_expression:
   '&' lhs_expression
 | '*' lhs_expression
 | core_lhs_expression component_or_swizzle_specifier ?
literal:
   bool_literal
 | float_literal
 | int_literal
loop_statement:
   'loop' '{' statement * ? continuing_statement ? '}'
mat_prefix:
   'mat2x2'
 | 'mat2x3'
 | 'mat2x4'
 | 'mat3x2'
 | 'mat3x3'
 | 'mat3x4'
 | 'mat4x2'
 | 'mat4x3'
 | 'mat4x4'
member_ident:ident_pattern_token
multiplicative_expression:
   multiplicative_expression multiplicative_operator unary_expression
 | unary_expression
multiplicative_operator:
   '%'
 | '*'
 | '/'
multisampled_texture_type:'texture_multisampled_2d'
optionally_typed_ident:
   ident ( ':' type_specifier )?
param:
   attribute * ? ident ':' type_specifier
param_list:
   param ( ',' param ) * ? ',' ?
param_list/0.1/0/0.0:
   ',' param
paren_expression:
   '(' expression ')'
primary_expression:
   'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression
 | call_expression
 | ident
 | literal
 | paren_expression
relational_expression:
   shift_expression
 | shift_expression '!=' shift_expression
 | shift_expression '==' shift_expression
 | shift_expression _greater_than shift_expression
 | shift_expression _greater_than_equal shift_expression
 | shift_expression _less_than shift_expression
 | shift_expression _less_than_equal shift_expression
return_statement:
   'return' expression ?
sampled_texture_type:
   'texture_1d'
 | 'texture_2d'
 | 'texture_2d_array'
 | 'texture_3d'
 | 'texture_cube'
 | 'texture_cube_array'
sampler_type:
   'sampler'
 | 'sampler_comparison'
shift_expression:
   additive_expression
 | unary_expression _shift_left unary_expression
 | unary_expression _shift_right unary_expression
short_circuit_and_expression:
   relational_expression
 | short_circuit_and_expression '&&' relational_expression
short_circuit_or_expression:
   relational_expression
 | short_circuit_or_expression '||' relational_expression
singular_expression:
   primary_expression component_or_swizzle_specifier ?
statement:
   ';'
 | 'discard' ';'
 | break_statement ';'
 | compound_statement
 | const_assert_statement ';'
 | continue_statement ';'
 | for_statement
 | func_call_statement ';'
 | if_statement
 | loop_statement
 | return_statement ';'
 | switch_statement
 | variable_statement ';'
 | variable_updating_statement ';'
 | while_statement
storage_texture_type:
   'texture_storage_1d'
 | 'texture_storage_2d'
 | 'texture_storage_2d_array'
 | 'texture_storage_3d'
struct_body_decl:
   '{' struct_member ( ',' struct_member ) * ? ',' ? '}'
struct_body_decl/0.2/0/0.0:
   ',' struct_member
struct_decl:
   'struct' ident struct_body_decl
struct_member:
   attribute * ? member_ident ':' type_specifier
switch_body:
   case_clause
 | default_alone_clause
switch_statement:
   'switch' expression '{' ( switch_body * ) '}'
switch_statement/0.3:
   switch_body *
swizzle_name:
   '/[rgba]/'
 | '/[rgba][rgba]/'
 | '/[rgba][rgba][rgba]/'
 | '/[rgba][rgba][rgba][rgba]/'
 | '/[xyzw]/'
 | '/[xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw][xyzw]/'
texel_format:
   'bgra8unorm'
 | 'r32float'
 | 'r32sint'
 | 'r32uint'
 | 'rg32float'
 | 'rg32sint'
 | 'rg32uint'
 | 'rgba16float'
 | 'rgba16sint'
 | 'rgba16uint'
 | 'rgba32float'
 | 'rgba32sint'
 | 'rgba32uint'
 | 'rgba8sint'
 | 'rgba8snorm'
 | 'rgba8uint'
 | 'rgba8unorm'
texture_and_sampler_types:
   depth_texture_type
 | multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end
 | sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end
 | sampler_type
 | storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end
translation_unit:
   global_directive * ? global_decl * ?
type_alias_decl:
   'alias' ident '=' type_specifier
type_specifier:
   ident
 | type_specifier_without_ident
type_specifier_without_ident:
   'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end
 | 'bool'
 | 'f16'
 | 'f32'
 | 'i32'
 | 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier ( ',' access_mode )? _template_args_end
 | 'u32'
 | array_type_specifier
 | mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end
 | texture_and_sampler_types
 | vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end
unary_expression:
   '!' unary_expression
 | '&' unary_expression
 | '*' unary_expression
 | '-' unary_expression
 | '~' unary_expression
 | singular_expression
variable_decl:
   'var' _disambiguate_template variable_qualifier ? optionally_typed_ident
variable_qualifier:
   _template_args_start address_space ( ',' access_mode )? _template_args_end
variable_statement:
   'const' optionally_typed_ident '=' expression
 | 'let' optionally_typed_ident '=' expression
 | variable_decl
 | variable_decl '=' expression
variable_updating_statement:
   assignment_statement
 | decrement_statement
 | increment_statement
vec_prefix:
   'vec2'
 | 'vec3'
 | 'vec4'
while_statement:
   'while' expression compound_statement

=Raw rules:
translation_unit  -> ( Choice ( Seq translation_unit/0.0 translation_unit/0.1 ) )
translation_unit .reg_info.index: 579
translation_unit .first: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' ε}
translation_unit .derives_empty: True
translation_unit .follow: {EndOfText}
global_directive  -> enable_directive
global_directive .reg_info.index: 201
global_directive .first: {'enable'}
global_directive .derives_empty: False
global_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl  -> ( Choice ';' ( Seq global_variable_decl ';' ) ( Seq global_constant_decl ';' ) ( Seq type_alias_decl ';' ) struct_decl function_decl ( Seq const_assert_statement ';' ) )
global_decl .reg_info.index: 212
global_decl .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var'}
global_decl .derives_empty: False
global_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
bool_literal  -> ( Choice 'true' 'false' )
bool_literal .reg_info.index: 213
bool_literal .first: {'false' 'true'}
bool_literal .derives_empty: False
bool_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal  -> ( Choice decimal_int_literal hex_int_literal )
int_literal .reg_info.index: 216
int_literal .first: {/0[iu]?/ /0[xX][0-9a-fA-F]+[iu]?/ /[1-9][0-9]*[iu]?/}
int_literal .derives_empty: False
int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal  -> ( Choice /0[iu]?/ /[1-9][0-9]*[iu]?/ )
decimal_int_literal .reg_info.index: 217
decimal_int_literal .first: {/0[iu]?/ /[1-9][0-9]*[iu]?/}
decimal_int_literal .derives_empty: False
decimal_int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal  -> /0[xX][0-9a-fA-F]+[iu]?/
hex_int_literal .reg_info.index: 7
hex_int_literal .first: {/0[xX][0-9a-fA-F]+[iu]?/}
hex_int_literal .derives_empty: False
hex_int_literal .follow: {}
float_literal  -> ( Choice decimal_float_literal hex_float_literal )
float_literal .reg_info.index: 220
float_literal .first: {/0[fh]/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
float_literal .derives_empty: False
float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal  -> ( Choice /0[fh]/ /[1-9][0-9]*[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ )
decimal_float_literal .reg_info.index: 221
decimal_float_literal .first: {/0[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
decimal_float_literal .derives_empty: False
decimal_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal  -> ( Choice /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ )
hex_float_literal .reg_info.index: 222
hex_float_literal .first: {/0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/}
hex_float_literal .derives_empty: False
hex_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal  -> ( Choice int_literal float_literal bool_literal )
literal .reg_info.index: 226
literal .first: {'false' 'true' /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
literal .derives_empty: False
literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident  -> ident_pattern_token
ident .reg_info.index: 227
ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident .derives_empty: False
ident .follow: {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
member_ident  -> ident_pattern_token
member_ident .reg_info.index: 227
member_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
member_ident .derives_empty: False
member_ident .follow: {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
attribute  -> ( Choice ( Seq '@' 'align' '(' expression attrib_end ) ( Seq '@' 'binding' '(' expression attrib_end ) ( Seq '@' 'builtin' '(' builtin_value_name attrib_end ) ( Seq '@' 'const' ) ( Seq '@' 'group' '(' expression attrib_end ) ( Seq '@' 'id' '(' expression attrib_end ) ( Seq '@' 'interpolate' '(' interpolation_type_name attrib_end ) ( Seq '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end ) ( Seq '@' 'invariant' ) ( Seq '@' 'location' '(' expression attrib_end ) ( Seq '@' 'size' '(' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression ',' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end ) ( Seq '@' 'vertex' ) ( Seq '@' 'fragment' ) ( Seq '@' 'compute' ) )
attribute .reg_info.index: 250
attribute .first: {'@'}
attribute .derives_empty: False
attribute .follow: {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end  -> ( Choice ( Seq attrib_end/0.0 ')' ) )
attrib_end .reg_info.index: 714
attrib_end .first: {')' ','}
attrib_end .derives_empty: False
attrib_end .follow: {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
array_type_specifier  -> ( Choice ( Seq 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end ) )
array_type_specifier .reg_info.index: 724
array_type_specifier .first: {'array'}
array_type_specifier .derives_empty: False
array_type_specifier .follow: {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
element_count_expression  -> ( Choice additive_expression bitwise_expression )
element_count_expression .reg_info.index: 263
element_count_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
element_count_expression .derives_empty: False
element_count_expression .follow: {/\u200B_template_args_end/}
struct_decl  -> ( Choice ( Seq 'struct' ident struct_body_decl ) )
struct_decl .reg_info.index: 534
struct_decl .first: {'struct'}
struct_decl .derives_empty: False
struct_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl  -> ( Choice ( Seq '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' ) )
struct_body_decl .reg_info.index: 739
struct_body_decl .first: {'{'}
struct_body_decl .derives_empty: False
struct_body_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_member  -> ( Choice ( Seq struct_member/0.0 member_ident ':' type_specifier ) )
struct_member .reg_info.index: 747
struct_member .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member .derives_empty: False
struct_member .follow: {',' '}'}
texture_and_sampler_types  -> ( Choice sampler_type depth_texture_type ( Seq sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end ) ( Seq multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end ) ( Seq storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end ) )
texture_and_sampler_types .reg_info.index: 287
texture_and_sampler_types .first: {'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d'}
texture_and_sampler_types .derives_empty: False
texture_and_sampler_types .follow: {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
sampler_type  -> ( Choice 'sampler' 'sampler_comparison' )
sampler_type .reg_info.index: 288
sampler_type .first: {'sampler' 'sampler_comparison'}
sampler_type .derives_empty: False
sampler_type .follow: {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
sampled_texture_type  -> ( Choice 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' )
sampled_texture_type .reg_info.index: 289
sampled_texture_type .first: {'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array'}
sampled_texture_type .derives_empty: False
sampled_texture_type .follow: {/\u200B_disambiguate_template/}
multisampled_texture_type  -> 'texture_multisampled_2d'
multisampled_texture_type .reg_info.index: 47
multisampled_texture_type .first: {'texture_multisampled_2d'}
multisampled_texture_type .derives_empty: False
multisampled_texture_type .follow: {}
storage_texture_type  -> ( Choice 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' )
storage_texture_type .reg_info.index: 290
storage_texture_type .first: {'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d'}
storage_texture_type .derives_empty: False
storage_texture_type .follow: {/\u200B_disambiguate_template/}
depth_texture_type  -> ( Choice 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' )
depth_texture_type .reg_info.index: 291
depth_texture_type .first: {'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d'}
depth_texture_type .derives_empty: False
depth_texture_type .follow: {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
type_alias_decl  -> ( Choice ( Seq 'alias' ident '=' type_specifier ) )
type_alias_decl .reg_info.index: 537
type_alias_decl .first: {'alias'}
type_alias_decl .derives_empty: False
type_alias_decl .follow: {';'}
type_specifier  -> ( Choice ident type_specifier_without_ident )
type_specifier .reg_info.index: 294
type_specifier .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
type_specifier .derives_empty: False
type_specifier .follow: {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
type_specifier_without_ident  -> ( Choice 'bool' 'f32' 'f16' 'i32' 'u32' ( Seq vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end ) ( Seq mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end ) ( Seq 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end ) array_type_specifier ( Seq 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end ) texture_and_sampler_types )
type_specifier_without_ident .reg_info.index: 830
type_specifier_without_ident .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
type_specifier_without_ident .derives_empty: False
type_specifier_without_ident .follow: {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
vec_prefix  -> ( Choice 'vec2' 'vec3' 'vec4' )
vec_prefix .reg_info.index: 307
vec_prefix .first: {'vec2' 'vec3' 'vec4'}
vec_prefix .derives_empty: False
vec_prefix .follow: {/\u200B_disambiguate_template/}
mat_prefix  -> ( Choice 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' )
mat_prefix .reg_info.index: 308
mat_prefix .first: {'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4'}
mat_prefix .derives_empty: False
mat_prefix .follow: {/\u200B_disambiguate_template/}
variable_statement  -> ( Choice variable_decl ( Seq variable_decl '=' expression ) ( Seq 'let' optionally_typed_ident '=' expression ) ( Seq 'const' optionally_typed_ident '=' expression ) )
variable_statement .reg_info.index: 314
variable_statement .first: {'const' 'let' 'var'}
variable_statement .derives_empty: False
variable_statement .follow: {';'}
variable_decl  -> ( Choice ( Seq 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident ) )
variable_decl .reg_info.index: 865
variable_decl .first: {'var'}
variable_decl .derives_empty: False
variable_decl .follow: {';' '='}
optionally_typed_ident  -> ( Choice ( Seq ident optionally_typed_ident/0.1 ) )
optionally_typed_ident .reg_info.index: 871
optionally_typed_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
optionally_typed_ident .derives_empty: False
optionally_typed_ident .follow: {';' '='}
variable_qualifier  -> ( Choice ( Seq _template_args_start address_space variable_qualifier/0.2 _template_args_end ) )
variable_qualifier .reg_info.index: 878
variable_qualifier .first: {/\u200B_template_args_start/}
variable_qualifier .derives_empty: False
variable_qualifier .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
global_variable_decl  -> ( Choice ( Seq global_variable_decl/0.0 variable_decl global_variable_decl/0.2 ) )
global_variable_decl .reg_info.index: 885
global_variable_decl .first: {'@' 'var'}
global_variable_decl .derives_empty: False
global_variable_decl .follow: {';'}
global_constant_decl  -> ( Choice ( Seq 'const' optionally_typed_ident '=' expression ) ( Seq global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 ) )
global_constant_decl .reg_info.index: 897
global_constant_decl .first: {'@' 'const' 'override'}
global_constant_decl .derives_empty: False
global_constant_decl .follow: {';'}
primary_expression  -> ( Choice ident call_expression literal paren_expression ( Seq 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression ) )
primary_expression .reg_info.index: 331
primary_expression .first: {'(' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
primary_expression .derives_empty: False
primary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression  -> call_phrase
call_expression .reg_info.index: 332
call_expression .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_expression .derives_empty: False
call_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_phrase  -> ( Choice ( Seq callable argument_expression_list ) )
call_phrase .reg_info.index: 542
call_phrase .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_phrase .derives_empty: False
call_phrase .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable  -> ( Choice ident type_specifier_without_ident ( Seq vec_prefix _disambiguate_template ) ( Seq mat_prefix _disambiguate_template ) ( Seq 'array' _disambiguate_template ) )
callable .reg_info.index: 339
callable .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
callable .derives_empty: False
callable .follow: {'('}
paren_expression  -> ( Choice ( Seq '(' expression ')' ) )
paren_expression .reg_info.index: 543
paren_expression .first: {'('}
paren_expression .derives_empty: False
paren_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list  -> ( Choice ( Seq '(' argument_expression_list/0.1 ')' ) )
argument_expression_list .reg_info.index: 933
argument_expression_list .first: {'('}
argument_expression_list .derives_empty: False
argument_expression_list .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
expression_comma_list  -> ( Choice ( Seq expression expression_comma_list/0.1 expression_comma_list/0.2 ) )
expression_comma_list .reg_info.index: 940
expression_comma_list .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression_comma_list .derives_empty: False
expression_comma_list .follow: {')'}
component_or_swizzle_specifier  -> ( Choice ( Seq '[' expression ']' component_or_swizzle_specifier/0.3 ) ( Seq '.' member_ident component_or_swizzle_specifier/1.2 ) ( Seq '.' swizzle_name component_or_swizzle_specifier/2.2 ) )
component_or_swizzle_specifier .reg_info.index: 958
component_or_swizzle_specifier .first: {'.' '['}
component_or_swizzle_specifier .derives_empty: False
component_or_swizzle_specifier .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
unary_expression  -> ( Choice singular_expression ( Seq '-' unary_expression ) ( Seq '!' unary_expression ) ( Seq '~' unary_expression ) ( Seq '*' unary_expression ) ( Seq '&' unary_expression ) )
unary_expression .reg_info.index: 362
unary_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
unary_expression .derives_empty: False
unary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression  -> ( Choice ( Seq primary_expression singular_expression/0.1 ) )
singular_expression .reg_info.index: 979
singular_expression .first: {'(' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
singular_expression .derives_empty: False
singular_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
lhs_expression  -> ( Choice ( Seq core_lhs_expression lhs_expression/0.1 ) ( Seq '*' lhs_expression ) ( Seq '&' lhs_expression ) )
lhs_expression .reg_info.index: 990
lhs_expression .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
lhs_expression .derives_empty: False
lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression  -> ( Choice ident ( Seq '(' lhs_expression ')' ) )
core_lhs_expression .reg_info.index: 372
core_lhs_expression .first: {'(' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
core_lhs_expression .derives_empty: False
core_lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
multiplicative_expression  -> ( Choice unary_expression ( Seq multiplicative_expression multiplicative_operator unary_expression ) )
multiplicative_expression .reg_info.index: 376
multiplicative_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_expression .derives_empty: False
multiplicative_expression .follow: {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator  -> ( Choice '*' '/' '%' )
multiplicative_operator .reg_info.index: 377
multiplicative_operator .first: {'%' '*' '/'}
multiplicative_operator .derives_empty: False
multiplicative_operator .follow: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression  -> ( Choice multiplicative_expression ( Seq additive_expression additive_operator multiplicative_expression ) )
additive_expression .reg_info.index: 380
additive_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression .derives_empty: False
additive_expression .follow: {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_operator  -> ( Choice '+' '-' )
additive_operator .reg_info.index: 381
additive_operator .first: {'+' '-'}
additive_operator .derives_empty: False
additive_operator .follow: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression  -> ( Choice additive_expression ( Seq unary_expression _shift_left unary_expression ) ( Seq unary_expression _shift_right unary_expression ) )
shift_expression .reg_info.index: 386
shift_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression .derives_empty: False
shift_expression .follow: {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
relational_expression  -> ( Choice shift_expression ( Seq shift_expression _less_than shift_expression ) ( Seq shift_expression _greater_than shift_expression ) ( Seq shift_expression _less_than_equal shift_expression ) ( Seq shift_expression _greater_than_equal shift_expression ) ( Seq shift_expression '==' shift_expression ) ( Seq shift_expression '!=' shift_expression ) )
relational_expression .reg_info.index: 398
relational_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
relational_expression .derives_empty: False
relational_expression .follow: {'&&' ')' ',' ':' ';' ']' '{' '||'}
short_circuit_and_expression  -> ( Choice relational_expression ( Seq short_circuit_and_expression '&&' relational_expression ) )
short_circuit_and_expression .reg_info.index: 402
short_circuit_and_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_and_expression .derives_empty: False
short_circuit_and_expression .follow: {'&&'}
short_circuit_or_expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) )
short_circuit_or_expression .reg_info.index: 405
short_circuit_or_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_or_expression .derives_empty: False
short_circuit_or_expression .follow: {'||'}
binary_or_expression  -> ( Choice unary_expression ( Seq binary_or_expression '|' unary_expression ) )
binary_or_expression .reg_info.index: 408
binary_or_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_or_expression .derives_empty: False
binary_or_expression .follow: {'|'}
binary_and_expression  -> ( Choice unary_expression ( Seq binary_and_expression '&' unary_expression ) )
binary_and_expression .reg_info.index: 411
binary_and_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_and_expression .derives_empty: False
binary_and_expression .follow: {'&'}
binary_xor_expression  -> ( Choice unary_expression ( Seq binary_xor_expression '^' unary_expression ) )
binary_xor_expression .reg_info.index: 414
binary_xor_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_xor_expression .derives_empty: False
binary_xor_expression .follow: {'^'}
bitwise_expression  -> ( Choice ( Seq binary_and_expression '&' unary_expression ) ( Seq binary_or_expression '|' unary_expression ) ( Seq binary_xor_expression '^' unary_expression ) )
bitwise_expression .reg_info.index: 415
bitwise_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
bitwise_expression .derives_empty: False
bitwise_expression .follow: {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) ( Seq short_circuit_and_expression '&&' relational_expression ) bitwise_expression )
expression .reg_info.index: 416
expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression .derives_empty: False
expression .follow: {')' ',' ':' ';' ']' '{'}
compound_statement  -> ( Choice ( Seq '{' compound_statement/0.1 '}' ) )
compound_statement .reg_info.index: 1098
compound_statement .first: {'{'}
compound_statement .derives_empty: False
compound_statement .follow: {'&' '(' '*' ';' '@' '_' 'alias' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
assignment_statement  -> ( Choice ( Seq lhs_expression assignment_statement/0.1 expression ) ( Seq '_' '=' expression ) )
assignment_statement .reg_info.index: 1109
assignment_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement .derives_empty: False
assignment_statement .follow: {')' ';'}
compound_assignment_operator  -> ( Choice '+=' '-=' '*=' '/=' '%=' '&=' '|=' '^=' _shift_right_assign _shift_left_assign )
compound_assignment_operator .reg_info.index: 428
compound_assignment_operator .first: {'%=' '&=' '*=' '+=' '-=' '/=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
compound_assignment_operator .derives_empty: False
compound_assignment_operator .follow: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
increment_statement  -> ( Choice ( Seq lhs_expression '++' ) )
increment_statement .reg_info.index: 548
increment_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement .derives_empty: False
increment_statement .follow: {')' ';'}
decrement_statement  -> ( Choice ( Seq lhs_expression '--' ) )
decrement_statement .reg_info.index: 549
decrement_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
decrement_statement .derives_empty: False
decrement_statement .follow: {')' ';'}
if_statement  -> ( Choice ( Seq if_clause if_statement/0.1 if_statement/0.2 ) )
if_statement .reg_info.index: 1133
if_statement .first: {'if'}
if_statement .derives_empty: False
if_statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_clause  -> ( Choice ( Seq 'if' expression compound_statement ) )
if_clause .reg_info.index: 551
if_clause .first: {'if'}
if_clause .derives_empty: False
if_clause .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause  -> ( Choice ( Seq 'else' 'if' expression compound_statement ) )
else_if_clause .reg_info.index: 552
else_if_clause .first: {'else'}
else_if_clause .derives_empty: False
else_if_clause .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause  -> ( Choice ( Seq 'else' compound_statement ) )
else_clause .reg_info.index: 553
else_clause .first: {'else'}
else_clause .derives_empty: False
else_clause .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement  -> ( Choice ( Seq 'switch' expression '{' switch_statement/0.3 '}' ) )
switch_statement .reg_info.index: 1154
switch_statement .first: {'switch'}
switch_statement .derives_empty: False
switch_statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_body  -> ( Choice case_clause default_alone_clause )
switch_body .reg_info.index: 447
switch_body .first: {'case' 'default'}
switch_body .derives_empty: False
switch_body .follow: {'case' 'default' '}'}
case_clause  -> ( Choice ( Seq 'case' case_selectors case_clause/0.2 compound_statement ) )
case_clause .reg_info.index: 1164
case_clause .first: {'case'}
case_clause .derives_empty: False
case_clause .follow: {'case' 'default' '}'}
default_alone_clause  -> ( Choice ( Seq 'default' default_alone_clause/0.1 compound_statement ) )
default_alone_clause .reg_info.index: 1170
default_alone_clause .first: {'default'}
default_alone_clause .derives_empty: False
default_alone_clause .follow: {'case' 'default' '}'}
case_selectors  -> ( Choice ( Seq case_selector case_selectors/0.1 case_selectors/0.2 ) )
case_selectors .reg_info.index: 1177
case_selectors .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'default' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selectors .derives_empty: False
case_selectors .follow: {':' '{'}
case_selector  -> ( Choice 'default' expression )
case_selector .reg_info.index: 457
case_selector .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'default' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selector .derives_empty: False
case_selector .follow: {',' ':' '{'}
loop_statement  -> ( Choice ( Seq 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' ) )
loop_statement .reg_info.index: 1188
loop_statement .first: {'loop'}
loop_statement .derives_empty: False
loop_statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement  -> ( Choice ( Seq 'for' '(' for_header ')' compound_statement ) )
for_statement .reg_info.index: 559
for_statement .first: {'for'}
for_statement .derives_empty: False
for_statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header  -> ( Choice ( Seq for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 ) )
for_header .reg_info.index: 1205
for_header .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'const' 'f16' 'f32' 'i32' 'let' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header .derives_empty: False
for_header .follow: {')'}
for_init  -> ( Choice variable_statement variable_updating_statement func_call_statement )
for_init .reg_info.index: 472
for_init .first: {'&' '(' '*' '_' 'array' 'atomic' 'bool' 'const' 'f16' 'f32' 'i32' 'let' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_init .derives_empty: False
for_init .follow: {';'}
for_update  -> ( Choice variable_updating_statement func_call_statement )
for_update .reg_info.index: 473
for_update .first: {'&' '(' '*' '_' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_update .derives_empty: False
for_update .follow: {')'}
while_statement  -> ( Choice ( Seq 'while' expression compound_statement ) )
while_statement .reg_info.index: 561
while_statement .first: {'while'}
while_statement .derives_empty: False
while_statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
break_statement  -> 'break'
break_statement .reg_info.index: 118
break_statement .first: {'break'}
break_statement .derives_empty: False
break_statement .follow: {}
break_if_statement  -> ( Choice ( Seq 'break' 'if' expression ';' ) )
break_if_statement .reg_info.index: 562
break_if_statement .first: {'break'}
break_if_statement .derives_empty: False
break_if_statement .follow: {'}'}
continue_statement  -> 'continue'
continue_statement .reg_info.index: 119
continue_statement .first: {'continue'}
continue_statement .derives_empty: False
continue_statement .follow: {}
continuing_statement  -> ( Choice ( Seq 'continuing' continuing_compound_statement ) )
continuing_statement .reg_info.index: 563
continuing_statement .first: {'continuing'}
continuing_statement .derives_empty: False
continuing_statement .follow: {'}'}
continuing_compound_statement  -> ( Choice ( Seq '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' ) )
continuing_compound_statement .reg_info.index: 1230
continuing_compound_statement .first: {'{'}
continuing_compound_statement .derives_empty: False
continuing_compound_statement .follow: {'}'}
return_statement  -> ( Choice ( Seq 'return' return_statement/0.1 ) )
return_statement .reg_info.index: 1235
return_statement .first: {'return'}
return_statement .derives_empty: False
return_statement .follow: {';'}
func_call_statement  -> call_phrase
func_call_statement .reg_info.index: 332
func_call_statement .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement .derives_empty: False
func_call_statement .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
const_assert_statement  -> ( Choice ( Seq 'const_assert' expression ) )
const_assert_statement .reg_info.index: 566
const_assert_statement .first: {'const_assert'}
const_assert_statement .derives_empty: False
const_assert_statement .follow: {';'}
statement  -> ( Choice ';' ( Seq return_statement ';' ) if_statement switch_statement loop_statement for_statement while_statement ( Seq func_call_statement ';' ) ( Seq variable_statement ';' ) ( Seq break_statement ';' ) ( Seq continue_statement ';' ) ( Seq 'discard' ';' ) ( Seq variable_updating_statement ';' ) compound_statement ( Seq const_assert_statement ';' ) )
statement .reg_info.index: 498
statement .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement .derives_empty: False
statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement  -> ( Choice assignment_statement increment_statement decrement_statement )
variable_updating_statement .reg_info.index: 502
variable_updating_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement .derives_empty: False
variable_updating_statement .follow: {')' ';'}
function_decl  -> ( Choice ( Seq function_decl/0.0 function_header compound_statement ) )
function_decl .reg_info.index: 1278
function_decl .first: {'@' 'fn'}
function_decl .derives_empty: False
function_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header  -> ( Choice ( Seq 'fn' ident '(' function_header/0.3 ')' function_header/0.5 ) )
function_header .reg_info.index: 1289
function_header .first: {'fn'}
function_header .derives_empty: False
function_header .follow: {'{'}
param_list  -> ( Choice ( Seq param param_list/0.1 param_list/0.2 ) )
param_list .reg_info.index: 1296
param_list .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list .derives_empty: False
param_list .follow: {')'}
param  -> ( Choice ( Seq param/0.0 ident ':' type_specifier ) )
param .reg_info.index: 1303
param .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param .derives_empty: False
param .follow: {')' ','}
enable_directive  -> ( Choice ( Seq 'enable' extension_name ';' ) )
enable_directive .reg_info.index: 571
enable_directive .first: {'enable'}
enable_directive .derives_empty: False
enable_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}
ident_pattern_token  -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
ident_pattern_token .reg_info.index: 127
ident_pattern_token .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident_pattern_token .derives_empty: False
ident_pattern_token .follow: {}
interpolation_type_name  -> ( Choice 'perspective' 'linear' 'flat' )
interpolation_type_name .reg_info.index: 518
interpolation_type_name .first: {'flat' 'linear' 'perspective'}
interpolation_type_name .derives_empty: False
interpolation_type_name .follow: {')' ','}
interpolation_sample_name  -> ( Choice 'center' 'centroid' 'sample' )
interpolation_sample_name .reg_info.index: 519
interpolation_sample_name .first: {'center' 'centroid' 'sample'}
interpolation_sample_name .derives_empty: False
interpolation_sample_name .follow: {')' ','}
builtin_value_name  -> ( Choice 'vertex_index' 'instance_index' 'position' 'front_facing' 'frag_depth' 'local_invocation_id' 'local_invocation_index' 'global_invocation_id' 'workgroup_id' 'num_workgroups' 'sample_index' 'sample_mask' )
builtin_value_name .reg_info.index: 520
builtin_value_name .first: {'frag_depth' 'front_facing' 'global_invocation_id' 'instance_index' 'local_invocation_id' 'local_invocation_index' 'num_workgroups' 'position' 'sample_index' 'sample_mask' 'vertex_index' 'workgroup_id'}
builtin_value_name .derives_empty: False
builtin_value_name .follow: {')' ','}
access_mode  -> ( Choice 'read' 'write' 'read_write' )
access_mode .reg_info.index: 521
access_mode .first: {'read' 'read_write' 'write'}
access_mode .derives_empty: False
access_mode .follow: {/\u200B_template_args_end/}
address_space  -> ( Choice 'function' 'private' 'workgroup' 'uniform' 'storage' )
address_space .reg_info.index: 522
address_space .first: {'function' 'private' 'storage' 'uniform' 'workgroup'}
address_space .derives_empty: False
address_space .follow: {',' /\u200B_template_args_end/}
texel_format  -> ( Choice 'rgba8unorm' 'rgba8snorm' 'rgba8uint' 'rgba8sint' 'rgba16uint' 'rgba16sint' 'rgba16float' 'r32uint' 'r32sint' 'r32float' 'rg32uint' 'rg32sint' 'rg32float' 'rgba32uint' 'rgba32sint' 'rgba32float' 'bgra8unorm' )
texel_format .reg_info.index: 523
texel_format .first: {'bgra8unorm' 'r32float' 'r32sint' 'r32uint' 'rg32float' 'rg32sint' 'rg32uint' 'rgba16float' 'rgba16sint' 'rgba16uint' 'rgba32float' 'rgba32sint' 'rgba32uint' 'rgba8sint' 'rgba8snorm' 'rgba8uint' 'rgba8unorm'}
texel_format .derives_empty: False
texel_format .follow: {','}
extension_name  -> 'f16'
extension_name .reg_info.index: 61
extension_name .first: {'f16'}
extension_name .derives_empty: False
extension_name .follow: {}
swizzle_name  -> ( Choice '/[rgba]/' '/[rgba][rgba]/' '/[rgba][rgba][rgba]/' '/[rgba][rgba][rgba][rgba]/' '/[xyzw]/' '/[xyzw][xyzw]/' '/[xyzw][xyzw][xyzw]/' '/[xyzw][xyzw][xyzw][xyzw]/' )
swizzle_name .reg_info.index: 524
swizzle_name .first: {'/[rgba]/' '/[rgba][rgba]/' '/[rgba][rgba][rgba]/' '/[rgba][rgba][rgba][rgba]/' '/[xyzw]/' '/[xyzw][xyzw]/' '/[xyzw][xyzw][xyzw]/' '/[xyzw][xyzw][xyzw][xyzw]/'}
swizzle_name .derives_empty: False
swizzle_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
_comment  -> /\/\/.*/
_comment .reg_info.index: 179
_comment .first: {/\/\/.*/}
_comment .derives_empty: False
_comment .follow: {}
_blankspace  -> /[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_blankspace .reg_info.index: 180
_blankspace .first: {/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/}
_blankspace .derives_empty: False
_blankspace .follow: {}
_less_than_equal  -> /\u200B_less_than_equal/
_less_than_equal .reg_info.index: 181
_less_than_equal .first: {/\u200B_less_than_equal/}
_less_than_equal .derives_empty: False
_less_than_equal .follow: {}
_greater_than_equal  -> /\u200B_greater_than_equal/
_greater_than_equal .reg_info.index: 182
_greater_than_equal .first: {/\u200B_greater_than_equal/}
_greater_than_equal .derives_empty: False
_greater_than_equal .follow: {}
_template_args_end  -> /\u200B_template_args_end/
_template_args_end .reg_info.index: 183
_template_args_end .first: {/\u200B_template_args_end/}
_template_args_end .derives_empty: False
_template_args_end .follow: {}
_greater_than  -> /\u200B_greater_than/
_greater_than .reg_info.index: 184
_greater_than .first: {/\u200B_greater_than/}
_greater_than .derives_empty: False
_greater_than .follow: {}
_disambiguate_template  -> /\u200B_disambiguate_template/
_disambiguate_template .reg_info.index: 185
_disambiguate_template .first: {/\u200B_disambiguate_template/}
_disambiguate_template .derives_empty: False
_disambiguate_template .follow: {}
_template_args_start  -> /\u200B_template_args_start/
_template_args_start .reg_info.index: 186
_template_args_start .first: {/\u200B_template_args_start/}
_template_args_start .derives_empty: False
_template_args_start .follow: {}
_block_comment  -> /\u200B_block_comment/
_block_comment .reg_info.index: 187
_block_comment .first: {/\u200B_block_comment/}
_block_comment .derives_empty: False
_block_comment .follow: {}
_less_than  -> /\u200B_less_than/
_less_than .reg_info.index: 188
_less_than .first: {/\u200B_less_than/}
_less_than .derives_empty: False
_less_than .follow: {}
_shift_left  -> /\u200B_shift_left/
_shift_left .reg_info.index: 189
_shift_left .first: {/\u200B_shift_left/}
_shift_left .derives_empty: False
_shift_left .follow: {}
_shift_right_assign  -> /\u200B_shift_right_assign/
_shift_right_assign .reg_info.index: 190
_shift_right_assign .first: {/\u200B_shift_right_assign/}
_shift_right_assign .derives_empty: False
_shift_right_assign .follow: {}
_shift_left_assign  -> /\u200B_shift_left_assign/
_shift_left_assign .reg_info.index: 191
_shift_left_assign .first: {/\u200B_shift_left_assign/}
_shift_left_assign .derives_empty: False
_shift_left_assign .follow: {}
_error_sentinel  -> /\u200B_error_sentinel/
_error_sentinel .reg_info.index: 192
_error_sentinel .first: {/\u200B_error_sentinel/}
_error_sentinel .derives_empty: False
_error_sentinel .follow: {}
_shift_right  -> /\u200B_shift_right/
_shift_right .reg_info.index: 193
_shift_right .first: {/\u200B_shift_right/}
_shift_right .derives_empty: False
_shift_right .follow: {}
language  -> ( Choice ( Seq translation_unit EndOfText ) )
language .reg_info.index: 572
language .first: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}
language .derives_empty: False
language .follow: {}
translation_unit/0.0  -> ( Choice translation_unit/0.0/0 ε )
translation_unit/0.0 .reg_info.index: 1414
translation_unit/0.0 .first: {'enable' ε}
translation_unit/0.0 .derives_empty: True
translation_unit/0.0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1  -> ( Choice translation_unit/0.1/0 ε )
translation_unit/0.1 .reg_info.index: 1418
translation_unit/0.1 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' ε}
translation_unit/0.1 .derives_empty: True
translation_unit/0.1 .follow: {EndOfText}
attrib_end/0.0  -> ( Choice ',' ε )
attrib_end/0.0 .reg_info.index: 251
attrib_end/0.0 .first: {',' ε}
attrib_end/0.0 .derives_empty: True
attrib_end/0.0 .follow: {')' ':' '{' '}'}
array_type_specifier/0.4  -> ( Choice ( Seq ',' element_count_expression ) ε )
array_type_specifier/0.4 .reg_info.index: 258
array_type_specifier/0.4 .first: {',' ε}
array_type_specifier/0.4 .derives_empty: True
array_type_specifier/0.4 .follow: {/\u200B_template_args_end/}
struct_body_decl/0.2  -> ( Choice struct_body_decl/0.2/0 ε )
struct_body_decl/0.2 .reg_info.index: 1426
struct_body_decl/0.2 .first: {',' ε}
struct_body_decl/0.2 .derives_empty: True
struct_body_decl/0.2 .follow: {',' '}'}
struct_body_decl/0.3  -> ( Choice ',' ε )
struct_body_decl/0.3 .reg_info.index: 251
struct_body_decl/0.3 .first: {',' ε}
struct_body_decl/0.3 .derives_empty: True
struct_body_decl/0.3 .follow: {')' ':' '{' '}'}
struct_member/0.0  -> ( Choice struct_member/0.0/0 ε )
struct_member/0.0 .reg_info.index: 1431
struct_member/0.0 .first: {'@' ε}
struct_member/0.0 .derives_empty: True
struct_member/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
type_specifier_without_ident/7.6  -> ( Choice ( Seq ',' access_mode ) ε )
type_specifier_without_ident/7.6 .reg_info.index: 301
type_specifier_without_ident/7.6 .first: {',' ε}
type_specifier_without_ident/7.6 .derives_empty: True
type_specifier_without_ident/7.6 .follow: {/\u200B_template_args_end/}
variable_decl/0.2  -> ( Choice variable_qualifier ε )
variable_decl/0.2 .reg_info.index: 316
variable_decl/0.2 .first: {/\u200B_template_args_start/ ε}
variable_decl/0.2 .derives_empty: True
variable_decl/0.2 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
optionally_typed_ident/0.1  -> ( Choice ( Seq ':' type_specifier ) ε )
optionally_typed_ident/0.1 .reg_info.index: 319
optionally_typed_ident/0.1 .first: {':' ε}
optionally_typed_ident/0.1 .derives_empty: True
optionally_typed_ident/0.1 .follow: {';' '='}
variable_qualifier/0.2  -> ( Choice ( Seq ',' access_mode ) ε )
variable_qualifier/0.2 .reg_info.index: 301
variable_qualifier/0.2 .first: {',' ε}
variable_qualifier/0.2 .derives_empty: True
variable_qualifier/0.2 .follow: {/\u200B_template_args_end/}
global_variable_decl/0.0  -> ( Choice global_variable_decl/0.0/0 ε )
global_variable_decl/0.0 .reg_info.index: 1445
global_variable_decl/0.0 .first: {'@' ε}
global_variable_decl/0.0 .derives_empty: True
global_variable_decl/0.0 .follow: {'var'}
global_variable_decl/0.2  -> ( Choice ( Seq '=' expression ) ε )
global_variable_decl/0.2 .reg_info.index: 323
global_variable_decl/0.2 .first: {'=' ε}
global_variable_decl/0.2 .derives_empty: True
global_variable_decl/0.2 .follow: {';'}
global_constant_decl/1.0  -> ( Choice global_constant_decl/1.0/0 ε )
global_constant_decl/1.0 .reg_info.index: 1452
global_constant_decl/1.0 .first: {'@' ε}
global_constant_decl/1.0 .derives_empty: True
global_constant_decl/1.0 .follow: {'override'}
global_constant_decl/1.3  -> ( Choice ( Seq '=' expression ) ε )
global_constant_decl/1.3 .reg_info.index: 323
global_constant_decl/1.3 .first: {'=' ε}
global_constant_decl/1.3 .derives_empty: True
global_constant_decl/1.3 .follow: {';'}
argument_expression_list/0.1  -> ( Choice expression_comma_list ε )
argument_expression_list/0.1 .reg_info.index: 342
argument_expression_list/0.1 .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ ε}
argument_expression_list/0.1 .derives_empty: True
argument_expression_list/0.1 .follow: {')'}
expression_comma_list/0.1  -> ( Choice expression_comma_list/0.1/0 ε )
expression_comma_list/0.1 .reg_info.index: 1460
expression_comma_list/0.1 .first: {',' ε}
expression_comma_list/0.1 .derives_empty: True
expression_comma_list/0.1 .follow: {')' ','}
expression_comma_list/0.2  -> ( Choice ',' ε )
expression_comma_list/0.2 .reg_info.index: 251
expression_comma_list/0.2 .first: {',' ε}
expression_comma_list/0.2 .derives_empty: True
expression_comma_list/0.2 .follow: {')' ':' '{' '}'}
component_or_swizzle_specifier/0.3  -> ( Choice component_or_swizzle_specifier ε )
component_or_swizzle_specifier/0.3 .reg_info.index: 349
component_or_swizzle_specifier/0.3 .first: {'.' '[' ε}
component_or_swizzle_specifier/0.3 .derives_empty: True
component_or_swizzle_specifier/0.3 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2  -> ( Choice component_or_swizzle_specifier ε )
component_or_swizzle_specifier/1.2 .reg_info.index: 349
component_or_swizzle_specifier/1.2 .first: {'.' '[' ε}
component_or_swizzle_specifier/1.2 .derives_empty: True
component_or_swizzle_specifier/1.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2  -> ( Choice component_or_swizzle_specifier ε )
component_or_swizzle_specifier/2.2 .reg_info.index: 349
component_or_swizzle_specifier/2.2 .first: {'.' '[' ε}
component_or_swizzle_specifier/2.2 .derives_empty: True
component_or_swizzle_specifier/2.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
singular_expression/0.1  -> ( Choice component_or_swizzle_specifier ε )
singular_expression/0.1 .reg_info.index: 349
singular_expression/0.1 .first: {'.' '[' ε}
singular_expression/0.1 .derives_empty: True
singular_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
lhs_expression/0.1  -> ( Choice component_or_swizzle_specifier ε )
lhs_expression/0.1 .reg_info.index: 349
lhs_expression/0.1 .first: {'.' '[' ε}
lhs_expression/0.1 .derives_empty: True
lhs_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
compound_statement/0.1  -> ( Choice compound_statement/0.1/0 ε )
compound_statement/0.1 .reg_info.index: 1470
compound_statement/0.1 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
compound_statement/0.1 .derives_empty: True
compound_statement/0.1 .follow: {'}'}
assignment_statement/0.1  -> ( Choice '=' compound_assignment_operator )
assignment_statement/0.1 .reg_info.index: 422
assignment_statement/0.1 .first: {'%=' '&=' '*=' '+=' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
assignment_statement/0.1 .derives_empty: False
assignment_statement/0.1 .follow: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
if_statement/0.1  -> ( Choice if_statement/0.1/0 ε )
if_statement/0.1 .reg_info.index: 1475
if_statement/0.1 .first: {'else' ε}
if_statement/0.1 .derives_empty: True
if_statement/0.1 .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2  -> ( Choice else_clause ε )
if_statement/0.2 .reg_info.index: 436
if_statement/0.2 .first: {'else' ε}
if_statement/0.2 .derives_empty: True
if_statement/0.2 .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.3  -> ( Choice switch_statement/0.3/0 )
switch_statement/0.3 .reg_info.index: 1392
switch_statement/0.3 .first: {'case' 'default' ε}
switch_statement/0.3 .derives_empty: True
switch_statement/0.3 .follow: {'}'}
case_clause/0.2  -> ( Choice ':' ε )
case_clause/0.2 .reg_info.index: 449
case_clause/0.2 .first: {':' ε}
case_clause/0.2 .derives_empty: True
case_clause/0.2 .follow: {'{'}
default_alone_clause/0.1  -> ( Choice ':' ε )
default_alone_clause/0.1 .reg_info.index: 449
default_alone_clause/0.1 .first: {':' ε}
default_alone_clause/0.1 .derives_empty: True
default_alone_clause/0.1 .follow: {'{'}
case_selectors/0.1  -> ( Choice case_selectors/0.1/0 ε )
case_selectors/0.1 .reg_info.index: 1482
case_selectors/0.1 .first: {',' ε}
case_selectors/0.1 .derives_empty: True
case_selectors/0.1 .follow: {',' ':' '{'}
case_selectors/0.2  -> ( Choice ',' ε )
case_selectors/0.2 .reg_info.index: 251
case_selectors/0.2 .first: {',' ε}
case_selectors/0.2 .derives_empty: True
case_selectors/0.2 .follow: {')' ':' '{' '}'}
loop_statement/0.2  -> ( Choice loop_statement/0.2/0 ε )
loop_statement/0.2 .reg_info.index: 1487
loop_statement/0.2 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
loop_statement/0.2 .derives_empty: True
loop_statement/0.2 .follow: {'continuing' '}'}
loop_statement/0.3  -> ( Choice continuing_statement ε )
loop_statement/0.3 .reg_info.index: 459
loop_statement/0.3 .first: {'continuing' ε}
loop_statement/0.3 .derives_empty: True
loop_statement/0.3 .follow: {'}'}
for_header/0.0  -> ( Choice for_init ε )
for_header/0.0 .reg_info.index: 464
for_header/0.0 .first: {'&' '(' '*' '_' 'array' 'atomic' 'bool' 'const' 'f16' 'f32' 'i32' 'let' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
for_header/0.0 .derives_empty: True
for_header/0.0 .follow: {';'}
for_header/0.2  -> ( Choice expression ε )
for_header/0.2 .reg_info.index: 465
for_header/0.2 .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ ε}
for_header/0.2 .derives_empty: True
for_header/0.2 .follow: {';'}
for_header/0.4  -> ( Choice for_update ε )
for_header/0.4 .reg_info.index: 467
for_header/0.4 .first: {'&' '(' '*' '_' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
for_header/0.4 .derives_empty: True
for_header/0.4 .follow: {')'}
continuing_compound_statement/0.1  -> ( Choice continuing_compound_statement/0.1/0 ε )
continuing_compound_statement/0.1 .reg_info.index: 1495
continuing_compound_statement/0.1 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
continuing_compound_statement/0.1 .derives_empty: True
continuing_compound_statement/0.1 .follow: {'break' '}'}
continuing_compound_statement/0.2  -> ( Choice break_if_statement ε )
continuing_compound_statement/0.2 .reg_info.index: 479
continuing_compound_statement/0.2 .first: {'break' ε}
continuing_compound_statement/0.2 .derives_empty: True
continuing_compound_statement/0.2 .follow: {'}'}
return_statement/0.1  -> ( Choice expression ε )
return_statement/0.1 .reg_info.index: 465
return_statement/0.1 .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ ε}
return_statement/0.1 .derives_empty: True
return_statement/0.1 .follow: {';'}
function_decl/0.0  -> ( Choice function_decl/0.0/0 ε )
function_decl/0.0 .reg_info.index: 1501
function_decl/0.0 .first: {'@' ε}
function_decl/0.0 .derives_empty: True
function_decl/0.0 .follow: {'fn'}
function_header/0.3  -> ( Choice param_list ε )
function_header/0.3 .reg_info.index: 506
function_header/0.3 .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
function_header/0.3 .derives_empty: True
function_header/0.3 .follow: {')'}
function_header/0.5  -> ( Choice ( Seq '->' function_header/0.5/0.1 type_specifier ) ε )
function_header/0.5 .reg_info.index: 1508
function_header/0.5 .first: {'->' ε}
function_header/0.5 .derives_empty: True
function_header/0.5 .follow: {'{'}
param_list/0.1  -> ( Choice param_list/0.1/0 ε )
param_list/0.1 .reg_info.index: 1512
param_list/0.1 .first: {',' ε}
param_list/0.1 .derives_empty: True
param_list/0.1 .follow: {')' ','}
param_list/0.2  -> ( Choice ',' ε )
param_list/0.2 .reg_info.index: 251
param_list/0.2 .first: {',' ε}
param_list/0.2 .derives_empty: True
param_list/0.2 .follow: {')' ':' '{' '}'}
param/0.0  -> ( Choice param/0.0/0 ε )
param/0.0 .reg_info.index: 1517
param/0.0 .first: {'@' ε}
param/0.0 .derives_empty: True
param/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.3/0  -> ( Choice ( Seq switch_body switch_statement/0.3/0 ) ε )
switch_statement/0.3/0 .reg_info.index: 1391
switch_statement/0.3/0 .first: {'case' 'default' ε}
switch_statement/0.3/0 .derives_empty: True
switch_statement/0.3/0 .follow: {'}'}
translation_unit/0.0/0  -> ( Choice ( Seq global_directive translation_unit/0.0/0 ) ε )
translation_unit/0.0/0 .reg_info.index: 1412
translation_unit/0.0/0 .first: {'enable' ε}
translation_unit/0.0/0 .derives_empty: True
translation_unit/0.0/0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0  -> ( Choice ( Seq global_decl translation_unit/0.1/0 ) ε )
translation_unit/0.1/0 .reg_info.index: 1416
translation_unit/0.1/0 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' ε}
translation_unit/0.1/0 .derives_empty: True
translation_unit/0.1/0 .follow: {EndOfText}
struct_body_decl/0.2/0  -> ( Choice ( Seq struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 ) ε )
struct_body_decl/0.2/0 .reg_info.index: 1536
struct_body_decl/0.2/0 .first: {',' ε}
struct_body_decl/0.2/0 .derives_empty: True
struct_body_decl/0.2/0 .follow: {',' '}'}
struct_member/0.0/0  -> ( Choice ( Seq attribute struct_member/0.0/0 ) ε )
struct_member/0.0/0 .reg_info.index: 1429
struct_member/0.0/0 .first: {'@' ε}
struct_member/0.0/0 .derives_empty: True
struct_member/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
global_variable_decl/0.0/0  -> ( Choice ( Seq attribute global_variable_decl/0.0/0 ) ε )
global_variable_decl/0.0/0 .reg_info.index: 1443
global_variable_decl/0.0/0 .first: {'@' ε}
global_variable_decl/0.0/0 .derives_empty: True
global_variable_decl/0.0/0 .follow: {'var'}
global_constant_decl/1.0/0  -> ( Choice ( Seq attribute global_constant_decl/1.0/0 ) ε )
global_constant_decl/1.0/0 .reg_info.index: 1450
global_constant_decl/1.0/0 .first: {'@' ε}
global_constant_decl/1.0/0 .derives_empty: True
global_constant_decl/1.0/0 .follow: {'override'}
expression_comma_list/0.1/0  -> ( Choice ( Seq expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 ) ε )
expression_comma_list/0.1/0 .reg_info.index: 1555
expression_comma_list/0.1/0 .first: {',' ε}
expression_comma_list/0.1/0 .derives_empty: True
expression_comma_list/0.1/0 .follow: {')' ','}
compound_statement/0.1/0  -> ( Choice ( Seq statement compound_statement/0.1/0 ) ε )
compound_statement/0.1/0 .reg_info.index: 1468
compound_statement/0.1/0 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
compound_statement/0.1/0 .derives_empty: True
compound_statement/0.1/0 .follow: {'}'}
if_statement/0.1/0  -> ( Choice ( Seq else_if_clause if_statement/0.1/0 ) ε )
if_statement/0.1/0 .reg_info.index: 1473
if_statement/0.1/0 .first: {'else' ε}
if_statement/0.1/0 .derives_empty: True
if_statement/0.1/0 .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
case_selectors/0.1/0  -> ( Choice ( Seq case_selectors/0.1/0/0.0 case_selectors/0.1/0 ) ε )
case_selectors/0.1/0 .reg_info.index: 1570
case_selectors/0.1/0 .first: {',' ε}
case_selectors/0.1/0 .derives_empty: True
case_selectors/0.1/0 .follow: {',' ':' '{'}
loop_statement/0.2/0  -> ( Choice ( Seq statement loop_statement/0.2/0 ) ε )
loop_statement/0.2/0 .reg_info.index: 1485
loop_statement/0.2/0 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
loop_statement/0.2/0 .derives_empty: True
loop_statement/0.2/0 .follow: {'continuing' '}'}
continuing_compound_statement/0.1/0  -> ( Choice ( Seq statement continuing_compound_statement/0.1/0 ) ε )
continuing_compound_statement/0.1/0 .reg_info.index: 1493
continuing_compound_statement/0.1/0 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
continuing_compound_statement/0.1/0 .derives_empty: True
continuing_compound_statement/0.1/0 .follow: {'break' '}'}
function_decl/0.0/0  -> ( Choice ( Seq attribute function_decl/0.0/0 ) ε )
function_decl/0.0/0 .reg_info.index: 1499
function_decl/0.0/0 .first: {'@' ε}
function_decl/0.0/0 .derives_empty: True
function_decl/0.0/0 .follow: {'fn'}
function_header/0.5/0.1  -> ( Choice function_header/0.5/0.1/0 ε )
function_header/0.5/0.1 .reg_info.index: 1598
function_header/0.5/0.1 .first: {'@' ε}
function_header/0.5/0.1 .derives_empty: True
function_header/0.5/0.1 .follow: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list/0.1/0  -> ( Choice ( Seq param_list/0.1/0/0.0 param_list/0.1/0 ) ε )
param_list/0.1/0 .reg_info.index: 1590
param_list/0.1/0 .first: {',' ε}
param_list/0.1/0 .derives_empty: True
param_list/0.1/0 .follow: {')' ','}
param/0.0/0  -> ( Choice ( Seq attribute param/0.0/0 ) ε )
param/0.0/0 .reg_info.index: 1515
param/0.0/0 .first: {'@' ε}
param/0.0/0 .derives_empty: True
param/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_body_decl/0.2/0/0.0  -> ( Choice ( Seq ',' struct_member ) )
struct_body_decl/0.2/0/0.0 .reg_info.index: 1532
struct_body_decl/0.2/0/0.0 .first: {','}
struct_body_decl/0.2/0/0.0 .derives_empty: False
struct_body_decl/0.2/0/0.0 .follow: {',' '}'}
expression_comma_list/0.1/0/0.0  -> ( Choice ( Seq ',' expression ) )
expression_comma_list/0.1/0/0.0 .reg_info.index: 1551
expression_comma_list/0.1/0/0.0 .first: {','}
expression_comma_list/0.1/0/0.0 .derives_empty: False
expression_comma_list/0.1/0/0.0 .follow: {')' ','}
case_selectors/0.1/0/0.0  -> ( Choice ( Seq ',' case_selector ) )
case_selectors/0.1/0/0.0 .reg_info.index: 1566
case_selectors/0.1/0/0.0 .first: {','}
case_selectors/0.1/0/0.0 .derives_empty: False
case_selectors/0.1/0/0.0 .follow: {',' ':' '{'}
param_list/0.1/0/0.0  -> ( Choice ( Seq ',' param ) )
param_list/0.1/0/0.0 .reg_info.index: 1586
param_list/0.1/0/0.0 .first: {','}
param_list/0.1/0/0.0 .derives_empty: False
param_list/0.1/0/0.0 .follow: {')' ','}
function_header/0.5/0.1/0  -> ( Choice ( Seq attribute function_header/0.5/0.1/0 ) ε )
function_header/0.5/0.1/0 .reg_info.index: 1596
function_header/0.5/0.1/0 .first: {'@' ε}
function_header/0.5/0.1/0 .derives_empty: True
function_header/0.5/0.1/0 .follow: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

=LALR1 item sets:
#0
language -> · translation_unit EndOfText : {EndOfText}
global_directive -> · 'enable' extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit -> · translation_unit/0.0 translation_unit/0.1 : {EndOfText}
translation_unit/0.0 -> · translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> · global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#1
language -> translation_unit · EndOfText : {EndOfText}

#2
translation_unit -> translation_unit/0.0 · translation_unit/0.1 : {EndOfText}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
const_assert_statement -> · 'const_assert' expression : {';'}
function_decl -> · function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> · function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_constant_decl -> · 'const' optionally_typed_ident '=' expression : {';'}
global_constant_decl -> · global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}
global_constant_decl/1.0 -> · global_constant_decl/1.0/0 : {'override'}
global_constant_decl/1.0/0 -> · attribute global_constant_decl/1.0/0 : {'override'}
global_decl -> · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_constant_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_variable_decl -> · global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> · global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}
struct_decl -> · 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1 -> · translation_unit/0.1/0 : {EndOfText}
translation_unit/0.1/0 -> · global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> · 'alias' ident '=' type_specifier : {';'}

#3
translation_unit/0.0 -> translation_unit/0.0/0 · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#4
translation_unit/0.0/0 -> global_directive · translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_directive -> · 'enable' extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> · global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#5
global_directive -> 'enable' · extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}
extension_name -> · 'f16' : {';'}

#6
global_directive -> 'enable' extension_name · ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}

#7
extension_name -> 'f16' · : {';'}

#8
translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#9
translation_unit -> translation_unit/0.0 translation_unit/0.1 · : {EndOfText}

#10
translation_unit/0.1 -> translation_unit/0.1/0 · : {EndOfText}

#11
translation_unit/0.1/0 -> global_decl · translation_unit/0.1/0 : {EndOfText}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
const_assert_statement -> · 'const_assert' expression : {';'}
function_decl -> · function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> · function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_constant_decl -> · 'const' optionally_typed_ident '=' expression : {';'}
global_constant_decl -> · global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}
global_constant_decl/1.0 -> · global_constant_decl/1.0/0 : {'override'}
global_constant_decl/1.0/0 -> · attribute global_constant_decl/1.0/0 : {'override'}
global_decl -> · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_constant_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_variable_decl -> · global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> · global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}
struct_decl -> · 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0 -> · global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> · 'alias' ident '=' type_specifier : {';'}

#12
global_decl -> ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#13
global_decl -> global_variable_decl · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#14
global_decl -> global_constant_decl · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#15
global_decl -> type_alias_decl · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#16
global_decl -> struct_decl · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#17
global_decl -> function_decl · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#18
global_decl -> const_assert_statement · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#19
global_variable_decl -> global_variable_decl/0.0 · variable_decl global_variable_decl/0.2 : {';'}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}

#20
global_constant_decl -> 'const' · optionally_typed_ident '=' expression : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#21
global_constant_decl -> global_constant_decl/1.0 · 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}

#22
type_alias_decl -> 'alias' · ident '=' type_specifier : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'='}

#23
struct_decl -> 'struct' · ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'{'}

#24
function_decl -> function_decl/0.0 · function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header -> · 'fn' ident '(' function_header/0.3 ')' function_header/0.5 : {'{'}

#25
const_assert_statement -> 'const_assert' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#26
global_variable_decl/0.0 -> global_variable_decl/0.0/0 · : {'var'}

#27
global_constant_decl/1.0 -> global_constant_decl/1.0/0 · : {'override'}

#28
function_decl/0.0 -> function_decl/0.0/0 · : {'fn'}

#29
function_decl/0.0/0 -> attribute · function_decl/0.0/0 : {'fn'}
global_constant_decl/1.0/0 -> attribute · global_constant_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> attribute · global_variable_decl/0.0/0 : {'var'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_constant_decl/1.0/0 -> · attribute global_constant_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}

#30
attribute -> '@' · 'align' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'binding' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'builtin' '(' builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'group' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'id' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'location' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'workgroup_size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#31
attribute -> '@' 'align' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#32
attribute -> '@' 'binding' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#33
attribute -> '@' 'builtin' · '(' builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#34
attribute -> '@' 'const' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#35
attribute -> '@' 'group' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#36
attribute -> '@' 'id' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#37
attribute -> '@' 'interpolate' · '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' · '(' interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#38
attribute -> '@' 'invariant' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#39
attribute -> '@' 'location' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#40
attribute -> '@' 'size' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#41
attribute -> '@' 'workgroup_size' · '(' expression ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' · '(' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#42
attribute -> '@' 'vertex' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#43
attribute -> '@' 'fragment' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#44
attribute -> '@' 'compute' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#45
global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 · : {'var'}

#46
global_constant_decl/1.0/0 -> attribute global_constant_decl/1.0/0 · : {'override'}

#47
function_decl/0.0/0 -> attribute function_decl/0.0/0 · : {'fn'}

#48
const_assert_statement -> 'const_assert' expression · : {';'}

#49
expression -> relational_expression · : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> relational_expression · : {'&&'}
short_circuit_or_expression -> relational_expression · : {'||'}

#50
expression -> short_circuit_or_expression · '||' relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression · '||' relational_expression : {'||'}

#51
expression -> short_circuit_and_expression · '&&' relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression · '&&' relational_expression : {'&&'}

#52
expression -> bitwise_expression · : {')' ',' ':' ';' ']' '{'}

#53
relational_expression -> shift_expression · '!=' shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · '==' shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · _greater_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · _less_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
_greater_than -> · /\u200B_greater_than/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_greater_than_equal -> · /\u200B_greater_than_equal/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than -> · /\u200B_less_than/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than_equal -> · /\u200B_less_than_equal/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#54
binary_and_expression -> binary_and_expression · '&' unary_expression : {'&'}
bitwise_expression -> binary_and_expression · '&' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#55
binary_or_expression -> binary_or_expression · '|' unary_expression : {'|'}
bitwise_expression -> binary_or_expression · '|' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#56
binary_xor_expression -> binary_xor_expression · '^' unary_expression : {'^'}
bitwise_expression -> binary_xor_expression · '^' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#57
additive_expression -> additive_expression · additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> additive_expression · : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_operator -> · '+' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_operator -> · '-' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#58
binary_and_expression -> unary_expression · : {'&'}
binary_or_expression -> unary_expression · : {'|'}
binary_xor_expression -> unary_expression · : {'^'}
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> unary_expression · _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> unary_expression · _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
_shift_left -> · /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> · /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#59
additive_expression -> multiplicative_expression · : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression · multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> · '%' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '*' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '/' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#60
unary_expression -> singular_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#61
unary_expression -> '-' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#62
unary_expression -> '!' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#63
unary_expression -> '~' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#64
unary_expression -> '*' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#65
unary_expression -> '&' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#66
singular_expression -> primary_expression · singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression/0.1 -> · component_or_swizzle_specifier : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#67
callable -> ident · : {'('}
primary_expression -> ident · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#68
primary_expression -> call_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#69
primary_expression -> literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#70
primary_expression -> paren_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#71
primary_expression -> 'bitcast' · _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#72
ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#73
call_expression -> callable · argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list -> · '(' argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#74
literal -> int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#75
literal -> float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#76
literal -> bool_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#77
paren_expression -> '(' · expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')'}
expression -> · relational_expression : {')'}
expression -> · short_circuit_and_expression '&&' relational_expression : {')'}
expression -> · short_circuit_or_expression '||' relational_expression : {')'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#78
callable -> type_specifier_without_ident · : {'('}

#79
callable -> vec_prefix · _disambiguate_template : {'('}
type_specifier_without_ident -> vec_prefix · _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'(' /\u200B_template_args_start/}

#80
callable -> mat_prefix · _disambiguate_template : {'('}
type_specifier_without_ident -> mat_prefix · _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'(' /\u200B_template_args_start/}

#81
array_type_specifier -> 'array' · _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
callable -> 'array' · _disambiguate_template : {'('}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'(' /\u200B_template_args_start/}

#82
int_literal -> decimal_int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#83
int_literal -> hex_int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#84
float_literal -> decimal_float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#85
float_literal -> hex_float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#86
bool_literal -> 'true' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#87
bool_literal -> 'false' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#88
type_specifier_without_ident -> 'bool' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#89
type_specifier_without_ident -> 'f32' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#90
type_specifier_without_ident -> 'f16' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#91
type_specifier_without_ident -> 'i32' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#92
type_specifier_without_ident -> 'u32' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#93
type_specifier_without_ident -> 'ptr' · _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#94
type_specifier_without_ident -> array_type_specifier · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#95
type_specifier_without_ident -> 'atomic' · _disambiguate_template _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#96
type_specifier_without_ident -> texture_and_sampler_types · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#97
vec_prefix -> 'vec2' · : {/\u200B_disambiguate_template/}

#98
vec_prefix -> 'vec3' · : {/\u200B_disambiguate_template/}

#99
vec_prefix -> 'vec4' · : {/\u200B_disambiguate_template/}

#100
mat_prefix -> 'mat2x2' · : {/\u200B_disambiguate_template/}

#101
mat_prefix -> 'mat2x3' · : {/\u200B_disambiguate_template/}

#102
mat_prefix -> 'mat2x4' · : {/\u200B_disambiguate_template/}

#103
mat_prefix -> 'mat3x2' · : {/\u200B_disambiguate_template/}

#104
mat_prefix -> 'mat3x3' · : {/\u200B_disambiguate_template/}

#105
mat_prefix -> 'mat3x4' · : {/\u200B_disambiguate_template/}

#106
mat_prefix -> 'mat4x2' · : {/\u200B_disambiguate_template/}

#107
mat_prefix -> 'mat4x3' · : {/\u200B_disambiguate_template/}

#108
mat_prefix -> 'mat4x4' · : {/\u200B_disambiguate_template/}

#109
decimal_int_literal -> /0[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#110
decimal_int_literal -> /[1-9][0-9]*[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#111
hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#112
decimal_float_literal -> /0[fh]/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#113
decimal_float_literal -> /[1-9][0-9]*[fh]/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#114
decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#115
decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#116
decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#117
hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#118
hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#119
hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#120
texture_and_sampler_types -> sampler_type · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#121
texture_and_sampler_types -> depth_texture_type · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#122
texture_and_sampler_types -> sampled_texture_type · _disambiguate_template _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#123
texture_and_sampler_types -> multisampled_texture_type · _disambiguate_template _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#124
texture_and_sampler_types -> storage_texture_type · _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#125
sampler_type -> 'sampler' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#126
sampler_type -> 'sampler_comparison' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#127
depth_texture_type -> 'texture_depth_2d' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#128
depth_texture_type -> 'texture_depth_2d_array' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#129
depth_texture_type -> 'texture_depth_cube' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#130
depth_texture_type -> 'texture_depth_cube_array' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#131
depth_texture_type -> 'texture_depth_multisampled_2d' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#132
sampled_texture_type -> 'texture_1d' · : {/\u200B_disambiguate_template/}

#133
sampled_texture_type -> 'texture_2d' · : {/\u200B_disambiguate_template/}

#134
sampled_texture_type -> 'texture_2d_array' · : {/\u200B_disambiguate_template/}

#135
sampled_texture_type -> 'texture_3d' · : {/\u200B_disambiguate_template/}

#136
sampled_texture_type -> 'texture_cube' · : {/\u200B_disambiguate_template/}

#137
sampled_texture_type -> 'texture_cube_array' · : {/\u200B_disambiguate_template/}

#138
multisampled_texture_type -> 'texture_multisampled_2d' · : {/\u200B_disambiguate_template/}

#139
storage_texture_type -> 'texture_storage_1d' · : {/\u200B_disambiguate_template/}

#140
storage_texture_type -> 'texture_storage_2d' · : {/\u200B_disambiguate_template/}

#141
storage_texture_type -> 'texture_storage_2d_array' · : {/\u200B_disambiguate_template/}

#142
storage_texture_type -> 'texture_storage_3d' · : {/\u200B_disambiguate_template/}

#143
function_decl -> function_decl/0.0 function_header · compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
compound_statement -> · '{' compound_statement/0.1 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#144
function_header -> 'fn' · ident '(' function_header/0.3 ')' function_header/0.5 : {'{'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'('}

#145
struct_decl -> 'struct' ident · struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl -> · '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#146
type_alias_decl -> 'alias' ident · '=' type_specifier : {';'}

#147
global_constant_decl -> global_constant_decl/1.0 'override' · optionally_typed_ident global_constant_decl/1.3 : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' ';' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {';' '='}

#148
global_constant_decl -> 'const' optionally_typed_ident · '=' expression : {';'}

#149
optionally_typed_ident -> ident · optionally_typed_ident/0.1 : {';' '='}
optionally_typed_ident/0.1 -> · ':' type_specifier : {';' '='}

#150
global_variable_decl -> global_variable_decl/0.0 variable_decl · global_variable_decl/0.2 : {';'}
global_variable_decl/0.2 -> · '=' expression : {';'}

#151
variable_decl -> 'var' · _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_template_args_start/}

#152
global_decl -> const_assert_statement ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#153
global_decl -> type_alias_decl ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#154
global_decl -> global_constant_decl ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#155
global_decl -> global_variable_decl ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#156
translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 · : {EndOfText}

#157
global_directive -> 'enable' extension_name ';' · : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}

#158
variable_decl -> 'var' _disambiguate_template · variable_decl/0.2 optionally_typed_ident : {';' '='}
_template_args_start -> · /\u200B_template_args_start/ : {'function' 'private' 'storage' 'uniform' 'workgroup'}
variable_decl/0.2 -> · variable_qualifier : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_qualifier -> · _template_args_start address_space variable_qualifier/0.2 _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#159
_disambiguate_template -> /\u200B_disambiguate_template/ · : {'(' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_template_args_start/}

#160
global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 · : {';'}

#161
global_variable_decl/0.2 -> '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#162
optionally_typed_ident -> ident optionally_typed_ident/0.1 · : {';' '='}

#163
optionally_typed_ident/0.1 -> ':' · type_specifier : {';' '='}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {';' '='}
depth_texture_type -> · 'texture_depth_2d' : {';' '='}
depth_texture_type -> · 'texture_depth_2d_array' : {';' '='}
depth_texture_type -> · 'texture_depth_cube' : {';' '='}
depth_texture_type -> · 'texture_depth_cube_array' : {';' '='}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {';' '='}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {';' '='}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {';' '='}
sampler_type -> · 'sampler_comparison' : {';' '='}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {';' '='}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {';' '='}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {';' '='}
texture_and_sampler_types -> · sampler_type : {';' '='}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {';' '='}
type_specifier -> · ident : {';' '='}
type_specifier -> · type_specifier_without_ident : {';' '='}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {';' '='}
type_specifier_without_ident -> · 'bool' : {';' '='}
type_specifier_without_ident -> · 'f16' : {';' '='}
type_specifier_without_ident -> · 'f32' : {';' '='}
type_specifier_without_ident -> · 'i32' : {';' '='}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {';' '='}
type_specifier_without_ident -> · 'u32' : {';' '='}
type_specifier_without_ident -> · array_type_specifier : {';' '='}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {';' '='}
type_specifier_without_ident -> · texture_and_sampler_types : {';' '='}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {';' '='}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#164
global_constant_decl -> 'const' optionally_typed_ident '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#165
global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident · global_constant_decl/1.3 : {';'}
global_constant_decl/1.3 -> · '=' expression : {';'}

#166
type_alias_decl -> 'alias' ident '=' · type_specifier : {';'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {';'}
depth_texture_type -> · 'texture_depth_2d' : {';'}
depth_texture_type -> · 'texture_depth_2d_array' : {';'}
depth_texture_type -> · 'texture_depth_cube' : {';'}
depth_texture_type -> · 'texture_depth_cube_array' : {';'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {';'}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {';'}
sampler_type -> · 'sampler_comparison' : {';'}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {';'}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {';'}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {';'}
texture_and_sampler_types -> · sampler_type : {';'}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {';'}
type_specifier -> · ident : {';'}
type_specifier -> · type_specifier_without_ident : {';'}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {';'}
type_specifier_without_ident -> · 'bool' : {';'}
type_specifier_without_ident -> · 'f16' : {';'}
type_specifier_without_ident -> · 'f32' : {';'}
type_specifier_without_ident -> · 'i32' : {';'}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {';'}
type_specifier_without_ident -> · 'u32' : {';'}
type_specifier_without_ident -> · array_type_specifier : {';'}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {';'}
type_specifier_without_ident -> · texture_and_sampler_types : {';'}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#167
struct_decl -> 'struct' ident struct_body_decl · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#168
struct_body_decl -> '{' · struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> · struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> · struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#169
function_header -> 'fn' ident · '(' function_header/0.3 ')' function_header/0.5 : {'{'}

#170
function_decl -> function_decl/0.0 function_header compound_statement · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#171
compound_statement -> '{' · compound_statement/0.1 '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.1 -> · compound_statement/0.1/0 : {'}'}
compound_statement/0.1/0 -> · statement compound_statement/0.1/0 : {'}'}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#172
texture_and_sampler_types -> storage_texture_type _disambiguate_template · _template_args_start texel_format ',' access_mode _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'bgra8unorm' 'r32float' 'r32sint' 'r32uint' 'rg32float' 'rg32sint' 'rg32uint' 'rgba16float' 'rgba16sint' 'rgba16uint' 'rgba32float' 'rgba32sint' 'rgba32uint' 'rgba8sint' 'rgba8snorm' 'rgba8uint' 'rgba8unorm'}

#173
texture_and_sampler_types -> multisampled_texture_type _disambiguate_template · _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#174
texture_and_sampler_types -> sampled_texture_type _disambiguate_template · _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#175
type_specifier_without_ident -> 'atomic' _disambiguate_template · _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#176
type_specifier_without_ident -> 'ptr' _disambiguate_template · _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'function' 'private' 'storage' 'uniform' 'workgroup'}

#177
array_type_specifier -> 'array' _disambiguate_template · _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
callable -> 'array' _disambiguate_template · : {'('}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#178
callable -> mat_prefix _disambiguate_template · : {'('}
type_specifier_without_ident -> mat_prefix _disambiguate_template · _template_args_start type_specifier _template_args_end : {'('}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#179
callable -> vec_prefix _disambiguate_template · : {'('}
type_specifier_without_ident -> vec_prefix _disambiguate_template · _template_args_start type_specifier _template_args_end : {'('}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#180
paren_expression -> '(' expression · ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#181
call_expression -> callable argument_expression_list · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#182
argument_expression_list -> '(' · argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
argument_expression_list/0.1 -> · expression_comma_list : {')'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
expression_comma_list -> · expression expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#183
primary_expression -> 'bitcast' _disambiguate_template · _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#184
singular_expression -> primary_expression singular_expression/0.1 · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#185
singular_expression/0.1 -> component_or_swizzle_specifier · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#186
component_or_swizzle_specifier -> '[' · expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {']'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {']'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {']'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {']'}
expression -> · relational_expression : {']'}
expression -> · short_circuit_and_expression '&&' relational_expression : {']'}
expression -> · short_circuit_or_expression '||' relational_expression : {']'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ']' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#187
component_or_swizzle_specifier -> '.' · member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> '.' · swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
member_ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba][rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw][xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#188
unary_expression -> '&' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#189
unary_expression -> '*' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#190
unary_expression -> '~' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#191
unary_expression -> '!' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#192
unary_expression -> '-' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#193
multiplicative_expression -> multiplicative_expression multiplicative_operator · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#194
multiplicative_operator -> '*' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#195
multiplicative_operator -> '/' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#196
multiplicative_operator -> '%' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#197
shift_expression -> unary_expression _shift_left · unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> · 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
call_expression -> · callable argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
float_literal -> · hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
int_literal -> · decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
int_literal -> · hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#198
shift_expression -> unary_expression _shift_right · unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> · 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
call_expression -> · callable argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
float_literal -> · hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
int_literal -> · decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
int_literal -> · hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#199
_shift_left -> /\u200B_shift_left/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#200
_shift_right -> /\u200B_shift_right/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#201
additive_expression -> additive_expression additive_operator · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#202
additive_operator -> '+' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#203
additive_operator -> '-' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#204
binary_xor_expression -> binary_xor_expression '^' · unary_expression : {'^'}
bitwise_expression -> binary_xor_expression '^' · unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
bool_literal -> · 'true' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'(' ')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> · bool_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> · float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> · int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · call_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · ident : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#205
binary_or_expression -> binary_or_expression '|' · unary_expression : {'|'}
bitwise_expression -> binary_or_expression '|' · unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
bool_literal -> · 'true' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'(' ')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> · bool_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> · float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> · int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · call_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · ident : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#206
binary_and_expression -> binary_and_expression '&' · unary_expression : {'&'}
bitwise_expression -> binary_and_expression '&' · unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
bool_literal -> · 'true' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'&' '(' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> · bool_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> · float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> · int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · call_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · ident : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#207
relational_expression -> shift_expression _less_than · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#208
relational_expression -> shift_expression _greater_than · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#209
relational_expression -> shift_expression _less_than_equal · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#210
relational_expression -> shift_expression _greater_than_equal · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#211
relational_expression -> shift_expression '==' · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#212
relational_expression -> shift_expression '!=' · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#213
_less_than -> /\u200B_less_than/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#214
_greater_than -> /\u200B_greater_than/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#215
_less_than_equal -> /\u200B_less_than_equal/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#216
_greater_than_equal -> /\u200B_greater_than_equal/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#217
expression -> short_circuit_and_expression '&&' · relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' · relational_expression : {'&&'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#218
expression -> short_circuit_or_expression '||' · relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' · relational_expression : {'||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#219
attribute -> '@' 'workgroup_size' '(' · expression ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' · expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#220
attribute -> '@' 'size' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#221
attribute -> '@' 'location' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#222
attribute -> '@' 'interpolate' '(' · interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' '(' · interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolation_type_name -> · 'flat' : {')' ','}
interpolation_type_name -> · 'linear' : {')' ','}
interpolation_type_name -> · 'perspective' : {')' ','}

#223
attribute -> '@' 'id' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#224
attribute -> '@' 'group' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#225
attribute -> '@' 'builtin' '(' · builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_value_name -> · 'frag_depth' : {')' ','}
builtin_value_name -> · 'front_facing' : {')' ','}
builtin_value_name -> · 'global_invocation_id' : {')' ','}
builtin_value_name -> · 'instance_index' : {')' ','}
builtin_value_name -> · 'local_invocation_id' : {')' ','}
builtin_value_name -> · 'local_invocation_index' : {')' ','}
builtin_value_name -> · 'num_workgroups' : {')' ','}
builtin_value_name -> · 'position' : {')' ','}
builtin_value_name -> · 'sample_index' : {')' ','}
builtin_value_name -> · 'sample_mask' : {')' ','}
builtin_value_name -> · 'vertex_index' : {')' ','}
builtin_value_name -> · 'workgroup_id' : {')' ','}

#226
attribute -> '@' 'binding' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#227
attribute -> '@' 'align' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#228
attribute -> '@' 'align' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#229
attribute -> '@' 'binding' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#230
attribute -> '@' 'builtin' '(' builtin_value_name · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#231
builtin_value_name -> 'vertex_index' · : {')' ','}

#232
builtin_value_name -> 'instance_index' · : {')' ','}

#233
builtin_value_name -> 'position' · : {')' ','}

#234
builtin_value_name -> 'front_facing' · : {')' ','}

#235
builtin_value_name -> 'frag_depth' · : {')' ','}

#236
builtin_value_name -> 'local_invocation_id' · : {')' ','}

#237
builtin_value_name -> 'local_invocation_index' · : {')' ','}

#238
builtin_value_name -> 'global_invocation_id' · : {')' ','}

#239
builtin_value_name -> 'workgroup_id' · : {')' ','}

#240
builtin_value_name -> 'num_workgroups' · : {')' ','}

#241
builtin_value_name -> 'sample_index' · : {')' ','}

#242
builtin_value_name -> 'sample_mask' · : {')' ','}

#243
attribute -> '@' 'group' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#244
attribute -> '@' 'id' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#245
attribute -> '@' 'interpolate' '(' interpolation_type_name · ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' '(' interpolation_type_name · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#246
interpolation_type_name -> 'perspective' · : {')' ','}

#247
interpolation_type_name -> 'linear' · : {')' ','}

#248
interpolation_type_name -> 'flat' · : {')' ','}

#249
attribute -> '@' 'location' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#250
attribute -> '@' 'size' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#251
attribute -> '@' 'workgroup_size' '(' expression · ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression · ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#252
expression -> short_circuit_or_expression '||' relational_expression · : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression · : {'||'}

#253
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> unary_expression · _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> unary_expression · _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
_shift_left -> · /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> · /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#254
expression -> short_circuit_and_expression '&&' relational_expression · : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression · : {'&&'}

#255
relational_expression -> shift_expression '!=' shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#256
relational_expression -> shift_expression '==' shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#257
relational_expression -> shift_expression _greater_than_equal shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#258
relational_expression -> shift_expression _less_than_equal shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#259
relational_expression -> shift_expression _greater_than shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#260
relational_expression -> shift_expression _less_than shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#261
binary_and_expression -> binary_and_expression '&' unary_expression · : {'&'}
bitwise_expression -> binary_and_expression '&' unary_expression · : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#262
binary_or_expression -> binary_or_expression '|' unary_expression · : {'|'}
bitwise_expression -> binary_or_expression '|' unary_expression · : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#263
binary_xor_expression -> binary_xor_expression '^' unary_expression · : {'^'}
bitwise_expression -> binary_xor_expression '^' unary_expression · : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#264
additive_expression -> additive_expression additive_operator multiplicative_expression · : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression · multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> · '%' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '*' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '/' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#265
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#266
shift_expression -> unary_expression _shift_right unary_expression · : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}

#267
shift_expression -> unary_expression _shift_left unary_expression · : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}

#268
multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#269
component_or_swizzle_specifier -> '.' member_ident · component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#270
component_or_swizzle_specifier -> '.' swizzle_name · component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#271
member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#272
swizzle_name -> '/[rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#273
swizzle_name -> '/[rgba][rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#274
swizzle_name -> '/[rgba][rgba][rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#275
swizzle_name -> '/[rgba][rgba][rgba][rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#276
swizzle_name -> '/[xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#277
swizzle_name -> '/[xyzw][xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#278
swizzle_name -> '/[xyzw][xyzw][xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#279
swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#280
component_or_swizzle_specifier -> '[' expression · ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#281
primary_expression -> 'bitcast' _disambiguate_template _template_args_start · type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#282
_template_args_start -> /\u200B_template_args_start/ · : {'array' 'atomic' 'bgra8unorm' 'bool' 'f16' 'f32' 'function' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'private' 'ptr' 'r32float' 'r32sint' 'r32uint' 'rg32float' 'rg32sint' 'rg32uint' 'rgba16float' 'rgba16sint' 'rgba16uint' 'rgba32float' 'rgba32sint' 'rgba32uint' 'rgba8sint' 'rgba8snorm' 'rgba8uint' 'rgba8unorm' 'sampler' 'sampler_comparison' 'storage' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'uniform' 'vec2' 'vec3' 'vec4' 'workgroup' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#283
argument_expression_list -> '(' argument_expression_list/0.1 · ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#284
argument_expression_list/0.1 -> expression_comma_list · : {')'}

#285
expression_comma_list -> expression · expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
expression_comma_list/0.1 -> · expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> · expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> · ',' expression : {')' ','}

#286
paren_expression -> '(' expression ')' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#287
type_specifier_without_ident -> vec_prefix _disambiguate_template _template_args_start · type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#288
type_specifier_without_ident -> mat_prefix _disambiguate_template _template_args_start · type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#289
array_type_specifier -> 'array' _disambiguate_template _template_args_start · type_specifier array_type_specifier/0.4 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {',' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {',' /\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {',' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {',' /\u200B_template_args_end/}
type_specifier -> · ident : {',' /\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#290
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start · address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
address_space -> · 'function' : {','}
address_space -> · 'private' : {','}
address_space -> · 'storage' : {','}
address_space -> · 'uniform' : {','}
address_space -> · 'workgroup' : {','}

#291
type_specifier_without_ident -> 'atomic' _disambiguate_template _template_args_start · type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#292
texture_and_sampler_types -> sampled_texture_type _disambiguate_template _template_args_start · type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#293
texture_and_sampler_types -> multisampled_texture_type _disambiguate_template _template_args_start · type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#294
texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start · texel_format ',' access_mode _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
texel_format -> · 'bgra8unorm' : {','}
texel_format -> · 'r32float' : {','}
texel_format -> · 'r32sint' : {','}
texel_format -> · 'r32uint' : {','}
texel_format -> · 'rg32float' : {','}
texel_format -> · 'rg32sint' : {','}
texel_format -> · 'rg32uint' : {','}
texel_format -> · 'rgba16float' : {','}
texel_format -> · 'rgba16sint' : {','}
texel_format -> · 'rgba16uint' : {','}
texel_format -> · 'rgba32float' : {','}
texel_format -> · 'rgba32sint' : {','}
texel_format -> · 'rgba32uint' : {','}
texel_format -> · 'rgba8sint' : {','}
texel_format -> · 'rgba8snorm' : {','}
texel_format -> · 'rgba8uint' : {','}
texel_format -> · 'rgba8unorm' : {','}

#295
compound_statement -> '{' compound_statement/0.1 · '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#296
compound_statement/0.1 -> compound_statement/0.1/0 · : {'}'}

#297
compound_statement/0.1/0 -> statement · compound_statement/0.1/0 : {'}'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.1/0 -> · statement compound_statement/0.1/0 : {'}'}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#298
statement -> ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#299
statement -> return_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#300
statement -> if_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#301
statement -> switch_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#302
statement -> loop_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#303
statement -> for_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#304
statement -> while_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#305
statement -> func_call_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#306
statement -> variable_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#307
statement -> break_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#308
statement -> continue_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#309
statement -> 'discard' · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#310
statement -> variable_updating_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#311
statement -> compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#312
statement -> const_assert_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#313
return_statement -> 'return' · return_statement/0.1 : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
return_statement/0.1 -> · expression : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#314
if_statement -> if_clause · if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> · 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1 -> · if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1/0 -> · else_if_clause if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#315
switch_statement -> 'switch' · expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#316
loop_statement -> 'loop' · '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#317
for_statement -> 'for' · '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#318
while_statement -> 'while' · expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#319
func_call_statement -> callable · argument_expression_list : {')' ';'}
argument_expression_list -> · '(' argument_expression_list/0.1 ')' : {')' ';'}

#320
variable_statement -> variable_decl · '=' expression : {';'}
variable_statement -> variable_decl · : {';'}

#321
variable_statement -> 'let' · optionally_typed_ident '=' expression : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#322
variable_statement -> 'const' · optionally_typed_ident '=' expression : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#323
break_statement -> 'break' · : {';'}

#324
continue_statement -> 'continue' · : {';'}

#325
variable_updating_statement -> assignment_statement · : {')' ';'}

#326
variable_updating_statement -> increment_statement · : {')' ';'}

#327
variable_updating_statement -> decrement_statement · : {')' ';'}

#328
if_clause -> 'if' · expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#329
callable -> ident · : {'('}
core_lhs_expression -> ident · : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#330
assignment_statement -> lhs_expression · assignment_statement/0.1 expression : {')' ';'}
decrement_statement -> lhs_expression · '--' : {')' ';'}
increment_statement -> lhs_expression · '++' : {')' ';'}
_shift_left_assign -> · /\u200B_shift_left_assign/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right_assign -> · /\u200B_shift_right_assign/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> · '=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> · compound_assignment_operator : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '%=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '&=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '*=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '+=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '-=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '/=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '^=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '|=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · _shift_left_assign : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · _shift_right_assign : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#331
assignment_statement -> '_' · '=' expression : {')' ';'}

#332
lhs_expression -> core_lhs_expression · lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression/0.1 -> · component_or_swizzle_specifier : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#333
lhs_expression -> '*' · lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#334
lhs_expression -> '&' · lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#335
core_lhs_expression -> '(' · lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · '(' lhs_expression ')' : {')' '.' '['}
core_lhs_expression -> · ident : {')' '.' '['}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' '.' '['}
lhs_expression -> · '&' lhs_expression : {')'}
lhs_expression -> · '*' lhs_expression : {')'}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {')'}

#336
function_header -> 'fn' ident '(' · function_header/0.3 ')' function_header/0.5 : {'{'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.3 -> · param_list : {')'}
param -> · param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> · param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> · attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list -> · param param_list/0.1 param_list/0.2 : {')'}

#337
struct_body_decl -> '{' struct_member · struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.2 -> · struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> · struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> · ',' struct_member : {',' '}'}

#338
struct_member -> struct_member/0.0 · member_ident ':' type_specifier : {',' '}'}
member_ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':'}

#339
struct_member/0.0 -> struct_member/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#340
struct_member/0.0/0 -> attribute · struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#341
type_alias_decl -> 'alias' ident '=' type_specifier · : {';'}

#342
type_specifier -> ident · : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#343
type_specifier -> type_specifier_without_ident · : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#344
type_specifier_without_ident -> vec_prefix · _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#345
type_specifier_without_ident -> mat_prefix · _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#346
array_type_specifier -> 'array' · _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#347
global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 · : {';'}

#348
global_constant_decl/1.3 -> '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#349
global_constant_decl -> 'const' optionally_typed_ident '=' expression · : {';'}

#350
optionally_typed_ident/0.1 -> ':' type_specifier · : {';' '='}

#351
global_variable_decl/0.2 -> '=' expression · : {';'}

#352
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 · optionally_typed_ident : {';' '='}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' ';' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {';' '='}

#353
variable_decl/0.2 -> variable_qualifier · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#354
variable_qualifier -> _template_args_start · address_space variable_qualifier/0.2 _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
address_space -> · 'function' : {',' /\u200B_template_args_end/}
address_space -> · 'private' : {',' /\u200B_template_args_end/}
address_space -> · 'storage' : {',' /\u200B_template_args_end/}
address_space -> · 'uniform' : {',' /\u200B_template_args_end/}
address_space -> · 'workgroup' : {',' /\u200B_template_args_end/}

#355
variable_qualifier -> _template_args_start address_space · variable_qualifier/0.2 _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_qualifier/0.2 -> · ',' access_mode : {/\u200B_template_args_end/}

#356
address_space -> 'function' · : {',' /\u200B_template_args_end/}

#357
address_space -> 'private' · : {',' /\u200B_template_args_end/}

#358
address_space -> 'workgroup' · : {',' /\u200B_template_args_end/}

#359
address_space -> 'uniform' · : {',' /\u200B_template_args_end/}

#360
address_space -> 'storage' · : {',' /\u200B_template_args_end/}

#361
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident · : {';' '='}

#362
global_constant_decl/1.3 -> '=' expression · : {';'}

#363
array_type_specifier -> 'array' _disambiguate_template · _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#364
type_specifier_without_ident -> mat_prefix _disambiguate_template · _template_args_start type_specifier _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#365
type_specifier_without_ident -> vec_prefix _disambiguate_template · _template_args_start type_specifier _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#366
struct_member/0.0/0 -> attribute struct_member/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#367
struct_member -> struct_member/0.0 member_ident · ':' type_specifier : {',' '}'}

#368
struct_body_decl -> '{' struct_member struct_body_decl/0.2 · struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.3 -> · ',' : {'}'}

#369
struct_body_decl/0.2 -> struct_body_decl/0.2/0 · : {',' '}'}

#370
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 · struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> · struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> · ',' struct_member : {',' '}'}

#371
struct_body_decl/0.2/0/0.0 -> ',' · struct_member : {',' '}'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> · struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> · struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#372
function_header -> 'fn' ident '(' function_header/0.3 · ')' function_header/0.5 : {'{'}

#373
function_header/0.3 -> param_list · : {')'}

#374
param_list -> param · param_list/0.1 param_list/0.2 : {')'}
param_list/0.1 -> · param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> · param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> · ',' param : {')' ','}

#375
param -> param/0.0 · ident ':' type_specifier : {')' ','}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':'}

#376
param/0.0 -> param/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#377
param/0.0/0 -> attribute · param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> · attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#378
core_lhs_expression -> '(' lhs_expression · ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#379
core_lhs_expression -> ident · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#380
lhs_expression -> '&' lhs_expression · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#381
lhs_expression -> '*' lhs_expression · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#382
lhs_expression -> core_lhs_expression lhs_expression/0.1 · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#383
lhs_expression/0.1 -> component_or_swizzle_specifier · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#384
assignment_statement -> '_' '=' · expression : {')' ';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ';'}
expression -> · relational_expression : {')' ';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#385
assignment_statement -> lhs_expression assignment_statement/0.1 · expression : {')' ';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ';'}
expression -> · relational_expression : {')' ';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#386
increment_statement -> lhs_expression '++' · : {')' ';'}

#387
decrement_statement -> lhs_expression '--' · : {')' ';'}

#388
assignment_statement/0.1 -> '=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#389
assignment_statement/0.1 -> compound_assignment_operator · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#390
compound_assignment_operator -> '+=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#391
compound_assignment_operator -> '-=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#392
compound_assignment_operator -> '*=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#393
compound_assignment_operator -> '/=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#394
compound_assignment_operator -> '%=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#395
compound_assignment_operator -> '&=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#396
compound_assignment_operator -> '|=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#397
compound_assignment_operator -> '^=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#398
compound_assignment_operator -> _shift_right_assign · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#399
compound_assignment_operator -> _shift_left_assign · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#400
_shift_right_assign -> /\u200B_shift_right_assign/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#401
_shift_left_assign -> /\u200B_shift_left_assign/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#402
if_clause -> 'if' expression · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#403
variable_statement -> 'const' optionally_typed_ident · '=' expression : {';'}

#404
variable_statement -> 'let' optionally_typed_ident · '=' expression : {';'}

#405
variable_statement -> variable_decl '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#406
func_call_statement -> callable argument_expression_list · : {')' ';'}

#407
while_statement -> 'while' expression · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#408
for_statement -> 'for' '(' · for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_header -> · for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 : {')'}
for_header/0.0 -> · for_init : {';'}
for_init -> · func_call_statement : {';'}
for_init -> · variable_statement : {';'}
for_init -> · variable_updating_statement : {';'}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#409
loop_statement -> 'loop' '{' · loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.2 -> · loop_statement/0.2/0 : {'continuing' '}'}
loop_statement/0.2/0 -> · statement loop_statement/0.2/0 : {'continuing' '}'}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#410
switch_statement -> 'switch' expression · '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#411
if_statement -> if_clause if_statement/0.1 · if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause -> · 'else' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2 -> · else_clause : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#412
if_statement/0.1 -> if_statement/0.1/0 · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#413
if_statement/0.1/0 -> else_if_clause · if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> · 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1/0 -> · else_if_clause if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#414
else_if_clause -> 'else' · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#415
return_statement -> 'return' return_statement/0.1 · : {';'}

#416
return_statement/0.1 -> expression · : {';'}

#417
statement -> const_assert_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#418
statement -> variable_updating_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#419
statement -> 'discard' ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#420
statement -> continue_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#421
statement -> break_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#422
statement -> variable_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#423
statement -> func_call_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#424
statement -> return_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#425
compound_statement/0.1/0 -> statement compound_statement/0.1/0 · : {'}'}

#426
compound_statement -> '{' compound_statement/0.1 '}' · : {'&' '(' '*' ';' '@' '_' 'alias' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#427
texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start texel_format · ',' access_mode _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#428
texel_format -> 'rgba8unorm' · : {','}

#429
texel_format -> 'rgba8snorm' · : {','}

#430
texel_format -> 'rgba8uint' · : {','}

#431
texel_format -> 'rgba8sint' · : {','}

#432
texel_format -> 'rgba16uint' · : {','}

#433
texel_format -> 'rgba16sint' · : {','}

#434
texel_format -> 'rgba16float' · : {','}

#435
texel_format -> 'r32uint' · : {','}

#436
texel_format -> 'r32sint' · : {','}

#437
texel_format -> 'r32float' · : {','}

#438
texel_format -> 'rg32uint' · : {','}

#439
texel_format -> 'rg32sint' · : {','}

#440
texel_format -> 'rg32float' · : {','}

#441
texel_format -> 'rgba32uint' · : {','}

#442
texel_format -> 'rgba32sint' · : {','}

#443
texel_format -> 'rgba32float' · : {','}

#444
texel_format -> 'bgra8unorm' · : {','}

#445
texture_and_sampler_types -> multisampled_texture_type _disambiguate_template _template_args_start type_specifier · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#446
texture_and_sampler_types -> sampled_texture_type _disambiguate_template _template_args_start type_specifier · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#447
type_specifier_without_ident -> 'atomic' _disambiguate_template _template_args_start type_specifier · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#448
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space · ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#449
array_type_specifier -> 'array' _disambiguate_template _template_args_start type_specifier · array_type_specifier/0.4 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier/0.4 -> · ',' element_count_expression : {/\u200B_template_args_end/}

#450
type_specifier_without_ident -> mat_prefix _disambiguate_template _template_args_start type_specifier · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#451
type_specifier_without_ident -> vec_prefix _disambiguate_template _template_args_start type_specifier · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#452
expression_comma_list -> expression expression_comma_list/0.1 · expression_comma_list/0.2 : {')'}
expression_comma_list/0.2 -> · ',' : {')'}

#453
expression_comma_list/0.1 -> expression_comma_list/0.1/0 · : {')' ','}

#454
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 · expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> · expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> · ',' expression : {')' ','}

#455
expression_comma_list/0.1/0/0.0 -> ',' · expression : {')' ','}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#456
argument_expression_list -> '(' argument_expression_list/0.1 ')' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#457
primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier · _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'('}

#458
component_or_swizzle_specifier -> '[' expression ']' · component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/0.3 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#459
component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#460
component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#461
component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#462
component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#463
attribute -> '@' 'workgroup_size' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#464
attrib_end/0.0 -> ',' · : {')'}
attribute -> '@' 'workgroup_size' '(' expression ',' · expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression ',' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#465
attrib_end -> attrib_end/0.0 · ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#466
attribute -> '@' 'size' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#467
attrib_end/0.0 -> ',' · : {')'}

#468
attribute -> '@' 'location' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#469
attribute -> '@' 'interpolate' '(' interpolation_type_name attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#470
attrib_end/0.0 -> ',' · : {')'}
attribute -> '@' 'interpolate' '(' interpolation_type_name ',' · interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolation_sample_name -> · 'center' : {')' ','}
interpolation_sample_name -> · 'centroid' : {')' ','}
interpolation_sample_name -> · 'sample' : {')' ','}

#471
attribute -> '@' 'id' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#472
attribute -> '@' 'group' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#473
attribute -> '@' 'builtin' '(' builtin_value_name attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#474
attribute -> '@' 'binding' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#475
attribute -> '@' 'align' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#476
attribute -> '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#477
interpolation_sample_name -> 'center' · : {')' ','}

#478
interpolation_sample_name -> 'centroid' · : {')' ','}

#479
interpolation_sample_name -> 'sample' · : {')' ','}

#480
attrib_end -> attrib_end/0.0 ')' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#481
attribute -> '@' 'workgroup_size' '(' expression ',' expression · ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression ',' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#482
component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#483
component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#484
primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#485
_template_args_end -> /\u200B_template_args_end/ · : {'(' ')' ',' ';' '=' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_template_args_end/}

#486
expression_comma_list/0.1/0/0.0 -> ',' expression · : {')' ','}

#487
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 · : {')' ','}

#488
expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 · : {')'}

#489
expression_comma_list/0.2 -> ',' · : {')'}

#490
type_specifier_without_ident -> vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#491
type_specifier_without_ident -> mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#492
array_type_specifier -> 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#493
array_type_specifier/0.4 -> ',' · element_count_expression : {/\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'+' '-' /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'+' '-' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {/\u200B_template_args_end/}
bitwise_expression -> · binary_or_expression '|' unary_expression : {/\u200B_template_args_end/}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {/\u200B_template_args_end/}
bool_literal -> · 'false' : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
bool_literal -> · 'true' : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
element_count_expression -> · additive_expression : {/\u200B_template_args_end/}
element_count_expression -> · bitwise_expression : {/\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&' '(' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
literal -> · bool_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
literal -> · float_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
literal -> · int_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '*' '+' '-' '/' /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'%' '*' '+' '-' '/' /\u200B_template_args_end/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
primary_expression -> · call_expression : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
primary_expression -> · ident : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
primary_expression -> · literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#494
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space ',' · type_specifier type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {',' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {',' /\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {',' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {',' /\u200B_template_args_end/}
type_specifier -> · ident : {',' /\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#495
type_specifier_without_ident -> 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#496
texture_and_sampler_types -> sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#497
texture_and_sampler_types -> multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#498
texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start texel_format ',' · access_mode _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
access_mode -> · 'read' : {/\u200B_template_args_end/}
access_mode -> · 'read_write' : {/\u200B_template_args_end/}
access_mode -> · 'write' : {/\u200B_template_args_end/}

#499
else_if_clause -> 'else' 'if' · expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#500
if_statement/0.1/0 -> else_if_clause if_statement/0.1/0 · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#501
if_statement -> if_clause if_statement/0.1 if_statement/0.2 · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#502
if_statement/0.2 -> else_clause · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#503
else_clause -> 'else' · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#504
switch_statement -> 'switch' expression '{' · switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
case_clause -> · 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> · 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body -> · case_clause : {'case' 'default' '}'}
switch_body -> · default_alone_clause : {'case' 'default' '}'}
switch_statement/0.3 -> · switch_statement/0.3/0 : {'}'}
switch_statement/0.3/0 -> · switch_body switch_statement/0.3/0 : {'}'}

#505
loop_statement -> 'loop' '{' loop_statement/0.2 · loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
continuing_statement -> · 'continuing' continuing_compound_statement : {'}'}
loop_statement/0.3 -> · continuing_statement : {'}'}

#506
loop_statement/0.2 -> loop_statement/0.2/0 · : {'continuing' '}'}

#507
loop_statement/0.2/0 -> statement · loop_statement/0.2/0 : {'continuing' '}'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.2/0 -> · statement loop_statement/0.2/0 : {'continuing' '}'}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#508
for_statement -> 'for' '(' for_header · ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#509
for_header -> for_header/0.0 · ';' for_header/0.2 ';' for_header/0.4 : {')'}

#510
for_header/0.0 -> for_init · : {';'}

#511
for_init -> variable_statement · : {';'}

#512
for_init -> variable_updating_statement · : {';'}

#513
for_init -> func_call_statement · : {';'}

#514
while_statement -> 'while' expression compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#515
variable_statement -> variable_decl '=' expression · : {';'}

#516
variable_statement -> 'let' optionally_typed_ident '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#517
variable_statement -> 'const' optionally_typed_ident '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#518
if_clause -> 'if' expression compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#519
assignment_statement -> lhs_expression assignment_statement/0.1 expression · : {')' ';'}

#520
assignment_statement -> '_' '=' expression · : {')' ';'}

#521
core_lhs_expression -> '(' lhs_expression ')' · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#522
param/0.0/0 -> attribute param/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#523
param -> param/0.0 ident · ':' type_specifier : {')' ','}

#524
param_list -> param param_list/0.1 · param_list/0.2 : {')'}
param_list/0.2 -> · ',' : {')'}

#525
param_list/0.1 -> param_list/0.1/0 · : {')' ','}

#526
param_list/0.1/0 -> param_list/0.1/0/0.0 · param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> · param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> · ',' param : {')' ','}

#527
param_list/0.1/0/0.0 -> ',' · param : {')' ','}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param -> · param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> · param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> · attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#528
function_header -> 'fn' ident '(' function_header/0.3 ')' · function_header/0.5 : {'{'}
function_header/0.5 -> · '->' function_header/0.5/0.1 type_specifier : {'{'}

#529
struct_body_decl/0.2/0/0.0 -> ',' struct_member · : {',' '}'}

#530
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 · : {',' '}'}

#531
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 · '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#532
struct_body_decl/0.3 -> ',' · : {'}'}

#533
struct_member -> struct_member/0.0 member_ident ':' · type_specifier : {',' '}'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {',' '}'}
depth_texture_type -> · 'texture_depth_2d' : {',' '}'}
depth_texture_type -> · 'texture_depth_2d_array' : {',' '}'}
depth_texture_type -> · 'texture_depth_cube' : {',' '}'}
depth_texture_type -> · 'texture_depth_cube_array' : {',' '}'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {',' '}'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' '}'}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {',' '}'}
sampler_type -> · 'sampler_comparison' : {',' '}'}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {',' '}'}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' '}'}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' '}'}
texture_and_sampler_types -> · sampler_type : {',' '}'}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {',' '}'}
type_specifier -> · ident : {',' '}'}
type_specifier -> · type_specifier_without_ident : {',' '}'}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {',' '}'}
type_specifier_without_ident -> · 'bool' : {',' '}'}
type_specifier_without_ident -> · 'f16' : {',' '}'}
type_specifier_without_ident -> · 'f32' : {',' '}'}
type_specifier_without_ident -> · 'i32' : {',' '}'}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {',' '}'}
type_specifier_without_ident -> · 'u32' : {',' '}'}
type_specifier_without_ident -> · array_type_specifier : {',' '}'}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' '}'}
type_specifier_without_ident -> · texture_and_sampler_types : {',' '}'}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' '}'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#534
variable_qualifier -> _template_args_start address_space variable_qualifier/0.2 · _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
_template_args_end -> · /\u200B_template_args_end/ : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#535
variable_qualifier/0.2 -> ',' · access_mode : {/\u200B_template_args_end/}
access_mode -> · 'read' : {/\u200B_template_args_end/}
access_mode -> · 'read_write' : {/\u200B_template_args_end/}
access_mode -> · 'write' : {/\u200B_template_args_end/}

#536
variable_qualifier/0.2 -> ',' access_mode · : {/\u200B_template_args_end/}

#537
access_mode -> 'read' · : {/\u200B_template_args_end/}

#538
access_mode -> 'write' · : {/\u200B_template_args_end/}

#539
access_mode -> 'read_write' · : {/\u200B_template_args_end/}

#540
variable_qualifier -> _template_args_start address_space variable_qualifier/0.2 _template_args_end · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#541
struct_member -> struct_member/0.0 member_ident ':' type_specifier · : {',' '}'}

#542
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#543
function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 · : {'{'}

#544
function_header/0.5 -> '->' · function_header/0.5/0.1 type_specifier : {'{'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1 -> · function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> · attribute function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#545
param_list/0.1/0/0.0 -> ',' param · : {')' ','}

#546
param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 · : {')' ','}

#547
param_list -> param param_list/0.1 param_list/0.2 · : {')'}

#548
param_list/0.2 -> ',' · : {')'}

#549
param -> param/0.0 ident ':' · type_specifier : {')' ','}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {')' ','}
depth_texture_type -> · 'texture_depth_2d' : {')' ','}
depth_texture_type -> · 'texture_depth_2d_array' : {')' ','}
depth_texture_type -> · 'texture_depth_cube' : {')' ','}
depth_texture_type -> · 'texture_depth_cube_array' : {')' ','}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {')' ','}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' ','}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {')' ','}
sampler_type -> · 'sampler_comparison' : {')' ','}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {')' ','}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ','}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ','}
texture_and_sampler_types -> · sampler_type : {')' ','}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {')' ','}
type_specifier -> · ident : {')' ','}
type_specifier -> · type_specifier_without_ident : {')' ','}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ','}
type_specifier_without_ident -> · 'bool' : {')' ','}
type_specifier_without_ident -> · 'f16' : {')' ','}
type_specifier_without_ident -> · 'f32' : {')' ','}
type_specifier_without_ident -> · 'i32' : {')' ','}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {')' ','}
type_specifier_without_ident -> · 'u32' : {')' ','}
type_specifier_without_ident -> · array_type_specifier : {')' ','}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ','}
type_specifier_without_ident -> · texture_and_sampler_types : {')' ','}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ','}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#550
variable_statement -> 'const' optionally_typed_ident '=' expression · : {';'}

#551
variable_statement -> 'let' optionally_typed_ident '=' expression · : {';'}

#552
for_header -> for_header/0.0 ';' · for_header/0.2 ';' for_header/0.4 : {')'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
for_header/0.2 -> · expression : {';'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#553
for_statement -> 'for' '(' for_header ')' · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#554
loop_statement/0.2/0 -> statement loop_statement/0.2/0 · : {'continuing' '}'}

#555
loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 · '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#556
loop_statement/0.3 -> continuing_statement · : {'}'}

#557
continuing_statement -> 'continuing' · continuing_compound_statement : {'}'}
continuing_compound_statement -> · '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' : {'}'}

#558
switch_statement -> 'switch' expression '{' switch_statement/0.3 · '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#559
switch_statement/0.3 -> switch_statement/0.3/0 · : {'}'}

#560
switch_statement/0.3/0 -> switch_body · switch_statement/0.3/0 : {'}'}
case_clause -> · 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> · 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body -> · case_clause : {'case' 'default' '}'}
switch_body -> · default_alone_clause : {'case' 'default' '}'}
switch_statement/0.3/0 -> · switch_body switch_statement/0.3/0 : {'}'}

#561
switch_body -> case_clause · : {'case' 'default' '}'}

#562
switch_body -> default_alone_clause · : {'case' 'default' '}'}

#563
case_clause -> 'case' · case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {',' ':' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
case_selector -> · 'default' : {',' ':' '{'}
case_selector -> · expression : {',' ':' '{'}
case_selectors -> · case_selector case_selectors/0.1 case_selectors/0.2 : {':' '{'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {',' ':' '{'}
expression -> · relational_expression : {',' ':' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {',' ':' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {',' ':' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#564
default_alone_clause -> 'default' · default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
default_alone_clause/0.1 -> · ':' : {'{'}

#565
else_clause -> 'else' compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#566
else_if_clause -> 'else' 'if' expression · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#567
texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#568
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier · type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
type_specifier_without_ident/7.6 -> · ',' access_mode : {/\u200B_template_args_end/}

#569
array_type_specifier/0.4 -> ',' element_count_expression · : {/\u200B_template_args_end/}

#570
additive_expression -> additive_expression · additive_operator multiplicative_expression : {'+' '-' /\u200B_template_args_end/}
element_count_expression -> additive_expression · : {/\u200B_template_args_end/}
additive_operator -> · '+' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_operator -> · '-' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#571
element_count_expression -> bitwise_expression · : {/\u200B_template_args_end/}

#572
binary_and_expression -> unary_expression · : {'&'}
binary_or_expression -> unary_expression · : {'|'}
binary_xor_expression -> unary_expression · : {'^'}
multiplicative_expression -> unary_expression · : {'%' '*' '+' '-' '/' /\u200B_template_args_end/}

#573
array_type_specifier -> 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#574
primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#575
attribute -> '@' 'workgroup_size' '(' expression ',' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#576
attrib_end/0.0 -> ',' · : {')'}
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#577
attribute -> '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#578
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#579
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#580
type_specifier_without_ident/7.6 -> ',' · access_mode : {/\u200B_template_args_end/}
access_mode -> · 'read' : {/\u200B_template_args_end/}
access_mode -> · 'read_write' : {/\u200B_template_args_end/}
access_mode -> · 'write' : {/\u200B_template_args_end/}

#581
texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#582
else_if_clause -> 'else' 'if' expression compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#583
default_alone_clause -> 'default' default_alone_clause/0.1 · compound_statement : {'case' 'default' '}'}
compound_statement -> · '{' compound_statement/0.1 '}' : {'case' 'default' '}'}

#584
default_alone_clause/0.1 -> ':' · : {'{'}

#585
case_clause -> 'case' case_selectors · case_clause/0.2 compound_statement : {'case' 'default' '}'}
case_clause/0.2 -> · ':' : {'{'}

#586
case_selectors -> case_selector · case_selectors/0.1 case_selectors/0.2 : {':' '{'}
case_selectors/0.1 -> · case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0 -> · case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0/0.0 -> · ',' case_selector : {',' ':' '{'}

#587
case_selector -> 'default' · : {',' ':' '{'}

#588
case_selector -> expression · : {',' ':' '{'}

#589
switch_statement/0.3/0 -> switch_body switch_statement/0.3/0 · : {'}'}

#590
switch_statement -> 'switch' expression '{' switch_statement/0.3 '}' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#591
continuing_statement -> 'continuing' continuing_compound_statement · : {'}'}

#592
continuing_compound_statement -> '{' · continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' : {'}'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
continuing_compound_statement/0.1 -> · continuing_compound_statement/0.1/0 : {'break' '}'}
continuing_compound_statement/0.1/0 -> · statement continuing_compound_statement/0.1/0 : {'break' '}'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#593
loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#594
for_statement -> 'for' '(' for_header ')' compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#595
for_header -> for_header/0.0 ';' for_header/0.2 · ';' for_header/0.4 : {')'}

#596
for_header/0.2 -> expression · : {';'}

#597
param -> param/0.0 ident ':' type_specifier · : {')' ','}

#598
function_header/0.5 -> '->' function_header/0.5/0.1 · type_specifier : {'{'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'{'}
depth_texture_type -> · 'texture_depth_2d' : {'{'}
depth_texture_type -> · 'texture_depth_2d_array' : {'{'}
depth_texture_type -> · 'texture_depth_cube' : {'{'}
depth_texture_type -> · 'texture_depth_cube_array' : {'{'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'{'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'{'}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'{'}
sampler_type -> · 'sampler_comparison' : {'{'}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'{'}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'{'}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'{'}
texture_and_sampler_types -> · sampler_type : {'{'}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'{'}
type_specifier -> · ident : {'{'}
type_specifier -> · type_specifier_without_ident : {'{'}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'{'}
type_specifier_without_ident -> · 'bool' : {'{'}
type_specifier_without_ident -> · 'f16' : {'{'}
type_specifier_without_ident -> · 'f32' : {'{'}
type_specifier_without_ident -> · 'i32' : {'{'}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'{'}
type_specifier_without_ident -> · 'u32' : {'{'}
type_specifier_without_ident -> · array_type_specifier : {'{'}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'{'}
type_specifier_without_ident -> · texture_and_sampler_types : {'{'}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'{'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#599
function_header/0.5/0.1 -> function_header/0.5/0.1/0 · : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#600
function_header/0.5/0.1/0 -> attribute · function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> · attribute function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#601
function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 · : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#602
function_header/0.5 -> '->' function_header/0.5/0.1 type_specifier · : {'{'}

#603
for_header -> for_header/0.0 ';' for_header/0.2 ';' · for_header/0.4 : {')'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {')'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {')'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {')'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_header/0.4 -> · for_update : {')'}
for_update -> · func_call_statement : {')'}
for_update -> · variable_updating_statement : {')'}
func_call_statement -> · callable argument_expression_list : {')'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
increment_statement -> · lhs_expression '++' : {')'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_updating_statement -> · assignment_statement : {')'}
variable_updating_statement -> · decrement_statement : {')'}
variable_updating_statement -> · increment_statement : {')'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#604
continuing_compound_statement -> '{' continuing_compound_statement/0.1 · continuing_compound_statement/0.2 '}' : {'}'}
break_if_statement -> · 'break' 'if' expression ';' : {'}'}
continuing_compound_statement/0.2 -> · break_if_statement : {'}'}

#605
continuing_compound_statement/0.1 -> continuing_compound_statement/0.1/0 · : {'break' '}'}

#606
continuing_compound_statement/0.1/0 -> statement · continuing_compound_statement/0.1/0 : {'break' '}'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
continuing_compound_statement/0.1/0 -> · statement continuing_compound_statement/0.1/0 : {'break' '}'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#607
case_selectors -> case_selector case_selectors/0.1 · case_selectors/0.2 : {':' '{'}
case_selectors/0.2 -> · ',' : {':' '{'}

#608
case_selectors/0.1 -> case_selectors/0.1/0 · : {',' ':' '{'}

#609
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 · case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0 -> · case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0/0.0 -> · ',' case_selector : {',' ':' '{'}

#610
case_selectors/0.1/0/0.0 -> ',' · case_selector : {',' ':' '{'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {',' ':' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
case_selector -> · 'default' : {',' ':' '{'}
case_selector -> · expression : {',' ':' '{'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {',' ':' '{'}
expression -> · relational_expression : {',' ':' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {',' ':' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {',' ':' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#611
case_clause -> 'case' case_selectors case_clause/0.2 · compound_statement : {'case' 'default' '}'}
compound_statement -> · '{' compound_statement/0.1 '}' : {'case' 'default' '}'}

#612
case_clause/0.2 -> ':' · : {'{'}

#613
default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement · : {'case' 'default' '}'}

#614
type_specifier_without_ident/7.6 -> ',' access_mode · : {/\u200B_template_args_end/}

#615
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#616
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#617
case_clause -> 'case' case_selectors case_clause/0.2 compound_statement · : {'case' 'default' '}'}

#618
case_selectors/0.1/0/0.0 -> ',' case_selector · : {',' ':' '{'}

#619
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 · : {',' ':' '{'}

#620
case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 · : {':' '{'}

#621
case_selectors/0.2 -> ',' · : {':' '{'}

#622
continuing_compound_statement/0.1/0 -> statement continuing_compound_statement/0.1/0 · : {'break' '}'}

#623
continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 · '}' : {'}'}

#624
continuing_compound_statement/0.2 -> break_if_statement · : {'}'}

#625
break_if_statement -> 'break' · 'if' expression ';' : {'}'}

#626
for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 · : {')'}

#627
for_header/0.4 -> for_update · : {')'}

#628
for_update -> variable_updating_statement · : {')'}

#629
for_update -> func_call_statement · : {')'}

#630
break_if_statement -> 'break' 'if' · expression ';' : {'}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#631
continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' · : {'}'}

#632
break_if_statement -> 'break' 'if' expression · ';' : {'}'}

#633
break_if_statement -> 'break' 'if' expression ';' · : {'}'}


=Reductions:
r#0 translation_unit/0.0 -> translation_unit/0.0/0 ·
r#1 extension_name -> 'f16' ·
r#2 translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 ·
r#3 translation_unit -> translation_unit/0.0 translation_unit/0.1 ·
r#4 translation_unit/0.1 -> translation_unit/0.1/0 ·
r#5 global_decl -> ';' ·
r#6 global_decl -> struct_decl ·
r#7 global_decl -> function_decl ·
r#8 global_variable_decl/0.0 -> global_variable_decl/0.0/0 ·
r#9 global_constant_decl/1.0 -> global_constant_decl/1.0/0 ·
r#10 function_decl/0.0 -> function_decl/0.0/0 ·
r#11 attribute -> '@' 'const' ·
r#12 attribute -> '@' 'invariant' ·
r#13 attribute -> '@' 'vertex' ·
r#14 attribute -> '@' 'fragment' ·
r#15 attribute -> '@' 'compute' ·
r#16 global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 ·
r#17 global_constant_decl/1.0/0 -> attribute global_constant_decl/1.0/0 ·
r#18 function_decl/0.0/0 -> attribute function_decl/0.0/0 ·
r#19 const_assert_statement -> 'const_assert' expression ·
r#20 expression -> relational_expression ·
r#21 short_circuit_or_expression -> relational_expression ·
r#22 short_circuit_and_expression -> relational_expression ·
r#23 expression -> bitwise_expression ·
r#24 relational_expression -> shift_expression ·
r#25 shift_expression -> additive_expression ·
r#26 binary_and_expression -> unary_expression ·
r#27 binary_or_expression -> unary_expression ·
r#28 binary_xor_expression -> unary_expression ·
r#29 multiplicative_expression -> unary_expression ·
r#30 additive_expression -> multiplicative_expression ·
r#31 unary_expression -> singular_expression ·
r#32 primary_expression -> ident ·
r#33 callable -> ident ·
r#34 primary_expression -> call_expression ·
r#35 primary_expression -> literal ·
r#36 primary_expression -> paren_expression ·
r#37 ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#38 literal -> int_literal ·
r#39 literal -> float_literal ·
r#40 literal -> bool_literal ·
r#41 callable -> type_specifier_without_ident ·
r#42 int_literal -> decimal_int_literal ·
r#43 int_literal -> hex_int_literal ·
r#44 float_literal -> decimal_float_literal ·
r#45 float_literal -> hex_float_literal ·
r#46 bool_literal -> 'true' ·
r#47 bool_literal -> 'false' ·
r#48 type_specifier_without_ident -> 'bool' ·
r#49 type_specifier_without_ident -> 'f32' ·
r#50 type_specifier_without_ident -> 'f16' ·
r#51 type_specifier_without_ident -> 'i32' ·
r#52 type_specifier_without_ident -> 'u32' ·
r#53 type_specifier_without_ident -> array_type_specifier ·
r#54 type_specifier_without_ident -> texture_and_sampler_types ·
r#55 vec_prefix -> 'vec2' ·
r#56 vec_prefix -> 'vec3' ·
r#57 vec_prefix -> 'vec4' ·
r#58 mat_prefix -> 'mat2x2' ·
r#59 mat_prefix -> 'mat2x3' ·
r#60 mat_prefix -> 'mat2x4' ·
r#61 mat_prefix -> 'mat3x2' ·
r#62 mat_prefix -> 'mat3x3' ·
r#63 mat_prefix -> 'mat3x4' ·
r#64 mat_prefix -> 'mat4x2' ·
r#65 mat_prefix -> 'mat4x3' ·
r#66 mat_prefix -> 'mat4x4' ·
r#67 decimal_int_literal -> /0[iu]?/ ·
r#68 decimal_int_literal -> /[1-9][0-9]*[iu]?/ ·
r#69 hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ ·
r#70 decimal_float_literal -> /0[fh]/ ·
r#71 decimal_float_literal -> /[1-9][0-9]*[fh]/ ·
r#72 decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ ·
r#73 decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ ·
r#74 decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ ·
r#75 hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ ·
r#76 hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ ·
r#77 hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ ·
r#78 texture_and_sampler_types -> sampler_type ·
r#79 texture_and_sampler_types -> depth_texture_type ·
r#80 sampler_type -> 'sampler' ·
r#81 sampler_type -> 'sampler_comparison' ·
r#82 depth_texture_type -> 'texture_depth_2d' ·
r#83 depth_texture_type -> 'texture_depth_2d_array' ·
r#84 depth_texture_type -> 'texture_depth_cube' ·
r#85 depth_texture_type -> 'texture_depth_cube_array' ·
r#86 depth_texture_type -> 'texture_depth_multisampled_2d' ·
r#87 sampled_texture_type -> 'texture_1d' ·
r#88 sampled_texture_type -> 'texture_2d' ·
r#89 sampled_texture_type -> 'texture_2d_array' ·
r#90 sampled_texture_type -> 'texture_3d' ·
r#91 sampled_texture_type -> 'texture_cube' ·
r#92 sampled_texture_type -> 'texture_cube_array' ·
r#93 multisampled_texture_type -> 'texture_multisampled_2d' ·
r#94 storage_texture_type -> 'texture_storage_1d' ·
r#95 storage_texture_type -> 'texture_storage_2d' ·
r#96 storage_texture_type -> 'texture_storage_2d_array' ·
r#97 storage_texture_type -> 'texture_storage_3d' ·
r#98 global_decl -> const_assert_statement ';' ·
r#99 global_decl -> type_alias_decl ';' ·
r#100 global_decl -> global_constant_decl ';' ·
r#101 global_decl -> global_variable_decl ';' ·
r#102 translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 ·
r#103 global_directive -> 'enable' extension_name ';' ·
r#104 _disambiguate_template -> /\u200B_disambiguate_template/ ·
r#105 global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 ·
r#106 optionally_typed_ident -> ident optionally_typed_ident/0.1 ·
r#107 struct_decl -> 'struct' ident struct_body_decl ·
r#108 function_decl -> function_decl/0.0 function_header compound_statement ·
r#109 callable -> 'array' _disambiguate_template ·
r#110 callable -> mat_prefix _disambiguate_template ·
r#111 callable -> vec_prefix _disambiguate_template ·
r#112 call_expression -> callable argument_expression_list ·
r#113 singular_expression -> primary_expression singular_expression/0.1 ·
r#114 singular_expression/0.1 -> component_or_swizzle_specifier ·
r#115 unary_expression -> '&' unary_expression ·
r#116 unary_expression -> '*' unary_expression ·
r#117 unary_expression -> '~' unary_expression ·
r#118 unary_expression -> '!' unary_expression ·
r#119 unary_expression -> '-' unary_expression ·
r#120 multiplicative_operator -> '*' ·
r#121 multiplicative_operator -> '/' ·
r#122 multiplicative_operator -> '%' ·
r#123 _shift_left -> /\u200B_shift_left/ ·
r#124 _shift_right -> /\u200B_shift_right/ ·
r#125 additive_operator -> '+' ·
r#126 additive_operator -> '-' ·
r#127 _less_than -> /\u200B_less_than/ ·
r#128 _greater_than -> /\u200B_greater_than/ ·
r#129 _less_than_equal -> /\u200B_less_than_equal/ ·
r#130 _greater_than_equal -> /\u200B_greater_than_equal/ ·
r#131 builtin_value_name -> 'vertex_index' ·
r#132 builtin_value_name -> 'instance_index' ·
r#133 builtin_value_name -> 'position' ·
r#134 builtin_value_name -> 'front_facing' ·
r#135 builtin_value_name -> 'frag_depth' ·
r#136 builtin_value_name -> 'local_invocation_id' ·
r#137 builtin_value_name -> 'local_invocation_index' ·
r#138 builtin_value_name -> 'global_invocation_id' ·
r#139 builtin_value_name -> 'workgroup_id' ·
r#140 builtin_value_name -> 'num_workgroups' ·
r#141 builtin_value_name -> 'sample_index' ·
r#142 builtin_value_name -> 'sample_mask' ·
r#143 interpolation_type_name -> 'perspective' ·
r#144 interpolation_type_name -> 'linear' ·
r#145 interpolation_type_name -> 'flat' ·
r#146 expression -> short_circuit_or_expression '||' relational_expression ·
r#147 short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression ·
r#148 expression -> short_circuit_and_expression '&&' relational_expression ·
r#149 short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression ·
r#150 relational_expression -> shift_expression '!=' shift_expression ·
r#151 relational_expression -> shift_expression '==' shift_expression ·
r#152 relational_expression -> shift_expression _greater_than_equal shift_expression ·
r#153 relational_expression -> shift_expression _less_than_equal shift_expression ·
r#154 relational_expression -> shift_expression _greater_than shift_expression ·
r#155 relational_expression -> shift_expression _less_than shift_expression ·
r#156 bitwise_expression -> binary_and_expression '&' unary_expression ·
r#157 binary_and_expression -> binary_and_expression '&' unary_expression ·
r#158 bitwise_expression -> binary_or_expression '|' unary_expression ·
r#159 binary_or_expression -> binary_or_expression '|' unary_expression ·
r#160 bitwise_expression -> binary_xor_expression '^' unary_expression ·
r#161 binary_xor_expression -> binary_xor_expression '^' unary_expression ·
r#162 additive_expression -> additive_expression additive_operator multiplicative_expression ·
r#163 shift_expression -> unary_expression _shift_right unary_expression ·
r#164 shift_expression -> unary_expression _shift_left unary_expression ·
r#165 multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression ·
r#166 member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#167 swizzle_name -> '/[rgba]/' ·
r#168 swizzle_name -> '/[rgba][rgba]/' ·
r#169 swizzle_name -> '/[rgba][rgba][rgba]/' ·
r#170 swizzle_name -> '/[rgba][rgba][rgba][rgba]/' ·
r#171 swizzle_name -> '/[xyzw]/' ·
r#172 swizzle_name -> '/[xyzw][xyzw]/' ·
r#173 swizzle_name -> '/[xyzw][xyzw][xyzw]/' ·
r#174 swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' ·
r#175 _template_args_start -> /\u200B_template_args_start/ ·
r#176 argument_expression_list/0.1 -> expression_comma_list ·
r#177 paren_expression -> '(' expression ')' ·
r#178 compound_statement/0.1 -> compound_statement/0.1/0 ·
r#179 statement -> ';' ·
r#180 statement -> if_statement ·
r#181 statement -> switch_statement ·
r#182 statement -> loop_statement ·
r#183 statement -> for_statement ·
r#184 statement -> while_statement ·
r#185 statement -> compound_statement ·
r#186 variable_statement -> variable_decl ·
r#187 break_statement -> 'break' ·
r#188 continue_statement -> 'continue' ·
r#189 variable_updating_statement -> assignment_statement ·
r#190 variable_updating_statement -> increment_statement ·
r#191 variable_updating_statement -> decrement_statement ·
r#192 core_lhs_expression -> ident ·
r#193 struct_member/0.0 -> struct_member/0.0/0 ·
r#194 type_alias_decl -> 'alias' ident '=' type_specifier ·
r#195 type_specifier -> ident ·
r#196 type_specifier -> type_specifier_without_ident ·
r#197 global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 ·
r#198 global_constant_decl -> 'const' optionally_typed_ident '=' expression ·
r#199 optionally_typed_ident/0.1 -> ':' type_specifier ·
r#200 global_variable_decl/0.2 -> '=' expression ·
r#201 variable_decl/0.2 -> variable_qualifier ·
r#202 address_space -> 'function' ·
r#203 address_space -> 'private' ·
r#204 address_space -> 'workgroup' ·
r#205 address_space -> 'uniform' ·
r#206 address_space -> 'storage' ·
r#207 variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident ·
r#208 global_constant_decl/1.3 -> '=' expression ·
r#209 struct_member/0.0/0 -> attribute struct_member/0.0/0 ·
r#210 struct_body_decl/0.2 -> struct_body_decl/0.2/0 ·
r#211 function_header/0.3 -> param_list ·
r#212 param/0.0 -> param/0.0/0 ·
r#213 lhs_expression -> '&' lhs_expression ·
r#214 lhs_expression -> '*' lhs_expression ·
r#215 lhs_expression -> core_lhs_expression lhs_expression/0.1 ·
r#216 lhs_expression/0.1 -> component_or_swizzle_specifier ·
r#217 increment_statement -> lhs_expression '++' ·
r#218 decrement_statement -> lhs_expression '--' ·
r#219 assignment_statement/0.1 -> '=' ·
r#220 assignment_statement/0.1 -> compound_assignment_operator ·
r#221 compound_assignment_operator -> '+=' ·
r#222 compound_assignment_operator -> '-=' ·
r#223 compound_assignment_operator -> '*=' ·
r#224 compound_assignment_operator -> '/=' ·
r#225 compound_assignment_operator -> '%=' ·
r#226 compound_assignment_operator -> '&=' ·
r#227 compound_assignment_operator -> '|=' ·
r#228 compound_assignment_operator -> '^=' ·
r#229 compound_assignment_operator -> _shift_right_assign ·
r#230 compound_assignment_operator -> _shift_left_assign ·
r#231 _shift_right_assign -> /\u200B_shift_right_assign/ ·
r#232 _shift_left_assign -> /\u200B_shift_left_assign/ ·
r#233 func_call_statement -> callable argument_expression_list ·
r#234 if_statement/0.1 -> if_statement/0.1/0 ·
r#235 return_statement -> 'return' return_statement/0.1 ·
r#236 return_statement/0.1 -> expression ·
r#237 statement -> const_assert_statement ';' ·
r#238 statement -> variable_updating_statement ';' ·
r#239 statement -> 'discard' ';' ·
r#240 statement -> continue_statement ';' ·
r#241 statement -> break_statement ';' ·
r#242 statement -> variable_statement ';' ·
r#243 statement -> func_call_statement ';' ·
r#244 statement -> return_statement ';' ·
r#245 compound_statement/0.1/0 -> statement compound_statement/0.1/0 ·
r#246 compound_statement -> '{' compound_statement/0.1 '}' ·
r#247 texel_format -> 'rgba8unorm' ·
r#248 texel_format -> 'rgba8snorm' ·
r#249 texel_format -> 'rgba8uint' ·
r#250 texel_format -> 'rgba8sint' ·
r#251 texel_format -> 'rgba16uint' ·
r#252 texel_format -> 'rgba16sint' ·
r#253 texel_format -> 'rgba16float' ·
r#254 texel_format -> 'r32uint' ·
r#255 texel_format -> 'r32sint' ·
r#256 texel_format -> 'r32float' ·
r#257 texel_format -> 'rg32uint' ·
r#258 texel_format -> 'rg32sint' ·
r#259 texel_format -> 'rg32float' ·
r#260 texel_format -> 'rgba32uint' ·
r#261 texel_format -> 'rgba32sint' ·
r#262 texel_format -> 'rgba32float' ·
r#263 texel_format -> 'bgra8unorm' ·
r#264 expression_comma_list/0.1 -> expression_comma_list/0.1/0 ·
r#265 argument_expression_list -> '(' argument_expression_list/0.1 ')' ·
r#266 component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 ·
r#267 component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier ·
r#268 component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 ·
r#269 component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier ·
r#270 attribute -> '@' 'workgroup_size' '(' expression attrib_end ·
r#271 attrib_end/0.0 -> ',' ·
r#272 attribute -> '@' 'size' '(' expression attrib_end ·
r#273 attribute -> '@' 'location' '(' expression attrib_end ·
r#274 attribute -> '@' 'interpolate' '(' interpolation_type_name attrib_end ·
r#275 attribute -> '@' 'id' '(' expression attrib_end ·
r#276 attribute -> '@' 'group' '(' expression attrib_end ·
r#277 attribute -> '@' 'builtin' '(' builtin_value_name attrib_end ·
r#278 attribute -> '@' 'binding' '(' expression attrib_end ·
r#279 attribute -> '@' 'align' '(' expression attrib_end ·
r#280 interpolation_sample_name -> 'center' ·
r#281 interpolation_sample_name -> 'centroid' ·
r#282 interpolation_sample_name -> 'sample' ·
r#283 attrib_end -> attrib_end/0.0 ')' ·
r#284 component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 ·
r#285 component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier ·
r#286 _template_args_end -> /\u200B_template_args_end/ ·
r#287 expression_comma_list/0.1/0/0.0 -> ',' expression ·
r#288 expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 ·
r#289 expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 ·
r#290 expression_comma_list/0.2 -> ',' ·
r#291 type_specifier_without_ident -> vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end ·
r#292 type_specifier_without_ident -> mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end ·
r#293 type_specifier_without_ident -> 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end ·
r#294 texture_and_sampler_types -> sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end ·
r#295 texture_and_sampler_types -> multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end ·
r#296 if_statement/0.1/0 -> else_if_clause if_statement/0.1/0 ·
r#297 if_statement -> if_clause if_statement/0.1 if_statement/0.2 ·
r#298 if_statement/0.2 -> else_clause ·
r#299 loop_statement/0.2 -> loop_statement/0.2/0 ·
r#300 for_header/0.0 -> for_init ·
r#301 for_init -> variable_statement ·
r#302 for_init -> variable_updating_statement ·
r#303 for_init -> func_call_statement ·
r#304 while_statement -> 'while' expression compound_statement ·
r#305 variable_statement -> variable_decl '=' expression ·
r#306 if_clause -> 'if' expression compound_statement ·
r#307 assignment_statement -> lhs_expression assignment_statement/0.1 expression ·
r#308 assignment_statement -> '_' '=' expression ·
r#309 core_lhs_expression -> '(' lhs_expression ')' ·
r#310 param/0.0/0 -> attribute param/0.0/0 ·
r#311 param_list/0.1 -> param_list/0.1/0 ·
r#312 struct_body_decl/0.2/0/0.0 -> ',' struct_member ·
r#313 struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 ·
r#314 struct_body_decl/0.3 -> ',' ·
r#315 variable_qualifier/0.2 -> ',' access_mode ·
r#316 access_mode -> 'read' ·
r#317 access_mode -> 'write' ·
r#318 access_mode -> 'read_write' ·
r#319 variable_qualifier -> _template_args_start address_space variable_qualifier/0.2 _template_args_end ·
r#320 struct_member -> struct_member/0.0 member_ident ':' type_specifier ·
r#321 struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' ·
r#322 function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 ·
r#323 param_list/0.1/0/0.0 -> ',' param ·
r#324 param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 ·
r#325 param_list -> param param_list/0.1 param_list/0.2 ·
r#326 param_list/0.2 -> ',' ·
r#327 variable_statement -> 'const' optionally_typed_ident '=' expression ·
r#328 variable_statement -> 'let' optionally_typed_ident '=' expression ·
r#329 loop_statement/0.2/0 -> statement loop_statement/0.2/0 ·
r#330 loop_statement/0.3 -> continuing_statement ·
r#331 switch_statement/0.3 -> switch_statement/0.3/0 ·
r#332 switch_body -> case_clause ·
r#333 switch_body -> default_alone_clause ·
r#334 else_clause -> 'else' compound_statement ·
r#335 array_type_specifier/0.4 -> ',' element_count_expression ·
r#336 element_count_expression -> additive_expression ·
r#337 element_count_expression -> bitwise_expression ·
r#338 array_type_specifier -> 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end ·
r#339 primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression ·
r#340 attribute -> '@' 'workgroup_size' '(' expression ',' expression attrib_end ·
r#341 attribute -> '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end ·
r#342 texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end ·
r#343 else_if_clause -> 'else' 'if' expression compound_statement ·
r#344 default_alone_clause/0.1 -> ':' ·
r#345 case_selector -> 'default' ·
r#346 case_selector -> expression ·
r#347 switch_statement/0.3/0 -> switch_body switch_statement/0.3/0 ·
r#348 switch_statement -> 'switch' expression '{' switch_statement/0.3 '}' ·
r#349 continuing_statement -> 'continuing' continuing_compound_statement ·
r#350 loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' ·
r#351 for_statement -> 'for' '(' for_header ')' compound_statement ·
r#352 for_header/0.2 -> expression ·
r#353 param -> param/0.0 ident ':' type_specifier ·
r#354 function_header/0.5/0.1 -> function_header/0.5/0.1/0 ·
r#355 function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 ·
r#356 function_header/0.5 -> '->' function_header/0.5/0.1 type_specifier ·
r#357 continuing_compound_statement/0.1 -> continuing_compound_statement/0.1/0 ·
r#358 case_selectors/0.1 -> case_selectors/0.1/0 ·
r#359 case_clause/0.2 -> ':' ·
r#360 default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement ·
r#361 type_specifier_without_ident/7.6 -> ',' access_mode ·
r#362 type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end ·
r#363 attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end ·
r#364 case_clause -> 'case' case_selectors case_clause/0.2 compound_statement ·
r#365 case_selectors/0.1/0/0.0 -> ',' case_selector ·
r#366 case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 ·
r#367 case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 ·
r#368 case_selectors/0.2 -> ',' ·
r#369 continuing_compound_statement/0.1/0 -> statement continuing_compound_statement/0.1/0 ·
r#370 continuing_compound_statement/0.2 -> break_if_statement ·
r#371 for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 ·
r#372 for_header/0.4 -> for_update ·
r#373 for_update -> variable_updating_statement ·
r#374 for_update -> func_call_statement ·
r#375 continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' ·
r#376 break_if_statement -> 'break' 'if' expression ';' ·

=Action:
[#0 'enable']: s#5
[#1 EndOfText]: acc
[#2 ';']: s#12
[#2 '@']: s#30
[#2 'alias']: s#22
[#2 'const']: s#20
[#2 'const_assert']: s#25
[#2 'struct']: s#23
[#3 ';']: r#0
[#3 '@']: r#0
[#3 'alias']: r#0
[#3 'const']: r#0
[#3 'const_assert']: r#0
[#3 'fn']: r#0
[#3 'override']: r#0
[#3 'struct']: r#0
[#3 'var']: r#0
[#3 EndOfText]: r#0
[#4 'enable']: s#5
[#5 'f16']: s#7
[#6 ';']: s#157
[#7 ';']: r#1
[#8 ';']: r#2
[#8 '@']: r#2
[#8 'alias']: r#2
[#8 'const']: r#2
[#8 'const_assert']: r#2
[#8 'fn']: r#2
[#8 'override']: r#2
[#8 'struct']: r#2
[#8 'var']: r#2
[#8 EndOfText]: r#2
[#9 EndOfText]: r#3
[#10 EndOfText]: r#4
[#11 ';']: s#12
[#11 '@']: s#30
[#11 'alias']: s#22
[#11 'const']: s#20
[#11 'const_assert']: s#25
[#11 'struct']: s#23
[#12 ';']: r#5
[#12 '@']: r#5
[#12 'alias']: r#5
[#12 'const']: r#5
[#12 'const_assert']: r#5
[#12 'fn']: r#5
[#12 'override']: r#5
[#12 'struct']: r#5
[#12 'var']: r#5
[#12 EndOfText]: r#5
[#13 ';']: s#155
[#14 ';']: s#154
[#15 ';']: s#153
[#16 ';']: r#6
[#16 '@']: r#6
[#16 'alias']: r#6
[#16 'const']: r#6
[#16 'const_assert']: r#6
[#16 'fn']: r#6
[#16 'override']: r#6
[#16 'struct']: r#6
[#16 'var']: r#6
[#16 EndOfText]: r#6
[#17 ';']: r#7
[#17 '@']: r#7
[#17 'alias']: r#7
[#17 'const']: r#7
[#17 'const_assert']: r#7
[#17 'fn']: r#7
[#17 'override']: r#7
[#17 'struct']: r#7
[#17 'var']: r#7
[#17 EndOfText]: r#7
[#18 ';']: s#152
[#19 'var']: s#151
[#20 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#21 'override']: s#147
[#22 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#23 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#24 'fn']: s#144
[#25 '!']: s#62
[#25 '&']: s#65
[#25 '(']: s#77
[#25 '*']: s#64
[#25 '-']: s#61
[#25 'array']: s#81
[#25 'atomic']: s#95
[#25 'bitcast']: s#71
[#25 'bool']: s#88
[#25 'f16']: s#90
[#25 'f32']: s#89
[#25 'false']: s#87
[#25 'i32']: s#91
[#25 'mat2x2']: s#100
[#25 'mat2x3']: s#101
[#25 'mat2x4']: s#102
[#25 'mat3x2']: s#103
[#25 'mat3x3']: s#104
[#25 'mat3x4']: s#105
[#25 'mat4x2']: s#106
[#25 'mat4x3']: s#107
[#25 'mat4x4']: s#108
[#25 'ptr']: s#93
[#25 'sampler']: s#125
[#25 'sampler_comparison']: s#126
[#25 'texture_1d']: s#132
[#25 'texture_2d']: s#133
[#25 'texture_2d_array']: s#134
[#25 'texture_3d']: s#135
[#25 'texture_cube']: s#136
[#25 'texture_cube_array']: s#137
[#25 'texture_depth_2d']: s#127
[#25 'texture_depth_2d_array']: s#128
[#25 'texture_depth_cube']: s#129
[#25 'texture_depth_cube_array']: s#130
[#25 'texture_depth_multisampled_2d']: s#131
[#25 'texture_multisampled_2d']: s#138
[#25 'texture_storage_1d']: s#139
[#25 'texture_storage_2d']: s#140
[#25 'texture_storage_2d_array']: s#141
[#25 'texture_storage_3d']: s#142
[#25 'true']: s#86
[#25 'u32']: s#92
[#25 'vec2']: s#97
[#25 'vec3']: s#98
[#25 'vec4']: s#99
[#25 '~']: s#63
[#25 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#25 /0[fh]/]: s#112
[#25 /0[iu]?/]: s#109
[#25 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#25 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#25 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#25 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#25 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#25 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#25 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#25 /[1-9][0-9]*[fh]/]: s#113
[#25 /[1-9][0-9]*[iu]?/]: s#110
[#26 'var']: r#8
[#27 'override']: r#9
[#28 'fn']: r#10
[#29 '@']: s#30
[#30 'align']: s#31
[#30 'binding']: s#32
[#30 'builtin']: s#33
[#30 'compute']: s#44
[#30 'const']: s#34
[#30 'fragment']: s#43
[#30 'group']: s#35
[#30 'id']: s#36
[#30 'interpolate']: s#37
[#30 'invariant']: s#38
[#30 'location']: s#39
[#30 'size']: s#40
[#30 'vertex']: s#42
[#30 'workgroup_size']: s#41
[#31 '(']: s#227
[#32 '(']: s#226
[#33 '(']: s#225
[#34 '@']: r#11
[#34 'array']: r#11
[#34 'atomic']: r#11
[#34 'bool']: r#11
[#34 'f16']: r#11
[#34 'f32']: r#11
[#34 'fn']: r#11
[#34 'i32']: r#11
[#34 'mat2x2']: r#11
[#34 'mat2x3']: r#11
[#34 'mat2x4']: r#11
[#34 'mat3x2']: r#11
[#34 'mat3x3']: r#11
[#34 'mat3x4']: r#11
[#34 'mat4x2']: r#11
[#34 'mat4x3']: r#11
[#34 'mat4x4']: r#11
[#34 'override']: r#11
[#34 'ptr']: r#11
[#34 'sampler']: r#11
[#34 'sampler_comparison']: r#11
[#34 'texture_1d']: r#11
[#34 'texture_2d']: r#11
[#34 'texture_2d_array']: r#11
[#34 'texture_3d']: r#11
[#34 'texture_cube']: r#11
[#34 'texture_cube_array']: r#11
[#34 'texture_depth_2d']: r#11
[#34 'texture_depth_2d_array']: r#11
[#34 'texture_depth_cube']: r#11
[#34 'texture_depth_cube_array']: r#11
[#34 'texture_depth_multisampled_2d']: r#11
[#34 'texture_multisampled_2d']: r#11
[#34 'texture_storage_1d']: r#11
[#34 'texture_storage_2d']: r#11
[#34 'texture_storage_2d_array']: r#11
[#34 'texture_storage_3d']: r#11
[#34 'u32']: r#11
[#34 'var']: r#11
[#34 'vec2']: r#11
[#34 'vec3']: r#11
[#34 'vec4']: r#11
[#34 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#11
[#35 '(']: s#224
[#36 '(']: s#223
[#37 '(']: s#222
[#38 '@']: r#12
[#38 'array']: r#12
[#38 'atomic']: r#12
[#38 'bool']: r#12
[#38 'f16']: r#12
[#38 'f32']: r#12
[#38 'fn']: r#12
[#38 'i32']: r#12
[#38 'mat2x2']: r#12
[#38 'mat2x3']: r#12
[#38 'mat2x4']: r#12
[#38 'mat3x2']: r#12
[#38 'mat3x3']: r#12
[#38 'mat3x4']: r#12
[#38 'mat4x2']: r#12
[#38 'mat4x3']: r#12
[#38 'mat4x4']: r#12
[#38 'override']: r#12
[#38 'ptr']: r#12
[#38 'sampler']: r#12
[#38 'sampler_comparison']: r#12
[#38 'texture_1d']: r#12
[#38 'texture_2d']: r#12
[#38 'texture_2d_array']: r#12
[#38 'texture_3d']: r#12
[#38 'texture_cube']: r#12
[#38 'texture_cube_array']: r#12
[#38 'texture_depth_2d']: r#12
[#38 'texture_depth_2d_array']: r#12
[#38 'texture_depth_cube']: r#12
[#38 'texture_depth_cube_array']: r#12
[#38 'texture_depth_multisampled_2d']: r#12
[#38 'texture_multisampled_2d']: r#12
[#38 'texture_storage_1d']: r#12
[#38 'texture_storage_2d']: r#12
[#38 'texture_storage_2d_array']: r#12
[#38 'texture_storage_3d']: r#12
[#38 'u32']: r#12
[#38 'var']: r#12
[#38 'vec2']: r#12
[#38 'vec3']: r#12
[#38 'vec4']: r#12
[#38 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#12
[#39 '(']: s#221
[#40 '(']: s#220
[#41 '(']: s#219
[#42 '@']: r#13
[#42 'array']: r#13
[#42 'atomic']: r#13
[#42 'bool']: r#13
[#42 'f16']: r#13
[#42 'f32']: r#13
[#42 'fn']: r#13
[#42 'i32']: r#13
[#42 'mat2x2']: r#13
[#42 'mat2x3']: r#13
[#42 'mat2x4']: r#13
[#42 'mat3x2']: r#13
[#42 'mat3x3']: r#13
[#42 'mat3x4']: r#13
[#42 'mat4x2']: r#13
[#42 'mat4x3']: r#13
[#42 'mat4x4']: r#13
[#42 'override']: r#13
[#42 'ptr']: r#13
[#42 'sampler']: r#13
[#42 'sampler_comparison']: r#13
[#42 'texture_1d']: r#13
[#42 'texture_2d']: r#13
[#42 'texture_2d_array']: r#13
[#42 'texture_3d']: r#13
[#42 'texture_cube']: r#13
[#42 'texture_cube_array']: r#13
[#42 'texture_depth_2d']: r#13
[#42 'texture_depth_2d_array']: r#13
[#42 'texture_depth_cube']: r#13
[#42 'texture_depth_cube_array']: r#13
[#42 'texture_depth_multisampled_2d']: r#13
[#42 'texture_multisampled_2d']: r#13
[#42 'texture_storage_1d']: r#13
[#42 'texture_storage_2d']: r#13
[#42 'texture_storage_2d_array']: r#13
[#42 'texture_storage_3d']: r#13
[#42 'u32']: r#13
[#42 'var']: r#13
[#42 'vec2']: r#13
[#42 'vec3']: r#13
[#42 'vec4']: r#13
[#42 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#13
[#43 '@']: r#14
[#43 'array']: r#14
[#43 'atomic']: r#14
[#43 'bool']: r#14
[#43 'f16']: r#14
[#43 'f32']: r#14
[#43 'fn']: r#14
[#43 'i32']: r#14
[#43 'mat2x2']: r#14
[#43 'mat2x3']: r#14
[#43 'mat2x4']: r#14
[#43 'mat3x2']: r#14
[#43 'mat3x3']: r#14
[#43 'mat3x4']: r#14
[#43 'mat4x2']: r#14
[#43 'mat4x3']: r#14
[#43 'mat4x4']: r#14
[#43 'override']: r#14
[#43 'ptr']: r#14
[#43 'sampler']: r#14
[#43 'sampler_comparison']: r#14
[#43 'texture_1d']: r#14
[#43 'texture_2d']: r#14
[#43 'texture_2d_array']: r#14
[#43 'texture_3d']: r#14
[#43 'texture_cube']: r#14
[#43 'texture_cube_array']: r#14
[#43 'texture_depth_2d']: r#14
[#43 'texture_depth_2d_array']: r#14
[#43 'texture_depth_cube']: r#14
[#43 'texture_depth_cube_array']: r#14
[#43 'texture_depth_multisampled_2d']: r#14
[#43 'texture_multisampled_2d']: r#14
[#43 'texture_storage_1d']: r#14
[#43 'texture_storage_2d']: r#14
[#43 'texture_storage_2d_array']: r#14
[#43 'texture_storage_3d']: r#14
[#43 'u32']: r#14
[#43 'var']: r#14
[#43 'vec2']: r#14
[#43 'vec3']: r#14
[#43 'vec4']: r#14
[#43 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#14
[#44 '@']: r#15
[#44 'array']: r#15
[#44 'atomic']: r#15
[#44 'bool']: r#15
[#44 'f16']: r#15
[#44 'f32']: r#15
[#44 'fn']: r#15
[#44 'i32']: r#15
[#44 'mat2x2']: r#15
[#44 'mat2x3']: r#15
[#44 'mat2x4']: r#15
[#44 'mat3x2']: r#15
[#44 'mat3x3']: r#15
[#44 'mat3x4']: r#15
[#44 'mat4x2']: r#15
[#44 'mat4x3']: r#15
[#44 'mat4x4']: r#15
[#44 'override']: r#15
[#44 'ptr']: r#15
[#44 'sampler']: r#15
[#44 'sampler_comparison']: r#15
[#44 'texture_1d']: r#15
[#44 'texture_2d']: r#15
[#44 'texture_2d_array']: r#15
[#44 'texture_3d']: r#15
[#44 'texture_cube']: r#15
[#44 'texture_cube_array']: r#15
[#44 'texture_depth_2d']: r#15
[#44 'texture_depth_2d_array']: r#15
[#44 'texture_depth_cube']: r#15
[#44 'texture_depth_cube_array']: r#15
[#44 'texture_depth_multisampled_2d']: r#15
[#44 'texture_multisampled_2d']: r#15
[#44 'texture_storage_1d']: r#15
[#44 'texture_storage_2d']: r#15
[#44 'texture_storage_2d_array']: r#15
[#44 'texture_storage_3d']: r#15
[#44 'u32']: r#15
[#44 'var']: r#15
[#44 'vec2']: r#15
[#44 'vec3']: r#15
[#44 'vec4']: r#15
[#44 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#15
[#45 'var']: r#16
[#46 'override']: r#17
[#47 'fn']: r#18
[#48 ';']: r#19
[#49 '&&']: r#22
[#49 ')']: r#20
[#49 ',']: r#20
[#49 ':']: r#20
[#49 ';']: r#20
[#49 ']']: r#20
[#49 '{']: r#20
[#49 '||']: r#21
[#50 '||']: s#218
[#51 '&&']: s#217
[#52 ')']: r#23
[#52 ',']: r#23
[#52 ':']: r#23
[#52 ';']: r#23
[#52 ']']: r#23
[#52 '{']: r#23
[#53 '!=']: s#212
[#53 '&&']: r#24
[#53 ')']: r#24
[#53 ',']: r#24
[#53 ':']: r#24
[#53 ';']: r#24
[#53 '==']: s#211
[#53 ']']: r#24
[#53 '{']: r#24
[#53 '||']: r#24
[#53 /\u200B_greater_than/]: s#214
[#53 /\u200B_greater_than_equal/]: s#216
[#53 /\u200B_less_than/]: s#213
[#53 /\u200B_less_than_equal/]: s#215
[#54 '&']: s#206
[#55 '|']: s#205
[#56 '^']: s#204
[#57 '!=']: r#25
[#57 '&&']: r#25
[#57 ')']: r#25
[#57 '+']: s#202
[#57 ',']: r#25
[#57 '-']: s#203
[#57 ':']: r#25
[#57 ';']: r#25
[#57 '==']: r#25
[#57 ']']: r#25
[#57 '{']: r#25
[#57 '||']: r#25
[#57 /\u200B_greater_than/]: r#25
[#57 /\u200B_greater_than_equal/]: r#25
[#57 /\u200B_less_than/]: r#25
[#57 /\u200B_less_than_equal/]: r#25
[#58 '!=']: r#29
[#58 '%']: r#29
[#58 '&&']: r#29
[#58 '&']: r#26
[#58 ')']: r#29
[#58 '*']: r#29
[#58 '+']: r#29
[#58 ',']: r#29
[#58 '-']: r#29
[#58 '/']: r#29
[#58 ':']: r#29
[#58 ';']: r#29
[#58 '==']: r#29
[#58 ']']: r#29
[#58 '^']: r#28
[#58 '{']: r#29
[#58 '|']: r#27
[#58 '||']: r#29
[#58 /\u200B_greater_than/]: r#29
[#58 /\u200B_greater_than_equal/]: r#29
[#58 /\u200B_less_than/]: r#29
[#58 /\u200B_less_than_equal/]: r#29
[#58 /\u200B_shift_left/]: s#199
[#58 /\u200B_shift_right/]: s#200
[#59 '!=']: r#30
[#59 '%']: s#196
[#59 '&&']: r#30
[#59 ')']: r#30
[#59 '*']: s#194
[#59 '+']: r#30
[#59 ',']: r#30
[#59 '-']: r#30
[#59 '/']: s#195
[#59 ':']: r#30
[#59 ';']: r#30
[#59 '==']: r#30
[#59 ']']: r#30
[#59 '{']: r#30
[#59 '||']: r#30
[#59 /\u200B_greater_than/]: r#30
[#59 /\u200B_greater_than_equal/]: r#30
[#59 /\u200B_less_than/]: r#30
[#59 /\u200B_less_than_equal/]: r#30
[#59 /\u200B_template_args_end/]: r#30
[#60 '!=']: r#31
[#60 '%']: r#31
[#60 '&&']: r#31
[#60 '&']: r#31
[#60 ')']: r#31
[#60 '*']: r#31
[#60 '+']: r#31
[#60 ',']: r#31
[#60 '-']: r#31
[#60 '/']: r#31
[#60 ':']: r#31
[#60 ';']: r#31
[#60 '==']: r#31
[#60 ']']: r#31
[#60 '^']: r#31
[#60 '{']: r#31
[#60 '|']: r#31
[#60 '||']: r#31
[#60 /\u200B_greater_than/]: r#31
[#60 /\u200B_greater_than_equal/]: r#31
[#60 /\u200B_less_than/]: r#31
[#60 /\u200B_less_than_equal/]: r#31
[#60 /\u200B_shift_left/]: r#31
[#60 /\u200B_shift_right/]: r#31
[#60 /\u200B_template_args_end/]: r#31
[#61 '!']: s#62
[#61 '&']: s#65
[#61 '(']: s#77
[#61 '*']: s#64
[#61 '-']: s#61
[#61 'array']: s#81
[#61 'atomic']: s#95
[#61 'bitcast']: s#71
[#61 'bool']: s#88
[#61 'f16']: s#90
[#61 'f32']: s#89
[#61 'false']: s#87
[#61 'i32']: s#91
[#61 'mat2x2']: s#100
[#61 'mat2x3']: s#101
[#61 'mat2x4']: s#102
[#61 'mat3x2']: s#103
[#61 'mat3x3']: s#104
[#61 'mat3x4']: s#105
[#61 'mat4x2']: s#106
[#61 'mat4x3']: s#107
[#61 'mat4x4']: s#108
[#61 'ptr']: s#93
[#61 'sampler']: s#125
[#61 'sampler_comparison']: s#126
[#61 'texture_1d']: s#132
[#61 'texture_2d']: s#133
[#61 'texture_2d_array']: s#134
[#61 'texture_3d']: s#135
[#61 'texture_cube']: s#136
[#61 'texture_cube_array']: s#137
[#61 'texture_depth_2d']: s#127
[#61 'texture_depth_2d_array']: s#128
[#61 'texture_depth_cube']: s#129
[#61 'texture_depth_cube_array']: s#130
[#61 'texture_depth_multisampled_2d']: s#131
[#61 'texture_multisampled_2d']: s#138
[#61 'texture_storage_1d']: s#139
[#61 'texture_storage_2d']: s#140
[#61 'texture_storage_2d_array']: s#141
[#61 'texture_storage_3d']: s#142
[#61 'true']: s#86
[#61 'u32']: s#92
[#61 'vec2']: s#97
[#61 'vec3']: s#98
[#61 'vec4']: s#99
[#61 '~']: s#63
[#61 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#61 /0[fh]/]: s#112
[#61 /0[iu]?/]: s#109
[#61 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#61 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#61 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#61 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#61 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#61 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#61 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#61 /[1-9][0-9]*[fh]/]: s#113
[#61 /[1-9][0-9]*[iu]?/]: s#110
[#62 '!']: s#62
[#62 '&']: s#65
[#62 '(']: s#77
[#62 '*']: s#64
[#62 '-']: s#61
[#62 'array']: s#81
[#62 'atomic']: s#95
[#62 'bitcast']: s#71
[#62 'bool']: s#88
[#62 'f16']: s#90
[#62 'f32']: s#89
[#62 'false']: s#87
[#62 'i32']: s#91
[#62 'mat2x2']: s#100
[#62 'mat2x3']: s#101
[#62 'mat2x4']: s#102
[#62 'mat3x2']: s#103
[#62 'mat3x3']: s#104
[#62 'mat3x4']: s#105
[#62 'mat4x2']: s#106
[#62 'mat4x3']: s#107
[#62 'mat4x4']: s#108
[#62 'ptr']: s#93
[#62 'sampler']: s#125
[#62 'sampler_comparison']: s#126
[#62 'texture_1d']: s#132
[#62 'texture_2d']: s#133
[#62 'texture_2d_array']: s#134
[#62 'texture_3d']: s#135
[#62 'texture_cube']: s#136
[#62 'texture_cube_array']: s#137
[#62 'texture_depth_2d']: s#127
[#62 'texture_depth_2d_array']: s#128
[#62 'texture_depth_cube']: s#129
[#62 'texture_depth_cube_array']: s#130
[#62 'texture_depth_multisampled_2d']: s#131
[#62 'texture_multisampled_2d']: s#138
[#62 'texture_storage_1d']: s#139
[#62 'texture_storage_2d']: s#140
[#62 'texture_storage_2d_array']: s#141
[#62 'texture_storage_3d']: s#142
[#62 'true']: s#86
[#62 'u32']: s#92
[#62 'vec2']: s#97
[#62 'vec3']: s#98
[#62 'vec4']: s#99
[#62 '~']: s#63
[#62 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#62 /0[fh]/]: s#112
[#62 /0[iu]?/]: s#109
[#62 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#62 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#62 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#62 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#62 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#62 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#62 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#62 /[1-9][0-9]*[fh]/]: s#113
[#62 /[1-9][0-9]*[iu]?/]: s#110
[#63 '!']: s#62
[#63 '&']: s#65
[#63 '(']: s#77
[#63 '*']: s#64
[#63 '-']: s#61
[#63 'array']: s#81
[#63 'atomic']: s#95
[#63 'bitcast']: s#71
[#63 'bool']: s#88
[#63 'f16']: s#90
[#63 'f32']: s#89
[#63 'false']: s#87
[#63 'i32']: s#91
[#63 'mat2x2']: s#100
[#63 'mat2x3']: s#101
[#63 'mat2x4']: s#102
[#63 'mat3x2']: s#103
[#63 'mat3x3']: s#104
[#63 'mat3x4']: s#105
[#63 'mat4x2']: s#106
[#63 'mat4x3']: s#107
[#63 'mat4x4']: s#108
[#63 'ptr']: s#93
[#63 'sampler']: s#125
[#63 'sampler_comparison']: s#126
[#63 'texture_1d']: s#132
[#63 'texture_2d']: s#133
[#63 'texture_2d_array']: s#134
[#63 'texture_3d']: s#135
[#63 'texture_cube']: s#136
[#63 'texture_cube_array']: s#137
[#63 'texture_depth_2d']: s#127
[#63 'texture_depth_2d_array']: s#128
[#63 'texture_depth_cube']: s#129
[#63 'texture_depth_cube_array']: s#130
[#63 'texture_depth_multisampled_2d']: s#131
[#63 'texture_multisampled_2d']: s#138
[#63 'texture_storage_1d']: s#139
[#63 'texture_storage_2d']: s#140
[#63 'texture_storage_2d_array']: s#141
[#63 'texture_storage_3d']: s#142
[#63 'true']: s#86
[#63 'u32']: s#92
[#63 'vec2']: s#97
[#63 'vec3']: s#98
[#63 'vec4']: s#99
[#63 '~']: s#63
[#63 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#63 /0[fh]/]: s#112
[#63 /0[iu]?/]: s#109
[#63 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#63 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#63 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#63 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#63 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#63 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#63 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#63 /[1-9][0-9]*[fh]/]: s#113
[#63 /[1-9][0-9]*[iu]?/]: s#110
[#64 '!']: s#62
[#64 '&']: s#65
[#64 '(']: s#77
[#64 '*']: s#64
[#64 '-']: s#61
[#64 'array']: s#81
[#64 'atomic']: s#95
[#64 'bitcast']: s#71
[#64 'bool']: s#88
[#64 'f16']: s#90
[#64 'f32']: s#89
[#64 'false']: s#87
[#64 'i32']: s#91
[#64 'mat2x2']: s#100
[#64 'mat2x3']: s#101
[#64 'mat2x4']: s#102
[#64 'mat3x2']: s#103
[#64 'mat3x3']: s#104
[#64 'mat3x4']: s#105
[#64 'mat4x2']: s#106
[#64 'mat4x3']: s#107
[#64 'mat4x4']: s#108
[#64 'ptr']: s#93
[#64 'sampler']: s#125
[#64 'sampler_comparison']: s#126
[#64 'texture_1d']: s#132
[#64 'texture_2d']: s#133
[#64 'texture_2d_array']: s#134
[#64 'texture_3d']: s#135
[#64 'texture_cube']: s#136
[#64 'texture_cube_array']: s#137
[#64 'texture_depth_2d']: s#127
[#64 'texture_depth_2d_array']: s#128
[#64 'texture_depth_cube']: s#129
[#64 'texture_depth_cube_array']: s#130
[#64 'texture_depth_multisampled_2d']: s#131
[#64 'texture_multisampled_2d']: s#138
[#64 'texture_storage_1d']: s#139
[#64 'texture_storage_2d']: s#140
[#64 'texture_storage_2d_array']: s#141
[#64 'texture_storage_3d']: s#142
[#64 'true']: s#86
[#64 'u32']: s#92
[#64 'vec2']: s#97
[#64 'vec3']: s#98
[#64 'vec4']: s#99
[#64 '~']: s#63
[#64 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#64 /0[fh]/]: s#112
[#64 /0[iu]?/]: s#109
[#64 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#64 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#64 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#64 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#64 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#64 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#64 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#64 /[1-9][0-9]*[fh]/]: s#113
[#64 /[1-9][0-9]*[iu]?/]: s#110
[#65 '!']: s#62
[#65 '&']: s#65
[#65 '(']: s#77
[#65 '*']: s#64
[#65 '-']: s#61
[#65 'array']: s#81
[#65 'atomic']: s#95
[#65 'bitcast']: s#71
[#65 'bool']: s#88
[#65 'f16']: s#90
[#65 'f32']: s#89
[#65 'false']: s#87
[#65 'i32']: s#91
[#65 'mat2x2']: s#100
[#65 'mat2x3']: s#101
[#65 'mat2x4']: s#102
[#65 'mat3x2']: s#103
[#65 'mat3x3']: s#104
[#65 'mat3x4']: s#105
[#65 'mat4x2']: s#106
[#65 'mat4x3']: s#107
[#65 'mat4x4']: s#108
[#65 'ptr']: s#93
[#65 'sampler']: s#125
[#65 'sampler_comparison']: s#126
[#65 'texture_1d']: s#132
[#65 'texture_2d']: s#133
[#65 'texture_2d_array']: s#134
[#65 'texture_3d']: s#135
[#65 'texture_cube']: s#136
[#65 'texture_cube_array']: s#137
[#65 'texture_depth_2d']: s#127
[#65 'texture_depth_2d_array']: s#128
[#65 'texture_depth_cube']: s#129
[#65 'texture_depth_cube_array']: s#130
[#65 'texture_depth_multisampled_2d']: s#131
[#65 'texture_multisampled_2d']: s#138
[#65 'texture_storage_1d']: s#139
[#65 'texture_storage_2d']: s#140
[#65 'texture_storage_2d_array']: s#141
[#65 'texture_storage_3d']: s#142
[#65 'true']: s#86
[#65 'u32']: s#92
[#65 'vec2']: s#97
[#65 'vec3']: s#98
[#65 'vec4']: s#99
[#65 '~']: s#63
[#65 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#65 /0[fh]/]: s#112
[#65 /0[iu]?/]: s#109
[#65 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#65 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#65 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#65 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#65 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#65 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#65 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#65 /[1-9][0-9]*[fh]/]: s#113
[#65 /[1-9][0-9]*[iu]?/]: s#110
[#66 '.']: s#187
[#66 '[']: s#186
[#67 '!=']: r#32
[#67 '%']: r#32
[#67 '&&']: r#32
[#67 '&']: r#32
[#67 '(']: r#33
[#67 ')']: r#32
[#67 '*']: r#32
[#67 '+']: r#32
[#67 ',']: r#32
[#67 '-']: r#32
[#67 '.']: r#32
[#67 '/']: r#32
[#67 ':']: r#32
[#67 ';']: r#32
[#67 '==']: r#32
[#67 '[']: r#32
[#67 ']']: r#32
[#67 '^']: r#32
[#67 '{']: r#32
[#67 '|']: r#32
[#67 '||']: r#32
[#67 /\u200B_greater_than/]: r#32
[#67 /\u200B_greater_than_equal/]: r#32
[#67 /\u200B_less_than/]: r#32
[#67 /\u200B_less_than_equal/]: r#32
[#67 /\u200B_shift_left/]: r#32
[#67 /\u200B_shift_right/]: r#32
[#67 /\u200B_template_args_end/]: r#32
[#68 '!=']: r#34
[#68 '%']: r#34
[#68 '&&']: r#34
[#68 '&']: r#34
[#68 ')']: r#34
[#68 '*']: r#34
[#68 '+']: r#34
[#68 ',']: r#34
[#68 '-']: r#34
[#68 '.']: r#34
[#68 '/']: r#34
[#68 ':']: r#34
[#68 ';']: r#34
[#68 '==']: r#34
[#68 '[']: r#34
[#68 ']']: r#34
[#68 '^']: r#34
[#68 '{']: r#34
[#68 '|']: r#34
[#68 '||']: r#34
[#68 /\u200B_greater_than/]: r#34
[#68 /\u200B_greater_than_equal/]: r#34
[#68 /\u200B_less_than/]: r#34
[#68 /\u200B_less_than_equal/]: r#34
[#68 /\u200B_shift_left/]: r#34
[#68 /\u200B_shift_right/]: r#34
[#68 /\u200B_template_args_end/]: r#34
[#69 '!=']: r#35
[#69 '%']: r#35
[#69 '&&']: r#35
[#69 '&']: r#35
[#69 ')']: r#35
[#69 '*']: r#35
[#69 '+']: r#35
[#69 ',']: r#35
[#69 '-']: r#35
[#69 '.']: r#35
[#69 '/']: r#35
[#69 ':']: r#35
[#69 ';']: r#35
[#69 '==']: r#35
[#69 '[']: r#35
[#69 ']']: r#35
[#69 '^']: r#35
[#69 '{']: r#35
[#69 '|']: r#35
[#69 '||']: r#35
[#69 /\u200B_greater_than/]: r#35
[#69 /\u200B_greater_than_equal/]: r#35
[#69 /\u200B_less_than/]: r#35
[#69 /\u200B_less_than_equal/]: r#35
[#69 /\u200B_shift_left/]: r#35
[#69 /\u200B_shift_right/]: r#35
[#69 /\u200B_template_args_end/]: r#35
[#70 '!=']: r#36
[#70 '%']: r#36
[#70 '&&']: r#36
[#70 '&']: r#36
[#70 ')']: r#36
[#70 '*']: r#36
[#70 '+']: r#36
[#70 ',']: r#36
[#70 '-']: r#36
[#70 '.']: r#36
[#70 '/']: r#36
[#70 ':']: r#36
[#70 ';']: r#36
[#70 '==']: r#36
[#70 '[']: r#36
[#70 ']']: r#36
[#70 '^']: r#36
[#70 '{']: r#36
[#70 '|']: r#36
[#70 '||']: r#36
[#70 /\u200B_greater_than/]: r#36
[#70 /\u200B_greater_than_equal/]: r#36
[#70 /\u200B_less_than/]: r#36
[#70 /\u200B_less_than_equal/]: r#36
[#70 /\u200B_shift_left/]: r#36
[#70 /\u200B_shift_right/]: r#36
[#70 /\u200B_template_args_end/]: r#36
[#71 /\u200B_disambiguate_template/]: s#159
[#72 '!=']: r#37
[#72 '%']: r#37
[#72 '%=']: r#37
[#72 '&&']: r#37
[#72 '&']: r#37
[#72 '&=']: r#37
[#72 '(']: r#37
[#72 ')']: r#37
[#72 '*']: r#37
[#72 '*=']: r#37
[#72 '+']: r#37
[#72 '++']: r#37
[#72 '+=']: r#37
[#72 ',']: r#37
[#72 '-']: r#37
[#72 '--']: r#37
[#72 '-=']: r#37
[#72 '.']: r#37
[#72 '/']: r#37
[#72 '/=']: r#37
[#72 ':']: r#37
[#72 ';']: r#37
[#72 '=']: r#37
[#72 '==']: r#37
[#72 '[']: r#37
[#72 ']']: r#37
[#72 '^']: r#37
[#72 '^=']: r#37
[#72 '{']: r#37
[#72 '|']: r#37
[#72 '|=']: r#37
[#72 '||']: r#37
[#72 '}']: r#37
[#72 /\u200B_greater_than/]: r#37
[#72 /\u200B_greater_than_equal/]: r#37
[#72 /\u200B_less_than/]: r#37
[#72 /\u200B_less_than_equal/]: r#37
[#72 /\u200B_shift_left/]: r#37
[#72 /\u200B_shift_left_assign/]: r#37
[#72 /\u200B_shift_right/]: r#37
[#72 /\u200B_shift_right_assign/]: r#37
[#72 /\u200B_template_args_end/]: r#37
[#73 '(']: s#182
[#74 '!=']: r#38
[#74 '%']: r#38
[#74 '&&']: r#38
[#74 '&']: r#38
[#74 ')']: r#38
[#74 '*']: r#38
[#74 '+']: r#38
[#74 ',']: r#38
[#74 '-']: r#38
[#74 '.']: r#38
[#74 '/']: r#38
[#74 ':']: r#38
[#74 ';']: r#38
[#74 '==']: r#38
[#74 '[']: r#38
[#74 ']']: r#38
[#74 '^']: r#38
[#74 '{']: r#38
[#74 '|']: r#38
[#74 '||']: r#38
[#74 /\u200B_greater_than/]: r#38
[#74 /\u200B_greater_than_equal/]: r#38
[#74 /\u200B_less_than/]: r#38
[#74 /\u200B_less_than_equal/]: r#38
[#74 /\u200B_shift_left/]: r#38
[#74 /\u200B_shift_right/]: r#38
[#74 /\u200B_template_args_end/]: r#38
[#75 '!=']: r#39
[#75 '%']: r#39
[#75 '&&']: r#39
[#75 '&']: r#39
[#75 ')']: r#39
[#75 '*']: r#39
[#75 '+']: r#39
[#75 ',']: r#39
[#75 '-']: r#39
[#75 '.']: r#39
[#75 '/']: r#39
[#75 ':']: r#39
[#75 ';']: r#39
[#75 '==']: r#39
[#75 '[']: r#39
[#75 ']']: r#39
[#75 '^']: r#39
[#75 '{']: r#39
[#75 '|']: r#39
[#75 '||']: r#39
[#75 /\u200B_greater_than/]: r#39
[#75 /\u200B_greater_than_equal/]: r#39
[#75 /\u200B_less_than/]: r#39
[#75 /\u200B_less_than_equal/]: r#39
[#75 /\u200B_shift_left/]: r#39
[#75 /\u200B_shift_right/]: r#39
[#75 /\u200B_template_args_end/]: r#39
[#76 '!=']: r#40
[#76 '%']: r#40
[#76 '&&']: r#40
[#76 '&']: r#40
[#76 ')']: r#40
[#76 '*']: r#40
[#76 '+']: r#40
[#76 ',']: r#40
[#76 '-']: r#40
[#76 '.']: r#40
[#76 '/']: r#40
[#76 ':']: r#40
[#76 ';']: r#40
[#76 '==']: r#40
[#76 '[']: r#40
[#76 ']']: r#40
[#76 '^']: r#40
[#76 '{']: r#40
[#76 '|']: r#40
[#76 '||']: r#40
[#76 /\u200B_greater_than/]: r#40
[#76 /\u200B_greater_than_equal/]: r#40
[#76 /\u200B_less_than/]: r#40
[#76 /\u200B_less_than_equal/]: r#40
[#76 /\u200B_shift_left/]: r#40
[#76 /\u200B_shift_right/]: r#40
[#76 /\u200B_template_args_end/]: r#40
[#77 '!']: s#62
[#77 '&']: s#65
[#77 '(']: s#77
[#77 '*']: s#64
[#77 '-']: s#61
[#77 'array']: s#81
[#77 'atomic']: s#95
[#77 'bitcast']: s#71
[#77 'bool']: s#88
[#77 'f16']: s#90
[#77 'f32']: s#89
[#77 'false']: s#87
[#77 'i32']: s#91
[#77 'mat2x2']: s#100
[#77 'mat2x3']: s#101
[#77 'mat2x4']: s#102
[#77 'mat3x2']: s#103
[#77 'mat3x3']: s#104
[#77 'mat3x4']: s#105
[#77 'mat4x2']: s#106
[#77 'mat4x3']: s#107
[#77 'mat4x4']: s#108
[#77 'ptr']: s#93
[#77 'sampler']: s#125
[#77 'sampler_comparison']: s#126
[#77 'texture_1d']: s#132
[#77 'texture_2d']: s#133
[#77 'texture_2d_array']: s#134
[#77 'texture_3d']: s#135
[#77 'texture_cube']: s#136
[#77 'texture_cube_array']: s#137
[#77 'texture_depth_2d']: s#127
[#77 'texture_depth_2d_array']: s#128
[#77 'texture_depth_cube']: s#129
[#77 'texture_depth_cube_array']: s#130
[#77 'texture_depth_multisampled_2d']: s#131
[#77 'texture_multisampled_2d']: s#138
[#77 'texture_storage_1d']: s#139
[#77 'texture_storage_2d']: s#140
[#77 'texture_storage_2d_array']: s#141
[#77 'texture_storage_3d']: s#142
[#77 'true']: s#86
[#77 'u32']: s#92
[#77 'vec2']: s#97
[#77 'vec3']: s#98
[#77 'vec4']: s#99
[#77 '~']: s#63
[#77 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#77 /0[fh]/]: s#112
[#77 /0[iu]?/]: s#109
[#77 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#77 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#77 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#77 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#77 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#77 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#77 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#77 /[1-9][0-9]*[fh]/]: s#113
[#77 /[1-9][0-9]*[iu]?/]: s#110
[#78 '(']: r#41
[#79 /\u200B_disambiguate_template/]: s#159
[#80 /\u200B_disambiguate_template/]: s#159
[#81 /\u200B_disambiguate_template/]: s#159
[#82 '!=']: r#42
[#82 '%']: r#42
[#82 '&&']: r#42
[#82 '&']: r#42
[#82 ')']: r#42
[#82 '*']: r#42
[#82 '+']: r#42
[#82 ',']: r#42
[#82 '-']: r#42
[#82 '.']: r#42
[#82 '/']: r#42
[#82 ':']: r#42
[#82 ';']: r#42
[#82 '==']: r#42
[#82 '[']: r#42
[#82 ']']: r#42
[#82 '^']: r#42
[#82 '{']: r#42
[#82 '|']: r#42
[#82 '||']: r#42
[#82 /\u200B_greater_than/]: r#42
[#82 /\u200B_greater_than_equal/]: r#42
[#82 /\u200B_less_than/]: r#42
[#82 /\u200B_less_than_equal/]: r#42
[#82 /\u200B_shift_left/]: r#42
[#82 /\u200B_shift_right/]: r#42
[#82 /\u200B_template_args_end/]: r#42
[#83 '!=']: r#43
[#83 '%']: r#43
[#83 '&&']: r#43
[#83 '&']: r#43
[#83 ')']: r#43
[#83 '*']: r#43
[#83 '+']: r#43
[#83 ',']: r#43
[#83 '-']: r#43
[#83 '.']: r#43
[#83 '/']: r#43
[#83 ':']: r#43
[#83 ';']: r#43
[#83 '==']: r#43
[#83 '[']: r#43
[#83 ']']: r#43
[#83 '^']: r#43
[#83 '{']: r#43
[#83 '|']: r#43
[#83 '||']: r#43
[#83 /\u200B_greater_than/]: r#43
[#83 /\u200B_greater_than_equal/]: r#43
[#83 /\u200B_less_than/]: r#43
[#83 /\u200B_less_than_equal/]: r#43
[#83 /\u200B_shift_left/]: r#43
[#83 /\u200B_shift_right/]: r#43
[#83 /\u200B_template_args_end/]: r#43
[#84 '!=']: r#44
[#84 '%']: r#44
[#84 '&&']: r#44
[#84 '&']: r#44
[#84 ')']: r#44
[#84 '*']: r#44
[#84 '+']: r#44
[#84 ',']: r#44
[#84 '-']: r#44
[#84 '.']: r#44
[#84 '/']: r#44
[#84 ':']: r#44
[#84 ';']: r#44
[#84 '==']: r#44
[#84 '[']: r#44
[#84 ']']: r#44
[#84 '^']: r#44
[#84 '{']: r#44
[#84 '|']: r#44
[#84 '||']: r#44
[#84 /\u200B_greater_than/]: r#44
[#84 /\u200B_greater_than_equal/]: r#44
[#84 /\u200B_less_than/]: r#44
[#84 /\u200B_less_than_equal/]: r#44
[#84 /\u200B_shift_left/]: r#44
[#84 /\u200B_shift_right/]: r#44
[#84 /\u200B_template_args_end/]: r#44
[#85 '!=']: r#45
[#85 '%']: r#45
[#85 '&&']: r#45
[#85 '&']: r#45
[#85 ')']: r#45
[#85 '*']: r#45
[#85 '+']: r#45
[#85 ',']: r#45
[#85 '-']: r#45
[#85 '.']: r#45
[#85 '/']: r#45
[#85 ':']: r#45
[#85 ';']: r#45
[#85 '==']: r#45
[#85 '[']: r#45
[#85 ']']: r#45
[#85 '^']: r#45
[#85 '{']: r#45
[#85 '|']: r#45
[#85 '||']: r#45
[#85 /\u200B_greater_than/]: r#45
[#85 /\u200B_greater_than_equal/]: r#45
[#85 /\u200B_less_than/]: r#45
[#85 /\u200B_less_than_equal/]: r#45
[#85 /\u200B_shift_left/]: r#45
[#85 /\u200B_shift_right/]: r#45
[#85 /\u200B_template_args_end/]: r#45
[#86 '!=']: r#46
[#86 '%']: r#46
[#86 '&&']: r#46
[#86 '&']: r#46
[#86 ')']: r#46
[#86 '*']: r#46
[#86 '+']: r#46
[#86 ',']: r#46
[#86 '-']: r#46
[#86 '.']: r#46
[#86 '/']: r#46
[#86 ':']: r#46
[#86 ';']: r#46
[#86 '==']: r#46
[#86 '[']: r#46
[#86 ']']: r#46
[#86 '^']: r#46
[#86 '{']: r#46
[#86 '|']: r#46
[#86 '||']: r#46
[#86 /\u200B_greater_than/]: r#46
[#86 /\u200B_greater_than_equal/]: r#46
[#86 /\u200B_less_than/]: r#46
[#86 /\u200B_less_than_equal/]: r#46
[#86 /\u200B_shift_left/]: r#46
[#86 /\u200B_shift_right/]: r#46
[#86 /\u200B_template_args_end/]: r#46
[#87 '!=']: r#47
[#87 '%']: r#47
[#87 '&&']: r#47
[#87 '&']: r#47
[#87 ')']: r#47
[#87 '*']: r#47
[#87 '+']: r#47
[#87 ',']: r#47
[#87 '-']: r#47
[#87 '.']: r#47
[#87 '/']: r#47
[#87 ':']: r#47
[#87 ';']: r#47
[#87 '==']: r#47
[#87 '[']: r#47
[#87 ']']: r#47
[#87 '^']: r#47
[#87 '{']: r#47
[#87 '|']: r#47
[#87 '||']: r#47
[#87 /\u200B_greater_than/]: r#47
[#87 /\u200B_greater_than_equal/]: r#47
[#87 /\u200B_less_than/]: r#47
[#87 /\u200B_less_than_equal/]: r#47
[#87 /\u200B_shift_left/]: r#47
[#87 /\u200B_shift_right/]: r#47
[#87 /\u200B_template_args_end/]: r#47
[#88 '(']: r#48
[#88 ')']: r#48
[#88 ',']: r#48
[#88 ';']: r#48
[#88 '=']: r#48
[#88 '{']: r#48
[#88 '}']: r#48
[#88 /\u200B_template_args_end/]: r#48
[#89 '(']: r#49
[#89 ')']: r#49
[#89 ',']: r#49
[#89 ';']: r#49
[#89 '=']: r#49
[#89 '{']: r#49
[#89 '}']: r#49
[#89 /\u200B_template_args_end/]: r#49
[#90 '(']: r#50
[#90 ')']: r#50
[#90 ',']: r#50
[#90 ';']: r#50
[#90 '=']: r#50
[#90 '{']: r#50
[#90 '}']: r#50
[#90 /\u200B_template_args_end/]: r#50
[#91 '(']: r#51
[#91 ')']: r#51
[#91 ',']: r#51
[#91 ';']: r#51
[#91 '=']: r#51
[#91 '{']: r#51
[#91 '}']: r#51
[#91 /\u200B_template_args_end/]: r#51
[#92 '(']: r#52
[#92 ')']: r#52
[#92 ',']: r#52
[#92 ';']: r#52
[#92 '=']: r#52
[#92 '{']: r#52
[#92 '}']: r#52
[#92 /\u200B_template_args_end/]: r#52
[#93 /\u200B_disambiguate_template/]: s#159
[#94 '(']: r#53
[#94 ')']: r#53
[#94 ',']: r#53
[#94 ';']: r#53
[#94 '=']: r#53
[#94 '{']: r#53
[#94 '}']: r#53
[#94 /\u200B_template_args_end/]: r#53
[#95 /\u200B_disambiguate_template/]: s#159
[#96 '(']: r#54
[#96 ')']: r#54
[#96 ',']: r#54
[#96 ';']: r#54
[#96 '=']: r#54
[#96 '{']: r#54
[#96 '}']: r#54
[#96 /\u200B_template_args_end/]: r#54
[#97 /\u200B_disambiguate_template/]: r#55
[#98 /\u200B_disambiguate_template/]: r#56
[#99 /\u200B_disambiguate_template/]: r#57
[#100 /\u200B_disambiguate_template/]: r#58
[#101 /\u200B_disambiguate_template/]: r#59
[#102 /\u200B_disambiguate_template/]: r#60
[#103 /\u200B_disambiguate_template/]: r#61
[#104 /\u200B_disambiguate_template/]: r#62
[#105 /\u200B_disambiguate_template/]: r#63
[#106 /\u200B_disambiguate_template/]: r#64
[#107 /\u200B_disambiguate_template/]: r#65
[#108 /\u200B_disambiguate_template/]: r#66
[#109 '!=']: r#67
[#109 '%']: r#67
[#109 '&&']: r#67
[#109 '&']: r#67
[#109 ')']: r#67
[#109 '*']: r#67
[#109 '+']: r#67
[#109 ',']: r#67
[#109 '-']: r#67
[#109 '.']: r#67
[#109 '/']: r#67
[#109 ':']: r#67
[#109 ';']: r#67
[#109 '==']: r#67
[#109 '[']: r#67
[#109 ']']: r#67
[#109 '^']: r#67
[#109 '{']: r#67
[#109 '|']: r#67
[#109 '||']: r#67
[#109 /\u200B_greater_than/]: r#67
[#109 /\u200B_greater_than_equal/]: r#67
[#109 /\u200B_less_than/]: r#67
[#109 /\u200B_less_than_equal/]: r#67
[#109 /\u200B_shift_left/]: r#67
[#109 /\u200B_shift_right/]: r#67
[#109 /\u200B_template_args_end/]: r#67
[#110 '!=']: r#68
[#110 '%']: r#68
[#110 '&&']: r#68
[#110 '&']: r#68
[#110 ')']: r#68
[#110 '*']: r#68
[#110 '+']: r#68
[#110 ',']: r#68
[#110 '-']: r#68
[#110 '.']: r#68
[#110 '/']: r#68
[#110 ':']: r#68
[#110 ';']: r#68
[#110 '==']: r#68
[#110 '[']: r#68
[#110 ']']: r#68
[#110 '^']: r#68
[#110 '{']: r#68
[#110 '|']: r#68
[#110 '||']: r#68
[#110 /\u200B_greater_than/]: r#68
[#110 /\u200B_greater_than_equal/]: r#68
[#110 /\u200B_less_than/]: r#68
[#110 /\u200B_less_than_equal/]: r#68
[#110 /\u200B_shift_left/]: r#68
[#110 /\u200B_shift_right/]: r#68
[#110 /\u200B_template_args_end/]: r#68
[#111 '!=']: r#69
[#111 '%']: r#69
[#111 '&&']: r#69
[#111 '&']: r#69
[#111 ')']: r#69
[#111 '*']: r#69
[#111 '+']: r#69
[#111 ',']: r#69
[#111 '-']: r#69
[#111 '.']: r#69
[#111 '/']: r#69
[#111 ':']: r#69
[#111 ';']: r#69
[#111 '==']: r#69
[#111 '[']: r#69
[#111 ']']: r#69
[#111 '^']: r#69
[#111 '{']: r#69
[#111 '|']: r#69
[#111 '||']: r#69
[#111 /\u200B_greater_than/]: r#69
[#111 /\u200B_greater_than_equal/]: r#69
[#111 /\u200B_less_than/]: r#69
[#111 /\u200B_less_than_equal/]: r#69
[#111 /\u200B_shift_left/]: r#69
[#111 /\u200B_shift_right/]: r#69
[#111 /\u200B_template_args_end/]: r#69
[#112 '!=']: r#70
[#112 '%']: r#70
[#112 '&&']: r#70
[#112 '&']: r#70
[#112 ')']: r#70
[#112 '*']: r#70
[#112 '+']: r#70
[#112 ',']: r#70
[#112 '-']: r#70
[#112 '.']: r#70
[#112 '/']: r#70
[#112 ':']: r#70
[#112 ';']: r#70
[#112 '==']: r#70
[#112 '[']: r#70
[#112 ']']: r#70
[#112 '^']: r#70
[#112 '{']: r#70
[#112 '|']: r#70
[#112 '||']: r#70
[#112 /\u200B_greater_than/]: r#70
[#112 /\u200B_greater_than_equal/]: r#70
[#112 /\u200B_less_than/]: r#70
[#112 /\u200B_less_than_equal/]: r#70
[#112 /\u200B_shift_left/]: r#70
[#112 /\u200B_shift_right/]: r#70
[#112 /\u200B_template_args_end/]: r#70
[#113 '!=']: r#71
[#113 '%']: r#71
[#113 '&&']: r#71
[#113 '&']: r#71
[#113 ')']: r#71
[#113 '*']: r#71
[#113 '+']: r#71
[#113 ',']: r#71
[#113 '-']: r#71
[#113 '.']: r#71
[#113 '/']: r#71
[#113 ':']: r#71
[#113 ';']: r#71
[#113 '==']: r#71
[#113 '[']: r#71
[#113 ']']: r#71
[#113 '^']: r#71
[#113 '{']: r#71
[#113 '|']: r#71
[#113 '||']: r#71
[#113 /\u200B_greater_than/]: r#71
[#113 /\u200B_greater_than_equal/]: r#71
[#113 /\u200B_less_than/]: r#71
[#113 /\u200B_less_than_equal/]: r#71
[#113 /\u200B_shift_left/]: r#71
[#113 /\u200B_shift_right/]: r#71
[#113 /\u200B_template_args_end/]: r#71
[#114 '!=']: r#72
[#114 '%']: r#72
[#114 '&&']: r#72
[#114 '&']: r#72
[#114 ')']: r#72
[#114 '*']: r#72
[#114 '+']: r#72
[#114 ',']: r#72
[#114 '-']: r#72
[#114 '.']: r#72
[#114 '/']: r#72
[#114 ':']: r#72
[#114 ';']: r#72
[#114 '==']: r#72
[#114 '[']: r#72
[#114 ']']: r#72
[#114 '^']: r#72
[#114 '{']: r#72
[#114 '|']: r#72
[#114 '||']: r#72
[#114 /\u200B_greater_than/]: r#72
[#114 /\u200B_greater_than_equal/]: r#72
[#114 /\u200B_less_than/]: r#72
[#114 /\u200B_less_than_equal/]: r#72
[#114 /\u200B_shift_left/]: r#72
[#114 /\u200B_shift_right/]: r#72
[#114 /\u200B_template_args_end/]: r#72
[#115 '!=']: r#73
[#115 '%']: r#73
[#115 '&&']: r#73
[#115 '&']: r#73
[#115 ')']: r#73
[#115 '*']: r#73
[#115 '+']: r#73
[#115 ',']: r#73
[#115 '-']: r#73
[#115 '.']: r#73
[#115 '/']: r#73
[#115 ':']: r#73
[#115 ';']: r#73
[#115 '==']: r#73
[#115 '[']: r#73
[#115 ']']: r#73
[#115 '^']: r#73
[#115 '{']: r#73
[#115 '|']: r#73
[#115 '||']: r#73
[#115 /\u200B_greater_than/]: r#73
[#115 /\u200B_greater_than_equal/]: r#73
[#115 /\u200B_less_than/]: r#73
[#115 /\u200B_less_than_equal/]: r#73
[#115 /\u200B_shift_left/]: r#73
[#115 /\u200B_shift_right/]: r#73
[#115 /\u200B_template_args_end/]: r#73
[#116 '!=']: r#74
[#116 '%']: r#74
[#116 '&&']: r#74
[#116 '&']: r#74
[#116 ')']: r#74
[#116 '*']: r#74
[#116 '+']: r#74
[#116 ',']: r#74
[#116 '-']: r#74
[#116 '.']: r#74
[#116 '/']: r#74
[#116 ':']: r#74
[#116 ';']: r#74
[#116 '==']: r#74
[#116 '[']: r#74
[#116 ']']: r#74
[#116 '^']: r#74
[#116 '{']: r#74
[#116 '|']: r#74
[#116 '||']: r#74
[#116 /\u200B_greater_than/]: r#74
[#116 /\u200B_greater_than_equal/]: r#74
[#116 /\u200B_less_than/]: r#74
[#116 /\u200B_less_than_equal/]: r#74
[#116 /\u200B_shift_left/]: r#74
[#116 /\u200B_shift_right/]: r#74
[#116 /\u200B_template_args_end/]: r#74
[#117 '!=']: r#75
[#117 '%']: r#75
[#117 '&&']: r#75
[#117 '&']: r#75
[#117 ')']: r#75
[#117 '*']: r#75
[#117 '+']: r#75
[#117 ',']: r#75
[#117 '-']: r#75
[#117 '.']: r#75
[#117 '/']: r#75
[#117 ':']: r#75
[#117 ';']: r#75
[#117 '==']: r#75
[#117 '[']: r#75
[#117 ']']: r#75
[#117 '^']: r#75
[#117 '{']: r#75
[#117 '|']: r#75
[#117 '||']: r#75
[#117 /\u200B_greater_than/]: r#75
[#117 /\u200B_greater_than_equal/]: r#75
[#117 /\u200B_less_than/]: r#75
[#117 /\u200B_less_than_equal/]: r#75
[#117 /\u200B_shift_left/]: r#75
[#117 /\u200B_shift_right/]: r#75
[#117 /\u200B_template_args_end/]: r#75
[#118 '!=']: r#76
[#118 '%']: r#76
[#118 '&&']: r#76
[#118 '&']: r#76
[#118 ')']: r#76
[#118 '*']: r#76
[#118 '+']: r#76
[#118 ',']: r#76
[#118 '-']: r#76
[#118 '.']: r#76
[#118 '/']: r#76
[#118 ':']: r#76
[#118 ';']: r#76
[#118 '==']: r#76
[#118 '[']: r#76
[#118 ']']: r#76
[#118 '^']: r#76
[#118 '{']: r#76
[#118 '|']: r#76
[#118 '||']: r#76
[#118 /\u200B_greater_than/]: r#76
[#118 /\u200B_greater_than_equal/]: r#76
[#118 /\u200B_less_than/]: r#76
[#118 /\u200B_less_than_equal/]: r#76
[#118 /\u200B_shift_left/]: r#76
[#118 /\u200B_shift_right/]: r#76
[#118 /\u200B_template_args_end/]: r#76
[#119 '!=']: r#77
[#119 '%']: r#77
[#119 '&&']: r#77
[#119 '&']: r#77
[#119 ')']: r#77
[#119 '*']: r#77
[#119 '+']: r#77
[#119 ',']: r#77
[#119 '-']: r#77
[#119 '.']: r#77
[#119 '/']: r#77
[#119 ':']: r#77
[#119 ';']: r#77
[#119 '==']: r#77
[#119 '[']: r#77
[#119 ']']: r#77
[#119 '^']: r#77
[#119 '{']: r#77
[#119 '|']: r#77
[#119 '||']: r#77
[#119 /\u200B_greater_than/]: r#77
[#119 /\u200B_greater_than_equal/]: r#77
[#119 /\u200B_less_than/]: r#77
[#119 /\u200B_less_than_equal/]: r#77
[#119 /\u200B_shift_left/]: r#77
[#119 /\u200B_shift_right/]: r#77
[#119 /\u200B_template_args_end/]: r#77
[#120 '(']: r#78
[#120 ')']: r#78
[#120 ',']: r#78
[#120 ';']: r#78
[#120 '=']: r#78
[#120 '{']: r#78
[#120 '}']: r#78
[#120 /\u200B_template_args_end/]: r#78
[#121 '(']: r#79
[#121 ')']: r#79
[#121 ',']: r#79
[#121 ';']: r#79
[#121 '=']: r#79
[#121 '{']: r#79
[#121 '}']: r#79
[#121 /\u200B_template_args_end/]: r#79
[#122 /\u200B_disambiguate_template/]: s#159
[#123 /\u200B_disambiguate_template/]: s#159
[#124 /\u200B_disambiguate_template/]: s#159
[#125 '(']: r#80
[#125 ')']: r#80
[#125 ',']: r#80
[#125 ';']: r#80
[#125 '=']: r#80
[#125 '{']: r#80
[#125 '}']: r#80
[#125 /\u200B_template_args_end/]: r#80
[#126 '(']: r#81
[#126 ')']: r#81
[#126 ',']: r#81
[#126 ';']: r#81
[#126 '=']: r#81
[#126 '{']: r#81
[#126 '}']: r#81
[#126 /\u200B_template_args_end/]: r#81
[#127 '(']: r#82
[#127 ')']: r#82
[#127 ',']: r#82
[#127 ';']: r#82
[#127 '=']: r#82
[#127 '{']: r#82
[#127 '}']: r#82
[#127 /\u200B_template_args_end/]: r#82
[#128 '(']: r#83
[#128 ')']: r#83
[#128 ',']: r#83
[#128 ';']: r#83
[#128 '=']: r#83
[#128 '{']: r#83
[#128 '}']: r#83
[#128 /\u200B_template_args_end/]: r#83
[#129 '(']: r#84
[#129 ')']: r#84
[#129 ',']: r#84
[#129 ';']: r#84
[#129 '=']: r#84
[#129 '{']: r#84
[#129 '}']: r#84
[#129 /\u200B_template_args_end/]: r#84
[#130 '(']: r#85
[#130 ')']: r#85
[#130 ',']: r#85
[#130 ';']: r#85
[#130 '=']: r#85
[#130 '{']: r#85
[#130 '}']: r#85
[#130 /\u200B_template_args_end/]: r#85
[#131 '(']: r#86
[#131 ')']: r#86
[#131 ',']: r#86
[#131 ';']: r#86
[#131 '=']: r#86
[#131 '{']: r#86
[#131 '}']: r#86
[#131 /\u200B_template_args_end/]: r#86
[#132 /\u200B_disambiguate_template/]: r#87
[#133 /\u200B_disambiguate_template/]: r#88
[#134 /\u200B_disambiguate_template/]: r#89
[#135 /\u200B_disambiguate_template/]: r#90
[#136 /\u200B_disambiguate_template/]: r#91
[#137 /\u200B_disambiguate_template/]: r#92
[#138 /\u200B_disambiguate_template/]: r#93
[#139 /\u200B_disambiguate_template/]: r#94
[#140 /\u200B_disambiguate_template/]: r#95
[#141 /\u200B_disambiguate_template/]: r#96
[#142 /\u200B_disambiguate_template/]: r#97
[#143 '{']: s#171
[#144 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#145 '{']: s#168
[#146 '=']: s#166
[#147 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#148 '=']: s#164
[#149 ':']: s#163
[#150 '=']: s#161
[#151 /\u200B_disambiguate_template/]: s#159
[#152 ';']: r#98
[#152 '@']: r#98
[#152 'alias']: r#98
[#152 'const']: r#98
[#152 'const_assert']: r#98
[#152 'fn']: r#98
[#152 'override']: r#98
[#152 'struct']: r#98
[#152 'var']: r#98
[#152 EndOfText]: r#98
[#153 ';']: r#99
[#153 '@']: r#99
[#153 'alias']: r#99
[#153 'const']: r#99
[#153 'const_assert']: r#99
[#153 'fn']: r#99
[#153 'override']: r#99
[#153 'struct']: r#99
[#153 'var']: r#99
[#153 EndOfText]: r#99
[#154 ';']: r#100
[#154 '@']: r#100
[#154 'alias']: r#100
[#154 'const']: r#100
[#154 'const_assert']: r#100
[#154 'fn']: r#100
[#154 'override']: r#100
[#154 'struct']: r#100
[#154 'var']: r#100
[#154 EndOfText]: r#100
[#155 ';']: r#101
[#155 '@']: r#101
[#155 'alias']: r#101
[#155 'const']: r#101
[#155 'const_assert']: r#101
[#155 'fn']: r#101
[#155 'override']: r#101
[#155 'struct']: r#101
[#155 'var']: r#101
[#155 EndOfText]: r#101
[#156 EndOfText]: r#102
[#157 ';']: r#103
[#157 '@']: r#103
[#157 'alias']: r#103
[#157 'const']: r#103
[#157 'const_assert']: r#103
[#157 'enable']: r#103
[#157 'fn']: r#103
[#157 'override']: r#103
[#157 'struct']: r#103
[#157 'var']: r#103
[#157 EndOfText]: r#103
[#158 /\u200B_template_args_start/]: s#282
[#159 '(']: r#104
[#159 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#104
[#159 /\u200B_template_args_start/]: r#104
[#160 ';']: r#105
[#161 '!']: s#62
[#161 '&']: s#65
[#161 '(']: s#77
[#161 '*']: s#64
[#161 '-']: s#61
[#161 'array']: s#81
[#161 'atomic']: s#95
[#161 'bitcast']: s#71
[#161 'bool']: s#88
[#161 'f16']: s#90
[#161 'f32']: s#89
[#161 'false']: s#87
[#161 'i32']: s#91
[#161 'mat2x2']: s#100
[#161 'mat2x3']: s#101
[#161 'mat2x4']: s#102
[#161 'mat3x2']: s#103
[#161 'mat3x3']: s#104
[#161 'mat3x4']: s#105
[#161 'mat4x2']: s#106
[#161 'mat4x3']: s#107
[#161 'mat4x4']: s#108
[#161 'ptr']: s#93
[#161 'sampler']: s#125
[#161 'sampler_comparison']: s#126
[#161 'texture_1d']: s#132
[#161 'texture_2d']: s#133
[#161 'texture_2d_array']: s#134
[#161 'texture_3d']: s#135
[#161 'texture_cube']: s#136
[#161 'texture_cube_array']: s#137
[#161 'texture_depth_2d']: s#127
[#161 'texture_depth_2d_array']: s#128
[#161 'texture_depth_cube']: s#129
[#161 'texture_depth_cube_array']: s#130
[#161 'texture_depth_multisampled_2d']: s#131
[#161 'texture_multisampled_2d']: s#138
[#161 'texture_storage_1d']: s#139
[#161 'texture_storage_2d']: s#140
[#161 'texture_storage_2d_array']: s#141
[#161 'texture_storage_3d']: s#142
[#161 'true']: s#86
[#161 'u32']: s#92
[#161 'vec2']: s#97
[#161 'vec3']: s#98
[#161 'vec4']: s#99
[#161 '~']: s#63
[#161 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#161 /0[fh]/]: s#112
[#161 /0[iu]?/]: s#109
[#161 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#161 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#161 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#161 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#161 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#161 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#161 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#161 /[1-9][0-9]*[fh]/]: s#113
[#161 /[1-9][0-9]*[iu]?/]: s#110
[#162 ';']: r#106
[#162 '=']: r#106
[#163 'array']: s#346
[#163 'atomic']: s#95
[#163 'bool']: s#88
[#163 'f16']: s#90
[#163 'f32']: s#89
[#163 'i32']: s#91
[#163 'mat2x2']: s#100
[#163 'mat2x3']: s#101
[#163 'mat2x4']: s#102
[#163 'mat3x2']: s#103
[#163 'mat3x3']: s#104
[#163 'mat3x4']: s#105
[#163 'mat4x2']: s#106
[#163 'mat4x3']: s#107
[#163 'mat4x4']: s#108
[#163 'ptr']: s#93
[#163 'sampler']: s#125
[#163 'sampler_comparison']: s#126
[#163 'texture_1d']: s#132
[#163 'texture_2d']: s#133
[#163 'texture_2d_array']: s#134
[#163 'texture_3d']: s#135
[#163 'texture_cube']: s#136
[#163 'texture_cube_array']: s#137
[#163 'texture_depth_2d']: s#127
[#163 'texture_depth_2d_array']: s#128
[#163 'texture_depth_cube']: s#129
[#163 'texture_depth_cube_array']: s#130
[#163 'texture_depth_multisampled_2d']: s#131
[#163 'texture_multisampled_2d']: s#138
[#163 'texture_storage_1d']: s#139
[#163 'texture_storage_2d']: s#140
[#163 'texture_storage_2d_array']: s#141
[#163 'texture_storage_3d']: s#142
[#163 'u32']: s#92
[#163 'vec2']: s#97
[#163 'vec3']: s#98
[#163 'vec4']: s#99
[#163 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#164 '!']: s#62
[#164 '&']: s#65
[#164 '(']: s#77
[#164 '*']: s#64
[#164 '-']: s#61
[#164 'array']: s#81
[#164 'atomic']: s#95
[#164 'bitcast']: s#71
[#164 'bool']: s#88
[#164 'f16']: s#90
[#164 'f32']: s#89
[#164 'false']: s#87
[#164 'i32']: s#91
[#164 'mat2x2']: s#100
[#164 'mat2x3']: s#101
[#164 'mat2x4']: s#102
[#164 'mat3x2']: s#103
[#164 'mat3x3']: s#104
[#164 'mat3x4']: s#105
[#164 'mat4x2']: s#106
[#164 'mat4x3']: s#107
[#164 'mat4x4']: s#108
[#164 'ptr']: s#93
[#164 'sampler']: s#125
[#164 'sampler_comparison']: s#126
[#164 'texture_1d']: s#132
[#164 'texture_2d']: s#133
[#164 'texture_2d_array']: s#134
[#164 'texture_3d']: s#135
[#164 'texture_cube']: s#136
[#164 'texture_cube_array']: s#137
[#164 'texture_depth_2d']: s#127
[#164 'texture_depth_2d_array']: s#128
[#164 'texture_depth_cube']: s#129
[#164 'texture_depth_cube_array']: s#130
[#164 'texture_depth_multisampled_2d']: s#131
[#164 'texture_multisampled_2d']: s#138
[#164 'texture_storage_1d']: s#139
[#164 'texture_storage_2d']: s#140
[#164 'texture_storage_2d_array']: s#141
[#164 'texture_storage_3d']: s#142
[#164 'true']: s#86
[#164 'u32']: s#92
[#164 'vec2']: s#97
[#164 'vec3']: s#98
[#164 'vec4']: s#99
[#164 '~']: s#63
[#164 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#164 /0[fh]/]: s#112
[#164 /0[iu]?/]: s#109
[#164 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#164 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#164 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#164 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#164 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#164 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#164 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#164 /[1-9][0-9]*[fh]/]: s#113
[#164 /[1-9][0-9]*[iu]?/]: s#110
[#165 '=']: s#348
[#166 'array']: s#346
[#166 'atomic']: s#95
[#166 'bool']: s#88
[#166 'f16']: s#90
[#166 'f32']: s#89
[#166 'i32']: s#91
[#166 'mat2x2']: s#100
[#166 'mat2x3']: s#101
[#166 'mat2x4']: s#102
[#166 'mat3x2']: s#103
[#166 'mat3x3']: s#104
[#166 'mat3x4']: s#105
[#166 'mat4x2']: s#106
[#166 'mat4x3']: s#107
[#166 'mat4x4']: s#108
[#166 'ptr']: s#93
[#166 'sampler']: s#125
[#166 'sampler_comparison']: s#126
[#166 'texture_1d']: s#132
[#166 'texture_2d']: s#133
[#166 'texture_2d_array']: s#134
[#166 'texture_3d']: s#135
[#166 'texture_cube']: s#136
[#166 'texture_cube_array']: s#137
[#166 'texture_depth_2d']: s#127
[#166 'texture_depth_2d_array']: s#128
[#166 'texture_depth_cube']: s#129
[#166 'texture_depth_cube_array']: s#130
[#166 'texture_depth_multisampled_2d']: s#131
[#166 'texture_multisampled_2d']: s#138
[#166 'texture_storage_1d']: s#139
[#166 'texture_storage_2d']: s#140
[#166 'texture_storage_2d_array']: s#141
[#166 'texture_storage_3d']: s#142
[#166 'u32']: s#92
[#166 'vec2']: s#97
[#166 'vec3']: s#98
[#166 'vec4']: s#99
[#166 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#167 ';']: r#107
[#167 '@']: r#107
[#167 'alias']: r#107
[#167 'const']: r#107
[#167 'const_assert']: r#107
[#167 'fn']: r#107
[#167 'override']: r#107
[#167 'struct']: r#107
[#167 'var']: r#107
[#167 EndOfText]: r#107
[#168 '@']: s#30
[#169 '(']: s#336
[#170 ';']: r#108
[#170 '@']: r#108
[#170 'alias']: r#108
[#170 'const']: r#108
[#170 'const_assert']: r#108
[#170 'fn']: r#108
[#170 'override']: r#108
[#170 'struct']: r#108
[#170 'var']: r#108
[#170 EndOfText]: r#108
[#171 '&']: s#334
[#171 '(']: s#335
[#171 '*']: s#333
[#171 ';']: s#298
[#171 '_']: s#331
[#171 'array']: s#81
[#171 'atomic']: s#95
[#171 'bool']: s#88
[#171 'break']: s#323
[#171 'const']: s#322
[#171 'const_assert']: s#25
[#171 'continue']: s#324
[#171 'discard']: s#309
[#171 'f16']: s#90
[#171 'f32']: s#89
[#171 'for']: s#317
[#171 'i32']: s#91
[#171 'if']: s#328
[#171 'let']: s#321
[#171 'loop']: s#316
[#171 'mat2x2']: s#100
[#171 'mat2x3']: s#101
[#171 'mat2x4']: s#102
[#171 'mat3x2']: s#103
[#171 'mat3x3']: s#104
[#171 'mat3x4']: s#105
[#171 'mat4x2']: s#106
[#171 'mat4x3']: s#107
[#171 'mat4x4']: s#108
[#171 'ptr']: s#93
[#171 'return']: s#313
[#171 'sampler']: s#125
[#171 'sampler_comparison']: s#126
[#171 'switch']: s#315
[#171 'texture_1d']: s#132
[#171 'texture_2d']: s#133
[#171 'texture_2d_array']: s#134
[#171 'texture_3d']: s#135
[#171 'texture_cube']: s#136
[#171 'texture_cube_array']: s#137
[#171 'texture_depth_2d']: s#127
[#171 'texture_depth_2d_array']: s#128
[#171 'texture_depth_cube']: s#129
[#171 'texture_depth_cube_array']: s#130
[#171 'texture_depth_multisampled_2d']: s#131
[#171 'texture_multisampled_2d']: s#138
[#171 'texture_storage_1d']: s#139
[#171 'texture_storage_2d']: s#140
[#171 'texture_storage_2d_array']: s#141
[#171 'texture_storage_3d']: s#142
[#171 'u32']: s#92
[#171 'var']: s#151
[#171 'vec2']: s#97
[#171 'vec3']: s#98
[#171 'vec4']: s#99
[#171 'while']: s#318
[#171 '{']: s#171
[#171 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#172 /\u200B_template_args_start/]: s#282
[#173 /\u200B_template_args_start/]: s#282
[#174 /\u200B_template_args_start/]: s#282
[#175 /\u200B_template_args_start/]: s#282
[#176 /\u200B_template_args_start/]: s#282
[#177 '(']: r#109
[#177 /\u200B_template_args_start/]: s#282
[#178 '(']: r#110
[#178 /\u200B_template_args_start/]: s#282
[#179 '(']: r#111
[#179 /\u200B_template_args_start/]: s#282
[#180 ')']: s#286
[#181 '!=']: r#112
[#181 '%']: r#112
[#181 '&&']: r#112
[#181 '&']: r#112
[#181 ')']: r#112
[#181 '*']: r#112
[#181 '+']: r#112
[#181 ',']: r#112
[#181 '-']: r#112
[#181 '.']: r#112
[#181 '/']: r#112
[#181 ':']: r#112
[#181 ';']: r#112
[#181 '==']: r#112
[#181 '[']: r#112
[#181 ']']: r#112
[#181 '^']: r#112
[#181 '{']: r#112
[#181 '|']: r#112
[#181 '||']: r#112
[#181 /\u200B_greater_than/]: r#112
[#181 /\u200B_greater_than_equal/]: r#112
[#181 /\u200B_less_than/]: r#112
[#181 /\u200B_less_than_equal/]: r#112
[#181 /\u200B_shift_left/]: r#112
[#181 /\u200B_shift_right/]: r#112
[#181 /\u200B_template_args_end/]: r#112
[#182 '!']: s#62
[#182 '&']: s#65
[#182 '(']: s#77
[#182 '*']: s#64
[#182 '-']: s#61
[#182 'array']: s#81
[#182 'atomic']: s#95
[#182 'bitcast']: s#71
[#182 'bool']: s#88
[#182 'f16']: s#90
[#182 'f32']: s#89
[#182 'false']: s#87
[#182 'i32']: s#91
[#182 'mat2x2']: s#100
[#182 'mat2x3']: s#101
[#182 'mat2x4']: s#102
[#182 'mat3x2']: s#103
[#182 'mat3x3']: s#104
[#182 'mat3x4']: s#105
[#182 'mat4x2']: s#106
[#182 'mat4x3']: s#107
[#182 'mat4x4']: s#108
[#182 'ptr']: s#93
[#182 'sampler']: s#125
[#182 'sampler_comparison']: s#126
[#182 'texture_1d']: s#132
[#182 'texture_2d']: s#133
[#182 'texture_2d_array']: s#134
[#182 'texture_3d']: s#135
[#182 'texture_cube']: s#136
[#182 'texture_cube_array']: s#137
[#182 'texture_depth_2d']: s#127
[#182 'texture_depth_2d_array']: s#128
[#182 'texture_depth_cube']: s#129
[#182 'texture_depth_cube_array']: s#130
[#182 'texture_depth_multisampled_2d']: s#131
[#182 'texture_multisampled_2d']: s#138
[#182 'texture_storage_1d']: s#139
[#182 'texture_storage_2d']: s#140
[#182 'texture_storage_2d_array']: s#141
[#182 'texture_storage_3d']: s#142
[#182 'true']: s#86
[#182 'u32']: s#92
[#182 'vec2']: s#97
[#182 'vec3']: s#98
[#182 'vec4']: s#99
[#182 '~']: s#63
[#182 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#182 /0[fh]/]: s#112
[#182 /0[iu]?/]: s#109
[#182 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#182 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#182 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#182 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#182 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#182 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#182 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#182 /[1-9][0-9]*[fh]/]: s#113
[#182 /[1-9][0-9]*[iu]?/]: s#110
[#183 /\u200B_template_args_start/]: s#282
[#184 '!=']: r#113
[#184 '%']: r#113
[#184 '&&']: r#113
[#184 '&']: r#113
[#184 ')']: r#113
[#184 '*']: r#113
[#184 '+']: r#113
[#184 ',']: r#113
[#184 '-']: r#113
[#184 '/']: r#113
[#184 ':']: r#113
[#184 ';']: r#113
[#184 '==']: r#113
[#184 ']']: r#113
[#184 '^']: r#113
[#184 '{']: r#113
[#184 '|']: r#113
[#184 '||']: r#113
[#184 /\u200B_greater_than/]: r#113
[#184 /\u200B_greater_than_equal/]: r#113
[#184 /\u200B_less_than/]: r#113
[#184 /\u200B_less_than_equal/]: r#113
[#184 /\u200B_shift_left/]: r#113
[#184 /\u200B_shift_right/]: r#113
[#184 /\u200B_template_args_end/]: r#113
[#185 '!=']: r#114
[#185 '%']: r#114
[#185 '&&']: r#114
[#185 '&']: r#114
[#185 ')']: r#114
[#185 '*']: r#114
[#185 '+']: r#114
[#185 ',']: r#114
[#185 '-']: r#114
[#185 '/']: r#114
[#185 ':']: r#114
[#185 ';']: r#114
[#185 '==']: r#114
[#185 ']']: r#114
[#185 '^']: r#114
[#185 '{']: r#114
[#185 '|']: r#114
[#185 '||']: r#114
[#185 /\u200B_greater_than/]: r#114
[#185 /\u200B_greater_than_equal/]: r#114
[#185 /\u200B_less_than/]: r#114
[#185 /\u200B_less_than_equal/]: r#114
[#185 /\u200B_shift_left/]: r#114
[#185 /\u200B_shift_right/]: r#114
[#185 /\u200B_template_args_end/]: r#114
[#186 '!']: s#62
[#186 '&']: s#65
[#186 '(']: s#77
[#186 '*']: s#64
[#186 '-']: s#61
[#186 'array']: s#81
[#186 'atomic']: s#95
[#186 'bitcast']: s#71
[#186 'bool']: s#88
[#186 'f16']: s#90
[#186 'f32']: s#89
[#186 'false']: s#87
[#186 'i32']: s#91
[#186 'mat2x2']: s#100
[#186 'mat2x3']: s#101
[#186 'mat2x4']: s#102
[#186 'mat3x2']: s#103
[#186 'mat3x3']: s#104
[#186 'mat3x4']: s#105
[#186 'mat4x2']: s#106
[#186 'mat4x3']: s#107
[#186 'mat4x4']: s#108
[#186 'ptr']: s#93
[#186 'sampler']: s#125
[#186 'sampler_comparison']: s#126
[#186 'texture_1d']: s#132
[#186 'texture_2d']: s#133
[#186 'texture_2d_array']: s#134
[#186 'texture_3d']: s#135
[#186 'texture_cube']: s#136
[#186 'texture_cube_array']: s#137
[#186 'texture_depth_2d']: s#127
[#186 'texture_depth_2d_array']: s#128
[#186 'texture_depth_cube']: s#129
[#186 'texture_depth_cube_array']: s#130
[#186 'texture_depth_multisampled_2d']: s#131
[#186 'texture_multisampled_2d']: s#138
[#186 'texture_storage_1d']: s#139
[#186 'texture_storage_2d']: s#140
[#186 'texture_storage_2d_array']: s#141
[#186 'texture_storage_3d']: s#142
[#186 'true']: s#86
[#186 'u32']: s#92
[#186 'vec2']: s#97
[#186 'vec3']: s#98
[#186 'vec4']: s#99
[#186 '~']: s#63
[#186 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#186 /0[fh]/]: s#112
[#186 /0[iu]?/]: s#109
[#186 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#186 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#186 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#186 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#186 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#186 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#186 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#186 /[1-9][0-9]*[fh]/]: s#113
[#186 /[1-9][0-9]*[iu]?/]: s#110
[#187 '/[rgba]/']: s#272
[#187 '/[rgba][rgba]/']: s#273
[#187 '/[rgba][rgba][rgba]/']: s#274
[#187 '/[rgba][rgba][rgba][rgba]/']: s#275
[#187 '/[xyzw]/']: s#276
[#187 '/[xyzw][xyzw]/']: s#277
[#187 '/[xyzw][xyzw][xyzw]/']: s#278
[#187 '/[xyzw][xyzw][xyzw][xyzw]/']: s#279
[#187 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#271
[#188 '!=']: r#115
[#188 '%']: r#115
[#188 '&&']: r#115
[#188 '&']: r#115
[#188 ')']: r#115
[#188 '*']: r#115
[#188 '+']: r#115
[#188 ',']: r#115
[#188 '-']: r#115
[#188 '/']: r#115
[#188 ':']: r#115
[#188 ';']: r#115
[#188 '==']: r#115
[#188 ']']: r#115
[#188 '^']: r#115
[#188 '{']: r#115
[#188 '|']: r#115
[#188 '||']: r#115
[#188 /\u200B_greater_than/]: r#115
[#188 /\u200B_greater_than_equal/]: r#115
[#188 /\u200B_less_than/]: r#115
[#188 /\u200B_less_than_equal/]: r#115
[#188 /\u200B_shift_left/]: r#115
[#188 /\u200B_shift_right/]: r#115
[#188 /\u200B_template_args_end/]: r#115
[#189 '!=']: r#116
[#189 '%']: r#116
[#189 '&&']: r#116
[#189 '&']: r#116
[#189 ')']: r#116
[#189 '*']: r#116
[#189 '+']: r#116
[#189 ',']: r#116
[#189 '-']: r#116
[#189 '/']: r#116
[#189 ':']: r#116
[#189 ';']: r#116
[#189 '==']: r#116
[#189 ']']: r#116
[#189 '^']: r#116
[#189 '{']: r#116
[#189 '|']: r#116
[#189 '||']: r#116
[#189 /\u200B_greater_than/]: r#116
[#189 /\u200B_greater_than_equal/]: r#116
[#189 /\u200B_less_than/]: r#116
[#189 /\u200B_less_than_equal/]: r#116
[#189 /\u200B_shift_left/]: r#116
[#189 /\u200B_shift_right/]: r#116
[#189 /\u200B_template_args_end/]: r#116
[#190 '!=']: r#117
[#190 '%']: r#117
[#190 '&&']: r#117
[#190 '&']: r#117
[#190 ')']: r#117
[#190 '*']: r#117
[#190 '+']: r#117
[#190 ',']: r#117
[#190 '-']: r#117
[#190 '/']: r#117
[#190 ':']: r#117
[#190 ';']: r#117
[#190 '==']: r#117
[#190 ']']: r#117
[#190 '^']: r#117
[#190 '{']: r#117
[#190 '|']: r#117
[#190 '||']: r#117
[#190 /\u200B_greater_than/]: r#117
[#190 /\u200B_greater_than_equal/]: r#117
[#190 /\u200B_less_than/]: r#117
[#190 /\u200B_less_than_equal/]: r#117
[#190 /\u200B_shift_left/]: r#117
[#190 /\u200B_shift_right/]: r#117
[#190 /\u200B_template_args_end/]: r#117
[#191 '!=']: r#118
[#191 '%']: r#118
[#191 '&&']: r#118
[#191 '&']: r#118
[#191 ')']: r#118
[#191 '*']: r#118
[#191 '+']: r#118
[#191 ',']: r#118
[#191 '-']: r#118
[#191 '/']: r#118
[#191 ':']: r#118
[#191 ';']: r#118
[#191 '==']: r#118
[#191 ']']: r#118
[#191 '^']: r#118
[#191 '{']: r#118
[#191 '|']: r#118
[#191 '||']: r#118
[#191 /\u200B_greater_than/]: r#118
[#191 /\u200B_greater_than_equal/]: r#118
[#191 /\u200B_less_than/]: r#118
[#191 /\u200B_less_than_equal/]: r#118
[#191 /\u200B_shift_left/]: r#118
[#191 /\u200B_shift_right/]: r#118
[#191 /\u200B_template_args_end/]: r#118
[#192 '!=']: r#119
[#192 '%']: r#119
[#192 '&&']: r#119
[#192 '&']: r#119
[#192 ')']: r#119
[#192 '*']: r#119
[#192 '+']: r#119
[#192 ',']: r#119
[#192 '-']: r#119
[#192 '/']: r#119
[#192 ':']: r#119
[#192 ';']: r#119
[#192 '==']: r#119
[#192 ']']: r#119
[#192 '^']: r#119
[#192 '{']: r#119
[#192 '|']: r#119
[#192 '||']: r#119
[#192 /\u200B_greater_than/]: r#119
[#192 /\u200B_greater_than_equal/]: r#119
[#192 /\u200B_less_than/]: r#119
[#192 /\u200B_less_than_equal/]: r#119
[#192 /\u200B_shift_left/]: r#119
[#192 /\u200B_shift_right/]: r#119
[#192 /\u200B_template_args_end/]: r#119
[#193 '!']: s#62
[#193 '&']: s#65
[#193 '(']: s#77
[#193 '*']: s#64
[#193 '-']: s#61
[#193 'array']: s#81
[#193 'atomic']: s#95
[#193 'bitcast']: s#71
[#193 'bool']: s#88
[#193 'f16']: s#90
[#193 'f32']: s#89
[#193 'false']: s#87
[#193 'i32']: s#91
[#193 'mat2x2']: s#100
[#193 'mat2x3']: s#101
[#193 'mat2x4']: s#102
[#193 'mat3x2']: s#103
[#193 'mat3x3']: s#104
[#193 'mat3x4']: s#105
[#193 'mat4x2']: s#106
[#193 'mat4x3']: s#107
[#193 'mat4x4']: s#108
[#193 'ptr']: s#93
[#193 'sampler']: s#125
[#193 'sampler_comparison']: s#126
[#193 'texture_1d']: s#132
[#193 'texture_2d']: s#133
[#193 'texture_2d_array']: s#134
[#193 'texture_3d']: s#135
[#193 'texture_cube']: s#136
[#193 'texture_cube_array']: s#137
[#193 'texture_depth_2d']: s#127
[#193 'texture_depth_2d_array']: s#128
[#193 'texture_depth_cube']: s#129
[#193 'texture_depth_cube_array']: s#130
[#193 'texture_depth_multisampled_2d']: s#131
[#193 'texture_multisampled_2d']: s#138
[#193 'texture_storage_1d']: s#139
[#193 'texture_storage_2d']: s#140
[#193 'texture_storage_2d_array']: s#141
[#193 'texture_storage_3d']: s#142
[#193 'true']: s#86
[#193 'u32']: s#92
[#193 'vec2']: s#97
[#193 'vec3']: s#98
[#193 'vec4']: s#99
[#193 '~']: s#63
[#193 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#193 /0[fh]/]: s#112
[#193 /0[iu]?/]: s#109
[#193 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#193 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#193 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#193 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#193 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#193 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#193 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#193 /[1-9][0-9]*[fh]/]: s#113
[#193 /[1-9][0-9]*[iu]?/]: s#110
[#194 '!']: r#120
[#194 '&']: r#120
[#194 '(']: r#120
[#194 '*']: r#120
[#194 '-']: r#120
[#194 'array']: r#120
[#194 'atomic']: r#120
[#194 'bitcast']: r#120
[#194 'bool']: r#120
[#194 'f16']: r#120
[#194 'f32']: r#120
[#194 'false']: r#120
[#194 'i32']: r#120
[#194 'mat2x2']: r#120
[#194 'mat2x3']: r#120
[#194 'mat2x4']: r#120
[#194 'mat3x2']: r#120
[#194 'mat3x3']: r#120
[#194 'mat3x4']: r#120
[#194 'mat4x2']: r#120
[#194 'mat4x3']: r#120
[#194 'mat4x4']: r#120
[#194 'ptr']: r#120
[#194 'sampler']: r#120
[#194 'sampler_comparison']: r#120
[#194 'texture_1d']: r#120
[#194 'texture_2d']: r#120
[#194 'texture_2d_array']: r#120
[#194 'texture_3d']: r#120
[#194 'texture_cube']: r#120
[#194 'texture_cube_array']: r#120
[#194 'texture_depth_2d']: r#120
[#194 'texture_depth_2d_array']: r#120
[#194 'texture_depth_cube']: r#120
[#194 'texture_depth_cube_array']: r#120
[#194 'texture_depth_multisampled_2d']: r#120
[#194 'texture_multisampled_2d']: r#120
[#194 'texture_storage_1d']: r#120
[#194 'texture_storage_2d']: r#120
[#194 'texture_storage_2d_array']: r#120
[#194 'texture_storage_3d']: r#120
[#194 'true']: r#120
[#194 'u32']: r#120
[#194 'vec2']: r#120
[#194 'vec3']: r#120
[#194 'vec4']: r#120
[#194 '~']: r#120
[#194 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#120
[#194 /0[fh]/]: r#120
[#194 /0[iu]?/]: r#120
[#194 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#120
[#194 /0[xX][0-9a-fA-F]+[iu]?/]: r#120
[#194 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#120
[#194 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#120
[#194 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#120
[#194 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#120
[#194 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#120
[#194 /[1-9][0-9]*[fh]/]: r#120
[#194 /[1-9][0-9]*[iu]?/]: r#120
[#195 '!']: r#121
[#195 '&']: r#121
[#195 '(']: r#121
[#195 '*']: r#121
[#195 '-']: r#121
[#195 'array']: r#121
[#195 'atomic']: r#121
[#195 'bitcast']: r#121
[#195 'bool']: r#121
[#195 'f16']: r#121
[#195 'f32']: r#121
[#195 'false']: r#121
[#195 'i32']: r#121
[#195 'mat2x2']: r#121
[#195 'mat2x3']: r#121
[#195 'mat2x4']: r#121
[#195 'mat3x2']: r#121
[#195 'mat3x3']: r#121
[#195 'mat3x4']: r#121
[#195 'mat4x2']: r#121
[#195 'mat4x3']: r#121
[#195 'mat4x4']: r#121
[#195 'ptr']: r#121
[#195 'sampler']: r#121
[#195 'sampler_comparison']: r#121
[#195 'texture_1d']: r#121
[#195 'texture_2d']: r#121
[#195 'texture_2d_array']: r#121
[#195 'texture_3d']: r#121
[#195 'texture_cube']: r#121
[#195 'texture_cube_array']: r#121
[#195 'texture_depth_2d']: r#121
[#195 'texture_depth_2d_array']: r#121
[#195 'texture_depth_cube']: r#121
[#195 'texture_depth_cube_array']: r#121
[#195 'texture_depth_multisampled_2d']: r#121
[#195 'texture_multisampled_2d']: r#121
[#195 'texture_storage_1d']: r#121
[#195 'texture_storage_2d']: r#121
[#195 'texture_storage_2d_array']: r#121
[#195 'texture_storage_3d']: r#121
[#195 'true']: r#121
[#195 'u32']: r#121
[#195 'vec2']: r#121
[#195 'vec3']: r#121
[#195 'vec4']: r#121
[#195 '~']: r#121
[#195 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#121
[#195 /0[fh]/]: r#121
[#195 /0[iu]?/]: r#121
[#195 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#121
[#195 /0[xX][0-9a-fA-F]+[iu]?/]: r#121
[#195 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#121
[#195 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#121
[#195 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#121
[#195 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#121
[#195 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#121
[#195 /[1-9][0-9]*[fh]/]: r#121
[#195 /[1-9][0-9]*[iu]?/]: r#121
[#196 '!']: r#122
[#196 '&']: r#122
[#196 '(']: r#122
[#196 '*']: r#122
[#196 '-']: r#122
[#196 'array']: r#122
[#196 'atomic']: r#122
[#196 'bitcast']: r#122
[#196 'bool']: r#122
[#196 'f16']: r#122
[#196 'f32']: r#122
[#196 'false']: r#122
[#196 'i32']: r#122
[#196 'mat2x2']: r#122
[#196 'mat2x3']: r#122
[#196 'mat2x4']: r#122
[#196 'mat3x2']: r#122
[#196 'mat3x3']: r#122
[#196 'mat3x4']: r#122
[#196 'mat4x2']: r#122
[#196 'mat4x3']: r#122
[#196 'mat4x4']: r#122
[#196 'ptr']: r#122
[#196 'sampler']: r#122
[#196 'sampler_comparison']: r#122
[#196 'texture_1d']: r#122
[#196 'texture_2d']: r#122
[#196 'texture_2d_array']: r#122
[#196 'texture_3d']: r#122
[#196 'texture_cube']: r#122
[#196 'texture_cube_array']: r#122
[#196 'texture_depth_2d']: r#122
[#196 'texture_depth_2d_array']: r#122
[#196 'texture_depth_cube']: r#122
[#196 'texture_depth_cube_array']: r#122
[#196 'texture_depth_multisampled_2d']: r#122
[#196 'texture_multisampled_2d']: r#122
[#196 'texture_storage_1d']: r#122
[#196 'texture_storage_2d']: r#122
[#196 'texture_storage_2d_array']: r#122
[#196 'texture_storage_3d']: r#122
[#196 'true']: r#122
[#196 'u32']: r#122
[#196 'vec2']: r#122
[#196 'vec3']: r#122
[#196 'vec4']: r#122
[#196 '~']: r#122
[#196 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#122
[#196 /0[fh]/]: r#122
[#196 /0[iu]?/]: r#122
[#196 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#122
[#196 /0[xX][0-9a-fA-F]+[iu]?/]: r#122
[#196 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#122
[#196 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#122
[#196 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#122
[#196 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#122
[#196 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#122
[#196 /[1-9][0-9]*[fh]/]: r#122
[#196 /[1-9][0-9]*[iu]?/]: r#122
[#197 '!']: s#62
[#197 '&']: s#65
[#197 '(']: s#77
[#197 '*']: s#64
[#197 '-']: s#61
[#197 'array']: s#81
[#197 'atomic']: s#95
[#197 'bitcast']: s#71
[#197 'bool']: s#88
[#197 'f16']: s#90
[#197 'f32']: s#89
[#197 'false']: s#87
[#197 'i32']: s#91
[#197 'mat2x2']: s#100
[#197 'mat2x3']: s#101
[#197 'mat2x4']: s#102
[#197 'mat3x2']: s#103
[#197 'mat3x3']: s#104
[#197 'mat3x4']: s#105
[#197 'mat4x2']: s#106
[#197 'mat4x3']: s#107
[#197 'mat4x4']: s#108
[#197 'ptr']: s#93
[#197 'sampler']: s#125
[#197 'sampler_comparison']: s#126
[#197 'texture_1d']: s#132
[#197 'texture_2d']: s#133
[#197 'texture_2d_array']: s#134
[#197 'texture_3d']: s#135
[#197 'texture_cube']: s#136
[#197 'texture_cube_array']: s#137
[#197 'texture_depth_2d']: s#127
[#197 'texture_depth_2d_array']: s#128
[#197 'texture_depth_cube']: s#129
[#197 'texture_depth_cube_array']: s#130
[#197 'texture_depth_multisampled_2d']: s#131
[#197 'texture_multisampled_2d']: s#138
[#197 'texture_storage_1d']: s#139
[#197 'texture_storage_2d']: s#140
[#197 'texture_storage_2d_array']: s#141
[#197 'texture_storage_3d']: s#142
[#197 'true']: s#86
[#197 'u32']: s#92
[#197 'vec2']: s#97
[#197 'vec3']: s#98
[#197 'vec4']: s#99
[#197 '~']: s#63
[#197 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#197 /0[fh]/]: s#112
[#197 /0[iu]?/]: s#109
[#197 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#197 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#197 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#197 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#197 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#197 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#197 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#197 /[1-9][0-9]*[fh]/]: s#113
[#197 /[1-9][0-9]*[iu]?/]: s#110
[#198 '!']: s#62
[#198 '&']: s#65
[#198 '(']: s#77
[#198 '*']: s#64
[#198 '-']: s#61
[#198 'array']: s#81
[#198 'atomic']: s#95
[#198 'bitcast']: s#71
[#198 'bool']: s#88
[#198 'f16']: s#90
[#198 'f32']: s#89
[#198 'false']: s#87
[#198 'i32']: s#91
[#198 'mat2x2']: s#100
[#198 'mat2x3']: s#101
[#198 'mat2x4']: s#102
[#198 'mat3x2']: s#103
[#198 'mat3x3']: s#104
[#198 'mat3x4']: s#105
[#198 'mat4x2']: s#106
[#198 'mat4x3']: s#107
[#198 'mat4x4']: s#108
[#198 'ptr']: s#93
[#198 'sampler']: s#125
[#198 'sampler_comparison']: s#126
[#198 'texture_1d']: s#132
[#198 'texture_2d']: s#133
[#198 'texture_2d_array']: s#134
[#198 'texture_3d']: s#135
[#198 'texture_cube']: s#136
[#198 'texture_cube_array']: s#137
[#198 'texture_depth_2d']: s#127
[#198 'texture_depth_2d_array']: s#128
[#198 'texture_depth_cube']: s#129
[#198 'texture_depth_cube_array']: s#130
[#198 'texture_depth_multisampled_2d']: s#131
[#198 'texture_multisampled_2d']: s#138
[#198 'texture_storage_1d']: s#139
[#198 'texture_storage_2d']: s#140
[#198 'texture_storage_2d_array']: s#141
[#198 'texture_storage_3d']: s#142
[#198 'true']: s#86
[#198 'u32']: s#92
[#198 'vec2']: s#97
[#198 'vec3']: s#98
[#198 'vec4']: s#99
[#198 '~']: s#63
[#198 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#198 /0[fh]/]: s#112
[#198 /0[iu]?/]: s#109
[#198 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#198 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#198 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#198 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#198 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#198 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#198 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#198 /[1-9][0-9]*[fh]/]: s#113
[#198 /[1-9][0-9]*[iu]?/]: s#110
[#199 '!']: r#123
[#199 '&']: r#123
[#199 '(']: r#123
[#199 '*']: r#123
[#199 '-']: r#123
[#199 'array']: r#123
[#199 'atomic']: r#123
[#199 'bitcast']: r#123
[#199 'bool']: r#123
[#199 'f16']: r#123
[#199 'f32']: r#123
[#199 'false']: r#123
[#199 'i32']: r#123
[#199 'mat2x2']: r#123
[#199 'mat2x3']: r#123
[#199 'mat2x4']: r#123
[#199 'mat3x2']: r#123
[#199 'mat3x3']: r#123
[#199 'mat3x4']: r#123
[#199 'mat4x2']: r#123
[#199 'mat4x3']: r#123
[#199 'mat4x4']: r#123
[#199 'ptr']: r#123
[#199 'sampler']: r#123
[#199 'sampler_comparison']: r#123
[#199 'texture_1d']: r#123
[#199 'texture_2d']: r#123
[#199 'texture_2d_array']: r#123
[#199 'texture_3d']: r#123
[#199 'texture_cube']: r#123
[#199 'texture_cube_array']: r#123
[#199 'texture_depth_2d']: r#123
[#199 'texture_depth_2d_array']: r#123
[#199 'texture_depth_cube']: r#123
[#199 'texture_depth_cube_array']: r#123
[#199 'texture_depth_multisampled_2d']: r#123
[#199 'texture_multisampled_2d']: r#123
[#199 'texture_storage_1d']: r#123
[#199 'texture_storage_2d']: r#123
[#199 'texture_storage_2d_array']: r#123
[#199 'texture_storage_3d']: r#123
[#199 'true']: r#123
[#199 'u32']: r#123
[#199 'vec2']: r#123
[#199 'vec3']: r#123
[#199 'vec4']: r#123
[#199 '~']: r#123
[#199 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#123
[#199 /0[fh]/]: r#123
[#199 /0[iu]?/]: r#123
[#199 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#123
[#199 /0[xX][0-9a-fA-F]+[iu]?/]: r#123
[#199 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#123
[#199 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#123
[#199 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#123
[#199 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#123
[#199 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#123
[#199 /[1-9][0-9]*[fh]/]: r#123
[#199 /[1-9][0-9]*[iu]?/]: r#123
[#200 '!']: r#124
[#200 '&']: r#124
[#200 '(']: r#124
[#200 '*']: r#124
[#200 '-']: r#124
[#200 'array']: r#124
[#200 'atomic']: r#124
[#200 'bitcast']: r#124
[#200 'bool']: r#124
[#200 'f16']: r#124
[#200 'f32']: r#124
[#200 'false']: r#124
[#200 'i32']: r#124
[#200 'mat2x2']: r#124
[#200 'mat2x3']: r#124
[#200 'mat2x4']: r#124
[#200 'mat3x2']: r#124
[#200 'mat3x3']: r#124
[#200 'mat3x4']: r#124
[#200 'mat4x2']: r#124
[#200 'mat4x3']: r#124
[#200 'mat4x4']: r#124
[#200 'ptr']: r#124
[#200 'sampler']: r#124
[#200 'sampler_comparison']: r#124
[#200 'texture_1d']: r#124
[#200 'texture_2d']: r#124
[#200 'texture_2d_array']: r#124
[#200 'texture_3d']: r#124
[#200 'texture_cube']: r#124
[#200 'texture_cube_array']: r#124
[#200 'texture_depth_2d']: r#124
[#200 'texture_depth_2d_array']: r#124
[#200 'texture_depth_cube']: r#124
[#200 'texture_depth_cube_array']: r#124
[#200 'texture_depth_multisampled_2d']: r#124
[#200 'texture_multisampled_2d']: r#124
[#200 'texture_storage_1d']: r#124
[#200 'texture_storage_2d']: r#124
[#200 'texture_storage_2d_array']: r#124
[#200 'texture_storage_3d']: r#124
[#200 'true']: r#124
[#200 'u32']: r#124
[#200 'vec2']: r#124
[#200 'vec3']: r#124
[#200 'vec4']: r#124
[#200 '~']: r#124
[#200 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#124
[#200 /0[fh]/]: r#124
[#200 /0[iu]?/]: r#124
[#200 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#124
[#200 /0[xX][0-9a-fA-F]+[iu]?/]: r#124
[#200 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#124
[#200 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#124
[#200 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#124
[#200 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#124
[#200 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#124
[#200 /[1-9][0-9]*[fh]/]: r#124
[#200 /[1-9][0-9]*[iu]?/]: r#124
[#201 '!']: s#62
[#201 '&']: s#65
[#201 '(']: s#77
[#201 '*']: s#64
[#201 '-']: s#61
[#201 'array']: s#81
[#201 'atomic']: s#95
[#201 'bitcast']: s#71
[#201 'bool']: s#88
[#201 'f16']: s#90
[#201 'f32']: s#89
[#201 'false']: s#87
[#201 'i32']: s#91
[#201 'mat2x2']: s#100
[#201 'mat2x3']: s#101
[#201 'mat2x4']: s#102
[#201 'mat3x2']: s#103
[#201 'mat3x3']: s#104
[#201 'mat3x4']: s#105
[#201 'mat4x2']: s#106
[#201 'mat4x3']: s#107
[#201 'mat4x4']: s#108
[#201 'ptr']: s#93
[#201 'sampler']: s#125
[#201 'sampler_comparison']: s#126
[#201 'texture_1d']: s#132
[#201 'texture_2d']: s#133
[#201 'texture_2d_array']: s#134
[#201 'texture_3d']: s#135
[#201 'texture_cube']: s#136
[#201 'texture_cube_array']: s#137
[#201 'texture_depth_2d']: s#127
[#201 'texture_depth_2d_array']: s#128
[#201 'texture_depth_cube']: s#129
[#201 'texture_depth_cube_array']: s#130
[#201 'texture_depth_multisampled_2d']: s#131
[#201 'texture_multisampled_2d']: s#138
[#201 'texture_storage_1d']: s#139
[#201 'texture_storage_2d']: s#140
[#201 'texture_storage_2d_array']: s#141
[#201 'texture_storage_3d']: s#142
[#201 'true']: s#86
[#201 'u32']: s#92
[#201 'vec2']: s#97
[#201 'vec3']: s#98
[#201 'vec4']: s#99
[#201 '~']: s#63
[#201 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#201 /0[fh]/]: s#112
[#201 /0[iu]?/]: s#109
[#201 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#201 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#201 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#201 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#201 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#201 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#201 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#201 /[1-9][0-9]*[fh]/]: s#113
[#201 /[1-9][0-9]*[iu]?/]: s#110
[#202 '!']: r#125
[#202 '&']: r#125
[#202 '(']: r#125
[#202 '*']: r#125
[#202 '-']: r#125
[#202 'array']: r#125
[#202 'atomic']: r#125
[#202 'bitcast']: r#125
[#202 'bool']: r#125
[#202 'f16']: r#125
[#202 'f32']: r#125
[#202 'false']: r#125
[#202 'i32']: r#125
[#202 'mat2x2']: r#125
[#202 'mat2x3']: r#125
[#202 'mat2x4']: r#125
[#202 'mat3x2']: r#125
[#202 'mat3x3']: r#125
[#202 'mat3x4']: r#125
[#202 'mat4x2']: r#125
[#202 'mat4x3']: r#125
[#202 'mat4x4']: r#125
[#202 'ptr']: r#125
[#202 'sampler']: r#125
[#202 'sampler_comparison']: r#125
[#202 'texture_1d']: r#125
[#202 'texture_2d']: r#125
[#202 'texture_2d_array']: r#125
[#202 'texture_3d']: r#125
[#202 'texture_cube']: r#125
[#202 'texture_cube_array']: r#125
[#202 'texture_depth_2d']: r#125
[#202 'texture_depth_2d_array']: r#125
[#202 'texture_depth_cube']: r#125
[#202 'texture_depth_cube_array']: r#125
[#202 'texture_depth_multisampled_2d']: r#125
[#202 'texture_multisampled_2d']: r#125
[#202 'texture_storage_1d']: r#125
[#202 'texture_storage_2d']: r#125
[#202 'texture_storage_2d_array']: r#125
[#202 'texture_storage_3d']: r#125
[#202 'true']: r#125
[#202 'u32']: r#125
[#202 'vec2']: r#125
[#202 'vec3']: r#125
[#202 'vec4']: r#125
[#202 '~']: r#125
[#202 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#125
[#202 /0[fh]/]: r#125
[#202 /0[iu]?/]: r#125
[#202 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#125
[#202 /0[xX][0-9a-fA-F]+[iu]?/]: r#125
[#202 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#125
[#202 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#125
[#202 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#125
[#202 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#125
[#202 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#125
[#202 /[1-9][0-9]*[fh]/]: r#125
[#202 /[1-9][0-9]*[iu]?/]: r#125
[#203 '!']: r#126
[#203 '&']: r#126
[#203 '(']: r#126
[#203 '*']: r#126
[#203 '-']: r#126
[#203 'array']: r#126
[#203 'atomic']: r#126
[#203 'bitcast']: r#126
[#203 'bool']: r#126
[#203 'f16']: r#126
[#203 'f32']: r#126
[#203 'false']: r#126
[#203 'i32']: r#126
[#203 'mat2x2']: r#126
[#203 'mat2x3']: r#126
[#203 'mat2x4']: r#126
[#203 'mat3x2']: r#126
[#203 'mat3x3']: r#126
[#203 'mat3x4']: r#126
[#203 'mat4x2']: r#126
[#203 'mat4x3']: r#126
[#203 'mat4x4']: r#126
[#203 'ptr']: r#126
[#203 'sampler']: r#126
[#203 'sampler_comparison']: r#126
[#203 'texture_1d']: r#126
[#203 'texture_2d']: r#126
[#203 'texture_2d_array']: r#126
[#203 'texture_3d']: r#126
[#203 'texture_cube']: r#126
[#203 'texture_cube_array']: r#126
[#203 'texture_depth_2d']: r#126
[#203 'texture_depth_2d_array']: r#126
[#203 'texture_depth_cube']: r#126
[#203 'texture_depth_cube_array']: r#126
[#203 'texture_depth_multisampled_2d']: r#126
[#203 'texture_multisampled_2d']: r#126
[#203 'texture_storage_1d']: r#126
[#203 'texture_storage_2d']: r#126
[#203 'texture_storage_2d_array']: r#126
[#203 'texture_storage_3d']: r#126
[#203 'true']: r#126
[#203 'u32']: r#126
[#203 'vec2']: r#126
[#203 'vec3']: r#126
[#203 'vec4']: r#126
[#203 '~']: r#126
[#203 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#126
[#203 /0[fh]/]: r#126
[#203 /0[iu]?/]: r#126
[#203 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#126
[#203 /0[xX][0-9a-fA-F]+[iu]?/]: r#126
[#203 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#126
[#203 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#126
[#203 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#126
[#203 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#126
[#203 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#126
[#203 /[1-9][0-9]*[fh]/]: r#126
[#203 /[1-9][0-9]*[iu]?/]: r#126
[#204 '!']: s#62
[#204 '&']: s#65
[#204 '(']: s#77
[#204 '*']: s#64
[#204 '-']: s#61
[#204 'array']: s#81
[#204 'atomic']: s#95
[#204 'bitcast']: s#71
[#204 'bool']: s#88
[#204 'f16']: s#90
[#204 'f32']: s#89
[#204 'false']: s#87
[#204 'i32']: s#91
[#204 'mat2x2']: s#100
[#204 'mat2x3']: s#101
[#204 'mat2x4']: s#102
[#204 'mat3x2']: s#103
[#204 'mat3x3']: s#104
[#204 'mat3x4']: s#105
[#204 'mat4x2']: s#106
[#204 'mat4x3']: s#107
[#204 'mat4x4']: s#108
[#204 'ptr']: s#93
[#204 'sampler']: s#125
[#204 'sampler_comparison']: s#126
[#204 'texture_1d']: s#132
[#204 'texture_2d']: s#133
[#204 'texture_2d_array']: s#134
[#204 'texture_3d']: s#135
[#204 'texture_cube']: s#136
[#204 'texture_cube_array']: s#137
[#204 'texture_depth_2d']: s#127
[#204 'texture_depth_2d_array']: s#128
[#204 'texture_depth_cube']: s#129
[#204 'texture_depth_cube_array']: s#130
[#204 'texture_depth_multisampled_2d']: s#131
[#204 'texture_multisampled_2d']: s#138
[#204 'texture_storage_1d']: s#139
[#204 'texture_storage_2d']: s#140
[#204 'texture_storage_2d_array']: s#141
[#204 'texture_storage_3d']: s#142
[#204 'true']: s#86
[#204 'u32']: s#92
[#204 'vec2']: s#97
[#204 'vec3']: s#98
[#204 'vec4']: s#99
[#204 '~']: s#63
[#204 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#204 /0[fh]/]: s#112
[#204 /0[iu]?/]: s#109
[#204 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#204 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#204 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#204 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#204 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#204 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#204 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#204 /[1-9][0-9]*[fh]/]: s#113
[#204 /[1-9][0-9]*[iu]?/]: s#110
[#205 '!']: s#62
[#205 '&']: s#65
[#205 '(']: s#77
[#205 '*']: s#64
[#205 '-']: s#61
[#205 'array']: s#81
[#205 'atomic']: s#95
[#205 'bitcast']: s#71
[#205 'bool']: s#88
[#205 'f16']: s#90
[#205 'f32']: s#89
[#205 'false']: s#87
[#205 'i32']: s#91
[#205 'mat2x2']: s#100
[#205 'mat2x3']: s#101
[#205 'mat2x4']: s#102
[#205 'mat3x2']: s#103
[#205 'mat3x3']: s#104
[#205 'mat3x4']: s#105
[#205 'mat4x2']: s#106
[#205 'mat4x3']: s#107
[#205 'mat4x4']: s#108
[#205 'ptr']: s#93
[#205 'sampler']: s#125
[#205 'sampler_comparison']: s#126
[#205 'texture_1d']: s#132
[#205 'texture_2d']: s#133
[#205 'texture_2d_array']: s#134
[#205 'texture_3d']: s#135
[#205 'texture_cube']: s#136
[#205 'texture_cube_array']: s#137
[#205 'texture_depth_2d']: s#127
[#205 'texture_depth_2d_array']: s#128
[#205 'texture_depth_cube']: s#129
[#205 'texture_depth_cube_array']: s#130
[#205 'texture_depth_multisampled_2d']: s#131
[#205 'texture_multisampled_2d']: s#138
[#205 'texture_storage_1d']: s#139
[#205 'texture_storage_2d']: s#140
[#205 'texture_storage_2d_array']: s#141
[#205 'texture_storage_3d']: s#142
[#205 'true']: s#86
[#205 'u32']: s#92
[#205 'vec2']: s#97
[#205 'vec3']: s#98
[#205 'vec4']: s#99
[#205 '~']: s#63
[#205 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#205 /0[fh]/]: s#112
[#205 /0[iu]?/]: s#109
[#205 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#205 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#205 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#205 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#205 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#205 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#205 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#205 /[1-9][0-9]*[fh]/]: s#113
[#205 /[1-9][0-9]*[iu]?/]: s#110
[#206 '!']: s#62
[#206 '&']: s#65
[#206 '(']: s#77
[#206 '*']: s#64
[#206 '-']: s#61
[#206 'array']: s#81
[#206 'atomic']: s#95
[#206 'bitcast']: s#71
[#206 'bool']: s#88
[#206 'f16']: s#90
[#206 'f32']: s#89
[#206 'false']: s#87
[#206 'i32']: s#91
[#206 'mat2x2']: s#100
[#206 'mat2x3']: s#101
[#206 'mat2x4']: s#102
[#206 'mat3x2']: s#103
[#206 'mat3x3']: s#104
[#206 'mat3x4']: s#105
[#206 'mat4x2']: s#106
[#206 'mat4x3']: s#107
[#206 'mat4x4']: s#108
[#206 'ptr']: s#93
[#206 'sampler']: s#125
[#206 'sampler_comparison']: s#126
[#206 'texture_1d']: s#132
[#206 'texture_2d']: s#133
[#206 'texture_2d_array']: s#134
[#206 'texture_3d']: s#135
[#206 'texture_cube']: s#136
[#206 'texture_cube_array']: s#137
[#206 'texture_depth_2d']: s#127
[#206 'texture_depth_2d_array']: s#128
[#206 'texture_depth_cube']: s#129
[#206 'texture_depth_cube_array']: s#130
[#206 'texture_depth_multisampled_2d']: s#131
[#206 'texture_multisampled_2d']: s#138
[#206 'texture_storage_1d']: s#139
[#206 'texture_storage_2d']: s#140
[#206 'texture_storage_2d_array']: s#141
[#206 'texture_storage_3d']: s#142
[#206 'true']: s#86
[#206 'u32']: s#92
[#206 'vec2']: s#97
[#206 'vec3']: s#98
[#206 'vec4']: s#99
[#206 '~']: s#63
[#206 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#206 /0[fh]/]: s#112
[#206 /0[iu]?/]: s#109
[#206 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#206 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#206 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#206 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#206 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#206 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#206 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#206 /[1-9][0-9]*[fh]/]: s#113
[#206 /[1-9][0-9]*[iu]?/]: s#110
[#207 '!']: s#62
[#207 '&']: s#65
[#207 '(']: s#77
[#207 '*']: s#64
[#207 '-']: s#61
[#207 'array']: s#81
[#207 'atomic']: s#95
[#207 'bitcast']: s#71
[#207 'bool']: s#88
[#207 'f16']: s#90
[#207 'f32']: s#89
[#207 'false']: s#87
[#207 'i32']: s#91
[#207 'mat2x2']: s#100
[#207 'mat2x3']: s#101
[#207 'mat2x4']: s#102
[#207 'mat3x2']: s#103
[#207 'mat3x3']: s#104
[#207 'mat3x4']: s#105
[#207 'mat4x2']: s#106
[#207 'mat4x3']: s#107
[#207 'mat4x4']: s#108
[#207 'ptr']: s#93
[#207 'sampler']: s#125
[#207 'sampler_comparison']: s#126
[#207 'texture_1d']: s#132
[#207 'texture_2d']: s#133
[#207 'texture_2d_array']: s#134
[#207 'texture_3d']: s#135
[#207 'texture_cube']: s#136
[#207 'texture_cube_array']: s#137
[#207 'texture_depth_2d']: s#127
[#207 'texture_depth_2d_array']: s#128
[#207 'texture_depth_cube']: s#129
[#207 'texture_depth_cube_array']: s#130
[#207 'texture_depth_multisampled_2d']: s#131
[#207 'texture_multisampled_2d']: s#138
[#207 'texture_storage_1d']: s#139
[#207 'texture_storage_2d']: s#140
[#207 'texture_storage_2d_array']: s#141
[#207 'texture_storage_3d']: s#142
[#207 'true']: s#86
[#207 'u32']: s#92
[#207 'vec2']: s#97
[#207 'vec3']: s#98
[#207 'vec4']: s#99
[#207 '~']: s#63
[#207 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#207 /0[fh]/]: s#112
[#207 /0[iu]?/]: s#109
[#207 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#207 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#207 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#207 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#207 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#207 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#207 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#207 /[1-9][0-9]*[fh]/]: s#113
[#207 /[1-9][0-9]*[iu]?/]: s#110
[#208 '!']: s#62
[#208 '&']: s#65
[#208 '(']: s#77
[#208 '*']: s#64
[#208 '-']: s#61
[#208 'array']: s#81
[#208 'atomic']: s#95
[#208 'bitcast']: s#71
[#208 'bool']: s#88
[#208 'f16']: s#90
[#208 'f32']: s#89
[#208 'false']: s#87
[#208 'i32']: s#91
[#208 'mat2x2']: s#100
[#208 'mat2x3']: s#101
[#208 'mat2x4']: s#102
[#208 'mat3x2']: s#103
[#208 'mat3x3']: s#104
[#208 'mat3x4']: s#105
[#208 'mat4x2']: s#106
[#208 'mat4x3']: s#107
[#208 'mat4x4']: s#108
[#208 'ptr']: s#93
[#208 'sampler']: s#125
[#208 'sampler_comparison']: s#126
[#208 'texture_1d']: s#132
[#208 'texture_2d']: s#133
[#208 'texture_2d_array']: s#134
[#208 'texture_3d']: s#135
[#208 'texture_cube']: s#136
[#208 'texture_cube_array']: s#137
[#208 'texture_depth_2d']: s#127
[#208 'texture_depth_2d_array']: s#128
[#208 'texture_depth_cube']: s#129
[#208 'texture_depth_cube_array']: s#130
[#208 'texture_depth_multisampled_2d']: s#131
[#208 'texture_multisampled_2d']: s#138
[#208 'texture_storage_1d']: s#139
[#208 'texture_storage_2d']: s#140
[#208 'texture_storage_2d_array']: s#141
[#208 'texture_storage_3d']: s#142
[#208 'true']: s#86
[#208 'u32']: s#92
[#208 'vec2']: s#97
[#208 'vec3']: s#98
[#208 'vec4']: s#99
[#208 '~']: s#63
[#208 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#208 /0[fh]/]: s#112
[#208 /0[iu]?/]: s#109
[#208 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#208 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#208 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#208 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#208 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#208 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#208 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#208 /[1-9][0-9]*[fh]/]: s#113
[#208 /[1-9][0-9]*[iu]?/]: s#110
[#209 '!']: s#62
[#209 '&']: s#65
[#209 '(']: s#77
[#209 '*']: s#64
[#209 '-']: s#61
[#209 'array']: s#81
[#209 'atomic']: s#95
[#209 'bitcast']: s#71
[#209 'bool']: s#88
[#209 'f16']: s#90
[#209 'f32']: s#89
[#209 'false']: s#87
[#209 'i32']: s#91
[#209 'mat2x2']: s#100
[#209 'mat2x3']: s#101
[#209 'mat2x4']: s#102
[#209 'mat3x2']: s#103
[#209 'mat3x3']: s#104
[#209 'mat3x4']: s#105
[#209 'mat4x2']: s#106
[#209 'mat4x3']: s#107
[#209 'mat4x4']: s#108
[#209 'ptr']: s#93
[#209 'sampler']: s#125
[#209 'sampler_comparison']: s#126
[#209 'texture_1d']: s#132
[#209 'texture_2d']: s#133
[#209 'texture_2d_array']: s#134
[#209 'texture_3d']: s#135
[#209 'texture_cube']: s#136
[#209 'texture_cube_array']: s#137
[#209 'texture_depth_2d']: s#127
[#209 'texture_depth_2d_array']: s#128
[#209 'texture_depth_cube']: s#129
[#209 'texture_depth_cube_array']: s#130
[#209 'texture_depth_multisampled_2d']: s#131
[#209 'texture_multisampled_2d']: s#138
[#209 'texture_storage_1d']: s#139
[#209 'texture_storage_2d']: s#140
[#209 'texture_storage_2d_array']: s#141
[#209 'texture_storage_3d']: s#142
[#209 'true']: s#86
[#209 'u32']: s#92
[#209 'vec2']: s#97
[#209 'vec3']: s#98
[#209 'vec4']: s#99
[#209 '~']: s#63
[#209 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#209 /0[fh]/]: s#112
[#209 /0[iu]?/]: s#109
[#209 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#209 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#209 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#209 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#209 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#209 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#209 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#209 /[1-9][0-9]*[fh]/]: s#113
[#209 /[1-9][0-9]*[iu]?/]: s#110
[#210 '!']: s#62
[#210 '&']: s#65
[#210 '(']: s#77
[#210 '*']: s#64
[#210 '-']: s#61
[#210 'array']: s#81
[#210 'atomic']: s#95
[#210 'bitcast']: s#71
[#210 'bool']: s#88
[#210 'f16']: s#90
[#210 'f32']: s#89
[#210 'false']: s#87
[#210 'i32']: s#91
[#210 'mat2x2']: s#100
[#210 'mat2x3']: s#101
[#210 'mat2x4']: s#102
[#210 'mat3x2']: s#103
[#210 'mat3x3']: s#104
[#210 'mat3x4']: s#105
[#210 'mat4x2']: s#106
[#210 'mat4x3']: s#107
[#210 'mat4x4']: s#108
[#210 'ptr']: s#93
[#210 'sampler']: s#125
[#210 'sampler_comparison']: s#126
[#210 'texture_1d']: s#132
[#210 'texture_2d']: s#133
[#210 'texture_2d_array']: s#134
[#210 'texture_3d']: s#135
[#210 'texture_cube']: s#136
[#210 'texture_cube_array']: s#137
[#210 'texture_depth_2d']: s#127
[#210 'texture_depth_2d_array']: s#128
[#210 'texture_depth_cube']: s#129
[#210 'texture_depth_cube_array']: s#130
[#210 'texture_depth_multisampled_2d']: s#131
[#210 'texture_multisampled_2d']: s#138
[#210 'texture_storage_1d']: s#139
[#210 'texture_storage_2d']: s#140
[#210 'texture_storage_2d_array']: s#141
[#210 'texture_storage_3d']: s#142
[#210 'true']: s#86
[#210 'u32']: s#92
[#210 'vec2']: s#97
[#210 'vec3']: s#98
[#210 'vec4']: s#99
[#210 '~']: s#63
[#210 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#210 /0[fh]/]: s#112
[#210 /0[iu]?/]: s#109
[#210 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#210 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#210 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#210 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#210 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#210 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#210 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#210 /[1-9][0-9]*[fh]/]: s#113
[#210 /[1-9][0-9]*[iu]?/]: s#110
[#211 '!']: s#62
[#211 '&']: s#65
[#211 '(']: s#77
[#211 '*']: s#64
[#211 '-']: s#61
[#211 'array']: s#81
[#211 'atomic']: s#95
[#211 'bitcast']: s#71
[#211 'bool']: s#88
[#211 'f16']: s#90
[#211 'f32']: s#89
[#211 'false']: s#87
[#211 'i32']: s#91
[#211 'mat2x2']: s#100
[#211 'mat2x3']: s#101
[#211 'mat2x4']: s#102
[#211 'mat3x2']: s#103
[#211 'mat3x3']: s#104
[#211 'mat3x4']: s#105
[#211 'mat4x2']: s#106
[#211 'mat4x3']: s#107
[#211 'mat4x4']: s#108
[#211 'ptr']: s#93
[#211 'sampler']: s#125
[#211 'sampler_comparison']: s#126
[#211 'texture_1d']: s#132
[#211 'texture_2d']: s#133
[#211 'texture_2d_array']: s#134
[#211 'texture_3d']: s#135
[#211 'texture_cube']: s#136
[#211 'texture_cube_array']: s#137
[#211 'texture_depth_2d']: s#127
[#211 'texture_depth_2d_array']: s#128
[#211 'texture_depth_cube']: s#129
[#211 'texture_depth_cube_array']: s#130
[#211 'texture_depth_multisampled_2d']: s#131
[#211 'texture_multisampled_2d']: s#138
[#211 'texture_storage_1d']: s#139
[#211 'texture_storage_2d']: s#140
[#211 'texture_storage_2d_array']: s#141
[#211 'texture_storage_3d']: s#142
[#211 'true']: s#86
[#211 'u32']: s#92
[#211 'vec2']: s#97
[#211 'vec3']: s#98
[#211 'vec4']: s#99
[#211 '~']: s#63
[#211 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#211 /0[fh]/]: s#112
[#211 /0[iu]?/]: s#109
[#211 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#211 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#211 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#211 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#211 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#211 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#211 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#211 /[1-9][0-9]*[fh]/]: s#113
[#211 /[1-9][0-9]*[iu]?/]: s#110
[#212 '!']: s#62
[#212 '&']: s#65
[#212 '(']: s#77
[#212 '*']: s#64
[#212 '-']: s#61
[#212 'array']: s#81
[#212 'atomic']: s#95
[#212 'bitcast']: s#71
[#212 'bool']: s#88
[#212 'f16']: s#90
[#212 'f32']: s#89
[#212 'false']: s#87
[#212 'i32']: s#91
[#212 'mat2x2']: s#100
[#212 'mat2x3']: s#101
[#212 'mat2x4']: s#102
[#212 'mat3x2']: s#103
[#212 'mat3x3']: s#104
[#212 'mat3x4']: s#105
[#212 'mat4x2']: s#106
[#212 'mat4x3']: s#107
[#212 'mat4x4']: s#108
[#212 'ptr']: s#93
[#212 'sampler']: s#125
[#212 'sampler_comparison']: s#126
[#212 'texture_1d']: s#132
[#212 'texture_2d']: s#133
[#212 'texture_2d_array']: s#134
[#212 'texture_3d']: s#135
[#212 'texture_cube']: s#136
[#212 'texture_cube_array']: s#137
[#212 'texture_depth_2d']: s#127
[#212 'texture_depth_2d_array']: s#128
[#212 'texture_depth_cube']: s#129
[#212 'texture_depth_cube_array']: s#130
[#212 'texture_depth_multisampled_2d']: s#131
[#212 'texture_multisampled_2d']: s#138
[#212 'texture_storage_1d']: s#139
[#212 'texture_storage_2d']: s#140
[#212 'texture_storage_2d_array']: s#141
[#212 'texture_storage_3d']: s#142
[#212 'true']: s#86
[#212 'u32']: s#92
[#212 'vec2']: s#97
[#212 'vec3']: s#98
[#212 'vec4']: s#99
[#212 '~']: s#63
[#212 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#212 /0[fh]/]: s#112
[#212 /0[iu]?/]: s#109
[#212 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#212 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#212 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#212 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#212 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#212 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#212 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#212 /[1-9][0-9]*[fh]/]: s#113
[#212 /[1-9][0-9]*[iu]?/]: s#110
[#213 '!']: r#127
[#213 '&']: r#127
[#213 '(']: r#127
[#213 '*']: r#127
[#213 '-']: r#127
[#213 'array']: r#127
[#213 'atomic']: r#127
[#213 'bitcast']: r#127
[#213 'bool']: r#127
[#213 'f16']: r#127
[#213 'f32']: r#127
[#213 'false']: r#127
[#213 'i32']: r#127
[#213 'mat2x2']: r#127
[#213 'mat2x3']: r#127
[#213 'mat2x4']: r#127
[#213 'mat3x2']: r#127
[#213 'mat3x3']: r#127
[#213 'mat3x4']: r#127
[#213 'mat4x2']: r#127
[#213 'mat4x3']: r#127
[#213 'mat4x4']: r#127
[#213 'ptr']: r#127
[#213 'sampler']: r#127
[#213 'sampler_comparison']: r#127
[#213 'texture_1d']: r#127
[#213 'texture_2d']: r#127
[#213 'texture_2d_array']: r#127
[#213 'texture_3d']: r#127
[#213 'texture_cube']: r#127
[#213 'texture_cube_array']: r#127
[#213 'texture_depth_2d']: r#127
[#213 'texture_depth_2d_array']: r#127
[#213 'texture_depth_cube']: r#127
[#213 'texture_depth_cube_array']: r#127
[#213 'texture_depth_multisampled_2d']: r#127
[#213 'texture_multisampled_2d']: r#127
[#213 'texture_storage_1d']: r#127
[#213 'texture_storage_2d']: r#127
[#213 'texture_storage_2d_array']: r#127
[#213 'texture_storage_3d']: r#127
[#213 'true']: r#127
[#213 'u32']: r#127
[#213 'vec2']: r#127
[#213 'vec3']: r#127
[#213 'vec4']: r#127
[#213 '~']: r#127
[#213 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#127
[#213 /0[fh]/]: r#127
[#213 /0[iu]?/]: r#127
[#213 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#127
[#213 /0[xX][0-9a-fA-F]+[iu]?/]: r#127
[#213 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#127
[#213 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#127
[#213 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#127
[#213 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#127
[#213 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#127
[#213 /[1-9][0-9]*[fh]/]: r#127
[#213 /[1-9][0-9]*[iu]?/]: r#127
[#214 '!']: r#128
[#214 '&']: r#128
[#214 '(']: r#128
[#214 '*']: r#128
[#214 '-']: r#128
[#214 'array']: r#128
[#214 'atomic']: r#128
[#214 'bitcast']: r#128
[#214 'bool']: r#128
[#214 'f16']: r#128
[#214 'f32']: r#128
[#214 'false']: r#128
[#214 'i32']: r#128
[#214 'mat2x2']: r#128
[#214 'mat2x3']: r#128
[#214 'mat2x4']: r#128
[#214 'mat3x2']: r#128
[#214 'mat3x3']: r#128
[#214 'mat3x4']: r#128
[#214 'mat4x2']: r#128
[#214 'mat4x3']: r#128
[#214 'mat4x4']: r#128
[#214 'ptr']: r#128
[#214 'sampler']: r#128
[#214 'sampler_comparison']: r#128
[#214 'texture_1d']: r#128
[#214 'texture_2d']: r#128
[#214 'texture_2d_array']: r#128
[#214 'texture_3d']: r#128
[#214 'texture_cube']: r#128
[#214 'texture_cube_array']: r#128
[#214 'texture_depth_2d']: r#128
[#214 'texture_depth_2d_array']: r#128
[#214 'texture_depth_cube']: r#128
[#214 'texture_depth_cube_array']: r#128
[#214 'texture_depth_multisampled_2d']: r#128
[#214 'texture_multisampled_2d']: r#128
[#214 'texture_storage_1d']: r#128
[#214 'texture_storage_2d']: r#128
[#214 'texture_storage_2d_array']: r#128
[#214 'texture_storage_3d']: r#128
[#214 'true']: r#128
[#214 'u32']: r#128
[#214 'vec2']: r#128
[#214 'vec3']: r#128
[#214 'vec4']: r#128
[#214 '~']: r#128
[#214 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#128
[#214 /0[fh]/]: r#128
[#214 /0[iu]?/]: r#128
[#214 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#128
[#214 /0[xX][0-9a-fA-F]+[iu]?/]: r#128
[#214 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#128
[#214 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#128
[#214 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#128
[#214 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#128
[#214 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#128
[#214 /[1-9][0-9]*[fh]/]: r#128
[#214 /[1-9][0-9]*[iu]?/]: r#128
[#215 '!']: r#129
[#215 '&']: r#129
[#215 '(']: r#129
[#215 '*']: r#129
[#215 '-']: r#129
[#215 'array']: r#129
[#215 'atomic']: r#129
[#215 'bitcast']: r#129
[#215 'bool']: r#129
[#215 'f16']: r#129
[#215 'f32']: r#129
[#215 'false']: r#129
[#215 'i32']: r#129
[#215 'mat2x2']: r#129
[#215 'mat2x3']: r#129
[#215 'mat2x4']: r#129
[#215 'mat3x2']: r#129
[#215 'mat3x3']: r#129
[#215 'mat3x4']: r#129
[#215 'mat4x2']: r#129
[#215 'mat4x3']: r#129
[#215 'mat4x4']: r#129
[#215 'ptr']: r#129
[#215 'sampler']: r#129
[#215 'sampler_comparison']: r#129
[#215 'texture_1d']: r#129
[#215 'texture_2d']: r#129
[#215 'texture_2d_array']: r#129
[#215 'texture_3d']: r#129
[#215 'texture_cube']: r#129
[#215 'texture_cube_array']: r#129
[#215 'texture_depth_2d']: r#129
[#215 'texture_depth_2d_array']: r#129
[#215 'texture_depth_cube']: r#129
[#215 'texture_depth_cube_array']: r#129
[#215 'texture_depth_multisampled_2d']: r#129
[#215 'texture_multisampled_2d']: r#129
[#215 'texture_storage_1d']: r#129
[#215 'texture_storage_2d']: r#129
[#215 'texture_storage_2d_array']: r#129
[#215 'texture_storage_3d']: r#129
[#215 'true']: r#129
[#215 'u32']: r#129
[#215 'vec2']: r#129
[#215 'vec3']: r#129
[#215 'vec4']: r#129
[#215 '~']: r#129
[#215 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#129
[#215 /0[fh]/]: r#129
[#215 /0[iu]?/]: r#129
[#215 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#129
[#215 /0[xX][0-9a-fA-F]+[iu]?/]: r#129
[#215 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#129
[#215 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#129
[#215 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#129
[#215 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#129
[#215 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#129
[#215 /[1-9][0-9]*[fh]/]: r#129
[#215 /[1-9][0-9]*[iu]?/]: r#129
[#216 '!']: r#130
[#216 '&']: r#130
[#216 '(']: r#130
[#216 '*']: r#130
[#216 '-']: r#130
[#216 'array']: r#130
[#216 'atomic']: r#130
[#216 'bitcast']: r#130
[#216 'bool']: r#130
[#216 'f16']: r#130
[#216 'f32']: r#130
[#216 'false']: r#130
[#216 'i32']: r#130
[#216 'mat2x2']: r#130
[#216 'mat2x3']: r#130
[#216 'mat2x4']: r#130
[#216 'mat3x2']: r#130
[#216 'mat3x3']: r#130
[#216 'mat3x4']: r#130
[#216 'mat4x2']: r#130
[#216 'mat4x3']: r#130
[#216 'mat4x4']: r#130
[#216 'ptr']: r#130
[#216 'sampler']: r#130
[#216 'sampler_comparison']: r#130
[#216 'texture_1d']: r#130
[#216 'texture_2d']: r#130
[#216 'texture_2d_array']: r#130
[#216 'texture_3d']: r#130
[#216 'texture_cube']: r#130
[#216 'texture_cube_array']: r#130
[#216 'texture_depth_2d']: r#130
[#216 'texture_depth_2d_array']: r#130
[#216 'texture_depth_cube']: r#130
[#216 'texture_depth_cube_array']: r#130
[#216 'texture_depth_multisampled_2d']: r#130
[#216 'texture_multisampled_2d']: r#130
[#216 'texture_storage_1d']: r#130
[#216 'texture_storage_2d']: r#130
[#216 'texture_storage_2d_array']: r#130
[#216 'texture_storage_3d']: r#130
[#216 'true']: r#130
[#216 'u32']: r#130
[#216 'vec2']: r#130
[#216 'vec3']: r#130
[#216 'vec4']: r#130
[#216 '~']: r#130
[#216 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#130
[#216 /0[fh]/]: r#130
[#216 /0[iu]?/]: r#130
[#216 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#130
[#216 /0[xX][0-9a-fA-F]+[iu]?/]: r#130
[#216 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#130
[#216 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#130
[#216 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#130
[#216 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#130
[#216 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#130
[#216 /[1-9][0-9]*[fh]/]: r#130
[#216 /[1-9][0-9]*[iu]?/]: r#130
[#217 '!']: s#62
[#217 '&']: s#65
[#217 '(']: s#77
[#217 '*']: s#64
[#217 '-']: s#61
[#217 'array']: s#81
[#217 'atomic']: s#95
[#217 'bitcast']: s#71
[#217 'bool']: s#88
[#217 'f16']: s#90
[#217 'f32']: s#89
[#217 'false']: s#87
[#217 'i32']: s#91
[#217 'mat2x2']: s#100
[#217 'mat2x3']: s#101
[#217 'mat2x4']: s#102
[#217 'mat3x2']: s#103
[#217 'mat3x3']: s#104
[#217 'mat3x4']: s#105
[#217 'mat4x2']: s#106
[#217 'mat4x3']: s#107
[#217 'mat4x4']: s#108
[#217 'ptr']: s#93
[#217 'sampler']: s#125
[#217 'sampler_comparison']: s#126
[#217 'texture_1d']: s#132
[#217 'texture_2d']: s#133
[#217 'texture_2d_array']: s#134
[#217 'texture_3d']: s#135
[#217 'texture_cube']: s#136
[#217 'texture_cube_array']: s#137
[#217 'texture_depth_2d']: s#127
[#217 'texture_depth_2d_array']: s#128
[#217 'texture_depth_cube']: s#129
[#217 'texture_depth_cube_array']: s#130
[#217 'texture_depth_multisampled_2d']: s#131
[#217 'texture_multisampled_2d']: s#138
[#217 'texture_storage_1d']: s#139
[#217 'texture_storage_2d']: s#140
[#217 'texture_storage_2d_array']: s#141
[#217 'texture_storage_3d']: s#142
[#217 'true']: s#86
[#217 'u32']: s#92
[#217 'vec2']: s#97
[#217 'vec3']: s#98
[#217 'vec4']: s#99
[#217 '~']: s#63
[#217 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#217 /0[fh]/]: s#112
[#217 /0[iu]?/]: s#109
[#217 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#217 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#217 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#217 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#217 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#217 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#217 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#217 /[1-9][0-9]*[fh]/]: s#113
[#217 /[1-9][0-9]*[iu]?/]: s#110
[#218 '!']: s#62
[#218 '&']: s#65
[#218 '(']: s#77
[#218 '*']: s#64
[#218 '-']: s#61
[#218 'array']: s#81
[#218 'atomic']: s#95
[#218 'bitcast']: s#71
[#218 'bool']: s#88
[#218 'f16']: s#90
[#218 'f32']: s#89
[#218 'false']: s#87
[#218 'i32']: s#91
[#218 'mat2x2']: s#100
[#218 'mat2x3']: s#101
[#218 'mat2x4']: s#102
[#218 'mat3x2']: s#103
[#218 'mat3x3']: s#104
[#218 'mat3x4']: s#105
[#218 'mat4x2']: s#106
[#218 'mat4x3']: s#107
[#218 'mat4x4']: s#108
[#218 'ptr']: s#93
[#218 'sampler']: s#125
[#218 'sampler_comparison']: s#126
[#218 'texture_1d']: s#132
[#218 'texture_2d']: s#133
[#218 'texture_2d_array']: s#134
[#218 'texture_3d']: s#135
[#218 'texture_cube']: s#136
[#218 'texture_cube_array']: s#137
[#218 'texture_depth_2d']: s#127
[#218 'texture_depth_2d_array']: s#128
[#218 'texture_depth_cube']: s#129
[#218 'texture_depth_cube_array']: s#130
[#218 'texture_depth_multisampled_2d']: s#131
[#218 'texture_multisampled_2d']: s#138
[#218 'texture_storage_1d']: s#139
[#218 'texture_storage_2d']: s#140
[#218 'texture_storage_2d_array']: s#141
[#218 'texture_storage_3d']: s#142
[#218 'true']: s#86
[#218 'u32']: s#92
[#218 'vec2']: s#97
[#218 'vec3']: s#98
[#218 'vec4']: s#99
[#218 '~']: s#63
[#218 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#218 /0[fh]/]: s#112
[#218 /0[iu]?/]: s#109
[#218 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#218 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#218 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#218 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#218 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#218 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#218 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#218 /[1-9][0-9]*[fh]/]: s#113
[#218 /[1-9][0-9]*[iu]?/]: s#110
[#219 '!']: s#62
[#219 '&']: s#65
[#219 '(']: s#77
[#219 '*']: s#64
[#219 '-']: s#61
[#219 'array']: s#81
[#219 'atomic']: s#95
[#219 'bitcast']: s#71
[#219 'bool']: s#88
[#219 'f16']: s#90
[#219 'f32']: s#89
[#219 'false']: s#87
[#219 'i32']: s#91
[#219 'mat2x2']: s#100
[#219 'mat2x3']: s#101
[#219 'mat2x4']: s#102
[#219 'mat3x2']: s#103
[#219 'mat3x3']: s#104
[#219 'mat3x4']: s#105
[#219 'mat4x2']: s#106
[#219 'mat4x3']: s#107
[#219 'mat4x4']: s#108
[#219 'ptr']: s#93
[#219 'sampler']: s#125
[#219 'sampler_comparison']: s#126
[#219 'texture_1d']: s#132
[#219 'texture_2d']: s#133
[#219 'texture_2d_array']: s#134
[#219 'texture_3d']: s#135
[#219 'texture_cube']: s#136
[#219 'texture_cube_array']: s#137
[#219 'texture_depth_2d']: s#127
[#219 'texture_depth_2d_array']: s#128
[#219 'texture_depth_cube']: s#129
[#219 'texture_depth_cube_array']: s#130
[#219 'texture_depth_multisampled_2d']: s#131
[#219 'texture_multisampled_2d']: s#138
[#219 'texture_storage_1d']: s#139
[#219 'texture_storage_2d']: s#140
[#219 'texture_storage_2d_array']: s#141
[#219 'texture_storage_3d']: s#142
[#219 'true']: s#86
[#219 'u32']: s#92
[#219 'vec2']: s#97
[#219 'vec3']: s#98
[#219 'vec4']: s#99
[#219 '~']: s#63
[#219 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#219 /0[fh]/]: s#112
[#219 /0[iu]?/]: s#109
[#219 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#219 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#219 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#219 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#219 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#219 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#219 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#219 /[1-9][0-9]*[fh]/]: s#113
[#219 /[1-9][0-9]*[iu]?/]: s#110
[#220 '!']: s#62
[#220 '&']: s#65
[#220 '(']: s#77
[#220 '*']: s#64
[#220 '-']: s#61
[#220 'array']: s#81
[#220 'atomic']: s#95
[#220 'bitcast']: s#71
[#220 'bool']: s#88
[#220 'f16']: s#90
[#220 'f32']: s#89
[#220 'false']: s#87
[#220 'i32']: s#91
[#220 'mat2x2']: s#100
[#220 'mat2x3']: s#101
[#220 'mat2x4']: s#102
[#220 'mat3x2']: s#103
[#220 'mat3x3']: s#104
[#220 'mat3x4']: s#105
[#220 'mat4x2']: s#106
[#220 'mat4x3']: s#107
[#220 'mat4x4']: s#108
[#220 'ptr']: s#93
[#220 'sampler']: s#125
[#220 'sampler_comparison']: s#126
[#220 'texture_1d']: s#132
[#220 'texture_2d']: s#133
[#220 'texture_2d_array']: s#134
[#220 'texture_3d']: s#135
[#220 'texture_cube']: s#136
[#220 'texture_cube_array']: s#137
[#220 'texture_depth_2d']: s#127
[#220 'texture_depth_2d_array']: s#128
[#220 'texture_depth_cube']: s#129
[#220 'texture_depth_cube_array']: s#130
[#220 'texture_depth_multisampled_2d']: s#131
[#220 'texture_multisampled_2d']: s#138
[#220 'texture_storage_1d']: s#139
[#220 'texture_storage_2d']: s#140
[#220 'texture_storage_2d_array']: s#141
[#220 'texture_storage_3d']: s#142
[#220 'true']: s#86
[#220 'u32']: s#92
[#220 'vec2']: s#97
[#220 'vec3']: s#98
[#220 'vec4']: s#99
[#220 '~']: s#63
[#220 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#220 /0[fh]/]: s#112
[#220 /0[iu]?/]: s#109
[#220 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#220 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#220 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#220 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#220 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#220 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#220 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#220 /[1-9][0-9]*[fh]/]: s#113
[#220 /[1-9][0-9]*[iu]?/]: s#110
[#221 '!']: s#62
[#221 '&']: s#65
[#221 '(']: s#77
[#221 '*']: s#64
[#221 '-']: s#61
[#221 'array']: s#81
[#221 'atomic']: s#95
[#221 'bitcast']: s#71
[#221 'bool']: s#88
[#221 'f16']: s#90
[#221 'f32']: s#89
[#221 'false']: s#87
[#221 'i32']: s#91
[#221 'mat2x2']: s#100
[#221 'mat2x3']: s#101
[#221 'mat2x4']: s#102
[#221 'mat3x2']: s#103
[#221 'mat3x3']: s#104
[#221 'mat3x4']: s#105
[#221 'mat4x2']: s#106
[#221 'mat4x3']: s#107
[#221 'mat4x4']: s#108
[#221 'ptr']: s#93
[#221 'sampler']: s#125
[#221 'sampler_comparison']: s#126
[#221 'texture_1d']: s#132
[#221 'texture_2d']: s#133
[#221 'texture_2d_array']: s#134
[#221 'texture_3d']: s#135
[#221 'texture_cube']: s#136
[#221 'texture_cube_array']: s#137
[#221 'texture_depth_2d']: s#127
[#221 'texture_depth_2d_array']: s#128
[#221 'texture_depth_cube']: s#129
[#221 'texture_depth_cube_array']: s#130
[#221 'texture_depth_multisampled_2d']: s#131
[#221 'texture_multisampled_2d']: s#138
[#221 'texture_storage_1d']: s#139
[#221 'texture_storage_2d']: s#140
[#221 'texture_storage_2d_array']: s#141
[#221 'texture_storage_3d']: s#142
[#221 'true']: s#86
[#221 'u32']: s#92
[#221 'vec2']: s#97
[#221 'vec3']: s#98
[#221 'vec4']: s#99
[#221 '~']: s#63
[#221 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#221 /0[fh]/]: s#112
[#221 /0[iu]?/]: s#109
[#221 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#221 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#221 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#221 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#221 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#221 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#221 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#221 /[1-9][0-9]*[fh]/]: s#113
[#221 /[1-9][0-9]*[iu]?/]: s#110
[#222 'flat']: s#248
[#222 'linear']: s#247
[#222 'perspective']: s#246
[#223 '!']: s#62
[#223 '&']: s#65
[#223 '(']: s#77
[#223 '*']: s#64
[#223 '-']: s#61
[#223 'array']: s#81
[#223 'atomic']: s#95
[#223 'bitcast']: s#71
[#223 'bool']: s#88
[#223 'f16']: s#90
[#223 'f32']: s#89
[#223 'false']: s#87
[#223 'i32']: s#91
[#223 'mat2x2']: s#100
[#223 'mat2x3']: s#101
[#223 'mat2x4']: s#102
[#223 'mat3x2']: s#103
[#223 'mat3x3']: s#104
[#223 'mat3x4']: s#105
[#223 'mat4x2']: s#106
[#223 'mat4x3']: s#107
[#223 'mat4x4']: s#108
[#223 'ptr']: s#93
[#223 'sampler']: s#125
[#223 'sampler_comparison']: s#126
[#223 'texture_1d']: s#132
[#223 'texture_2d']: s#133
[#223 'texture_2d_array']: s#134
[#223 'texture_3d']: s#135
[#223 'texture_cube']: s#136
[#223 'texture_cube_array']: s#137
[#223 'texture_depth_2d']: s#127
[#223 'texture_depth_2d_array']: s#128
[#223 'texture_depth_cube']: s#129
[#223 'texture_depth_cube_array']: s#130
[#223 'texture_depth_multisampled_2d']: s#131
[#223 'texture_multisampled_2d']: s#138
[#223 'texture_storage_1d']: s#139
[#223 'texture_storage_2d']: s#140
[#223 'texture_storage_2d_array']: s#141
[#223 'texture_storage_3d']: s#142
[#223 'true']: s#86
[#223 'u32']: s#92
[#223 'vec2']: s#97
[#223 'vec3']: s#98
[#223 'vec4']: s#99
[#223 '~']: s#63
[#223 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#223 /0[fh]/]: s#112
[#223 /0[iu]?/]: s#109
[#223 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#223 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#223 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#223 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#223 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#223 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#223 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#223 /[1-9][0-9]*[fh]/]: s#113
[#223 /[1-9][0-9]*[iu]?/]: s#110
[#224 '!']: s#62
[#224 '&']: s#65
[#224 '(']: s#77
[#224 '*']: s#64
[#224 '-']: s#61
[#224 'array']: s#81
[#224 'atomic']: s#95
[#224 'bitcast']: s#71
[#224 'bool']: s#88
[#224 'f16']: s#90
[#224 'f32']: s#89
[#224 'false']: s#87
[#224 'i32']: s#91
[#224 'mat2x2']: s#100
[#224 'mat2x3']: s#101
[#224 'mat2x4']: s#102
[#224 'mat3x2']: s#103
[#224 'mat3x3']: s#104
[#224 'mat3x4']: s#105
[#224 'mat4x2']: s#106
[#224 'mat4x3']: s#107
[#224 'mat4x4']: s#108
[#224 'ptr']: s#93
[#224 'sampler']: s#125
[#224 'sampler_comparison']: s#126
[#224 'texture_1d']: s#132
[#224 'texture_2d']: s#133
[#224 'texture_2d_array']: s#134
[#224 'texture_3d']: s#135
[#224 'texture_cube']: s#136
[#224 'texture_cube_array']: s#137
[#224 'texture_depth_2d']: s#127
[#224 'texture_depth_2d_array']: s#128
[#224 'texture_depth_cube']: s#129
[#224 'texture_depth_cube_array']: s#130
[#224 'texture_depth_multisampled_2d']: s#131
[#224 'texture_multisampled_2d']: s#138
[#224 'texture_storage_1d']: s#139
[#224 'texture_storage_2d']: s#140
[#224 'texture_storage_2d_array']: s#141
[#224 'texture_storage_3d']: s#142
[#224 'true']: s#86
[#224 'u32']: s#92
[#224 'vec2']: s#97
[#224 'vec3']: s#98
[#224 'vec4']: s#99
[#224 '~']: s#63
[#224 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#224 /0[fh]/]: s#112
[#224 /0[iu]?/]: s#109
[#224 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#224 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#224 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#224 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#224 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#224 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#224 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#224 /[1-9][0-9]*[fh]/]: s#113
[#224 /[1-9][0-9]*[iu]?/]: s#110
[#225 'frag_depth']: s#235
[#225 'front_facing']: s#234
[#225 'global_invocation_id']: s#238
[#225 'instance_index']: s#232
[#225 'local_invocation_id']: s#236
[#225 'local_invocation_index']: s#237
[#225 'num_workgroups']: s#240
[#225 'position']: s#233
[#225 'sample_index']: s#241
[#225 'sample_mask']: s#242
[#225 'vertex_index']: s#231
[#225 'workgroup_id']: s#239
[#226 '!']: s#62
[#226 '&']: s#65
[#226 '(']: s#77
[#226 '*']: s#64
[#226 '-']: s#61
[#226 'array']: s#81
[#226 'atomic']: s#95
[#226 'bitcast']: s#71
[#226 'bool']: s#88
[#226 'f16']: s#90
[#226 'f32']: s#89
[#226 'false']: s#87
[#226 'i32']: s#91
[#226 'mat2x2']: s#100
[#226 'mat2x3']: s#101
[#226 'mat2x4']: s#102
[#226 'mat3x2']: s#103
[#226 'mat3x3']: s#104
[#226 'mat3x4']: s#105
[#226 'mat4x2']: s#106
[#226 'mat4x3']: s#107
[#226 'mat4x4']: s#108
[#226 'ptr']: s#93
[#226 'sampler']: s#125
[#226 'sampler_comparison']: s#126
[#226 'texture_1d']: s#132
[#226 'texture_2d']: s#133
[#226 'texture_2d_array']: s#134
[#226 'texture_3d']: s#135
[#226 'texture_cube']: s#136
[#226 'texture_cube_array']: s#137
[#226 'texture_depth_2d']: s#127
[#226 'texture_depth_2d_array']: s#128
[#226 'texture_depth_cube']: s#129
[#226 'texture_depth_cube_array']: s#130
[#226 'texture_depth_multisampled_2d']: s#131
[#226 'texture_multisampled_2d']: s#138
[#226 'texture_storage_1d']: s#139
[#226 'texture_storage_2d']: s#140
[#226 'texture_storage_2d_array']: s#141
[#226 'texture_storage_3d']: s#142
[#226 'true']: s#86
[#226 'u32']: s#92
[#226 'vec2']: s#97
[#226 'vec3']: s#98
[#226 'vec4']: s#99
[#226 '~']: s#63
[#226 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#226 /0[fh]/]: s#112
[#226 /0[iu]?/]: s#109
[#226 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#226 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#226 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#226 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#226 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#226 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#226 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#226 /[1-9][0-9]*[fh]/]: s#113
[#226 /[1-9][0-9]*[iu]?/]: s#110
[#227 '!']: s#62
[#227 '&']: s#65
[#227 '(']: s#77
[#227 '*']: s#64
[#227 '-']: s#61
[#227 'array']: s#81
[#227 'atomic']: s#95
[#227 'bitcast']: s#71
[#227 'bool']: s#88
[#227 'f16']: s#90
[#227 'f32']: s#89
[#227 'false']: s#87
[#227 'i32']: s#91
[#227 'mat2x2']: s#100
[#227 'mat2x3']: s#101
[#227 'mat2x4']: s#102
[#227 'mat3x2']: s#103
[#227 'mat3x3']: s#104
[#227 'mat3x4']: s#105
[#227 'mat4x2']: s#106
[#227 'mat4x3']: s#107
[#227 'mat4x4']: s#108
[#227 'ptr']: s#93
[#227 'sampler']: s#125
[#227 'sampler_comparison']: s#126
[#227 'texture_1d']: s#132
[#227 'texture_2d']: s#133
[#227 'texture_2d_array']: s#134
[#227 'texture_3d']: s#135
[#227 'texture_cube']: s#136
[#227 'texture_cube_array']: s#137
[#227 'texture_depth_2d']: s#127
[#227 'texture_depth_2d_array']: s#128
[#227 'texture_depth_cube']: s#129
[#227 'texture_depth_cube_array']: s#130
[#227 'texture_depth_multisampled_2d']: s#131
[#227 'texture_multisampled_2d']: s#138
[#227 'texture_storage_1d']: s#139
[#227 'texture_storage_2d']: s#140
[#227 'texture_storage_2d_array']: s#141
[#227 'texture_storage_3d']: s#142
[#227 'true']: s#86
[#227 'u32']: s#92
[#227 'vec2']: s#97
[#227 'vec3']: s#98
[#227 'vec4']: s#99
[#227 '~']: s#63
[#227 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#227 /0[fh]/]: s#112
[#227 /0[iu]?/]: s#109
[#227 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#227 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#227 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#227 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#227 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#227 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#227 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#227 /[1-9][0-9]*[fh]/]: s#113
[#227 /[1-9][0-9]*[iu]?/]: s#110
[#228 ',']: s#467
[#229 ',']: s#467
[#230 ',']: s#467
[#231 ')']: r#131
[#231 ',']: r#131
[#232 ')']: r#132
[#232 ',']: r#132
[#233 ')']: r#133
[#233 ',']: r#133
[#234 ')']: r#134
[#234 ',']: r#134
[#235 ')']: r#135
[#235 ',']: r#135
[#236 ')']: r#136
[#236 ',']: r#136
[#237 ')']: r#137
[#237 ',']: r#137
[#238 ')']: r#138
[#238 ',']: r#138
[#239 ')']: r#139
[#239 ',']: r#139
[#240 ')']: r#140
[#240 ',']: r#140
[#241 ')']: r#141
[#241 ',']: r#141
[#242 ')']: r#142
[#242 ',']: r#142
[#243 ',']: s#467
[#244 ',']: s#467
[#245 ',']: s#470
[#246 ')']: r#143
[#246 ',']: r#143
[#247 ')']: r#144
[#247 ',']: r#144
[#248 ')']: r#145
[#248 ',']: r#145
[#249 ',']: s#467
[#250 ',']: s#467
[#251 ',']: s#464
[#252 ')']: r#146
[#252 ',']: r#146
[#252 ':']: r#146
[#252 ';']: r#146
[#252 ']']: r#146
[#252 '{']: r#146
[#252 '||']: r#147
[#253 '!=']: r#29
[#253 '%']: r#29
[#253 '&&']: r#29
[#253 ')']: r#29
[#253 '*']: r#29
[#253 '+']: r#29
[#253 ',']: r#29
[#253 '-']: r#29
[#253 '/']: r#29
[#253 ':']: r#29
[#253 ';']: r#29
[#253 '==']: r#29
[#253 ']']: r#29
[#253 '{']: r#29
[#253 '||']: r#29
[#253 /\u200B_greater_than/]: r#29
[#253 /\u200B_greater_than_equal/]: r#29
[#253 /\u200B_less_than/]: r#29
[#253 /\u200B_less_than_equal/]: r#29
[#253 /\u200B_shift_left/]: s#199
[#253 /\u200B_shift_right/]: s#200
[#254 '&&']: r#149
[#254 ')']: r#148
[#254 ',']: r#148
[#254 ':']: r#148
[#254 ';']: r#148
[#254 ']']: r#148
[#254 '{']: r#148
[#255 '&&']: r#150
[#255 ')']: r#150
[#255 ',']: r#150
[#255 ':']: r#150
[#255 ';']: r#150
[#255 ']']: r#150
[#255 '{']: r#150
[#255 '||']: r#150
[#256 '&&']: r#151
[#256 ')']: r#151
[#256 ',']: r#151
[#256 ':']: r#151
[#256 ';']: r#151
[#256 ']']: r#151
[#256 '{']: r#151
[#256 '||']: r#151
[#257 '&&']: r#152
[#257 ')']: r#152
[#257 ',']: r#152
[#257 ':']: r#152
[#257 ';']: r#152
[#257 ']']: r#152
[#257 '{']: r#152
[#257 '||']: r#152
[#258 '&&']: r#153
[#258 ')']: r#153
[#258 ',']: r#153
[#258 ':']: r#153
[#258 ';']: r#153
[#258 ']']: r#153
[#258 '{']: r#153
[#258 '||']: r#153
[#259 '&&']: r#154
[#259 ')']: r#154
[#259 ',']: r#154
[#259 ':']: r#154
[#259 ';']: r#154
[#259 ']']: r#154
[#259 '{']: r#154
[#259 '||']: r#154
[#260 '&&']: r#155
[#260 ')']: r#155
[#260 ',']: r#155
[#260 ':']: r#155
[#260 ';']: r#155
[#260 ']']: r#155
[#260 '{']: r#155
[#260 '||']: r#155
[#261 '&']: r#157
[#261 ')']: r#156
[#261 ',']: r#156
[#261 ':']: r#156
[#261 ';']: r#156
[#261 ']']: r#156
[#261 '{']: r#156
[#261 /\u200B_template_args_end/]: r#156
[#262 ')']: r#158
[#262 ',']: r#158
[#262 ':']: r#158
[#262 ';']: r#158
[#262 ']']: r#158
[#262 '{']: r#158
[#262 '|']: r#159
[#262 /\u200B_template_args_end/]: r#158
[#263 ')']: r#160
[#263 ',']: r#160
[#263 ':']: r#160
[#263 ';']: r#160
[#263 ']']: r#160
[#263 '^']: r#161
[#263 '{']: r#160
[#263 /\u200B_template_args_end/]: r#160
[#264 '!=']: r#162
[#264 '%']: s#196
[#264 '&&']: r#162
[#264 ')']: r#162
[#264 '*']: s#194
[#264 '+']: r#162
[#264 ',']: r#162
[#264 '-']: r#162
[#264 '/']: s#195
[#264 ':']: r#162
[#264 ';']: r#162
[#264 '==']: r#162
[#264 ']']: r#162
[#264 '{']: r#162
[#264 '||']: r#162
[#264 /\u200B_greater_than/]: r#162
[#264 /\u200B_greater_than_equal/]: r#162
[#264 /\u200B_less_than/]: r#162
[#264 /\u200B_less_than_equal/]: r#162
[#264 /\u200B_template_args_end/]: r#162
[#265 '!=']: r#29
[#265 '%']: r#29
[#265 '&&']: r#29
[#265 ')']: r#29
[#265 '*']: r#29
[#265 '+']: r#29
[#265 ',']: r#29
[#265 '-']: r#29
[#265 '/']: r#29
[#265 ':']: r#29
[#265 ';']: r#29
[#265 '==']: r#29
[#265 ']']: r#29
[#265 '{']: r#29
[#265 '||']: r#29
[#265 /\u200B_greater_than/]: r#29
[#265 /\u200B_greater_than_equal/]: r#29
[#265 /\u200B_less_than/]: r#29
[#265 /\u200B_less_than_equal/]: r#29
[#265 /\u200B_template_args_end/]: r#29
[#266 '!=']: r#163
[#266 '&&']: r#163
[#266 ')']: r#163
[#266 ',']: r#163
[#266 ':']: r#163
[#266 ';']: r#163
[#266 '==']: r#163
[#266 ']']: r#163
[#266 '{']: r#163
[#266 '||']: r#163
[#266 /\u200B_greater_than/]: r#163
[#266 /\u200B_greater_than_equal/]: r#163
[#266 /\u200B_less_than/]: r#163
[#266 /\u200B_less_than_equal/]: r#163
[#267 '!=']: r#164
[#267 '&&']: r#164
[#267 ')']: r#164
[#267 ',']: r#164
[#267 ':']: r#164
[#267 ';']: r#164
[#267 '==']: r#164
[#267 ']']: r#164
[#267 '{']: r#164
[#267 '||']: r#164
[#267 /\u200B_greater_than/]: r#164
[#267 /\u200B_greater_than_equal/]: r#164
[#267 /\u200B_less_than/]: r#164
[#267 /\u200B_less_than_equal/]: r#164
[#268 '!=']: r#165
[#268 '%']: r#165
[#268 '&&']: r#165
[#268 ')']: r#165
[#268 '*']: r#165
[#268 '+']: r#165
[#268 ',']: r#165
[#268 '-']: r#165
[#268 '/']: r#165
[#268 ':']: r#165
[#268 ';']: r#165
[#268 '==']: r#165
[#268 ']']: r#165
[#268 '{']: r#165
[#268 '||']: r#165
[#268 /\u200B_greater_than/]: r#165
[#268 /\u200B_greater_than_equal/]: r#165
[#268 /\u200B_less_than/]: r#165
[#268 /\u200B_less_than_equal/]: r#165
[#268 /\u200B_template_args_end/]: r#165
[#269 '.']: s#187
[#269 '[']: s#186
[#270 '.']: s#187
[#270 '[']: s#186
[#271 '!=']: r#166
[#271 '%']: r#166
[#271 '%=']: r#166
[#271 '&&']: r#166
[#271 '&']: r#166
[#271 '&=']: r#166
[#271 ')']: r#166
[#271 '*']: r#166
[#271 '*=']: r#166
[#271 '+']: r#166
[#271 '++']: r#166
[#271 '+=']: r#166
[#271 ',']: r#166
[#271 '-']: r#166
[#271 '--']: r#166
[#271 '-=']: r#166
[#271 '.']: r#166
[#271 '/']: r#166
[#271 '/=']: r#166
[#271 ':']: r#166
[#271 ';']: r#166
[#271 '=']: r#166
[#271 '==']: r#166
[#271 '[']: r#166
[#271 ']']: r#166
[#271 '^']: r#166
[#271 '^=']: r#166
[#271 '{']: r#166
[#271 '|']: r#166
[#271 '|=']: r#166
[#271 '||']: r#166
[#271 /\u200B_greater_than/]: r#166
[#271 /\u200B_greater_than_equal/]: r#166
[#271 /\u200B_less_than/]: r#166
[#271 /\u200B_less_than_equal/]: r#166
[#271 /\u200B_shift_left/]: r#166
[#271 /\u200B_shift_left_assign/]: r#166
[#271 /\u200B_shift_right/]: r#166
[#271 /\u200B_shift_right_assign/]: r#166
[#271 /\u200B_template_args_end/]: r#166
[#272 '!=']: r#167
[#272 '%']: r#167
[#272 '%=']: r#167
[#272 '&&']: r#167
[#272 '&']: r#167
[#272 '&=']: r#167
[#272 ')']: r#167
[#272 '*']: r#167
[#272 '*=']: r#167
[#272 '+']: r#167
[#272 '++']: r#167
[#272 '+=']: r#167
[#272 ',']: r#167
[#272 '-']: r#167
[#272 '--']: r#167
[#272 '-=']: r#167
[#272 '.']: r#167
[#272 '/']: r#167
[#272 '/=']: r#167
[#272 ':']: r#167
[#272 ';']: r#167
[#272 '=']: r#167
[#272 '==']: r#167
[#272 '[']: r#167
[#272 ']']: r#167
[#272 '^']: r#167
[#272 '^=']: r#167
[#272 '{']: r#167
[#272 '|']: r#167
[#272 '|=']: r#167
[#272 '||']: r#167
[#272 /\u200B_greater_than/]: r#167
[#272 /\u200B_greater_than_equal/]: r#167
[#272 /\u200B_less_than/]: r#167
[#272 /\u200B_less_than_equal/]: r#167
[#272 /\u200B_shift_left/]: r#167
[#272 /\u200B_shift_left_assign/]: r#167
[#272 /\u200B_shift_right/]: r#167
[#272 /\u200B_shift_right_assign/]: r#167
[#272 /\u200B_template_args_end/]: r#167
[#273 '!=']: r#168
[#273 '%']: r#168
[#273 '%=']: r#168
[#273 '&&']: r#168
[#273 '&']: r#168
[#273 '&=']: r#168
[#273 ')']: r#168
[#273 '*']: r#168
[#273 '*=']: r#168
[#273 '+']: r#168
[#273 '++']: r#168
[#273 '+=']: r#168
[#273 ',']: r#168
[#273 '-']: r#168
[#273 '--']: r#168
[#273 '-=']: r#168
[#273 '.']: r#168
[#273 '/']: r#168
[#273 '/=']: r#168
[#273 ':']: r#168
[#273 ';']: r#168
[#273 '=']: r#168
[#273 '==']: r#168
[#273 '[']: r#168
[#273 ']']: r#168
[#273 '^']: r#168
[#273 '^=']: r#168
[#273 '{']: r#168
[#273 '|']: r#168
[#273 '|=']: r#168
[#273 '||']: r#168
[#273 /\u200B_greater_than/]: r#168
[#273 /\u200B_greater_than_equal/]: r#168
[#273 /\u200B_less_than/]: r#168
[#273 /\u200B_less_than_equal/]: r#168
[#273 /\u200B_shift_left/]: r#168
[#273 /\u200B_shift_left_assign/]: r#168
[#273 /\u200B_shift_right/]: r#168
[#273 /\u200B_shift_right_assign/]: r#168
[#273 /\u200B_template_args_end/]: r#168
[#274 '!=']: r#169
[#274 '%']: r#169
[#274 '%=']: r#169
[#274 '&&']: r#169
[#274 '&']: r#169
[#274 '&=']: r#169
[#274 ')']: r#169
[#274 '*']: r#169
[#274 '*=']: r#169
[#274 '+']: r#169
[#274 '++']: r#169
[#274 '+=']: r#169
[#274 ',']: r#169
[#274 '-']: r#169
[#274 '--']: r#169
[#274 '-=']: r#169
[#274 '.']: r#169
[#274 '/']: r#169
[#274 '/=']: r#169
[#274 ':']: r#169
[#274 ';']: r#169
[#274 '=']: r#169
[#274 '==']: r#169
[#274 '[']: r#169
[#274 ']']: r#169
[#274 '^']: r#169
[#274 '^=']: r#169
[#274 '{']: r#169
[#274 '|']: r#169
[#274 '|=']: r#169
[#274 '||']: r#169
[#274 /\u200B_greater_than/]: r#169
[#274 /\u200B_greater_than_equal/]: r#169
[#274 /\u200B_less_than/]: r#169
[#274 /\u200B_less_than_equal/]: r#169
[#274 /\u200B_shift_left/]: r#169
[#274 /\u200B_shift_left_assign/]: r#169
[#274 /\u200B_shift_right/]: r#169
[#274 /\u200B_shift_right_assign/]: r#169
[#274 /\u200B_template_args_end/]: r#169
[#275 '!=']: r#170
[#275 '%']: r#170
[#275 '%=']: r#170
[#275 '&&']: r#170
[#275 '&']: r#170
[#275 '&=']: r#170
[#275 ')']: r#170
[#275 '*']: r#170
[#275 '*=']: r#170
[#275 '+']: r#170
[#275 '++']: r#170
[#275 '+=']: r#170
[#275 ',']: r#170
[#275 '-']: r#170
[#275 '--']: r#170
[#275 '-=']: r#170
[#275 '.']: r#170
[#275 '/']: r#170
[#275 '/=']: r#170
[#275 ':']: r#170
[#275 ';']: r#170
[#275 '=']: r#170
[#275 '==']: r#170
[#275 '[']: r#170
[#275 ']']: r#170
[#275 '^']: r#170
[#275 '^=']: r#170
[#275 '{']: r#170
[#275 '|']: r#170
[#275 '|=']: r#170
[#275 '||']: r#170
[#275 /\u200B_greater_than/]: r#170
[#275 /\u200B_greater_than_equal/]: r#170
[#275 /\u200B_less_than/]: r#170
[#275 /\u200B_less_than_equal/]: r#170
[#275 /\u200B_shift_left/]: r#170
[#275 /\u200B_shift_left_assign/]: r#170
[#275 /\u200B_shift_right/]: r#170
[#275 /\u200B_shift_right_assign/]: r#170
[#275 /\u200B_template_args_end/]: r#170
[#276 '!=']: r#171
[#276 '%']: r#171
[#276 '%=']: r#171
[#276 '&&']: r#171
[#276 '&']: r#171
[#276 '&=']: r#171
[#276 ')']: r#171
[#276 '*']: r#171
[#276 '*=']: r#171
[#276 '+']: r#171
[#276 '++']: r#171
[#276 '+=']: r#171
[#276 ',']: r#171
[#276 '-']: r#171
[#276 '--']: r#171
[#276 '-=']: r#171
[#276 '.']: r#171
[#276 '/']: r#171
[#276 '/=']: r#171
[#276 ':']: r#171
[#276 ';']: r#171
[#276 '=']: r#171
[#276 '==']: r#171
[#276 '[']: r#171
[#276 ']']: r#171
[#276 '^']: r#171
[#276 '^=']: r#171
[#276 '{']: r#171
[#276 '|']: r#171
[#276 '|=']: r#171
[#276 '||']: r#171
[#276 /\u200B_greater_than/]: r#171
[#276 /\u200B_greater_than_equal/]: r#171
[#276 /\u200B_less_than/]: r#171
[#276 /\u200B_less_than_equal/]: r#171
[#276 /\u200B_shift_left/]: r#171
[#276 /\u200B_shift_left_assign/]: r#171
[#276 /\u200B_shift_right/]: r#171
[#276 /\u200B_shift_right_assign/]: r#171
[#276 /\u200B_template_args_end/]: r#171
[#277 '!=']: r#172
[#277 '%']: r#172
[#277 '%=']: r#172
[#277 '&&']: r#172
[#277 '&']: r#172
[#277 '&=']: r#172
[#277 ')']: r#172
[#277 '*']: r#172
[#277 '*=']: r#172
[#277 '+']: r#172
[#277 '++']: r#172
[#277 '+=']: r#172
[#277 ',']: r#172
[#277 '-']: r#172
[#277 '--']: r#172
[#277 '-=']: r#172
[#277 '.']: r#172
[#277 '/']: r#172
[#277 '/=']: r#172
[#277 ':']: r#172
[#277 ';']: r#172
[#277 '=']: r#172
[#277 '==']: r#172
[#277 '[']: r#172
[#277 ']']: r#172
[#277 '^']: r#172
[#277 '^=']: r#172
[#277 '{']: r#172
[#277 '|']: r#172
[#277 '|=']: r#172
[#277 '||']: r#172
[#277 /\u200B_greater_than/]: r#172
[#277 /\u200B_greater_than_equal/]: r#172
[#277 /\u200B_less_than/]: r#172
[#277 /\u200B_less_than_equal/]: r#172
[#277 /\u200B_shift_left/]: r#172
[#277 /\u200B_shift_left_assign/]: r#172
[#277 /\u200B_shift_right/]: r#172
[#277 /\u200B_shift_right_assign/]: r#172
[#277 /\u200B_template_args_end/]: r#172
[#278 '!=']: r#173
[#278 '%']: r#173
[#278 '%=']: r#173
[#278 '&&']: r#173
[#278 '&']: r#173
[#278 '&=']: r#173
[#278 ')']: r#173
[#278 '*']: r#173
[#278 '*=']: r#173
[#278 '+']: r#173
[#278 '++']: r#173
[#278 '+=']: r#173
[#278 ',']: r#173
[#278 '-']: r#173
[#278 '--']: r#173
[#278 '-=']: r#173
[#278 '.']: r#173
[#278 '/']: r#173
[#278 '/=']: r#173
[#278 ':']: r#173
[#278 ';']: r#173
[#278 '=']: r#173
[#278 '==']: r#173
[#278 '[']: r#173
[#278 ']']: r#173
[#278 '^']: r#173
[#278 '^=']: r#173
[#278 '{']: r#173
[#278 '|']: r#173
[#278 '|=']: r#173
[#278 '||']: r#173
[#278 /\u200B_greater_than/]: r#173
[#278 /\u200B_greater_than_equal/]: r#173
[#278 /\u200B_less_than/]: r#173
[#278 /\u200B_less_than_equal/]: r#173
[#278 /\u200B_shift_left/]: r#173
[#278 /\u200B_shift_left_assign/]: r#173
[#278 /\u200B_shift_right/]: r#173
[#278 /\u200B_shift_right_assign/]: r#173
[#278 /\u200B_template_args_end/]: r#173
[#279 '!=']: r#174
[#279 '%']: r#174
[#279 '%=']: r#174
[#279 '&&']: r#174
[#279 '&']: r#174
[#279 '&=']: r#174
[#279 ')']: r#174
[#279 '*']: r#174
[#279 '*=']: r#174
[#279 '+']: r#174
[#279 '++']: r#174
[#279 '+=']: r#174
[#279 ',']: r#174
[#279 '-']: r#174
[#279 '--']: r#174
[#279 '-=']: r#174
[#279 '.']: r#174
[#279 '/']: r#174
[#279 '/=']: r#174
[#279 ':']: r#174
[#279 ';']: r#174
[#279 '=']: r#174
[#279 '==']: r#174
[#279 '[']: r#174
[#279 ']']: r#174
[#279 '^']: r#174
[#279 '^=']: r#174
[#279 '{']: r#174
[#279 '|']: r#174
[#279 '|=']: r#174
[#279 '||']: r#174
[#279 /\u200B_greater_than/]: r#174
[#279 /\u200B_greater_than_equal/]: r#174
[#279 /\u200B_less_than/]: r#174
[#279 /\u200B_less_than_equal/]: r#174
[#279 /\u200B_shift_left/]: r#174
[#279 /\u200B_shift_left_assign/]: r#174
[#279 /\u200B_shift_right/]: r#174
[#279 /\u200B_shift_right_assign/]: r#174
[#279 /\u200B_template_args_end/]: r#174
[#280 ']']: s#458
[#281 'array']: s#346
[#281 'atomic']: s#95
[#281 'bool']: s#88
[#281 'f16']: s#90
[#281 'f32']: s#89
[#281 'i32']: s#91
[#281 'mat2x2']: s#100
[#281 'mat2x3']: s#101
[#281 'mat2x4']: s#102
[#281 'mat3x2']: s#103
[#281 'mat3x3']: s#104
[#281 'mat3x4']: s#105
[#281 'mat4x2']: s#106
[#281 'mat4x3']: s#107
[#281 'mat4x4']: s#108
[#281 'ptr']: s#93
[#281 'sampler']: s#125
[#281 'sampler_comparison']: s#126
[#281 'texture_1d']: s#132
[#281 'texture_2d']: s#133
[#281 'texture_2d_array']: s#134
[#281 'texture_3d']: s#135
[#281 'texture_cube']: s#136
[#281 'texture_cube_array']: s#137
[#281 'texture_depth_2d']: s#127
[#281 'texture_depth_2d_array']: s#128
[#281 'texture_depth_cube']: s#129
[#281 'texture_depth_cube_array']: s#130
[#281 'texture_depth_multisampled_2d']: s#131
[#281 'texture_multisampled_2d']: s#138
[#281 'texture_storage_1d']: s#139
[#281 'texture_storage_2d']: s#140
[#281 'texture_storage_2d_array']: s#141
[#281 'texture_storage_3d']: s#142
[#281 'u32']: s#92
[#281 'vec2']: s#97
[#281 'vec3']: s#98
[#281 'vec4']: s#99
[#281 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#282 'array']: r#175
[#282 'atomic']: r#175
[#282 'bgra8unorm']: r#175
[#282 'bool']: r#175
[#282 'f16']: r#175
[#282 'f32']: r#175
[#282 'function']: r#175
[#282 'i32']: r#175
[#282 'mat2x2']: r#175
[#282 'mat2x3']: r#175
[#282 'mat2x4']: r#175
[#282 'mat3x2']: r#175
[#282 'mat3x3']: r#175
[#282 'mat3x4']: r#175
[#282 'mat4x2']: r#175
[#282 'mat4x3']: r#175
[#282 'mat4x4']: r#175
[#282 'private']: r#175
[#282 'ptr']: r#175
[#282 'r32float']: r#175
[#282 'r32sint']: r#175
[#282 'r32uint']: r#175
[#282 'rg32float']: r#175
[#282 'rg32sint']: r#175
[#282 'rg32uint']: r#175
[#282 'rgba16float']: r#175
[#282 'rgba16sint']: r#175
[#282 'rgba16uint']: r#175
[#282 'rgba32float']: r#175
[#282 'rgba32sint']: r#175
[#282 'rgba32uint']: r#175
[#282 'rgba8sint']: r#175
[#282 'rgba8snorm']: r#175
[#282 'rgba8uint']: r#175
[#282 'rgba8unorm']: r#175
[#282 'sampler']: r#175
[#282 'sampler_comparison']: r#175
[#282 'storage']: r#175
[#282 'texture_1d']: r#175
[#282 'texture_2d']: r#175
[#282 'texture_2d_array']: r#175
[#282 'texture_3d']: r#175
[#282 'texture_cube']: r#175
[#282 'texture_cube_array']: r#175
[#282 'texture_depth_2d']: r#175
[#282 'texture_depth_2d_array']: r#175
[#282 'texture_depth_cube']: r#175
[#282 'texture_depth_cube_array']: r#175
[#282 'texture_depth_multisampled_2d']: r#175
[#282 'texture_multisampled_2d']: r#175
[#282 'texture_storage_1d']: r#175
[#282 'texture_storage_2d']: r#175
[#282 'texture_storage_2d_array']: r#175
[#282 'texture_storage_3d']: r#175
[#282 'u32']: r#175
[#282 'uniform']: r#175
[#282 'vec2']: r#175
[#282 'vec3']: r#175
[#282 'vec4']: r#175
[#282 'workgroup']: r#175
[#282 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#175
[#283 ')']: s#456
[#284 ')']: r#176
[#285 ',']: s#455
[#286 '!=']: r#177
[#286 '%']: r#177
[#286 '&&']: r#177
[#286 '&']: r#177
[#286 ')']: r#177
[#286 '*']: r#177
[#286 '+']: r#177
[#286 ',']: r#177
[#286 '-']: r#177
[#286 '.']: r#177
[#286 '/']: r#177
[#286 ':']: r#177
[#286 ';']: r#177
[#286 '==']: r#177
[#286 '[']: r#177
[#286 ']']: r#177
[#286 '^']: r#177
[#286 '{']: r#177
[#286 '|']: r#177
[#286 '||']: r#177
[#286 /\u200B_greater_than/]: r#177
[#286 /\u200B_greater_than_equal/]: r#177
[#286 /\u200B_less_than/]: r#177
[#286 /\u200B_less_than_equal/]: r#177
[#286 /\u200B_shift_left/]: r#177
[#286 /\u200B_shift_right/]: r#177
[#286 /\u200B_template_args_end/]: r#177
[#287 'array']: s#346
[#287 'atomic']: s#95
[#287 'bool']: s#88
[#287 'f16']: s#90
[#287 'f32']: s#89
[#287 'i32']: s#91
[#287 'mat2x2']: s#100
[#287 'mat2x3']: s#101
[#287 'mat2x4']: s#102
[#287 'mat3x2']: s#103
[#287 'mat3x3']: s#104
[#287 'mat3x4']: s#105
[#287 'mat4x2']: s#106
[#287 'mat4x3']: s#107
[#287 'mat4x4']: s#108
[#287 'ptr']: s#93
[#287 'sampler']: s#125
[#287 'sampler_comparison']: s#126
[#287 'texture_1d']: s#132
[#287 'texture_2d']: s#133
[#287 'texture_2d_array']: s#134
[#287 'texture_3d']: s#135
[#287 'texture_cube']: s#136
[#287 'texture_cube_array']: s#137
[#287 'texture_depth_2d']: s#127
[#287 'texture_depth_2d_array']: s#128
[#287 'texture_depth_cube']: s#129
[#287 'texture_depth_cube_array']: s#130
[#287 'texture_depth_multisampled_2d']: s#131
[#287 'texture_multisampled_2d']: s#138
[#287 'texture_storage_1d']: s#139
[#287 'texture_storage_2d']: s#140
[#287 'texture_storage_2d_array']: s#141
[#287 'texture_storage_3d']: s#142
[#287 'u32']: s#92
[#287 'vec2']: s#97
[#287 'vec3']: s#98
[#287 'vec4']: s#99
[#287 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#288 'array']: s#346
[#288 'atomic']: s#95
[#288 'bool']: s#88
[#288 'f16']: s#90
[#288 'f32']: s#89
[#288 'i32']: s#91
[#288 'mat2x2']: s#100
[#288 'mat2x3']: s#101
[#288 'mat2x4']: s#102
[#288 'mat3x2']: s#103
[#288 'mat3x3']: s#104
[#288 'mat3x4']: s#105
[#288 'mat4x2']: s#106
[#288 'mat4x3']: s#107
[#288 'mat4x4']: s#108
[#288 'ptr']: s#93
[#288 'sampler']: s#125
[#288 'sampler_comparison']: s#126
[#288 'texture_1d']: s#132
[#288 'texture_2d']: s#133
[#288 'texture_2d_array']: s#134
[#288 'texture_3d']: s#135
[#288 'texture_cube']: s#136
[#288 'texture_cube_array']: s#137
[#288 'texture_depth_2d']: s#127
[#288 'texture_depth_2d_array']: s#128
[#288 'texture_depth_cube']: s#129
[#288 'texture_depth_cube_array']: s#130
[#288 'texture_depth_multisampled_2d']: s#131
[#288 'texture_multisampled_2d']: s#138
[#288 'texture_storage_1d']: s#139
[#288 'texture_storage_2d']: s#140
[#288 'texture_storage_2d_array']: s#141
[#288 'texture_storage_3d']: s#142
[#288 'u32']: s#92
[#288 'vec2']: s#97
[#288 'vec3']: s#98
[#288 'vec4']: s#99
[#288 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#289 'array']: s#346
[#289 'atomic']: s#95
[#289 'bool']: s#88
[#289 'f16']: s#90
[#289 'f32']: s#89
[#289 'i32']: s#91
[#289 'mat2x2']: s#100
[#289 'mat2x3']: s#101
[#289 'mat2x4']: s#102
[#289 'mat3x2']: s#103
[#289 'mat3x3']: s#104
[#289 'mat3x4']: s#105
[#289 'mat4x2']: s#106
[#289 'mat4x3']: s#107
[#289 'mat4x4']: s#108
[#289 'ptr']: s#93
[#289 'sampler']: s#125
[#289 'sampler_comparison']: s#126
[#289 'texture_1d']: s#132
[#289 'texture_2d']: s#133
[#289 'texture_2d_array']: s#134
[#289 'texture_3d']: s#135
[#289 'texture_cube']: s#136
[#289 'texture_cube_array']: s#137
[#289 'texture_depth_2d']: s#127
[#289 'texture_depth_2d_array']: s#128
[#289 'texture_depth_cube']: s#129
[#289 'texture_depth_cube_array']: s#130
[#289 'texture_depth_multisampled_2d']: s#131
[#289 'texture_multisampled_2d']: s#138
[#289 'texture_storage_1d']: s#139
[#289 'texture_storage_2d']: s#140
[#289 'texture_storage_2d_array']: s#141
[#289 'texture_storage_3d']: s#142
[#289 'u32']: s#92
[#289 'vec2']: s#97
[#289 'vec3']: s#98
[#289 'vec4']: s#99
[#289 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#290 'function']: s#356
[#290 'private']: s#357
[#290 'storage']: s#360
[#290 'uniform']: s#359
[#290 'workgroup']: s#358
[#291 'array']: s#346
[#291 'atomic']: s#95
[#291 'bool']: s#88
[#291 'f16']: s#90
[#291 'f32']: s#89
[#291 'i32']: s#91
[#291 'mat2x2']: s#100
[#291 'mat2x3']: s#101
[#291 'mat2x4']: s#102
[#291 'mat3x2']: s#103
[#291 'mat3x3']: s#104
[#291 'mat3x4']: s#105
[#291 'mat4x2']: s#106
[#291 'mat4x3']: s#107
[#291 'mat4x4']: s#108
[#291 'ptr']: s#93
[#291 'sampler']: s#125
[#291 'sampler_comparison']: s#126
[#291 'texture_1d']: s#132
[#291 'texture_2d']: s#133
[#291 'texture_2d_array']: s#134
[#291 'texture_3d']: s#135
[#291 'texture_cube']: s#136
[#291 'texture_cube_array']: s#137
[#291 'texture_depth_2d']: s#127
[#291 'texture_depth_2d_array']: s#128
[#291 'texture_depth_cube']: s#129
[#291 'texture_depth_cube_array']: s#130
[#291 'texture_depth_multisampled_2d']: s#131
[#291 'texture_multisampled_2d']: s#138
[#291 'texture_storage_1d']: s#139
[#291 'texture_storage_2d']: s#140
[#291 'texture_storage_2d_array']: s#141
[#291 'texture_storage_3d']: s#142
[#291 'u32']: s#92
[#291 'vec2']: s#97
[#291 'vec3']: s#98
[#291 'vec4']: s#99
[#291 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#292 'array']: s#346
[#292 'atomic']: s#95
[#292 'bool']: s#88
[#292 'f16']: s#90
[#292 'f32']: s#89
[#292 'i32']: s#91
[#292 'mat2x2']: s#100
[#292 'mat2x3']: s#101
[#292 'mat2x4']: s#102
[#292 'mat3x2']: s#103
[#292 'mat3x3']: s#104
[#292 'mat3x4']: s#105
[#292 'mat4x2']: s#106
[#292 'mat4x3']: s#107
[#292 'mat4x4']: s#108
[#292 'ptr']: s#93
[#292 'sampler']: s#125
[#292 'sampler_comparison']: s#126
[#292 'texture_1d']: s#132
[#292 'texture_2d']: s#133
[#292 'texture_2d_array']: s#134
[#292 'texture_3d']: s#135
[#292 'texture_cube']: s#136
[#292 'texture_cube_array']: s#137
[#292 'texture_depth_2d']: s#127
[#292 'texture_depth_2d_array']: s#128
[#292 'texture_depth_cube']: s#129
[#292 'texture_depth_cube_array']: s#130
[#292 'texture_depth_multisampled_2d']: s#131
[#292 'texture_multisampled_2d']: s#138
[#292 'texture_storage_1d']: s#139
[#292 'texture_storage_2d']: s#140
[#292 'texture_storage_2d_array']: s#141
[#292 'texture_storage_3d']: s#142
[#292 'u32']: s#92
[#292 'vec2']: s#97
[#292 'vec3']: s#98
[#292 'vec4']: s#99
[#292 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#293 'array']: s#346
[#293 'atomic']: s#95
[#293 'bool']: s#88
[#293 'f16']: s#90
[#293 'f32']: s#89
[#293 'i32']: s#91
[#293 'mat2x2']: s#100
[#293 'mat2x3']: s#101
[#293 'mat2x4']: s#102
[#293 'mat3x2']: s#103
[#293 'mat3x3']: s#104
[#293 'mat3x4']: s#105
[#293 'mat4x2']: s#106
[#293 'mat4x3']: s#107
[#293 'mat4x4']: s#108
[#293 'ptr']: s#93
[#293 'sampler']: s#125
[#293 'sampler_comparison']: s#126
[#293 'texture_1d']: s#132
[#293 'texture_2d']: s#133
[#293 'texture_2d_array']: s#134
[#293 'texture_3d']: s#135
[#293 'texture_cube']: s#136
[#293 'texture_cube_array']: s#137
[#293 'texture_depth_2d']: s#127
[#293 'texture_depth_2d_array']: s#128
[#293 'texture_depth_cube']: s#129
[#293 'texture_depth_cube_array']: s#130
[#293 'texture_depth_multisampled_2d']: s#131
[#293 'texture_multisampled_2d']: s#138
[#293 'texture_storage_1d']: s#139
[#293 'texture_storage_2d']: s#140
[#293 'texture_storage_2d_array']: s#141
[#293 'texture_storage_3d']: s#142
[#293 'u32']: s#92
[#293 'vec2']: s#97
[#293 'vec3']: s#98
[#293 'vec4']: s#99
[#293 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#294 'bgra8unorm']: s#444
[#294 'r32float']: s#437
[#294 'r32sint']: s#436
[#294 'r32uint']: s#435
[#294 'rg32float']: s#440
[#294 'rg32sint']: s#439
[#294 'rg32uint']: s#438
[#294 'rgba16float']: s#434
[#294 'rgba16sint']: s#433
[#294 'rgba16uint']: s#432
[#294 'rgba32float']: s#443
[#294 'rgba32sint']: s#442
[#294 'rgba32uint']: s#441
[#294 'rgba8sint']: s#431
[#294 'rgba8snorm']: s#429
[#294 'rgba8uint']: s#430
[#294 'rgba8unorm']: s#428
[#295 '}']: s#426
[#296 '}']: r#178
[#297 '&']: s#334
[#297 '(']: s#335
[#297 '*']: s#333
[#297 ';']: s#298
[#297 '_']: s#331
[#297 'array']: s#81
[#297 'atomic']: s#95
[#297 'bool']: s#88
[#297 'break']: s#323
[#297 'const']: s#322
[#297 'const_assert']: s#25
[#297 'continue']: s#324
[#297 'discard']: s#309
[#297 'f16']: s#90
[#297 'f32']: s#89
[#297 'for']: s#317
[#297 'i32']: s#91
[#297 'if']: s#328
[#297 'let']: s#321
[#297 'loop']: s#316
[#297 'mat2x2']: s#100
[#297 'mat2x3']: s#101
[#297 'mat2x4']: s#102
[#297 'mat3x2']: s#103
[#297 'mat3x3']: s#104
[#297 'mat3x4']: s#105
[#297 'mat4x2']: s#106
[#297 'mat4x3']: s#107
[#297 'mat4x4']: s#108
[#297 'ptr']: s#93
[#297 'return']: s#313
[#297 'sampler']: s#125
[#297 'sampler_comparison']: s#126
[#297 'switch']: s#315
[#297 'texture_1d']: s#132
[#297 'texture_2d']: s#133
[#297 'texture_2d_array']: s#134
[#297 'texture_3d']: s#135
[#297 'texture_cube']: s#136
[#297 'texture_cube_array']: s#137
[#297 'texture_depth_2d']: s#127
[#297 'texture_depth_2d_array']: s#128
[#297 'texture_depth_cube']: s#129
[#297 'texture_depth_cube_array']: s#130
[#297 'texture_depth_multisampled_2d']: s#131
[#297 'texture_multisampled_2d']: s#138
[#297 'texture_storage_1d']: s#139
[#297 'texture_storage_2d']: s#140
[#297 'texture_storage_2d_array']: s#141
[#297 'texture_storage_3d']: s#142
[#297 'u32']: s#92
[#297 'var']: s#151
[#297 'vec2']: s#97
[#297 'vec3']: s#98
[#297 'vec4']: s#99
[#297 'while']: s#318
[#297 '{']: s#171
[#297 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#298 '&']: r#179
[#298 '(']: r#179
[#298 '*']: r#179
[#298 ';']: r#179
[#298 '_']: r#179
[#298 'array']: r#179
[#298 'atomic']: r#179
[#298 'bool']: r#179
[#298 'break']: r#179
[#298 'const']: r#179
[#298 'const_assert']: r#179
[#298 'continue']: r#179
[#298 'continuing']: r#179
[#298 'discard']: r#179
[#298 'f16']: r#179
[#298 'f32']: r#179
[#298 'for']: r#179
[#298 'i32']: r#179
[#298 'if']: r#179
[#298 'let']: r#179
[#298 'loop']: r#179
[#298 'mat2x2']: r#179
[#298 'mat2x3']: r#179
[#298 'mat2x4']: r#179
[#298 'mat3x2']: r#179
[#298 'mat3x3']: r#179
[#298 'mat3x4']: r#179
[#298 'mat4x2']: r#179
[#298 'mat4x3']: r#179
[#298 'mat4x4']: r#179
[#298 'ptr']: r#179
[#298 'return']: r#179
[#298 'sampler']: r#179
[#298 'sampler_comparison']: r#179
[#298 'switch']: r#179
[#298 'texture_1d']: r#179
[#298 'texture_2d']: r#179
[#298 'texture_2d_array']: r#179
[#298 'texture_3d']: r#179
[#298 'texture_cube']: r#179
[#298 'texture_cube_array']: r#179
[#298 'texture_depth_2d']: r#179
[#298 'texture_depth_2d_array']: r#179
[#298 'texture_depth_cube']: r#179
[#298 'texture_depth_cube_array']: r#179
[#298 'texture_depth_multisampled_2d']: r#179
[#298 'texture_multisampled_2d']: r#179
[#298 'texture_storage_1d']: r#179
[#298 'texture_storage_2d']: r#179
[#298 'texture_storage_2d_array']: r#179
[#298 'texture_storage_3d']: r#179
[#298 'u32']: r#179
[#298 'var']: r#179
[#298 'vec2']: r#179
[#298 'vec3']: r#179
[#298 'vec4']: r#179
[#298 'while']: r#179
[#298 '{']: r#179
[#298 '}']: r#179
[#298 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#179
[#299 ';']: s#424
[#300 '&']: r#180
[#300 '(']: r#180
[#300 '*']: r#180
[#300 ';']: r#180
[#300 '_']: r#180
[#300 'array']: r#180
[#300 'atomic']: r#180
[#300 'bool']: r#180
[#300 'break']: r#180
[#300 'const']: r#180
[#300 'const_assert']: r#180
[#300 'continue']: r#180
[#300 'continuing']: r#180
[#300 'discard']: r#180
[#300 'f16']: r#180
[#300 'f32']: r#180
[#300 'for']: r#180
[#300 'i32']: r#180
[#300 'if']: r#180
[#300 'let']: r#180
[#300 'loop']: r#180
[#300 'mat2x2']: r#180
[#300 'mat2x3']: r#180
[#300 'mat2x4']: r#180
[#300 'mat3x2']: r#180
[#300 'mat3x3']: r#180
[#300 'mat3x4']: r#180
[#300 'mat4x2']: r#180
[#300 'mat4x3']: r#180
[#300 'mat4x4']: r#180
[#300 'ptr']: r#180
[#300 'return']: r#180
[#300 'sampler']: r#180
[#300 'sampler_comparison']: r#180
[#300 'switch']: r#180
[#300 'texture_1d']: r#180
[#300 'texture_2d']: r#180
[#300 'texture_2d_array']: r#180
[#300 'texture_3d']: r#180
[#300 'texture_cube']: r#180
[#300 'texture_cube_array']: r#180
[#300 'texture_depth_2d']: r#180
[#300 'texture_depth_2d_array']: r#180
[#300 'texture_depth_cube']: r#180
[#300 'texture_depth_cube_array']: r#180
[#300 'texture_depth_multisampled_2d']: r#180
[#300 'texture_multisampled_2d']: r#180
[#300 'texture_storage_1d']: r#180
[#300 'texture_storage_2d']: r#180
[#300 'texture_storage_2d_array']: r#180
[#300 'texture_storage_3d']: r#180
[#300 'u32']: r#180
[#300 'var']: r#180
[#300 'vec2']: r#180
[#300 'vec3']: r#180
[#300 'vec4']: r#180
[#300 'while']: r#180
[#300 '{']: r#180
[#300 '}']: r#180
[#300 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#180
[#301 '&']: r#181
[#301 '(']: r#181
[#301 '*']: r#181
[#301 ';']: r#181
[#301 '_']: r#181
[#301 'array']: r#181
[#301 'atomic']: r#181
[#301 'bool']: r#181
[#301 'break']: r#181
[#301 'const']: r#181
[#301 'const_assert']: r#181
[#301 'continue']: r#181
[#301 'continuing']: r#181
[#301 'discard']: r#181
[#301 'f16']: r#181
[#301 'f32']: r#181
[#301 'for']: r#181
[#301 'i32']: r#181
[#301 'if']: r#181
[#301 'let']: r#181
[#301 'loop']: r#181
[#301 'mat2x2']: r#181
[#301 'mat2x3']: r#181
[#301 'mat2x4']: r#181
[#301 'mat3x2']: r#181
[#301 'mat3x3']: r#181
[#301 'mat3x4']: r#181
[#301 'mat4x2']: r#181
[#301 'mat4x3']: r#181
[#301 'mat4x4']: r#181
[#301 'ptr']: r#181
[#301 'return']: r#181
[#301 'sampler']: r#181
[#301 'sampler_comparison']: r#181
[#301 'switch']: r#181
[#301 'texture_1d']: r#181
[#301 'texture_2d']: r#181
[#301 'texture_2d_array']: r#181
[#301 'texture_3d']: r#181
[#301 'texture_cube']: r#181
[#301 'texture_cube_array']: r#181
[#301 'texture_depth_2d']: r#181
[#301 'texture_depth_2d_array']: r#181
[#301 'texture_depth_cube']: r#181
[#301 'texture_depth_cube_array']: r#181
[#301 'texture_depth_multisampled_2d']: r#181
[#301 'texture_multisampled_2d']: r#181
[#301 'texture_storage_1d']: r#181
[#301 'texture_storage_2d']: r#181
[#301 'texture_storage_2d_array']: r#181
[#301 'texture_storage_3d']: r#181
[#301 'u32']: r#181
[#301 'var']: r#181
[#301 'vec2']: r#181
[#301 'vec3']: r#181
[#301 'vec4']: r#181
[#301 'while']: r#181
[#301 '{']: r#181
[#301 '}']: r#181
[#301 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#181
[#302 '&']: r#182
[#302 '(']: r#182
[#302 '*']: r#182
[#302 ';']: r#182
[#302 '_']: r#182
[#302 'array']: r#182
[#302 'atomic']: r#182
[#302 'bool']: r#182
[#302 'break']: r#182
[#302 'const']: r#182
[#302 'const_assert']: r#182
[#302 'continue']: r#182
[#302 'continuing']: r#182
[#302 'discard']: r#182
[#302 'f16']: r#182
[#302 'f32']: r#182
[#302 'for']: r#182
[#302 'i32']: r#182
[#302 'if']: r#182
[#302 'let']: r#182
[#302 'loop']: r#182
[#302 'mat2x2']: r#182
[#302 'mat2x3']: r#182
[#302 'mat2x4']: r#182
[#302 'mat3x2']: r#182
[#302 'mat3x3']: r#182
[#302 'mat3x4']: r#182
[#302 'mat4x2']: r#182
[#302 'mat4x3']: r#182
[#302 'mat4x4']: r#182
[#302 'ptr']: r#182
[#302 'return']: r#182
[#302 'sampler']: r#182
[#302 'sampler_comparison']: r#182
[#302 'switch']: r#182
[#302 'texture_1d']: r#182
[#302 'texture_2d']: r#182
[#302 'texture_2d_array']: r#182
[#302 'texture_3d']: r#182
[#302 'texture_cube']: r#182
[#302 'texture_cube_array']: r#182
[#302 'texture_depth_2d']: r#182
[#302 'texture_depth_2d_array']: r#182
[#302 'texture_depth_cube']: r#182
[#302 'texture_depth_cube_array']: r#182
[#302 'texture_depth_multisampled_2d']: r#182
[#302 'texture_multisampled_2d']: r#182
[#302 'texture_storage_1d']: r#182
[#302 'texture_storage_2d']: r#182
[#302 'texture_storage_2d_array']: r#182
[#302 'texture_storage_3d']: r#182
[#302 'u32']: r#182
[#302 'var']: r#182
[#302 'vec2']: r#182
[#302 'vec3']: r#182
[#302 'vec4']: r#182
[#302 'while']: r#182
[#302 '{']: r#182
[#302 '}']: r#182
[#302 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#182
[#303 '&']: r#183
[#303 '(']: r#183
[#303 '*']: r#183
[#303 ';']: r#183
[#303 '_']: r#183
[#303 'array']: r#183
[#303 'atomic']: r#183
[#303 'bool']: r#183
[#303 'break']: r#183
[#303 'const']: r#183
[#303 'const_assert']: r#183
[#303 'continue']: r#183
[#303 'continuing']: r#183
[#303 'discard']: r#183
[#303 'f16']: r#183
[#303 'f32']: r#183
[#303 'for']: r#183
[#303 'i32']: r#183
[#303 'if']: r#183
[#303 'let']: r#183
[#303 'loop']: r#183
[#303 'mat2x2']: r#183
[#303 'mat2x3']: r#183
[#303 'mat2x4']: r#183
[#303 'mat3x2']: r#183
[#303 'mat3x3']: r#183
[#303 'mat3x4']: r#183
[#303 'mat4x2']: r#183
[#303 'mat4x3']: r#183
[#303 'mat4x4']: r#183
[#303 'ptr']: r#183
[#303 'return']: r#183
[#303 'sampler']: r#183
[#303 'sampler_comparison']: r#183
[#303 'switch']: r#183
[#303 'texture_1d']: r#183
[#303 'texture_2d']: r#183
[#303 'texture_2d_array']: r#183
[#303 'texture_3d']: r#183
[#303 'texture_cube']: r#183
[#303 'texture_cube_array']: r#183
[#303 'texture_depth_2d']: r#183
[#303 'texture_depth_2d_array']: r#183
[#303 'texture_depth_cube']: r#183
[#303 'texture_depth_cube_array']: r#183
[#303 'texture_depth_multisampled_2d']: r#183
[#303 'texture_multisampled_2d']: r#183
[#303 'texture_storage_1d']: r#183
[#303 'texture_storage_2d']: r#183
[#303 'texture_storage_2d_array']: r#183
[#303 'texture_storage_3d']: r#183
[#303 'u32']: r#183
[#303 'var']: r#183
[#303 'vec2']: r#183
[#303 'vec3']: r#183
[#303 'vec4']: r#183
[#303 'while']: r#183
[#303 '{']: r#183
[#303 '}']: r#183
[#303 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#183
[#304 '&']: r#184
[#304 '(']: r#184
[#304 '*']: r#184
[#304 ';']: r#184
[#304 '_']: r#184
[#304 'array']: r#184
[#304 'atomic']: r#184
[#304 'bool']: r#184
[#304 'break']: r#184
[#304 'const']: r#184
[#304 'const_assert']: r#184
[#304 'continue']: r#184
[#304 'continuing']: r#184
[#304 'discard']: r#184
[#304 'f16']: r#184
[#304 'f32']: r#184
[#304 'for']: r#184
[#304 'i32']: r#184
[#304 'if']: r#184
[#304 'let']: r#184
[#304 'loop']: r#184
[#304 'mat2x2']: r#184
[#304 'mat2x3']: r#184
[#304 'mat2x4']: r#184
[#304 'mat3x2']: r#184
[#304 'mat3x3']: r#184
[#304 'mat3x4']: r#184
[#304 'mat4x2']: r#184
[#304 'mat4x3']: r#184
[#304 'mat4x4']: r#184
[#304 'ptr']: r#184
[#304 'return']: r#184
[#304 'sampler']: r#184
[#304 'sampler_comparison']: r#184
[#304 'switch']: r#184
[#304 'texture_1d']: r#184
[#304 'texture_2d']: r#184
[#304 'texture_2d_array']: r#184
[#304 'texture_3d']: r#184
[#304 'texture_cube']: r#184
[#304 'texture_cube_array']: r#184
[#304 'texture_depth_2d']: r#184
[#304 'texture_depth_2d_array']: r#184
[#304 'texture_depth_cube']: r#184
[#304 'texture_depth_cube_array']: r#184
[#304 'texture_depth_multisampled_2d']: r#184
[#304 'texture_multisampled_2d']: r#184
[#304 'texture_storage_1d']: r#184
[#304 'texture_storage_2d']: r#184
[#304 'texture_storage_2d_array']: r#184
[#304 'texture_storage_3d']: r#184
[#304 'u32']: r#184
[#304 'var']: r#184
[#304 'vec2']: r#184
[#304 'vec3']: r#184
[#304 'vec4']: r#184
[#304 'while']: r#184
[#304 '{']: r#184
[#304 '}']: r#184
[#304 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#184
[#305 ';']: s#423
[#306 ';']: s#422
[#307 ';']: s#421
[#308 ';']: s#420
[#309 ';']: s#419
[#310 ';']: s#418
[#311 '&']: r#185
[#311 '(']: r#185
[#311 '*']: r#185
[#311 ';']: r#185
[#311 '_']: r#185
[#311 'array']: r#185
[#311 'atomic']: r#185
[#311 'bool']: r#185
[#311 'break']: r#185
[#311 'const']: r#185
[#311 'const_assert']: r#185
[#311 'continue']: r#185
[#311 'continuing']: r#185
[#311 'discard']: r#185
[#311 'f16']: r#185
[#311 'f32']: r#185
[#311 'for']: r#185
[#311 'i32']: r#185
[#311 'if']: r#185
[#311 'let']: r#185
[#311 'loop']: r#185
[#311 'mat2x2']: r#185
[#311 'mat2x3']: r#185
[#311 'mat2x4']: r#185
[#311 'mat3x2']: r#185
[#311 'mat3x3']: r#185
[#311 'mat3x4']: r#185
[#311 'mat4x2']: r#185
[#311 'mat4x3']: r#185
[#311 'mat4x4']: r#185
[#311 'ptr']: r#185
[#311 'return']: r#185
[#311 'sampler']: r#185
[#311 'sampler_comparison']: r#185
[#311 'switch']: r#185
[#311 'texture_1d']: r#185
[#311 'texture_2d']: r#185
[#311 'texture_2d_array']: r#185
[#311 'texture_3d']: r#185
[#311 'texture_cube']: r#185
[#311 'texture_cube_array']: r#185
[#311 'texture_depth_2d']: r#185
[#311 'texture_depth_2d_array']: r#185
[#311 'texture_depth_cube']: r#185
[#311 'texture_depth_cube_array']: r#185
[#311 'texture_depth_multisampled_2d']: r#185
[#311 'texture_multisampled_2d']: r#185
[#311 'texture_storage_1d']: r#185
[#311 'texture_storage_2d']: r#185
[#311 'texture_storage_2d_array']: r#185
[#311 'texture_storage_3d']: r#185
[#311 'u32']: r#185
[#311 'var']: r#185
[#311 'vec2']: r#185
[#311 'vec3']: r#185
[#311 'vec4']: r#185
[#311 'while']: r#185
[#311 '{']: r#185
[#311 '}']: r#185
[#311 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#185
[#312 ';']: s#417
[#313 '!']: s#62
[#313 '&']: s#65
[#313 '(']: s#77
[#313 '*']: s#64
[#313 '-']: s#61
[#313 'array']: s#81
[#313 'atomic']: s#95
[#313 'bitcast']: s#71
[#313 'bool']: s#88
[#313 'f16']: s#90
[#313 'f32']: s#89
[#313 'false']: s#87
[#313 'i32']: s#91
[#313 'mat2x2']: s#100
[#313 'mat2x3']: s#101
[#313 'mat2x4']: s#102
[#313 'mat3x2']: s#103
[#313 'mat3x3']: s#104
[#313 'mat3x4']: s#105
[#313 'mat4x2']: s#106
[#313 'mat4x3']: s#107
[#313 'mat4x4']: s#108
[#313 'ptr']: s#93
[#313 'sampler']: s#125
[#313 'sampler_comparison']: s#126
[#313 'texture_1d']: s#132
[#313 'texture_2d']: s#133
[#313 'texture_2d_array']: s#134
[#313 'texture_3d']: s#135
[#313 'texture_cube']: s#136
[#313 'texture_cube_array']: s#137
[#313 'texture_depth_2d']: s#127
[#313 'texture_depth_2d_array']: s#128
[#313 'texture_depth_cube']: s#129
[#313 'texture_depth_cube_array']: s#130
[#313 'texture_depth_multisampled_2d']: s#131
[#313 'texture_multisampled_2d']: s#138
[#313 'texture_storage_1d']: s#139
[#313 'texture_storage_2d']: s#140
[#313 'texture_storage_2d_array']: s#141
[#313 'texture_storage_3d']: s#142
[#313 'true']: s#86
[#313 'u32']: s#92
[#313 'vec2']: s#97
[#313 'vec3']: s#98
[#313 'vec4']: s#99
[#313 '~']: s#63
[#313 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#313 /0[fh]/]: s#112
[#313 /0[iu]?/]: s#109
[#313 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#313 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#313 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#313 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#313 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#313 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#313 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#313 /[1-9][0-9]*[fh]/]: s#113
[#313 /[1-9][0-9]*[iu]?/]: s#110
[#314 'else']: s#414
[#315 '!']: s#62
[#315 '&']: s#65
[#315 '(']: s#77
[#315 '*']: s#64
[#315 '-']: s#61
[#315 'array']: s#81
[#315 'atomic']: s#95
[#315 'bitcast']: s#71
[#315 'bool']: s#88
[#315 'f16']: s#90
[#315 'f32']: s#89
[#315 'false']: s#87
[#315 'i32']: s#91
[#315 'mat2x2']: s#100
[#315 'mat2x3']: s#101
[#315 'mat2x4']: s#102
[#315 'mat3x2']: s#103
[#315 'mat3x3']: s#104
[#315 'mat3x4']: s#105
[#315 'mat4x2']: s#106
[#315 'mat4x3']: s#107
[#315 'mat4x4']: s#108
[#315 'ptr']: s#93
[#315 'sampler']: s#125
[#315 'sampler_comparison']: s#126
[#315 'texture_1d']: s#132
[#315 'texture_2d']: s#133
[#315 'texture_2d_array']: s#134
[#315 'texture_3d']: s#135
[#315 'texture_cube']: s#136
[#315 'texture_cube_array']: s#137
[#315 'texture_depth_2d']: s#127
[#315 'texture_depth_2d_array']: s#128
[#315 'texture_depth_cube']: s#129
[#315 'texture_depth_cube_array']: s#130
[#315 'texture_depth_multisampled_2d']: s#131
[#315 'texture_multisampled_2d']: s#138
[#315 'texture_storage_1d']: s#139
[#315 'texture_storage_2d']: s#140
[#315 'texture_storage_2d_array']: s#141
[#315 'texture_storage_3d']: s#142
[#315 'true']: s#86
[#315 'u32']: s#92
[#315 'vec2']: s#97
[#315 'vec3']: s#98
[#315 'vec4']: s#99
[#315 '~']: s#63
[#315 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#315 /0[fh]/]: s#112
[#315 /0[iu]?/]: s#109
[#315 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#315 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#315 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#315 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#315 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#315 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#315 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#315 /[1-9][0-9]*[fh]/]: s#113
[#315 /[1-9][0-9]*[iu]?/]: s#110
[#316 '{']: s#409
[#317 '(']: s#408
[#318 '!']: s#62
[#318 '&']: s#65
[#318 '(']: s#77
[#318 '*']: s#64
[#318 '-']: s#61
[#318 'array']: s#81
[#318 'atomic']: s#95
[#318 'bitcast']: s#71
[#318 'bool']: s#88
[#318 'f16']: s#90
[#318 'f32']: s#89
[#318 'false']: s#87
[#318 'i32']: s#91
[#318 'mat2x2']: s#100
[#318 'mat2x3']: s#101
[#318 'mat2x4']: s#102
[#318 'mat3x2']: s#103
[#318 'mat3x3']: s#104
[#318 'mat3x4']: s#105
[#318 'mat4x2']: s#106
[#318 'mat4x3']: s#107
[#318 'mat4x4']: s#108
[#318 'ptr']: s#93
[#318 'sampler']: s#125
[#318 'sampler_comparison']: s#126
[#318 'texture_1d']: s#132
[#318 'texture_2d']: s#133
[#318 'texture_2d_array']: s#134
[#318 'texture_3d']: s#135
[#318 'texture_cube']: s#136
[#318 'texture_cube_array']: s#137
[#318 'texture_depth_2d']: s#127
[#318 'texture_depth_2d_array']: s#128
[#318 'texture_depth_cube']: s#129
[#318 'texture_depth_cube_array']: s#130
[#318 'texture_depth_multisampled_2d']: s#131
[#318 'texture_multisampled_2d']: s#138
[#318 'texture_storage_1d']: s#139
[#318 'texture_storage_2d']: s#140
[#318 'texture_storage_2d_array']: s#141
[#318 'texture_storage_3d']: s#142
[#318 'true']: s#86
[#318 'u32']: s#92
[#318 'vec2']: s#97
[#318 'vec3']: s#98
[#318 'vec4']: s#99
[#318 '~']: s#63
[#318 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#318 /0[fh]/]: s#112
[#318 /0[iu]?/]: s#109
[#318 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#318 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#318 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#318 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#318 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#318 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#318 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#318 /[1-9][0-9]*[fh]/]: s#113
[#318 /[1-9][0-9]*[iu]?/]: s#110
[#319 '(']: s#182
[#320 ';']: r#186
[#320 '=']: s#405
[#321 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#322 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#323 ';']: r#187
[#324 ';']: r#188
[#325 ')']: r#189
[#325 ';']: r#189
[#326 ')']: r#190
[#326 ';']: r#190
[#327 ')']: r#191
[#327 ';']: r#191
[#328 '!']: s#62
[#328 '&']: s#65
[#328 '(']: s#77
[#328 '*']: s#64
[#328 '-']: s#61
[#328 'array']: s#81
[#328 'atomic']: s#95
[#328 'bitcast']: s#71
[#328 'bool']: s#88
[#328 'f16']: s#90
[#328 'f32']: s#89
[#328 'false']: s#87
[#328 'i32']: s#91
[#328 'mat2x2']: s#100
[#328 'mat2x3']: s#101
[#328 'mat2x4']: s#102
[#328 'mat3x2']: s#103
[#328 'mat3x3']: s#104
[#328 'mat3x4']: s#105
[#328 'mat4x2']: s#106
[#328 'mat4x3']: s#107
[#328 'mat4x4']: s#108
[#328 'ptr']: s#93
[#328 'sampler']: s#125
[#328 'sampler_comparison']: s#126
[#328 'texture_1d']: s#132
[#328 'texture_2d']: s#133
[#328 'texture_2d_array']: s#134
[#328 'texture_3d']: s#135
[#328 'texture_cube']: s#136
[#328 'texture_cube_array']: s#137
[#328 'texture_depth_2d']: s#127
[#328 'texture_depth_2d_array']: s#128
[#328 'texture_depth_cube']: s#129
[#328 'texture_depth_cube_array']: s#130
[#328 'texture_depth_multisampled_2d']: s#131
[#328 'texture_multisampled_2d']: s#138
[#328 'texture_storage_1d']: s#139
[#328 'texture_storage_2d']: s#140
[#328 'texture_storage_2d_array']: s#141
[#328 'texture_storage_3d']: s#142
[#328 'true']: s#86
[#328 'u32']: s#92
[#328 'vec2']: s#97
[#328 'vec3']: s#98
[#328 'vec4']: s#99
[#328 '~']: s#63
[#328 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#328 /0[fh]/]: s#112
[#328 /0[iu]?/]: s#109
[#328 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#328 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#328 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#328 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#328 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#328 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#328 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#328 /[1-9][0-9]*[fh]/]: s#113
[#328 /[1-9][0-9]*[iu]?/]: s#110
[#329 '%=']: r#192
[#329 '&=']: r#192
[#329 '(']: r#33
[#329 '*=']: r#192
[#329 '++']: r#192
[#329 '+=']: r#192
[#329 '--']: r#192
[#329 '-=']: r#192
[#329 '.']: r#192
[#329 '/=']: r#192
[#329 '=']: r#192
[#329 '[']: r#192
[#329 '^=']: r#192
[#329 '|=']: r#192
[#329 /\u200B_shift_left_assign/]: r#192
[#329 /\u200B_shift_right_assign/]: r#192
[#330 '%=']: s#394
[#330 '&=']: s#395
[#330 '*=']: s#392
[#330 '++']: s#386
[#330 '+=']: s#390
[#330 '--']: s#387
[#330 '-=']: s#391
[#330 '/=']: s#393
[#330 '=']: s#388
[#330 '^=']: s#397
[#330 '|=']: s#396
[#330 /\u200B_shift_left_assign/]: s#401
[#330 /\u200B_shift_right_assign/]: s#400
[#331 '=']: s#384
[#332 '.']: s#187
[#332 '[']: s#186
[#333 '&']: s#334
[#333 '(']: s#335
[#333 '*']: s#333
[#333 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#334 '&']: s#334
[#334 '(']: s#335
[#334 '*']: s#333
[#334 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#335 '&']: s#334
[#335 '(']: s#335
[#335 '*']: s#333
[#335 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#336 '@']: s#30
[#337 ',']: s#371
[#338 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#271
[#339 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#193
[#340 '@']: s#30
[#341 ';']: r#194
[#342 ')']: r#195
[#342 ',']: r#195
[#342 ';']: r#195
[#342 '=']: r#195
[#342 '{']: r#195
[#342 '}']: r#195
[#342 /\u200B_template_args_end/]: r#195
[#343 ')']: r#196
[#343 ',']: r#196
[#343 ';']: r#196
[#343 '=']: r#196
[#343 '{']: r#196
[#343 '}']: r#196
[#343 /\u200B_template_args_end/]: r#196
[#344 /\u200B_disambiguate_template/]: s#159
[#345 /\u200B_disambiguate_template/]: s#159
[#346 /\u200B_disambiguate_template/]: s#159
[#347 ';']: r#197
[#348 '!']: s#62
[#348 '&']: s#65
[#348 '(']: s#77
[#348 '*']: s#64
[#348 '-']: s#61
[#348 'array']: s#81
[#348 'atomic']: s#95
[#348 'bitcast']: s#71
[#348 'bool']: s#88
[#348 'f16']: s#90
[#348 'f32']: s#89
[#348 'false']: s#87
[#348 'i32']: s#91
[#348 'mat2x2']: s#100
[#348 'mat2x3']: s#101
[#348 'mat2x4']: s#102
[#348 'mat3x2']: s#103
[#348 'mat3x3']: s#104
[#348 'mat3x4']: s#105
[#348 'mat4x2']: s#106
[#348 'mat4x3']: s#107
[#348 'mat4x4']: s#108
[#348 'ptr']: s#93
[#348 'sampler']: s#125
[#348 'sampler_comparison']: s#126
[#348 'texture_1d']: s#132
[#348 'texture_2d']: s#133
[#348 'texture_2d_array']: s#134
[#348 'texture_3d']: s#135
[#348 'texture_cube']: s#136
[#348 'texture_cube_array']: s#137
[#348 'texture_depth_2d']: s#127
[#348 'texture_depth_2d_array']: s#128
[#348 'texture_depth_cube']: s#129
[#348 'texture_depth_cube_array']: s#130
[#348 'texture_depth_multisampled_2d']: s#131
[#348 'texture_multisampled_2d']: s#138
[#348 'texture_storage_1d']: s#139
[#348 'texture_storage_2d']: s#140
[#348 'texture_storage_2d_array']: s#141
[#348 'texture_storage_3d']: s#142
[#348 'true']: s#86
[#348 'u32']: s#92
[#348 'vec2']: s#97
[#348 'vec3']: s#98
[#348 'vec4']: s#99
[#348 '~']: s#63
[#348 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#348 /0[fh]/]: s#112
[#348 /0[iu]?/]: s#109
[#348 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#348 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#348 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#348 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#348 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#348 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#348 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#348 /[1-9][0-9]*[fh]/]: s#113
[#348 /[1-9][0-9]*[iu]?/]: s#110
[#349 ';']: r#198
[#350 ';']: r#199
[#350 '=']: r#199
[#351 ';']: r#200
[#352 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#353 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#201
[#354 'function']: s#356
[#354 'private']: s#357
[#354 'storage']: s#360
[#354 'uniform']: s#359
[#354 'workgroup']: s#358
[#355 ',']: s#535
[#356 ',']: r#202
[#356 /\u200B_template_args_end/]: r#202
[#357 ',']: r#203
[#357 /\u200B_template_args_end/]: r#203
[#358 ',']: r#204
[#358 /\u200B_template_args_end/]: r#204
[#359 ',']: r#205
[#359 /\u200B_template_args_end/]: r#205
[#360 ',']: r#206
[#360 /\u200B_template_args_end/]: r#206
[#361 ';']: r#207
[#361 '=']: r#207
[#362 ';']: r#208
[#363 /\u200B_template_args_start/]: s#282
[#364 /\u200B_template_args_start/]: s#282
[#365 /\u200B_template_args_start/]: s#282
[#366 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#209
[#367 ':']: s#533
[#368 ',']: s#532
[#369 ',']: r#210
[#369 '}']: r#210
[#370 ',']: s#371
[#371 '@']: s#30
[#372 ')']: s#528
[#373 ')']: r#211
[#374 ',']: s#527
[#375 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#376 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#212
[#377 '@']: s#30
[#378 ')']: s#521
[#379 '%=']: r#192
[#379 '&=']: r#192
[#379 ')']: r#192
[#379 '*=']: r#192
[#379 '++']: r#192
[#379 '+=']: r#192
[#379 '--']: r#192
[#379 '-=']: r#192
[#379 '.']: r#192
[#379 '/=']: r#192
[#379 '=']: r#192
[#379 '[']: r#192
[#379 '^=']: r#192
[#379 '|=']: r#192
[#379 /\u200B_shift_left_assign/]: r#192
[#379 /\u200B_shift_right_assign/]: r#192
[#380 '%=']: r#213
[#380 '&=']: r#213
[#380 ')']: r#213
[#380 '*=']: r#213
[#380 '++']: r#213
[#380 '+=']: r#213
[#380 '--']: r#213
[#380 '-=']: r#213
[#380 '/=']: r#213
[#380 '=']: r#213
[#380 '^=']: r#213
[#380 '|=']: r#213
[#380 /\u200B_shift_left_assign/]: r#213
[#380 /\u200B_shift_right_assign/]: r#213
[#381 '%=']: r#214
[#381 '&=']: r#214
[#381 ')']: r#214
[#381 '*=']: r#214
[#381 '++']: r#214
[#381 '+=']: r#214
[#381 '--']: r#214
[#381 '-=']: r#214
[#381 '/=']: r#214
[#381 '=']: r#214
[#381 '^=']: r#214
[#381 '|=']: r#214
[#381 /\u200B_shift_left_assign/]: r#214
[#381 /\u200B_shift_right_assign/]: r#214
[#382 '%=']: r#215
[#382 '&=']: r#215
[#382 ')']: r#215
[#382 '*=']: r#215
[#382 '++']: r#215
[#382 '+=']: r#215
[#382 '--']: r#215
[#382 '-=']: r#215
[#382 '/=']: r#215
[#382 '=']: r#215
[#382 '^=']: r#215
[#382 '|=']: r#215
[#382 /\u200B_shift_left_assign/]: r#215
[#382 /\u200B_shift_right_assign/]: r#215
[#383 '%=']: r#216
[#383 '&=']: r#216
[#383 ')']: r#216
[#383 '*=']: r#216
[#383 '++']: r#216
[#383 '+=']: r#216
[#383 '--']: r#216
[#383 '-=']: r#216
[#383 '/=']: r#216
[#383 '=']: r#216
[#383 '^=']: r#216
[#383 '|=']: r#216
[#383 /\u200B_shift_left_assign/]: r#216
[#383 /\u200B_shift_right_assign/]: r#216
[#384 '!']: s#62
[#384 '&']: s#65
[#384 '(']: s#77
[#384 '*']: s#64
[#384 '-']: s#61
[#384 'array']: s#81
[#384 'atomic']: s#95
[#384 'bitcast']: s#71
[#384 'bool']: s#88
[#384 'f16']: s#90
[#384 'f32']: s#89
[#384 'false']: s#87
[#384 'i32']: s#91
[#384 'mat2x2']: s#100
[#384 'mat2x3']: s#101
[#384 'mat2x4']: s#102
[#384 'mat3x2']: s#103
[#384 'mat3x3']: s#104
[#384 'mat3x4']: s#105
[#384 'mat4x2']: s#106
[#384 'mat4x3']: s#107
[#384 'mat4x4']: s#108
[#384 'ptr']: s#93
[#384 'sampler']: s#125
[#384 'sampler_comparison']: s#126
[#384 'texture_1d']: s#132
[#384 'texture_2d']: s#133
[#384 'texture_2d_array']: s#134
[#384 'texture_3d']: s#135
[#384 'texture_cube']: s#136
[#384 'texture_cube_array']: s#137
[#384 'texture_depth_2d']: s#127
[#384 'texture_depth_2d_array']: s#128
[#384 'texture_depth_cube']: s#129
[#384 'texture_depth_cube_array']: s#130
[#384 'texture_depth_multisampled_2d']: s#131
[#384 'texture_multisampled_2d']: s#138
[#384 'texture_storage_1d']: s#139
[#384 'texture_storage_2d']: s#140
[#384 'texture_storage_2d_array']: s#141
[#384 'texture_storage_3d']: s#142
[#384 'true']: s#86
[#384 'u32']: s#92
[#384 'vec2']: s#97
[#384 'vec3']: s#98
[#384 'vec4']: s#99
[#384 '~']: s#63
[#384 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#384 /0[fh]/]: s#112
[#384 /0[iu]?/]: s#109
[#384 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#384 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#384 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#384 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#384 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#384 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#384 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#384 /[1-9][0-9]*[fh]/]: s#113
[#384 /[1-9][0-9]*[iu]?/]: s#110
[#385 '!']: s#62
[#385 '&']: s#65
[#385 '(']: s#77
[#385 '*']: s#64
[#385 '-']: s#61
[#385 'array']: s#81
[#385 'atomic']: s#95
[#385 'bitcast']: s#71
[#385 'bool']: s#88
[#385 'f16']: s#90
[#385 'f32']: s#89
[#385 'false']: s#87
[#385 'i32']: s#91
[#385 'mat2x2']: s#100
[#385 'mat2x3']: s#101
[#385 'mat2x4']: s#102
[#385 'mat3x2']: s#103
[#385 'mat3x3']: s#104
[#385 'mat3x4']: s#105
[#385 'mat4x2']: s#106
[#385 'mat4x3']: s#107
[#385 'mat4x4']: s#108
[#385 'ptr']: s#93
[#385 'sampler']: s#125
[#385 'sampler_comparison']: s#126
[#385 'texture_1d']: s#132
[#385 'texture_2d']: s#133
[#385 'texture_2d_array']: s#134
[#385 'texture_3d']: s#135
[#385 'texture_cube']: s#136
[#385 'texture_cube_array']: s#137
[#385 'texture_depth_2d']: s#127
[#385 'texture_depth_2d_array']: s#128
[#385 'texture_depth_cube']: s#129
[#385 'texture_depth_cube_array']: s#130
[#385 'texture_depth_multisampled_2d']: s#131
[#385 'texture_multisampled_2d']: s#138
[#385 'texture_storage_1d']: s#139
[#385 'texture_storage_2d']: s#140
[#385 'texture_storage_2d_array']: s#141
[#385 'texture_storage_3d']: s#142
[#385 'true']: s#86
[#385 'u32']: s#92
[#385 'vec2']: s#97
[#385 'vec3']: s#98
[#385 'vec4']: s#99
[#385 '~']: s#63
[#385 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#385 /0[fh]/]: s#112
[#385 /0[iu]?/]: s#109
[#385 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#385 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#385 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#385 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#385 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#385 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#385 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#385 /[1-9][0-9]*[fh]/]: s#113
[#385 /[1-9][0-9]*[iu]?/]: s#110
[#386 ')']: r#217
[#386 ';']: r#217
[#387 ')']: r#218
[#387 ';']: r#218
[#388 '!']: r#219
[#388 '&']: r#219
[#388 '(']: r#219
[#388 '*']: r#219
[#388 '-']: r#219
[#388 'array']: r#219
[#388 'atomic']: r#219
[#388 'bitcast']: r#219
[#388 'bool']: r#219
[#388 'f16']: r#219
[#388 'f32']: r#219
[#388 'false']: r#219
[#388 'i32']: r#219
[#388 'mat2x2']: r#219
[#388 'mat2x3']: r#219
[#388 'mat2x4']: r#219
[#388 'mat3x2']: r#219
[#388 'mat3x3']: r#219
[#388 'mat3x4']: r#219
[#388 'mat4x2']: r#219
[#388 'mat4x3']: r#219
[#388 'mat4x4']: r#219
[#388 'ptr']: r#219
[#388 'sampler']: r#219
[#388 'sampler_comparison']: r#219
[#388 'texture_1d']: r#219
[#388 'texture_2d']: r#219
[#388 'texture_2d_array']: r#219
[#388 'texture_3d']: r#219
[#388 'texture_cube']: r#219
[#388 'texture_cube_array']: r#219
[#388 'texture_depth_2d']: r#219
[#388 'texture_depth_2d_array']: r#219
[#388 'texture_depth_cube']: r#219
[#388 'texture_depth_cube_array']: r#219
[#388 'texture_depth_multisampled_2d']: r#219
[#388 'texture_multisampled_2d']: r#219
[#388 'texture_storage_1d']: r#219
[#388 'texture_storage_2d']: r#219
[#388 'texture_storage_2d_array']: r#219
[#388 'texture_storage_3d']: r#219
[#388 'true']: r#219
[#388 'u32']: r#219
[#388 'vec2']: r#219
[#388 'vec3']: r#219
[#388 'vec4']: r#219
[#388 '~']: r#219
[#388 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#219
[#388 /0[fh]/]: r#219
[#388 /0[iu]?/]: r#219
[#388 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#219
[#388 /0[xX][0-9a-fA-F]+[iu]?/]: r#219
[#388 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#219
[#388 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#219
[#388 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#219
[#388 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#219
[#388 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#219
[#388 /[1-9][0-9]*[fh]/]: r#219
[#388 /[1-9][0-9]*[iu]?/]: r#219
[#389 '!']: r#220
[#389 '&']: r#220
[#389 '(']: r#220
[#389 '*']: r#220
[#389 '-']: r#220
[#389 'array']: r#220
[#389 'atomic']: r#220
[#389 'bitcast']: r#220
[#389 'bool']: r#220
[#389 'f16']: r#220
[#389 'f32']: r#220
[#389 'false']: r#220
[#389 'i32']: r#220
[#389 'mat2x2']: r#220
[#389 'mat2x3']: r#220
[#389 'mat2x4']: r#220
[#389 'mat3x2']: r#220
[#389 'mat3x3']: r#220
[#389 'mat3x4']: r#220
[#389 'mat4x2']: r#220
[#389 'mat4x3']: r#220
[#389 'mat4x4']: r#220
[#389 'ptr']: r#220
[#389 'sampler']: r#220
[#389 'sampler_comparison']: r#220
[#389 'texture_1d']: r#220
[#389 'texture_2d']: r#220
[#389 'texture_2d_array']: r#220
[#389 'texture_3d']: r#220
[#389 'texture_cube']: r#220
[#389 'texture_cube_array']: r#220
[#389 'texture_depth_2d']: r#220
[#389 'texture_depth_2d_array']: r#220
[#389 'texture_depth_cube']: r#220
[#389 'texture_depth_cube_array']: r#220
[#389 'texture_depth_multisampled_2d']: r#220
[#389 'texture_multisampled_2d']: r#220
[#389 'texture_storage_1d']: r#220
[#389 'texture_storage_2d']: r#220
[#389 'texture_storage_2d_array']: r#220
[#389 'texture_storage_3d']: r#220
[#389 'true']: r#220
[#389 'u32']: r#220
[#389 'vec2']: r#220
[#389 'vec3']: r#220
[#389 'vec4']: r#220
[#389 '~']: r#220
[#389 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#220
[#389 /0[fh]/]: r#220
[#389 /0[iu]?/]: r#220
[#389 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#220
[#389 /0[xX][0-9a-fA-F]+[iu]?/]: r#220
[#389 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#220
[#389 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#220
[#389 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#220
[#389 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#220
[#389 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#220
[#389 /[1-9][0-9]*[fh]/]: r#220
[#389 /[1-9][0-9]*[iu]?/]: r#220
[#390 '!']: r#221
[#390 '&']: r#221
[#390 '(']: r#221
[#390 '*']: r#221
[#390 '-']: r#221
[#390 'array']: r#221
[#390 'atomic']: r#221
[#390 'bitcast']: r#221
[#390 'bool']: r#221
[#390 'f16']: r#221
[#390 'f32']: r#221
[#390 'false']: r#221
[#390 'i32']: r#221
[#390 'mat2x2']: r#221
[#390 'mat2x3']: r#221
[#390 'mat2x4']: r#221
[#390 'mat3x2']: r#221
[#390 'mat3x3']: r#221
[#390 'mat3x4']: r#221
[#390 'mat4x2']: r#221
[#390 'mat4x3']: r#221
[#390 'mat4x4']: r#221
[#390 'ptr']: r#221
[#390 'sampler']: r#221
[#390 'sampler_comparison']: r#221
[#390 'texture_1d']: r#221
[#390 'texture_2d']: r#221
[#390 'texture_2d_array']: r#221
[#390 'texture_3d']: r#221
[#390 'texture_cube']: r#221
[#390 'texture_cube_array']: r#221
[#390 'texture_depth_2d']: r#221
[#390 'texture_depth_2d_array']: r#221
[#390 'texture_depth_cube']: r#221
[#390 'texture_depth_cube_array']: r#221
[#390 'texture_depth_multisampled_2d']: r#221
[#390 'texture_multisampled_2d']: r#221
[#390 'texture_storage_1d']: r#221
[#390 'texture_storage_2d']: r#221
[#390 'texture_storage_2d_array']: r#221
[#390 'texture_storage_3d']: r#221
[#390 'true']: r#221
[#390 'u32']: r#221
[#390 'vec2']: r#221
[#390 'vec3']: r#221
[#390 'vec4']: r#221
[#390 '~']: r#221
[#390 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#221
[#390 /0[fh]/]: r#221
[#390 /0[iu]?/]: r#221
[#390 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#221
[#390 /0[xX][0-9a-fA-F]+[iu]?/]: r#221
[#390 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#221
[#390 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#221
[#390 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#221
[#390 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#221
[#390 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#221
[#390 /[1-9][0-9]*[fh]/]: r#221
[#390 /[1-9][0-9]*[iu]?/]: r#221
[#391 '!']: r#222
[#391 '&']: r#222
[#391 '(']: r#222
[#391 '*']: r#222
[#391 '-']: r#222
[#391 'array']: r#222
[#391 'atomic']: r#222
[#391 'bitcast']: r#222
[#391 'bool']: r#222
[#391 'f16']: r#222
[#391 'f32']: r#222
[#391 'false']: r#222
[#391 'i32']: r#222
[#391 'mat2x2']: r#222
[#391 'mat2x3']: r#222
[#391 'mat2x4']: r#222
[#391 'mat3x2']: r#222
[#391 'mat3x3']: r#222
[#391 'mat3x4']: r#222
[#391 'mat4x2']: r#222
[#391 'mat4x3']: r#222
[#391 'mat4x4']: r#222
[#391 'ptr']: r#222
[#391 'sampler']: r#222
[#391 'sampler_comparison']: r#222
[#391 'texture_1d']: r#222
[#391 'texture_2d']: r#222
[#391 'texture_2d_array']: r#222
[#391 'texture_3d']: r#222
[#391 'texture_cube']: r#222
[#391 'texture_cube_array']: r#222
[#391 'texture_depth_2d']: r#222
[#391 'texture_depth_2d_array']: r#222
[#391 'texture_depth_cube']: r#222
[#391 'texture_depth_cube_array']: r#222
[#391 'texture_depth_multisampled_2d']: r#222
[#391 'texture_multisampled_2d']: r#222
[#391 'texture_storage_1d']: r#222
[#391 'texture_storage_2d']: r#222
[#391 'texture_storage_2d_array']: r#222
[#391 'texture_storage_3d']: r#222
[#391 'true']: r#222
[#391 'u32']: r#222
[#391 'vec2']: r#222
[#391 'vec3']: r#222
[#391 'vec4']: r#222
[#391 '~']: r#222
[#391 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#222
[#391 /0[fh]/]: r#222
[#391 /0[iu]?/]: r#222
[#391 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#222
[#391 /0[xX][0-9a-fA-F]+[iu]?/]: r#222
[#391 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#222
[#391 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#222
[#391 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#222
[#391 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#222
[#391 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#222
[#391 /[1-9][0-9]*[fh]/]: r#222
[#391 /[1-9][0-9]*[iu]?/]: r#222
[#392 '!']: r#223
[#392 '&']: r#223
[#392 '(']: r#223
[#392 '*']: r#223
[#392 '-']: r#223
[#392 'array']: r#223
[#392 'atomic']: r#223
[#392 'bitcast']: r#223
[#392 'bool']: r#223
[#392 'f16']: r#223
[#392 'f32']: r#223
[#392 'false']: r#223
[#392 'i32']: r#223
[#392 'mat2x2']: r#223
[#392 'mat2x3']: r#223
[#392 'mat2x4']: r#223
[#392 'mat3x2']: r#223
[#392 'mat3x3']: r#223
[#392 'mat3x4']: r#223
[#392 'mat4x2']: r#223
[#392 'mat4x3']: r#223
[#392 'mat4x4']: r#223
[#392 'ptr']: r#223
[#392 'sampler']: r#223
[#392 'sampler_comparison']: r#223
[#392 'texture_1d']: r#223
[#392 'texture_2d']: r#223
[#392 'texture_2d_array']: r#223
[#392 'texture_3d']: r#223
[#392 'texture_cube']: r#223
[#392 'texture_cube_array']: r#223
[#392 'texture_depth_2d']: r#223
[#392 'texture_depth_2d_array']: r#223
[#392 'texture_depth_cube']: r#223
[#392 'texture_depth_cube_array']: r#223
[#392 'texture_depth_multisampled_2d']: r#223
[#392 'texture_multisampled_2d']: r#223
[#392 'texture_storage_1d']: r#223
[#392 'texture_storage_2d']: r#223
[#392 'texture_storage_2d_array']: r#223
[#392 'texture_storage_3d']: r#223
[#392 'true']: r#223
[#392 'u32']: r#223
[#392 'vec2']: r#223
[#392 'vec3']: r#223
[#392 'vec4']: r#223
[#392 '~']: r#223
[#392 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#223
[#392 /0[fh]/]: r#223
[#392 /0[iu]?/]: r#223
[#392 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#223
[#392 /0[xX][0-9a-fA-F]+[iu]?/]: r#223
[#392 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#223
[#392 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#223
[#392 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#223
[#392 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#223
[#392 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#223
[#392 /[1-9][0-9]*[fh]/]: r#223
[#392 /[1-9][0-9]*[iu]?/]: r#223
[#393 '!']: r#224
[#393 '&']: r#224
[#393 '(']: r#224
[#393 '*']: r#224
[#393 '-']: r#224
[#393 'array']: r#224
[#393 'atomic']: r#224
[#393 'bitcast']: r#224
[#393 'bool']: r#224
[#393 'f16']: r#224
[#393 'f32']: r#224
[#393 'false']: r#224
[#393 'i32']: r#224
[#393 'mat2x2']: r#224
[#393 'mat2x3']: r#224
[#393 'mat2x4']: r#224
[#393 'mat3x2']: r#224
[#393 'mat3x3']: r#224
[#393 'mat3x4']: r#224
[#393 'mat4x2']: r#224
[#393 'mat4x3']: r#224
[#393 'mat4x4']: r#224
[#393 'ptr']: r#224
[#393 'sampler']: r#224
[#393 'sampler_comparison']: r#224
[#393 'texture_1d']: r#224
[#393 'texture_2d']: r#224
[#393 'texture_2d_array']: r#224
[#393 'texture_3d']: r#224
[#393 'texture_cube']: r#224
[#393 'texture_cube_array']: r#224
[#393 'texture_depth_2d']: r#224
[#393 'texture_depth_2d_array']: r#224
[#393 'texture_depth_cube']: r#224
[#393 'texture_depth_cube_array']: r#224
[#393 'texture_depth_multisampled_2d']: r#224
[#393 'texture_multisampled_2d']: r#224
[#393 'texture_storage_1d']: r#224
[#393 'texture_storage_2d']: r#224
[#393 'texture_storage_2d_array']: r#224
[#393 'texture_storage_3d']: r#224
[#393 'true']: r#224
[#393 'u32']: r#224
[#393 'vec2']: r#224
[#393 'vec3']: r#224
[#393 'vec4']: r#224
[#393 '~']: r#224
[#393 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#224
[#393 /0[fh]/]: r#224
[#393 /0[iu]?/]: r#224
[#393 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#224
[#393 /0[xX][0-9a-fA-F]+[iu]?/]: r#224
[#393 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#224
[#393 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#224
[#393 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#224
[#393 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#224
[#393 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#224
[#393 /[1-9][0-9]*[fh]/]: r#224
[#393 /[1-9][0-9]*[iu]?/]: r#224
[#394 '!']: r#225
[#394 '&']: r#225
[#394 '(']: r#225
[#394 '*']: r#225
[#394 '-']: r#225
[#394 'array']: r#225
[#394 'atomic']: r#225
[#394 'bitcast']: r#225
[#394 'bool']: r#225
[#394 'f16']: r#225
[#394 'f32']: r#225
[#394 'false']: r#225
[#394 'i32']: r#225
[#394 'mat2x2']: r#225
[#394 'mat2x3']: r#225
[#394 'mat2x4']: r#225
[#394 'mat3x2']: r#225
[#394 'mat3x3']: r#225
[#394 'mat3x4']: r#225
[#394 'mat4x2']: r#225
[#394 'mat4x3']: r#225
[#394 'mat4x4']: r#225
[#394 'ptr']: r#225
[#394 'sampler']: r#225
[#394 'sampler_comparison']: r#225
[#394 'texture_1d']: r#225
[#394 'texture_2d']: r#225
[#394 'texture_2d_array']: r#225
[#394 'texture_3d']: r#225
[#394 'texture_cube']: r#225
[#394 'texture_cube_array']: r#225
[#394 'texture_depth_2d']: r#225
[#394 'texture_depth_2d_array']: r#225
[#394 'texture_depth_cube']: r#225
[#394 'texture_depth_cube_array']: r#225
[#394 'texture_depth_multisampled_2d']: r#225
[#394 'texture_multisampled_2d']: r#225
[#394 'texture_storage_1d']: r#225
[#394 'texture_storage_2d']: r#225
[#394 'texture_storage_2d_array']: r#225
[#394 'texture_storage_3d']: r#225
[#394 'true']: r#225
[#394 'u32']: r#225
[#394 'vec2']: r#225
[#394 'vec3']: r#225
[#394 'vec4']: r#225
[#394 '~']: r#225
[#394 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#225
[#394 /0[fh]/]: r#225
[#394 /0[iu]?/]: r#225
[#394 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#225
[#394 /0[xX][0-9a-fA-F]+[iu]?/]: r#225
[#394 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#225
[#394 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#225
[#394 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#225
[#394 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#225
[#394 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#225
[#394 /[1-9][0-9]*[fh]/]: r#225
[#394 /[1-9][0-9]*[iu]?/]: r#225
[#395 '!']: r#226
[#395 '&']: r#226
[#395 '(']: r#226
[#395 '*']: r#226
[#395 '-']: r#226
[#395 'array']: r#226
[#395 'atomic']: r#226
[#395 'bitcast']: r#226
[#395 'bool']: r#226
[#395 'f16']: r#226
[#395 'f32']: r#226
[#395 'false']: r#226
[#395 'i32']: r#226
[#395 'mat2x2']: r#226
[#395 'mat2x3']: r#226
[#395 'mat2x4']: r#226
[#395 'mat3x2']: r#226
[#395 'mat3x3']: r#226
[#395 'mat3x4']: r#226
[#395 'mat4x2']: r#226
[#395 'mat4x3']: r#226
[#395 'mat4x4']: r#226
[#395 'ptr']: r#226
[#395 'sampler']: r#226
[#395 'sampler_comparison']: r#226
[#395 'texture_1d']: r#226
[#395 'texture_2d']: r#226
[#395 'texture_2d_array']: r#226
[#395 'texture_3d']: r#226
[#395 'texture_cube']: r#226
[#395 'texture_cube_array']: r#226
[#395 'texture_depth_2d']: r#226
[#395 'texture_depth_2d_array']: r#226
[#395 'texture_depth_cube']: r#226
[#395 'texture_depth_cube_array']: r#226
[#395 'texture_depth_multisampled_2d']: r#226
[#395 'texture_multisampled_2d']: r#226
[#395 'texture_storage_1d']: r#226
[#395 'texture_storage_2d']: r#226
[#395 'texture_storage_2d_array']: r#226
[#395 'texture_storage_3d']: r#226
[#395 'true']: r#226
[#395 'u32']: r#226
[#395 'vec2']: r#226
[#395 'vec3']: r#226
[#395 'vec4']: r#226
[#395 '~']: r#226
[#395 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#226
[#395 /0[fh]/]: r#226
[#395 /0[iu]?/]: r#226
[#395 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#226
[#395 /0[xX][0-9a-fA-F]+[iu]?/]: r#226
[#395 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#226
[#395 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#226
[#395 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#226
[#395 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#226
[#395 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#226
[#395 /[1-9][0-9]*[fh]/]: r#226
[#395 /[1-9][0-9]*[iu]?/]: r#226
[#396 '!']: r#227
[#396 '&']: r#227
[#396 '(']: r#227
[#396 '*']: r#227
[#396 '-']: r#227
[#396 'array']: r#227
[#396 'atomic']: r#227
[#396 'bitcast']: r#227
[#396 'bool']: r#227
[#396 'f16']: r#227
[#396 'f32']: r#227
[#396 'false']: r#227
[#396 'i32']: r#227
[#396 'mat2x2']: r#227
[#396 'mat2x3']: r#227
[#396 'mat2x4']: r#227
[#396 'mat3x2']: r#227
[#396 'mat3x3']: r#227
[#396 'mat3x4']: r#227
[#396 'mat4x2']: r#227
[#396 'mat4x3']: r#227
[#396 'mat4x4']: r#227
[#396 'ptr']: r#227
[#396 'sampler']: r#227
[#396 'sampler_comparison']: r#227
[#396 'texture_1d']: r#227
[#396 'texture_2d']: r#227
[#396 'texture_2d_array']: r#227
[#396 'texture_3d']: r#227
[#396 'texture_cube']: r#227
[#396 'texture_cube_array']: r#227
[#396 'texture_depth_2d']: r#227
[#396 'texture_depth_2d_array']: r#227
[#396 'texture_depth_cube']: r#227
[#396 'texture_depth_cube_array']: r#227
[#396 'texture_depth_multisampled_2d']: r#227
[#396 'texture_multisampled_2d']: r#227
[#396 'texture_storage_1d']: r#227
[#396 'texture_storage_2d']: r#227
[#396 'texture_storage_2d_array']: r#227
[#396 'texture_storage_3d']: r#227
[#396 'true']: r#227
[#396 'u32']: r#227
[#396 'vec2']: r#227
[#396 'vec3']: r#227
[#396 'vec4']: r#227
[#396 '~']: r#227
[#396 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#227
[#396 /0[fh]/]: r#227
[#396 /0[iu]?/]: r#227
[#396 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#227
[#396 /0[xX][0-9a-fA-F]+[iu]?/]: r#227
[#396 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#227
[#396 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#227
[#396 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#227
[#396 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#227
[#396 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#227
[#396 /[1-9][0-9]*[fh]/]: r#227
[#396 /[1-9][0-9]*[iu]?/]: r#227
[#397 '!']: r#228
[#397 '&']: r#228
[#397 '(']: r#228
[#397 '*']: r#228
[#397 '-']: r#228
[#397 'array']: r#228
[#397 'atomic']: r#228
[#397 'bitcast']: r#228
[#397 'bool']: r#228
[#397 'f16']: r#228
[#397 'f32']: r#228
[#397 'false']: r#228
[#397 'i32']: r#228
[#397 'mat2x2']: r#228
[#397 'mat2x3']: r#228
[#397 'mat2x4']: r#228
[#397 'mat3x2']: r#228
[#397 'mat3x3']: r#228
[#397 'mat3x4']: r#228
[#397 'mat4x2']: r#228
[#397 'mat4x3']: r#228
[#397 'mat4x4']: r#228
[#397 'ptr']: r#228
[#397 'sampler']: r#228
[#397 'sampler_comparison']: r#228
[#397 'texture_1d']: r#228
[#397 'texture_2d']: r#228
[#397 'texture_2d_array']: r#228
[#397 'texture_3d']: r#228
[#397 'texture_cube']: r#228
[#397 'texture_cube_array']: r#228
[#397 'texture_depth_2d']: r#228
[#397 'texture_depth_2d_array']: r#228
[#397 'texture_depth_cube']: r#228
[#397 'texture_depth_cube_array']: r#228
[#397 'texture_depth_multisampled_2d']: r#228
[#397 'texture_multisampled_2d']: r#228
[#397 'texture_storage_1d']: r#228
[#397 'texture_storage_2d']: r#228
[#397 'texture_storage_2d_array']: r#228
[#397 'texture_storage_3d']: r#228
[#397 'true']: r#228
[#397 'u32']: r#228
[#397 'vec2']: r#228
[#397 'vec3']: r#228
[#397 'vec4']: r#228
[#397 '~']: r#228
[#397 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#228
[#397 /0[fh]/]: r#228
[#397 /0[iu]?/]: r#228
[#397 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#228
[#397 /0[xX][0-9a-fA-F]+[iu]?/]: r#228
[#397 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#228
[#397 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#228
[#397 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#228
[#397 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#228
[#397 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#228
[#397 /[1-9][0-9]*[fh]/]: r#228
[#397 /[1-9][0-9]*[iu]?/]: r#228
[#398 '!']: r#229
[#398 '&']: r#229
[#398 '(']: r#229
[#398 '*']: r#229
[#398 '-']: r#229
[#398 'array']: r#229
[#398 'atomic']: r#229
[#398 'bitcast']: r#229
[#398 'bool']: r#229
[#398 'f16']: r#229
[#398 'f32']: r#229
[#398 'false']: r#229
[#398 'i32']: r#229
[#398 'mat2x2']: r#229
[#398 'mat2x3']: r#229
[#398 'mat2x4']: r#229
[#398 'mat3x2']: r#229
[#398 'mat3x3']: r#229
[#398 'mat3x4']: r#229
[#398 'mat4x2']: r#229
[#398 'mat4x3']: r#229
[#398 'mat4x4']: r#229
[#398 'ptr']: r#229
[#398 'sampler']: r#229
[#398 'sampler_comparison']: r#229
[#398 'texture_1d']: r#229
[#398 'texture_2d']: r#229
[#398 'texture_2d_array']: r#229
[#398 'texture_3d']: r#229
[#398 'texture_cube']: r#229
[#398 'texture_cube_array']: r#229
[#398 'texture_depth_2d']: r#229
[#398 'texture_depth_2d_array']: r#229
[#398 'texture_depth_cube']: r#229
[#398 'texture_depth_cube_array']: r#229
[#398 'texture_depth_multisampled_2d']: r#229
[#398 'texture_multisampled_2d']: r#229
[#398 'texture_storage_1d']: r#229
[#398 'texture_storage_2d']: r#229
[#398 'texture_storage_2d_array']: r#229
[#398 'texture_storage_3d']: r#229
[#398 'true']: r#229
[#398 'u32']: r#229
[#398 'vec2']: r#229
[#398 'vec3']: r#229
[#398 'vec4']: r#229
[#398 '~']: r#229
[#398 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#229
[#398 /0[fh]/]: r#229
[#398 /0[iu]?/]: r#229
[#398 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#229
[#398 /0[xX][0-9a-fA-F]+[iu]?/]: r#229
[#398 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#229
[#398 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#229
[#398 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#229
[#398 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#229
[#398 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#229
[#398 /[1-9][0-9]*[fh]/]: r#229
[#398 /[1-9][0-9]*[iu]?/]: r#229
[#399 '!']: r#230
[#399 '&']: r#230
[#399 '(']: r#230
[#399 '*']: r#230
[#399 '-']: r#230
[#399 'array']: r#230
[#399 'atomic']: r#230
[#399 'bitcast']: r#230
[#399 'bool']: r#230
[#399 'f16']: r#230
[#399 'f32']: r#230
[#399 'false']: r#230
[#399 'i32']: r#230
[#399 'mat2x2']: r#230
[#399 'mat2x3']: r#230
[#399 'mat2x4']: r#230
[#399 'mat3x2']: r#230
[#399 'mat3x3']: r#230
[#399 'mat3x4']: r#230
[#399 'mat4x2']: r#230
[#399 'mat4x3']: r#230
[#399 'mat4x4']: r#230
[#399 'ptr']: r#230
[#399 'sampler']: r#230
[#399 'sampler_comparison']: r#230
[#399 'texture_1d']: r#230
[#399 'texture_2d']: r#230
[#399 'texture_2d_array']: r#230
[#399 'texture_3d']: r#230
[#399 'texture_cube']: r#230
[#399 'texture_cube_array']: r#230
[#399 'texture_depth_2d']: r#230
[#399 'texture_depth_2d_array']: r#230
[#399 'texture_depth_cube']: r#230
[#399 'texture_depth_cube_array']: r#230
[#399 'texture_depth_multisampled_2d']: r#230
[#399 'texture_multisampled_2d']: r#230
[#399 'texture_storage_1d']: r#230
[#399 'texture_storage_2d']: r#230
[#399 'texture_storage_2d_array']: r#230
[#399 'texture_storage_3d']: r#230
[#399 'true']: r#230
[#399 'u32']: r#230
[#399 'vec2']: r#230
[#399 'vec3']: r#230
[#399 'vec4']: r#230
[#399 '~']: r#230
[#399 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#230
[#399 /0[fh]/]: r#230
[#399 /0[iu]?/]: r#230
[#399 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#230
[#399 /0[xX][0-9a-fA-F]+[iu]?/]: r#230
[#399 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#230
[#399 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#230
[#399 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#230
[#399 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#230
[#399 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#230
[#399 /[1-9][0-9]*[fh]/]: r#230
[#399 /[1-9][0-9]*[iu]?/]: r#230
[#400 '!']: r#231
[#400 '&']: r#231
[#400 '(']: r#231
[#400 '*']: r#231
[#400 '-']: r#231
[#400 'array']: r#231
[#400 'atomic']: r#231
[#400 'bitcast']: r#231
[#400 'bool']: r#231
[#400 'f16']: r#231
[#400 'f32']: r#231
[#400 'false']: r#231
[#400 'i32']: r#231
[#400 'mat2x2']: r#231
[#400 'mat2x3']: r#231
[#400 'mat2x4']: r#231
[#400 'mat3x2']: r#231
[#400 'mat3x3']: r#231
[#400 'mat3x4']: r#231
[#400 'mat4x2']: r#231
[#400 'mat4x3']: r#231
[#400 'mat4x4']: r#231
[#400 'ptr']: r#231
[#400 'sampler']: r#231
[#400 'sampler_comparison']: r#231
[#400 'texture_1d']: r#231
[#400 'texture_2d']: r#231
[#400 'texture_2d_array']: r#231
[#400 'texture_3d']: r#231
[#400 'texture_cube']: r#231
[#400 'texture_cube_array']: r#231
[#400 'texture_depth_2d']: r#231
[#400 'texture_depth_2d_array']: r#231
[#400 'texture_depth_cube']: r#231
[#400 'texture_depth_cube_array']: r#231
[#400 'texture_depth_multisampled_2d']: r#231
[#400 'texture_multisampled_2d']: r#231
[#400 'texture_storage_1d']: r#231
[#400 'texture_storage_2d']: r#231
[#400 'texture_storage_2d_array']: r#231
[#400 'texture_storage_3d']: r#231
[#400 'true']: r#231
[#400 'u32']: r#231
[#400 'vec2']: r#231
[#400 'vec3']: r#231
[#400 'vec4']: r#231
[#400 '~']: r#231
[#400 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#231
[#400 /0[fh]/]: r#231
[#400 /0[iu]?/]: r#231
[#400 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#231
[#400 /0[xX][0-9a-fA-F]+[iu]?/]: r#231
[#400 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#231
[#400 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#231
[#400 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#231
[#400 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#231
[#400 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#231
[#400 /[1-9][0-9]*[fh]/]: r#231
[#400 /[1-9][0-9]*[iu]?/]: r#231
[#401 '!']: r#232
[#401 '&']: r#232
[#401 '(']: r#232
[#401 '*']: r#232
[#401 '-']: r#232
[#401 'array']: r#232
[#401 'atomic']: r#232
[#401 'bitcast']: r#232
[#401 'bool']: r#232
[#401 'f16']: r#232
[#401 'f32']: r#232
[#401 'false']: r#232
[#401 'i32']: r#232
[#401 'mat2x2']: r#232
[#401 'mat2x3']: r#232
[#401 'mat2x4']: r#232
[#401 'mat3x2']: r#232
[#401 'mat3x3']: r#232
[#401 'mat3x4']: r#232
[#401 'mat4x2']: r#232
[#401 'mat4x3']: r#232
[#401 'mat4x4']: r#232
[#401 'ptr']: r#232
[#401 'sampler']: r#232
[#401 'sampler_comparison']: r#232
[#401 'texture_1d']: r#232
[#401 'texture_2d']: r#232
[#401 'texture_2d_array']: r#232
[#401 'texture_3d']: r#232
[#401 'texture_cube']: r#232
[#401 'texture_cube_array']: r#232
[#401 'texture_depth_2d']: r#232
[#401 'texture_depth_2d_array']: r#232
[#401 'texture_depth_cube']: r#232
[#401 'texture_depth_cube_array']: r#232
[#401 'texture_depth_multisampled_2d']: r#232
[#401 'texture_multisampled_2d']: r#232
[#401 'texture_storage_1d']: r#232
[#401 'texture_storage_2d']: r#232
[#401 'texture_storage_2d_array']: r#232
[#401 'texture_storage_3d']: r#232
[#401 'true']: r#232
[#401 'u32']: r#232
[#401 'vec2']: r#232
[#401 'vec3']: r#232
[#401 'vec4']: r#232
[#401 '~']: r#232
[#401 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#232
[#401 /0[fh]/]: r#232
[#401 /0[iu]?/]: r#232
[#401 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#232
[#401 /0[xX][0-9a-fA-F]+[iu]?/]: r#232
[#401 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#232
[#401 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#232
[#401 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#232
[#401 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#232
[#401 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#232
[#401 /[1-9][0-9]*[fh]/]: r#232
[#401 /[1-9][0-9]*[iu]?/]: r#232
[#402 '{']: s#171
[#403 '=']: s#517
[#404 '=']: s#516
[#405 '!']: s#62
[#405 '&']: s#65
[#405 '(']: s#77
[#405 '*']: s#64
[#405 '-']: s#61
[#405 'array']: s#81
[#405 'atomic']: s#95
[#405 'bitcast']: s#71
[#405 'bool']: s#88
[#405 'f16']: s#90
[#405 'f32']: s#89
[#405 'false']: s#87
[#405 'i32']: s#91
[#405 'mat2x2']: s#100
[#405 'mat2x3']: s#101
[#405 'mat2x4']: s#102
[#405 'mat3x2']: s#103
[#405 'mat3x3']: s#104
[#405 'mat3x4']: s#105
[#405 'mat4x2']: s#106
[#405 'mat4x3']: s#107
[#405 'mat4x4']: s#108
[#405 'ptr']: s#93
[#405 'sampler']: s#125
[#405 'sampler_comparison']: s#126
[#405 'texture_1d']: s#132
[#405 'texture_2d']: s#133
[#405 'texture_2d_array']: s#134
[#405 'texture_3d']: s#135
[#405 'texture_cube']: s#136
[#405 'texture_cube_array']: s#137
[#405 'texture_depth_2d']: s#127
[#405 'texture_depth_2d_array']: s#128
[#405 'texture_depth_cube']: s#129
[#405 'texture_depth_cube_array']: s#130
[#405 'texture_depth_multisampled_2d']: s#131
[#405 'texture_multisampled_2d']: s#138
[#405 'texture_storage_1d']: s#139
[#405 'texture_storage_2d']: s#140
[#405 'texture_storage_2d_array']: s#141
[#405 'texture_storage_3d']: s#142
[#405 'true']: s#86
[#405 'u32']: s#92
[#405 'vec2']: s#97
[#405 'vec3']: s#98
[#405 'vec4']: s#99
[#405 '~']: s#63
[#405 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#405 /0[fh]/]: s#112
[#405 /0[iu]?/]: s#109
[#405 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#405 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#405 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#405 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#405 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#405 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#405 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#405 /[1-9][0-9]*[fh]/]: s#113
[#405 /[1-9][0-9]*[iu]?/]: s#110
[#406 ')']: r#233
[#406 ';']: r#233
[#407 '{']: s#171
[#408 '&']: s#334
[#408 '(']: s#335
[#408 '*']: s#333
[#408 '_']: s#331
[#408 'array']: s#81
[#408 'atomic']: s#95
[#408 'bool']: s#88
[#408 'const']: s#322
[#408 'f16']: s#90
[#408 'f32']: s#89
[#408 'i32']: s#91
[#408 'let']: s#321
[#408 'mat2x2']: s#100
[#408 'mat2x3']: s#101
[#408 'mat2x4']: s#102
[#408 'mat3x2']: s#103
[#408 'mat3x3']: s#104
[#408 'mat3x4']: s#105
[#408 'mat4x2']: s#106
[#408 'mat4x3']: s#107
[#408 'mat4x4']: s#108
[#408 'ptr']: s#93
[#408 'sampler']: s#125
[#408 'sampler_comparison']: s#126
[#408 'texture_1d']: s#132
[#408 'texture_2d']: s#133
[#408 'texture_2d_array']: s#134
[#408 'texture_3d']: s#135
[#408 'texture_cube']: s#136
[#408 'texture_cube_array']: s#137
[#408 'texture_depth_2d']: s#127
[#408 'texture_depth_2d_array']: s#128
[#408 'texture_depth_cube']: s#129
[#408 'texture_depth_cube_array']: s#130
[#408 'texture_depth_multisampled_2d']: s#131
[#408 'texture_multisampled_2d']: s#138
[#408 'texture_storage_1d']: s#139
[#408 'texture_storage_2d']: s#140
[#408 'texture_storage_2d_array']: s#141
[#408 'texture_storage_3d']: s#142
[#408 'u32']: s#92
[#408 'var']: s#151
[#408 'vec2']: s#97
[#408 'vec3']: s#98
[#408 'vec4']: s#99
[#408 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#409 '&']: s#334
[#409 '(']: s#335
[#409 '*']: s#333
[#409 ';']: s#298
[#409 '_']: s#331
[#409 'array']: s#81
[#409 'atomic']: s#95
[#409 'bool']: s#88
[#409 'break']: s#323
[#409 'const']: s#322
[#409 'const_assert']: s#25
[#409 'continue']: s#324
[#409 'discard']: s#309
[#409 'f16']: s#90
[#409 'f32']: s#89
[#409 'for']: s#317
[#409 'i32']: s#91
[#409 'if']: s#328
[#409 'let']: s#321
[#409 'loop']: s#316
[#409 'mat2x2']: s#100
[#409 'mat2x3']: s#101
[#409 'mat2x4']: s#102
[#409 'mat3x2']: s#103
[#409 'mat3x3']: s#104
[#409 'mat3x4']: s#105
[#409 'mat4x2']: s#106
[#409 'mat4x3']: s#107
[#409 'mat4x4']: s#108
[#409 'ptr']: s#93
[#409 'return']: s#313
[#409 'sampler']: s#125
[#409 'sampler_comparison']: s#126
[#409 'switch']: s#315
[#409 'texture_1d']: s#132
[#409 'texture_2d']: s#133
[#409 'texture_2d_array']: s#134
[#409 'texture_3d']: s#135
[#409 'texture_cube']: s#136
[#409 'texture_cube_array']: s#137
[#409 'texture_depth_2d']: s#127
[#409 'texture_depth_2d_array']: s#128
[#409 'texture_depth_cube']: s#129
[#409 'texture_depth_cube_array']: s#130
[#409 'texture_depth_multisampled_2d']: s#131
[#409 'texture_multisampled_2d']: s#138
[#409 'texture_storage_1d']: s#139
[#409 'texture_storage_2d']: s#140
[#409 'texture_storage_2d_array']: s#141
[#409 'texture_storage_3d']: s#142
[#409 'u32']: s#92
[#409 'var']: s#151
[#409 'vec2']: s#97
[#409 'vec3']: s#98
[#409 'vec4']: s#99
[#409 'while']: s#318
[#409 '{']: s#171
[#409 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#410 '{']: s#504
[#411 'else']: s#503
[#412 '&']: r#234
[#412 '(']: r#234
[#412 '*']: r#234
[#412 ';']: r#234
[#412 '_']: r#234
[#412 'array']: r#234
[#412 'atomic']: r#234
[#412 'bool']: r#234
[#412 'break']: r#234
[#412 'const']: r#234
[#412 'const_assert']: r#234
[#412 'continue']: r#234
[#412 'continuing']: r#234
[#412 'discard']: r#234
[#412 'else']: r#234
[#412 'f16']: r#234
[#412 'f32']: r#234
[#412 'for']: r#234
[#412 'i32']: r#234
[#412 'if']: r#234
[#412 'let']: r#234
[#412 'loop']: r#234
[#412 'mat2x2']: r#234
[#412 'mat2x3']: r#234
[#412 'mat2x4']: r#234
[#412 'mat3x2']: r#234
[#412 'mat3x3']: r#234
[#412 'mat3x4']: r#234
[#412 'mat4x2']: r#234
[#412 'mat4x3']: r#234
[#412 'mat4x4']: r#234
[#412 'ptr']: r#234
[#412 'return']: r#234
[#412 'sampler']: r#234
[#412 'sampler_comparison']: r#234
[#412 'switch']: r#234
[#412 'texture_1d']: r#234
[#412 'texture_2d']: r#234
[#412 'texture_2d_array']: r#234
[#412 'texture_3d']: r#234
[#412 'texture_cube']: r#234
[#412 'texture_cube_array']: r#234
[#412 'texture_depth_2d']: r#234
[#412 'texture_depth_2d_array']: r#234
[#412 'texture_depth_cube']: r#234
[#412 'texture_depth_cube_array']: r#234
[#412 'texture_depth_multisampled_2d']: r#234
[#412 'texture_multisampled_2d']: r#234
[#412 'texture_storage_1d']: r#234
[#412 'texture_storage_2d']: r#234
[#412 'texture_storage_2d_array']: r#234
[#412 'texture_storage_3d']: r#234
[#412 'u32']: r#234
[#412 'var']: r#234
[#412 'vec2']: r#234
[#412 'vec3']: r#234
[#412 'vec4']: r#234
[#412 'while']: r#234
[#412 '{']: r#234
[#412 '}']: r#234
[#412 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#234
[#413 'else']: s#414
[#414 'if']: s#499
[#415 ';']: r#235
[#416 ';']: r#236
[#417 '&']: r#237
[#417 '(']: r#237
[#417 '*']: r#237
[#417 ';']: r#237
[#417 '_']: r#237
[#417 'array']: r#237
[#417 'atomic']: r#237
[#417 'bool']: r#237
[#417 'break']: r#237
[#417 'const']: r#237
[#417 'const_assert']: r#237
[#417 'continue']: r#237
[#417 'continuing']: r#237
[#417 'discard']: r#237
[#417 'f16']: r#237
[#417 'f32']: r#237
[#417 'for']: r#237
[#417 'i32']: r#237
[#417 'if']: r#237
[#417 'let']: r#237
[#417 'loop']: r#237
[#417 'mat2x2']: r#237
[#417 'mat2x3']: r#237
[#417 'mat2x4']: r#237
[#417 'mat3x2']: r#237
[#417 'mat3x3']: r#237
[#417 'mat3x4']: r#237
[#417 'mat4x2']: r#237
[#417 'mat4x3']: r#237
[#417 'mat4x4']: r#237
[#417 'ptr']: r#237
[#417 'return']: r#237
[#417 'sampler']: r#237
[#417 'sampler_comparison']: r#237
[#417 'switch']: r#237
[#417 'texture_1d']: r#237
[#417 'texture_2d']: r#237
[#417 'texture_2d_array']: r#237
[#417 'texture_3d']: r#237
[#417 'texture_cube']: r#237
[#417 'texture_cube_array']: r#237
[#417 'texture_depth_2d']: r#237
[#417 'texture_depth_2d_array']: r#237
[#417 'texture_depth_cube']: r#237
[#417 'texture_depth_cube_array']: r#237
[#417 'texture_depth_multisampled_2d']: r#237
[#417 'texture_multisampled_2d']: r#237
[#417 'texture_storage_1d']: r#237
[#417 'texture_storage_2d']: r#237
[#417 'texture_storage_2d_array']: r#237
[#417 'texture_storage_3d']: r#237
[#417 'u32']: r#237
[#417 'var']: r#237
[#417 'vec2']: r#237
[#417 'vec3']: r#237
[#417 'vec4']: r#237
[#417 'while']: r#237
[#417 '{']: r#237
[#417 '}']: r#237
[#417 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#237
[#418 '&']: r#238
[#418 '(']: r#238
[#418 '*']: r#238
[#418 ';']: r#238
[#418 '_']: r#238
[#418 'array']: r#238
[#418 'atomic']: r#238
[#418 'bool']: r#238
[#418 'break']: r#238
[#418 'const']: r#238
[#418 'const_assert']: r#238
[#418 'continue']: r#238
[#418 'continuing']: r#238
[#418 'discard']: r#238
[#418 'f16']: r#238
[#418 'f32']: r#238
[#418 'for']: r#238
[#418 'i32']: r#238
[#418 'if']: r#238
[#418 'let']: r#238
[#418 'loop']: r#238
[#418 'mat2x2']: r#238
[#418 'mat2x3']: r#238
[#418 'mat2x4']: r#238
[#418 'mat3x2']: r#238
[#418 'mat3x3']: r#238
[#418 'mat3x4']: r#238
[#418 'mat4x2']: r#238
[#418 'mat4x3']: r#238
[#418 'mat4x4']: r#238
[#418 'ptr']: r#238
[#418 'return']: r#238
[#418 'sampler']: r#238
[#418 'sampler_comparison']: r#238
[#418 'switch']: r#238
[#418 'texture_1d']: r#238
[#418 'texture_2d']: r#238
[#418 'texture_2d_array']: r#238
[#418 'texture_3d']: r#238
[#418 'texture_cube']: r#238
[#418 'texture_cube_array']: r#238
[#418 'texture_depth_2d']: r#238
[#418 'texture_depth_2d_array']: r#238
[#418 'texture_depth_cube']: r#238
[#418 'texture_depth_cube_array']: r#238
[#418 'texture_depth_multisampled_2d']: r#238
[#418 'texture_multisampled_2d']: r#238
[#418 'texture_storage_1d']: r#238
[#418 'texture_storage_2d']: r#238
[#418 'texture_storage_2d_array']: r#238
[#418 'texture_storage_3d']: r#238
[#418 'u32']: r#238
[#418 'var']: r#238
[#418 'vec2']: r#238
[#418 'vec3']: r#238
[#418 'vec4']: r#238
[#418 'while']: r#238
[#418 '{']: r#238
[#418 '}']: r#238
[#418 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#238
[#419 '&']: r#239
[#419 '(']: r#239
[#419 '*']: r#239
[#419 ';']: r#239
[#419 '_']: r#239
[#419 'array']: r#239
[#419 'atomic']: r#239
[#419 'bool']: r#239
[#419 'break']: r#239
[#419 'const']: r#239
[#419 'const_assert']: r#239
[#419 'continue']: r#239
[#419 'continuing']: r#239
[#419 'discard']: r#239
[#419 'f16']: r#239
[#419 'f32']: r#239
[#419 'for']: r#239
[#419 'i32']: r#239
[#419 'if']: r#239
[#419 'let']: r#239
[#419 'loop']: r#239
[#419 'mat2x2']: r#239
[#419 'mat2x3']: r#239
[#419 'mat2x4']: r#239
[#419 'mat3x2']: r#239
[#419 'mat3x3']: r#239
[#419 'mat3x4']: r#239
[#419 'mat4x2']: r#239
[#419 'mat4x3']: r#239
[#419 'mat4x4']: r#239
[#419 'ptr']: r#239
[#419 'return']: r#239
[#419 'sampler']: r#239
[#419 'sampler_comparison']: r#239
[#419 'switch']: r#239
[#419 'texture_1d']: r#239
[#419 'texture_2d']: r#239
[#419 'texture_2d_array']: r#239
[#419 'texture_3d']: r#239
[#419 'texture_cube']: r#239
[#419 'texture_cube_array']: r#239
[#419 'texture_depth_2d']: r#239
[#419 'texture_depth_2d_array']: r#239
[#419 'texture_depth_cube']: r#239
[#419 'texture_depth_cube_array']: r#239
[#419 'texture_depth_multisampled_2d']: r#239
[#419 'texture_multisampled_2d']: r#239
[#419 'texture_storage_1d']: r#239
[#419 'texture_storage_2d']: r#239
[#419 'texture_storage_2d_array']: r#239
[#419 'texture_storage_3d']: r#239
[#419 'u32']: r#239
[#419 'var']: r#239
[#419 'vec2']: r#239
[#419 'vec3']: r#239
[#419 'vec4']: r#239
[#419 'while']: r#239
[#419 '{']: r#239
[#419 '}']: r#239
[#419 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#239
[#420 '&']: r#240
[#420 '(']: r#240
[#420 '*']: r#240
[#420 ';']: r#240
[#420 '_']: r#240
[#420 'array']: r#240
[#420 'atomic']: r#240
[#420 'bool']: r#240
[#420 'break']: r#240
[#420 'const']: r#240
[#420 'const_assert']: r#240
[#420 'continue']: r#240
[#420 'continuing']: r#240
[#420 'discard']: r#240
[#420 'f16']: r#240
[#420 'f32']: r#240
[#420 'for']: r#240
[#420 'i32']: r#240
[#420 'if']: r#240
[#420 'let']: r#240
[#420 'loop']: r#240
[#420 'mat2x2']: r#240
[#420 'mat2x3']: r#240
[#420 'mat2x4']: r#240
[#420 'mat3x2']: r#240
[#420 'mat3x3']: r#240
[#420 'mat3x4']: r#240
[#420 'mat4x2']: r#240
[#420 'mat4x3']: r#240
[#420 'mat4x4']: r#240
[#420 'ptr']: r#240
[#420 'return']: r#240
[#420 'sampler']: r#240
[#420 'sampler_comparison']: r#240
[#420 'switch']: r#240
[#420 'texture_1d']: r#240
[#420 'texture_2d']: r#240
[#420 'texture_2d_array']: r#240
[#420 'texture_3d']: r#240
[#420 'texture_cube']: r#240
[#420 'texture_cube_array']: r#240
[#420 'texture_depth_2d']: r#240
[#420 'texture_depth_2d_array']: r#240
[#420 'texture_depth_cube']: r#240
[#420 'texture_depth_cube_array']: r#240
[#420 'texture_depth_multisampled_2d']: r#240
[#420 'texture_multisampled_2d']: r#240
[#420 'texture_storage_1d']: r#240
[#420 'texture_storage_2d']: r#240
[#420 'texture_storage_2d_array']: r#240
[#420 'texture_storage_3d']: r#240
[#420 'u32']: r#240
[#420 'var']: r#240
[#420 'vec2']: r#240
[#420 'vec3']: r#240
[#420 'vec4']: r#240
[#420 'while']: r#240
[#420 '{']: r#240
[#420 '}']: r#240
[#420 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#240
[#421 '&']: r#241
[#421 '(']: r#241
[#421 '*']: r#241
[#421 ';']: r#241
[#421 '_']: r#241
[#421 'array']: r#241
[#421 'atomic']: r#241
[#421 'bool']: r#241
[#421 'break']: r#241
[#421 'const']: r#241
[#421 'const_assert']: r#241
[#421 'continue']: r#241
[#421 'continuing']: r#241
[#421 'discard']: r#241
[#421 'f16']: r#241
[#421 'f32']: r#241
[#421 'for']: r#241
[#421 'i32']: r#241
[#421 'if']: r#241
[#421 'let']: r#241
[#421 'loop']: r#241
[#421 'mat2x2']: r#241
[#421 'mat2x3']: r#241
[#421 'mat2x4']: r#241
[#421 'mat3x2']: r#241
[#421 'mat3x3']: r#241
[#421 'mat3x4']: r#241
[#421 'mat4x2']: r#241
[#421 'mat4x3']: r#241
[#421 'mat4x4']: r#241
[#421 'ptr']: r#241
[#421 'return']: r#241
[#421 'sampler']: r#241
[#421 'sampler_comparison']: r#241
[#421 'switch']: r#241
[#421 'texture_1d']: r#241
[#421 'texture_2d']: r#241
[#421 'texture_2d_array']: r#241
[#421 'texture_3d']: r#241
[#421 'texture_cube']: r#241
[#421 'texture_cube_array']: r#241
[#421 'texture_depth_2d']: r#241
[#421 'texture_depth_2d_array']: r#241
[#421 'texture_depth_cube']: r#241
[#421 'texture_depth_cube_array']: r#241
[#421 'texture_depth_multisampled_2d']: r#241
[#421 'texture_multisampled_2d']: r#241
[#421 'texture_storage_1d']: r#241
[#421 'texture_storage_2d']: r#241
[#421 'texture_storage_2d_array']: r#241
[#421 'texture_storage_3d']: r#241
[#421 'u32']: r#241
[#421 'var']: r#241
[#421 'vec2']: r#241
[#421 'vec3']: r#241
[#421 'vec4']: r#241
[#421 'while']: r#241
[#421 '{']: r#241
[#421 '}']: r#241
[#421 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#241
[#422 '&']: r#242
[#422 '(']: r#242
[#422 '*']: r#242
[#422 ';']: r#242
[#422 '_']: r#242
[#422 'array']: r#242
[#422 'atomic']: r#242
[#422 'bool']: r#242
[#422 'break']: r#242
[#422 'const']: r#242
[#422 'const_assert']: r#242
[#422 'continue']: r#242
[#422 'continuing']: r#242
[#422 'discard']: r#242
[#422 'f16']: r#242
[#422 'f32']: r#242
[#422 'for']: r#242
[#422 'i32']: r#242
[#422 'if']: r#242
[#422 'let']: r#242
[#422 'loop']: r#242
[#422 'mat2x2']: r#242
[#422 'mat2x3']: r#242
[#422 'mat2x4']: r#242
[#422 'mat3x2']: r#242
[#422 'mat3x3']: r#242
[#422 'mat3x4']: r#242
[#422 'mat4x2']: r#242
[#422 'mat4x3']: r#242
[#422 'mat4x4']: r#242
[#422 'ptr']: r#242
[#422 'return']: r#242
[#422 'sampler']: r#242
[#422 'sampler_comparison']: r#242
[#422 'switch']: r#242
[#422 'texture_1d']: r#242
[#422 'texture_2d']: r#242
[#422 'texture_2d_array']: r#242
[#422 'texture_3d']: r#242
[#422 'texture_cube']: r#242
[#422 'texture_cube_array']: r#242
[#422 'texture_depth_2d']: r#242
[#422 'texture_depth_2d_array']: r#242
[#422 'texture_depth_cube']: r#242
[#422 'texture_depth_cube_array']: r#242
[#422 'texture_depth_multisampled_2d']: r#242
[#422 'texture_multisampled_2d']: r#242
[#422 'texture_storage_1d']: r#242
[#422 'texture_storage_2d']: r#242
[#422 'texture_storage_2d_array']: r#242
[#422 'texture_storage_3d']: r#242
[#422 'u32']: r#242
[#422 'var']: r#242
[#422 'vec2']: r#242
[#422 'vec3']: r#242
[#422 'vec4']: r#242
[#422 'while']: r#242
[#422 '{']: r#242
[#422 '}']: r#242
[#422 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#242
[#423 '&']: r#243
[#423 '(']: r#243
[#423 '*']: r#243
[#423 ';']: r#243
[#423 '_']: r#243
[#423 'array']: r#243
[#423 'atomic']: r#243
[#423 'bool']: r#243
[#423 'break']: r#243
[#423 'const']: r#243
[#423 'const_assert']: r#243
[#423 'continue']: r#243
[#423 'continuing']: r#243
[#423 'discard']: r#243
[#423 'f16']: r#243
[#423 'f32']: r#243
[#423 'for']: r#243
[#423 'i32']: r#243
[#423 'if']: r#243
[#423 'let']: r#243
[#423 'loop']: r#243
[#423 'mat2x2']: r#243
[#423 'mat2x3']: r#243
[#423 'mat2x4']: r#243
[#423 'mat3x2']: r#243
[#423 'mat3x3']: r#243
[#423 'mat3x4']: r#243
[#423 'mat4x2']: r#243
[#423 'mat4x3']: r#243
[#423 'mat4x4']: r#243
[#423 'ptr']: r#243
[#423 'return']: r#243
[#423 'sampler']: r#243
[#423 'sampler_comparison']: r#243
[#423 'switch']: r#243
[#423 'texture_1d']: r#243
[#423 'texture_2d']: r#243
[#423 'texture_2d_array']: r#243
[#423 'texture_3d']: r#243
[#423 'texture_cube']: r#243
[#423 'texture_cube_array']: r#243
[#423 'texture_depth_2d']: r#243
[#423 'texture_depth_2d_array']: r#243
[#423 'texture_depth_cube']: r#243
[#423 'texture_depth_cube_array']: r#243
[#423 'texture_depth_multisampled_2d']: r#243
[#423 'texture_multisampled_2d']: r#243
[#423 'texture_storage_1d']: r#243
[#423 'texture_storage_2d']: r#243
[#423 'texture_storage_2d_array']: r#243
[#423 'texture_storage_3d']: r#243
[#423 'u32']: r#243
[#423 'var']: r#243
[#423 'vec2']: r#243
[#423 'vec3']: r#243
[#423 'vec4']: r#243
[#423 'while']: r#243
[#423 '{']: r#243
[#423 '}']: r#243
[#423 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#243
[#424 '&']: r#244
[#424 '(']: r#244
[#424 '*']: r#244
[#424 ';']: r#244
[#424 '_']: r#244
[#424 'array']: r#244
[#424 'atomic']: r#244
[#424 'bool']: r#244
[#424 'break']: r#244
[#424 'const']: r#244
[#424 'const_assert']: r#244
[#424 'continue']: r#244
[#424 'continuing']: r#244
[#424 'discard']: r#244
[#424 'f16']: r#244
[#424 'f32']: r#244
[#424 'for']: r#244
[#424 'i32']: r#244
[#424 'if']: r#244
[#424 'let']: r#244
[#424 'loop']: r#244
[#424 'mat2x2']: r#244
[#424 'mat2x3']: r#244
[#424 'mat2x4']: r#244
[#424 'mat3x2']: r#244
[#424 'mat3x3']: r#244
[#424 'mat3x4']: r#244
[#424 'mat4x2']: r#244
[#424 'mat4x3']: r#244
[#424 'mat4x4']: r#244
[#424 'ptr']: r#244
[#424 'return']: r#244
[#424 'sampler']: r#244
[#424 'sampler_comparison']: r#244
[#424 'switch']: r#244
[#424 'texture_1d']: r#244
[#424 'texture_2d']: r#244
[#424 'texture_2d_array']: r#244
[#424 'texture_3d']: r#244
[#424 'texture_cube']: r#244
[#424 'texture_cube_array']: r#244
[#424 'texture_depth_2d']: r#244
[#424 'texture_depth_2d_array']: r#244
[#424 'texture_depth_cube']: r#244
[#424 'texture_depth_cube_array']: r#244
[#424 'texture_depth_multisampled_2d']: r#244
[#424 'texture_multisampled_2d']: r#244
[#424 'texture_storage_1d']: r#244
[#424 'texture_storage_2d']: r#244
[#424 'texture_storage_2d_array']: r#244
[#424 'texture_storage_3d']: r#244
[#424 'u32']: r#244
[#424 'var']: r#244
[#424 'vec2']: r#244
[#424 'vec3']: r#244
[#424 'vec4']: r#244
[#424 'while']: r#244
[#424 '{']: r#244
[#424 '}']: r#244
[#424 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#244
[#425 '}']: r#245
[#426 '&']: r#246
[#426 '(']: r#246
[#426 '*']: r#246
[#426 ';']: r#246
[#426 '@']: r#246
[#426 '_']: r#246
[#426 'alias']: r#246
[#426 'array']: r#246
[#426 'atomic']: r#246
[#426 'bool']: r#246
[#426 'break']: r#246
[#426 'case']: r#246
[#426 'const']: r#246
[#426 'const_assert']: r#246
[#426 'continue']: r#246
[#426 'continuing']: r#246
[#426 'default']: r#246
[#426 'discard']: r#246
[#426 'else']: r#246
[#426 'f16']: r#246
[#426 'f32']: r#246
[#426 'fn']: r#246
[#426 'for']: r#246
[#426 'i32']: r#246
[#426 'if']: r#246
[#426 'let']: r#246
[#426 'loop']: r#246
[#426 'mat2x2']: r#246
[#426 'mat2x3']: r#246
[#426 'mat2x4']: r#246
[#426 'mat3x2']: r#246
[#426 'mat3x3']: r#246
[#426 'mat3x4']: r#246
[#426 'mat4x2']: r#246
[#426 'mat4x3']: r#246
[#426 'mat4x4']: r#246
[#426 'override']: r#246
[#426 'ptr']: r#246
[#426 'return']: r#246
[#426 'sampler']: r#246
[#426 'sampler_comparison']: r#246
[#426 'struct']: r#246
[#426 'switch']: r#246
[#426 'texture_1d']: r#246
[#426 'texture_2d']: r#246
[#426 'texture_2d_array']: r#246
[#426 'texture_3d']: r#246
[#426 'texture_cube']: r#246
[#426 'texture_cube_array']: r#246
[#426 'texture_depth_2d']: r#246
[#426 'texture_depth_2d_array']: r#246
[#426 'texture_depth_cube']: r#246
[#426 'texture_depth_cube_array']: r#246
[#426 'texture_depth_multisampled_2d']: r#246
[#426 'texture_multisampled_2d']: r#246
[#426 'texture_storage_1d']: r#246
[#426 'texture_storage_2d']: r#246
[#426 'texture_storage_2d_array']: r#246
[#426 'texture_storage_3d']: r#246
[#426 'u32']: r#246
[#426 'var']: r#246
[#426 'vec2']: r#246
[#426 'vec3']: r#246
[#426 'vec4']: r#246
[#426 'while']: r#246
[#426 '{']: r#246
[#426 '}']: r#246
[#426 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#246
[#426 EndOfText]: r#246
[#427 ',']: s#498
[#428 ',']: r#247
[#429 ',']: r#248
[#430 ',']: r#249
[#431 ',']: r#250
[#432 ',']: r#251
[#433 ',']: r#252
[#434 ',']: r#253
[#435 ',']: r#254
[#436 ',']: r#255
[#437 ',']: r#256
[#438 ',']: r#257
[#439 ',']: r#258
[#440 ',']: r#259
[#441 ',']: r#260
[#442 ',']: r#261
[#443 ',']: r#262
[#444 ',']: r#263
[#445 /\u200B_template_args_end/]: s#485
[#446 /\u200B_template_args_end/]: s#485
[#447 /\u200B_template_args_end/]: s#485
[#448 ',']: s#494
[#449 ',']: s#493
[#450 /\u200B_template_args_end/]: s#485
[#451 /\u200B_template_args_end/]: s#485
[#452 ',']: s#489
[#453 ')']: r#264
[#453 ',']: r#264
[#454 ',']: s#455
[#455 '!']: s#62
[#455 '&']: s#65
[#455 '(']: s#77
[#455 '*']: s#64
[#455 '-']: s#61
[#455 'array']: s#81
[#455 'atomic']: s#95
[#455 'bitcast']: s#71
[#455 'bool']: s#88
[#455 'f16']: s#90
[#455 'f32']: s#89
[#455 'false']: s#87
[#455 'i32']: s#91
[#455 'mat2x2']: s#100
[#455 'mat2x3']: s#101
[#455 'mat2x4']: s#102
[#455 'mat3x2']: s#103
[#455 'mat3x3']: s#104
[#455 'mat3x4']: s#105
[#455 'mat4x2']: s#106
[#455 'mat4x3']: s#107
[#455 'mat4x4']: s#108
[#455 'ptr']: s#93
[#455 'sampler']: s#125
[#455 'sampler_comparison']: s#126
[#455 'texture_1d']: s#132
[#455 'texture_2d']: s#133
[#455 'texture_2d_array']: s#134
[#455 'texture_3d']: s#135
[#455 'texture_cube']: s#136
[#455 'texture_cube_array']: s#137
[#455 'texture_depth_2d']: s#127
[#455 'texture_depth_2d_array']: s#128
[#455 'texture_depth_cube']: s#129
[#455 'texture_depth_cube_array']: s#130
[#455 'texture_depth_multisampled_2d']: s#131
[#455 'texture_multisampled_2d']: s#138
[#455 'texture_storage_1d']: s#139
[#455 'texture_storage_2d']: s#140
[#455 'texture_storage_2d_array']: s#141
[#455 'texture_storage_3d']: s#142
[#455 'true']: s#86
[#455 'u32']: s#92
[#455 'vec2']: s#97
[#455 'vec3']: s#98
[#455 'vec4']: s#99
[#455 '~']: s#63
[#455 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#455 /0[fh]/]: s#112
[#455 /0[iu]?/]: s#109
[#455 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#455 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#455 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#455 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#455 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#455 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#455 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#455 /[1-9][0-9]*[fh]/]: s#113
[#455 /[1-9][0-9]*[iu]?/]: s#110
[#456 '!=']: r#265
[#456 '%']: r#265
[#456 '&&']: r#265
[#456 '&']: r#265
[#456 ')']: r#265
[#456 '*']: r#265
[#456 '+']: r#265
[#456 ',']: r#265
[#456 '-']: r#265
[#456 '.']: r#265
[#456 '/']: r#265
[#456 ':']: r#265
[#456 ';']: r#265
[#456 '==']: r#265
[#456 '[']: r#265
[#456 ']']: r#265
[#456 '^']: r#265
[#456 '{']: r#265
[#456 '|']: r#265
[#456 '||']: r#265
[#456 /\u200B_greater_than/]: r#265
[#456 /\u200B_greater_than_equal/]: r#265
[#456 /\u200B_less_than/]: r#265
[#456 /\u200B_less_than_equal/]: r#265
[#456 /\u200B_shift_left/]: r#265
[#456 /\u200B_shift_right/]: r#265
[#456 /\u200B_template_args_end/]: r#265
[#457 /\u200B_template_args_end/]: s#485
[#458 '.']: s#187
[#458 '[']: s#186
[#459 '!=']: r#266
[#459 '%']: r#266
[#459 '%=']: r#266
[#459 '&&']: r#266
[#459 '&']: r#266
[#459 '&=']: r#266
[#459 ')']: r#266
[#459 '*']: r#266
[#459 '*=']: r#266
[#459 '+']: r#266
[#459 '++']: r#266
[#459 '+=']: r#266
[#459 ',']: r#266
[#459 '-']: r#266
[#459 '--']: r#266
[#459 '-=']: r#266
[#459 '/']: r#266
[#459 '/=']: r#266
[#459 ':']: r#266
[#459 ';']: r#266
[#459 '=']: r#266
[#459 '==']: r#266
[#459 ']']: r#266
[#459 '^']: r#266
[#459 '^=']: r#266
[#459 '{']: r#266
[#459 '|']: r#266
[#459 '|=']: r#266
[#459 '||']: r#266
[#459 /\u200B_greater_than/]: r#266
[#459 /\u200B_greater_than_equal/]: r#266
[#459 /\u200B_less_than/]: r#266
[#459 /\u200B_less_than_equal/]: r#266
[#459 /\u200B_shift_left/]: r#266
[#459 /\u200B_shift_left_assign/]: r#266
[#459 /\u200B_shift_right/]: r#266
[#459 /\u200B_shift_right_assign/]: r#266
[#459 /\u200B_template_args_end/]: r#266
[#460 '!=']: r#267
[#460 '%']: r#267
[#460 '%=']: r#267
[#460 '&&']: r#267
[#460 '&']: r#267
[#460 '&=']: r#267
[#460 ')']: r#267
[#460 '*']: r#267
[#460 '*=']: r#267
[#460 '+']: r#267
[#460 '++']: r#267
[#460 '+=']: r#267
[#460 ',']: r#267
[#460 '-']: r#267
[#460 '--']: r#267
[#460 '-=']: r#267
[#460 '/']: r#267
[#460 '/=']: r#267
[#460 ':']: r#267
[#460 ';']: r#267
[#460 '=']: r#267
[#460 '==']: r#267
[#460 ']']: r#267
[#460 '^']: r#267
[#460 '^=']: r#267
[#460 '{']: r#267
[#460 '|']: r#267
[#460 '|=']: r#267
[#460 '||']: r#267
[#460 /\u200B_greater_than/]: r#267
[#460 /\u200B_greater_than_equal/]: r#267
[#460 /\u200B_less_than/]: r#267
[#460 /\u200B_less_than_equal/]: r#267
[#460 /\u200B_shift_left/]: r#267
[#460 /\u200B_shift_left_assign/]: r#267
[#460 /\u200B_shift_right/]: r#267
[#460 /\u200B_shift_right_assign/]: r#267
[#460 /\u200B_template_args_end/]: r#267
[#461 '!=']: r#268
[#461 '%']: r#268
[#461 '%=']: r#268
[#461 '&&']: r#268
[#461 '&']: r#268
[#461 '&=']: r#268
[#461 ')']: r#268
[#461 '*']: r#268
[#461 '*=']: r#268
[#461 '+']: r#268
[#461 '++']: r#268
[#461 '+=']: r#268
[#461 ',']: r#268
[#461 '-']: r#268
[#461 '--']: r#268
[#461 '-=']: r#268
[#461 '/']: r#268
[#461 '/=']: r#268
[#461 ':']: r#268
[#461 ';']: r#268
[#461 '=']: r#268
[#461 '==']: r#268
[#461 ']']: r#268
[#461 '^']: r#268
[#461 '^=']: r#268
[#461 '{']: r#268
[#461 '|']: r#268
[#461 '|=']: r#268
[#461 '||']: r#268
[#461 /\u200B_greater_than/]: r#268
[#461 /\u200B_greater_than_equal/]: r#268
[#461 /\u200B_less_than/]: r#268
[#461 /\u200B_less_than_equal/]: r#268
[#461 /\u200B_shift_left/]: r#268
[#461 /\u200B_shift_left_assign/]: r#268
[#461 /\u200B_shift_right/]: r#268
[#461 /\u200B_shift_right_assign/]: r#268
[#461 /\u200B_template_args_end/]: r#268
[#462 '!=']: r#269
[#462 '%']: r#269
[#462 '%=']: r#269
[#462 '&&']: r#269
[#462 '&']: r#269
[#462 '&=']: r#269
[#462 ')']: r#269
[#462 '*']: r#269
[#462 '*=']: r#269
[#462 '+']: r#269
[#462 '++']: r#269
[#462 '+=']: r#269
[#462 ',']: r#269
[#462 '-']: r#269
[#462 '--']: r#269
[#462 '-=']: r#269
[#462 '/']: r#269
[#462 '/=']: r#269
[#462 ':']: r#269
[#462 ';']: r#269
[#462 '=']: r#269
[#462 '==']: r#269
[#462 ']']: r#269
[#462 '^']: r#269
[#462 '^=']: r#269
[#462 '{']: r#269
[#462 '|']: r#269
[#462 '|=']: r#269
[#462 '||']: r#269
[#462 /\u200B_greater_than/]: r#269
[#462 /\u200B_greater_than_equal/]: r#269
[#462 /\u200B_less_than/]: r#269
[#462 /\u200B_less_than_equal/]: r#269
[#462 /\u200B_shift_left/]: r#269
[#462 /\u200B_shift_left_assign/]: r#269
[#462 /\u200B_shift_right/]: r#269
[#462 /\u200B_shift_right_assign/]: r#269
[#462 /\u200B_template_args_end/]: r#269
[#463 '@']: r#270
[#463 'array']: r#270
[#463 'atomic']: r#270
[#463 'bool']: r#270
[#463 'f16']: r#270
[#463 'f32']: r#270
[#463 'fn']: r#270
[#463 'i32']: r#270
[#463 'mat2x2']: r#270
[#463 'mat2x3']: r#270
[#463 'mat2x4']: r#270
[#463 'mat3x2']: r#270
[#463 'mat3x3']: r#270
[#463 'mat3x4']: r#270
[#463 'mat4x2']: r#270
[#463 'mat4x3']: r#270
[#463 'mat4x4']: r#270
[#463 'override']: r#270
[#463 'ptr']: r#270
[#463 'sampler']: r#270
[#463 'sampler_comparison']: r#270
[#463 'texture_1d']: r#270
[#463 'texture_2d']: r#270
[#463 'texture_2d_array']: r#270
[#463 'texture_3d']: r#270
[#463 'texture_cube']: r#270
[#463 'texture_cube_array']: r#270
[#463 'texture_depth_2d']: r#270
[#463 'texture_depth_2d_array']: r#270
[#463 'texture_depth_cube']: r#270
[#463 'texture_depth_cube_array']: r#270
[#463 'texture_depth_multisampled_2d']: r#270
[#463 'texture_multisampled_2d']: r#270
[#463 'texture_storage_1d']: r#270
[#463 'texture_storage_2d']: r#270
[#463 'texture_storage_2d_array']: r#270
[#463 'texture_storage_3d']: r#270
[#463 'u32']: r#270
[#463 'var']: r#270
[#463 'vec2']: r#270
[#463 'vec3']: r#270
[#463 'vec4']: r#270
[#463 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#270
[#464 '!']: s#62
[#464 '&']: s#65
[#464 '(']: s#77
[#464 ')']: r#271
[#464 '*']: s#64
[#464 '-']: s#61
[#464 'array']: s#81
[#464 'atomic']: s#95
[#464 'bitcast']: s#71
[#464 'bool']: s#88
[#464 'f16']: s#90
[#464 'f32']: s#89
[#464 'false']: s#87
[#464 'i32']: s#91
[#464 'mat2x2']: s#100
[#464 'mat2x3']: s#101
[#464 'mat2x4']: s#102
[#464 'mat3x2']: s#103
[#464 'mat3x3']: s#104
[#464 'mat3x4']: s#105
[#464 'mat4x2']: s#106
[#464 'mat4x3']: s#107
[#464 'mat4x4']: s#108
[#464 'ptr']: s#93
[#464 'sampler']: s#125
[#464 'sampler_comparison']: s#126
[#464 'texture_1d']: s#132
[#464 'texture_2d']: s#133
[#464 'texture_2d_array']: s#134
[#464 'texture_3d']: s#135
[#464 'texture_cube']: s#136
[#464 'texture_cube_array']: s#137
[#464 'texture_depth_2d']: s#127
[#464 'texture_depth_2d_array']: s#128
[#464 'texture_depth_cube']: s#129
[#464 'texture_depth_cube_array']: s#130
[#464 'texture_depth_multisampled_2d']: s#131
[#464 'texture_multisampled_2d']: s#138
[#464 'texture_storage_1d']: s#139
[#464 'texture_storage_2d']: s#140
[#464 'texture_storage_2d_array']: s#141
[#464 'texture_storage_3d']: s#142
[#464 'true']: s#86
[#464 'u32']: s#92
[#464 'vec2']: s#97
[#464 'vec3']: s#98
[#464 'vec4']: s#99
[#464 '~']: s#63
[#464 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#464 /0[fh]/]: s#112
[#464 /0[iu]?/]: s#109
[#464 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#464 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#464 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#464 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#464 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#464 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#464 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#464 /[1-9][0-9]*[fh]/]: s#113
[#464 /[1-9][0-9]*[iu]?/]: s#110
[#465 ')']: s#480
[#466 '@']: r#272
[#466 'array']: r#272
[#466 'atomic']: r#272
[#466 'bool']: r#272
[#466 'f16']: r#272
[#466 'f32']: r#272
[#466 'fn']: r#272
[#466 'i32']: r#272
[#466 'mat2x2']: r#272
[#466 'mat2x3']: r#272
[#466 'mat2x4']: r#272
[#466 'mat3x2']: r#272
[#466 'mat3x3']: r#272
[#466 'mat3x4']: r#272
[#466 'mat4x2']: r#272
[#466 'mat4x3']: r#272
[#466 'mat4x4']: r#272
[#466 'override']: r#272
[#466 'ptr']: r#272
[#466 'sampler']: r#272
[#466 'sampler_comparison']: r#272
[#466 'texture_1d']: r#272
[#466 'texture_2d']: r#272
[#466 'texture_2d_array']: r#272
[#466 'texture_3d']: r#272
[#466 'texture_cube']: r#272
[#466 'texture_cube_array']: r#272
[#466 'texture_depth_2d']: r#272
[#466 'texture_depth_2d_array']: r#272
[#466 'texture_depth_cube']: r#272
[#466 'texture_depth_cube_array']: r#272
[#466 'texture_depth_multisampled_2d']: r#272
[#466 'texture_multisampled_2d']: r#272
[#466 'texture_storage_1d']: r#272
[#466 'texture_storage_2d']: r#272
[#466 'texture_storage_2d_array']: r#272
[#466 'texture_storage_3d']: r#272
[#466 'u32']: r#272
[#466 'var']: r#272
[#466 'vec2']: r#272
[#466 'vec3']: r#272
[#466 'vec4']: r#272
[#466 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#272
[#467 ')']: r#271
[#468 '@']: r#273
[#468 'array']: r#273
[#468 'atomic']: r#273
[#468 'bool']: r#273
[#468 'f16']: r#273
[#468 'f32']: r#273
[#468 'fn']: r#273
[#468 'i32']: r#273
[#468 'mat2x2']: r#273
[#468 'mat2x3']: r#273
[#468 'mat2x4']: r#273
[#468 'mat3x2']: r#273
[#468 'mat3x3']: r#273
[#468 'mat3x4']: r#273
[#468 'mat4x2']: r#273
[#468 'mat4x3']: r#273
[#468 'mat4x4']: r#273
[#468 'override']: r#273
[#468 'ptr']: r#273
[#468 'sampler']: r#273
[#468 'sampler_comparison']: r#273
[#468 'texture_1d']: r#273
[#468 'texture_2d']: r#273
[#468 'texture_2d_array']: r#273
[#468 'texture_3d']: r#273
[#468 'texture_cube']: r#273
[#468 'texture_cube_array']: r#273
[#468 'texture_depth_2d']: r#273
[#468 'texture_depth_2d_array']: r#273
[#468 'texture_depth_cube']: r#273
[#468 'texture_depth_cube_array']: r#273
[#468 'texture_depth_multisampled_2d']: r#273
[#468 'texture_multisampled_2d']: r#273
[#468 'texture_storage_1d']: r#273
[#468 'texture_storage_2d']: r#273
[#468 'texture_storage_2d_array']: r#273
[#468 'texture_storage_3d']: r#273
[#468 'u32']: r#273
[#468 'var']: r#273
[#468 'vec2']: r#273
[#468 'vec3']: r#273
[#468 'vec4']: r#273
[#468 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#273
[#469 '@']: r#274
[#469 'array']: r#274
[#469 'atomic']: r#274
[#469 'bool']: r#274
[#469 'f16']: r#274
[#469 'f32']: r#274
[#469 'fn']: r#274
[#469 'i32']: r#274
[#469 'mat2x2']: r#274
[#469 'mat2x3']: r#274
[#469 'mat2x4']: r#274
[#469 'mat3x2']: r#274
[#469 'mat3x3']: r#274
[#469 'mat3x4']: r#274
[#469 'mat4x2']: r#274
[#469 'mat4x3']: r#274
[#469 'mat4x4']: r#274
[#469 'override']: r#274
[#469 'ptr']: r#274
[#469 'sampler']: r#274
[#469 'sampler_comparison']: r#274
[#469 'texture_1d']: r#274
[#469 'texture_2d']: r#274
[#469 'texture_2d_array']: r#274
[#469 'texture_3d']: r#274
[#469 'texture_cube']: r#274
[#469 'texture_cube_array']: r#274
[#469 'texture_depth_2d']: r#274
[#469 'texture_depth_2d_array']: r#274
[#469 'texture_depth_cube']: r#274
[#469 'texture_depth_cube_array']: r#274
[#469 'texture_depth_multisampled_2d']: r#274
[#469 'texture_multisampled_2d']: r#274
[#469 'texture_storage_1d']: r#274
[#469 'texture_storage_2d']: r#274
[#469 'texture_storage_2d_array']: r#274
[#469 'texture_storage_3d']: r#274
[#469 'u32']: r#274
[#469 'var']: r#274
[#469 'vec2']: r#274
[#469 'vec3']: r#274
[#469 'vec4']: r#274
[#469 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#274
[#470 ')']: r#271
[#470 'center']: s#477
[#470 'centroid']: s#478
[#470 'sample']: s#479
[#471 '@']: r#275
[#471 'array']: r#275
[#471 'atomic']: r#275
[#471 'bool']: r#275
[#471 'f16']: r#275
[#471 'f32']: r#275
[#471 'fn']: r#275
[#471 'i32']: r#275
[#471 'mat2x2']: r#275
[#471 'mat2x3']: r#275
[#471 'mat2x4']: r#275
[#471 'mat3x2']: r#275
[#471 'mat3x3']: r#275
[#471 'mat3x4']: r#275
[#471 'mat4x2']: r#275
[#471 'mat4x3']: r#275
[#471 'mat4x4']: r#275
[#471 'override']: r#275
[#471 'ptr']: r#275
[#471 'sampler']: r#275
[#471 'sampler_comparison']: r#275
[#471 'texture_1d']: r#275
[#471 'texture_2d']: r#275
[#471 'texture_2d_array']: r#275
[#471 'texture_3d']: r#275
[#471 'texture_cube']: r#275
[#471 'texture_cube_array']: r#275
[#471 'texture_depth_2d']: r#275
[#471 'texture_depth_2d_array']: r#275
[#471 'texture_depth_cube']: r#275
[#471 'texture_depth_cube_array']: r#275
[#471 'texture_depth_multisampled_2d']: r#275
[#471 'texture_multisampled_2d']: r#275
[#471 'texture_storage_1d']: r#275
[#471 'texture_storage_2d']: r#275
[#471 'texture_storage_2d_array']: r#275
[#471 'texture_storage_3d']: r#275
[#471 'u32']: r#275
[#471 'var']: r#275
[#471 'vec2']: r#275
[#471 'vec3']: r#275
[#471 'vec4']: r#275
[#471 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#275
[#472 '@']: r#276
[#472 'array']: r#276
[#472 'atomic']: r#276
[#472 'bool']: r#276
[#472 'f16']: r#276
[#472 'f32']: r#276
[#472 'fn']: r#276
[#472 'i32']: r#276
[#472 'mat2x2']: r#276
[#472 'mat2x3']: r#276
[#472 'mat2x4']: r#276
[#472 'mat3x2']: r#276
[#472 'mat3x3']: r#276
[#472 'mat3x4']: r#276
[#472 'mat4x2']: r#276
[#472 'mat4x3']: r#276
[#472 'mat4x4']: r#276
[#472 'override']: r#276
[#472 'ptr']: r#276
[#472 'sampler']: r#276
[#472 'sampler_comparison']: r#276
[#472 'texture_1d']: r#276
[#472 'texture_2d']: r#276
[#472 'texture_2d_array']: r#276
[#472 'texture_3d']: r#276
[#472 'texture_cube']: r#276
[#472 'texture_cube_array']: r#276
[#472 'texture_depth_2d']: r#276
[#472 'texture_depth_2d_array']: r#276
[#472 'texture_depth_cube']: r#276
[#472 'texture_depth_cube_array']: r#276
[#472 'texture_depth_multisampled_2d']: r#276
[#472 'texture_multisampled_2d']: r#276
[#472 'texture_storage_1d']: r#276
[#472 'texture_storage_2d']: r#276
[#472 'texture_storage_2d_array']: r#276
[#472 'texture_storage_3d']: r#276
[#472 'u32']: r#276
[#472 'var']: r#276
[#472 'vec2']: r#276
[#472 'vec3']: r#276
[#472 'vec4']: r#276
[#472 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#276
[#473 '@']: r#277
[#473 'array']: r#277
[#473 'atomic']: r#277
[#473 'bool']: r#277
[#473 'f16']: r#277
[#473 'f32']: r#277
[#473 'fn']: r#277
[#473 'i32']: r#277
[#473 'mat2x2']: r#277
[#473 'mat2x3']: r#277
[#473 'mat2x4']: r#277
[#473 'mat3x2']: r#277
[#473 'mat3x3']: r#277
[#473 'mat3x4']: r#277
[#473 'mat4x2']: r#277
[#473 'mat4x3']: r#277
[#473 'mat4x4']: r#277
[#473 'override']: r#277
[#473 'ptr']: r#277
[#473 'sampler']: r#277
[#473 'sampler_comparison']: r#277
[#473 'texture_1d']: r#277
[#473 'texture_2d']: r#277
[#473 'texture_2d_array']: r#277
[#473 'texture_3d']: r#277
[#473 'texture_cube']: r#277
[#473 'texture_cube_array']: r#277
[#473 'texture_depth_2d']: r#277
[#473 'texture_depth_2d_array']: r#277
[#473 'texture_depth_cube']: r#277
[#473 'texture_depth_cube_array']: r#277
[#473 'texture_depth_multisampled_2d']: r#277
[#473 'texture_multisampled_2d']: r#277
[#473 'texture_storage_1d']: r#277
[#473 'texture_storage_2d']: r#277
[#473 'texture_storage_2d_array']: r#277
[#473 'texture_storage_3d']: r#277
[#473 'u32']: r#277
[#473 'var']: r#277
[#473 'vec2']: r#277
[#473 'vec3']: r#277
[#473 'vec4']: r#277
[#473 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#277
[#474 '@']: r#278
[#474 'array']: r#278
[#474 'atomic']: r#278
[#474 'bool']: r#278
[#474 'f16']: r#278
[#474 'f32']: r#278
[#474 'fn']: r#278
[#474 'i32']: r#278
[#474 'mat2x2']: r#278
[#474 'mat2x3']: r#278
[#474 'mat2x4']: r#278
[#474 'mat3x2']: r#278
[#474 'mat3x3']: r#278
[#474 'mat3x4']: r#278
[#474 'mat4x2']: r#278
[#474 'mat4x3']: r#278
[#474 'mat4x4']: r#278
[#474 'override']: r#278
[#474 'ptr']: r#278
[#474 'sampler']: r#278
[#474 'sampler_comparison']: r#278
[#474 'texture_1d']: r#278
[#474 'texture_2d']: r#278
[#474 'texture_2d_array']: r#278
[#474 'texture_3d']: r#278
[#474 'texture_cube']: r#278
[#474 'texture_cube_array']: r#278
[#474 'texture_depth_2d']: r#278
[#474 'texture_depth_2d_array']: r#278
[#474 'texture_depth_cube']: r#278
[#474 'texture_depth_cube_array']: r#278
[#474 'texture_depth_multisampled_2d']: r#278
[#474 'texture_multisampled_2d']: r#278
[#474 'texture_storage_1d']: r#278
[#474 'texture_storage_2d']: r#278
[#474 'texture_storage_2d_array']: r#278
[#474 'texture_storage_3d']: r#278
[#474 'u32']: r#278
[#474 'var']: r#278
[#474 'vec2']: r#278
[#474 'vec3']: r#278
[#474 'vec4']: r#278
[#474 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#278
[#475 '@']: r#279
[#475 'array']: r#279
[#475 'atomic']: r#279
[#475 'bool']: r#279
[#475 'f16']: r#279
[#475 'f32']: r#279
[#475 'fn']: r#279
[#475 'i32']: r#279
[#475 'mat2x2']: r#279
[#475 'mat2x3']: r#279
[#475 'mat2x4']: r#279
[#475 'mat3x2']: r#279
[#475 'mat3x3']: r#279
[#475 'mat3x4']: r#279
[#475 'mat4x2']: r#279
[#475 'mat4x3']: r#279
[#475 'mat4x4']: r#279
[#475 'override']: r#279
[#475 'ptr']: r#279
[#475 'sampler']: r#279
[#475 'sampler_comparison']: r#279
[#475 'texture_1d']: r#279
[#475 'texture_2d']: r#279
[#475 'texture_2d_array']: r#279
[#475 'texture_3d']: r#279
[#475 'texture_cube']: r#279
[#475 'texture_cube_array']: r#279
[#475 'texture_depth_2d']: r#279
[#475 'texture_depth_2d_array']: r#279
[#475 'texture_depth_cube']: r#279
[#475 'texture_depth_cube_array']: r#279
[#475 'texture_depth_multisampled_2d']: r#279
[#475 'texture_multisampled_2d']: r#279
[#475 'texture_storage_1d']: r#279
[#475 'texture_storage_2d']: r#279
[#475 'texture_storage_2d_array']: r#279
[#475 'texture_storage_3d']: r#279
[#475 'u32']: r#279
[#475 'var']: r#279
[#475 'vec2']: r#279
[#475 'vec3']: r#279
[#475 'vec4']: r#279
[#475 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#279
[#476 ',']: s#467
[#477 ')']: r#280
[#477 ',']: r#280
[#478 ')']: r#281
[#478 ',']: r#281
[#479 ')']: r#282
[#479 ',']: r#282
[#480 '@']: r#283
[#480 'array']: r#283
[#480 'atomic']: r#283
[#480 'bool']: r#283
[#480 'f16']: r#283
[#480 'f32']: r#283
[#480 'fn']: r#283
[#480 'i32']: r#283
[#480 'mat2x2']: r#283
[#480 'mat2x3']: r#283
[#480 'mat2x4']: r#283
[#480 'mat3x2']: r#283
[#480 'mat3x3']: r#283
[#480 'mat3x4']: r#283
[#480 'mat4x2']: r#283
[#480 'mat4x3']: r#283
[#480 'mat4x4']: r#283
[#480 'override']: r#283
[#480 'ptr']: r#283
[#480 'sampler']: r#283
[#480 'sampler_comparison']: r#283
[#480 'texture_1d']: r#283
[#480 'texture_2d']: r#283
[#480 'texture_2d_array']: r#283
[#480 'texture_3d']: r#283
[#480 'texture_cube']: r#283
[#480 'texture_cube_array']: r#283
[#480 'texture_depth_2d']: r#283
[#480 'texture_depth_2d_array']: r#283
[#480 'texture_depth_cube']: r#283
[#480 'texture_depth_cube_array']: r#283
[#480 'texture_depth_multisampled_2d']: r#283
[#480 'texture_multisampled_2d']: r#283
[#480 'texture_storage_1d']: r#283
[#480 'texture_storage_2d']: r#283
[#480 'texture_storage_2d_array']: r#283
[#480 'texture_storage_3d']: r#283
[#480 'u32']: r#283
[#480 'var']: r#283
[#480 'vec2']: r#283
[#480 'vec3']: r#283
[#480 'vec4']: r#283
[#480 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#283
[#481 ',']: s#576
[#482 '!=']: r#284
[#482 '%']: r#284
[#482 '%=']: r#284
[#482 '&&']: r#284
[#482 '&']: r#284
[#482 '&=']: r#284
[#482 ')']: r#284
[#482 '*']: r#284
[#482 '*=']: r#284
[#482 '+']: r#284
[#482 '++']: r#284
[#482 '+=']: r#284
[#482 ',']: r#284
[#482 '-']: r#284
[#482 '--']: r#284
[#482 '-=']: r#284
[#482 '/']: r#284
[#482 '/=']: r#284
[#482 ':']: r#284
[#482 ';']: r#284
[#482 '=']: r#284
[#482 '==']: r#284
[#482 ']']: r#284
[#482 '^']: r#284
[#482 '^=']: r#284
[#482 '{']: r#284
[#482 '|']: r#284
[#482 '|=']: r#284
[#482 '||']: r#284
[#482 /\u200B_greater_than/]: r#284
[#482 /\u200B_greater_than_equal/]: r#284
[#482 /\u200B_less_than/]: r#284
[#482 /\u200B_less_than_equal/]: r#284
[#482 /\u200B_shift_left/]: r#284
[#482 /\u200B_shift_left_assign/]: r#284
[#482 /\u200B_shift_right/]: r#284
[#482 /\u200B_shift_right_assign/]: r#284
[#482 /\u200B_template_args_end/]: r#284
[#483 '!=']: r#285
[#483 '%']: r#285
[#483 '%=']: r#285
[#483 '&&']: r#285
[#483 '&']: r#285
[#483 '&=']: r#285
[#483 ')']: r#285
[#483 '*']: r#285
[#483 '*=']: r#285
[#483 '+']: r#285
[#483 '++']: r#285
[#483 '+=']: r#285
[#483 ',']: r#285
[#483 '-']: r#285
[#483 '--']: r#285
[#483 '-=']: r#285
[#483 '/']: r#285
[#483 '/=']: r#285
[#483 ':']: r#285
[#483 ';']: r#285
[#483 '=']: r#285
[#483 '==']: r#285
[#483 ']']: r#285
[#483 '^']: r#285
[#483 '^=']: r#285
[#483 '{']: r#285
[#483 '|']: r#285
[#483 '|=']: r#285
[#483 '||']: r#285
[#483 /\u200B_greater_than/]: r#285
[#483 /\u200B_greater_than_equal/]: r#285
[#483 /\u200B_less_than/]: r#285
[#483 /\u200B_less_than_equal/]: r#285
[#483 /\u200B_shift_left/]: r#285
[#483 /\u200B_shift_left_assign/]: r#285
[#483 /\u200B_shift_right/]: r#285
[#483 /\u200B_shift_right_assign/]: r#285
[#483 /\u200B_template_args_end/]: r#285
[#484 '(']: s#77
[#485 '(']: r#286
[#485 ')']: r#286
[#485 ',']: r#286
[#485 ';']: r#286
[#485 '=']: r#286
[#485 '{']: r#286
[#485 '}']: r#286
[#485 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#286
[#485 /\u200B_template_args_end/]: r#286
[#486 ')']: r#287
[#486 ',']: r#287
[#487 ')']: r#288
[#487 ',']: r#288
[#488 ')']: r#289
[#489 ')']: r#290
[#490 '(']: r#291
[#490 ')']: r#291
[#490 ',']: r#291
[#490 ';']: r#291
[#490 '=']: r#291
[#490 '{']: r#291
[#490 '}']: r#291
[#490 /\u200B_template_args_end/]: r#291
[#491 '(']: r#292
[#491 ')']: r#292
[#491 ',']: r#292
[#491 ';']: r#292
[#491 '=']: r#292
[#491 '{']: r#292
[#491 '}']: r#292
[#491 /\u200B_template_args_end/]: r#292
[#492 /\u200B_template_args_end/]: s#485
[#493 '!']: s#62
[#493 '&']: s#65
[#493 '(']: s#77
[#493 '*']: s#64
[#493 '-']: s#61
[#493 'array']: s#81
[#493 'atomic']: s#95
[#493 'bitcast']: s#71
[#493 'bool']: s#88
[#493 'f16']: s#90
[#493 'f32']: s#89
[#493 'false']: s#87
[#493 'i32']: s#91
[#493 'mat2x2']: s#100
[#493 'mat2x3']: s#101
[#493 'mat2x4']: s#102
[#493 'mat3x2']: s#103
[#493 'mat3x3']: s#104
[#493 'mat3x4']: s#105
[#493 'mat4x2']: s#106
[#493 'mat4x3']: s#107
[#493 'mat4x4']: s#108
[#493 'ptr']: s#93
[#493 'sampler']: s#125
[#493 'sampler_comparison']: s#126
[#493 'texture_1d']: s#132
[#493 'texture_2d']: s#133
[#493 'texture_2d_array']: s#134
[#493 'texture_3d']: s#135
[#493 'texture_cube']: s#136
[#493 'texture_cube_array']: s#137
[#493 'texture_depth_2d']: s#127
[#493 'texture_depth_2d_array']: s#128
[#493 'texture_depth_cube']: s#129
[#493 'texture_depth_cube_array']: s#130
[#493 'texture_depth_multisampled_2d']: s#131
[#493 'texture_multisampled_2d']: s#138
[#493 'texture_storage_1d']: s#139
[#493 'texture_storage_2d']: s#140
[#493 'texture_storage_2d_array']: s#141
[#493 'texture_storage_3d']: s#142
[#493 'true']: s#86
[#493 'u32']: s#92
[#493 'vec2']: s#97
[#493 'vec3']: s#98
[#493 'vec4']: s#99
[#493 '~']: s#63
[#493 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#493 /0[fh]/]: s#112
[#493 /0[iu]?/]: s#109
[#493 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#493 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#493 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#493 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#493 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#493 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#493 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#493 /[1-9][0-9]*[fh]/]: s#113
[#493 /[1-9][0-9]*[iu]?/]: s#110
[#494 'array']: s#346
[#494 'atomic']: s#95
[#494 'bool']: s#88
[#494 'f16']: s#90
[#494 'f32']: s#89
[#494 'i32']: s#91
[#494 'mat2x2']: s#100
[#494 'mat2x3']: s#101
[#494 'mat2x4']: s#102
[#494 'mat3x2']: s#103
[#494 'mat3x3']: s#104
[#494 'mat3x4']: s#105
[#494 'mat4x2']: s#106
[#494 'mat4x3']: s#107
[#494 'mat4x4']: s#108
[#494 'ptr']: s#93
[#494 'sampler']: s#125
[#494 'sampler_comparison']: s#126
[#494 'texture_1d']: s#132
[#494 'texture_2d']: s#133
[#494 'texture_2d_array']: s#134
[#494 'texture_3d']: s#135
[#494 'texture_cube']: s#136
[#494 'texture_cube_array']: s#137
[#494 'texture_depth_2d']: s#127
[#494 'texture_depth_2d_array']: s#128
[#494 'texture_depth_cube']: s#129
[#494 'texture_depth_cube_array']: s#130
[#494 'texture_depth_multisampled_2d']: s#131
[#494 'texture_multisampled_2d']: s#138
[#494 'texture_storage_1d']: s#139
[#494 'texture_storage_2d']: s#140
[#494 'texture_storage_2d_array']: s#141
[#494 'texture_storage_3d']: s#142
[#494 'u32']: s#92
[#494 'vec2']: s#97
[#494 'vec3']: s#98
[#494 'vec4']: s#99
[#494 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#495 '(']: r#293
[#495 ')']: r#293
[#495 ',']: r#293
[#495 ';']: r#293
[#495 '=']: r#293
[#495 '{']: r#293
[#495 '}']: r#293
[#495 /\u200B_template_args_end/]: r#293
[#496 '(']: r#294
[#496 ')']: r#294
[#496 ',']: r#294
[#496 ';']: r#294
[#496 '=']: r#294
[#496 '{']: r#294
[#496 '}']: r#294
[#496 /\u200B_template_args_end/]: r#294
[#497 '(']: r#295
[#497 ')']: r#295
[#497 ',']: r#295
[#497 ';']: r#295
[#497 '=']: r#295
[#497 '{']: r#295
[#497 '}']: r#295
[#497 /\u200B_template_args_end/]: r#295
[#498 'read']: s#537
[#498 'read_write']: s#539
[#498 'write']: s#538
[#499 '!']: s#62
[#499 '&']: s#65
[#499 '(']: s#77
[#499 '*']: s#64
[#499 '-']: s#61
[#499 'array']: s#81
[#499 'atomic']: s#95
[#499 'bitcast']: s#71
[#499 'bool']: s#88
[#499 'f16']: s#90
[#499 'f32']: s#89
[#499 'false']: s#87
[#499 'i32']: s#91
[#499 'mat2x2']: s#100
[#499 'mat2x3']: s#101
[#499 'mat2x4']: s#102
[#499 'mat3x2']: s#103
[#499 'mat3x3']: s#104
[#499 'mat3x4']: s#105
[#499 'mat4x2']: s#106
[#499 'mat4x3']: s#107
[#499 'mat4x4']: s#108
[#499 'ptr']: s#93
[#499 'sampler']: s#125
[#499 'sampler_comparison']: s#126
[#499 'texture_1d']: s#132
[#499 'texture_2d']: s#133
[#499 'texture_2d_array']: s#134
[#499 'texture_3d']: s#135
[#499 'texture_cube']: s#136
[#499 'texture_cube_array']: s#137
[#499 'texture_depth_2d']: s#127
[#499 'texture_depth_2d_array']: s#128
[#499 'texture_depth_cube']: s#129
[#499 'texture_depth_cube_array']: s#130
[#499 'texture_depth_multisampled_2d']: s#131
[#499 'texture_multisampled_2d']: s#138
[#499 'texture_storage_1d']: s#139
[#499 'texture_storage_2d']: s#140
[#499 'texture_storage_2d_array']: s#141
[#499 'texture_storage_3d']: s#142
[#499 'true']: s#86
[#499 'u32']: s#92
[#499 'vec2']: s#97
[#499 'vec3']: s#98
[#499 'vec4']: s#99
[#499 '~']: s#63
[#499 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#499 /0[fh]/]: s#112
[#499 /0[iu]?/]: s#109
[#499 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#499 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#499 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#499 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#499 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#499 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#499 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#499 /[1-9][0-9]*[fh]/]: s#113
[#499 /[1-9][0-9]*[iu]?/]: s#110
[#500 '&']: r#296
[#500 '(']: r#296
[#500 '*']: r#296
[#500 ';']: r#296
[#500 '_']: r#296
[#500 'array']: r#296
[#500 'atomic']: r#296
[#500 'bool']: r#296
[#500 'break']: r#296
[#500 'const']: r#296
[#500 'const_assert']: r#296
[#500 'continue']: r#296
[#500 'continuing']: r#296
[#500 'discard']: r#296
[#500 'else']: r#296
[#500 'f16']: r#296
[#500 'f32']: r#296
[#500 'for']: r#296
[#500 'i32']: r#296
[#500 'if']: r#296
[#500 'let']: r#296
[#500 'loop']: r#296
[#500 'mat2x2']: r#296
[#500 'mat2x3']: r#296
[#500 'mat2x4']: r#296
[#500 'mat3x2']: r#296
[#500 'mat3x3']: r#296
[#500 'mat3x4']: r#296
[#500 'mat4x2']: r#296
[#500 'mat4x3']: r#296
[#500 'mat4x4']: r#296
[#500 'ptr']: r#296
[#500 'return']: r#296
[#500 'sampler']: r#296
[#500 'sampler_comparison']: r#296
[#500 'switch']: r#296
[#500 'texture_1d']: r#296
[#500 'texture_2d']: r#296
[#500 'texture_2d_array']: r#296
[#500 'texture_3d']: r#296
[#500 'texture_cube']: r#296
[#500 'texture_cube_array']: r#296
[#500 'texture_depth_2d']: r#296
[#500 'texture_depth_2d_array']: r#296
[#500 'texture_depth_cube']: r#296
[#500 'texture_depth_cube_array']: r#296
[#500 'texture_depth_multisampled_2d']: r#296
[#500 'texture_multisampled_2d']: r#296
[#500 'texture_storage_1d']: r#296
[#500 'texture_storage_2d']: r#296
[#500 'texture_storage_2d_array']: r#296
[#500 'texture_storage_3d']: r#296
[#500 'u32']: r#296
[#500 'var']: r#296
[#500 'vec2']: r#296
[#500 'vec3']: r#296
[#500 'vec4']: r#296
[#500 'while']: r#296
[#500 '{']: r#296
[#500 '}']: r#296
[#500 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#296
[#501 '&']: r#297
[#501 '(']: r#297
[#501 '*']: r#297
[#501 ';']: r#297
[#501 '_']: r#297
[#501 'array']: r#297
[#501 'atomic']: r#297
[#501 'bool']: r#297
[#501 'break']: r#297
[#501 'const']: r#297
[#501 'const_assert']: r#297
[#501 'continue']: r#297
[#501 'continuing']: r#297
[#501 'discard']: r#297
[#501 'f16']: r#297
[#501 'f32']: r#297
[#501 'for']: r#297
[#501 'i32']: r#297
[#501 'if']: r#297
[#501 'let']: r#297
[#501 'loop']: r#297
[#501 'mat2x2']: r#297
[#501 'mat2x3']: r#297
[#501 'mat2x4']: r#297
[#501 'mat3x2']: r#297
[#501 'mat3x3']: r#297
[#501 'mat3x4']: r#297
[#501 'mat4x2']: r#297
[#501 'mat4x3']: r#297
[#501 'mat4x4']: r#297
[#501 'ptr']: r#297
[#501 'return']: r#297
[#501 'sampler']: r#297
[#501 'sampler_comparison']: r#297
[#501 'switch']: r#297
[#501 'texture_1d']: r#297
[#501 'texture_2d']: r#297
[#501 'texture_2d_array']: r#297
[#501 'texture_3d']: r#297
[#501 'texture_cube']: r#297
[#501 'texture_cube_array']: r#297
[#501 'texture_depth_2d']: r#297
[#501 'texture_depth_2d_array']: r#297
[#501 'texture_depth_cube']: r#297
[#501 'texture_depth_cube_array']: r#297
[#501 'texture_depth_multisampled_2d']: r#297
[#501 'texture_multisampled_2d']: r#297
[#501 'texture_storage_1d']: r#297
[#501 'texture_storage_2d']: r#297
[#501 'texture_storage_2d_array']: r#297
[#501 'texture_storage_3d']: r#297
[#501 'u32']: r#297
[#501 'var']: r#297
[#501 'vec2']: r#297
[#501 'vec3']: r#297
[#501 'vec4']: r#297
[#501 'while']: r#297
[#501 '{']: r#297
[#501 '}']: r#297
[#501 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#297
[#502 '&']: r#298
[#502 '(']: r#298
[#502 '*']: r#298
[#502 ';']: r#298
[#502 '_']: r#298
[#502 'array']: r#298
[#502 'atomic']: r#298
[#502 'bool']: r#298
[#502 'break']: r#298
[#502 'const']: r#298
[#502 'const_assert']: r#298
[#502 'continue']: r#298
[#502 'continuing']: r#298
[#502 'discard']: r#298
[#502 'f16']: r#298
[#502 'f32']: r#298
[#502 'for']: r#298
[#502 'i32']: r#298
[#502 'if']: r#298
[#502 'let']: r#298
[#502 'loop']: r#298
[#502 'mat2x2']: r#298
[#502 'mat2x3']: r#298
[#502 'mat2x4']: r#298
[#502 'mat3x2']: r#298
[#502 'mat3x3']: r#298
[#502 'mat3x4']: r#298
[#502 'mat4x2']: r#298
[#502 'mat4x3']: r#298
[#502 'mat4x4']: r#298
[#502 'ptr']: r#298
[#502 'return']: r#298
[#502 'sampler']: r#298
[#502 'sampler_comparison']: r#298
[#502 'switch']: r#298
[#502 'texture_1d']: r#298
[#502 'texture_2d']: r#298
[#502 'texture_2d_array']: r#298
[#502 'texture_3d']: r#298
[#502 'texture_cube']: r#298
[#502 'texture_cube_array']: r#298
[#502 'texture_depth_2d']: r#298
[#502 'texture_depth_2d_array']: r#298
[#502 'texture_depth_cube']: r#298
[#502 'texture_depth_cube_array']: r#298
[#502 'texture_depth_multisampled_2d']: r#298
[#502 'texture_multisampled_2d']: r#298
[#502 'texture_storage_1d']: r#298
[#502 'texture_storage_2d']: r#298
[#502 'texture_storage_2d_array']: r#298
[#502 'texture_storage_3d']: r#298
[#502 'u32']: r#298
[#502 'var']: r#298
[#502 'vec2']: r#298
[#502 'vec3']: r#298
[#502 'vec4']: r#298
[#502 'while']: r#298
[#502 '{']: r#298
[#502 '}']: r#298
[#502 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#298
[#503 '{']: s#171
[#504 'case']: s#563
[#504 'default']: s#564
[#505 'continuing']: s#557
[#506 'continuing']: r#299
[#506 '}']: r#299
[#507 '&']: s#334
[#507 '(']: s#335
[#507 '*']: s#333
[#507 ';']: s#298
[#507 '_']: s#331
[#507 'array']: s#81
[#507 'atomic']: s#95
[#507 'bool']: s#88
[#507 'break']: s#323
[#507 'const']: s#322
[#507 'const_assert']: s#25
[#507 'continue']: s#324
[#507 'discard']: s#309
[#507 'f16']: s#90
[#507 'f32']: s#89
[#507 'for']: s#317
[#507 'i32']: s#91
[#507 'if']: s#328
[#507 'let']: s#321
[#507 'loop']: s#316
[#507 'mat2x2']: s#100
[#507 'mat2x3']: s#101
[#507 'mat2x4']: s#102
[#507 'mat3x2']: s#103
[#507 'mat3x3']: s#104
[#507 'mat3x4']: s#105
[#507 'mat4x2']: s#106
[#507 'mat4x3']: s#107
[#507 'mat4x4']: s#108
[#507 'ptr']: s#93
[#507 'return']: s#313
[#507 'sampler']: s#125
[#507 'sampler_comparison']: s#126
[#507 'switch']: s#315
[#507 'texture_1d']: s#132
[#507 'texture_2d']: s#133
[#507 'texture_2d_array']: s#134
[#507 'texture_3d']: s#135
[#507 'texture_cube']: s#136
[#507 'texture_cube_array']: s#137
[#507 'texture_depth_2d']: s#127
[#507 'texture_depth_2d_array']: s#128
[#507 'texture_depth_cube']: s#129
[#507 'texture_depth_cube_array']: s#130
[#507 'texture_depth_multisampled_2d']: s#131
[#507 'texture_multisampled_2d']: s#138
[#507 'texture_storage_1d']: s#139
[#507 'texture_storage_2d']: s#140
[#507 'texture_storage_2d_array']: s#141
[#507 'texture_storage_3d']: s#142
[#507 'u32']: s#92
[#507 'var']: s#151
[#507 'vec2']: s#97
[#507 'vec3']: s#98
[#507 'vec4']: s#99
[#507 'while']: s#318
[#507 '{']: s#171
[#507 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#508 ')']: s#553
[#509 ';']: s#552
[#510 ';']: r#300
[#511 ';']: r#301
[#512 ';']: r#302
[#513 ';']: r#303
[#514 '&']: r#304
[#514 '(']: r#304
[#514 '*']: r#304
[#514 ';']: r#304
[#514 '_']: r#304
[#514 'array']: r#304
[#514 'atomic']: r#304
[#514 'bool']: r#304
[#514 'break']: r#304
[#514 'const']: r#304
[#514 'const_assert']: r#304
[#514 'continue']: r#304
[#514 'continuing']: r#304
[#514 'discard']: r#304
[#514 'f16']: r#304
[#514 'f32']: r#304
[#514 'for']: r#304
[#514 'i32']: r#304
[#514 'if']: r#304
[#514 'let']: r#304
[#514 'loop']: r#304
[#514 'mat2x2']: r#304
[#514 'mat2x3']: r#304
[#514 'mat2x4']: r#304
[#514 'mat3x2']: r#304
[#514 'mat3x3']: r#304
[#514 'mat3x4']: r#304
[#514 'mat4x2']: r#304
[#514 'mat4x3']: r#304
[#514 'mat4x4']: r#304
[#514 'ptr']: r#304
[#514 'return']: r#304
[#514 'sampler']: r#304
[#514 'sampler_comparison']: r#304
[#514 'switch']: r#304
[#514 'texture_1d']: r#304
[#514 'texture_2d']: r#304
[#514 'texture_2d_array']: r#304
[#514 'texture_3d']: r#304
[#514 'texture_cube']: r#304
[#514 'texture_cube_array']: r#304
[#514 'texture_depth_2d']: r#304
[#514 'texture_depth_2d_array']: r#304
[#514 'texture_depth_cube']: r#304
[#514 'texture_depth_cube_array']: r#304
[#514 'texture_depth_multisampled_2d']: r#304
[#514 'texture_multisampled_2d']: r#304
[#514 'texture_storage_1d']: r#304
[#514 'texture_storage_2d']: r#304
[#514 'texture_storage_2d_array']: r#304
[#514 'texture_storage_3d']: r#304
[#514 'u32']: r#304
[#514 'var']: r#304
[#514 'vec2']: r#304
[#514 'vec3']: r#304
[#514 'vec4']: r#304
[#514 'while']: r#304
[#514 '{']: r#304
[#514 '}']: r#304
[#514 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#304
[#515 ';']: r#305
[#516 '!']: s#62
[#516 '&']: s#65
[#516 '(']: s#77
[#516 '*']: s#64
[#516 '-']: s#61
[#516 'array']: s#81
[#516 'atomic']: s#95
[#516 'bitcast']: s#71
[#516 'bool']: s#88
[#516 'f16']: s#90
[#516 'f32']: s#89
[#516 'false']: s#87
[#516 'i32']: s#91
[#516 'mat2x2']: s#100
[#516 'mat2x3']: s#101
[#516 'mat2x4']: s#102
[#516 'mat3x2']: s#103
[#516 'mat3x3']: s#104
[#516 'mat3x4']: s#105
[#516 'mat4x2']: s#106
[#516 'mat4x3']: s#107
[#516 'mat4x4']: s#108
[#516 'ptr']: s#93
[#516 'sampler']: s#125
[#516 'sampler_comparison']: s#126
[#516 'texture_1d']: s#132
[#516 'texture_2d']: s#133
[#516 'texture_2d_array']: s#134
[#516 'texture_3d']: s#135
[#516 'texture_cube']: s#136
[#516 'texture_cube_array']: s#137
[#516 'texture_depth_2d']: s#127
[#516 'texture_depth_2d_array']: s#128
[#516 'texture_depth_cube']: s#129
[#516 'texture_depth_cube_array']: s#130
[#516 'texture_depth_multisampled_2d']: s#131
[#516 'texture_multisampled_2d']: s#138
[#516 'texture_storage_1d']: s#139
[#516 'texture_storage_2d']: s#140
[#516 'texture_storage_2d_array']: s#141
[#516 'texture_storage_3d']: s#142
[#516 'true']: s#86
[#516 'u32']: s#92
[#516 'vec2']: s#97
[#516 'vec3']: s#98
[#516 'vec4']: s#99
[#516 '~']: s#63
[#516 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#516 /0[fh]/]: s#112
[#516 /0[iu]?/]: s#109
[#516 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#516 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#516 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#516 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#516 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#516 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#516 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#516 /[1-9][0-9]*[fh]/]: s#113
[#516 /[1-9][0-9]*[iu]?/]: s#110
[#517 '!']: s#62
[#517 '&']: s#65
[#517 '(']: s#77
[#517 '*']: s#64
[#517 '-']: s#61
[#517 'array']: s#81
[#517 'atomic']: s#95
[#517 'bitcast']: s#71
[#517 'bool']: s#88
[#517 'f16']: s#90
[#517 'f32']: s#89
[#517 'false']: s#87
[#517 'i32']: s#91
[#517 'mat2x2']: s#100
[#517 'mat2x3']: s#101
[#517 'mat2x4']: s#102
[#517 'mat3x2']: s#103
[#517 'mat3x3']: s#104
[#517 'mat3x4']: s#105
[#517 'mat4x2']: s#106
[#517 'mat4x3']: s#107
[#517 'mat4x4']: s#108
[#517 'ptr']: s#93
[#517 'sampler']: s#125
[#517 'sampler_comparison']: s#126
[#517 'texture_1d']: s#132
[#517 'texture_2d']: s#133
[#517 'texture_2d_array']: s#134
[#517 'texture_3d']: s#135
[#517 'texture_cube']: s#136
[#517 'texture_cube_array']: s#137
[#517 'texture_depth_2d']: s#127
[#517 'texture_depth_2d_array']: s#128
[#517 'texture_depth_cube']: s#129
[#517 'texture_depth_cube_array']: s#130
[#517 'texture_depth_multisampled_2d']: s#131
[#517 'texture_multisampled_2d']: s#138
[#517 'texture_storage_1d']: s#139
[#517 'texture_storage_2d']: s#140
[#517 'texture_storage_2d_array']: s#141
[#517 'texture_storage_3d']: s#142
[#517 'true']: s#86
[#517 'u32']: s#92
[#517 'vec2']: s#97
[#517 'vec3']: s#98
[#517 'vec4']: s#99
[#517 '~']: s#63
[#517 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#517 /0[fh]/]: s#112
[#517 /0[iu]?/]: s#109
[#517 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#517 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#517 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#517 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#517 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#517 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#517 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#517 /[1-9][0-9]*[fh]/]: s#113
[#517 /[1-9][0-9]*[iu]?/]: s#110
[#518 '&']: r#306
[#518 '(']: r#306
[#518 '*']: r#306
[#518 ';']: r#306
[#518 '_']: r#306
[#518 'array']: r#306
[#518 'atomic']: r#306
[#518 'bool']: r#306
[#518 'break']: r#306
[#518 'const']: r#306
[#518 'const_assert']: r#306
[#518 'continue']: r#306
[#518 'continuing']: r#306
[#518 'discard']: r#306
[#518 'else']: r#306
[#518 'f16']: r#306
[#518 'f32']: r#306
[#518 'for']: r#306
[#518 'i32']: r#306
[#518 'if']: r#306
[#518 'let']: r#306
[#518 'loop']: r#306
[#518 'mat2x2']: r#306
[#518 'mat2x3']: r#306
[#518 'mat2x4']: r#306
[#518 'mat3x2']: r#306
[#518 'mat3x3']: r#306
[#518 'mat3x4']: r#306
[#518 'mat4x2']: r#306
[#518 'mat4x3']: r#306
[#518 'mat4x4']: r#306
[#518 'ptr']: r#306
[#518 'return']: r#306
[#518 'sampler']: r#306
[#518 'sampler_comparison']: r#306
[#518 'switch']: r#306
[#518 'texture_1d']: r#306
[#518 'texture_2d']: r#306
[#518 'texture_2d_array']: r#306
[#518 'texture_3d']: r#306
[#518 'texture_cube']: r#306
[#518 'texture_cube_array']: r#306
[#518 'texture_depth_2d']: r#306
[#518 'texture_depth_2d_array']: r#306
[#518 'texture_depth_cube']: r#306
[#518 'texture_depth_cube_array']: r#306
[#518 'texture_depth_multisampled_2d']: r#306
[#518 'texture_multisampled_2d']: r#306
[#518 'texture_storage_1d']: r#306
[#518 'texture_storage_2d']: r#306
[#518 'texture_storage_2d_array']: r#306
[#518 'texture_storage_3d']: r#306
[#518 'u32']: r#306
[#518 'var']: r#306
[#518 'vec2']: r#306
[#518 'vec3']: r#306
[#518 'vec4']: r#306
[#518 'while']: r#306
[#518 '{']: r#306
[#518 '}']: r#306
[#518 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#306
[#519 ')']: r#307
[#519 ';']: r#307
[#520 ')']: r#308
[#520 ';']: r#308
[#521 '%=']: r#309
[#521 '&=']: r#309
[#521 ')']: r#309
[#521 '*=']: r#309
[#521 '++']: r#309
[#521 '+=']: r#309
[#521 '--']: r#309
[#521 '-=']: r#309
[#521 '.']: r#309
[#521 '/=']: r#309
[#521 '=']: r#309
[#521 '[']: r#309
[#521 '^=']: r#309
[#521 '|=']: r#309
[#521 /\u200B_shift_left_assign/]: r#309
[#521 /\u200B_shift_right_assign/]: r#309
[#522 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#310
[#523 ':']: s#549
[#524 ',']: s#548
[#525 ')']: r#311
[#525 ',']: r#311
[#526 ',']: s#527
[#527 '@']: s#30
[#528 '->']: s#544
[#529 ',']: r#312
[#529 '}']: r#312
[#530 ',']: r#313
[#530 '}']: r#313
[#531 '}']: s#542
[#532 '}']: r#314
[#533 'array']: s#346
[#533 'atomic']: s#95
[#533 'bool']: s#88
[#533 'f16']: s#90
[#533 'f32']: s#89
[#533 'i32']: s#91
[#533 'mat2x2']: s#100
[#533 'mat2x3']: s#101
[#533 'mat2x4']: s#102
[#533 'mat3x2']: s#103
[#533 'mat3x3']: s#104
[#533 'mat3x4']: s#105
[#533 'mat4x2']: s#106
[#533 'mat4x3']: s#107
[#533 'mat4x4']: s#108
[#533 'ptr']: s#93
[#533 'sampler']: s#125
[#533 'sampler_comparison']: s#126
[#533 'texture_1d']: s#132
[#533 'texture_2d']: s#133
[#533 'texture_2d_array']: s#134
[#533 'texture_3d']: s#135
[#533 'texture_cube']: s#136
[#533 'texture_cube_array']: s#137
[#533 'texture_depth_2d']: s#127
[#533 'texture_depth_2d_array']: s#128
[#533 'texture_depth_cube']: s#129
[#533 'texture_depth_cube_array']: s#130
[#533 'texture_depth_multisampled_2d']: s#131
[#533 'texture_multisampled_2d']: s#138
[#533 'texture_storage_1d']: s#139
[#533 'texture_storage_2d']: s#140
[#533 'texture_storage_2d_array']: s#141
[#533 'texture_storage_3d']: s#142
[#533 'u32']: s#92
[#533 'vec2']: s#97
[#533 'vec3']: s#98
[#533 'vec4']: s#99
[#533 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#534 /\u200B_template_args_end/]: s#485
[#535 'read']: s#537
[#535 'read_write']: s#539
[#535 'write']: s#538
[#536 /\u200B_template_args_end/]: r#315
[#537 /\u200B_template_args_end/]: r#316
[#538 /\u200B_template_args_end/]: r#317
[#539 /\u200B_template_args_end/]: r#318
[#540 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#319
[#541 ',']: r#320
[#541 '}']: r#320
[#542 ';']: r#321
[#542 '@']: r#321
[#542 'alias']: r#321
[#542 'const']: r#321
[#542 'const_assert']: r#321
[#542 'fn']: r#321
[#542 'override']: r#321
[#542 'struct']: r#321
[#542 'var']: r#321
[#542 EndOfText]: r#321
[#543 '{']: r#322
[#544 '@']: s#30
[#545 ')']: r#323
[#545 ',']: r#323
[#546 ')']: r#324
[#546 ',']: r#324
[#547 ')']: r#325
[#548 ')']: r#326
[#549 'array']: s#346
[#549 'atomic']: s#95
[#549 'bool']: s#88
[#549 'f16']: s#90
[#549 'f32']: s#89
[#549 'i32']: s#91
[#549 'mat2x2']: s#100
[#549 'mat2x3']: s#101
[#549 'mat2x4']: s#102
[#549 'mat3x2']: s#103
[#549 'mat3x3']: s#104
[#549 'mat3x4']: s#105
[#549 'mat4x2']: s#106
[#549 'mat4x3']: s#107
[#549 'mat4x4']: s#108
[#549 'ptr']: s#93
[#549 'sampler']: s#125
[#549 'sampler_comparison']: s#126
[#549 'texture_1d']: s#132
[#549 'texture_2d']: s#133
[#549 'texture_2d_array']: s#134
[#549 'texture_3d']: s#135
[#549 'texture_cube']: s#136
[#549 'texture_cube_array']: s#137
[#549 'texture_depth_2d']: s#127
[#549 'texture_depth_2d_array']: s#128
[#549 'texture_depth_cube']: s#129
[#549 'texture_depth_cube_array']: s#130
[#549 'texture_depth_multisampled_2d']: s#131
[#549 'texture_multisampled_2d']: s#138
[#549 'texture_storage_1d']: s#139
[#549 'texture_storage_2d']: s#140
[#549 'texture_storage_2d_array']: s#141
[#549 'texture_storage_3d']: s#142
[#549 'u32']: s#92
[#549 'vec2']: s#97
[#549 'vec3']: s#98
[#549 'vec4']: s#99
[#549 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#550 ';']: r#327
[#551 ';']: r#328
[#552 '!']: s#62
[#552 '&']: s#65
[#552 '(']: s#77
[#552 '*']: s#64
[#552 '-']: s#61
[#552 'array']: s#81
[#552 'atomic']: s#95
[#552 'bitcast']: s#71
[#552 'bool']: s#88
[#552 'f16']: s#90
[#552 'f32']: s#89
[#552 'false']: s#87
[#552 'i32']: s#91
[#552 'mat2x2']: s#100
[#552 'mat2x3']: s#101
[#552 'mat2x4']: s#102
[#552 'mat3x2']: s#103
[#552 'mat3x3']: s#104
[#552 'mat3x4']: s#105
[#552 'mat4x2']: s#106
[#552 'mat4x3']: s#107
[#552 'mat4x4']: s#108
[#552 'ptr']: s#93
[#552 'sampler']: s#125
[#552 'sampler_comparison']: s#126
[#552 'texture_1d']: s#132
[#552 'texture_2d']: s#133
[#552 'texture_2d_array']: s#134
[#552 'texture_3d']: s#135
[#552 'texture_cube']: s#136
[#552 'texture_cube_array']: s#137
[#552 'texture_depth_2d']: s#127
[#552 'texture_depth_2d_array']: s#128
[#552 'texture_depth_cube']: s#129
[#552 'texture_depth_cube_array']: s#130
[#552 'texture_depth_multisampled_2d']: s#131
[#552 'texture_multisampled_2d']: s#138
[#552 'texture_storage_1d']: s#139
[#552 'texture_storage_2d']: s#140
[#552 'texture_storage_2d_array']: s#141
[#552 'texture_storage_3d']: s#142
[#552 'true']: s#86
[#552 'u32']: s#92
[#552 'vec2']: s#97
[#552 'vec3']: s#98
[#552 'vec4']: s#99
[#552 '~']: s#63
[#552 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#552 /0[fh]/]: s#112
[#552 /0[iu]?/]: s#109
[#552 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#552 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#552 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#552 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#552 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#552 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#552 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#552 /[1-9][0-9]*[fh]/]: s#113
[#552 /[1-9][0-9]*[iu]?/]: s#110
[#553 '{']: s#171
[#554 'continuing']: r#329
[#554 '}']: r#329
[#555 '}']: s#593
[#556 '}']: r#330
[#557 '{']: s#592
[#558 '}']: s#590
[#559 '}']: r#331
[#560 'case']: s#563
[#560 'default']: s#564
[#561 'case']: r#332
[#561 'default']: r#332
[#561 '}']: r#332
[#562 'case']: r#333
[#562 'default']: r#333
[#562 '}']: r#333
[#563 '!']: s#62
[#563 '&']: s#65
[#563 '(']: s#77
[#563 '*']: s#64
[#563 '-']: s#61
[#563 'array']: s#81
[#563 'atomic']: s#95
[#563 'bitcast']: s#71
[#563 'bool']: s#88
[#563 'default']: s#587
[#563 'f16']: s#90
[#563 'f32']: s#89
[#563 'false']: s#87
[#563 'i32']: s#91
[#563 'mat2x2']: s#100
[#563 'mat2x3']: s#101
[#563 'mat2x4']: s#102
[#563 'mat3x2']: s#103
[#563 'mat3x3']: s#104
[#563 'mat3x4']: s#105
[#563 'mat4x2']: s#106
[#563 'mat4x3']: s#107
[#563 'mat4x4']: s#108
[#563 'ptr']: s#93
[#563 'sampler']: s#125
[#563 'sampler_comparison']: s#126
[#563 'texture_1d']: s#132
[#563 'texture_2d']: s#133
[#563 'texture_2d_array']: s#134
[#563 'texture_3d']: s#135
[#563 'texture_cube']: s#136
[#563 'texture_cube_array']: s#137
[#563 'texture_depth_2d']: s#127
[#563 'texture_depth_2d_array']: s#128
[#563 'texture_depth_cube']: s#129
[#563 'texture_depth_cube_array']: s#130
[#563 'texture_depth_multisampled_2d']: s#131
[#563 'texture_multisampled_2d']: s#138
[#563 'texture_storage_1d']: s#139
[#563 'texture_storage_2d']: s#140
[#563 'texture_storage_2d_array']: s#141
[#563 'texture_storage_3d']: s#142
[#563 'true']: s#86
[#563 'u32']: s#92
[#563 'vec2']: s#97
[#563 'vec3']: s#98
[#563 'vec4']: s#99
[#563 '~']: s#63
[#563 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#563 /0[fh]/]: s#112
[#563 /0[iu]?/]: s#109
[#563 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#563 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#563 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#563 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#563 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#563 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#563 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#563 /[1-9][0-9]*[fh]/]: s#113
[#563 /[1-9][0-9]*[iu]?/]: s#110
[#564 ':']: s#584
[#565 '&']: r#334
[#565 '(']: r#334
[#565 '*']: r#334
[#565 ';']: r#334
[#565 '_']: r#334
[#565 'array']: r#334
[#565 'atomic']: r#334
[#565 'bool']: r#334
[#565 'break']: r#334
[#565 'const']: r#334
[#565 'const_assert']: r#334
[#565 'continue']: r#334
[#565 'continuing']: r#334
[#565 'discard']: r#334
[#565 'f16']: r#334
[#565 'f32']: r#334
[#565 'for']: r#334
[#565 'i32']: r#334
[#565 'if']: r#334
[#565 'let']: r#334
[#565 'loop']: r#334
[#565 'mat2x2']: r#334
[#565 'mat2x3']: r#334
[#565 'mat2x4']: r#334
[#565 'mat3x2']: r#334
[#565 'mat3x3']: r#334
[#565 'mat3x4']: r#334
[#565 'mat4x2']: r#334
[#565 'mat4x3']: r#334
[#565 'mat4x4']: r#334
[#565 'ptr']: r#334
[#565 'return']: r#334
[#565 'sampler']: r#334
[#565 'sampler_comparison']: r#334
[#565 'switch']: r#334
[#565 'texture_1d']: r#334
[#565 'texture_2d']: r#334
[#565 'texture_2d_array']: r#334
[#565 'texture_3d']: r#334
[#565 'texture_cube']: r#334
[#565 'texture_cube_array']: r#334
[#565 'texture_depth_2d']: r#334
[#565 'texture_depth_2d_array']: r#334
[#565 'texture_depth_cube']: r#334
[#565 'texture_depth_cube_array']: r#334
[#565 'texture_depth_multisampled_2d']: r#334
[#565 'texture_multisampled_2d']: r#334
[#565 'texture_storage_1d']: r#334
[#565 'texture_storage_2d']: r#334
[#565 'texture_storage_2d_array']: r#334
[#565 'texture_storage_3d']: r#334
[#565 'u32']: r#334
[#565 'var']: r#334
[#565 'vec2']: r#334
[#565 'vec3']: r#334
[#565 'vec4']: r#334
[#565 'while']: r#334
[#565 '{']: r#334
[#565 '}']: r#334
[#565 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#334
[#566 '{']: s#171
[#567 /\u200B_template_args_end/]: s#485
[#568 ',']: s#580
[#569 /\u200B_template_args_end/]: r#335
[#570 '+']: s#202
[#570 '-']: s#203
[#570 /\u200B_template_args_end/]: r#336
[#571 /\u200B_template_args_end/]: r#337
[#572 '%']: r#29
[#572 '&']: r#26
[#572 '*']: r#29
[#572 '+']: r#29
[#572 '-']: r#29
[#572 '/']: r#29
[#572 '^']: r#28
[#572 '|']: r#27
[#572 /\u200B_template_args_end/]: r#29
[#573 '(']: r#338
[#573 ')']: r#338
[#573 ',']: r#338
[#573 ';']: r#338
[#573 '=']: r#338
[#573 '{']: r#338
[#573 '}']: r#338
[#573 /\u200B_template_args_end/]: r#338
[#574 '!=']: r#339
[#574 '%']: r#339
[#574 '&&']: r#339
[#574 '&']: r#339
[#574 ')']: r#339
[#574 '*']: r#339
[#574 '+']: r#339
[#574 ',']: r#339
[#574 '-']: r#339
[#574 '.']: r#339
[#574 '/']: r#339
[#574 ':']: r#339
[#574 ';']: r#339
[#574 '==']: r#339
[#574 '[']: r#339
[#574 ']']: r#339
[#574 '^']: r#339
[#574 '{']: r#339
[#574 '|']: r#339
[#574 '||']: r#339
[#574 /\u200B_greater_than/]: r#339
[#574 /\u200B_greater_than_equal/]: r#339
[#574 /\u200B_less_than/]: r#339
[#574 /\u200B_less_than_equal/]: r#339
[#574 /\u200B_shift_left/]: r#339
[#574 /\u200B_shift_right/]: r#339
[#574 /\u200B_template_args_end/]: r#339
[#575 '@']: r#340
[#575 'array']: r#340
[#575 'atomic']: r#340
[#575 'bool']: r#340
[#575 'f16']: r#340
[#575 'f32']: r#340
[#575 'fn']: r#340
[#575 'i32']: r#340
[#575 'mat2x2']: r#340
[#575 'mat2x3']: r#340
[#575 'mat2x4']: r#340
[#575 'mat3x2']: r#340
[#575 'mat3x3']: r#340
[#575 'mat3x4']: r#340
[#575 'mat4x2']: r#340
[#575 'mat4x3']: r#340
[#575 'mat4x4']: r#340
[#575 'override']: r#340
[#575 'ptr']: r#340
[#575 'sampler']: r#340
[#575 'sampler_comparison']: r#340
[#575 'texture_1d']: r#340
[#575 'texture_2d']: r#340
[#575 'texture_2d_array']: r#340
[#575 'texture_3d']: r#340
[#575 'texture_cube']: r#340
[#575 'texture_cube_array']: r#340
[#575 'texture_depth_2d']: r#340
[#575 'texture_depth_2d_array']: r#340
[#575 'texture_depth_cube']: r#340
[#575 'texture_depth_cube_array']: r#340
[#575 'texture_depth_multisampled_2d']: r#340
[#575 'texture_multisampled_2d']: r#340
[#575 'texture_storage_1d']: r#340
[#575 'texture_storage_2d']: r#340
[#575 'texture_storage_2d_array']: r#340
[#575 'texture_storage_3d']: r#340
[#575 'u32']: r#340
[#575 'var']: r#340
[#575 'vec2']: r#340
[#575 'vec3']: r#340
[#575 'vec4']: r#340
[#575 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#340
[#576 '!']: s#62
[#576 '&']: s#65
[#576 '(']: s#77
[#576 ')']: r#271
[#576 '*']: s#64
[#576 '-']: s#61
[#576 'array']: s#81
[#576 'atomic']: s#95
[#576 'bitcast']: s#71
[#576 'bool']: s#88
[#576 'f16']: s#90
[#576 'f32']: s#89
[#576 'false']: s#87
[#576 'i32']: s#91
[#576 'mat2x2']: s#100
[#576 'mat2x3']: s#101
[#576 'mat2x4']: s#102
[#576 'mat3x2']: s#103
[#576 'mat3x3']: s#104
[#576 'mat3x4']: s#105
[#576 'mat4x2']: s#106
[#576 'mat4x3']: s#107
[#576 'mat4x4']: s#108
[#576 'ptr']: s#93
[#576 'sampler']: s#125
[#576 'sampler_comparison']: s#126
[#576 'texture_1d']: s#132
[#576 'texture_2d']: s#133
[#576 'texture_2d_array']: s#134
[#576 'texture_3d']: s#135
[#576 'texture_cube']: s#136
[#576 'texture_cube_array']: s#137
[#576 'texture_depth_2d']: s#127
[#576 'texture_depth_2d_array']: s#128
[#576 'texture_depth_cube']: s#129
[#576 'texture_depth_cube_array']: s#130
[#576 'texture_depth_multisampled_2d']: s#131
[#576 'texture_multisampled_2d']: s#138
[#576 'texture_storage_1d']: s#139
[#576 'texture_storage_2d']: s#140
[#576 'texture_storage_2d_array']: s#141
[#576 'texture_storage_3d']: s#142
[#576 'true']: s#86
[#576 'u32']: s#92
[#576 'vec2']: s#97
[#576 'vec3']: s#98
[#576 'vec4']: s#99
[#576 '~']: s#63
[#576 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#576 /0[fh]/]: s#112
[#576 /0[iu]?/]: s#109
[#576 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#576 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#576 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#576 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#576 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#576 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#576 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#576 /[1-9][0-9]*[fh]/]: s#113
[#576 /[1-9][0-9]*[iu]?/]: s#110
[#577 '@']: r#341
[#577 'array']: r#341
[#577 'atomic']: r#341
[#577 'bool']: r#341
[#577 'f16']: r#341
[#577 'f32']: r#341
[#577 'fn']: r#341
[#577 'i32']: r#341
[#577 'mat2x2']: r#341
[#577 'mat2x3']: r#341
[#577 'mat2x4']: r#341
[#577 'mat3x2']: r#341
[#577 'mat3x3']: r#341
[#577 'mat3x4']: r#341
[#577 'mat4x2']: r#341
[#577 'mat4x3']: r#341
[#577 'mat4x4']: r#341
[#577 'override']: r#341
[#577 'ptr']: r#341
[#577 'sampler']: r#341
[#577 'sampler_comparison']: r#341
[#577 'texture_1d']: r#341
[#577 'texture_2d']: r#341
[#577 'texture_2d_array']: r#341
[#577 'texture_3d']: r#341
[#577 'texture_cube']: r#341
[#577 'texture_cube_array']: r#341
[#577 'texture_depth_2d']: r#341
[#577 'texture_depth_2d_array']: r#341
[#577 'texture_depth_cube']: r#341
[#577 'texture_depth_cube_array']: r#341
[#577 'texture_depth_multisampled_2d']: r#341
[#577 'texture_multisampled_2d']: r#341
[#577 'texture_storage_1d']: r#341
[#577 'texture_storage_2d']: r#341
[#577 'texture_storage_2d_array']: r#341
[#577 'texture_storage_3d']: r#341
[#577 'u32']: r#341
[#577 'var']: r#341
[#577 'vec2']: r#341
[#577 'vec3']: r#341
[#577 'vec4']: r#341
[#577 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#341
[#578 ',']: s#467
[#579 /\u200B_template_args_end/]: s#485
[#580 'read']: s#537
[#580 'read_write']: s#539
[#580 'write']: s#538
[#581 '(']: r#342
[#581 ')']: r#342
[#581 ',']: r#342
[#581 ';']: r#342
[#581 '=']: r#342
[#581 '{']: r#342
[#581 '}']: r#342
[#581 /\u200B_template_args_end/]: r#342
[#582 '&']: r#343
[#582 '(']: r#343
[#582 '*']: r#343
[#582 ';']: r#343
[#582 '_']: r#343
[#582 'array']: r#343
[#582 'atomic']: r#343
[#582 'bool']: r#343
[#582 'break']: r#343
[#582 'const']: r#343
[#582 'const_assert']: r#343
[#582 'continue']: r#343
[#582 'continuing']: r#343
[#582 'discard']: r#343
[#582 'else']: r#343
[#582 'f16']: r#343
[#582 'f32']: r#343
[#582 'for']: r#343
[#582 'i32']: r#343
[#582 'if']: r#343
[#582 'let']: r#343
[#582 'loop']: r#343
[#582 'mat2x2']: r#343
[#582 'mat2x3']: r#343
[#582 'mat2x4']: r#343
[#582 'mat3x2']: r#343
[#582 'mat3x3']: r#343
[#582 'mat3x4']: r#343
[#582 'mat4x2']: r#343
[#582 'mat4x3']: r#343
[#582 'mat4x4']: r#343
[#582 'ptr']: r#343
[#582 'return']: r#343
[#582 'sampler']: r#343
[#582 'sampler_comparison']: r#343
[#582 'switch']: r#343
[#582 'texture_1d']: r#343
[#582 'texture_2d']: r#343
[#582 'texture_2d_array']: r#343
[#582 'texture_3d']: r#343
[#582 'texture_cube']: r#343
[#582 'texture_cube_array']: r#343
[#582 'texture_depth_2d']: r#343
[#582 'texture_depth_2d_array']: r#343
[#582 'texture_depth_cube']: r#343
[#582 'texture_depth_cube_array']: r#343
[#582 'texture_depth_multisampled_2d']: r#343
[#582 'texture_multisampled_2d']: r#343
[#582 'texture_storage_1d']: r#343
[#582 'texture_storage_2d']: r#343
[#582 'texture_storage_2d_array']: r#343
[#582 'texture_storage_3d']: r#343
[#582 'u32']: r#343
[#582 'var']: r#343
[#582 'vec2']: r#343
[#582 'vec3']: r#343
[#582 'vec4']: r#343
[#582 'while']: r#343
[#582 '{']: r#343
[#582 '}']: r#343
[#582 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#343
[#583 '{']: s#171
[#584 '{']: r#344
[#585 ':']: s#612
[#586 ',']: s#610
[#587 ',']: r#345
[#587 ':']: r#345
[#587 '{']: r#345
[#588 ',']: r#346
[#588 ':']: r#346
[#588 '{']: r#346
[#589 '}']: r#347
[#590 '&']: r#348
[#590 '(']: r#348
[#590 '*']: r#348
[#590 ';']: r#348
[#590 '_']: r#348
[#590 'array']: r#348
[#590 'atomic']: r#348
[#590 'bool']: r#348
[#590 'break']: r#348
[#590 'const']: r#348
[#590 'const_assert']: r#348
[#590 'continue']: r#348
[#590 'continuing']: r#348
[#590 'discard']: r#348
[#590 'f16']: r#348
[#590 'f32']: r#348
[#590 'for']: r#348
[#590 'i32']: r#348
[#590 'if']: r#348
[#590 'let']: r#348
[#590 'loop']: r#348
[#590 'mat2x2']: r#348
[#590 'mat2x3']: r#348
[#590 'mat2x4']: r#348
[#590 'mat3x2']: r#348
[#590 'mat3x3']: r#348
[#590 'mat3x4']: r#348
[#590 'mat4x2']: r#348
[#590 'mat4x3']: r#348
[#590 'mat4x4']: r#348
[#590 'ptr']: r#348
[#590 'return']: r#348
[#590 'sampler']: r#348
[#590 'sampler_comparison']: r#348
[#590 'switch']: r#348
[#590 'texture_1d']: r#348
[#590 'texture_2d']: r#348
[#590 'texture_2d_array']: r#348
[#590 'texture_3d']: r#348
[#590 'texture_cube']: r#348
[#590 'texture_cube_array']: r#348
[#590 'texture_depth_2d']: r#348
[#590 'texture_depth_2d_array']: r#348
[#590 'texture_depth_cube']: r#348
[#590 'texture_depth_cube_array']: r#348
[#590 'texture_depth_multisampled_2d']: r#348
[#590 'texture_multisampled_2d']: r#348
[#590 'texture_storage_1d']: r#348
[#590 'texture_storage_2d']: r#348
[#590 'texture_storage_2d_array']: r#348
[#590 'texture_storage_3d']: r#348
[#590 'u32']: r#348
[#590 'var']: r#348
[#590 'vec2']: r#348
[#590 'vec3']: r#348
[#590 'vec4']: r#348
[#590 'while']: r#348
[#590 '{']: r#348
[#590 '}']: r#348
[#590 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#348
[#591 '}']: r#349
[#592 '&']: s#334
[#592 '(']: s#335
[#592 '*']: s#333
[#592 ';']: s#298
[#592 '_']: s#331
[#592 'array']: s#81
[#592 'atomic']: s#95
[#592 'bool']: s#88
[#592 'break']: s#323
[#592 'const']: s#322
[#592 'const_assert']: s#25
[#592 'continue']: s#324
[#592 'discard']: s#309
[#592 'f16']: s#90
[#592 'f32']: s#89
[#592 'for']: s#317
[#592 'i32']: s#91
[#592 'if']: s#328
[#592 'let']: s#321
[#592 'loop']: s#316
[#592 'mat2x2']: s#100
[#592 'mat2x3']: s#101
[#592 'mat2x4']: s#102
[#592 'mat3x2']: s#103
[#592 'mat3x3']: s#104
[#592 'mat3x4']: s#105
[#592 'mat4x2']: s#106
[#592 'mat4x3']: s#107
[#592 'mat4x4']: s#108
[#592 'ptr']: s#93
[#592 'return']: s#313
[#592 'sampler']: s#125
[#592 'sampler_comparison']: s#126
[#592 'switch']: s#315
[#592 'texture_1d']: s#132
[#592 'texture_2d']: s#133
[#592 'texture_2d_array']: s#134
[#592 'texture_3d']: s#135
[#592 'texture_cube']: s#136
[#592 'texture_cube_array']: s#137
[#592 'texture_depth_2d']: s#127
[#592 'texture_depth_2d_array']: s#128
[#592 'texture_depth_cube']: s#129
[#592 'texture_depth_cube_array']: s#130
[#592 'texture_depth_multisampled_2d']: s#131
[#592 'texture_multisampled_2d']: s#138
[#592 'texture_storage_1d']: s#139
[#592 'texture_storage_2d']: s#140
[#592 'texture_storage_2d_array']: s#141
[#592 'texture_storage_3d']: s#142
[#592 'u32']: s#92
[#592 'var']: s#151
[#592 'vec2']: s#97
[#592 'vec3']: s#98
[#592 'vec4']: s#99
[#592 'while']: s#318
[#592 '{']: s#171
[#592 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#593 '&']: r#350
[#593 '(']: r#350
[#593 '*']: r#350
[#593 ';']: r#350
[#593 '_']: r#350
[#593 'array']: r#350
[#593 'atomic']: r#350
[#593 'bool']: r#350
[#593 'break']: r#350
[#593 'const']: r#350
[#593 'const_assert']: r#350
[#593 'continue']: r#350
[#593 'continuing']: r#350
[#593 'discard']: r#350
[#593 'f16']: r#350
[#593 'f32']: r#350
[#593 'for']: r#350
[#593 'i32']: r#350
[#593 'if']: r#350
[#593 'let']: r#350
[#593 'loop']: r#350
[#593 'mat2x2']: r#350
[#593 'mat2x3']: r#350
[#593 'mat2x4']: r#350
[#593 'mat3x2']: r#350
[#593 'mat3x3']: r#350
[#593 'mat3x4']: r#350
[#593 'mat4x2']: r#350
[#593 'mat4x3']: r#350
[#593 'mat4x4']: r#350
[#593 'ptr']: r#350
[#593 'return']: r#350
[#593 'sampler']: r#350
[#593 'sampler_comparison']: r#350
[#593 'switch']: r#350
[#593 'texture_1d']: r#350
[#593 'texture_2d']: r#350
[#593 'texture_2d_array']: r#350
[#593 'texture_3d']: r#350
[#593 'texture_cube']: r#350
[#593 'texture_cube_array']: r#350
[#593 'texture_depth_2d']: r#350
[#593 'texture_depth_2d_array']: r#350
[#593 'texture_depth_cube']: r#350
[#593 'texture_depth_cube_array']: r#350
[#593 'texture_depth_multisampled_2d']: r#350
[#593 'texture_multisampled_2d']: r#350
[#593 'texture_storage_1d']: r#350
[#593 'texture_storage_2d']: r#350
[#593 'texture_storage_2d_array']: r#350
[#593 'texture_storage_3d']: r#350
[#593 'u32']: r#350
[#593 'var']: r#350
[#593 'vec2']: r#350
[#593 'vec3']: r#350
[#593 'vec4']: r#350
[#593 'while']: r#350
[#593 '{']: r#350
[#593 '}']: r#350
[#593 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#350
[#594 '&']: r#351
[#594 '(']: r#351
[#594 '*']: r#351
[#594 ';']: r#351
[#594 '_']: r#351
[#594 'array']: r#351
[#594 'atomic']: r#351
[#594 'bool']: r#351
[#594 'break']: r#351
[#594 'const']: r#351
[#594 'const_assert']: r#351
[#594 'continue']: r#351
[#594 'continuing']: r#351
[#594 'discard']: r#351
[#594 'f16']: r#351
[#594 'f32']: r#351
[#594 'for']: r#351
[#594 'i32']: r#351
[#594 'if']: r#351
[#594 'let']: r#351
[#594 'loop']: r#351
[#594 'mat2x2']: r#351
[#594 'mat2x3']: r#351
[#594 'mat2x4']: r#351
[#594 'mat3x2']: r#351
[#594 'mat3x3']: r#351
[#594 'mat3x4']: r#351
[#594 'mat4x2']: r#351
[#594 'mat4x3']: r#351
[#594 'mat4x4']: r#351
[#594 'ptr']: r#351
[#594 'return']: r#351
[#594 'sampler']: r#351
[#594 'sampler_comparison']: r#351
[#594 'switch']: r#351
[#594 'texture_1d']: r#351
[#594 'texture_2d']: r#351
[#594 'texture_2d_array']: r#351
[#594 'texture_3d']: r#351
[#594 'texture_cube']: r#351
[#594 'texture_cube_array']: r#351
[#594 'texture_depth_2d']: r#351
[#594 'texture_depth_2d_array']: r#351
[#594 'texture_depth_cube']: r#351
[#594 'texture_depth_cube_array']: r#351
[#594 'texture_depth_multisampled_2d']: r#351
[#594 'texture_multisampled_2d']: r#351
[#594 'texture_storage_1d']: r#351
[#594 'texture_storage_2d']: r#351
[#594 'texture_storage_2d_array']: r#351
[#594 'texture_storage_3d']: r#351
[#594 'u32']: r#351
[#594 'var']: r#351
[#594 'vec2']: r#351
[#594 'vec3']: r#351
[#594 'vec4']: r#351
[#594 'while']: r#351
[#594 '{']: r#351
[#594 '}']: r#351
[#594 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#351
[#595 ';']: s#603
[#596 ';']: r#352
[#597 ')']: r#353
[#597 ',']: r#353
[#598 'array']: s#346
[#598 'atomic']: s#95
[#598 'bool']: s#88
[#598 'f16']: s#90
[#598 'f32']: s#89
[#598 'i32']: s#91
[#598 'mat2x2']: s#100
[#598 'mat2x3']: s#101
[#598 'mat2x4']: s#102
[#598 'mat3x2']: s#103
[#598 'mat3x3']: s#104
[#598 'mat3x4']: s#105
[#598 'mat4x2']: s#106
[#598 'mat4x3']: s#107
[#598 'mat4x4']: s#108
[#598 'ptr']: s#93
[#598 'sampler']: s#125
[#598 'sampler_comparison']: s#126
[#598 'texture_1d']: s#132
[#598 'texture_2d']: s#133
[#598 'texture_2d_array']: s#134
[#598 'texture_3d']: s#135
[#598 'texture_cube']: s#136
[#598 'texture_cube_array']: s#137
[#598 'texture_depth_2d']: s#127
[#598 'texture_depth_2d_array']: s#128
[#598 'texture_depth_cube']: s#129
[#598 'texture_depth_cube_array']: s#130
[#598 'texture_depth_multisampled_2d']: s#131
[#598 'texture_multisampled_2d']: s#138
[#598 'texture_storage_1d']: s#139
[#598 'texture_storage_2d']: s#140
[#598 'texture_storage_2d_array']: s#141
[#598 'texture_storage_3d']: s#142
[#598 'u32']: s#92
[#598 'vec2']: s#97
[#598 'vec3']: s#98
[#598 'vec4']: s#99
[#598 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#599 'array']: r#354
[#599 'atomic']: r#354
[#599 'bool']: r#354
[#599 'f16']: r#354
[#599 'f32']: r#354
[#599 'i32']: r#354
[#599 'mat2x2']: r#354
[#599 'mat2x3']: r#354
[#599 'mat2x4']: r#354
[#599 'mat3x2']: r#354
[#599 'mat3x3']: r#354
[#599 'mat3x4']: r#354
[#599 'mat4x2']: r#354
[#599 'mat4x3']: r#354
[#599 'mat4x4']: r#354
[#599 'ptr']: r#354
[#599 'sampler']: r#354
[#599 'sampler_comparison']: r#354
[#599 'texture_1d']: r#354
[#599 'texture_2d']: r#354
[#599 'texture_2d_array']: r#354
[#599 'texture_3d']: r#354
[#599 'texture_cube']: r#354
[#599 'texture_cube_array']: r#354
[#599 'texture_depth_2d']: r#354
[#599 'texture_depth_2d_array']: r#354
[#599 'texture_depth_cube']: r#354
[#599 'texture_depth_cube_array']: r#354
[#599 'texture_depth_multisampled_2d']: r#354
[#599 'texture_multisampled_2d']: r#354
[#599 'texture_storage_1d']: r#354
[#599 'texture_storage_2d']: r#354
[#599 'texture_storage_2d_array']: r#354
[#599 'texture_storage_3d']: r#354
[#599 'u32']: r#354
[#599 'vec2']: r#354
[#599 'vec3']: r#354
[#599 'vec4']: r#354
[#599 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#354
[#600 '@']: s#30
[#601 'array']: r#355
[#601 'atomic']: r#355
[#601 'bool']: r#355
[#601 'f16']: r#355
[#601 'f32']: r#355
[#601 'i32']: r#355
[#601 'mat2x2']: r#355
[#601 'mat2x3']: r#355
[#601 'mat2x4']: r#355
[#601 'mat3x2']: r#355
[#601 'mat3x3']: r#355
[#601 'mat3x4']: r#355
[#601 'mat4x2']: r#355
[#601 'mat4x3']: r#355
[#601 'mat4x4']: r#355
[#601 'ptr']: r#355
[#601 'sampler']: r#355
[#601 'sampler_comparison']: r#355
[#601 'texture_1d']: r#355
[#601 'texture_2d']: r#355
[#601 'texture_2d_array']: r#355
[#601 'texture_3d']: r#355
[#601 'texture_cube']: r#355
[#601 'texture_cube_array']: r#355
[#601 'texture_depth_2d']: r#355
[#601 'texture_depth_2d_array']: r#355
[#601 'texture_depth_cube']: r#355
[#601 'texture_depth_cube_array']: r#355
[#601 'texture_depth_multisampled_2d']: r#355
[#601 'texture_multisampled_2d']: r#355
[#601 'texture_storage_1d']: r#355
[#601 'texture_storage_2d']: r#355
[#601 'texture_storage_2d_array']: r#355
[#601 'texture_storage_3d']: r#355
[#601 'u32']: r#355
[#601 'vec2']: r#355
[#601 'vec3']: r#355
[#601 'vec4']: r#355
[#601 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#355
[#602 '{']: r#356
[#603 '&']: s#334
[#603 '(']: s#335
[#603 '*']: s#333
[#603 '_']: s#331
[#603 'array']: s#81
[#603 'atomic']: s#95
[#603 'bool']: s#88
[#603 'f16']: s#90
[#603 'f32']: s#89
[#603 'i32']: s#91
[#603 'mat2x2']: s#100
[#603 'mat2x3']: s#101
[#603 'mat2x4']: s#102
[#603 'mat3x2']: s#103
[#603 'mat3x3']: s#104
[#603 'mat3x4']: s#105
[#603 'mat4x2']: s#106
[#603 'mat4x3']: s#107
[#603 'mat4x4']: s#108
[#603 'ptr']: s#93
[#603 'sampler']: s#125
[#603 'sampler_comparison']: s#126
[#603 'texture_1d']: s#132
[#603 'texture_2d']: s#133
[#603 'texture_2d_array']: s#134
[#603 'texture_3d']: s#135
[#603 'texture_cube']: s#136
[#603 'texture_cube_array']: s#137
[#603 'texture_depth_2d']: s#127
[#603 'texture_depth_2d_array']: s#128
[#603 'texture_depth_cube']: s#129
[#603 'texture_depth_cube_array']: s#130
[#603 'texture_depth_multisampled_2d']: s#131
[#603 'texture_multisampled_2d']: s#138
[#603 'texture_storage_1d']: s#139
[#603 'texture_storage_2d']: s#140
[#603 'texture_storage_2d_array']: s#141
[#603 'texture_storage_3d']: s#142
[#603 'u32']: s#92
[#603 'vec2']: s#97
[#603 'vec3']: s#98
[#603 'vec4']: s#99
[#603 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#604 'break']: s#625
[#605 'break']: r#357
[#605 '}']: r#357
[#606 '&']: s#334
[#606 '(']: s#335
[#606 '*']: s#333
[#606 ';']: s#298
[#606 '_']: s#331
[#606 'array']: s#81
[#606 'atomic']: s#95
[#606 'bool']: s#88
[#606 'break']: s#323
[#606 'const']: s#322
[#606 'const_assert']: s#25
[#606 'continue']: s#324
[#606 'discard']: s#309
[#606 'f16']: s#90
[#606 'f32']: s#89
[#606 'for']: s#317
[#606 'i32']: s#91
[#606 'if']: s#328
[#606 'let']: s#321
[#606 'loop']: s#316
[#606 'mat2x2']: s#100
[#606 'mat2x3']: s#101
[#606 'mat2x4']: s#102
[#606 'mat3x2']: s#103
[#606 'mat3x3']: s#104
[#606 'mat3x4']: s#105
[#606 'mat4x2']: s#106
[#606 'mat4x3']: s#107
[#606 'mat4x4']: s#108
[#606 'ptr']: s#93
[#606 'return']: s#313
[#606 'sampler']: s#125
[#606 'sampler_comparison']: s#126
[#606 'switch']: s#315
[#606 'texture_1d']: s#132
[#606 'texture_2d']: s#133
[#606 'texture_2d_array']: s#134
[#606 'texture_3d']: s#135
[#606 'texture_cube']: s#136
[#606 'texture_cube_array']: s#137
[#606 'texture_depth_2d']: s#127
[#606 'texture_depth_2d_array']: s#128
[#606 'texture_depth_cube']: s#129
[#606 'texture_depth_cube_array']: s#130
[#606 'texture_depth_multisampled_2d']: s#131
[#606 'texture_multisampled_2d']: s#138
[#606 'texture_storage_1d']: s#139
[#606 'texture_storage_2d']: s#140
[#606 'texture_storage_2d_array']: s#141
[#606 'texture_storage_3d']: s#142
[#606 'u32']: s#92
[#606 'var']: s#151
[#606 'vec2']: s#97
[#606 'vec3']: s#98
[#606 'vec4']: s#99
[#606 'while']: s#318
[#606 '{']: s#171
[#606 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#607 ',']: s#621
[#608 ',']: r#358
[#608 ':']: r#358
[#608 '{']: r#358
[#609 ',']: s#610
[#610 '!']: s#62
[#610 '&']: s#65
[#610 '(']: s#77
[#610 '*']: s#64
[#610 '-']: s#61
[#610 'array']: s#81
[#610 'atomic']: s#95
[#610 'bitcast']: s#71
[#610 'bool']: s#88
[#610 'default']: s#587
[#610 'f16']: s#90
[#610 'f32']: s#89
[#610 'false']: s#87
[#610 'i32']: s#91
[#610 'mat2x2']: s#100
[#610 'mat2x3']: s#101
[#610 'mat2x4']: s#102
[#610 'mat3x2']: s#103
[#610 'mat3x3']: s#104
[#610 'mat3x4']: s#105
[#610 'mat4x2']: s#106
[#610 'mat4x3']: s#107
[#610 'mat4x4']: s#108
[#610 'ptr']: s#93
[#610 'sampler']: s#125
[#610 'sampler_comparison']: s#126
[#610 'texture_1d']: s#132
[#610 'texture_2d']: s#133
[#610 'texture_2d_array']: s#134
[#610 'texture_3d']: s#135
[#610 'texture_cube']: s#136
[#610 'texture_cube_array']: s#137
[#610 'texture_depth_2d']: s#127
[#610 'texture_depth_2d_array']: s#128
[#610 'texture_depth_cube']: s#129
[#610 'texture_depth_cube_array']: s#130
[#610 'texture_depth_multisampled_2d']: s#131
[#610 'texture_multisampled_2d']: s#138
[#610 'texture_storage_1d']: s#139
[#610 'texture_storage_2d']: s#140
[#610 'texture_storage_2d_array']: s#141
[#610 'texture_storage_3d']: s#142
[#610 'true']: s#86
[#610 'u32']: s#92
[#610 'vec2']: s#97
[#610 'vec3']: s#98
[#610 'vec4']: s#99
[#610 '~']: s#63
[#610 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#610 /0[fh]/]: s#112
[#610 /0[iu]?/]: s#109
[#610 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#610 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#610 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#610 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#610 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#610 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#610 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#610 /[1-9][0-9]*[fh]/]: s#113
[#610 /[1-9][0-9]*[iu]?/]: s#110
[#611 '{']: s#171
[#612 '{']: r#359
[#613 'case']: r#360
[#613 'default']: r#360
[#613 '}']: r#360
[#614 /\u200B_template_args_end/]: r#361
[#615 '(']: r#362
[#615 ')']: r#362
[#615 ',']: r#362
[#615 ';']: r#362
[#615 '=']: r#362
[#615 '{']: r#362
[#615 '}']: r#362
[#615 /\u200B_template_args_end/]: r#362
[#616 '@']: r#363
[#616 'array']: r#363
[#616 'atomic']: r#363
[#616 'bool']: r#363
[#616 'f16']: r#363
[#616 'f32']: r#363
[#616 'fn']: r#363
[#616 'i32']: r#363
[#616 'mat2x2']: r#363
[#616 'mat2x3']: r#363
[#616 'mat2x4']: r#363
[#616 'mat3x2']: r#363
[#616 'mat3x3']: r#363
[#616 'mat3x4']: r#363
[#616 'mat4x2']: r#363
[#616 'mat4x3']: r#363
[#616 'mat4x4']: r#363
[#616 'override']: r#363
[#616 'ptr']: r#363
[#616 'sampler']: r#363
[#616 'sampler_comparison']: r#363
[#616 'texture_1d']: r#363
[#616 'texture_2d']: r#363
[#616 'texture_2d_array']: r#363
[#616 'texture_3d']: r#363
[#616 'texture_cube']: r#363
[#616 'texture_cube_array']: r#363
[#616 'texture_depth_2d']: r#363
[#616 'texture_depth_2d_array']: r#363
[#616 'texture_depth_cube']: r#363
[#616 'texture_depth_cube_array']: r#363
[#616 'texture_depth_multisampled_2d']: r#363
[#616 'texture_multisampled_2d']: r#363
[#616 'texture_storage_1d']: r#363
[#616 'texture_storage_2d']: r#363
[#616 'texture_storage_2d_array']: r#363
[#616 'texture_storage_3d']: r#363
[#616 'u32']: r#363
[#616 'var']: r#363
[#616 'vec2']: r#363
[#616 'vec3']: r#363
[#616 'vec4']: r#363
[#616 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#363
[#617 'case']: r#364
[#617 'default']: r#364
[#617 '}']: r#364
[#618 ',']: r#365
[#618 ':']: r#365
[#618 '{']: r#365
[#619 ',']: r#366
[#619 ':']: r#366
[#619 '{']: r#366
[#620 ':']: r#367
[#620 '{']: r#367
[#621 ':']: r#368
[#621 '{']: r#368
[#622 'break']: r#369
[#622 '}']: r#369
[#623 '}']: s#631
[#624 '}']: r#370
[#625 'if']: s#630
[#626 ')']: r#371
[#627 ')']: r#372
[#628 ')']: r#373
[#629 ')']: r#374
[#630 '!']: s#62
[#630 '&']: s#65
[#630 '(']: s#77
[#630 '*']: s#64
[#630 '-']: s#61
[#630 'array']: s#81
[#630 'atomic']: s#95
[#630 'bitcast']: s#71
[#630 'bool']: s#88
[#630 'f16']: s#90
[#630 'f32']: s#89
[#630 'false']: s#87
[#630 'i32']: s#91
[#630 'mat2x2']: s#100
[#630 'mat2x3']: s#101
[#630 'mat2x4']: s#102
[#630 'mat3x2']: s#103
[#630 'mat3x3']: s#104
[#630 'mat3x4']: s#105
[#630 'mat4x2']: s#106
[#630 'mat4x3']: s#107
[#630 'mat4x4']: s#108
[#630 'ptr']: s#93
[#630 'sampler']: s#125
[#630 'sampler_comparison']: s#126
[#630 'texture_1d']: s#132
[#630 'texture_2d']: s#133
[#630 'texture_2d_array']: s#134
[#630 'texture_3d']: s#135
[#630 'texture_cube']: s#136
[#630 'texture_cube_array']: s#137
[#630 'texture_depth_2d']: s#127
[#630 'texture_depth_2d_array']: s#128
[#630 'texture_depth_cube']: s#129
[#630 'texture_depth_cube_array']: s#130
[#630 'texture_depth_multisampled_2d']: s#131
[#630 'texture_multisampled_2d']: s#138
[#630 'texture_storage_1d']: s#139
[#630 'texture_storage_2d']: s#140
[#630 'texture_storage_2d_array']: s#141
[#630 'texture_storage_3d']: s#142
[#630 'true']: s#86
[#630 'u32']: s#92
[#630 'vec2']: s#97
[#630 'vec3']: s#98
[#630 'vec4']: s#99
[#630 '~']: s#63
[#630 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#72
[#630 /0[fh]/]: s#112
[#630 /0[iu]?/]: s#109
[#630 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#117
[#630 /0[xX][0-9a-fA-F]+[iu]?/]: s#111
[#630 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#119
[#630 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#630 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#114
[#630 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#116
[#630 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#630 /[1-9][0-9]*[fh]/]: s#113
[#630 /[1-9][0-9]*[iu]?/]: s#110
[#631 '}']: r#375
[#632 ';']: s#633
[#633 '}']: r#376

=Goto:
[#0 global_directive]: #4
[#0 translation_unit]: #1
[#0 translation_unit/0.0]: #2
[#0 translation_unit/0.0/0]: #3
[#2 attribute]: #29
[#2 const_assert_statement]: #18
[#2 function_decl]: #17
[#2 function_decl/0.0]: #24
[#2 function_decl/0.0/0]: #28
[#2 global_constant_decl]: #14
[#2 global_constant_decl/1.0]: #21
[#2 global_constant_decl/1.0/0]: #27
[#2 global_decl]: #11
[#2 global_variable_decl]: #13
[#2 global_variable_decl/0.0]: #19
[#2 global_variable_decl/0.0/0]: #26
[#2 struct_decl]: #16
[#2 translation_unit/0.1]: #9
[#2 translation_unit/0.1/0]: #10
[#2 type_alias_decl]: #15
[#4 global_directive]: #4
[#4 translation_unit/0.0/0]: #8
[#5 extension_name]: #6
[#11 attribute]: #29
[#11 const_assert_statement]: #18
[#11 function_decl]: #17
[#11 function_decl/0.0]: #24
[#11 function_decl/0.0/0]: #28
[#11 global_constant_decl]: #14
[#11 global_constant_decl/1.0]: #21
[#11 global_constant_decl/1.0/0]: #27
[#11 global_decl]: #11
[#11 global_variable_decl]: #13
[#11 global_variable_decl/0.0]: #19
[#11 global_variable_decl/0.0/0]: #26
[#11 struct_decl]: #16
[#11 translation_unit/0.1/0]: #156
[#11 type_alias_decl]: #15
[#19 variable_decl]: #150
[#20 ident]: #149
[#20 optionally_typed_ident]: #148
[#22 ident]: #146
[#23 ident]: #145
[#24 function_header]: #143
[#25 additive_expression]: #57
[#25 array_type_specifier]: #94
[#25 binary_and_expression]: #54
[#25 binary_or_expression]: #55
[#25 binary_xor_expression]: #56
[#25 bitwise_expression]: #52
[#25 bool_literal]: #76
[#25 call_expression]: #68
[#25 callable]: #73
[#25 decimal_float_literal]: #84
[#25 decimal_int_literal]: #82
[#25 depth_texture_type]: #121
[#25 expression]: #48
[#25 float_literal]: #75
[#25 hex_float_literal]: #85
[#25 hex_int_literal]: #83
[#25 ident]: #67
[#25 int_literal]: #74
[#25 literal]: #69
[#25 mat_prefix]: #80
[#25 multiplicative_expression]: #59
[#25 multisampled_texture_type]: #123
[#25 paren_expression]: #70
[#25 primary_expression]: #66
[#25 relational_expression]: #49
[#25 sampled_texture_type]: #122
[#25 sampler_type]: #120
[#25 shift_expression]: #53
[#25 short_circuit_and_expression]: #51
[#25 short_circuit_or_expression]: #50
[#25 singular_expression]: #60
[#25 storage_texture_type]: #124
[#25 texture_and_sampler_types]: #96
[#25 type_specifier_without_ident]: #78
[#25 unary_expression]: #58
[#25 vec_prefix]: #79
[#29 attribute]: #29
[#29 function_decl/0.0/0]: #47
[#29 global_constant_decl/1.0/0]: #46
[#29 global_variable_decl/0.0/0]: #45
[#53 _greater_than]: #208
[#53 _greater_than_equal]: #210
[#53 _less_than]: #207
[#53 _less_than_equal]: #209
[#57 additive_operator]: #201
[#58 _shift_left]: #197
[#58 _shift_right]: #198
[#59 multiplicative_operator]: #193
[#61 array_type_specifier]: #94
[#61 bool_literal]: #76
[#61 call_expression]: #68
[#61 callable]: #73
[#61 decimal_float_literal]: #84
[#61 decimal_int_literal]: #82
[#61 depth_texture_type]: #121
[#61 float_literal]: #75
[#61 hex_float_literal]: #85
[#61 hex_int_literal]: #83
[#61 ident]: #67
[#61 int_literal]: #74
[#61 literal]: #69
[#61 mat_prefix]: #80
[#61 multisampled_texture_type]: #123
[#61 paren_expression]: #70
[#61 primary_expression]: #66
[#61 sampled_texture_type]: #122
[#61 sampler_type]: #120
[#61 singular_expression]: #60
[#61 storage_texture_type]: #124
[#61 texture_and_sampler_types]: #96
[#61 type_specifier_without_ident]: #78
[#61 unary_expression]: #192
[#61 vec_prefix]: #79
[#62 array_type_specifier]: #94
[#62 bool_literal]: #76
[#62 call_expression]: #68
[#62 callable]: #73
[#62 decimal_float_literal]: #84
[#62 decimal_int_literal]: #82
[#62 depth_texture_type]: #121
[#62 float_literal]: #75
[#62 hex_float_literal]: #85
[#62 hex_int_literal]: #83
[#62 ident]: #67
[#62 int_literal]: #74
[#62 literal]: #69
[#62 mat_prefix]: #80
[#62 multisampled_texture_type]: #123
[#62 paren_expression]: #70
[#62 primary_expression]: #66
[#62 sampled_texture_type]: #122
[#62 sampler_type]: #120
[#62 singular_expression]: #60
[#62 storage_texture_type]: #124
[#62 texture_and_sampler_types]: #96
[#62 type_specifier_without_ident]: #78
[#62 unary_expression]: #191
[#62 vec_prefix]: #79
[#63 array_type_specifier]: #94
[#63 bool_literal]: #76
[#63 call_expression]: #68
[#63 callable]: #73
[#63 decimal_float_literal]: #84
[#63 decimal_int_literal]: #82
[#63 depth_texture_type]: #121
[#63 float_literal]: #75
[#63 hex_float_literal]: #85
[#63 hex_int_literal]: #83
[#63 ident]: #67
[#63 int_literal]: #74
[#63 literal]: #69
[#63 mat_prefix]: #80
[#63 multisampled_texture_type]: #123
[#63 paren_expression]: #70
[#63 primary_expression]: #66
[#63 sampled_texture_type]: #122
[#63 sampler_type]: #120
[#63 singular_expression]: #60
[#63 storage_texture_type]: #124
[#63 texture_and_sampler_types]: #96
[#63 type_specifier_without_ident]: #78
[#63 unary_expression]: #190
[#63 vec_prefix]: #79
[#64 array_type_specifier]: #94
[#64 bool_literal]: #76
[#64 call_expression]: #68
[#64 callable]: #73
[#64 decimal_float_literal]: #84
[#64 decimal_int_literal]: #82
[#64 depth_texture_type]: #121
[#64 float_literal]: #75
[#64 hex_float_literal]: #85
[#64 hex_int_literal]: #83
[#64 ident]: #67
[#64 int_literal]: #74
[#64 literal]: #69
[#64 mat_prefix]: #80
[#64 multisampled_texture_type]: #123
[#64 paren_expression]: #70
[#64 primary_expression]: #66
[#64 sampled_texture_type]: #122
[#64 sampler_type]: #120
[#64 singular_expression]: #60
[#64 storage_texture_type]: #124
[#64 texture_and_sampler_types]: #96
[#64 type_specifier_without_ident]: #78
[#64 unary_expression]: #189
[#64 vec_prefix]: #79
[#65 array_type_specifier]: #94
[#65 bool_literal]: #76
[#65 call_expression]: #68
[#65 callable]: #73
[#65 decimal_float_literal]: #84
[#65 decimal_int_literal]: #82
[#65 depth_texture_type]: #121
[#65 float_literal]: #75
[#65 hex_float_literal]: #85
[#65 hex_int_literal]: #83
[#65 ident]: #67
[#65 int_literal]: #74
[#65 literal]: #69
[#65 mat_prefix]: #80
[#65 multisampled_texture_type]: #123
[#65 paren_expression]: #70
[#65 primary_expression]: #66
[#65 sampled_texture_type]: #122
[#65 sampler_type]: #120
[#65 singular_expression]: #60
[#65 storage_texture_type]: #124
[#65 texture_and_sampler_types]: #96
[#65 type_specifier_without_ident]: #78
[#65 unary_expression]: #188
[#65 vec_prefix]: #79
[#66 component_or_swizzle_specifier]: #185
[#66 singular_expression/0.1]: #184
[#71 _disambiguate_template]: #183
[#73 argument_expression_list]: #181
[#77 additive_expression]: #57
[#77 array_type_specifier]: #94
[#77 binary_and_expression]: #54
[#77 binary_or_expression]: #55
[#77 binary_xor_expression]: #56
[#77 bitwise_expression]: #52
[#77 bool_literal]: #76
[#77 call_expression]: #68
[#77 callable]: #73
[#77 decimal_float_literal]: #84
[#77 decimal_int_literal]: #82
[#77 depth_texture_type]: #121
[#77 expression]: #180
[#77 float_literal]: #75
[#77 hex_float_literal]: #85
[#77 hex_int_literal]: #83
[#77 ident]: #67
[#77 int_literal]: #74
[#77 literal]: #69
[#77 mat_prefix]: #80
[#77 multiplicative_expression]: #59
[#77 multisampled_texture_type]: #123
[#77 paren_expression]: #70
[#77 primary_expression]: #66
[#77 relational_expression]: #49
[#77 sampled_texture_type]: #122
[#77 sampler_type]: #120
[#77 shift_expression]: #53
[#77 short_circuit_and_expression]: #51
[#77 short_circuit_or_expression]: #50
[#77 singular_expression]: #60
[#77 storage_texture_type]: #124
[#77 texture_and_sampler_types]: #96
[#77 type_specifier_without_ident]: #78
[#77 unary_expression]: #58
[#77 vec_prefix]: #79
[#79 _disambiguate_template]: #179
[#80 _disambiguate_template]: #178
[#81 _disambiguate_template]: #177
[#93 _disambiguate_template]: #176
[#95 _disambiguate_template]: #175
[#122 _disambiguate_template]: #174
[#123 _disambiguate_template]: #173
[#124 _disambiguate_template]: #172
[#143 compound_statement]: #170
[#144 ident]: #169
[#145 struct_body_decl]: #167
[#147 ident]: #149
[#147 optionally_typed_ident]: #165
[#149 optionally_typed_ident/0.1]: #162
[#150 global_variable_decl/0.2]: #160
[#151 _disambiguate_template]: #158
[#158 _template_args_start]: #354
[#158 variable_decl/0.2]: #352
[#158 variable_qualifier]: #353
[#161 additive_expression]: #57
[#161 array_type_specifier]: #94
[#161 binary_and_expression]: #54
[#161 binary_or_expression]: #55
[#161 binary_xor_expression]: #56
[#161 bitwise_expression]: #52
[#161 bool_literal]: #76
[#161 call_expression]: #68
[#161 callable]: #73
[#161 decimal_float_literal]: #84
[#161 decimal_int_literal]: #82
[#161 depth_texture_type]: #121
[#161 expression]: #351
[#161 float_literal]: #75
[#161 hex_float_literal]: #85
[#161 hex_int_literal]: #83
[#161 ident]: #67
[#161 int_literal]: #74
[#161 literal]: #69
[#161 mat_prefix]: #80
[#161 multiplicative_expression]: #59
[#161 multisampled_texture_type]: #123
[#161 paren_expression]: #70
[#161 primary_expression]: #66
[#161 relational_expression]: #49
[#161 sampled_texture_type]: #122
[#161 sampler_type]: #120
[#161 shift_expression]: #53
[#161 short_circuit_and_expression]: #51
[#161 short_circuit_or_expression]: #50
[#161 singular_expression]: #60
[#161 storage_texture_type]: #124
[#161 texture_and_sampler_types]: #96
[#161 type_specifier_without_ident]: #78
[#161 unary_expression]: #58
[#161 vec_prefix]: #79
[#163 array_type_specifier]: #94
[#163 depth_texture_type]: #121
[#163 ident]: #342
[#163 mat_prefix]: #345
[#163 multisampled_texture_type]: #123
[#163 sampled_texture_type]: #122
[#163 sampler_type]: #120
[#163 storage_texture_type]: #124
[#163 texture_and_sampler_types]: #96
[#163 type_specifier]: #350
[#163 type_specifier_without_ident]: #343
[#163 vec_prefix]: #344
[#164 additive_expression]: #57
[#164 array_type_specifier]: #94
[#164 binary_and_expression]: #54
[#164 binary_or_expression]: #55
[#164 binary_xor_expression]: #56
[#164 bitwise_expression]: #52
[#164 bool_literal]: #76
[#164 call_expression]: #68
[#164 callable]: #73
[#164 decimal_float_literal]: #84
[#164 decimal_int_literal]: #82
[#164 depth_texture_type]: #121
[#164 expression]: #349
[#164 float_literal]: #75
[#164 hex_float_literal]: #85
[#164 hex_int_literal]: #83
[#164 ident]: #67
[#164 int_literal]: #74
[#164 literal]: #69
[#164 mat_prefix]: #80
[#164 multiplicative_expression]: #59
[#164 multisampled_texture_type]: #123
[#164 paren_expression]: #70
[#164 primary_expression]: #66
[#164 relational_expression]: #49
[#164 sampled_texture_type]: #122
[#164 sampler_type]: #120
[#164 shift_expression]: #53
[#164 short_circuit_and_expression]: #51
[#164 short_circuit_or_expression]: #50
[#164 singular_expression]: #60
[#164 storage_texture_type]: #124
[#164 texture_and_sampler_types]: #96
[#164 type_specifier_without_ident]: #78
[#164 unary_expression]: #58
[#164 vec_prefix]: #79
[#165 global_constant_decl/1.3]: #347
[#166 array_type_specifier]: #94
[#166 depth_texture_type]: #121
[#166 ident]: #342
[#166 mat_prefix]: #345
[#166 multisampled_texture_type]: #123
[#166 sampled_texture_type]: #122
[#166 sampler_type]: #120
[#166 storage_texture_type]: #124
[#166 texture_and_sampler_types]: #96
[#166 type_specifier]: #341
[#166 type_specifier_without_ident]: #343
[#166 vec_prefix]: #344
[#168 attribute]: #340
[#168 struct_member]: #337
[#168 struct_member/0.0]: #338
[#168 struct_member/0.0/0]: #339
[#171 array_type_specifier]: #94
[#171 assignment_statement]: #325
[#171 break_statement]: #307
[#171 callable]: #319
[#171 compound_statement]: #311
[#171 compound_statement/0.1]: #295
[#171 compound_statement/0.1/0]: #296
[#171 const_assert_statement]: #312
[#171 continue_statement]: #308
[#171 core_lhs_expression]: #332
[#171 decrement_statement]: #327
[#171 depth_texture_type]: #121
[#171 for_statement]: #303
[#171 func_call_statement]: #305
[#171 ident]: #329
[#171 if_clause]: #314
[#171 if_statement]: #300
[#171 increment_statement]: #326
[#171 lhs_expression]: #330
[#171 loop_statement]: #302
[#171 mat_prefix]: #80
[#171 multisampled_texture_type]: #123
[#171 return_statement]: #299
[#171 sampled_texture_type]: #122
[#171 sampler_type]: #120
[#171 statement]: #297
[#171 storage_texture_type]: #124
[#171 switch_statement]: #301
[#171 texture_and_sampler_types]: #96
[#171 type_specifier_without_ident]: #78
[#171 variable_decl]: #320
[#171 variable_statement]: #306
[#171 variable_updating_statement]: #310
[#171 vec_prefix]: #79
[#171 while_statement]: #304
[#172 _template_args_start]: #294
[#173 _template_args_start]: #293
[#174 _template_args_start]: #292
[#175 _template_args_start]: #291
[#176 _template_args_start]: #290
[#177 _template_args_start]: #289
[#178 _template_args_start]: #288
[#179 _template_args_start]: #287
[#182 additive_expression]: #57
[#182 argument_expression_list/0.1]: #283
[#182 array_type_specifier]: #94
[#182 binary_and_expression]: #54
[#182 binary_or_expression]: #55
[#182 binary_xor_expression]: #56
[#182 bitwise_expression]: #52
[#182 bool_literal]: #76
[#182 call_expression]: #68
[#182 callable]: #73
[#182 decimal_float_literal]: #84
[#182 decimal_int_literal]: #82
[#182 depth_texture_type]: #121
[#182 expression]: #285
[#182 expression_comma_list]: #284
[#182 float_literal]: #75
[#182 hex_float_literal]: #85
[#182 hex_int_literal]: #83
[#182 ident]: #67
[#182 int_literal]: #74
[#182 literal]: #69
[#182 mat_prefix]: #80
[#182 multiplicative_expression]: #59
[#182 multisampled_texture_type]: #123
[#182 paren_expression]: #70
[#182 primary_expression]: #66
[#182 relational_expression]: #49
[#182 sampled_texture_type]: #122
[#182 sampler_type]: #120
[#182 shift_expression]: #53
[#182 short_circuit_and_expression]: #51
[#182 short_circuit_or_expression]: #50
[#182 singular_expression]: #60
[#182 storage_texture_type]: #124
[#182 texture_and_sampler_types]: #96
[#182 type_specifier_without_ident]: #78
[#182 unary_expression]: #58
[#182 vec_prefix]: #79
[#183 _template_args_start]: #281
[#186 additive_expression]: #57
[#186 array_type_specifier]: #94
[#186 binary_and_expression]: #54
[#186 binary_or_expression]: #55
[#186 binary_xor_expression]: #56
[#186 bitwise_expression]: #52
[#186 bool_literal]: #76
[#186 call_expression]: #68
[#186 callable]: #73
[#186 decimal_float_literal]: #84
[#186 decimal_int_literal]: #82
[#186 depth_texture_type]: #121
[#186 expression]: #280
[#186 float_literal]: #75
[#186 hex_float_literal]: #85
[#186 hex_int_literal]: #83
[#186 ident]: #67
[#186 int_literal]: #74
[#186 literal]: #69
[#186 mat_prefix]: #80
[#186 multiplicative_expression]: #59
[#186 multisampled_texture_type]: #123
[#186 paren_expression]: #70
[#186 primary_expression]: #66
[#186 relational_expression]: #49
[#186 sampled_texture_type]: #122
[#186 sampler_type]: #120
[#186 shift_expression]: #53
[#186 short_circuit_and_expression]: #51
[#186 short_circuit_or_expression]: #50
[#186 singular_expression]: #60
[#186 storage_texture_type]: #124
[#186 texture_and_sampler_types]: #96
[#186 type_specifier_without_ident]: #78
[#186 unary_expression]: #58
[#186 vec_prefix]: #79
[#187 member_ident]: #269
[#187 swizzle_name]: #270
[#193 array_type_specifier]: #94
[#193 bool_literal]: #76
[#193 call_expression]: #68
[#193 callable]: #73
[#193 decimal_float_literal]: #84
[#193 decimal_int_literal]: #82
[#193 depth_texture_type]: #121
[#193 float_literal]: #75
[#193 hex_float_literal]: #85
[#193 hex_int_literal]: #83
[#193 ident]: #67
[#193 int_literal]: #74
[#193 literal]: #69
[#193 mat_prefix]: #80
[#193 multisampled_texture_type]: #123
[#193 paren_expression]: #70
[#193 primary_expression]: #66
[#193 sampled_texture_type]: #122
[#193 sampler_type]: #120
[#193 singular_expression]: #60
[#193 storage_texture_type]: #124
[#193 texture_and_sampler_types]: #96
[#193 type_specifier_without_ident]: #78
[#193 unary_expression]: #268
[#193 vec_prefix]: #79
[#197 array_type_specifier]: #94
[#197 bool_literal]: #76
[#197 call_expression]: #68
[#197 callable]: #73
[#197 decimal_float_literal]: #84
[#197 decimal_int_literal]: #82
[#197 depth_texture_type]: #121
[#197 float_literal]: #75
[#197 hex_float_literal]: #85
[#197 hex_int_literal]: #83
[#197 ident]: #67
[#197 int_literal]: #74
[#197 literal]: #69
[#197 mat_prefix]: #80
[#197 multisampled_texture_type]: #123
[#197 paren_expression]: #70
[#197 primary_expression]: #66
[#197 sampled_texture_type]: #122
[#197 sampler_type]: #120
[#197 singular_expression]: #60
[#197 storage_texture_type]: #124
[#197 texture_and_sampler_types]: #96
[#197 type_specifier_without_ident]: #78
[#197 unary_expression]: #267
[#197 vec_prefix]: #79
[#198 array_type_specifier]: #94
[#198 bool_literal]: #76
[#198 call_expression]: #68
[#198 callable]: #73
[#198 decimal_float_literal]: #84
[#198 decimal_int_literal]: #82
[#198 depth_texture_type]: #121
[#198 float_literal]: #75
[#198 hex_float_literal]: #85
[#198 hex_int_literal]: #83
[#198 ident]: #67
[#198 int_literal]: #74
[#198 literal]: #69
[#198 mat_prefix]: #80
[#198 multisampled_texture_type]: #123
[#198 paren_expression]: #70
[#198 primary_expression]: #66
[#198 sampled_texture_type]: #122
[#198 sampler_type]: #120
[#198 singular_expression]: #60
[#198 storage_texture_type]: #124
[#198 texture_and_sampler_types]: #96
[#198 type_specifier_without_ident]: #78
[#198 unary_expression]: #266
[#198 vec_prefix]: #79
[#201 array_type_specifier]: #94
[#201 bool_literal]: #76
[#201 call_expression]: #68
[#201 callable]: #73
[#201 decimal_float_literal]: #84
[#201 decimal_int_literal]: #82
[#201 depth_texture_type]: #121
[#201 float_literal]: #75
[#201 hex_float_literal]: #85
[#201 hex_int_literal]: #83
[#201 ident]: #67
[#201 int_literal]: #74
[#201 literal]: #69
[#201 mat_prefix]: #80
[#201 multiplicative_expression]: #264
[#201 multisampled_texture_type]: #123
[#201 paren_expression]: #70
[#201 primary_expression]: #66
[#201 sampled_texture_type]: #122
[#201 sampler_type]: #120
[#201 singular_expression]: #60
[#201 storage_texture_type]: #124
[#201 texture_and_sampler_types]: #96
[#201 type_specifier_without_ident]: #78
[#201 unary_expression]: #265
[#201 vec_prefix]: #79
[#204 array_type_specifier]: #94
[#204 bool_literal]: #76
[#204 call_expression]: #68
[#204 callable]: #73
[#204 decimal_float_literal]: #84
[#204 decimal_int_literal]: #82
[#204 depth_texture_type]: #121
[#204 float_literal]: #75
[#204 hex_float_literal]: #85
[#204 hex_int_literal]: #83
[#204 ident]: #67
[#204 int_literal]: #74
[#204 literal]: #69
[#204 mat_prefix]: #80
[#204 multisampled_texture_type]: #123
[#204 paren_expression]: #70
[#204 primary_expression]: #66
[#204 sampled_texture_type]: #122
[#204 sampler_type]: #120
[#204 singular_expression]: #60
[#204 storage_texture_type]: #124
[#204 texture_and_sampler_types]: #96
[#204 type_specifier_without_ident]: #78
[#204 unary_expression]: #263
[#204 vec_prefix]: #79
[#205 array_type_specifier]: #94
[#205 bool_literal]: #76
[#205 call_expression]: #68
[#205 callable]: #73
[#205 decimal_float_literal]: #84
[#205 decimal_int_literal]: #82
[#205 depth_texture_type]: #121
[#205 float_literal]: #75
[#205 hex_float_literal]: #85
[#205 hex_int_literal]: #83
[#205 ident]: #67
[#205 int_literal]: #74
[#205 literal]: #69
[#205 mat_prefix]: #80
[#205 multisampled_texture_type]: #123
[#205 paren_expression]: #70
[#205 primary_expression]: #66
[#205 sampled_texture_type]: #122
[#205 sampler_type]: #120
[#205 singular_expression]: #60
[#205 storage_texture_type]: #124
[#205 texture_and_sampler_types]: #96
[#205 type_specifier_without_ident]: #78
[#205 unary_expression]: #262
[#205 vec_prefix]: #79
[#206 array_type_specifier]: #94
[#206 bool_literal]: #76
[#206 call_expression]: #68
[#206 callable]: #73
[#206 decimal_float_literal]: #84
[#206 decimal_int_literal]: #82
[#206 depth_texture_type]: #121
[#206 float_literal]: #75
[#206 hex_float_literal]: #85
[#206 hex_int_literal]: #83
[#206 ident]: #67
[#206 int_literal]: #74
[#206 literal]: #69
[#206 mat_prefix]: #80
[#206 multisampled_texture_type]: #123
[#206 paren_expression]: #70
[#206 primary_expression]: #66
[#206 sampled_texture_type]: #122
[#206 sampler_type]: #120
[#206 singular_expression]: #60
[#206 storage_texture_type]: #124
[#206 texture_and_sampler_types]: #96
[#206 type_specifier_without_ident]: #78
[#206 unary_expression]: #261
[#206 vec_prefix]: #79
[#207 additive_expression]: #57
[#207 array_type_specifier]: #94
[#207 bool_literal]: #76
[#207 call_expression]: #68
[#207 callable]: #73
[#207 decimal_float_literal]: #84
[#207 decimal_int_literal]: #82
[#207 depth_texture_type]: #121
[#207 float_literal]: #75
[#207 hex_float_literal]: #85
[#207 hex_int_literal]: #83
[#207 ident]: #67
[#207 int_literal]: #74
[#207 literal]: #69
[#207 mat_prefix]: #80
[#207 multiplicative_expression]: #59
[#207 multisampled_texture_type]: #123
[#207 paren_expression]: #70
[#207 primary_expression]: #66
[#207 sampled_texture_type]: #122
[#207 sampler_type]: #120
[#207 shift_expression]: #260
[#207 singular_expression]: #60
[#207 storage_texture_type]: #124
[#207 texture_and_sampler_types]: #96
[#207 type_specifier_without_ident]: #78
[#207 unary_expression]: #253
[#207 vec_prefix]: #79
[#208 additive_expression]: #57
[#208 array_type_specifier]: #94
[#208 bool_literal]: #76
[#208 call_expression]: #68
[#208 callable]: #73
[#208 decimal_float_literal]: #84
[#208 decimal_int_literal]: #82
[#208 depth_texture_type]: #121
[#208 float_literal]: #75
[#208 hex_float_literal]: #85
[#208 hex_int_literal]: #83
[#208 ident]: #67
[#208 int_literal]: #74
[#208 literal]: #69
[#208 mat_prefix]: #80
[#208 multiplicative_expression]: #59
[#208 multisampled_texture_type]: #123
[#208 paren_expression]: #70
[#208 primary_expression]: #66
[#208 sampled_texture_type]: #122
[#208 sampler_type]: #120
[#208 shift_expression]: #259
[#208 singular_expression]: #60
[#208 storage_texture_type]: #124
[#208 texture_and_sampler_types]: #96
[#208 type_specifier_without_ident]: #78
[#208 unary_expression]: #253
[#208 vec_prefix]: #79
[#209 additive_expression]: #57
[#209 array_type_specifier]: #94
[#209 bool_literal]: #76
[#209 call_expression]: #68
[#209 callable]: #73
[#209 decimal_float_literal]: #84
[#209 decimal_int_literal]: #82
[#209 depth_texture_type]: #121
[#209 float_literal]: #75
[#209 hex_float_literal]: #85
[#209 hex_int_literal]: #83
[#209 ident]: #67
[#209 int_literal]: #74
[#209 literal]: #69
[#209 mat_prefix]: #80
[#209 multiplicative_expression]: #59
[#209 multisampled_texture_type]: #123
[#209 paren_expression]: #70
[#209 primary_expression]: #66
[#209 sampled_texture_type]: #122
[#209 sampler_type]: #120
[#209 shift_expression]: #258
[#209 singular_expression]: #60
[#209 storage_texture_type]: #124
[#209 texture_and_sampler_types]: #96
[#209 type_specifier_without_ident]: #78
[#209 unary_expression]: #253
[#209 vec_prefix]: #79
[#210 additive_expression]: #57
[#210 array_type_specifier]: #94
[#210 bool_literal]: #76
[#210 call_expression]: #68
[#210 callable]: #73
[#210 decimal_float_literal]: #84
[#210 decimal_int_literal]: #82
[#210 depth_texture_type]: #121
[#210 float_literal]: #75
[#210 hex_float_literal]: #85
[#210 hex_int_literal]: #83
[#210 ident]: #67
[#210 int_literal]: #74
[#210 literal]: #69
[#210 mat_prefix]: #80
[#210 multiplicative_expression]: #59
[#210 multisampled_texture_type]: #123
[#210 paren_expression]: #70
[#210 primary_expression]: #66
[#210 sampled_texture_type]: #122
[#210 sampler_type]: #120
[#210 shift_expression]: #257
[#210 singular_expression]: #60
[#210 storage_texture_type]: #124
[#210 texture_and_sampler_types]: #96
[#210 type_specifier_without_ident]: #78
[#210 unary_expression]: #253
[#210 vec_prefix]: #79
[#211 additive_expression]: #57
[#211 array_type_specifier]: #94
[#211 bool_literal]: #76
[#211 call_expression]: #68
[#211 callable]: #73
[#211 decimal_float_literal]: #84
[#211 decimal_int_literal]: #82
[#211 depth_texture_type]: #121
[#211 float_literal]: #75
[#211 hex_float_literal]: #85
[#211 hex_int_literal]: #83
[#211 ident]: #67
[#211 int_literal]: #74
[#211 literal]: #69
[#211 mat_prefix]: #80
[#211 multiplicative_expression]: #59
[#211 multisampled_texture_type]: #123
[#211 paren_expression]: #70
[#211 primary_expression]: #66
[#211 sampled_texture_type]: #122
[#211 sampler_type]: #120
[#211 shift_expression]: #256
[#211 singular_expression]: #60
[#211 storage_texture_type]: #124
[#211 texture_and_sampler_types]: #96
[#211 type_specifier_without_ident]: #78
[#211 unary_expression]: #253
[#211 vec_prefix]: #79
[#212 additive_expression]: #57
[#212 array_type_specifier]: #94
[#212 bool_literal]: #76
[#212 call_expression]: #68
[#212 callable]: #73
[#212 decimal_float_literal]: #84
[#212 decimal_int_literal]: #82
[#212 depth_texture_type]: #121
[#212 float_literal]: #75
[#212 hex_float_literal]: #85
[#212 hex_int_literal]: #83
[#212 ident]: #67
[#212 int_literal]: #74
[#212 literal]: #69
[#212 mat_prefix]: #80
[#212 multiplicative_expression]: #59
[#212 multisampled_texture_type]: #123
[#212 paren_expression]: #70
[#212 primary_expression]: #66
[#212 sampled_texture_type]: #122
[#212 sampler_type]: #120
[#212 shift_expression]: #255
[#212 singular_expression]: #60
[#212 storage_texture_type]: #124
[#212 texture_and_sampler_types]: #96
[#212 type_specifier_without_ident]: #78
[#212 unary_expression]: #253
[#212 vec_prefix]: #79
[#217 additive_expression]: #57
[#217 array_type_specifier]: #94
[#217 bool_literal]: #76
[#217 call_expression]: #68
[#217 callable]: #73
[#217 decimal_float_literal]: #84
[#217 decimal_int_literal]: #82
[#217 depth_texture_type]: #121
[#217 float_literal]: #75
[#217 hex_float_literal]: #85
[#217 hex_int_literal]: #83
[#217 ident]: #67
[#217 int_literal]: #74
[#217 literal]: #69
[#217 mat_prefix]: #80
[#217 multiplicative_expression]: #59
[#217 multisampled_texture_type]: #123
[#217 paren_expression]: #70
[#217 primary_expression]: #66
[#217 relational_expression]: #254
[#217 sampled_texture_type]: #122
[#217 sampler_type]: #120
[#217 shift_expression]: #53
[#217 singular_expression]: #60
[#217 storage_texture_type]: #124
[#217 texture_and_sampler_types]: #96
[#217 type_specifier_without_ident]: #78
[#217 unary_expression]: #253
[#217 vec_prefix]: #79
[#218 additive_expression]: #57
[#218 array_type_specifier]: #94
[#218 bool_literal]: #76
[#218 call_expression]: #68
[#218 callable]: #73
[#218 decimal_float_literal]: #84
[#218 decimal_int_literal]: #82
[#218 depth_texture_type]: #121
[#218 float_literal]: #75
[#218 hex_float_literal]: #85
[#218 hex_int_literal]: #83
[#218 ident]: #67
[#218 int_literal]: #74
[#218 literal]: #69
[#218 mat_prefix]: #80
[#218 multiplicative_expression]: #59
[#218 multisampled_texture_type]: #123
[#218 paren_expression]: #70
[#218 primary_expression]: #66
[#218 relational_expression]: #252
[#218 sampled_texture_type]: #122
[#218 sampler_type]: #120
[#218 shift_expression]: #53
[#218 singular_expression]: #60
[#218 storage_texture_type]: #124
[#218 texture_and_sampler_types]: #96
[#218 type_specifier_without_ident]: #78
[#218 unary_expression]: #253
[#218 vec_prefix]: #79
[#219 additive_expression]: #57
[#219 array_type_specifier]: #94
[#219 binary_and_expression]: #54
[#219 binary_or_expression]: #55
[#219 binary_xor_expression]: #56
[#219 bitwise_expression]: #52
[#219 bool_literal]: #76
[#219 call_expression]: #68
[#219 callable]: #73
[#219 decimal_float_literal]: #84
[#219 decimal_int_literal]: #82
[#219 depth_texture_type]: #121
[#219 expression]: #251
[#219 float_literal]: #75
[#219 hex_float_literal]: #85
[#219 hex_int_literal]: #83
[#219 ident]: #67
[#219 int_literal]: #74
[#219 literal]: #69
[#219 mat_prefix]: #80
[#219 multiplicative_expression]: #59
[#219 multisampled_texture_type]: #123
[#219 paren_expression]: #70
[#219 primary_expression]: #66
[#219 relational_expression]: #49
[#219 sampled_texture_type]: #122
[#219 sampler_type]: #120
[#219 shift_expression]: #53
[#219 short_circuit_and_expression]: #51
[#219 short_circuit_or_expression]: #50
[#219 singular_expression]: #60
[#219 storage_texture_type]: #124
[#219 texture_and_sampler_types]: #96
[#219 type_specifier_without_ident]: #78
[#219 unary_expression]: #58
[#219 vec_prefix]: #79
[#220 additive_expression]: #57
[#220 array_type_specifier]: #94
[#220 binary_and_expression]: #54
[#220 binary_or_expression]: #55
[#220 binary_xor_expression]: #56
[#220 bitwise_expression]: #52
[#220 bool_literal]: #76
[#220 call_expression]: #68
[#220 callable]: #73
[#220 decimal_float_literal]: #84
[#220 decimal_int_literal]: #82
[#220 depth_texture_type]: #121
[#220 expression]: #250
[#220 float_literal]: #75
[#220 hex_float_literal]: #85
[#220 hex_int_literal]: #83
[#220 ident]: #67
[#220 int_literal]: #74
[#220 literal]: #69
[#220 mat_prefix]: #80
[#220 multiplicative_expression]: #59
[#220 multisampled_texture_type]: #123
[#220 paren_expression]: #70
[#220 primary_expression]: #66
[#220 relational_expression]: #49
[#220 sampled_texture_type]: #122
[#220 sampler_type]: #120
[#220 shift_expression]: #53
[#220 short_circuit_and_expression]: #51
[#220 short_circuit_or_expression]: #50
[#220 singular_expression]: #60
[#220 storage_texture_type]: #124
[#220 texture_and_sampler_types]: #96
[#220 type_specifier_without_ident]: #78
[#220 unary_expression]: #58
[#220 vec_prefix]: #79
[#221 additive_expression]: #57
[#221 array_type_specifier]: #94
[#221 binary_and_expression]: #54
[#221 binary_or_expression]: #55
[#221 binary_xor_expression]: #56
[#221 bitwise_expression]: #52
[#221 bool_literal]: #76
[#221 call_expression]: #68
[#221 callable]: #73
[#221 decimal_float_literal]: #84
[#221 decimal_int_literal]: #82
[#221 depth_texture_type]: #121
[#221 expression]: #249
[#221 float_literal]: #75
[#221 hex_float_literal]: #85
[#221 hex_int_literal]: #83
[#221 ident]: #67
[#221 int_literal]: #74
[#221 literal]: #69
[#221 mat_prefix]: #80
[#221 multiplicative_expression]: #59
[#221 multisampled_texture_type]: #123
[#221 paren_expression]: #70
[#221 primary_expression]: #66
[#221 relational_expression]: #49
[#221 sampled_texture_type]: #122
[#221 sampler_type]: #120
[#221 shift_expression]: #53
[#221 short_circuit_and_expression]: #51
[#221 short_circuit_or_expression]: #50
[#221 singular_expression]: #60
[#221 storage_texture_type]: #124
[#221 texture_and_sampler_types]: #96
[#221 type_specifier_without_ident]: #78
[#221 unary_expression]: #58
[#221 vec_prefix]: #79
[#222 interpolation_type_name]: #245
[#223 additive_expression]: #57
[#223 array_type_specifier]: #94
[#223 binary_and_expression]: #54
[#223 binary_or_expression]: #55
[#223 binary_xor_expression]: #56
[#223 bitwise_expression]: #52
[#223 bool_literal]: #76
[#223 call_expression]: #68
[#223 callable]: #73
[#223 decimal_float_literal]: #84
[#223 decimal_int_literal]: #82
[#223 depth_texture_type]: #121
[#223 expression]: #244
[#223 float_literal]: #75
[#223 hex_float_literal]: #85
[#223 hex_int_literal]: #83
[#223 ident]: #67
[#223 int_literal]: #74
[#223 literal]: #69
[#223 mat_prefix]: #80
[#223 multiplicative_expression]: #59
[#223 multisampled_texture_type]: #123
[#223 paren_expression]: #70
[#223 primary_expression]: #66
[#223 relational_expression]: #49
[#223 sampled_texture_type]: #122
[#223 sampler_type]: #120
[#223 shift_expression]: #53
[#223 short_circuit_and_expression]: #51
[#223 short_circuit_or_expression]: #50
[#223 singular_expression]: #60
[#223 storage_texture_type]: #124
[#223 texture_and_sampler_types]: #96
[#223 type_specifier_without_ident]: #78
[#223 unary_expression]: #58
[#223 vec_prefix]: #79
[#224 additive_expression]: #57
[#224 array_type_specifier]: #94
[#224 binary_and_expression]: #54
[#224 binary_or_expression]: #55
[#224 binary_xor_expression]: #56
[#224 bitwise_expression]: #52
[#224 bool_literal]: #76
[#224 call_expression]: #68
[#224 callable]: #73
[#224 decimal_float_literal]: #84
[#224 decimal_int_literal]: #82
[#224 depth_texture_type]: #121
[#224 expression]: #243
[#224 float_literal]: #75
[#224 hex_float_literal]: #85
[#224 hex_int_literal]: #83
[#224 ident]: #67
[#224 int_literal]: #74
[#224 literal]: #69
[#224 mat_prefix]: #80
[#224 multiplicative_expression]: #59
[#224 multisampled_texture_type]: #123
[#224 paren_expression]: #70
[#224 primary_expression]: #66
[#224 relational_expression]: #49
[#224 sampled_texture_type]: #122
[#224 sampler_type]: #120
[#224 shift_expression]: #53
[#224 short_circuit_and_expression]: #51
[#224 short_circuit_or_expression]: #50
[#224 singular_expression]: #60
[#224 storage_texture_type]: #124
[#224 texture_and_sampler_types]: #96
[#224 type_specifier_without_ident]: #78
[#224 unary_expression]: #58
[#224 vec_prefix]: #79
[#225 builtin_value_name]: #230
[#226 additive_expression]: #57
[#226 array_type_specifier]: #94
[#226 binary_and_expression]: #54
[#226 binary_or_expression]: #55
[#226 binary_xor_expression]: #56
[#226 bitwise_expression]: #52
[#226 bool_literal]: #76
[#226 call_expression]: #68
[#226 callable]: #73
[#226 decimal_float_literal]: #84
[#226 decimal_int_literal]: #82
[#226 depth_texture_type]: #121
[#226 expression]: #229
[#226 float_literal]: #75
[#226 hex_float_literal]: #85
[#226 hex_int_literal]: #83
[#226 ident]: #67
[#226 int_literal]: #74
[#226 literal]: #69
[#226 mat_prefix]: #80
[#226 multiplicative_expression]: #59
[#226 multisampled_texture_type]: #123
[#226 paren_expression]: #70
[#226 primary_expression]: #66
[#226 relational_expression]: #49
[#226 sampled_texture_type]: #122
[#226 sampler_type]: #120
[#226 shift_expression]: #53
[#226 short_circuit_and_expression]: #51
[#226 short_circuit_or_expression]: #50
[#226 singular_expression]: #60
[#226 storage_texture_type]: #124
[#226 texture_and_sampler_types]: #96
[#226 type_specifier_without_ident]: #78
[#226 unary_expression]: #58
[#226 vec_prefix]: #79
[#227 additive_expression]: #57
[#227 array_type_specifier]: #94
[#227 binary_and_expression]: #54
[#227 binary_or_expression]: #55
[#227 binary_xor_expression]: #56
[#227 bitwise_expression]: #52
[#227 bool_literal]: #76
[#227 call_expression]: #68
[#227 callable]: #73
[#227 decimal_float_literal]: #84
[#227 decimal_int_literal]: #82
[#227 depth_texture_type]: #121
[#227 expression]: #228
[#227 float_literal]: #75
[#227 hex_float_literal]: #85
[#227 hex_int_literal]: #83
[#227 ident]: #67
[#227 int_literal]: #74
[#227 literal]: #69
[#227 mat_prefix]: #80
[#227 multiplicative_expression]: #59
[#227 multisampled_texture_type]: #123
[#227 paren_expression]: #70
[#227 primary_expression]: #66
[#227 relational_expression]: #49
[#227 sampled_texture_type]: #122
[#227 sampler_type]: #120
[#227 shift_expression]: #53
[#227 short_circuit_and_expression]: #51
[#227 short_circuit_or_expression]: #50
[#227 singular_expression]: #60
[#227 storage_texture_type]: #124
[#227 texture_and_sampler_types]: #96
[#227 type_specifier_without_ident]: #78
[#227 unary_expression]: #58
[#227 vec_prefix]: #79
[#228 attrib_end]: #475
[#228 attrib_end/0.0]: #465
[#229 attrib_end]: #474
[#229 attrib_end/0.0]: #465
[#230 attrib_end]: #473
[#230 attrib_end/0.0]: #465
[#243 attrib_end]: #472
[#243 attrib_end/0.0]: #465
[#244 attrib_end]: #471
[#244 attrib_end/0.0]: #465
[#245 attrib_end]: #469
[#245 attrib_end/0.0]: #465
[#249 attrib_end]: #468
[#249 attrib_end/0.0]: #465
[#250 attrib_end]: #466
[#250 attrib_end/0.0]: #465
[#251 attrib_end]: #463
[#251 attrib_end/0.0]: #465
[#253 _shift_left]: #197
[#253 _shift_right]: #198
[#264 multiplicative_operator]: #193
[#269 component_or_swizzle_specifier]: #462
[#269 component_or_swizzle_specifier/1.2]: #461
[#270 component_or_swizzle_specifier]: #460
[#270 component_or_swizzle_specifier/2.2]: #459
[#281 array_type_specifier]: #94
[#281 depth_texture_type]: #121
[#281 ident]: #342
[#281 mat_prefix]: #345
[#281 multisampled_texture_type]: #123
[#281 sampled_texture_type]: #122
[#281 sampler_type]: #120
[#281 storage_texture_type]: #124
[#281 texture_and_sampler_types]: #96
[#281 type_specifier]: #457
[#281 type_specifier_without_ident]: #343
[#281 vec_prefix]: #344
[#285 expression_comma_list/0.1]: #452
[#285 expression_comma_list/0.1/0]: #453
[#285 expression_comma_list/0.1/0/0.0]: #454
[#287 array_type_specifier]: #94
[#287 depth_texture_type]: #121
[#287 ident]: #342
[#287 mat_prefix]: #345
[#287 multisampled_texture_type]: #123
[#287 sampled_texture_type]: #122
[#287 sampler_type]: #120
[#287 storage_texture_type]: #124
[#287 texture_and_sampler_types]: #96
[#287 type_specifier]: #451
[#287 type_specifier_without_ident]: #343
[#287 vec_prefix]: #344
[#288 array_type_specifier]: #94
[#288 depth_texture_type]: #121
[#288 ident]: #342
[#288 mat_prefix]: #345
[#288 multisampled_texture_type]: #123
[#288 sampled_texture_type]: #122
[#288 sampler_type]: #120
[#288 storage_texture_type]: #124
[#288 texture_and_sampler_types]: #96
[#288 type_specifier]: #450
[#288 type_specifier_without_ident]: #343
[#288 vec_prefix]: #344
[#289 array_type_specifier]: #94
[#289 depth_texture_type]: #121
[#289 ident]: #342
[#289 mat_prefix]: #345
[#289 multisampled_texture_type]: #123
[#289 sampled_texture_type]: #122
[#289 sampler_type]: #120
[#289 storage_texture_type]: #124
[#289 texture_and_sampler_types]: #96
[#289 type_specifier]: #449
[#289 type_specifier_without_ident]: #343
[#289 vec_prefix]: #344
[#290 address_space]: #448
[#291 array_type_specifier]: #94
[#291 depth_texture_type]: #121
[#291 ident]: #342
[#291 mat_prefix]: #345
[#291 multisampled_texture_type]: #123
[#291 sampled_texture_type]: #122
[#291 sampler_type]: #120
[#291 storage_texture_type]: #124
[#291 texture_and_sampler_types]: #96
[#291 type_specifier]: #447
[#291 type_specifier_without_ident]: #343
[#291 vec_prefix]: #344
[#292 array_type_specifier]: #94
[#292 depth_texture_type]: #121
[#292 ident]: #342
[#292 mat_prefix]: #345
[#292 multisampled_texture_type]: #123
[#292 sampled_texture_type]: #122
[#292 sampler_type]: #120
[#292 storage_texture_type]: #124
[#292 texture_and_sampler_types]: #96
[#292 type_specifier]: #446
[#292 type_specifier_without_ident]: #343
[#292 vec_prefix]: #344
[#293 array_type_specifier]: #94
[#293 depth_texture_type]: #121
[#293 ident]: #342
[#293 mat_prefix]: #345
[#293 multisampled_texture_type]: #123
[#293 sampled_texture_type]: #122
[#293 sampler_type]: #120
[#293 storage_texture_type]: #124
[#293 texture_and_sampler_types]: #96
[#293 type_specifier]: #445
[#293 type_specifier_without_ident]: #343
[#293 vec_prefix]: #344
[#294 texel_format]: #427
[#297 array_type_specifier]: #94
[#297 assignment_statement]: #325
[#297 break_statement]: #307
[#297 callable]: #319
[#297 compound_statement]: #311
[#297 compound_statement/0.1/0]: #425
[#297 const_assert_statement]: #312
[#297 continue_statement]: #308
[#297 core_lhs_expression]: #332
[#297 decrement_statement]: #327
[#297 depth_texture_type]: #121
[#297 for_statement]: #303
[#297 func_call_statement]: #305
[#297 ident]: #329
[#297 if_clause]: #314
[#297 if_statement]: #300
[#297 increment_statement]: #326
[#297 lhs_expression]: #330
[#297 loop_statement]: #302
[#297 mat_prefix]: #80
[#297 multisampled_texture_type]: #123
[#297 return_statement]: #299
[#297 sampled_texture_type]: #122
[#297 sampler_type]: #120
[#297 statement]: #297
[#297 storage_texture_type]: #124
[#297 switch_statement]: #301
[#297 texture_and_sampler_types]: #96
[#297 type_specifier_without_ident]: #78
[#297 variable_decl]: #320
[#297 variable_statement]: #306
[#297 variable_updating_statement]: #310
[#297 vec_prefix]: #79
[#297 while_statement]: #304
[#313 additive_expression]: #57
[#313 array_type_specifier]: #94
[#313 binary_and_expression]: #54
[#313 binary_or_expression]: #55
[#313 binary_xor_expression]: #56
[#313 bitwise_expression]: #52
[#313 bool_literal]: #76
[#313 call_expression]: #68
[#313 callable]: #73
[#313 decimal_float_literal]: #84
[#313 decimal_int_literal]: #82
[#313 depth_texture_type]: #121
[#313 expression]: #416
[#313 float_literal]: #75
[#313 hex_float_literal]: #85
[#313 hex_int_literal]: #83
[#313 ident]: #67
[#313 int_literal]: #74
[#313 literal]: #69
[#313 mat_prefix]: #80
[#313 multiplicative_expression]: #59
[#313 multisampled_texture_type]: #123
[#313 paren_expression]: #70
[#313 primary_expression]: #66
[#313 relational_expression]: #49
[#313 return_statement/0.1]: #415
[#313 sampled_texture_type]: #122
[#313 sampler_type]: #120
[#313 shift_expression]: #53
[#313 short_circuit_and_expression]: #51
[#313 short_circuit_or_expression]: #50
[#313 singular_expression]: #60
[#313 storage_texture_type]: #124
[#313 texture_and_sampler_types]: #96
[#313 type_specifier_without_ident]: #78
[#313 unary_expression]: #58
[#313 vec_prefix]: #79
[#314 else_if_clause]: #413
[#314 if_statement/0.1]: #411
[#314 if_statement/0.1/0]: #412
[#315 additive_expression]: #57
[#315 array_type_specifier]: #94
[#315 binary_and_expression]: #54
[#315 binary_or_expression]: #55
[#315 binary_xor_expression]: #56
[#315 bitwise_expression]: #52
[#315 bool_literal]: #76
[#315 call_expression]: #68
[#315 callable]: #73
[#315 decimal_float_literal]: #84
[#315 decimal_int_literal]: #82
[#315 depth_texture_type]: #121
[#315 expression]: #410
[#315 float_literal]: #75
[#315 hex_float_literal]: #85
[#315 hex_int_literal]: #83
[#315 ident]: #67
[#315 int_literal]: #74
[#315 literal]: #69
[#315 mat_prefix]: #80
[#315 multiplicative_expression]: #59
[#315 multisampled_texture_type]: #123
[#315 paren_expression]: #70
[#315 primary_expression]: #66
[#315 relational_expression]: #49
[#315 sampled_texture_type]: #122
[#315 sampler_type]: #120
[#315 shift_expression]: #53
[#315 short_circuit_and_expression]: #51
[#315 short_circuit_or_expression]: #50
[#315 singular_expression]: #60
[#315 storage_texture_type]: #124
[#315 texture_and_sampler_types]: #96
[#315 type_specifier_without_ident]: #78
[#315 unary_expression]: #58
[#315 vec_prefix]: #79
[#318 additive_expression]: #57
[#318 array_type_specifier]: #94
[#318 binary_and_expression]: #54
[#318 binary_or_expression]: #55
[#318 binary_xor_expression]: #56
[#318 bitwise_expression]: #52
[#318 bool_literal]: #76
[#318 call_expression]: #68
[#318 callable]: #73
[#318 decimal_float_literal]: #84
[#318 decimal_int_literal]: #82
[#318 depth_texture_type]: #121
[#318 expression]: #407
[#318 float_literal]: #75
[#318 hex_float_literal]: #85
[#318 hex_int_literal]: #83
[#318 ident]: #67
[#318 int_literal]: #74
[#318 literal]: #69
[#318 mat_prefix]: #80
[#318 multiplicative_expression]: #59
[#318 multisampled_texture_type]: #123
[#318 paren_expression]: #70
[#318 primary_expression]: #66
[#318 relational_expression]: #49
[#318 sampled_texture_type]: #122
[#318 sampler_type]: #120
[#318 shift_expression]: #53
[#318 short_circuit_and_expression]: #51
[#318 short_circuit_or_expression]: #50
[#318 singular_expression]: #60
[#318 storage_texture_type]: #124
[#318 texture_and_sampler_types]: #96
[#318 type_specifier_without_ident]: #78
[#318 unary_expression]: #58
[#318 vec_prefix]: #79
[#319 argument_expression_list]: #406
[#321 ident]: #149
[#321 optionally_typed_ident]: #404
[#322 ident]: #149
[#322 optionally_typed_ident]: #403
[#328 additive_expression]: #57
[#328 array_type_specifier]: #94
[#328 binary_and_expression]: #54
[#328 binary_or_expression]: #55
[#328 binary_xor_expression]: #56
[#328 bitwise_expression]: #52
[#328 bool_literal]: #76
[#328 call_expression]: #68
[#328 callable]: #73
[#328 decimal_float_literal]: #84
[#328 decimal_int_literal]: #82
[#328 depth_texture_type]: #121
[#328 expression]: #402
[#328 float_literal]: #75
[#328 hex_float_literal]: #85
[#328 hex_int_literal]: #83
[#328 ident]: #67
[#328 int_literal]: #74
[#328 literal]: #69
[#328 mat_prefix]: #80
[#328 multiplicative_expression]: #59
[#328 multisampled_texture_type]: #123
[#328 paren_expression]: #70
[#328 primary_expression]: #66
[#328 relational_expression]: #49
[#328 sampled_texture_type]: #122
[#328 sampler_type]: #120
[#328 shift_expression]: #53
[#328 short_circuit_and_expression]: #51
[#328 short_circuit_or_expression]: #50
[#328 singular_expression]: #60
[#328 storage_texture_type]: #124
[#328 texture_and_sampler_types]: #96
[#328 type_specifier_without_ident]: #78
[#328 unary_expression]: #58
[#328 vec_prefix]: #79
[#330 _shift_left_assign]: #399
[#330 _shift_right_assign]: #398
[#330 assignment_statement/0.1]: #385
[#330 compound_assignment_operator]: #389
[#332 component_or_swizzle_specifier]: #383
[#332 lhs_expression/0.1]: #382
[#333 core_lhs_expression]: #332
[#333 ident]: #379
[#333 lhs_expression]: #381
[#334 core_lhs_expression]: #332
[#334 ident]: #379
[#334 lhs_expression]: #380
[#335 core_lhs_expression]: #332
[#335 ident]: #379
[#335 lhs_expression]: #378
[#336 attribute]: #377
[#336 function_header/0.3]: #372
[#336 param]: #374
[#336 param/0.0]: #375
[#336 param/0.0/0]: #376
[#336 param_list]: #373
[#337 struct_body_decl/0.2]: #368
[#337 struct_body_decl/0.2/0]: #369
[#337 struct_body_decl/0.2/0/0.0]: #370
[#338 member_ident]: #367
[#340 attribute]: #340
[#340 struct_member/0.0/0]: #366
[#344 _disambiguate_template]: #365
[#345 _disambiguate_template]: #364
[#346 _disambiguate_template]: #363
[#348 additive_expression]: #57
[#348 array_type_specifier]: #94
[#348 binary_and_expression]: #54
[#348 binary_or_expression]: #55
[#348 binary_xor_expression]: #56
[#348 bitwise_expression]: #52
[#348 bool_literal]: #76
[#348 call_expression]: #68
[#348 callable]: #73
[#348 decimal_float_literal]: #84
[#348 decimal_int_literal]: #82
[#348 depth_texture_type]: #121
[#348 expression]: #362
[#348 float_literal]: #75
[#348 hex_float_literal]: #85
[#348 hex_int_literal]: #83
[#348 ident]: #67
[#348 int_literal]: #74
[#348 literal]: #69
[#348 mat_prefix]: #80
[#348 multiplicative_expression]: #59
[#348 multisampled_texture_type]: #123
[#348 paren_expression]: #70
[#348 primary_expression]: #66
[#348 relational_expression]: #49
[#348 sampled_texture_type]: #122
[#348 sampler_type]: #120
[#348 shift_expression]: #53
[#348 short_circuit_and_expression]: #51
[#348 short_circuit_or_expression]: #50
[#348 singular_expression]: #60
[#348 storage_texture_type]: #124
[#348 texture_and_sampler_types]: #96
[#348 type_specifier_without_ident]: #78
[#348 unary_expression]: #58
[#348 vec_prefix]: #79
[#352 ident]: #149
[#352 optionally_typed_ident]: #361
[#354 address_space]: #355
[#355 variable_qualifier/0.2]: #534
[#363 _template_args_start]: #289
[#364 _template_args_start]: #288
[#365 _template_args_start]: #287
[#368 struct_body_decl/0.3]: #531
[#370 struct_body_decl/0.2/0]: #530
[#370 struct_body_decl/0.2/0/0.0]: #370
[#371 attribute]: #340
[#371 struct_member]: #529
[#371 struct_member/0.0]: #338
[#371 struct_member/0.0/0]: #339
[#374 param_list/0.1]: #524
[#374 param_list/0.1/0]: #525
[#374 param_list/0.1/0/0.0]: #526
[#375 ident]: #523
[#377 attribute]: #377
[#377 param/0.0/0]: #522
[#384 additive_expression]: #57
[#384 array_type_specifier]: #94
[#384 binary_and_expression]: #54
[#384 binary_or_expression]: #55
[#384 binary_xor_expression]: #56
[#384 bitwise_expression]: #52
[#384 bool_literal]: #76
[#384 call_expression]: #68
[#384 callable]: #73
[#384 decimal_float_literal]: #84
[#384 decimal_int_literal]: #82
[#384 depth_texture_type]: #121
[#384 expression]: #520
[#384 float_literal]: #75
[#384 hex_float_literal]: #85
[#384 hex_int_literal]: #83
[#384 ident]: #67
[#384 int_literal]: #74
[#384 literal]: #69
[#384 mat_prefix]: #80
[#384 multiplicative_expression]: #59
[#384 multisampled_texture_type]: #123
[#384 paren_expression]: #70
[#384 primary_expression]: #66
[#384 relational_expression]: #49
[#384 sampled_texture_type]: #122
[#384 sampler_type]: #120
[#384 shift_expression]: #53
[#384 short_circuit_and_expression]: #51
[#384 short_circuit_or_expression]: #50
[#384 singular_expression]: #60
[#384 storage_texture_type]: #124
[#384 texture_and_sampler_types]: #96
[#384 type_specifier_without_ident]: #78
[#384 unary_expression]: #58
[#384 vec_prefix]: #79
[#385 additive_expression]: #57
[#385 array_type_specifier]: #94
[#385 binary_and_expression]: #54
[#385 binary_or_expression]: #55
[#385 binary_xor_expression]: #56
[#385 bitwise_expression]: #52
[#385 bool_literal]: #76
[#385 call_expression]: #68
[#385 callable]: #73
[#385 decimal_float_literal]: #84
[#385 decimal_int_literal]: #82
[#385 depth_texture_type]: #121
[#385 expression]: #519
[#385 float_literal]: #75
[#385 hex_float_literal]: #85
[#385 hex_int_literal]: #83
[#385 ident]: #67
[#385 int_literal]: #74
[#385 literal]: #69
[#385 mat_prefix]: #80
[#385 multiplicative_expression]: #59
[#385 multisampled_texture_type]: #123
[#385 paren_expression]: #70
[#385 primary_expression]: #66
[#385 relational_expression]: #49
[#385 sampled_texture_type]: #122
[#385 sampler_type]: #120
[#385 shift_expression]: #53
[#385 short_circuit_and_expression]: #51
[#385 short_circuit_or_expression]: #50
[#385 singular_expression]: #60
[#385 storage_texture_type]: #124
[#385 texture_and_sampler_types]: #96
[#385 type_specifier_without_ident]: #78
[#385 unary_expression]: #58
[#385 vec_prefix]: #79
[#402 compound_statement]: #518
[#405 additive_expression]: #57
[#405 array_type_specifier]: #94
[#405 binary_and_expression]: #54
[#405 binary_or_expression]: #55
[#405 binary_xor_expression]: #56
[#405 bitwise_expression]: #52
[#405 bool_literal]: #76
[#405 call_expression]: #68
[#405 callable]: #73
[#405 decimal_float_literal]: #84
[#405 decimal_int_literal]: #82
[#405 depth_texture_type]: #121
[#405 expression]: #515
[#405 float_literal]: #75
[#405 hex_float_literal]: #85
[#405 hex_int_literal]: #83
[#405 ident]: #67
[#405 int_literal]: #74
[#405 literal]: #69
[#405 mat_prefix]: #80
[#405 multiplicative_expression]: #59
[#405 multisampled_texture_type]: #123
[#405 paren_expression]: #70
[#405 primary_expression]: #66
[#405 relational_expression]: #49
[#405 sampled_texture_type]: #122
[#405 sampler_type]: #120
[#405 shift_expression]: #53
[#405 short_circuit_and_expression]: #51
[#405 short_circuit_or_expression]: #50
[#405 singular_expression]: #60
[#405 storage_texture_type]: #124
[#405 texture_and_sampler_types]: #96
[#405 type_specifier_without_ident]: #78
[#405 unary_expression]: #58
[#405 vec_prefix]: #79
[#407 compound_statement]: #514
[#408 array_type_specifier]: #94
[#408 assignment_statement]: #325
[#408 callable]: #319
[#408 core_lhs_expression]: #332
[#408 decrement_statement]: #327
[#408 depth_texture_type]: #121
[#408 for_header]: #508
[#408 for_header/0.0]: #509
[#408 for_init]: #510
[#408 func_call_statement]: #513
[#408 ident]: #329
[#408 increment_statement]: #326
[#408 lhs_expression]: #330
[#408 mat_prefix]: #80
[#408 multisampled_texture_type]: #123
[#408 sampled_texture_type]: #122
[#408 sampler_type]: #120
[#408 storage_texture_type]: #124
[#408 texture_and_sampler_types]: #96
[#408 type_specifier_without_ident]: #78
[#408 variable_decl]: #320
[#408 variable_statement]: #511
[#408 variable_updating_statement]: #512
[#408 vec_prefix]: #79
[#409 array_type_specifier]: #94
[#409 assignment_statement]: #325
[#409 break_statement]: #307
[#409 callable]: #319
[#409 compound_statement]: #311
[#409 const_assert_statement]: #312
[#409 continue_statement]: #308
[#409 core_lhs_expression]: #332
[#409 decrement_statement]: #327
[#409 depth_texture_type]: #121
[#409 for_statement]: #303
[#409 func_call_statement]: #305
[#409 ident]: #329
[#409 if_clause]: #314
[#409 if_statement]: #300
[#409 increment_statement]: #326
[#409 lhs_expression]: #330
[#409 loop_statement]: #302
[#409 loop_statement/0.2]: #505
[#409 loop_statement/0.2/0]: #506
[#409 mat_prefix]: #80
[#409 multisampled_texture_type]: #123
[#409 return_statement]: #299
[#409 sampled_texture_type]: #122
[#409 sampler_type]: #120
[#409 statement]: #507
[#409 storage_texture_type]: #124
[#409 switch_statement]: #301
[#409 texture_and_sampler_types]: #96
[#409 type_specifier_without_ident]: #78
[#409 variable_decl]: #320
[#409 variable_statement]: #306
[#409 variable_updating_statement]: #310
[#409 vec_prefix]: #79
[#409 while_statement]: #304
[#411 else_clause]: #502
[#411 if_statement/0.2]: #501
[#413 else_if_clause]: #413
[#413 if_statement/0.1/0]: #500
[#445 _template_args_end]: #497
[#446 _template_args_end]: #496
[#447 _template_args_end]: #495
[#449 array_type_specifier/0.4]: #492
[#450 _template_args_end]: #491
[#451 _template_args_end]: #490
[#452 expression_comma_list/0.2]: #488
[#454 expression_comma_list/0.1/0]: #487
[#454 expression_comma_list/0.1/0/0.0]: #454
[#455 additive_expression]: #57
[#455 array_type_specifier]: #94
[#455 binary_and_expression]: #54
[#455 binary_or_expression]: #55
[#455 binary_xor_expression]: #56
[#455 bitwise_expression]: #52
[#455 bool_literal]: #76
[#455 call_expression]: #68
[#455 callable]: #73
[#455 decimal_float_literal]: #84
[#455 decimal_int_literal]: #82
[#455 depth_texture_type]: #121
[#455 expression]: #486
[#455 float_literal]: #75
[#455 hex_float_literal]: #85
[#455 hex_int_literal]: #83
[#455 ident]: #67
[#455 int_literal]: #74
[#455 literal]: #69
[#455 mat_prefix]: #80
[#455 multiplicative_expression]: #59
[#455 multisampled_texture_type]: #123
[#455 paren_expression]: #70
[#455 primary_expression]: #66
[#455 relational_expression]: #49
[#455 sampled_texture_type]: #122
[#455 sampler_type]: #120
[#455 shift_expression]: #53
[#455 short_circuit_and_expression]: #51
[#455 short_circuit_or_expression]: #50
[#455 singular_expression]: #60
[#455 storage_texture_type]: #124
[#455 texture_and_sampler_types]: #96
[#455 type_specifier_without_ident]: #78
[#455 unary_expression]: #58
[#455 vec_prefix]: #79
[#457 _template_args_end]: #484
[#458 component_or_swizzle_specifier]: #483
[#458 component_or_swizzle_specifier/0.3]: #482
[#464 additive_expression]: #57
[#464 array_type_specifier]: #94
[#464 binary_and_expression]: #54
[#464 binary_or_expression]: #55
[#464 binary_xor_expression]: #56
[#464 bitwise_expression]: #52
[#464 bool_literal]: #76
[#464 call_expression]: #68
[#464 callable]: #73
[#464 decimal_float_literal]: #84
[#464 decimal_int_literal]: #82
[#464 depth_texture_type]: #121
[#464 expression]: #481
[#464 float_literal]: #75
[#464 hex_float_literal]: #85
[#464 hex_int_literal]: #83
[#464 ident]: #67
[#464 int_literal]: #74
[#464 literal]: #69
[#464 mat_prefix]: #80
[#464 multiplicative_expression]: #59
[#464 multisampled_texture_type]: #123
[#464 paren_expression]: #70
[#464 primary_expression]: #66
[#464 relational_expression]: #49
[#464 sampled_texture_type]: #122
[#464 sampler_type]: #120
[#464 shift_expression]: #53
[#464 short_circuit_and_expression]: #51
[#464 short_circuit_or_expression]: #50
[#464 singular_expression]: #60
[#464 storage_texture_type]: #124
[#464 texture_and_sampler_types]: #96
[#464 type_specifier_without_ident]: #78
[#464 unary_expression]: #58
[#464 vec_prefix]: #79
[#470 interpolation_sample_name]: #476
[#476 attrib_end]: #577
[#476 attrib_end/0.0]: #465
[#481 attrib_end]: #575
[#481 attrib_end/0.0]: #465
[#484 paren_expression]: #574
[#492 _template_args_end]: #573
[#493 additive_expression]: #570
[#493 array_type_specifier]: #94
[#493 binary_and_expression]: #54
[#493 binary_or_expression]: #55
[#493 binary_xor_expression]: #56
[#493 bitwise_expression]: #571
[#493 bool_literal]: #76
[#493 call_expression]: #68
[#493 callable]: #73
[#493 decimal_float_literal]: #84
[#493 decimal_int_literal]: #82
[#493 depth_texture_type]: #121
[#493 element_count_expression]: #569
[#493 float_literal]: #75
[#493 hex_float_literal]: #85
[#493 hex_int_literal]: #83
[#493 ident]: #67
[#493 int_literal]: #74
[#493 literal]: #69
[#493 mat_prefix]: #80
[#493 multiplicative_expression]: #59
[#493 multisampled_texture_type]: #123
[#493 paren_expression]: #70
[#493 primary_expression]: #66
[#493 sampled_texture_type]: #122
[#493 sampler_type]: #120
[#493 singular_expression]: #60
[#493 storage_texture_type]: #124
[#493 texture_and_sampler_types]: #96
[#493 type_specifier_without_ident]: #78
[#493 unary_expression]: #572
[#493 vec_prefix]: #79
[#494 array_type_specifier]: #94
[#494 depth_texture_type]: #121
[#494 ident]: #342
[#494 mat_prefix]: #345
[#494 multisampled_texture_type]: #123
[#494 sampled_texture_type]: #122
[#494 sampler_type]: #120
[#494 storage_texture_type]: #124
[#494 texture_and_sampler_types]: #96
[#494 type_specifier]: #568
[#494 type_specifier_without_ident]: #343
[#494 vec_prefix]: #344
[#498 access_mode]: #567
[#499 additive_expression]: #57
[#499 array_type_specifier]: #94
[#499 binary_and_expression]: #54
[#499 binary_or_expression]: #55
[#499 binary_xor_expression]: #56
[#499 bitwise_expression]: #52
[#499 bool_literal]: #76
[#499 call_expression]: #68
[#499 callable]: #73
[#499 decimal_float_literal]: #84
[#499 decimal_int_literal]: #82
[#499 depth_texture_type]: #121
[#499 expression]: #566
[#499 float_literal]: #75
[#499 hex_float_literal]: #85
[#499 hex_int_literal]: #83
[#499 ident]: #67
[#499 int_literal]: #74
[#499 literal]: #69
[#499 mat_prefix]: #80
[#499 multiplicative_expression]: #59
[#499 multisampled_texture_type]: #123
[#499 paren_expression]: #70
[#499 primary_expression]: #66
[#499 relational_expression]: #49
[#499 sampled_texture_type]: #122
[#499 sampler_type]: #120
[#499 shift_expression]: #53
[#499 short_circuit_and_expression]: #51
[#499 short_circuit_or_expression]: #50
[#499 singular_expression]: #60
[#499 storage_texture_type]: #124
[#499 texture_and_sampler_types]: #96
[#499 type_specifier_without_ident]: #78
[#499 unary_expression]: #58
[#499 vec_prefix]: #79
[#503 compound_statement]: #565
[#504 case_clause]: #561
[#504 default_alone_clause]: #562
[#504 switch_body]: #560
[#504 switch_statement/0.3]: #558
[#504 switch_statement/0.3/0]: #559
[#505 continuing_statement]: #556
[#505 loop_statement/0.3]: #555
[#507 array_type_specifier]: #94
[#507 assignment_statement]: #325
[#507 break_statement]: #307
[#507 callable]: #319
[#507 compound_statement]: #311
[#507 const_assert_statement]: #312
[#507 continue_statement]: #308
[#507 core_lhs_expression]: #332
[#507 decrement_statement]: #327
[#507 depth_texture_type]: #121
[#507 for_statement]: #303
[#507 func_call_statement]: #305
[#507 ident]: #329
[#507 if_clause]: #314
[#507 if_statement]: #300
[#507 increment_statement]: #326
[#507 lhs_expression]: #330
[#507 loop_statement]: #302
[#507 loop_statement/0.2/0]: #554
[#507 mat_prefix]: #80
[#507 multisampled_texture_type]: #123
[#507 return_statement]: #299
[#507 sampled_texture_type]: #122
[#507 sampler_type]: #120
[#507 statement]: #507
[#507 storage_texture_type]: #124
[#507 switch_statement]: #301
[#507 texture_and_sampler_types]: #96
[#507 type_specifier_without_ident]: #78
[#507 variable_decl]: #320
[#507 variable_statement]: #306
[#507 variable_updating_statement]: #310
[#507 vec_prefix]: #79
[#507 while_statement]: #304
[#516 additive_expression]: #57
[#516 array_type_specifier]: #94
[#516 binary_and_expression]: #54
[#516 binary_or_expression]: #55
[#516 binary_xor_expression]: #56
[#516 bitwise_expression]: #52
[#516 bool_literal]: #76
[#516 call_expression]: #68
[#516 callable]: #73
[#516 decimal_float_literal]: #84
[#516 decimal_int_literal]: #82
[#516 depth_texture_type]: #121
[#516 expression]: #551
[#516 float_literal]: #75
[#516 hex_float_literal]: #85
[#516 hex_int_literal]: #83
[#516 ident]: #67
[#516 int_literal]: #74
[#516 literal]: #69
[#516 mat_prefix]: #80
[#516 multiplicative_expression]: #59
[#516 multisampled_texture_type]: #123
[#516 paren_expression]: #70
[#516 primary_expression]: #66
[#516 relational_expression]: #49
[#516 sampled_texture_type]: #122
[#516 sampler_type]: #120
[#516 shift_expression]: #53
[#516 short_circuit_and_expression]: #51
[#516 short_circuit_or_expression]: #50
[#516 singular_expression]: #60
[#516 storage_texture_type]: #124
[#516 texture_and_sampler_types]: #96
[#516 type_specifier_without_ident]: #78
[#516 unary_expression]: #58
[#516 vec_prefix]: #79
[#517 additive_expression]: #57
[#517 array_type_specifier]: #94
[#517 binary_and_expression]: #54
[#517 binary_or_expression]: #55
[#517 binary_xor_expression]: #56
[#517 bitwise_expression]: #52
[#517 bool_literal]: #76
[#517 call_expression]: #68
[#517 callable]: #73
[#517 decimal_float_literal]: #84
[#517 decimal_int_literal]: #82
[#517 depth_texture_type]: #121
[#517 expression]: #550
[#517 float_literal]: #75
[#517 hex_float_literal]: #85
[#517 hex_int_literal]: #83
[#517 ident]: #67
[#517 int_literal]: #74
[#517 literal]: #69
[#517 mat_prefix]: #80
[#517 multiplicative_expression]: #59
[#517 multisampled_texture_type]: #123
[#517 paren_expression]: #70
[#517 primary_expression]: #66
[#517 relational_expression]: #49
[#517 sampled_texture_type]: #122
[#517 sampler_type]: #120
[#517 shift_expression]: #53
[#517 short_circuit_and_expression]: #51
[#517 short_circuit_or_expression]: #50
[#517 singular_expression]: #60
[#517 storage_texture_type]: #124
[#517 texture_and_sampler_types]: #96
[#517 type_specifier_without_ident]: #78
[#517 unary_expression]: #58
[#517 vec_prefix]: #79
[#524 param_list/0.2]: #547
[#526 param_list/0.1/0]: #546
[#526 param_list/0.1/0/0.0]: #526
[#527 attribute]: #377
[#527 param]: #545
[#527 param/0.0]: #375
[#527 param/0.0/0]: #376
[#528 function_header/0.5]: #543
[#533 array_type_specifier]: #94
[#533 depth_texture_type]: #121
[#533 ident]: #342
[#533 mat_prefix]: #345
[#533 multisampled_texture_type]: #123
[#533 sampled_texture_type]: #122
[#533 sampler_type]: #120
[#533 storage_texture_type]: #124
[#533 texture_and_sampler_types]: #96
[#533 type_specifier]: #541
[#533 type_specifier_without_ident]: #343
[#533 vec_prefix]: #344
[#534 _template_args_end]: #540
[#535 access_mode]: #536
[#544 attribute]: #600
[#544 function_header/0.5/0.1]: #598
[#544 function_header/0.5/0.1/0]: #599
[#549 array_type_specifier]: #94
[#549 depth_texture_type]: #121
[#549 ident]: #342
[#549 mat_prefix]: #345
[#549 multisampled_texture_type]: #123
[#549 sampled_texture_type]: #122
[#549 sampler_type]: #120
[#549 storage_texture_type]: #124
[#549 texture_and_sampler_types]: #96
[#549 type_specifier]: #597
[#549 type_specifier_without_ident]: #343
[#549 vec_prefix]: #344
[#552 additive_expression]: #57
[#552 array_type_specifier]: #94
[#552 binary_and_expression]: #54
[#552 binary_or_expression]: #55
[#552 binary_xor_expression]: #56
[#552 bitwise_expression]: #52
[#552 bool_literal]: #76
[#552 call_expression]: #68
[#552 callable]: #73
[#552 decimal_float_literal]: #84
[#552 decimal_int_literal]: #82
[#552 depth_texture_type]: #121
[#552 expression]: #596
[#552 float_literal]: #75
[#552 for_header/0.2]: #595
[#552 hex_float_literal]: #85
[#552 hex_int_literal]: #83
[#552 ident]: #67
[#552 int_literal]: #74
[#552 literal]: #69
[#552 mat_prefix]: #80
[#552 multiplicative_expression]: #59
[#552 multisampled_texture_type]: #123
[#552 paren_expression]: #70
[#552 primary_expression]: #66
[#552 relational_expression]: #49
[#552 sampled_texture_type]: #122
[#552 sampler_type]: #120
[#552 shift_expression]: #53
[#552 short_circuit_and_expression]: #51
[#552 short_circuit_or_expression]: #50
[#552 singular_expression]: #60
[#552 storage_texture_type]: #124
[#552 texture_and_sampler_types]: #96
[#552 type_specifier_without_ident]: #78
[#552 unary_expression]: #58
[#552 vec_prefix]: #79
[#553 compound_statement]: #594
[#557 continuing_compound_statement]: #591
[#560 case_clause]: #561
[#560 default_alone_clause]: #562
[#560 switch_body]: #560
[#560 switch_statement/0.3/0]: #589
[#563 additive_expression]: #57
[#563 array_type_specifier]: #94
[#563 binary_and_expression]: #54
[#563 binary_or_expression]: #55
[#563 binary_xor_expression]: #56
[#563 bitwise_expression]: #52
[#563 bool_literal]: #76
[#563 call_expression]: #68
[#563 callable]: #73
[#563 case_selector]: #586
[#563 case_selectors]: #585
[#563 decimal_float_literal]: #84
[#563 decimal_int_literal]: #82
[#563 depth_texture_type]: #121
[#563 expression]: #588
[#563 float_literal]: #75
[#563 hex_float_literal]: #85
[#563 hex_int_literal]: #83
[#563 ident]: #67
[#563 int_literal]: #74
[#563 literal]: #69
[#563 mat_prefix]: #80
[#563 multiplicative_expression]: #59
[#563 multisampled_texture_type]: #123
[#563 paren_expression]: #70
[#563 primary_expression]: #66
[#563 relational_expression]: #49
[#563 sampled_texture_type]: #122
[#563 sampler_type]: #120
[#563 shift_expression]: #53
[#563 short_circuit_and_expression]: #51
[#563 short_circuit_or_expression]: #50
[#563 singular_expression]: #60
[#563 storage_texture_type]: #124
[#563 texture_and_sampler_types]: #96
[#563 type_specifier_without_ident]: #78
[#563 unary_expression]: #58
[#563 vec_prefix]: #79
[#564 default_alone_clause/0.1]: #583
[#566 compound_statement]: #582
[#567 _template_args_end]: #581
[#568 type_specifier_without_ident/7.6]: #579
[#570 additive_operator]: #201
[#576 additive_expression]: #57
[#576 array_type_specifier]: #94
[#576 binary_and_expression]: #54
[#576 binary_or_expression]: #55
[#576 binary_xor_expression]: #56
[#576 bitwise_expression]: #52
[#576 bool_literal]: #76
[#576 call_expression]: #68
[#576 callable]: #73
[#576 decimal_float_literal]: #84
[#576 decimal_int_literal]: #82
[#576 depth_texture_type]: #121
[#576 expression]: #578
[#576 float_literal]: #75
[#576 hex_float_literal]: #85
[#576 hex_int_literal]: #83
[#576 ident]: #67
[#576 int_literal]: #74
[#576 literal]: #69
[#576 mat_prefix]: #80
[#576 multiplicative_expression]: #59
[#576 multisampled_texture_type]: #123
[#576 paren_expression]: #70
[#576 primary_expression]: #66
[#576 relational_expression]: #49
[#576 sampled_texture_type]: #122
[#576 sampler_type]: #120
[#576 shift_expression]: #53
[#576 short_circuit_and_expression]: #51
[#576 short_circuit_or_expression]: #50
[#576 singular_expression]: #60
[#576 storage_texture_type]: #124
[#576 texture_and_sampler_types]: #96
[#576 type_specifier_without_ident]: #78
[#576 unary_expression]: #58
[#576 vec_prefix]: #79
[#578 attrib_end]: #616
[#578 attrib_end/0.0]: #465
[#579 _template_args_end]: #615
[#580 access_mode]: #614
[#583 compound_statement]: #613
[#585 case_clause/0.2]: #611
[#586 case_selectors/0.1]: #607
[#586 case_selectors/0.1/0]: #608
[#586 case_selectors/0.1/0/0.0]: #609
[#592 array_type_specifier]: #94
[#592 assignment_statement]: #325
[#592 break_statement]: #307
[#592 callable]: #319
[#592 compound_statement]: #311
[#592 const_assert_statement]: #312
[#592 continue_statement]: #308
[#592 continuing_compound_statement/0.1]: #604
[#592 continuing_compound_statement/0.1/0]: #605
[#592 core_lhs_expression]: #332
[#592 decrement_statement]: #327
[#592 depth_texture_type]: #121
[#592 for_statement]: #303
[#592 func_call_statement]: #305
[#592 ident]: #329
[#592 if_clause]: #314
[#592 if_statement]: #300
[#592 increment_statement]: #326
[#592 lhs_expression]: #330
[#592 loop_statement]: #302
[#592 mat_prefix]: #80
[#592 multisampled_texture_type]: #123
[#592 return_statement]: #299
[#592 sampled_texture_type]: #122
[#592 sampler_type]: #120
[#592 statement]: #606
[#592 storage_texture_type]: #124
[#592 switch_statement]: #301
[#592 texture_and_sampler_types]: #96
[#592 type_specifier_without_ident]: #78
[#592 variable_decl]: #320
[#592 variable_statement]: #306
[#592 variable_updating_statement]: #310
[#592 vec_prefix]: #79
[#592 while_statement]: #304
[#598 array_type_specifier]: #94
[#598 depth_texture_type]: #121
[#598 ident]: #342
[#598 mat_prefix]: #345
[#598 multisampled_texture_type]: #123
[#598 sampled_texture_type]: #122
[#598 sampler_type]: #120
[#598 storage_texture_type]: #124
[#598 texture_and_sampler_types]: #96
[#598 type_specifier]: #602
[#598 type_specifier_without_ident]: #343
[#598 vec_prefix]: #344
[#600 attribute]: #600
[#600 function_header/0.5/0.1/0]: #601
[#603 array_type_specifier]: #94
[#603 assignment_statement]: #325
[#603 callable]: #319
[#603 core_lhs_expression]: #332
[#603 decrement_statement]: #327
[#603 depth_texture_type]: #121
[#603 for_header/0.4]: #626
[#603 for_update]: #627
[#603 func_call_statement]: #629
[#603 ident]: #329
[#603 increment_statement]: #326
[#603 lhs_expression]: #330
[#603 mat_prefix]: #80
[#603 multisampled_texture_type]: #123
[#603 sampled_texture_type]: #122
[#603 sampler_type]: #120
[#603 storage_texture_type]: #124
[#603 texture_and_sampler_types]: #96
[#603 type_specifier_without_ident]: #78
[#603 variable_updating_statement]: #628
[#603 vec_prefix]: #79
[#604 break_if_statement]: #624
[#604 continuing_compound_statement/0.2]: #623
[#606 array_type_specifier]: #94
[#606 assignment_statement]: #325
[#606 break_statement]: #307
[#606 callable]: #319
[#606 compound_statement]: #311
[#606 const_assert_statement]: #312
[#606 continue_statement]: #308
[#606 continuing_compound_statement/0.1/0]: #622
[#606 core_lhs_expression]: #332
[#606 decrement_statement]: #327
[#606 depth_texture_type]: #121
[#606 for_statement]: #303
[#606 func_call_statement]: #305
[#606 ident]: #329
[#606 if_clause]: #314
[#606 if_statement]: #300
[#606 increment_statement]: #326
[#606 lhs_expression]: #330
[#606 loop_statement]: #302
[#606 mat_prefix]: #80
[#606 multisampled_texture_type]: #123
[#606 return_statement]: #299
[#606 sampled_texture_type]: #122
[#606 sampler_type]: #120
[#606 statement]: #606
[#606 storage_texture_type]: #124
[#606 switch_statement]: #301
[#606 texture_and_sampler_types]: #96
[#606 type_specifier_without_ident]: #78
[#606 variable_decl]: #320
[#606 variable_statement]: #306
[#606 variable_updating_statement]: #310
[#606 vec_prefix]: #79
[#606 while_statement]: #304
[#607 case_selectors/0.2]: #620
[#609 case_selectors/0.1/0]: #619
[#609 case_selectors/0.1/0/0.0]: #609
[#610 additive_expression]: #57
[#610 array_type_specifier]: #94
[#610 binary_and_expression]: #54
[#610 binary_or_expression]: #55
[#610 binary_xor_expression]: #56
[#610 bitwise_expression]: #52
[#610 bool_literal]: #76
[#610 call_expression]: #68
[#610 callable]: #73
[#610 case_selector]: #618
[#610 decimal_float_literal]: #84
[#610 decimal_int_literal]: #82
[#610 depth_texture_type]: #121
[#610 expression]: #588
[#610 float_literal]: #75
[#610 hex_float_literal]: #85
[#610 hex_int_literal]: #83
[#610 ident]: #67
[#610 int_literal]: #74
[#610 literal]: #69
[#610 mat_prefix]: #80
[#610 multiplicative_expression]: #59
[#610 multisampled_texture_type]: #123
[#610 paren_expression]: #70
[#610 primary_expression]: #66
[#610 relational_expression]: #49
[#610 sampled_texture_type]: #122
[#610 sampler_type]: #120
[#610 shift_expression]: #53
[#610 short_circuit_and_expression]: #51
[#610 short_circuit_or_expression]: #50
[#610 singular_expression]: #60
[#610 storage_texture_type]: #124
[#610 texture_and_sampler_types]: #96
[#610 type_specifier_without_ident]: #78
[#610 unary_expression]: #58
[#610 vec_prefix]: #79
[#611 compound_statement]: #617
[#630 additive_expression]: #57
[#630 array_type_specifier]: #94
[#630 binary_and_expression]: #54
[#630 binary_or_expression]: #55
[#630 binary_xor_expression]: #56
[#630 bitwise_expression]: #52
[#630 bool_literal]: #76
[#630 call_expression]: #68
[#630 callable]: #73
[#630 decimal_float_literal]: #84
[#630 decimal_int_literal]: #82
[#630 depth_texture_type]: #121
[#630 expression]: #632
[#630 float_literal]: #75
[#630 hex_float_literal]: #85
[#630 hex_int_literal]: #83
[#630 ident]: #67
[#630 int_literal]: #74
[#630 literal]: #69
[#630 mat_prefix]: #80
[#630 multiplicative_expression]: #59
[#630 multisampled_texture_type]: #123
[#630 paren_expression]: #70
[#630 primary_expression]: #66
[#630 relational_expression]: #49
[#630 sampled_texture_type]: #122
[#630 sampler_type]: #120
[#630 shift_expression]: #53
[#630 short_circuit_and_expression]: #51
[#630 short_circuit_or_expression]: #50
[#630 singular_expression]: #60
[#630 storage_texture_type]: #124
[#630 texture_and_sampler_types]: #96
[#630 type_specifier_without_ident]: #78
[#630 unary_expression]: #58
[#630 vec_prefix]: #79
