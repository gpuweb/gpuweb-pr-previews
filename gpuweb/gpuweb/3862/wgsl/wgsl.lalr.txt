=Grammar:

_blankspace:/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_block_comment:/\u200B_block_comment/
_comment:/\/\/.*/
_disambiguate_template:/\u200B_disambiguate_template/
_error_sentinel:/\u200B_error_sentinel/
_greater_than:/\u200B_greater_than/
_greater_than_equal:/\u200B_greater_than_equal/
_less_than:/\u200B_less_than/
_less_than_equal:/\u200B_less_than_equal/
_shift_left:/\u200B_shift_left/
_shift_left_assign:/\u200B_shift_left_assign/
_shift_right:/\u200B_shift_right/
_shift_right_assign:/\u200B_shift_right_assign/
_template_args_end:/\u200B_template_args_end/
_template_args_start:/\u200B_template_args_start/
access_mode:
   'read'
 | 'read_write'
 | 'write'
additive_expression:
   additive_expression additive_operator multiplicative_expression
 | multiplicative_expression
additive_operator:
   '+'
 | '-'
address_space:
   'function'
 | 'private'
 | 'storage'
 | 'uniform'
 | 'workgroup'
argument_expression_list:
   '(' expression_comma_list ? ')'
array_type_specifier:
   'array' _disambiguate_template _template_args_start type_specifier ( ',' element_count_expression )? _template_args_end
assignment_statement:
   '_' '=' expression
 | lhs_expression ( '=' | compound_assignment_operator ) expression
assignment_statement/0.1:
   '='
 | compound_assignment_operator
attrib_end:
   ',' ? ')'
attribute:
   '@' 'align' '(' expression attrib_end
 | '@' 'binding' '(' expression attrib_end
 | '@' 'builtin' '(' builtin_value_name attrib_end
 | '@' 'compute'
 | '@' 'const'
 | '@' 'fragment'
 | '@' 'group' '(' expression attrib_end
 | '@' 'id' '(' expression attrib_end
 | '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end
 | '@' 'interpolate' '(' interpolation_type_name attrib_end
 | '@' 'invariant'
 | '@' 'location' '(' expression attrib_end
 | '@' 'must_use'
 | '@' 'size' '(' expression attrib_end
 | '@' 'vertex'
 | '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end
 | '@' 'workgroup_size' '(' expression ',' expression attrib_end
 | '@' 'workgroup_size' '(' expression attrib_end
binary_and_expression:
   binary_and_expression '&' unary_expression
 | unary_expression
binary_or_expression:
   binary_or_expression '|' unary_expression
 | unary_expression
binary_xor_expression:
   binary_xor_expression '^' unary_expression
 | unary_expression
bitwise_expression:
   binary_and_expression '&' unary_expression
 | binary_or_expression '|' unary_expression
 | binary_xor_expression '^' unary_expression
bool_literal:
   'false'
 | 'true'
break_if_statement:
   'break' 'if' expression ';'
break_statement:'break'
builtin_value_name:
   'frag_depth'
 | 'front_facing'
 | 'global_invocation_id'
 | 'instance_index'
 | 'local_invocation_id'
 | 'local_invocation_index'
 | 'num_workgroups'
 | 'position'
 | 'sample_index'
 | 'sample_mask'
 | 'vertex_index'
 | 'workgroup_id'
call_expression:call_phrase
call_phrase:
   callable argument_expression_list
callable:
   'array' _disambiguate_template
 | ident
 | mat_prefix _disambiguate_template
 | type_specifier_without_ident
 | vec_prefix _disambiguate_template
case_clause:
   'case' case_selectors ':' ? compound_statement
case_selector:
   'default'
 | expression
case_selectors:
   case_selector ( ',' case_selector ) * ? ',' ?
case_selectors/0.1/0/0.0:
   ',' case_selector
component_or_swizzle_specifier:
   '.' member_ident component_or_swizzle_specifier ?
 | '.' swizzle_name component_or_swizzle_specifier ?
 | '[' expression ']' component_or_swizzle_specifier ?
compound_assignment_operator:
   '%='
 | '&='
 | '*='
 | '+='
 | '-='
 | '/='
 | '^='
 | '|='
 | _shift_left_assign
 | _shift_right_assign
compound_statement:
   '{' statement * ? '}'
const_assert_statement:
   'const_assert' expression
continue_statement:'continue'
continuing_compound_statement:
   '{' statement * ? break_if_statement ? '}'
continuing_statement:
   'continuing' continuing_compound_statement
core_lhs_expression:
   '(' lhs_expression ')'
 | ident
decimal_float_literal:
   /0[fh]/
 | /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/
 | /[0-9]+[eE][+-]?[0-9]+[fh]?/
 | /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/
 | /[1-9][0-9]*[fh]/
decimal_int_literal:
   /0[iu]?/
 | /[1-9][0-9]*[iu]?/
decrement_statement:
   lhs_expression '--'
default_alone_clause:
   'default' ':' ? compound_statement
depth_texture_type:
   'texture_depth_2d'
 | 'texture_depth_2d_array'
 | 'texture_depth_cube'
 | 'texture_depth_cube_array'
 | 'texture_depth_multisampled_2d'
element_count_expression:
   additive_expression
 | bitwise_expression
else_clause:
   'else' compound_statement
else_if_clause:
   'else' 'if' expression compound_statement
enable_directive:
   'enable' extension_name ';'
expression:
   bitwise_expression
 | relational_expression
 | short_circuit_and_expression '&&' relational_expression
 | short_circuit_or_expression '||' relational_expression
expression_comma_list:
   expression ( ',' expression ) * ? ',' ?
expression_comma_list/0.1/0/0.0:
   ',' expression
extension_name:'f16'
float_literal:
   decimal_float_literal
 | hex_float_literal
for_header:
   for_init ? ';' expression ? ';' for_update ?
for_init:
   func_call_statement
 | variable_statement
 | variable_updating_statement
for_statement:
   'for' '(' for_header ')' compound_statement
for_update:
   func_call_statement
 | variable_updating_statement
func_call_statement:call_phrase
function_decl:
   attribute * ? function_header compound_statement
function_header:
   'fn' ident '(' param_list ? ')' ( '->' attribute * ? type_specifier )?
global_constant_decl:
   'const' optionally_typed_ident '=' expression
 | attribute * ? 'override' optionally_typed_ident ( '=' expression )?
global_decl:
   ';'
 | const_assert_statement ';'
 | function_decl
 | global_constant_decl ';'
 | global_variable_decl ';'
 | struct_decl
 | type_alias_decl ';'
global_directive:enable_directive
global_variable_decl:
   attribute * ? variable_decl ( '=' expression )?
hex_float_literal:
   /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/
 | /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/
 | /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/
hex_int_literal:/0[xX][0-9a-fA-F]+[iu]?/
ident:ident_pattern_token
ident_pattern_token:/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
if_clause:
   'if' expression compound_statement
if_statement:
   if_clause else_if_clause * ? else_clause ?
increment_statement:
   lhs_expression '++'
int_literal:
   decimal_int_literal
 | hex_int_literal
interpolation_sample_name:
   'center'
 | 'centroid'
 | 'sample'
interpolation_type_name:
   'flat'
 | 'linear'
 | 'perspective'
lhs_expression:
   '&' lhs_expression
 | '*' lhs_expression
 | core_lhs_expression component_or_swizzle_specifier ?
literal:
   bool_literal
 | float_literal
 | int_literal
loop_statement:
   'loop' '{' statement * ? continuing_statement ? '}'
mat_prefix:
   'mat2x2'
 | 'mat2x3'
 | 'mat2x4'
 | 'mat3x2'
 | 'mat3x3'
 | 'mat3x4'
 | 'mat4x2'
 | 'mat4x3'
 | 'mat4x4'
member_ident:ident_pattern_token
multiplicative_expression:
   multiplicative_expression multiplicative_operator unary_expression
 | unary_expression
multiplicative_operator:
   '%'
 | '*'
 | '/'
multisampled_texture_type:'texture_multisampled_2d'
optionally_typed_ident:
   ident ( ':' type_specifier )?
param:
   attribute * ? ident ':' type_specifier
param_list:
   param ( ',' param ) * ? ',' ?
param_list/0.1/0/0.0:
   ',' param
paren_expression:
   '(' expression ')'
primary_expression:
   'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression
 | call_expression
 | ident
 | literal
 | paren_expression
relational_expression:
   shift_expression
 | shift_expression '!=' shift_expression
 | shift_expression '==' shift_expression
 | shift_expression _greater_than shift_expression
 | shift_expression _greater_than_equal shift_expression
 | shift_expression _less_than shift_expression
 | shift_expression _less_than_equal shift_expression
return_statement:
   'return' expression ?
sampled_texture_type:
   'texture_1d'
 | 'texture_2d'
 | 'texture_2d_array'
 | 'texture_3d'
 | 'texture_cube'
 | 'texture_cube_array'
sampler_type:
   'sampler'
 | 'sampler_comparison'
shift_expression:
   additive_expression
 | unary_expression _shift_left unary_expression
 | unary_expression _shift_right unary_expression
short_circuit_and_expression:
   relational_expression
 | short_circuit_and_expression '&&' relational_expression
short_circuit_or_expression:
   relational_expression
 | short_circuit_or_expression '||' relational_expression
singular_expression:
   primary_expression component_or_swizzle_specifier ?
statement:
   ';'
 | 'discard' ';'
 | break_statement ';'
 | compound_statement
 | const_assert_statement ';'
 | continue_statement ';'
 | for_statement
 | func_call_statement ';'
 | if_statement
 | loop_statement
 | return_statement ';'
 | switch_statement
 | variable_statement ';'
 | variable_updating_statement ';'
 | while_statement
storage_texture_type:
   'texture_storage_1d'
 | 'texture_storage_2d'
 | 'texture_storage_2d_array'
 | 'texture_storage_3d'
struct_body_decl:
   '{' struct_member ( ',' struct_member ) * ? ',' ? '}'
struct_body_decl/0.2/0/0.0:
   ',' struct_member
struct_decl:
   'struct' ident struct_body_decl
struct_member:
   attribute * ? member_ident ':' type_specifier
switch_body:
   case_clause
 | default_alone_clause
switch_statement:
   'switch' expression '{' ( switch_body * ) '}'
switch_statement/0.3:
   switch_body *
swizzle_name:
   '/[rgba]/'
 | '/[rgba][rgba]/'
 | '/[rgba][rgba][rgba]/'
 | '/[rgba][rgba][rgba][rgba]/'
 | '/[xyzw]/'
 | '/[xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw][xyzw]/'
texel_format:
   'bgra8unorm'
 | 'r32float'
 | 'r32sint'
 | 'r32uint'
 | 'rg32float'
 | 'rg32sint'
 | 'rg32uint'
 | 'rgba16float'
 | 'rgba16sint'
 | 'rgba16uint'
 | 'rgba32float'
 | 'rgba32sint'
 | 'rgba32uint'
 | 'rgba8sint'
 | 'rgba8snorm'
 | 'rgba8uint'
 | 'rgba8unorm'
texture_and_sampler_types:
   depth_texture_type
 | multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end
 | sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end
 | sampler_type
 | storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end
translation_unit:
   global_directive * ? global_decl * ?
type_alias_decl:
   'alias' ident '=' type_specifier
type_specifier:
   ident
 | type_specifier_without_ident
type_specifier_without_ident:
   'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end
 | 'bool'
 | 'f16'
 | 'f32'
 | 'i32'
 | 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier ( ',' access_mode )? _template_args_end
 | 'u32'
 | array_type_specifier
 | mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end
 | texture_and_sampler_types
 | vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end
unary_expression:
   '!' unary_expression
 | '&' unary_expression
 | '*' unary_expression
 | '-' unary_expression
 | '~' unary_expression
 | singular_expression
variable_decl:
   'var' _disambiguate_template variable_qualifier ? optionally_typed_ident
variable_qualifier:
   _template_args_start address_space ( ',' access_mode )? _template_args_end
variable_statement:
   'const' optionally_typed_ident '=' expression
 | 'let' optionally_typed_ident '=' expression
 | variable_decl
 | variable_decl '=' expression
variable_updating_statement:
   assignment_statement
 | decrement_statement
 | increment_statement
vec_prefix:
   'vec2'
 | 'vec3'
 | 'vec4'
while_statement:
   'while' expression compound_statement

=Raw rules:
translation_unit  -> ( Choice ( Seq translation_unit/0.0 translation_unit/0.1 ) )
translation_unit .reg_info.index: 581
translation_unit .first: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' ε}
translation_unit .derives_empty: True
translation_unit .follow: {EndOfText}
global_directive  -> enable_directive
global_directive .reg_info.index: 202
global_directive .first: {'enable'}
global_directive .derives_empty: False
global_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl  -> ( Choice ';' ( Seq global_variable_decl ';' ) ( Seq global_constant_decl ';' ) ( Seq type_alias_decl ';' ) struct_decl function_decl ( Seq const_assert_statement ';' ) )
global_decl .reg_info.index: 213
global_decl .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var'}
global_decl .derives_empty: False
global_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
bool_literal  -> ( Choice 'true' 'false' )
bool_literal .reg_info.index: 214
bool_literal .first: {'false' 'true'}
bool_literal .derives_empty: False
bool_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal  -> ( Choice decimal_int_literal hex_int_literal )
int_literal .reg_info.index: 217
int_literal .first: {/0[iu]?/ /0[xX][0-9a-fA-F]+[iu]?/ /[1-9][0-9]*[iu]?/}
int_literal .derives_empty: False
int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal  -> ( Choice /0[iu]?/ /[1-9][0-9]*[iu]?/ )
decimal_int_literal .reg_info.index: 218
decimal_int_literal .first: {/0[iu]?/ /[1-9][0-9]*[iu]?/}
decimal_int_literal .derives_empty: False
decimal_int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal  -> /0[xX][0-9a-fA-F]+[iu]?/
hex_int_literal .reg_info.index: 7
hex_int_literal .first: {/0[xX][0-9a-fA-F]+[iu]?/}
hex_int_literal .derives_empty: False
hex_int_literal .follow: {}
float_literal  -> ( Choice decimal_float_literal hex_float_literal )
float_literal .reg_info.index: 221
float_literal .first: {/0[fh]/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
float_literal .derives_empty: False
float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal  -> ( Choice /0[fh]/ /[1-9][0-9]*[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ )
decimal_float_literal .reg_info.index: 222
decimal_float_literal .first: {/0[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
decimal_float_literal .derives_empty: False
decimal_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal  -> ( Choice /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ )
hex_float_literal .reg_info.index: 223
hex_float_literal .first: {/0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/}
hex_float_literal .derives_empty: False
hex_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal  -> ( Choice int_literal float_literal bool_literal )
literal .reg_info.index: 227
literal .first: {'false' 'true' /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
literal .derives_empty: False
literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident  -> ident_pattern_token
ident .reg_info.index: 228
ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident .derives_empty: False
ident .follow: {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
member_ident  -> ident_pattern_token
member_ident .reg_info.index: 228
member_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
member_ident .derives_empty: False
member_ident .follow: {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
attribute  -> ( Choice ( Seq '@' 'align' '(' expression attrib_end ) ( Seq '@' 'binding' '(' expression attrib_end ) ( Seq '@' 'builtin' '(' builtin_value_name attrib_end ) ( Seq '@' 'const' ) ( Seq '@' 'group' '(' expression attrib_end ) ( Seq '@' 'id' '(' expression attrib_end ) ( Seq '@' 'interpolate' '(' interpolation_type_name attrib_end ) ( Seq '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end ) ( Seq '@' 'invariant' ) ( Seq '@' 'location' '(' expression attrib_end ) ( Seq '@' 'must_use' ) ( Seq '@' 'size' '(' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression ',' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end ) ( Seq '@' 'vertex' ) ( Seq '@' 'fragment' ) ( Seq '@' 'compute' ) )
attribute .reg_info.index: 252
attribute .first: {'@'}
attribute .derives_empty: False
attribute .follow: {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end  -> ( Choice ( Seq attrib_end/0.0 ')' ) )
attrib_end .reg_info.index: 719
attrib_end .first: {')' ','}
attrib_end .derives_empty: False
attrib_end .follow: {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
array_type_specifier  -> ( Choice ( Seq 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end ) )
array_type_specifier .reg_info.index: 729
array_type_specifier .first: {'array'}
array_type_specifier .derives_empty: False
array_type_specifier .follow: {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
element_count_expression  -> ( Choice additive_expression bitwise_expression )
element_count_expression .reg_info.index: 265
element_count_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
element_count_expression .derives_empty: False
element_count_expression .follow: {/\u200B_template_args_end/}
struct_decl  -> ( Choice ( Seq 'struct' ident struct_body_decl ) )
struct_decl .reg_info.index: 536
struct_decl .first: {'struct'}
struct_decl .derives_empty: False
struct_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl  -> ( Choice ( Seq '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' ) )
struct_body_decl .reg_info.index: 744
struct_body_decl .first: {'{'}
struct_body_decl .derives_empty: False
struct_body_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_member  -> ( Choice ( Seq struct_member/0.0 member_ident ':' type_specifier ) )
struct_member .reg_info.index: 752
struct_member .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member .derives_empty: False
struct_member .follow: {',' '}'}
texture_and_sampler_types  -> ( Choice sampler_type depth_texture_type ( Seq sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end ) ( Seq multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end ) ( Seq storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end ) )
texture_and_sampler_types .reg_info.index: 289
texture_and_sampler_types .first: {'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d'}
texture_and_sampler_types .derives_empty: False
texture_and_sampler_types .follow: {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
sampler_type  -> ( Choice 'sampler' 'sampler_comparison' )
sampler_type .reg_info.index: 290
sampler_type .first: {'sampler' 'sampler_comparison'}
sampler_type .derives_empty: False
sampler_type .follow: {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
sampled_texture_type  -> ( Choice 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' )
sampled_texture_type .reg_info.index: 291
sampled_texture_type .first: {'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array'}
sampled_texture_type .derives_empty: False
sampled_texture_type .follow: {/\u200B_disambiguate_template/}
multisampled_texture_type  -> 'texture_multisampled_2d'
multisampled_texture_type .reg_info.index: 48
multisampled_texture_type .first: {'texture_multisampled_2d'}
multisampled_texture_type .derives_empty: False
multisampled_texture_type .follow: {}
storage_texture_type  -> ( Choice 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' )
storage_texture_type .reg_info.index: 292
storage_texture_type .first: {'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d'}
storage_texture_type .derives_empty: False
storage_texture_type .follow: {/\u200B_disambiguate_template/}
depth_texture_type  -> ( Choice 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' )
depth_texture_type .reg_info.index: 293
depth_texture_type .first: {'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d'}
depth_texture_type .derives_empty: False
depth_texture_type .follow: {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
type_alias_decl  -> ( Choice ( Seq 'alias' ident '=' type_specifier ) )
type_alias_decl .reg_info.index: 539
type_alias_decl .first: {'alias'}
type_alias_decl .derives_empty: False
type_alias_decl .follow: {';'}
type_specifier  -> ( Choice ident type_specifier_without_ident )
type_specifier .reg_info.index: 296
type_specifier .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
type_specifier .derives_empty: False
type_specifier .follow: {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
type_specifier_without_ident  -> ( Choice 'bool' 'f32' 'f16' 'i32' 'u32' ( Seq vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end ) ( Seq mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end ) ( Seq 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end ) array_type_specifier ( Seq 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end ) texture_and_sampler_types )
type_specifier_without_ident .reg_info.index: 835
type_specifier_without_ident .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
type_specifier_without_ident .derives_empty: False
type_specifier_without_ident .follow: {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
vec_prefix  -> ( Choice 'vec2' 'vec3' 'vec4' )
vec_prefix .reg_info.index: 309
vec_prefix .first: {'vec2' 'vec3' 'vec4'}
vec_prefix .derives_empty: False
vec_prefix .follow: {/\u200B_disambiguate_template/}
mat_prefix  -> ( Choice 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' )
mat_prefix .reg_info.index: 310
mat_prefix .first: {'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4'}
mat_prefix .derives_empty: False
mat_prefix .follow: {/\u200B_disambiguate_template/}
variable_statement  -> ( Choice variable_decl ( Seq variable_decl '=' expression ) ( Seq 'let' optionally_typed_ident '=' expression ) ( Seq 'const' optionally_typed_ident '=' expression ) )
variable_statement .reg_info.index: 316
variable_statement .first: {'const' 'let' 'var'}
variable_statement .derives_empty: False
variable_statement .follow: {';'}
variable_decl  -> ( Choice ( Seq 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident ) )
variable_decl .reg_info.index: 870
variable_decl .first: {'var'}
variable_decl .derives_empty: False
variable_decl .follow: {';' '='}
optionally_typed_ident  -> ( Choice ( Seq ident optionally_typed_ident/0.1 ) )
optionally_typed_ident .reg_info.index: 876
optionally_typed_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
optionally_typed_ident .derives_empty: False
optionally_typed_ident .follow: {';' '='}
variable_qualifier  -> ( Choice ( Seq _template_args_start address_space variable_qualifier/0.2 _template_args_end ) )
variable_qualifier .reg_info.index: 883
variable_qualifier .first: {/\u200B_template_args_start/}
variable_qualifier .derives_empty: False
variable_qualifier .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
global_variable_decl  -> ( Choice ( Seq global_variable_decl/0.0 variable_decl global_variable_decl/0.2 ) )
global_variable_decl .reg_info.index: 890
global_variable_decl .first: {'@' 'var'}
global_variable_decl .derives_empty: False
global_variable_decl .follow: {';'}
global_constant_decl  -> ( Choice ( Seq 'const' optionally_typed_ident '=' expression ) ( Seq global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 ) )
global_constant_decl .reg_info.index: 902
global_constant_decl .first: {'@' 'const' 'override'}
global_constant_decl .derives_empty: False
global_constant_decl .follow: {';'}
primary_expression  -> ( Choice ident call_expression literal paren_expression ( Seq 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression ) )
primary_expression .reg_info.index: 333
primary_expression .first: {'(' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
primary_expression .derives_empty: False
primary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression  -> call_phrase
call_expression .reg_info.index: 334
call_expression .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_expression .derives_empty: False
call_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_phrase  -> ( Choice ( Seq callable argument_expression_list ) )
call_phrase .reg_info.index: 544
call_phrase .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_phrase .derives_empty: False
call_phrase .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable  -> ( Choice ident type_specifier_without_ident ( Seq vec_prefix _disambiguate_template ) ( Seq mat_prefix _disambiguate_template ) ( Seq 'array' _disambiguate_template ) )
callable .reg_info.index: 341
callable .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
callable .derives_empty: False
callable .follow: {'('}
paren_expression  -> ( Choice ( Seq '(' expression ')' ) )
paren_expression .reg_info.index: 545
paren_expression .first: {'('}
paren_expression .derives_empty: False
paren_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list  -> ( Choice ( Seq '(' argument_expression_list/0.1 ')' ) )
argument_expression_list .reg_info.index: 938
argument_expression_list .first: {'('}
argument_expression_list .derives_empty: False
argument_expression_list .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
expression_comma_list  -> ( Choice ( Seq expression expression_comma_list/0.1 expression_comma_list/0.2 ) )
expression_comma_list .reg_info.index: 945
expression_comma_list .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression_comma_list .derives_empty: False
expression_comma_list .follow: {')'}
component_or_swizzle_specifier  -> ( Choice ( Seq '[' expression ']' component_or_swizzle_specifier/0.3 ) ( Seq '.' member_ident component_or_swizzle_specifier/1.2 ) ( Seq '.' swizzle_name component_or_swizzle_specifier/2.2 ) )
component_or_swizzle_specifier .reg_info.index: 963
component_or_swizzle_specifier .first: {'.' '['}
component_or_swizzle_specifier .derives_empty: False
component_or_swizzle_specifier .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
unary_expression  -> ( Choice singular_expression ( Seq '-' unary_expression ) ( Seq '!' unary_expression ) ( Seq '~' unary_expression ) ( Seq '*' unary_expression ) ( Seq '&' unary_expression ) )
unary_expression .reg_info.index: 364
unary_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
unary_expression .derives_empty: False
unary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression  -> ( Choice ( Seq primary_expression singular_expression/0.1 ) )
singular_expression .reg_info.index: 984
singular_expression .first: {'(' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
singular_expression .derives_empty: False
singular_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
lhs_expression  -> ( Choice ( Seq core_lhs_expression lhs_expression/0.1 ) ( Seq '*' lhs_expression ) ( Seq '&' lhs_expression ) )
lhs_expression .reg_info.index: 995
lhs_expression .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
lhs_expression .derives_empty: False
lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression  -> ( Choice ident ( Seq '(' lhs_expression ')' ) )
core_lhs_expression .reg_info.index: 374
core_lhs_expression .first: {'(' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
core_lhs_expression .derives_empty: False
core_lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
multiplicative_expression  -> ( Choice unary_expression ( Seq multiplicative_expression multiplicative_operator unary_expression ) )
multiplicative_expression .reg_info.index: 378
multiplicative_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_expression .derives_empty: False
multiplicative_expression .follow: {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator  -> ( Choice '*' '/' '%' )
multiplicative_operator .reg_info.index: 379
multiplicative_operator .first: {'%' '*' '/'}
multiplicative_operator .derives_empty: False
multiplicative_operator .follow: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression  -> ( Choice multiplicative_expression ( Seq additive_expression additive_operator multiplicative_expression ) )
additive_expression .reg_info.index: 382
additive_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression .derives_empty: False
additive_expression .follow: {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_operator  -> ( Choice '+' '-' )
additive_operator .reg_info.index: 383
additive_operator .first: {'+' '-'}
additive_operator .derives_empty: False
additive_operator .follow: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression  -> ( Choice additive_expression ( Seq unary_expression _shift_left unary_expression ) ( Seq unary_expression _shift_right unary_expression ) )
shift_expression .reg_info.index: 388
shift_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression .derives_empty: False
shift_expression .follow: {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
relational_expression  -> ( Choice shift_expression ( Seq shift_expression _less_than shift_expression ) ( Seq shift_expression _greater_than shift_expression ) ( Seq shift_expression _less_than_equal shift_expression ) ( Seq shift_expression _greater_than_equal shift_expression ) ( Seq shift_expression '==' shift_expression ) ( Seq shift_expression '!=' shift_expression ) )
relational_expression .reg_info.index: 400
relational_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
relational_expression .derives_empty: False
relational_expression .follow: {'&&' ')' ',' ':' ';' ']' '{' '||'}
short_circuit_and_expression  -> ( Choice relational_expression ( Seq short_circuit_and_expression '&&' relational_expression ) )
short_circuit_and_expression .reg_info.index: 404
short_circuit_and_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_and_expression .derives_empty: False
short_circuit_and_expression .follow: {'&&'}
short_circuit_or_expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) )
short_circuit_or_expression .reg_info.index: 407
short_circuit_or_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_or_expression .derives_empty: False
short_circuit_or_expression .follow: {'||'}
binary_or_expression  -> ( Choice unary_expression ( Seq binary_or_expression '|' unary_expression ) )
binary_or_expression .reg_info.index: 410
binary_or_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_or_expression .derives_empty: False
binary_or_expression .follow: {'|'}
binary_and_expression  -> ( Choice unary_expression ( Seq binary_and_expression '&' unary_expression ) )
binary_and_expression .reg_info.index: 413
binary_and_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_and_expression .derives_empty: False
binary_and_expression .follow: {'&'}
binary_xor_expression  -> ( Choice unary_expression ( Seq binary_xor_expression '^' unary_expression ) )
binary_xor_expression .reg_info.index: 416
binary_xor_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_xor_expression .derives_empty: False
binary_xor_expression .follow: {'^'}
bitwise_expression  -> ( Choice ( Seq binary_and_expression '&' unary_expression ) ( Seq binary_or_expression '|' unary_expression ) ( Seq binary_xor_expression '^' unary_expression ) )
bitwise_expression .reg_info.index: 417
bitwise_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
bitwise_expression .derives_empty: False
bitwise_expression .follow: {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) ( Seq short_circuit_and_expression '&&' relational_expression ) bitwise_expression )
expression .reg_info.index: 418
expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression .derives_empty: False
expression .follow: {')' ',' ':' ';' ']' '{'}
compound_statement  -> ( Choice ( Seq '{' compound_statement/0.1 '}' ) )
compound_statement .reg_info.index: 1103
compound_statement .first: {'{'}
compound_statement .derives_empty: False
compound_statement .follow: {'&' '(' '*' ';' '@' '_' 'alias' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
assignment_statement  -> ( Choice ( Seq lhs_expression assignment_statement/0.1 expression ) ( Seq '_' '=' expression ) )
assignment_statement .reg_info.index: 1114
assignment_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement .derives_empty: False
assignment_statement .follow: {')' ';'}
compound_assignment_operator  -> ( Choice '+=' '-=' '*=' '/=' '%=' '&=' '|=' '^=' _shift_right_assign _shift_left_assign )
compound_assignment_operator .reg_info.index: 430
compound_assignment_operator .first: {'%=' '&=' '*=' '+=' '-=' '/=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
compound_assignment_operator .derives_empty: False
compound_assignment_operator .follow: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
increment_statement  -> ( Choice ( Seq lhs_expression '++' ) )
increment_statement .reg_info.index: 550
increment_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement .derives_empty: False
increment_statement .follow: {')' ';'}
decrement_statement  -> ( Choice ( Seq lhs_expression '--' ) )
decrement_statement .reg_info.index: 551
decrement_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
decrement_statement .derives_empty: False
decrement_statement .follow: {')' ';'}
if_statement  -> ( Choice ( Seq if_clause if_statement/0.1 if_statement/0.2 ) )
if_statement .reg_info.index: 1138
if_statement .first: {'if'}
if_statement .derives_empty: False
if_statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_clause  -> ( Choice ( Seq 'if' expression compound_statement ) )
if_clause .reg_info.index: 553
if_clause .first: {'if'}
if_clause .derives_empty: False
if_clause .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause  -> ( Choice ( Seq 'else' 'if' expression compound_statement ) )
else_if_clause .reg_info.index: 554
else_if_clause .first: {'else'}
else_if_clause .derives_empty: False
else_if_clause .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause  -> ( Choice ( Seq 'else' compound_statement ) )
else_clause .reg_info.index: 555
else_clause .first: {'else'}
else_clause .derives_empty: False
else_clause .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement  -> ( Choice ( Seq 'switch' expression '{' switch_statement/0.3 '}' ) )
switch_statement .reg_info.index: 1159
switch_statement .first: {'switch'}
switch_statement .derives_empty: False
switch_statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_body  -> ( Choice case_clause default_alone_clause )
switch_body .reg_info.index: 449
switch_body .first: {'case' 'default'}
switch_body .derives_empty: False
switch_body .follow: {'case' 'default' '}'}
case_clause  -> ( Choice ( Seq 'case' case_selectors case_clause/0.2 compound_statement ) )
case_clause .reg_info.index: 1169
case_clause .first: {'case'}
case_clause .derives_empty: False
case_clause .follow: {'case' 'default' '}'}
default_alone_clause  -> ( Choice ( Seq 'default' default_alone_clause/0.1 compound_statement ) )
default_alone_clause .reg_info.index: 1175
default_alone_clause .first: {'default'}
default_alone_clause .derives_empty: False
default_alone_clause .follow: {'case' 'default' '}'}
case_selectors  -> ( Choice ( Seq case_selector case_selectors/0.1 case_selectors/0.2 ) )
case_selectors .reg_info.index: 1182
case_selectors .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'default' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selectors .derives_empty: False
case_selectors .follow: {':' '{'}
case_selector  -> ( Choice 'default' expression )
case_selector .reg_info.index: 459
case_selector .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'default' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selector .derives_empty: False
case_selector .follow: {',' ':' '{'}
loop_statement  -> ( Choice ( Seq 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' ) )
loop_statement .reg_info.index: 1193
loop_statement .first: {'loop'}
loop_statement .derives_empty: False
loop_statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement  -> ( Choice ( Seq 'for' '(' for_header ')' compound_statement ) )
for_statement .reg_info.index: 561
for_statement .first: {'for'}
for_statement .derives_empty: False
for_statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header  -> ( Choice ( Seq for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 ) )
for_header .reg_info.index: 1210
for_header .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'const' 'f16' 'f32' 'i32' 'let' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header .derives_empty: False
for_header .follow: {')'}
for_init  -> ( Choice variable_statement variable_updating_statement func_call_statement )
for_init .reg_info.index: 474
for_init .first: {'&' '(' '*' '_' 'array' 'atomic' 'bool' 'const' 'f16' 'f32' 'i32' 'let' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_init .derives_empty: False
for_init .follow: {';'}
for_update  -> ( Choice variable_updating_statement func_call_statement )
for_update .reg_info.index: 475
for_update .first: {'&' '(' '*' '_' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_update .derives_empty: False
for_update .follow: {')'}
while_statement  -> ( Choice ( Seq 'while' expression compound_statement ) )
while_statement .reg_info.index: 563
while_statement .first: {'while'}
while_statement .derives_empty: False
while_statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
break_statement  -> 'break'
break_statement .reg_info.index: 119
break_statement .first: {'break'}
break_statement .derives_empty: False
break_statement .follow: {}
break_if_statement  -> ( Choice ( Seq 'break' 'if' expression ';' ) )
break_if_statement .reg_info.index: 564
break_if_statement .first: {'break'}
break_if_statement .derives_empty: False
break_if_statement .follow: {'}'}
continue_statement  -> 'continue'
continue_statement .reg_info.index: 120
continue_statement .first: {'continue'}
continue_statement .derives_empty: False
continue_statement .follow: {}
continuing_statement  -> ( Choice ( Seq 'continuing' continuing_compound_statement ) )
continuing_statement .reg_info.index: 565
continuing_statement .first: {'continuing'}
continuing_statement .derives_empty: False
continuing_statement .follow: {'}'}
continuing_compound_statement  -> ( Choice ( Seq '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' ) )
continuing_compound_statement .reg_info.index: 1235
continuing_compound_statement .first: {'{'}
continuing_compound_statement .derives_empty: False
continuing_compound_statement .follow: {'}'}
return_statement  -> ( Choice ( Seq 'return' return_statement/0.1 ) )
return_statement .reg_info.index: 1240
return_statement .first: {'return'}
return_statement .derives_empty: False
return_statement .follow: {';'}
func_call_statement  -> call_phrase
func_call_statement .reg_info.index: 334
func_call_statement .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement .derives_empty: False
func_call_statement .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
const_assert_statement  -> ( Choice ( Seq 'const_assert' expression ) )
const_assert_statement .reg_info.index: 568
const_assert_statement .first: {'const_assert'}
const_assert_statement .derives_empty: False
const_assert_statement .follow: {';'}
statement  -> ( Choice ';' ( Seq return_statement ';' ) if_statement switch_statement loop_statement for_statement while_statement ( Seq func_call_statement ';' ) ( Seq variable_statement ';' ) ( Seq break_statement ';' ) ( Seq continue_statement ';' ) ( Seq 'discard' ';' ) ( Seq variable_updating_statement ';' ) compound_statement ( Seq const_assert_statement ';' ) )
statement .reg_info.index: 500
statement .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement .derives_empty: False
statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement  -> ( Choice assignment_statement increment_statement decrement_statement )
variable_updating_statement .reg_info.index: 504
variable_updating_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement .derives_empty: False
variable_updating_statement .follow: {')' ';'}
function_decl  -> ( Choice ( Seq function_decl/0.0 function_header compound_statement ) )
function_decl .reg_info.index: 1283
function_decl .first: {'@' 'fn'}
function_decl .derives_empty: False
function_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header  -> ( Choice ( Seq 'fn' ident '(' function_header/0.3 ')' function_header/0.5 ) )
function_header .reg_info.index: 1294
function_header .first: {'fn'}
function_header .derives_empty: False
function_header .follow: {'{'}
param_list  -> ( Choice ( Seq param param_list/0.1 param_list/0.2 ) )
param_list .reg_info.index: 1301
param_list .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list .derives_empty: False
param_list .follow: {')'}
param  -> ( Choice ( Seq param/0.0 ident ':' type_specifier ) )
param .reg_info.index: 1308
param .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param .derives_empty: False
param .follow: {')' ','}
enable_directive  -> ( Choice ( Seq 'enable' extension_name ';' ) )
enable_directive .reg_info.index: 573
enable_directive .first: {'enable'}
enable_directive .derives_empty: False
enable_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}
ident_pattern_token  -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
ident_pattern_token .reg_info.index: 128
ident_pattern_token .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident_pattern_token .derives_empty: False
ident_pattern_token .follow: {}
interpolation_type_name  -> ( Choice 'perspective' 'linear' 'flat' )
interpolation_type_name .reg_info.index: 520
interpolation_type_name .first: {'flat' 'linear' 'perspective'}
interpolation_type_name .derives_empty: False
interpolation_type_name .follow: {')' ','}
interpolation_sample_name  -> ( Choice 'center' 'centroid' 'sample' )
interpolation_sample_name .reg_info.index: 521
interpolation_sample_name .first: {'center' 'centroid' 'sample'}
interpolation_sample_name .derives_empty: False
interpolation_sample_name .follow: {')' ','}
builtin_value_name  -> ( Choice 'vertex_index' 'instance_index' 'position' 'front_facing' 'frag_depth' 'local_invocation_id' 'local_invocation_index' 'global_invocation_id' 'workgroup_id' 'num_workgroups' 'sample_index' 'sample_mask' )
builtin_value_name .reg_info.index: 522
builtin_value_name .first: {'frag_depth' 'front_facing' 'global_invocation_id' 'instance_index' 'local_invocation_id' 'local_invocation_index' 'num_workgroups' 'position' 'sample_index' 'sample_mask' 'vertex_index' 'workgroup_id'}
builtin_value_name .derives_empty: False
builtin_value_name .follow: {')' ','}
access_mode  -> ( Choice 'read' 'write' 'read_write' )
access_mode .reg_info.index: 523
access_mode .first: {'read' 'read_write' 'write'}
access_mode .derives_empty: False
access_mode .follow: {/\u200B_template_args_end/}
address_space  -> ( Choice 'function' 'private' 'workgroup' 'uniform' 'storage' )
address_space .reg_info.index: 524
address_space .first: {'function' 'private' 'storage' 'uniform' 'workgroup'}
address_space .derives_empty: False
address_space .follow: {',' /\u200B_template_args_end/}
texel_format  -> ( Choice 'rgba8unorm' 'rgba8snorm' 'rgba8uint' 'rgba8sint' 'rgba16uint' 'rgba16sint' 'rgba16float' 'r32uint' 'r32sint' 'r32float' 'rg32uint' 'rg32sint' 'rg32float' 'rgba32uint' 'rgba32sint' 'rgba32float' 'bgra8unorm' )
texel_format .reg_info.index: 525
texel_format .first: {'bgra8unorm' 'r32float' 'r32sint' 'r32uint' 'rg32float' 'rg32sint' 'rg32uint' 'rgba16float' 'rgba16sint' 'rgba16uint' 'rgba32float' 'rgba32sint' 'rgba32uint' 'rgba8sint' 'rgba8snorm' 'rgba8uint' 'rgba8unorm'}
texel_format .derives_empty: False
texel_format .follow: {','}
extension_name  -> 'f16'
extension_name .reg_info.index: 62
extension_name .first: {'f16'}
extension_name .derives_empty: False
extension_name .follow: {}
swizzle_name  -> ( Choice '/[rgba]/' '/[rgba][rgba]/' '/[rgba][rgba][rgba]/' '/[rgba][rgba][rgba][rgba]/' '/[xyzw]/' '/[xyzw][xyzw]/' '/[xyzw][xyzw][xyzw]/' '/[xyzw][xyzw][xyzw][xyzw]/' )
swizzle_name .reg_info.index: 526
swizzle_name .first: {'/[rgba]/' '/[rgba][rgba]/' '/[rgba][rgba][rgba]/' '/[rgba][rgba][rgba][rgba]/' '/[xyzw]/' '/[xyzw][xyzw]/' '/[xyzw][xyzw][xyzw]/' '/[xyzw][xyzw][xyzw][xyzw]/'}
swizzle_name .derives_empty: False
swizzle_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
_comment  -> /\/\/.*/
_comment .reg_info.index: 180
_comment .first: {/\/\/.*/}
_comment .derives_empty: False
_comment .follow: {}
_blankspace  -> /[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_blankspace .reg_info.index: 181
_blankspace .first: {/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/}
_blankspace .derives_empty: False
_blankspace .follow: {}
_block_comment  -> /\u200B_block_comment/
_block_comment .reg_info.index: 182
_block_comment .first: {/\u200B_block_comment/}
_block_comment .derives_empty: False
_block_comment .follow: {}
_less_than_equal  -> /\u200B_less_than_equal/
_less_than_equal .reg_info.index: 183
_less_than_equal .first: {/\u200B_less_than_equal/}
_less_than_equal .derives_empty: False
_less_than_equal .follow: {}
_disambiguate_template  -> /\u200B_disambiguate_template/
_disambiguate_template .reg_info.index: 184
_disambiguate_template .first: {/\u200B_disambiguate_template/}
_disambiguate_template .derives_empty: False
_disambiguate_template .follow: {}
_template_args_end  -> /\u200B_template_args_end/
_template_args_end .reg_info.index: 185
_template_args_end .first: {/\u200B_template_args_end/}
_template_args_end .derives_empty: False
_template_args_end .follow: {}
_shift_right_assign  -> /\u200B_shift_right_assign/
_shift_right_assign .reg_info.index: 186
_shift_right_assign .first: {/\u200B_shift_right_assign/}
_shift_right_assign .derives_empty: False
_shift_right_assign .follow: {}
_error_sentinel  -> /\u200B_error_sentinel/
_error_sentinel .reg_info.index: 187
_error_sentinel .first: {/\u200B_error_sentinel/}
_error_sentinel .derives_empty: False
_error_sentinel .follow: {}
_shift_left_assign  -> /\u200B_shift_left_assign/
_shift_left_assign .reg_info.index: 188
_shift_left_assign .first: {/\u200B_shift_left_assign/}
_shift_left_assign .derives_empty: False
_shift_left_assign .follow: {}
_template_args_start  -> /\u200B_template_args_start/
_template_args_start .reg_info.index: 189
_template_args_start .first: {/\u200B_template_args_start/}
_template_args_start .derives_empty: False
_template_args_start .follow: {}
_shift_right  -> /\u200B_shift_right/
_shift_right .reg_info.index: 190
_shift_right .first: {/\u200B_shift_right/}
_shift_right .derives_empty: False
_shift_right .follow: {}
_less_than  -> /\u200B_less_than/
_less_than .reg_info.index: 191
_less_than .first: {/\u200B_less_than/}
_less_than .derives_empty: False
_less_than .follow: {}
_shift_left  -> /\u200B_shift_left/
_shift_left .reg_info.index: 192
_shift_left .first: {/\u200B_shift_left/}
_shift_left .derives_empty: False
_shift_left .follow: {}
_greater_than_equal  -> /\u200B_greater_than_equal/
_greater_than_equal .reg_info.index: 193
_greater_than_equal .first: {/\u200B_greater_than_equal/}
_greater_than_equal .derives_empty: False
_greater_than_equal .follow: {}
_greater_than  -> /\u200B_greater_than/
_greater_than .reg_info.index: 194
_greater_than .first: {/\u200B_greater_than/}
_greater_than .derives_empty: False
_greater_than .follow: {}
language  -> ( Choice ( Seq translation_unit EndOfText ) )
language .reg_info.index: 574
language .first: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}
language .derives_empty: False
language .follow: {}
translation_unit/0.0  -> ( Choice translation_unit/0.0/0 ε )
translation_unit/0.0 .reg_info.index: 1419
translation_unit/0.0 .first: {'enable' ε}
translation_unit/0.0 .derives_empty: True
translation_unit/0.0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1  -> ( Choice translation_unit/0.1/0 ε )
translation_unit/0.1 .reg_info.index: 1423
translation_unit/0.1 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' ε}
translation_unit/0.1 .derives_empty: True
translation_unit/0.1 .follow: {EndOfText}
attrib_end/0.0  -> ( Choice ',' ε )
attrib_end/0.0 .reg_info.index: 253
attrib_end/0.0 .first: {',' ε}
attrib_end/0.0 .derives_empty: True
attrib_end/0.0 .follow: {')' ':' '{' '}'}
array_type_specifier/0.4  -> ( Choice ( Seq ',' element_count_expression ) ε )
array_type_specifier/0.4 .reg_info.index: 260
array_type_specifier/0.4 .first: {',' ε}
array_type_specifier/0.4 .derives_empty: True
array_type_specifier/0.4 .follow: {/\u200B_template_args_end/}
struct_body_decl/0.2  -> ( Choice struct_body_decl/0.2/0 ε )
struct_body_decl/0.2 .reg_info.index: 1431
struct_body_decl/0.2 .first: {',' ε}
struct_body_decl/0.2 .derives_empty: True
struct_body_decl/0.2 .follow: {',' '}'}
struct_body_decl/0.3  -> ( Choice ',' ε )
struct_body_decl/0.3 .reg_info.index: 253
struct_body_decl/0.3 .first: {',' ε}
struct_body_decl/0.3 .derives_empty: True
struct_body_decl/0.3 .follow: {')' ':' '{' '}'}
struct_member/0.0  -> ( Choice struct_member/0.0/0 ε )
struct_member/0.0 .reg_info.index: 1436
struct_member/0.0 .first: {'@' ε}
struct_member/0.0 .derives_empty: True
struct_member/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
type_specifier_without_ident/7.6  -> ( Choice ( Seq ',' access_mode ) ε )
type_specifier_without_ident/7.6 .reg_info.index: 303
type_specifier_without_ident/7.6 .first: {',' ε}
type_specifier_without_ident/7.6 .derives_empty: True
type_specifier_without_ident/7.6 .follow: {/\u200B_template_args_end/}
variable_decl/0.2  -> ( Choice variable_qualifier ε )
variable_decl/0.2 .reg_info.index: 318
variable_decl/0.2 .first: {/\u200B_template_args_start/ ε}
variable_decl/0.2 .derives_empty: True
variable_decl/0.2 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
optionally_typed_ident/0.1  -> ( Choice ( Seq ':' type_specifier ) ε )
optionally_typed_ident/0.1 .reg_info.index: 321
optionally_typed_ident/0.1 .first: {':' ε}
optionally_typed_ident/0.1 .derives_empty: True
optionally_typed_ident/0.1 .follow: {';' '='}
variable_qualifier/0.2  -> ( Choice ( Seq ',' access_mode ) ε )
variable_qualifier/0.2 .reg_info.index: 303
variable_qualifier/0.2 .first: {',' ε}
variable_qualifier/0.2 .derives_empty: True
variable_qualifier/0.2 .follow: {/\u200B_template_args_end/}
global_variable_decl/0.0  -> ( Choice global_variable_decl/0.0/0 ε )
global_variable_decl/0.0 .reg_info.index: 1450
global_variable_decl/0.0 .first: {'@' ε}
global_variable_decl/0.0 .derives_empty: True
global_variable_decl/0.0 .follow: {'var'}
global_variable_decl/0.2  -> ( Choice ( Seq '=' expression ) ε )
global_variable_decl/0.2 .reg_info.index: 325
global_variable_decl/0.2 .first: {'=' ε}
global_variable_decl/0.2 .derives_empty: True
global_variable_decl/0.2 .follow: {';'}
global_constant_decl/1.0  -> ( Choice global_constant_decl/1.0/0 ε )
global_constant_decl/1.0 .reg_info.index: 1457
global_constant_decl/1.0 .first: {'@' ε}
global_constant_decl/1.0 .derives_empty: True
global_constant_decl/1.0 .follow: {'override'}
global_constant_decl/1.3  -> ( Choice ( Seq '=' expression ) ε )
global_constant_decl/1.3 .reg_info.index: 325
global_constant_decl/1.3 .first: {'=' ε}
global_constant_decl/1.3 .derives_empty: True
global_constant_decl/1.3 .follow: {';'}
argument_expression_list/0.1  -> ( Choice expression_comma_list ε )
argument_expression_list/0.1 .reg_info.index: 344
argument_expression_list/0.1 .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ ε}
argument_expression_list/0.1 .derives_empty: True
argument_expression_list/0.1 .follow: {')'}
expression_comma_list/0.1  -> ( Choice expression_comma_list/0.1/0 ε )
expression_comma_list/0.1 .reg_info.index: 1465
expression_comma_list/0.1 .first: {',' ε}
expression_comma_list/0.1 .derives_empty: True
expression_comma_list/0.1 .follow: {')' ','}
expression_comma_list/0.2  -> ( Choice ',' ε )
expression_comma_list/0.2 .reg_info.index: 253
expression_comma_list/0.2 .first: {',' ε}
expression_comma_list/0.2 .derives_empty: True
expression_comma_list/0.2 .follow: {')' ':' '{' '}'}
component_or_swizzle_specifier/0.3  -> ( Choice component_or_swizzle_specifier ε )
component_or_swizzle_specifier/0.3 .reg_info.index: 351
component_or_swizzle_specifier/0.3 .first: {'.' '[' ε}
component_or_swizzle_specifier/0.3 .derives_empty: True
component_or_swizzle_specifier/0.3 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2  -> ( Choice component_or_swizzle_specifier ε )
component_or_swizzle_specifier/1.2 .reg_info.index: 351
component_or_swizzle_specifier/1.2 .first: {'.' '[' ε}
component_or_swizzle_specifier/1.2 .derives_empty: True
component_or_swizzle_specifier/1.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2  -> ( Choice component_or_swizzle_specifier ε )
component_or_swizzle_specifier/2.2 .reg_info.index: 351
component_or_swizzle_specifier/2.2 .first: {'.' '[' ε}
component_or_swizzle_specifier/2.2 .derives_empty: True
component_or_swizzle_specifier/2.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
singular_expression/0.1  -> ( Choice component_or_swizzle_specifier ε )
singular_expression/0.1 .reg_info.index: 351
singular_expression/0.1 .first: {'.' '[' ε}
singular_expression/0.1 .derives_empty: True
singular_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
lhs_expression/0.1  -> ( Choice component_or_swizzle_specifier ε )
lhs_expression/0.1 .reg_info.index: 351
lhs_expression/0.1 .first: {'.' '[' ε}
lhs_expression/0.1 .derives_empty: True
lhs_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
compound_statement/0.1  -> ( Choice compound_statement/0.1/0 ε )
compound_statement/0.1 .reg_info.index: 1475
compound_statement/0.1 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
compound_statement/0.1 .derives_empty: True
compound_statement/0.1 .follow: {'}'}
assignment_statement/0.1  -> ( Choice '=' compound_assignment_operator )
assignment_statement/0.1 .reg_info.index: 424
assignment_statement/0.1 .first: {'%=' '&=' '*=' '+=' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
assignment_statement/0.1 .derives_empty: False
assignment_statement/0.1 .follow: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
if_statement/0.1  -> ( Choice if_statement/0.1/0 ε )
if_statement/0.1 .reg_info.index: 1480
if_statement/0.1 .first: {'else' ε}
if_statement/0.1 .derives_empty: True
if_statement/0.1 .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2  -> ( Choice else_clause ε )
if_statement/0.2 .reg_info.index: 438
if_statement/0.2 .first: {'else' ε}
if_statement/0.2 .derives_empty: True
if_statement/0.2 .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.3  -> ( Choice switch_statement/0.3/0 )
switch_statement/0.3 .reg_info.index: 1397
switch_statement/0.3 .first: {'case' 'default' ε}
switch_statement/0.3 .derives_empty: True
switch_statement/0.3 .follow: {'}'}
case_clause/0.2  -> ( Choice ':' ε )
case_clause/0.2 .reg_info.index: 451
case_clause/0.2 .first: {':' ε}
case_clause/0.2 .derives_empty: True
case_clause/0.2 .follow: {'{'}
default_alone_clause/0.1  -> ( Choice ':' ε )
default_alone_clause/0.1 .reg_info.index: 451
default_alone_clause/0.1 .first: {':' ε}
default_alone_clause/0.1 .derives_empty: True
default_alone_clause/0.1 .follow: {'{'}
case_selectors/0.1  -> ( Choice case_selectors/0.1/0 ε )
case_selectors/0.1 .reg_info.index: 1487
case_selectors/0.1 .first: {',' ε}
case_selectors/0.1 .derives_empty: True
case_selectors/0.1 .follow: {',' ':' '{'}
case_selectors/0.2  -> ( Choice ',' ε )
case_selectors/0.2 .reg_info.index: 253
case_selectors/0.2 .first: {',' ε}
case_selectors/0.2 .derives_empty: True
case_selectors/0.2 .follow: {')' ':' '{' '}'}
loop_statement/0.2  -> ( Choice loop_statement/0.2/0 ε )
loop_statement/0.2 .reg_info.index: 1492
loop_statement/0.2 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
loop_statement/0.2 .derives_empty: True
loop_statement/0.2 .follow: {'continuing' '}'}
loop_statement/0.3  -> ( Choice continuing_statement ε )
loop_statement/0.3 .reg_info.index: 461
loop_statement/0.3 .first: {'continuing' ε}
loop_statement/0.3 .derives_empty: True
loop_statement/0.3 .follow: {'}'}
for_header/0.0  -> ( Choice for_init ε )
for_header/0.0 .reg_info.index: 466
for_header/0.0 .first: {'&' '(' '*' '_' 'array' 'atomic' 'bool' 'const' 'f16' 'f32' 'i32' 'let' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
for_header/0.0 .derives_empty: True
for_header/0.0 .follow: {';'}
for_header/0.2  -> ( Choice expression ε )
for_header/0.2 .reg_info.index: 467
for_header/0.2 .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ ε}
for_header/0.2 .derives_empty: True
for_header/0.2 .follow: {';'}
for_header/0.4  -> ( Choice for_update ε )
for_header/0.4 .reg_info.index: 469
for_header/0.4 .first: {'&' '(' '*' '_' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
for_header/0.4 .derives_empty: True
for_header/0.4 .follow: {')'}
continuing_compound_statement/0.1  -> ( Choice continuing_compound_statement/0.1/0 ε )
continuing_compound_statement/0.1 .reg_info.index: 1500
continuing_compound_statement/0.1 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
continuing_compound_statement/0.1 .derives_empty: True
continuing_compound_statement/0.1 .follow: {'break' '}'}
continuing_compound_statement/0.2  -> ( Choice break_if_statement ε )
continuing_compound_statement/0.2 .reg_info.index: 481
continuing_compound_statement/0.2 .first: {'break' ε}
continuing_compound_statement/0.2 .derives_empty: True
continuing_compound_statement/0.2 .follow: {'}'}
return_statement/0.1  -> ( Choice expression ε )
return_statement/0.1 .reg_info.index: 467
return_statement/0.1 .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ ε}
return_statement/0.1 .derives_empty: True
return_statement/0.1 .follow: {';'}
function_decl/0.0  -> ( Choice function_decl/0.0/0 ε )
function_decl/0.0 .reg_info.index: 1506
function_decl/0.0 .first: {'@' ε}
function_decl/0.0 .derives_empty: True
function_decl/0.0 .follow: {'fn'}
function_header/0.3  -> ( Choice param_list ε )
function_header/0.3 .reg_info.index: 508
function_header/0.3 .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
function_header/0.3 .derives_empty: True
function_header/0.3 .follow: {')'}
function_header/0.5  -> ( Choice ( Seq '->' function_header/0.5/0.1 type_specifier ) ε )
function_header/0.5 .reg_info.index: 1513
function_header/0.5 .first: {'->' ε}
function_header/0.5 .derives_empty: True
function_header/0.5 .follow: {'{'}
param_list/0.1  -> ( Choice param_list/0.1/0 ε )
param_list/0.1 .reg_info.index: 1517
param_list/0.1 .first: {',' ε}
param_list/0.1 .derives_empty: True
param_list/0.1 .follow: {')' ','}
param_list/0.2  -> ( Choice ',' ε )
param_list/0.2 .reg_info.index: 253
param_list/0.2 .first: {',' ε}
param_list/0.2 .derives_empty: True
param_list/0.2 .follow: {')' ':' '{' '}'}
param/0.0  -> ( Choice param/0.0/0 ε )
param/0.0 .reg_info.index: 1522
param/0.0 .first: {'@' ε}
param/0.0 .derives_empty: True
param/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.3/0  -> ( Choice ( Seq switch_body switch_statement/0.3/0 ) ε )
switch_statement/0.3/0 .reg_info.index: 1396
switch_statement/0.3/0 .first: {'case' 'default' ε}
switch_statement/0.3/0 .derives_empty: True
switch_statement/0.3/0 .follow: {'}'}
translation_unit/0.0/0  -> ( Choice ( Seq global_directive translation_unit/0.0/0 ) ε )
translation_unit/0.0/0 .reg_info.index: 1417
translation_unit/0.0/0 .first: {'enable' ε}
translation_unit/0.0/0 .derives_empty: True
translation_unit/0.0/0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0  -> ( Choice ( Seq global_decl translation_unit/0.1/0 ) ε )
translation_unit/0.1/0 .reg_info.index: 1421
translation_unit/0.1/0 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' ε}
translation_unit/0.1/0 .derives_empty: True
translation_unit/0.1/0 .follow: {EndOfText}
struct_body_decl/0.2/0  -> ( Choice ( Seq struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 ) ε )
struct_body_decl/0.2/0 .reg_info.index: 1541
struct_body_decl/0.2/0 .first: {',' ε}
struct_body_decl/0.2/0 .derives_empty: True
struct_body_decl/0.2/0 .follow: {',' '}'}
struct_member/0.0/0  -> ( Choice ( Seq attribute struct_member/0.0/0 ) ε )
struct_member/0.0/0 .reg_info.index: 1434
struct_member/0.0/0 .first: {'@' ε}
struct_member/0.0/0 .derives_empty: True
struct_member/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
global_variable_decl/0.0/0  -> ( Choice ( Seq attribute global_variable_decl/0.0/0 ) ε )
global_variable_decl/0.0/0 .reg_info.index: 1448
global_variable_decl/0.0/0 .first: {'@' ε}
global_variable_decl/0.0/0 .derives_empty: True
global_variable_decl/0.0/0 .follow: {'var'}
global_constant_decl/1.0/0  -> ( Choice ( Seq attribute global_constant_decl/1.0/0 ) ε )
global_constant_decl/1.0/0 .reg_info.index: 1455
global_constant_decl/1.0/0 .first: {'@' ε}
global_constant_decl/1.0/0 .derives_empty: True
global_constant_decl/1.0/0 .follow: {'override'}
expression_comma_list/0.1/0  -> ( Choice ( Seq expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 ) ε )
expression_comma_list/0.1/0 .reg_info.index: 1560
expression_comma_list/0.1/0 .first: {',' ε}
expression_comma_list/0.1/0 .derives_empty: True
expression_comma_list/0.1/0 .follow: {')' ','}
compound_statement/0.1/0  -> ( Choice ( Seq statement compound_statement/0.1/0 ) ε )
compound_statement/0.1/0 .reg_info.index: 1473
compound_statement/0.1/0 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
compound_statement/0.1/0 .derives_empty: True
compound_statement/0.1/0 .follow: {'}'}
if_statement/0.1/0  -> ( Choice ( Seq else_if_clause if_statement/0.1/0 ) ε )
if_statement/0.1/0 .reg_info.index: 1478
if_statement/0.1/0 .first: {'else' ε}
if_statement/0.1/0 .derives_empty: True
if_statement/0.1/0 .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
case_selectors/0.1/0  -> ( Choice ( Seq case_selectors/0.1/0/0.0 case_selectors/0.1/0 ) ε )
case_selectors/0.1/0 .reg_info.index: 1575
case_selectors/0.1/0 .first: {',' ε}
case_selectors/0.1/0 .derives_empty: True
case_selectors/0.1/0 .follow: {',' ':' '{'}
loop_statement/0.2/0  -> ( Choice ( Seq statement loop_statement/0.2/0 ) ε )
loop_statement/0.2/0 .reg_info.index: 1490
loop_statement/0.2/0 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
loop_statement/0.2/0 .derives_empty: True
loop_statement/0.2/0 .follow: {'continuing' '}'}
continuing_compound_statement/0.1/0  -> ( Choice ( Seq statement continuing_compound_statement/0.1/0 ) ε )
continuing_compound_statement/0.1/0 .reg_info.index: 1498
continuing_compound_statement/0.1/0 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
continuing_compound_statement/0.1/0 .derives_empty: True
continuing_compound_statement/0.1/0 .follow: {'break' '}'}
function_decl/0.0/0  -> ( Choice ( Seq attribute function_decl/0.0/0 ) ε )
function_decl/0.0/0 .reg_info.index: 1504
function_decl/0.0/0 .first: {'@' ε}
function_decl/0.0/0 .derives_empty: True
function_decl/0.0/0 .follow: {'fn'}
function_header/0.5/0.1  -> ( Choice function_header/0.5/0.1/0 ε )
function_header/0.5/0.1 .reg_info.index: 1603
function_header/0.5/0.1 .first: {'@' ε}
function_header/0.5/0.1 .derives_empty: True
function_header/0.5/0.1 .follow: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list/0.1/0  -> ( Choice ( Seq param_list/0.1/0/0.0 param_list/0.1/0 ) ε )
param_list/0.1/0 .reg_info.index: 1595
param_list/0.1/0 .first: {',' ε}
param_list/0.1/0 .derives_empty: True
param_list/0.1/0 .follow: {')' ','}
param/0.0/0  -> ( Choice ( Seq attribute param/0.0/0 ) ε )
param/0.0/0 .reg_info.index: 1520
param/0.0/0 .first: {'@' ε}
param/0.0/0 .derives_empty: True
param/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_body_decl/0.2/0/0.0  -> ( Choice ( Seq ',' struct_member ) )
struct_body_decl/0.2/0/0.0 .reg_info.index: 1537
struct_body_decl/0.2/0/0.0 .first: {','}
struct_body_decl/0.2/0/0.0 .derives_empty: False
struct_body_decl/0.2/0/0.0 .follow: {',' '}'}
expression_comma_list/0.1/0/0.0  -> ( Choice ( Seq ',' expression ) )
expression_comma_list/0.1/0/0.0 .reg_info.index: 1556
expression_comma_list/0.1/0/0.0 .first: {','}
expression_comma_list/0.1/0/0.0 .derives_empty: False
expression_comma_list/0.1/0/0.0 .follow: {')' ','}
case_selectors/0.1/0/0.0  -> ( Choice ( Seq ',' case_selector ) )
case_selectors/0.1/0/0.0 .reg_info.index: 1571
case_selectors/0.1/0/0.0 .first: {','}
case_selectors/0.1/0/0.0 .derives_empty: False
case_selectors/0.1/0/0.0 .follow: {',' ':' '{'}
param_list/0.1/0/0.0  -> ( Choice ( Seq ',' param ) )
param_list/0.1/0/0.0 .reg_info.index: 1591
param_list/0.1/0/0.0 .first: {','}
param_list/0.1/0/0.0 .derives_empty: False
param_list/0.1/0/0.0 .follow: {')' ','}
function_header/0.5/0.1/0  -> ( Choice ( Seq attribute function_header/0.5/0.1/0 ) ε )
function_header/0.5/0.1/0 .reg_info.index: 1601
function_header/0.5/0.1/0 .first: {'@' ε}
function_header/0.5/0.1/0 .derives_empty: True
function_header/0.5/0.1/0 .follow: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

=LALR1 item sets:
#0
language -> · translation_unit EndOfText : {EndOfText}
global_directive -> · 'enable' extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit -> · translation_unit/0.0 translation_unit/0.1 : {EndOfText}
translation_unit/0.0 -> · translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> · global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#1
language -> translation_unit · EndOfText : {EndOfText}

#2
translation_unit -> translation_unit/0.0 · translation_unit/0.1 : {EndOfText}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'must_use' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
const_assert_statement -> · 'const_assert' expression : {';'}
function_decl -> · function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> · function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_constant_decl -> · 'const' optionally_typed_ident '=' expression : {';'}
global_constant_decl -> · global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}
global_constant_decl/1.0 -> · global_constant_decl/1.0/0 : {'override'}
global_constant_decl/1.0/0 -> · attribute global_constant_decl/1.0/0 : {'override'}
global_decl -> · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_constant_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_variable_decl -> · global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> · global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}
struct_decl -> · 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1 -> · translation_unit/0.1/0 : {EndOfText}
translation_unit/0.1/0 -> · global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> · 'alias' ident '=' type_specifier : {';'}

#3
translation_unit/0.0 -> translation_unit/0.0/0 · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#4
translation_unit/0.0/0 -> global_directive · translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_directive -> · 'enable' extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> · global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#5
global_directive -> 'enable' · extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}
extension_name -> · 'f16' : {';'}

#6
global_directive -> 'enable' extension_name · ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}

#7
extension_name -> 'f16' · : {';'}

#8
translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#9
translation_unit -> translation_unit/0.0 translation_unit/0.1 · : {EndOfText}

#10
translation_unit/0.1 -> translation_unit/0.1/0 · : {EndOfText}

#11
translation_unit/0.1/0 -> global_decl · translation_unit/0.1/0 : {EndOfText}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'must_use' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
const_assert_statement -> · 'const_assert' expression : {';'}
function_decl -> · function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> · function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_constant_decl -> · 'const' optionally_typed_ident '=' expression : {';'}
global_constant_decl -> · global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}
global_constant_decl/1.0 -> · global_constant_decl/1.0/0 : {'override'}
global_constant_decl/1.0/0 -> · attribute global_constant_decl/1.0/0 : {'override'}
global_decl -> · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_constant_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_variable_decl -> · global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> · global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}
struct_decl -> · 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0 -> · global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> · 'alias' ident '=' type_specifier : {';'}

#12
global_decl -> ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#13
global_decl -> global_variable_decl · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#14
global_decl -> global_constant_decl · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#15
global_decl -> type_alias_decl · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#16
global_decl -> struct_decl · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#17
global_decl -> function_decl · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#18
global_decl -> const_assert_statement · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#19
global_variable_decl -> global_variable_decl/0.0 · variable_decl global_variable_decl/0.2 : {';'}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}

#20
global_constant_decl -> 'const' · optionally_typed_ident '=' expression : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#21
global_constant_decl -> global_constant_decl/1.0 · 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}

#22
type_alias_decl -> 'alias' · ident '=' type_specifier : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'='}

#23
struct_decl -> 'struct' · ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'{'}

#24
function_decl -> function_decl/0.0 · function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header -> · 'fn' ident '(' function_header/0.3 ')' function_header/0.5 : {'{'}

#25
const_assert_statement -> 'const_assert' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#26
global_variable_decl/0.0 -> global_variable_decl/0.0/0 · : {'var'}

#27
global_constant_decl/1.0 -> global_constant_decl/1.0/0 · : {'override'}

#28
function_decl/0.0 -> function_decl/0.0/0 · : {'fn'}

#29
function_decl/0.0/0 -> attribute · function_decl/0.0/0 : {'fn'}
global_constant_decl/1.0/0 -> attribute · global_constant_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> attribute · global_variable_decl/0.0/0 : {'var'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'must_use' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_constant_decl/1.0/0 -> · attribute global_constant_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}

#30
attribute -> '@' · 'align' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'binding' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'builtin' '(' builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'group' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'id' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'location' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'must_use' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'workgroup_size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#31
attribute -> '@' 'align' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#32
attribute -> '@' 'binding' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#33
attribute -> '@' 'builtin' · '(' builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#34
attribute -> '@' 'const' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#35
attribute -> '@' 'group' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#36
attribute -> '@' 'id' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#37
attribute -> '@' 'interpolate' · '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' · '(' interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#38
attribute -> '@' 'invariant' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#39
attribute -> '@' 'location' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#40
attribute -> '@' 'must_use' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#41
attribute -> '@' 'size' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#42
attribute -> '@' 'workgroup_size' · '(' expression ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' · '(' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#43
attribute -> '@' 'vertex' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#44
attribute -> '@' 'fragment' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#45
attribute -> '@' 'compute' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#46
global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 · : {'var'}

#47
global_constant_decl/1.0/0 -> attribute global_constant_decl/1.0/0 · : {'override'}

#48
function_decl/0.0/0 -> attribute function_decl/0.0/0 · : {'fn'}

#49
const_assert_statement -> 'const_assert' expression · : {';'}

#50
expression -> relational_expression · : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> relational_expression · : {'&&'}
short_circuit_or_expression -> relational_expression · : {'||'}

#51
expression -> short_circuit_or_expression · '||' relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression · '||' relational_expression : {'||'}

#52
expression -> short_circuit_and_expression · '&&' relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression · '&&' relational_expression : {'&&'}

#53
expression -> bitwise_expression · : {')' ',' ':' ';' ']' '{'}

#54
relational_expression -> shift_expression · '!=' shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · '==' shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · _greater_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · _less_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
_greater_than -> · /\u200B_greater_than/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_greater_than_equal -> · /\u200B_greater_than_equal/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than -> · /\u200B_less_than/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than_equal -> · /\u200B_less_than_equal/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#55
binary_and_expression -> binary_and_expression · '&' unary_expression : {'&'}
bitwise_expression -> binary_and_expression · '&' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#56
binary_or_expression -> binary_or_expression · '|' unary_expression : {'|'}
bitwise_expression -> binary_or_expression · '|' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#57
binary_xor_expression -> binary_xor_expression · '^' unary_expression : {'^'}
bitwise_expression -> binary_xor_expression · '^' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#58
additive_expression -> additive_expression · additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> additive_expression · : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_operator -> · '+' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_operator -> · '-' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#59
binary_and_expression -> unary_expression · : {'&'}
binary_or_expression -> unary_expression · : {'|'}
binary_xor_expression -> unary_expression · : {'^'}
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> unary_expression · _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> unary_expression · _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
_shift_left -> · /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> · /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#60
additive_expression -> multiplicative_expression · : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression · multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> · '%' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '*' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '/' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#61
unary_expression -> singular_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#62
unary_expression -> '-' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#63
unary_expression -> '!' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#64
unary_expression -> '~' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#65
unary_expression -> '*' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#66
unary_expression -> '&' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#67
singular_expression -> primary_expression · singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression/0.1 -> · component_or_swizzle_specifier : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#68
callable -> ident · : {'('}
primary_expression -> ident · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#69
primary_expression -> call_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#70
primary_expression -> literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#71
primary_expression -> paren_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#72
primary_expression -> 'bitcast' · _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#73
ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#74
call_expression -> callable · argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list -> · '(' argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#75
literal -> int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#76
literal -> float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#77
literal -> bool_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#78
paren_expression -> '(' · expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')'}
expression -> · relational_expression : {')'}
expression -> · short_circuit_and_expression '&&' relational_expression : {')'}
expression -> · short_circuit_or_expression '||' relational_expression : {')'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#79
callable -> type_specifier_without_ident · : {'('}

#80
callable -> vec_prefix · _disambiguate_template : {'('}
type_specifier_without_ident -> vec_prefix · _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'(' /\u200B_template_args_start/}

#81
callable -> mat_prefix · _disambiguate_template : {'('}
type_specifier_without_ident -> mat_prefix · _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'(' /\u200B_template_args_start/}

#82
array_type_specifier -> 'array' · _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
callable -> 'array' · _disambiguate_template : {'('}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'(' /\u200B_template_args_start/}

#83
int_literal -> decimal_int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#84
int_literal -> hex_int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#85
float_literal -> decimal_float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#86
float_literal -> hex_float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#87
bool_literal -> 'true' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#88
bool_literal -> 'false' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#89
type_specifier_without_ident -> 'bool' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#90
type_specifier_without_ident -> 'f32' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#91
type_specifier_without_ident -> 'f16' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#92
type_specifier_without_ident -> 'i32' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#93
type_specifier_without_ident -> 'u32' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#94
type_specifier_without_ident -> 'ptr' · _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#95
type_specifier_without_ident -> array_type_specifier · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#96
type_specifier_without_ident -> 'atomic' · _disambiguate_template _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#97
type_specifier_without_ident -> texture_and_sampler_types · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#98
vec_prefix -> 'vec2' · : {/\u200B_disambiguate_template/}

#99
vec_prefix -> 'vec3' · : {/\u200B_disambiguate_template/}

#100
vec_prefix -> 'vec4' · : {/\u200B_disambiguate_template/}

#101
mat_prefix -> 'mat2x2' · : {/\u200B_disambiguate_template/}

#102
mat_prefix -> 'mat2x3' · : {/\u200B_disambiguate_template/}

#103
mat_prefix -> 'mat2x4' · : {/\u200B_disambiguate_template/}

#104
mat_prefix -> 'mat3x2' · : {/\u200B_disambiguate_template/}

#105
mat_prefix -> 'mat3x3' · : {/\u200B_disambiguate_template/}

#106
mat_prefix -> 'mat3x4' · : {/\u200B_disambiguate_template/}

#107
mat_prefix -> 'mat4x2' · : {/\u200B_disambiguate_template/}

#108
mat_prefix -> 'mat4x3' · : {/\u200B_disambiguate_template/}

#109
mat_prefix -> 'mat4x4' · : {/\u200B_disambiguate_template/}

#110
decimal_int_literal -> /0[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#111
decimal_int_literal -> /[1-9][0-9]*[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#112
hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#113
decimal_float_literal -> /0[fh]/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#114
decimal_float_literal -> /[1-9][0-9]*[fh]/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#115
decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#116
decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#117
decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#118
hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#119
hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#120
hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#121
texture_and_sampler_types -> sampler_type · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#122
texture_and_sampler_types -> depth_texture_type · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#123
texture_and_sampler_types -> sampled_texture_type · _disambiguate_template _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#124
texture_and_sampler_types -> multisampled_texture_type · _disambiguate_template _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#125
texture_and_sampler_types -> storage_texture_type · _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#126
sampler_type -> 'sampler' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#127
sampler_type -> 'sampler_comparison' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#128
depth_texture_type -> 'texture_depth_2d' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#129
depth_texture_type -> 'texture_depth_2d_array' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#130
depth_texture_type -> 'texture_depth_cube' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#131
depth_texture_type -> 'texture_depth_cube_array' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#132
depth_texture_type -> 'texture_depth_multisampled_2d' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#133
sampled_texture_type -> 'texture_1d' · : {/\u200B_disambiguate_template/}

#134
sampled_texture_type -> 'texture_2d' · : {/\u200B_disambiguate_template/}

#135
sampled_texture_type -> 'texture_2d_array' · : {/\u200B_disambiguate_template/}

#136
sampled_texture_type -> 'texture_3d' · : {/\u200B_disambiguate_template/}

#137
sampled_texture_type -> 'texture_cube' · : {/\u200B_disambiguate_template/}

#138
sampled_texture_type -> 'texture_cube_array' · : {/\u200B_disambiguate_template/}

#139
multisampled_texture_type -> 'texture_multisampled_2d' · : {/\u200B_disambiguate_template/}

#140
storage_texture_type -> 'texture_storage_1d' · : {/\u200B_disambiguate_template/}

#141
storage_texture_type -> 'texture_storage_2d' · : {/\u200B_disambiguate_template/}

#142
storage_texture_type -> 'texture_storage_2d_array' · : {/\u200B_disambiguate_template/}

#143
storage_texture_type -> 'texture_storage_3d' · : {/\u200B_disambiguate_template/}

#144
function_decl -> function_decl/0.0 function_header · compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
compound_statement -> · '{' compound_statement/0.1 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#145
function_header -> 'fn' · ident '(' function_header/0.3 ')' function_header/0.5 : {'{'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'('}

#146
struct_decl -> 'struct' ident · struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl -> · '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#147
type_alias_decl -> 'alias' ident · '=' type_specifier : {';'}

#148
global_constant_decl -> global_constant_decl/1.0 'override' · optionally_typed_ident global_constant_decl/1.3 : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' ';' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {';' '='}

#149
global_constant_decl -> 'const' optionally_typed_ident · '=' expression : {';'}

#150
optionally_typed_ident -> ident · optionally_typed_ident/0.1 : {';' '='}
optionally_typed_ident/0.1 -> · ':' type_specifier : {';' '='}

#151
global_variable_decl -> global_variable_decl/0.0 variable_decl · global_variable_decl/0.2 : {';'}
global_variable_decl/0.2 -> · '=' expression : {';'}

#152
variable_decl -> 'var' · _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_template_args_start/}

#153
global_decl -> const_assert_statement ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#154
global_decl -> type_alias_decl ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#155
global_decl -> global_constant_decl ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#156
global_decl -> global_variable_decl ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#157
translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 · : {EndOfText}

#158
global_directive -> 'enable' extension_name ';' · : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'struct' 'var' EndOfText}

#159
variable_decl -> 'var' _disambiguate_template · variable_decl/0.2 optionally_typed_ident : {';' '='}
_template_args_start -> · /\u200B_template_args_start/ : {'function' 'private' 'storage' 'uniform' 'workgroup'}
variable_decl/0.2 -> · variable_qualifier : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_qualifier -> · _template_args_start address_space variable_qualifier/0.2 _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#160
_disambiguate_template -> /\u200B_disambiguate_template/ · : {'(' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_template_args_start/}

#161
global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 · : {';'}

#162
global_variable_decl/0.2 -> '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#163
optionally_typed_ident -> ident optionally_typed_ident/0.1 · : {';' '='}

#164
optionally_typed_ident/0.1 -> ':' · type_specifier : {';' '='}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {';' '='}
depth_texture_type -> · 'texture_depth_2d' : {';' '='}
depth_texture_type -> · 'texture_depth_2d_array' : {';' '='}
depth_texture_type -> · 'texture_depth_cube' : {';' '='}
depth_texture_type -> · 'texture_depth_cube_array' : {';' '='}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {';' '='}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {';' '='}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {';' '='}
sampler_type -> · 'sampler_comparison' : {';' '='}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {';' '='}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {';' '='}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {';' '='}
texture_and_sampler_types -> · sampler_type : {';' '='}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {';' '='}
type_specifier -> · ident : {';' '='}
type_specifier -> · type_specifier_without_ident : {';' '='}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {';' '='}
type_specifier_without_ident -> · 'bool' : {';' '='}
type_specifier_without_ident -> · 'f16' : {';' '='}
type_specifier_without_ident -> · 'f32' : {';' '='}
type_specifier_without_ident -> · 'i32' : {';' '='}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {';' '='}
type_specifier_without_ident -> · 'u32' : {';' '='}
type_specifier_without_ident -> · array_type_specifier : {';' '='}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {';' '='}
type_specifier_without_ident -> · texture_and_sampler_types : {';' '='}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {';' '='}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#165
global_constant_decl -> 'const' optionally_typed_ident '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#166
global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident · global_constant_decl/1.3 : {';'}
global_constant_decl/1.3 -> · '=' expression : {';'}

#167
type_alias_decl -> 'alias' ident '=' · type_specifier : {';'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {';'}
depth_texture_type -> · 'texture_depth_2d' : {';'}
depth_texture_type -> · 'texture_depth_2d_array' : {';'}
depth_texture_type -> · 'texture_depth_cube' : {';'}
depth_texture_type -> · 'texture_depth_cube_array' : {';'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {';'}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {';'}
sampler_type -> · 'sampler_comparison' : {';'}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {';'}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {';'}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {';'}
texture_and_sampler_types -> · sampler_type : {';'}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {';'}
type_specifier -> · ident : {';'}
type_specifier -> · type_specifier_without_ident : {';'}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {';'}
type_specifier_without_ident -> · 'bool' : {';'}
type_specifier_without_ident -> · 'f16' : {';'}
type_specifier_without_ident -> · 'f32' : {';'}
type_specifier_without_ident -> · 'i32' : {';'}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {';'}
type_specifier_without_ident -> · 'u32' : {';'}
type_specifier_without_ident -> · array_type_specifier : {';'}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {';'}
type_specifier_without_ident -> · texture_and_sampler_types : {';'}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#168
struct_decl -> 'struct' ident struct_body_decl · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#169
struct_body_decl -> '{' · struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> · struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> · struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#170
function_header -> 'fn' ident · '(' function_header/0.3 ')' function_header/0.5 : {'{'}

#171
function_decl -> function_decl/0.0 function_header compound_statement · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#172
compound_statement -> '{' · compound_statement/0.1 '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.1 -> · compound_statement/0.1/0 : {'}'}
compound_statement/0.1/0 -> · statement compound_statement/0.1/0 : {'}'}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#173
texture_and_sampler_types -> storage_texture_type _disambiguate_template · _template_args_start texel_format ',' access_mode _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'bgra8unorm' 'r32float' 'r32sint' 'r32uint' 'rg32float' 'rg32sint' 'rg32uint' 'rgba16float' 'rgba16sint' 'rgba16uint' 'rgba32float' 'rgba32sint' 'rgba32uint' 'rgba8sint' 'rgba8snorm' 'rgba8uint' 'rgba8unorm'}

#174
texture_and_sampler_types -> multisampled_texture_type _disambiguate_template · _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#175
texture_and_sampler_types -> sampled_texture_type _disambiguate_template · _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#176
type_specifier_without_ident -> 'atomic' _disambiguate_template · _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#177
type_specifier_without_ident -> 'ptr' _disambiguate_template · _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'function' 'private' 'storage' 'uniform' 'workgroup'}

#178
array_type_specifier -> 'array' _disambiguate_template · _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
callable -> 'array' _disambiguate_template · : {'('}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#179
callable -> mat_prefix _disambiguate_template · : {'('}
type_specifier_without_ident -> mat_prefix _disambiguate_template · _template_args_start type_specifier _template_args_end : {'('}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#180
callable -> vec_prefix _disambiguate_template · : {'('}
type_specifier_without_ident -> vec_prefix _disambiguate_template · _template_args_start type_specifier _template_args_end : {'('}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#181
paren_expression -> '(' expression · ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#182
call_expression -> callable argument_expression_list · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#183
argument_expression_list -> '(' · argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
argument_expression_list/0.1 -> · expression_comma_list : {')'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
expression_comma_list -> · expression expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#184
primary_expression -> 'bitcast' _disambiguate_template · _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#185
singular_expression -> primary_expression singular_expression/0.1 · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#186
singular_expression/0.1 -> component_or_swizzle_specifier · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#187
component_or_swizzle_specifier -> '[' · expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {']'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {']'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {']'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {']'}
expression -> · relational_expression : {']'}
expression -> · short_circuit_and_expression '&&' relational_expression : {']'}
expression -> · short_circuit_or_expression '||' relational_expression : {']'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ']' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#188
component_or_swizzle_specifier -> '.' · member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> '.' · swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
member_ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba][rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw][xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#189
unary_expression -> '&' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#190
unary_expression -> '*' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#191
unary_expression -> '~' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#192
unary_expression -> '!' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#193
unary_expression -> '-' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#194
multiplicative_expression -> multiplicative_expression multiplicative_operator · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#195
multiplicative_operator -> '*' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#196
multiplicative_operator -> '/' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#197
multiplicative_operator -> '%' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#198
shift_expression -> unary_expression _shift_left · unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> · 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
call_expression -> · callable argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
float_literal -> · hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
int_literal -> · decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
int_literal -> · hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#199
shift_expression -> unary_expression _shift_right · unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> · 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
call_expression -> · callable argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
float_literal -> · hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
int_literal -> · decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
int_literal -> · hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#200
_shift_left -> /\u200B_shift_left/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#201
_shift_right -> /\u200B_shift_right/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#202
additive_expression -> additive_expression additive_operator · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#203
additive_operator -> '+' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#204
additive_operator -> '-' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#205
binary_xor_expression -> binary_xor_expression '^' · unary_expression : {'^'}
bitwise_expression -> binary_xor_expression '^' · unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
bool_literal -> · 'true' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'(' ')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> · bool_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> · float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> · int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · call_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · ident : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#206
binary_or_expression -> binary_or_expression '|' · unary_expression : {'|'}
bitwise_expression -> binary_or_expression '|' · unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
bool_literal -> · 'true' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'(' ')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> · bool_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> · float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> · int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · call_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · ident : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#207
binary_and_expression -> binary_and_expression '&' · unary_expression : {'&'}
bitwise_expression -> binary_and_expression '&' · unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
bool_literal -> · 'true' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'&' '(' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> · bool_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> · float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> · int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · call_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · ident : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#208
relational_expression -> shift_expression _less_than · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#209
relational_expression -> shift_expression _greater_than · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#210
relational_expression -> shift_expression _less_than_equal · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#211
relational_expression -> shift_expression _greater_than_equal · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#212
relational_expression -> shift_expression '==' · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#213
relational_expression -> shift_expression '!=' · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#214
_less_than -> /\u200B_less_than/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#215
_greater_than -> /\u200B_greater_than/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#216
_less_than_equal -> /\u200B_less_than_equal/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#217
_greater_than_equal -> /\u200B_greater_than_equal/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#218
expression -> short_circuit_and_expression '&&' · relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' · relational_expression : {'&&'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#219
expression -> short_circuit_or_expression '||' · relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' · relational_expression : {'||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#220
attribute -> '@' 'workgroup_size' '(' · expression ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' · expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#221
attribute -> '@' 'size' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#222
attribute -> '@' 'location' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#223
attribute -> '@' 'interpolate' '(' · interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' '(' · interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolation_type_name -> · 'flat' : {')' ','}
interpolation_type_name -> · 'linear' : {')' ','}
interpolation_type_name -> · 'perspective' : {')' ','}

#224
attribute -> '@' 'id' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#225
attribute -> '@' 'group' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#226
attribute -> '@' 'builtin' '(' · builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_value_name -> · 'frag_depth' : {')' ','}
builtin_value_name -> · 'front_facing' : {')' ','}
builtin_value_name -> · 'global_invocation_id' : {')' ','}
builtin_value_name -> · 'instance_index' : {')' ','}
builtin_value_name -> · 'local_invocation_id' : {')' ','}
builtin_value_name -> · 'local_invocation_index' : {')' ','}
builtin_value_name -> · 'num_workgroups' : {')' ','}
builtin_value_name -> · 'position' : {')' ','}
builtin_value_name -> · 'sample_index' : {')' ','}
builtin_value_name -> · 'sample_mask' : {')' ','}
builtin_value_name -> · 'vertex_index' : {')' ','}
builtin_value_name -> · 'workgroup_id' : {')' ','}

#227
attribute -> '@' 'binding' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#228
attribute -> '@' 'align' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#229
attribute -> '@' 'align' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#230
attribute -> '@' 'binding' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#231
attribute -> '@' 'builtin' '(' builtin_value_name · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#232
builtin_value_name -> 'vertex_index' · : {')' ','}

#233
builtin_value_name -> 'instance_index' · : {')' ','}

#234
builtin_value_name -> 'position' · : {')' ','}

#235
builtin_value_name -> 'front_facing' · : {')' ','}

#236
builtin_value_name -> 'frag_depth' · : {')' ','}

#237
builtin_value_name -> 'local_invocation_id' · : {')' ','}

#238
builtin_value_name -> 'local_invocation_index' · : {')' ','}

#239
builtin_value_name -> 'global_invocation_id' · : {')' ','}

#240
builtin_value_name -> 'workgroup_id' · : {')' ','}

#241
builtin_value_name -> 'num_workgroups' · : {')' ','}

#242
builtin_value_name -> 'sample_index' · : {')' ','}

#243
builtin_value_name -> 'sample_mask' · : {')' ','}

#244
attribute -> '@' 'group' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#245
attribute -> '@' 'id' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#246
attribute -> '@' 'interpolate' '(' interpolation_type_name · ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' '(' interpolation_type_name · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#247
interpolation_type_name -> 'perspective' · : {')' ','}

#248
interpolation_type_name -> 'linear' · : {')' ','}

#249
interpolation_type_name -> 'flat' · : {')' ','}

#250
attribute -> '@' 'location' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#251
attribute -> '@' 'size' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#252
attribute -> '@' 'workgroup_size' '(' expression · ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression · ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#253
expression -> short_circuit_or_expression '||' relational_expression · : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression · : {'||'}

#254
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> unary_expression · _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> unary_expression · _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
_shift_left -> · /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> · /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#255
expression -> short_circuit_and_expression '&&' relational_expression · : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression · : {'&&'}

#256
relational_expression -> shift_expression '!=' shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#257
relational_expression -> shift_expression '==' shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#258
relational_expression -> shift_expression _greater_than_equal shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#259
relational_expression -> shift_expression _less_than_equal shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#260
relational_expression -> shift_expression _greater_than shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#261
relational_expression -> shift_expression _less_than shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#262
binary_and_expression -> binary_and_expression '&' unary_expression · : {'&'}
bitwise_expression -> binary_and_expression '&' unary_expression · : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#263
binary_or_expression -> binary_or_expression '|' unary_expression · : {'|'}
bitwise_expression -> binary_or_expression '|' unary_expression · : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#264
binary_xor_expression -> binary_xor_expression '^' unary_expression · : {'^'}
bitwise_expression -> binary_xor_expression '^' unary_expression · : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#265
additive_expression -> additive_expression additive_operator multiplicative_expression · : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression · multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> · '%' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '*' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '/' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#266
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#267
shift_expression -> unary_expression _shift_right unary_expression · : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}

#268
shift_expression -> unary_expression _shift_left unary_expression · : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}

#269
multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#270
component_or_swizzle_specifier -> '.' member_ident · component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#271
component_or_swizzle_specifier -> '.' swizzle_name · component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#272
member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#273
swizzle_name -> '/[rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#274
swizzle_name -> '/[rgba][rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#275
swizzle_name -> '/[rgba][rgba][rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#276
swizzle_name -> '/[rgba][rgba][rgba][rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#277
swizzle_name -> '/[xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#278
swizzle_name -> '/[xyzw][xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#279
swizzle_name -> '/[xyzw][xyzw][xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#280
swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#281
component_or_swizzle_specifier -> '[' expression · ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#282
primary_expression -> 'bitcast' _disambiguate_template _template_args_start · type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#283
_template_args_start -> /\u200B_template_args_start/ · : {'array' 'atomic' 'bgra8unorm' 'bool' 'f16' 'f32' 'function' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'private' 'ptr' 'r32float' 'r32sint' 'r32uint' 'rg32float' 'rg32sint' 'rg32uint' 'rgba16float' 'rgba16sint' 'rgba16uint' 'rgba32float' 'rgba32sint' 'rgba32uint' 'rgba8sint' 'rgba8snorm' 'rgba8uint' 'rgba8unorm' 'sampler' 'sampler_comparison' 'storage' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'uniform' 'vec2' 'vec3' 'vec4' 'workgroup' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#284
argument_expression_list -> '(' argument_expression_list/0.1 · ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#285
argument_expression_list/0.1 -> expression_comma_list · : {')'}

#286
expression_comma_list -> expression · expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
expression_comma_list/0.1 -> · expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> · expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> · ',' expression : {')' ','}

#287
paren_expression -> '(' expression ')' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#288
type_specifier_without_ident -> vec_prefix _disambiguate_template _template_args_start · type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#289
type_specifier_without_ident -> mat_prefix _disambiguate_template _template_args_start · type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#290
array_type_specifier -> 'array' _disambiguate_template _template_args_start · type_specifier array_type_specifier/0.4 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {',' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {',' /\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {',' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {',' /\u200B_template_args_end/}
type_specifier -> · ident : {',' /\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#291
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start · address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
address_space -> · 'function' : {','}
address_space -> · 'private' : {','}
address_space -> · 'storage' : {','}
address_space -> · 'uniform' : {','}
address_space -> · 'workgroup' : {','}

#292
type_specifier_without_ident -> 'atomic' _disambiguate_template _template_args_start · type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#293
texture_and_sampler_types -> sampled_texture_type _disambiguate_template _template_args_start · type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#294
texture_and_sampler_types -> multisampled_texture_type _disambiguate_template _template_args_start · type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#295
texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start · texel_format ',' access_mode _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
texel_format -> · 'bgra8unorm' : {','}
texel_format -> · 'r32float' : {','}
texel_format -> · 'r32sint' : {','}
texel_format -> · 'r32uint' : {','}
texel_format -> · 'rg32float' : {','}
texel_format -> · 'rg32sint' : {','}
texel_format -> · 'rg32uint' : {','}
texel_format -> · 'rgba16float' : {','}
texel_format -> · 'rgba16sint' : {','}
texel_format -> · 'rgba16uint' : {','}
texel_format -> · 'rgba32float' : {','}
texel_format -> · 'rgba32sint' : {','}
texel_format -> · 'rgba32uint' : {','}
texel_format -> · 'rgba8sint' : {','}
texel_format -> · 'rgba8snorm' : {','}
texel_format -> · 'rgba8uint' : {','}
texel_format -> · 'rgba8unorm' : {','}

#296
compound_statement -> '{' compound_statement/0.1 · '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#297
compound_statement/0.1 -> compound_statement/0.1/0 · : {'}'}

#298
compound_statement/0.1/0 -> statement · compound_statement/0.1/0 : {'}'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.1/0 -> · statement compound_statement/0.1/0 : {'}'}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#299
statement -> ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#300
statement -> return_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#301
statement -> if_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#302
statement -> switch_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#303
statement -> loop_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#304
statement -> for_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#305
statement -> while_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#306
statement -> func_call_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#307
statement -> variable_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#308
statement -> break_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#309
statement -> continue_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#310
statement -> 'discard' · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#311
statement -> variable_updating_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#312
statement -> compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#313
statement -> const_assert_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#314
return_statement -> 'return' · return_statement/0.1 : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
return_statement/0.1 -> · expression : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#315
if_statement -> if_clause · if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> · 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1 -> · if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1/0 -> · else_if_clause if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#316
switch_statement -> 'switch' · expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#317
loop_statement -> 'loop' · '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#318
for_statement -> 'for' · '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#319
while_statement -> 'while' · expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#320
func_call_statement -> callable · argument_expression_list : {')' ';'}
argument_expression_list -> · '(' argument_expression_list/0.1 ')' : {')' ';'}

#321
variable_statement -> variable_decl · '=' expression : {';'}
variable_statement -> variable_decl · : {';'}

#322
variable_statement -> 'let' · optionally_typed_ident '=' expression : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#323
variable_statement -> 'const' · optionally_typed_ident '=' expression : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#324
break_statement -> 'break' · : {';'}

#325
continue_statement -> 'continue' · : {';'}

#326
variable_updating_statement -> assignment_statement · : {')' ';'}

#327
variable_updating_statement -> increment_statement · : {')' ';'}

#328
variable_updating_statement -> decrement_statement · : {')' ';'}

#329
if_clause -> 'if' · expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#330
callable -> ident · : {'('}
core_lhs_expression -> ident · : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#331
assignment_statement -> lhs_expression · assignment_statement/0.1 expression : {')' ';'}
decrement_statement -> lhs_expression · '--' : {')' ';'}
increment_statement -> lhs_expression · '++' : {')' ';'}
_shift_left_assign -> · /\u200B_shift_left_assign/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right_assign -> · /\u200B_shift_right_assign/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> · '=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> · compound_assignment_operator : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '%=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '&=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '*=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '+=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '-=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '/=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '^=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '|=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · _shift_left_assign : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · _shift_right_assign : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#332
assignment_statement -> '_' · '=' expression : {')' ';'}

#333
lhs_expression -> core_lhs_expression · lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression/0.1 -> · component_or_swizzle_specifier : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#334
lhs_expression -> '*' · lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#335
lhs_expression -> '&' · lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#336
core_lhs_expression -> '(' · lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · '(' lhs_expression ')' : {')' '.' '['}
core_lhs_expression -> · ident : {')' '.' '['}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' '.' '['}
lhs_expression -> · '&' lhs_expression : {')'}
lhs_expression -> · '*' lhs_expression : {')'}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {')'}

#337
function_header -> 'fn' ident '(' · function_header/0.3 ')' function_header/0.5 : {'{'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.3 -> · param_list : {')'}
param -> · param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> · param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> · attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list -> · param param_list/0.1 param_list/0.2 : {')'}

#338
struct_body_decl -> '{' struct_member · struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.2 -> · struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> · struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> · ',' struct_member : {',' '}'}

#339
struct_member -> struct_member/0.0 · member_ident ':' type_specifier : {',' '}'}
member_ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':'}

#340
struct_member/0.0 -> struct_member/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#341
struct_member/0.0/0 -> attribute · struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#342
type_alias_decl -> 'alias' ident '=' type_specifier · : {';'}

#343
type_specifier -> ident · : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#344
type_specifier -> type_specifier_without_ident · : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#345
type_specifier_without_ident -> vec_prefix · _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#346
type_specifier_without_ident -> mat_prefix · _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#347
array_type_specifier -> 'array' · _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#348
global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 · : {';'}

#349
global_constant_decl/1.3 -> '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#350
global_constant_decl -> 'const' optionally_typed_ident '=' expression · : {';'}

#351
optionally_typed_ident/0.1 -> ':' type_specifier · : {';' '='}

#352
global_variable_decl/0.2 -> '=' expression · : {';'}

#353
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 · optionally_typed_ident : {';' '='}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' ';' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {';' '='}

#354
variable_decl/0.2 -> variable_qualifier · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#355
variable_qualifier -> _template_args_start · address_space variable_qualifier/0.2 _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
address_space -> · 'function' : {',' /\u200B_template_args_end/}
address_space -> · 'private' : {',' /\u200B_template_args_end/}
address_space -> · 'storage' : {',' /\u200B_template_args_end/}
address_space -> · 'uniform' : {',' /\u200B_template_args_end/}
address_space -> · 'workgroup' : {',' /\u200B_template_args_end/}

#356
variable_qualifier -> _template_args_start address_space · variable_qualifier/0.2 _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_qualifier/0.2 -> · ',' access_mode : {/\u200B_template_args_end/}

#357
address_space -> 'function' · : {',' /\u200B_template_args_end/}

#358
address_space -> 'private' · : {',' /\u200B_template_args_end/}

#359
address_space -> 'workgroup' · : {',' /\u200B_template_args_end/}

#360
address_space -> 'uniform' · : {',' /\u200B_template_args_end/}

#361
address_space -> 'storage' · : {',' /\u200B_template_args_end/}

#362
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident · : {';' '='}

#363
global_constant_decl/1.3 -> '=' expression · : {';'}

#364
array_type_specifier -> 'array' _disambiguate_template · _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#365
type_specifier_without_ident -> mat_prefix _disambiguate_template · _template_args_start type_specifier _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#366
type_specifier_without_ident -> vec_prefix _disambiguate_template · _template_args_start type_specifier _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#367
struct_member/0.0/0 -> attribute struct_member/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#368
struct_member -> struct_member/0.0 member_ident · ':' type_specifier : {',' '}'}

#369
struct_body_decl -> '{' struct_member struct_body_decl/0.2 · struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.3 -> · ',' : {'}'}

#370
struct_body_decl/0.2 -> struct_body_decl/0.2/0 · : {',' '}'}

#371
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 · struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> · struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> · ',' struct_member : {',' '}'}

#372
struct_body_decl/0.2/0/0.0 -> ',' · struct_member : {',' '}'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> · struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> · struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#373
function_header -> 'fn' ident '(' function_header/0.3 · ')' function_header/0.5 : {'{'}

#374
function_header/0.3 -> param_list · : {')'}

#375
param_list -> param · param_list/0.1 param_list/0.2 : {')'}
param_list/0.1 -> · param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> · param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> · ',' param : {')' ','}

#376
param -> param/0.0 · ident ':' type_specifier : {')' ','}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':'}

#377
param/0.0 -> param/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#378
param/0.0/0 -> attribute · param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> · attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#379
core_lhs_expression -> '(' lhs_expression · ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#380
core_lhs_expression -> ident · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#381
lhs_expression -> '&' lhs_expression · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#382
lhs_expression -> '*' lhs_expression · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#383
lhs_expression -> core_lhs_expression lhs_expression/0.1 · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#384
lhs_expression/0.1 -> component_or_swizzle_specifier · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#385
assignment_statement -> '_' '=' · expression : {')' ';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ';'}
expression -> · relational_expression : {')' ';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#386
assignment_statement -> lhs_expression assignment_statement/0.1 · expression : {')' ';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ';'}
expression -> · relational_expression : {')' ';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#387
increment_statement -> lhs_expression '++' · : {')' ';'}

#388
decrement_statement -> lhs_expression '--' · : {')' ';'}

#389
assignment_statement/0.1 -> '=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#390
assignment_statement/0.1 -> compound_assignment_operator · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#391
compound_assignment_operator -> '+=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#392
compound_assignment_operator -> '-=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#393
compound_assignment_operator -> '*=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#394
compound_assignment_operator -> '/=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#395
compound_assignment_operator -> '%=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#396
compound_assignment_operator -> '&=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#397
compound_assignment_operator -> '|=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#398
compound_assignment_operator -> '^=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#399
compound_assignment_operator -> _shift_right_assign · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#400
compound_assignment_operator -> _shift_left_assign · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#401
_shift_right_assign -> /\u200B_shift_right_assign/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#402
_shift_left_assign -> /\u200B_shift_left_assign/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#403
if_clause -> 'if' expression · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#404
variable_statement -> 'const' optionally_typed_ident · '=' expression : {';'}

#405
variable_statement -> 'let' optionally_typed_ident · '=' expression : {';'}

#406
variable_statement -> variable_decl '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#407
func_call_statement -> callable argument_expression_list · : {')' ';'}

#408
while_statement -> 'while' expression · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#409
for_statement -> 'for' '(' · for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_header -> · for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 : {')'}
for_header/0.0 -> · for_init : {';'}
for_init -> · func_call_statement : {';'}
for_init -> · variable_statement : {';'}
for_init -> · variable_updating_statement : {';'}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#410
loop_statement -> 'loop' '{' · loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.2 -> · loop_statement/0.2/0 : {'continuing' '}'}
loop_statement/0.2/0 -> · statement loop_statement/0.2/0 : {'continuing' '}'}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#411
switch_statement -> 'switch' expression · '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#412
if_statement -> if_clause if_statement/0.1 · if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause -> · 'else' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2 -> · else_clause : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#413
if_statement/0.1 -> if_statement/0.1/0 · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#414
if_statement/0.1/0 -> else_if_clause · if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> · 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1/0 -> · else_if_clause if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#415
else_if_clause -> 'else' · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#416
return_statement -> 'return' return_statement/0.1 · : {';'}

#417
return_statement/0.1 -> expression · : {';'}

#418
statement -> const_assert_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#419
statement -> variable_updating_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#420
statement -> 'discard' ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#421
statement -> continue_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#422
statement -> break_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#423
statement -> variable_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#424
statement -> func_call_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#425
statement -> return_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#426
compound_statement/0.1/0 -> statement compound_statement/0.1/0 · : {'}'}

#427
compound_statement -> '{' compound_statement/0.1 '}' · : {'&' '(' '*' ';' '@' '_' 'alias' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#428
texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start texel_format · ',' access_mode _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#429
texel_format -> 'rgba8unorm' · : {','}

#430
texel_format -> 'rgba8snorm' · : {','}

#431
texel_format -> 'rgba8uint' · : {','}

#432
texel_format -> 'rgba8sint' · : {','}

#433
texel_format -> 'rgba16uint' · : {','}

#434
texel_format -> 'rgba16sint' · : {','}

#435
texel_format -> 'rgba16float' · : {','}

#436
texel_format -> 'r32uint' · : {','}

#437
texel_format -> 'r32sint' · : {','}

#438
texel_format -> 'r32float' · : {','}

#439
texel_format -> 'rg32uint' · : {','}

#440
texel_format -> 'rg32sint' · : {','}

#441
texel_format -> 'rg32float' · : {','}

#442
texel_format -> 'rgba32uint' · : {','}

#443
texel_format -> 'rgba32sint' · : {','}

#444
texel_format -> 'rgba32float' · : {','}

#445
texel_format -> 'bgra8unorm' · : {','}

#446
texture_and_sampler_types -> multisampled_texture_type _disambiguate_template _template_args_start type_specifier · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#447
texture_and_sampler_types -> sampled_texture_type _disambiguate_template _template_args_start type_specifier · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#448
type_specifier_without_ident -> 'atomic' _disambiguate_template _template_args_start type_specifier · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#449
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space · ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#450
array_type_specifier -> 'array' _disambiguate_template _template_args_start type_specifier · array_type_specifier/0.4 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier/0.4 -> · ',' element_count_expression : {/\u200B_template_args_end/}

#451
type_specifier_without_ident -> mat_prefix _disambiguate_template _template_args_start type_specifier · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#452
type_specifier_without_ident -> vec_prefix _disambiguate_template _template_args_start type_specifier · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#453
expression_comma_list -> expression expression_comma_list/0.1 · expression_comma_list/0.2 : {')'}
expression_comma_list/0.2 -> · ',' : {')'}

#454
expression_comma_list/0.1 -> expression_comma_list/0.1/0 · : {')' ','}

#455
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 · expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> · expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> · ',' expression : {')' ','}

#456
expression_comma_list/0.1/0/0.0 -> ',' · expression : {')' ','}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#457
argument_expression_list -> '(' argument_expression_list/0.1 ')' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#458
primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier · _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'('}

#459
component_or_swizzle_specifier -> '[' expression ']' · component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/0.3 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#460
component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#461
component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#462
component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#463
component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#464
attribute -> '@' 'workgroup_size' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#465
attrib_end/0.0 -> ',' · : {')'}
attribute -> '@' 'workgroup_size' '(' expression ',' · expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression ',' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#466
attrib_end -> attrib_end/0.0 · ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#467
attribute -> '@' 'size' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#468
attrib_end/0.0 -> ',' · : {')'}

#469
attribute -> '@' 'location' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#470
attribute -> '@' 'interpolate' '(' interpolation_type_name attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#471
attrib_end/0.0 -> ',' · : {')'}
attribute -> '@' 'interpolate' '(' interpolation_type_name ',' · interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolation_sample_name -> · 'center' : {')' ','}
interpolation_sample_name -> · 'centroid' : {')' ','}
interpolation_sample_name -> · 'sample' : {')' ','}

#472
attribute -> '@' 'id' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#473
attribute -> '@' 'group' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#474
attribute -> '@' 'builtin' '(' builtin_value_name attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#475
attribute -> '@' 'binding' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#476
attribute -> '@' 'align' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#477
attribute -> '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#478
interpolation_sample_name -> 'center' · : {')' ','}

#479
interpolation_sample_name -> 'centroid' · : {')' ','}

#480
interpolation_sample_name -> 'sample' · : {')' ','}

#481
attrib_end -> attrib_end/0.0 ')' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#482
attribute -> '@' 'workgroup_size' '(' expression ',' expression · ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression ',' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#483
component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#484
component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#485
primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#486
_template_args_end -> /\u200B_template_args_end/ · : {'(' ')' ',' ';' '=' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_template_args_end/}

#487
expression_comma_list/0.1/0/0.0 -> ',' expression · : {')' ','}

#488
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 · : {')' ','}

#489
expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 · : {')'}

#490
expression_comma_list/0.2 -> ',' · : {')'}

#491
type_specifier_without_ident -> vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#492
type_specifier_without_ident -> mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#493
array_type_specifier -> 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#494
array_type_specifier/0.4 -> ',' · element_count_expression : {/\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'+' '-' /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'+' '-' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {/\u200B_template_args_end/}
bitwise_expression -> · binary_or_expression '|' unary_expression : {/\u200B_template_args_end/}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {/\u200B_template_args_end/}
bool_literal -> · 'false' : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
bool_literal -> · 'true' : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
element_count_expression -> · additive_expression : {/\u200B_template_args_end/}
element_count_expression -> · bitwise_expression : {/\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&' '(' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
literal -> · bool_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
literal -> · float_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
literal -> · int_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '*' '+' '-' '/' /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'%' '*' '+' '-' '/' /\u200B_template_args_end/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
primary_expression -> · call_expression : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
primary_expression -> · ident : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
primary_expression -> · literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#495
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space ',' · type_specifier type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {',' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {',' /\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {',' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {',' /\u200B_template_args_end/}
type_specifier -> · ident : {',' /\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#496
type_specifier_without_ident -> 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#497
texture_and_sampler_types -> sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#498
texture_and_sampler_types -> multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#499
texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start texel_format ',' · access_mode _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
access_mode -> · 'read' : {/\u200B_template_args_end/}
access_mode -> · 'read_write' : {/\u200B_template_args_end/}
access_mode -> · 'write' : {/\u200B_template_args_end/}

#500
else_if_clause -> 'else' 'if' · expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#501
if_statement/0.1/0 -> else_if_clause if_statement/0.1/0 · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#502
if_statement -> if_clause if_statement/0.1 if_statement/0.2 · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#503
if_statement/0.2 -> else_clause · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#504
else_clause -> 'else' · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#505
switch_statement -> 'switch' expression '{' · switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
case_clause -> · 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> · 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body -> · case_clause : {'case' 'default' '}'}
switch_body -> · default_alone_clause : {'case' 'default' '}'}
switch_statement/0.3 -> · switch_statement/0.3/0 : {'}'}
switch_statement/0.3/0 -> · switch_body switch_statement/0.3/0 : {'}'}

#506
loop_statement -> 'loop' '{' loop_statement/0.2 · loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
continuing_statement -> · 'continuing' continuing_compound_statement : {'}'}
loop_statement/0.3 -> · continuing_statement : {'}'}

#507
loop_statement/0.2 -> loop_statement/0.2/0 · : {'continuing' '}'}

#508
loop_statement/0.2/0 -> statement · loop_statement/0.2/0 : {'continuing' '}'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.2/0 -> · statement loop_statement/0.2/0 : {'continuing' '}'}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#509
for_statement -> 'for' '(' for_header · ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#510
for_header -> for_header/0.0 · ';' for_header/0.2 ';' for_header/0.4 : {')'}

#511
for_header/0.0 -> for_init · : {';'}

#512
for_init -> variable_statement · : {';'}

#513
for_init -> variable_updating_statement · : {';'}

#514
for_init -> func_call_statement · : {';'}

#515
while_statement -> 'while' expression compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#516
variable_statement -> variable_decl '=' expression · : {';'}

#517
variable_statement -> 'let' optionally_typed_ident '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#518
variable_statement -> 'const' optionally_typed_ident '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#519
if_clause -> 'if' expression compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#520
assignment_statement -> lhs_expression assignment_statement/0.1 expression · : {')' ';'}

#521
assignment_statement -> '_' '=' expression · : {')' ';'}

#522
core_lhs_expression -> '(' lhs_expression ')' · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#523
param/0.0/0 -> attribute param/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#524
param -> param/0.0 ident · ':' type_specifier : {')' ','}

#525
param_list -> param param_list/0.1 · param_list/0.2 : {')'}
param_list/0.2 -> · ',' : {')'}

#526
param_list/0.1 -> param_list/0.1/0 · : {')' ','}

#527
param_list/0.1/0 -> param_list/0.1/0/0.0 · param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> · param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> · ',' param : {')' ','}

#528
param_list/0.1/0/0.0 -> ',' · param : {')' ','}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param -> · param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> · param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> · attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#529
function_header -> 'fn' ident '(' function_header/0.3 ')' · function_header/0.5 : {'{'}
function_header/0.5 -> · '->' function_header/0.5/0.1 type_specifier : {'{'}

#530
struct_body_decl/0.2/0/0.0 -> ',' struct_member · : {',' '}'}

#531
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 · : {',' '}'}

#532
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 · '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#533
struct_body_decl/0.3 -> ',' · : {'}'}

#534
struct_member -> struct_member/0.0 member_ident ':' · type_specifier : {',' '}'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {',' '}'}
depth_texture_type -> · 'texture_depth_2d' : {',' '}'}
depth_texture_type -> · 'texture_depth_2d_array' : {',' '}'}
depth_texture_type -> · 'texture_depth_cube' : {',' '}'}
depth_texture_type -> · 'texture_depth_cube_array' : {',' '}'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {',' '}'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' '}'}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {',' '}'}
sampler_type -> · 'sampler_comparison' : {',' '}'}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {',' '}'}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' '}'}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' '}'}
texture_and_sampler_types -> · sampler_type : {',' '}'}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {',' '}'}
type_specifier -> · ident : {',' '}'}
type_specifier -> · type_specifier_without_ident : {',' '}'}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {',' '}'}
type_specifier_without_ident -> · 'bool' : {',' '}'}
type_specifier_without_ident -> · 'f16' : {',' '}'}
type_specifier_without_ident -> · 'f32' : {',' '}'}
type_specifier_without_ident -> · 'i32' : {',' '}'}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {',' '}'}
type_specifier_without_ident -> · 'u32' : {',' '}'}
type_specifier_without_ident -> · array_type_specifier : {',' '}'}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' '}'}
type_specifier_without_ident -> · texture_and_sampler_types : {',' '}'}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' '}'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#535
variable_qualifier -> _template_args_start address_space variable_qualifier/0.2 · _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
_template_args_end -> · /\u200B_template_args_end/ : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#536
variable_qualifier/0.2 -> ',' · access_mode : {/\u200B_template_args_end/}
access_mode -> · 'read' : {/\u200B_template_args_end/}
access_mode -> · 'read_write' : {/\u200B_template_args_end/}
access_mode -> · 'write' : {/\u200B_template_args_end/}

#537
variable_qualifier/0.2 -> ',' access_mode · : {/\u200B_template_args_end/}

#538
access_mode -> 'read' · : {/\u200B_template_args_end/}

#539
access_mode -> 'write' · : {/\u200B_template_args_end/}

#540
access_mode -> 'read_write' · : {/\u200B_template_args_end/}

#541
variable_qualifier -> _template_args_start address_space variable_qualifier/0.2 _template_args_end · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#542
struct_member -> struct_member/0.0 member_ident ':' type_specifier · : {',' '}'}

#543
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#544
function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 · : {'{'}

#545
function_header/0.5 -> '->' · function_header/0.5/0.1 type_specifier : {'{'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1 -> · function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> · attribute function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#546
param_list/0.1/0/0.0 -> ',' param · : {')' ','}

#547
param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 · : {')' ','}

#548
param_list -> param param_list/0.1 param_list/0.2 · : {')'}

#549
param_list/0.2 -> ',' · : {')'}

#550
param -> param/0.0 ident ':' · type_specifier : {')' ','}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {')' ','}
depth_texture_type -> · 'texture_depth_2d' : {')' ','}
depth_texture_type -> · 'texture_depth_2d_array' : {')' ','}
depth_texture_type -> · 'texture_depth_cube' : {')' ','}
depth_texture_type -> · 'texture_depth_cube_array' : {')' ','}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {')' ','}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' ','}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {')' ','}
sampler_type -> · 'sampler_comparison' : {')' ','}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {')' ','}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ','}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ','}
texture_and_sampler_types -> · sampler_type : {')' ','}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {')' ','}
type_specifier -> · ident : {')' ','}
type_specifier -> · type_specifier_without_ident : {')' ','}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ','}
type_specifier_without_ident -> · 'bool' : {')' ','}
type_specifier_without_ident -> · 'f16' : {')' ','}
type_specifier_without_ident -> · 'f32' : {')' ','}
type_specifier_without_ident -> · 'i32' : {')' ','}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {')' ','}
type_specifier_without_ident -> · 'u32' : {')' ','}
type_specifier_without_ident -> · array_type_specifier : {')' ','}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ','}
type_specifier_without_ident -> · texture_and_sampler_types : {')' ','}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ','}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#551
variable_statement -> 'const' optionally_typed_ident '=' expression · : {';'}

#552
variable_statement -> 'let' optionally_typed_ident '=' expression · : {';'}

#553
for_header -> for_header/0.0 ';' · for_header/0.2 ';' for_header/0.4 : {')'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
for_header/0.2 -> · expression : {';'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#554
for_statement -> 'for' '(' for_header ')' · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#555
loop_statement/0.2/0 -> statement loop_statement/0.2/0 · : {'continuing' '}'}

#556
loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 · '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#557
loop_statement/0.3 -> continuing_statement · : {'}'}

#558
continuing_statement -> 'continuing' · continuing_compound_statement : {'}'}
continuing_compound_statement -> · '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' : {'}'}

#559
switch_statement -> 'switch' expression '{' switch_statement/0.3 · '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#560
switch_statement/0.3 -> switch_statement/0.3/0 · : {'}'}

#561
switch_statement/0.3/0 -> switch_body · switch_statement/0.3/0 : {'}'}
case_clause -> · 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> · 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body -> · case_clause : {'case' 'default' '}'}
switch_body -> · default_alone_clause : {'case' 'default' '}'}
switch_statement/0.3/0 -> · switch_body switch_statement/0.3/0 : {'}'}

#562
switch_body -> case_clause · : {'case' 'default' '}'}

#563
switch_body -> default_alone_clause · : {'case' 'default' '}'}

#564
case_clause -> 'case' · case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {',' ':' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
case_selector -> · 'default' : {',' ':' '{'}
case_selector -> · expression : {',' ':' '{'}
case_selectors -> · case_selector case_selectors/0.1 case_selectors/0.2 : {':' '{'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {',' ':' '{'}
expression -> · relational_expression : {',' ':' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {',' ':' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {',' ':' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#565
default_alone_clause -> 'default' · default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
default_alone_clause/0.1 -> · ':' : {'{'}

#566
else_clause -> 'else' compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#567
else_if_clause -> 'else' 'if' expression · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#568
texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#569
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier · type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
type_specifier_without_ident/7.6 -> · ',' access_mode : {/\u200B_template_args_end/}

#570
array_type_specifier/0.4 -> ',' element_count_expression · : {/\u200B_template_args_end/}

#571
additive_expression -> additive_expression · additive_operator multiplicative_expression : {'+' '-' /\u200B_template_args_end/}
element_count_expression -> additive_expression · : {/\u200B_template_args_end/}
additive_operator -> · '+' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_operator -> · '-' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#572
element_count_expression -> bitwise_expression · : {/\u200B_template_args_end/}

#573
binary_and_expression -> unary_expression · : {'&'}
binary_or_expression -> unary_expression · : {'|'}
binary_xor_expression -> unary_expression · : {'^'}
multiplicative_expression -> unary_expression · : {'%' '*' '+' '-' '/' /\u200B_template_args_end/}

#574
array_type_specifier -> 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#575
primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#576
attribute -> '@' 'workgroup_size' '(' expression ',' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#577
attrib_end/0.0 -> ',' · : {')'}
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#578
attribute -> '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#579
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#580
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#581
type_specifier_without_ident/7.6 -> ',' · access_mode : {/\u200B_template_args_end/}
access_mode -> · 'read' : {/\u200B_template_args_end/}
access_mode -> · 'read_write' : {/\u200B_template_args_end/}
access_mode -> · 'write' : {/\u200B_template_args_end/}

#582
texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#583
else_if_clause -> 'else' 'if' expression compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#584
default_alone_clause -> 'default' default_alone_clause/0.1 · compound_statement : {'case' 'default' '}'}
compound_statement -> · '{' compound_statement/0.1 '}' : {'case' 'default' '}'}

#585
default_alone_clause/0.1 -> ':' · : {'{'}

#586
case_clause -> 'case' case_selectors · case_clause/0.2 compound_statement : {'case' 'default' '}'}
case_clause/0.2 -> · ':' : {'{'}

#587
case_selectors -> case_selector · case_selectors/0.1 case_selectors/0.2 : {':' '{'}
case_selectors/0.1 -> · case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0 -> · case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0/0.0 -> · ',' case_selector : {',' ':' '{'}

#588
case_selector -> 'default' · : {',' ':' '{'}

#589
case_selector -> expression · : {',' ':' '{'}

#590
switch_statement/0.3/0 -> switch_body switch_statement/0.3/0 · : {'}'}

#591
switch_statement -> 'switch' expression '{' switch_statement/0.3 '}' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#592
continuing_statement -> 'continuing' continuing_compound_statement · : {'}'}

#593
continuing_compound_statement -> '{' · continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' : {'}'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
continuing_compound_statement/0.1 -> · continuing_compound_statement/0.1/0 : {'break' '}'}
continuing_compound_statement/0.1/0 -> · statement continuing_compound_statement/0.1/0 : {'break' '}'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#594
loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#595
for_statement -> 'for' '(' for_header ')' compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#596
for_header -> for_header/0.0 ';' for_header/0.2 · ';' for_header/0.4 : {')'}

#597
for_header/0.2 -> expression · : {';'}

#598
param -> param/0.0 ident ':' type_specifier · : {')' ','}

#599
function_header/0.5 -> '->' function_header/0.5/0.1 · type_specifier : {'{'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'{'}
depth_texture_type -> · 'texture_depth_2d' : {'{'}
depth_texture_type -> · 'texture_depth_2d_array' : {'{'}
depth_texture_type -> · 'texture_depth_cube' : {'{'}
depth_texture_type -> · 'texture_depth_cube_array' : {'{'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'{'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'{'}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'{'}
sampler_type -> · 'sampler_comparison' : {'{'}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'{'}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'{'}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'{'}
texture_and_sampler_types -> · sampler_type : {'{'}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'{'}
type_specifier -> · ident : {'{'}
type_specifier -> · type_specifier_without_ident : {'{'}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'{'}
type_specifier_without_ident -> · 'bool' : {'{'}
type_specifier_without_ident -> · 'f16' : {'{'}
type_specifier_without_ident -> · 'f32' : {'{'}
type_specifier_without_ident -> · 'i32' : {'{'}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'{'}
type_specifier_without_ident -> · 'u32' : {'{'}
type_specifier_without_ident -> · array_type_specifier : {'{'}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'{'}
type_specifier_without_ident -> · texture_and_sampler_types : {'{'}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'{'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#600
function_header/0.5/0.1 -> function_header/0.5/0.1/0 · : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#601
function_header/0.5/0.1/0 -> attribute · function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> · attribute function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#602
function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 · : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#603
function_header/0.5 -> '->' function_header/0.5/0.1 type_specifier · : {'{'}

#604
for_header -> for_header/0.0 ';' for_header/0.2 ';' · for_header/0.4 : {')'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {')'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {')'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {')'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_header/0.4 -> · for_update : {')'}
for_update -> · func_call_statement : {')'}
for_update -> · variable_updating_statement : {')'}
func_call_statement -> · callable argument_expression_list : {')'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
increment_statement -> · lhs_expression '++' : {')'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_updating_statement -> · assignment_statement : {')'}
variable_updating_statement -> · decrement_statement : {')'}
variable_updating_statement -> · increment_statement : {')'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#605
continuing_compound_statement -> '{' continuing_compound_statement/0.1 · continuing_compound_statement/0.2 '}' : {'}'}
break_if_statement -> · 'break' 'if' expression ';' : {'}'}
continuing_compound_statement/0.2 -> · break_if_statement : {'}'}

#606
continuing_compound_statement/0.1 -> continuing_compound_statement/0.1/0 · : {'break' '}'}

#607
continuing_compound_statement/0.1/0 -> statement · continuing_compound_statement/0.1/0 : {'break' '}'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
continuing_compound_statement/0.1/0 -> · statement continuing_compound_statement/0.1/0 : {'break' '}'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#608
case_selectors -> case_selector case_selectors/0.1 · case_selectors/0.2 : {':' '{'}
case_selectors/0.2 -> · ',' : {':' '{'}

#609
case_selectors/0.1 -> case_selectors/0.1/0 · : {',' ':' '{'}

#610
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 · case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0 -> · case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0/0.0 -> · ',' case_selector : {',' ':' '{'}

#611
case_selectors/0.1/0/0.0 -> ',' · case_selector : {',' ':' '{'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {',' ':' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
case_selector -> · 'default' : {',' ':' '{'}
case_selector -> · expression : {',' ':' '{'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {',' ':' '{'}
expression -> · relational_expression : {',' ':' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {',' ':' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {',' ':' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#612
case_clause -> 'case' case_selectors case_clause/0.2 · compound_statement : {'case' 'default' '}'}
compound_statement -> · '{' compound_statement/0.1 '}' : {'case' 'default' '}'}

#613
case_clause/0.2 -> ':' · : {'{'}

#614
default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement · : {'case' 'default' '}'}

#615
type_specifier_without_ident/7.6 -> ',' access_mode · : {/\u200B_template_args_end/}

#616
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#617
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#618
case_clause -> 'case' case_selectors case_clause/0.2 compound_statement · : {'case' 'default' '}'}

#619
case_selectors/0.1/0/0.0 -> ',' case_selector · : {',' ':' '{'}

#620
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 · : {',' ':' '{'}

#621
case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 · : {':' '{'}

#622
case_selectors/0.2 -> ',' · : {':' '{'}

#623
continuing_compound_statement/0.1/0 -> statement continuing_compound_statement/0.1/0 · : {'break' '}'}

#624
continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 · '}' : {'}'}

#625
continuing_compound_statement/0.2 -> break_if_statement · : {'}'}

#626
break_if_statement -> 'break' · 'if' expression ';' : {'}'}

#627
for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 · : {')'}

#628
for_header/0.4 -> for_update · : {')'}

#629
for_update -> variable_updating_statement · : {')'}

#630
for_update -> func_call_statement · : {')'}

#631
break_if_statement -> 'break' 'if' · expression ';' : {'}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#632
continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' · : {'}'}

#633
break_if_statement -> 'break' 'if' expression · ';' : {'}'}

#634
break_if_statement -> 'break' 'if' expression ';' · : {'}'}


=Reductions:
r#0 translation_unit/0.0 -> translation_unit/0.0/0 ·
r#1 extension_name -> 'f16' ·
r#2 translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 ·
r#3 translation_unit -> translation_unit/0.0 translation_unit/0.1 ·
r#4 translation_unit/0.1 -> translation_unit/0.1/0 ·
r#5 global_decl -> ';' ·
r#6 global_decl -> struct_decl ·
r#7 global_decl -> function_decl ·
r#8 global_variable_decl/0.0 -> global_variable_decl/0.0/0 ·
r#9 global_constant_decl/1.0 -> global_constant_decl/1.0/0 ·
r#10 function_decl/0.0 -> function_decl/0.0/0 ·
r#11 attribute -> '@' 'const' ·
r#12 attribute -> '@' 'invariant' ·
r#13 attribute -> '@' 'must_use' ·
r#14 attribute -> '@' 'vertex' ·
r#15 attribute -> '@' 'fragment' ·
r#16 attribute -> '@' 'compute' ·
r#17 global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 ·
r#18 global_constant_decl/1.0/0 -> attribute global_constant_decl/1.0/0 ·
r#19 function_decl/0.0/0 -> attribute function_decl/0.0/0 ·
r#20 const_assert_statement -> 'const_assert' expression ·
r#21 expression -> relational_expression ·
r#22 short_circuit_or_expression -> relational_expression ·
r#23 short_circuit_and_expression -> relational_expression ·
r#24 expression -> bitwise_expression ·
r#25 relational_expression -> shift_expression ·
r#26 shift_expression -> additive_expression ·
r#27 binary_and_expression -> unary_expression ·
r#28 binary_or_expression -> unary_expression ·
r#29 binary_xor_expression -> unary_expression ·
r#30 multiplicative_expression -> unary_expression ·
r#31 additive_expression -> multiplicative_expression ·
r#32 unary_expression -> singular_expression ·
r#33 primary_expression -> ident ·
r#34 callable -> ident ·
r#35 primary_expression -> call_expression ·
r#36 primary_expression -> literal ·
r#37 primary_expression -> paren_expression ·
r#38 ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#39 literal -> int_literal ·
r#40 literal -> float_literal ·
r#41 literal -> bool_literal ·
r#42 callable -> type_specifier_without_ident ·
r#43 int_literal -> decimal_int_literal ·
r#44 int_literal -> hex_int_literal ·
r#45 float_literal -> decimal_float_literal ·
r#46 float_literal -> hex_float_literal ·
r#47 bool_literal -> 'true' ·
r#48 bool_literal -> 'false' ·
r#49 type_specifier_without_ident -> 'bool' ·
r#50 type_specifier_without_ident -> 'f32' ·
r#51 type_specifier_without_ident -> 'f16' ·
r#52 type_specifier_without_ident -> 'i32' ·
r#53 type_specifier_without_ident -> 'u32' ·
r#54 type_specifier_without_ident -> array_type_specifier ·
r#55 type_specifier_without_ident -> texture_and_sampler_types ·
r#56 vec_prefix -> 'vec2' ·
r#57 vec_prefix -> 'vec3' ·
r#58 vec_prefix -> 'vec4' ·
r#59 mat_prefix -> 'mat2x2' ·
r#60 mat_prefix -> 'mat2x3' ·
r#61 mat_prefix -> 'mat2x4' ·
r#62 mat_prefix -> 'mat3x2' ·
r#63 mat_prefix -> 'mat3x3' ·
r#64 mat_prefix -> 'mat3x4' ·
r#65 mat_prefix -> 'mat4x2' ·
r#66 mat_prefix -> 'mat4x3' ·
r#67 mat_prefix -> 'mat4x4' ·
r#68 decimal_int_literal -> /0[iu]?/ ·
r#69 decimal_int_literal -> /[1-9][0-9]*[iu]?/ ·
r#70 hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ ·
r#71 decimal_float_literal -> /0[fh]/ ·
r#72 decimal_float_literal -> /[1-9][0-9]*[fh]/ ·
r#73 decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ ·
r#74 decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ ·
r#75 decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ ·
r#76 hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ ·
r#77 hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ ·
r#78 hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ ·
r#79 texture_and_sampler_types -> sampler_type ·
r#80 texture_and_sampler_types -> depth_texture_type ·
r#81 sampler_type -> 'sampler' ·
r#82 sampler_type -> 'sampler_comparison' ·
r#83 depth_texture_type -> 'texture_depth_2d' ·
r#84 depth_texture_type -> 'texture_depth_2d_array' ·
r#85 depth_texture_type -> 'texture_depth_cube' ·
r#86 depth_texture_type -> 'texture_depth_cube_array' ·
r#87 depth_texture_type -> 'texture_depth_multisampled_2d' ·
r#88 sampled_texture_type -> 'texture_1d' ·
r#89 sampled_texture_type -> 'texture_2d' ·
r#90 sampled_texture_type -> 'texture_2d_array' ·
r#91 sampled_texture_type -> 'texture_3d' ·
r#92 sampled_texture_type -> 'texture_cube' ·
r#93 sampled_texture_type -> 'texture_cube_array' ·
r#94 multisampled_texture_type -> 'texture_multisampled_2d' ·
r#95 storage_texture_type -> 'texture_storage_1d' ·
r#96 storage_texture_type -> 'texture_storage_2d' ·
r#97 storage_texture_type -> 'texture_storage_2d_array' ·
r#98 storage_texture_type -> 'texture_storage_3d' ·
r#99 global_decl -> const_assert_statement ';' ·
r#100 global_decl -> type_alias_decl ';' ·
r#101 global_decl -> global_constant_decl ';' ·
r#102 global_decl -> global_variable_decl ';' ·
r#103 translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 ·
r#104 global_directive -> 'enable' extension_name ';' ·
r#105 _disambiguate_template -> /\u200B_disambiguate_template/ ·
r#106 global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 ·
r#107 optionally_typed_ident -> ident optionally_typed_ident/0.1 ·
r#108 struct_decl -> 'struct' ident struct_body_decl ·
r#109 function_decl -> function_decl/0.0 function_header compound_statement ·
r#110 callable -> 'array' _disambiguate_template ·
r#111 callable -> mat_prefix _disambiguate_template ·
r#112 callable -> vec_prefix _disambiguate_template ·
r#113 call_expression -> callable argument_expression_list ·
r#114 singular_expression -> primary_expression singular_expression/0.1 ·
r#115 singular_expression/0.1 -> component_or_swizzle_specifier ·
r#116 unary_expression -> '&' unary_expression ·
r#117 unary_expression -> '*' unary_expression ·
r#118 unary_expression -> '~' unary_expression ·
r#119 unary_expression -> '!' unary_expression ·
r#120 unary_expression -> '-' unary_expression ·
r#121 multiplicative_operator -> '*' ·
r#122 multiplicative_operator -> '/' ·
r#123 multiplicative_operator -> '%' ·
r#124 _shift_left -> /\u200B_shift_left/ ·
r#125 _shift_right -> /\u200B_shift_right/ ·
r#126 additive_operator -> '+' ·
r#127 additive_operator -> '-' ·
r#128 _less_than -> /\u200B_less_than/ ·
r#129 _greater_than -> /\u200B_greater_than/ ·
r#130 _less_than_equal -> /\u200B_less_than_equal/ ·
r#131 _greater_than_equal -> /\u200B_greater_than_equal/ ·
r#132 builtin_value_name -> 'vertex_index' ·
r#133 builtin_value_name -> 'instance_index' ·
r#134 builtin_value_name -> 'position' ·
r#135 builtin_value_name -> 'front_facing' ·
r#136 builtin_value_name -> 'frag_depth' ·
r#137 builtin_value_name -> 'local_invocation_id' ·
r#138 builtin_value_name -> 'local_invocation_index' ·
r#139 builtin_value_name -> 'global_invocation_id' ·
r#140 builtin_value_name -> 'workgroup_id' ·
r#141 builtin_value_name -> 'num_workgroups' ·
r#142 builtin_value_name -> 'sample_index' ·
r#143 builtin_value_name -> 'sample_mask' ·
r#144 interpolation_type_name -> 'perspective' ·
r#145 interpolation_type_name -> 'linear' ·
r#146 interpolation_type_name -> 'flat' ·
r#147 expression -> short_circuit_or_expression '||' relational_expression ·
r#148 short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression ·
r#149 expression -> short_circuit_and_expression '&&' relational_expression ·
r#150 short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression ·
r#151 relational_expression -> shift_expression '!=' shift_expression ·
r#152 relational_expression -> shift_expression '==' shift_expression ·
r#153 relational_expression -> shift_expression _greater_than_equal shift_expression ·
r#154 relational_expression -> shift_expression _less_than_equal shift_expression ·
r#155 relational_expression -> shift_expression _greater_than shift_expression ·
r#156 relational_expression -> shift_expression _less_than shift_expression ·
r#157 bitwise_expression -> binary_and_expression '&' unary_expression ·
r#158 binary_and_expression -> binary_and_expression '&' unary_expression ·
r#159 bitwise_expression -> binary_or_expression '|' unary_expression ·
r#160 binary_or_expression -> binary_or_expression '|' unary_expression ·
r#161 bitwise_expression -> binary_xor_expression '^' unary_expression ·
r#162 binary_xor_expression -> binary_xor_expression '^' unary_expression ·
r#163 additive_expression -> additive_expression additive_operator multiplicative_expression ·
r#164 shift_expression -> unary_expression _shift_right unary_expression ·
r#165 shift_expression -> unary_expression _shift_left unary_expression ·
r#166 multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression ·
r#167 member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#168 swizzle_name -> '/[rgba]/' ·
r#169 swizzle_name -> '/[rgba][rgba]/' ·
r#170 swizzle_name -> '/[rgba][rgba][rgba]/' ·
r#171 swizzle_name -> '/[rgba][rgba][rgba][rgba]/' ·
r#172 swizzle_name -> '/[xyzw]/' ·
r#173 swizzle_name -> '/[xyzw][xyzw]/' ·
r#174 swizzle_name -> '/[xyzw][xyzw][xyzw]/' ·
r#175 swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' ·
r#176 _template_args_start -> /\u200B_template_args_start/ ·
r#177 argument_expression_list/0.1 -> expression_comma_list ·
r#178 paren_expression -> '(' expression ')' ·
r#179 compound_statement/0.1 -> compound_statement/0.1/0 ·
r#180 statement -> ';' ·
r#181 statement -> if_statement ·
r#182 statement -> switch_statement ·
r#183 statement -> loop_statement ·
r#184 statement -> for_statement ·
r#185 statement -> while_statement ·
r#186 statement -> compound_statement ·
r#187 variable_statement -> variable_decl ·
r#188 break_statement -> 'break' ·
r#189 continue_statement -> 'continue' ·
r#190 variable_updating_statement -> assignment_statement ·
r#191 variable_updating_statement -> increment_statement ·
r#192 variable_updating_statement -> decrement_statement ·
r#193 core_lhs_expression -> ident ·
r#194 struct_member/0.0 -> struct_member/0.0/0 ·
r#195 type_alias_decl -> 'alias' ident '=' type_specifier ·
r#196 type_specifier -> ident ·
r#197 type_specifier -> type_specifier_without_ident ·
r#198 global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 ·
r#199 global_constant_decl -> 'const' optionally_typed_ident '=' expression ·
r#200 optionally_typed_ident/0.1 -> ':' type_specifier ·
r#201 global_variable_decl/0.2 -> '=' expression ·
r#202 variable_decl/0.2 -> variable_qualifier ·
r#203 address_space -> 'function' ·
r#204 address_space -> 'private' ·
r#205 address_space -> 'workgroup' ·
r#206 address_space -> 'uniform' ·
r#207 address_space -> 'storage' ·
r#208 variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident ·
r#209 global_constant_decl/1.3 -> '=' expression ·
r#210 struct_member/0.0/0 -> attribute struct_member/0.0/0 ·
r#211 struct_body_decl/0.2 -> struct_body_decl/0.2/0 ·
r#212 function_header/0.3 -> param_list ·
r#213 param/0.0 -> param/0.0/0 ·
r#214 lhs_expression -> '&' lhs_expression ·
r#215 lhs_expression -> '*' lhs_expression ·
r#216 lhs_expression -> core_lhs_expression lhs_expression/0.1 ·
r#217 lhs_expression/0.1 -> component_or_swizzle_specifier ·
r#218 increment_statement -> lhs_expression '++' ·
r#219 decrement_statement -> lhs_expression '--' ·
r#220 assignment_statement/0.1 -> '=' ·
r#221 assignment_statement/0.1 -> compound_assignment_operator ·
r#222 compound_assignment_operator -> '+=' ·
r#223 compound_assignment_operator -> '-=' ·
r#224 compound_assignment_operator -> '*=' ·
r#225 compound_assignment_operator -> '/=' ·
r#226 compound_assignment_operator -> '%=' ·
r#227 compound_assignment_operator -> '&=' ·
r#228 compound_assignment_operator -> '|=' ·
r#229 compound_assignment_operator -> '^=' ·
r#230 compound_assignment_operator -> _shift_right_assign ·
r#231 compound_assignment_operator -> _shift_left_assign ·
r#232 _shift_right_assign -> /\u200B_shift_right_assign/ ·
r#233 _shift_left_assign -> /\u200B_shift_left_assign/ ·
r#234 func_call_statement -> callable argument_expression_list ·
r#235 if_statement/0.1 -> if_statement/0.1/0 ·
r#236 return_statement -> 'return' return_statement/0.1 ·
r#237 return_statement/0.1 -> expression ·
r#238 statement -> const_assert_statement ';' ·
r#239 statement -> variable_updating_statement ';' ·
r#240 statement -> 'discard' ';' ·
r#241 statement -> continue_statement ';' ·
r#242 statement -> break_statement ';' ·
r#243 statement -> variable_statement ';' ·
r#244 statement -> func_call_statement ';' ·
r#245 statement -> return_statement ';' ·
r#246 compound_statement/0.1/0 -> statement compound_statement/0.1/0 ·
r#247 compound_statement -> '{' compound_statement/0.1 '}' ·
r#248 texel_format -> 'rgba8unorm' ·
r#249 texel_format -> 'rgba8snorm' ·
r#250 texel_format -> 'rgba8uint' ·
r#251 texel_format -> 'rgba8sint' ·
r#252 texel_format -> 'rgba16uint' ·
r#253 texel_format -> 'rgba16sint' ·
r#254 texel_format -> 'rgba16float' ·
r#255 texel_format -> 'r32uint' ·
r#256 texel_format -> 'r32sint' ·
r#257 texel_format -> 'r32float' ·
r#258 texel_format -> 'rg32uint' ·
r#259 texel_format -> 'rg32sint' ·
r#260 texel_format -> 'rg32float' ·
r#261 texel_format -> 'rgba32uint' ·
r#262 texel_format -> 'rgba32sint' ·
r#263 texel_format -> 'rgba32float' ·
r#264 texel_format -> 'bgra8unorm' ·
r#265 expression_comma_list/0.1 -> expression_comma_list/0.1/0 ·
r#266 argument_expression_list -> '(' argument_expression_list/0.1 ')' ·
r#267 component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 ·
r#268 component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier ·
r#269 component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 ·
r#270 component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier ·
r#271 attribute -> '@' 'workgroup_size' '(' expression attrib_end ·
r#272 attrib_end/0.0 -> ',' ·
r#273 attribute -> '@' 'size' '(' expression attrib_end ·
r#274 attribute -> '@' 'location' '(' expression attrib_end ·
r#275 attribute -> '@' 'interpolate' '(' interpolation_type_name attrib_end ·
r#276 attribute -> '@' 'id' '(' expression attrib_end ·
r#277 attribute -> '@' 'group' '(' expression attrib_end ·
r#278 attribute -> '@' 'builtin' '(' builtin_value_name attrib_end ·
r#279 attribute -> '@' 'binding' '(' expression attrib_end ·
r#280 attribute -> '@' 'align' '(' expression attrib_end ·
r#281 interpolation_sample_name -> 'center' ·
r#282 interpolation_sample_name -> 'centroid' ·
r#283 interpolation_sample_name -> 'sample' ·
r#284 attrib_end -> attrib_end/0.0 ')' ·
r#285 component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 ·
r#286 component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier ·
r#287 _template_args_end -> /\u200B_template_args_end/ ·
r#288 expression_comma_list/0.1/0/0.0 -> ',' expression ·
r#289 expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 ·
r#290 expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 ·
r#291 expression_comma_list/0.2 -> ',' ·
r#292 type_specifier_without_ident -> vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end ·
r#293 type_specifier_without_ident -> mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end ·
r#294 type_specifier_without_ident -> 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end ·
r#295 texture_and_sampler_types -> sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end ·
r#296 texture_and_sampler_types -> multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end ·
r#297 if_statement/0.1/0 -> else_if_clause if_statement/0.1/0 ·
r#298 if_statement -> if_clause if_statement/0.1 if_statement/0.2 ·
r#299 if_statement/0.2 -> else_clause ·
r#300 loop_statement/0.2 -> loop_statement/0.2/0 ·
r#301 for_header/0.0 -> for_init ·
r#302 for_init -> variable_statement ·
r#303 for_init -> variable_updating_statement ·
r#304 for_init -> func_call_statement ·
r#305 while_statement -> 'while' expression compound_statement ·
r#306 variable_statement -> variable_decl '=' expression ·
r#307 if_clause -> 'if' expression compound_statement ·
r#308 assignment_statement -> lhs_expression assignment_statement/0.1 expression ·
r#309 assignment_statement -> '_' '=' expression ·
r#310 core_lhs_expression -> '(' lhs_expression ')' ·
r#311 param/0.0/0 -> attribute param/0.0/0 ·
r#312 param_list/0.1 -> param_list/0.1/0 ·
r#313 struct_body_decl/0.2/0/0.0 -> ',' struct_member ·
r#314 struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 ·
r#315 struct_body_decl/0.3 -> ',' ·
r#316 variable_qualifier/0.2 -> ',' access_mode ·
r#317 access_mode -> 'read' ·
r#318 access_mode -> 'write' ·
r#319 access_mode -> 'read_write' ·
r#320 variable_qualifier -> _template_args_start address_space variable_qualifier/0.2 _template_args_end ·
r#321 struct_member -> struct_member/0.0 member_ident ':' type_specifier ·
r#322 struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' ·
r#323 function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 ·
r#324 param_list/0.1/0/0.0 -> ',' param ·
r#325 param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 ·
r#326 param_list -> param param_list/0.1 param_list/0.2 ·
r#327 param_list/0.2 -> ',' ·
r#328 variable_statement -> 'const' optionally_typed_ident '=' expression ·
r#329 variable_statement -> 'let' optionally_typed_ident '=' expression ·
r#330 loop_statement/0.2/0 -> statement loop_statement/0.2/0 ·
r#331 loop_statement/0.3 -> continuing_statement ·
r#332 switch_statement/0.3 -> switch_statement/0.3/0 ·
r#333 switch_body -> case_clause ·
r#334 switch_body -> default_alone_clause ·
r#335 else_clause -> 'else' compound_statement ·
r#336 array_type_specifier/0.4 -> ',' element_count_expression ·
r#337 element_count_expression -> additive_expression ·
r#338 element_count_expression -> bitwise_expression ·
r#339 array_type_specifier -> 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end ·
r#340 primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression ·
r#341 attribute -> '@' 'workgroup_size' '(' expression ',' expression attrib_end ·
r#342 attribute -> '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end ·
r#343 texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end ·
r#344 else_if_clause -> 'else' 'if' expression compound_statement ·
r#345 default_alone_clause/0.1 -> ':' ·
r#346 case_selector -> 'default' ·
r#347 case_selector -> expression ·
r#348 switch_statement/0.3/0 -> switch_body switch_statement/0.3/0 ·
r#349 switch_statement -> 'switch' expression '{' switch_statement/0.3 '}' ·
r#350 continuing_statement -> 'continuing' continuing_compound_statement ·
r#351 loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' ·
r#352 for_statement -> 'for' '(' for_header ')' compound_statement ·
r#353 for_header/0.2 -> expression ·
r#354 param -> param/0.0 ident ':' type_specifier ·
r#355 function_header/0.5/0.1 -> function_header/0.5/0.1/0 ·
r#356 function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 ·
r#357 function_header/0.5 -> '->' function_header/0.5/0.1 type_specifier ·
r#358 continuing_compound_statement/0.1 -> continuing_compound_statement/0.1/0 ·
r#359 case_selectors/0.1 -> case_selectors/0.1/0 ·
r#360 case_clause/0.2 -> ':' ·
r#361 default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement ·
r#362 type_specifier_without_ident/7.6 -> ',' access_mode ·
r#363 type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end ·
r#364 attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end ·
r#365 case_clause -> 'case' case_selectors case_clause/0.2 compound_statement ·
r#366 case_selectors/0.1/0/0.0 -> ',' case_selector ·
r#367 case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 ·
r#368 case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 ·
r#369 case_selectors/0.2 -> ',' ·
r#370 continuing_compound_statement/0.1/0 -> statement continuing_compound_statement/0.1/0 ·
r#371 continuing_compound_statement/0.2 -> break_if_statement ·
r#372 for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 ·
r#373 for_header/0.4 -> for_update ·
r#374 for_update -> variable_updating_statement ·
r#375 for_update -> func_call_statement ·
r#376 continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' ·
r#377 break_if_statement -> 'break' 'if' expression ';' ·

=Action:
[#0 'enable']: s#5
[#1 EndOfText]: acc
[#2 ';']: s#12
[#2 '@']: s#30
[#2 'alias']: s#22
[#2 'const']: s#20
[#2 'const_assert']: s#25
[#2 'struct']: s#23
[#3 ';']: r#0
[#3 '@']: r#0
[#3 'alias']: r#0
[#3 'const']: r#0
[#3 'const_assert']: r#0
[#3 'fn']: r#0
[#3 'override']: r#0
[#3 'struct']: r#0
[#3 'var']: r#0
[#3 EndOfText]: r#0
[#4 'enable']: s#5
[#5 'f16']: s#7
[#6 ';']: s#158
[#7 ';']: r#1
[#8 ';']: r#2
[#8 '@']: r#2
[#8 'alias']: r#2
[#8 'const']: r#2
[#8 'const_assert']: r#2
[#8 'fn']: r#2
[#8 'override']: r#2
[#8 'struct']: r#2
[#8 'var']: r#2
[#8 EndOfText]: r#2
[#9 EndOfText]: r#3
[#10 EndOfText]: r#4
[#11 ';']: s#12
[#11 '@']: s#30
[#11 'alias']: s#22
[#11 'const']: s#20
[#11 'const_assert']: s#25
[#11 'struct']: s#23
[#12 ';']: r#5
[#12 '@']: r#5
[#12 'alias']: r#5
[#12 'const']: r#5
[#12 'const_assert']: r#5
[#12 'fn']: r#5
[#12 'override']: r#5
[#12 'struct']: r#5
[#12 'var']: r#5
[#12 EndOfText]: r#5
[#13 ';']: s#156
[#14 ';']: s#155
[#15 ';']: s#154
[#16 ';']: r#6
[#16 '@']: r#6
[#16 'alias']: r#6
[#16 'const']: r#6
[#16 'const_assert']: r#6
[#16 'fn']: r#6
[#16 'override']: r#6
[#16 'struct']: r#6
[#16 'var']: r#6
[#16 EndOfText]: r#6
[#17 ';']: r#7
[#17 '@']: r#7
[#17 'alias']: r#7
[#17 'const']: r#7
[#17 'const_assert']: r#7
[#17 'fn']: r#7
[#17 'override']: r#7
[#17 'struct']: r#7
[#17 'var']: r#7
[#17 EndOfText]: r#7
[#18 ';']: s#153
[#19 'var']: s#152
[#20 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#21 'override']: s#148
[#22 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#23 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#24 'fn']: s#145
[#25 '!']: s#63
[#25 '&']: s#66
[#25 '(']: s#78
[#25 '*']: s#65
[#25 '-']: s#62
[#25 'array']: s#82
[#25 'atomic']: s#96
[#25 'bitcast']: s#72
[#25 'bool']: s#89
[#25 'f16']: s#91
[#25 'f32']: s#90
[#25 'false']: s#88
[#25 'i32']: s#92
[#25 'mat2x2']: s#101
[#25 'mat2x3']: s#102
[#25 'mat2x4']: s#103
[#25 'mat3x2']: s#104
[#25 'mat3x3']: s#105
[#25 'mat3x4']: s#106
[#25 'mat4x2']: s#107
[#25 'mat4x3']: s#108
[#25 'mat4x4']: s#109
[#25 'ptr']: s#94
[#25 'sampler']: s#126
[#25 'sampler_comparison']: s#127
[#25 'texture_1d']: s#133
[#25 'texture_2d']: s#134
[#25 'texture_2d_array']: s#135
[#25 'texture_3d']: s#136
[#25 'texture_cube']: s#137
[#25 'texture_cube_array']: s#138
[#25 'texture_depth_2d']: s#128
[#25 'texture_depth_2d_array']: s#129
[#25 'texture_depth_cube']: s#130
[#25 'texture_depth_cube_array']: s#131
[#25 'texture_depth_multisampled_2d']: s#132
[#25 'texture_multisampled_2d']: s#139
[#25 'texture_storage_1d']: s#140
[#25 'texture_storage_2d']: s#141
[#25 'texture_storage_2d_array']: s#142
[#25 'texture_storage_3d']: s#143
[#25 'true']: s#87
[#25 'u32']: s#93
[#25 'vec2']: s#98
[#25 'vec3']: s#99
[#25 'vec4']: s#100
[#25 '~']: s#64
[#25 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#25 /0[fh]/]: s#113
[#25 /0[iu]?/]: s#110
[#25 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#25 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#25 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#25 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#25 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#25 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#25 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#25 /[1-9][0-9]*[fh]/]: s#114
[#25 /[1-9][0-9]*[iu]?/]: s#111
[#26 'var']: r#8
[#27 'override']: r#9
[#28 'fn']: r#10
[#29 '@']: s#30
[#30 'align']: s#31
[#30 'binding']: s#32
[#30 'builtin']: s#33
[#30 'compute']: s#45
[#30 'const']: s#34
[#30 'fragment']: s#44
[#30 'group']: s#35
[#30 'id']: s#36
[#30 'interpolate']: s#37
[#30 'invariant']: s#38
[#30 'location']: s#39
[#30 'must_use']: s#40
[#30 'size']: s#41
[#30 'vertex']: s#43
[#30 'workgroup_size']: s#42
[#31 '(']: s#228
[#32 '(']: s#227
[#33 '(']: s#226
[#34 '@']: r#11
[#34 'array']: r#11
[#34 'atomic']: r#11
[#34 'bool']: r#11
[#34 'f16']: r#11
[#34 'f32']: r#11
[#34 'fn']: r#11
[#34 'i32']: r#11
[#34 'mat2x2']: r#11
[#34 'mat2x3']: r#11
[#34 'mat2x4']: r#11
[#34 'mat3x2']: r#11
[#34 'mat3x3']: r#11
[#34 'mat3x4']: r#11
[#34 'mat4x2']: r#11
[#34 'mat4x3']: r#11
[#34 'mat4x4']: r#11
[#34 'override']: r#11
[#34 'ptr']: r#11
[#34 'sampler']: r#11
[#34 'sampler_comparison']: r#11
[#34 'texture_1d']: r#11
[#34 'texture_2d']: r#11
[#34 'texture_2d_array']: r#11
[#34 'texture_3d']: r#11
[#34 'texture_cube']: r#11
[#34 'texture_cube_array']: r#11
[#34 'texture_depth_2d']: r#11
[#34 'texture_depth_2d_array']: r#11
[#34 'texture_depth_cube']: r#11
[#34 'texture_depth_cube_array']: r#11
[#34 'texture_depth_multisampled_2d']: r#11
[#34 'texture_multisampled_2d']: r#11
[#34 'texture_storage_1d']: r#11
[#34 'texture_storage_2d']: r#11
[#34 'texture_storage_2d_array']: r#11
[#34 'texture_storage_3d']: r#11
[#34 'u32']: r#11
[#34 'var']: r#11
[#34 'vec2']: r#11
[#34 'vec3']: r#11
[#34 'vec4']: r#11
[#34 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#11
[#35 '(']: s#225
[#36 '(']: s#224
[#37 '(']: s#223
[#38 '@']: r#12
[#38 'array']: r#12
[#38 'atomic']: r#12
[#38 'bool']: r#12
[#38 'f16']: r#12
[#38 'f32']: r#12
[#38 'fn']: r#12
[#38 'i32']: r#12
[#38 'mat2x2']: r#12
[#38 'mat2x3']: r#12
[#38 'mat2x4']: r#12
[#38 'mat3x2']: r#12
[#38 'mat3x3']: r#12
[#38 'mat3x4']: r#12
[#38 'mat4x2']: r#12
[#38 'mat4x3']: r#12
[#38 'mat4x4']: r#12
[#38 'override']: r#12
[#38 'ptr']: r#12
[#38 'sampler']: r#12
[#38 'sampler_comparison']: r#12
[#38 'texture_1d']: r#12
[#38 'texture_2d']: r#12
[#38 'texture_2d_array']: r#12
[#38 'texture_3d']: r#12
[#38 'texture_cube']: r#12
[#38 'texture_cube_array']: r#12
[#38 'texture_depth_2d']: r#12
[#38 'texture_depth_2d_array']: r#12
[#38 'texture_depth_cube']: r#12
[#38 'texture_depth_cube_array']: r#12
[#38 'texture_depth_multisampled_2d']: r#12
[#38 'texture_multisampled_2d']: r#12
[#38 'texture_storage_1d']: r#12
[#38 'texture_storage_2d']: r#12
[#38 'texture_storage_2d_array']: r#12
[#38 'texture_storage_3d']: r#12
[#38 'u32']: r#12
[#38 'var']: r#12
[#38 'vec2']: r#12
[#38 'vec3']: r#12
[#38 'vec4']: r#12
[#38 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#12
[#39 '(']: s#222
[#40 '@']: r#13
[#40 'array']: r#13
[#40 'atomic']: r#13
[#40 'bool']: r#13
[#40 'f16']: r#13
[#40 'f32']: r#13
[#40 'fn']: r#13
[#40 'i32']: r#13
[#40 'mat2x2']: r#13
[#40 'mat2x3']: r#13
[#40 'mat2x4']: r#13
[#40 'mat3x2']: r#13
[#40 'mat3x3']: r#13
[#40 'mat3x4']: r#13
[#40 'mat4x2']: r#13
[#40 'mat4x3']: r#13
[#40 'mat4x4']: r#13
[#40 'override']: r#13
[#40 'ptr']: r#13
[#40 'sampler']: r#13
[#40 'sampler_comparison']: r#13
[#40 'texture_1d']: r#13
[#40 'texture_2d']: r#13
[#40 'texture_2d_array']: r#13
[#40 'texture_3d']: r#13
[#40 'texture_cube']: r#13
[#40 'texture_cube_array']: r#13
[#40 'texture_depth_2d']: r#13
[#40 'texture_depth_2d_array']: r#13
[#40 'texture_depth_cube']: r#13
[#40 'texture_depth_cube_array']: r#13
[#40 'texture_depth_multisampled_2d']: r#13
[#40 'texture_multisampled_2d']: r#13
[#40 'texture_storage_1d']: r#13
[#40 'texture_storage_2d']: r#13
[#40 'texture_storage_2d_array']: r#13
[#40 'texture_storage_3d']: r#13
[#40 'u32']: r#13
[#40 'var']: r#13
[#40 'vec2']: r#13
[#40 'vec3']: r#13
[#40 'vec4']: r#13
[#40 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#13
[#41 '(']: s#221
[#42 '(']: s#220
[#43 '@']: r#14
[#43 'array']: r#14
[#43 'atomic']: r#14
[#43 'bool']: r#14
[#43 'f16']: r#14
[#43 'f32']: r#14
[#43 'fn']: r#14
[#43 'i32']: r#14
[#43 'mat2x2']: r#14
[#43 'mat2x3']: r#14
[#43 'mat2x4']: r#14
[#43 'mat3x2']: r#14
[#43 'mat3x3']: r#14
[#43 'mat3x4']: r#14
[#43 'mat4x2']: r#14
[#43 'mat4x3']: r#14
[#43 'mat4x4']: r#14
[#43 'override']: r#14
[#43 'ptr']: r#14
[#43 'sampler']: r#14
[#43 'sampler_comparison']: r#14
[#43 'texture_1d']: r#14
[#43 'texture_2d']: r#14
[#43 'texture_2d_array']: r#14
[#43 'texture_3d']: r#14
[#43 'texture_cube']: r#14
[#43 'texture_cube_array']: r#14
[#43 'texture_depth_2d']: r#14
[#43 'texture_depth_2d_array']: r#14
[#43 'texture_depth_cube']: r#14
[#43 'texture_depth_cube_array']: r#14
[#43 'texture_depth_multisampled_2d']: r#14
[#43 'texture_multisampled_2d']: r#14
[#43 'texture_storage_1d']: r#14
[#43 'texture_storage_2d']: r#14
[#43 'texture_storage_2d_array']: r#14
[#43 'texture_storage_3d']: r#14
[#43 'u32']: r#14
[#43 'var']: r#14
[#43 'vec2']: r#14
[#43 'vec3']: r#14
[#43 'vec4']: r#14
[#43 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#14
[#44 '@']: r#15
[#44 'array']: r#15
[#44 'atomic']: r#15
[#44 'bool']: r#15
[#44 'f16']: r#15
[#44 'f32']: r#15
[#44 'fn']: r#15
[#44 'i32']: r#15
[#44 'mat2x2']: r#15
[#44 'mat2x3']: r#15
[#44 'mat2x4']: r#15
[#44 'mat3x2']: r#15
[#44 'mat3x3']: r#15
[#44 'mat3x4']: r#15
[#44 'mat4x2']: r#15
[#44 'mat4x3']: r#15
[#44 'mat4x4']: r#15
[#44 'override']: r#15
[#44 'ptr']: r#15
[#44 'sampler']: r#15
[#44 'sampler_comparison']: r#15
[#44 'texture_1d']: r#15
[#44 'texture_2d']: r#15
[#44 'texture_2d_array']: r#15
[#44 'texture_3d']: r#15
[#44 'texture_cube']: r#15
[#44 'texture_cube_array']: r#15
[#44 'texture_depth_2d']: r#15
[#44 'texture_depth_2d_array']: r#15
[#44 'texture_depth_cube']: r#15
[#44 'texture_depth_cube_array']: r#15
[#44 'texture_depth_multisampled_2d']: r#15
[#44 'texture_multisampled_2d']: r#15
[#44 'texture_storage_1d']: r#15
[#44 'texture_storage_2d']: r#15
[#44 'texture_storage_2d_array']: r#15
[#44 'texture_storage_3d']: r#15
[#44 'u32']: r#15
[#44 'var']: r#15
[#44 'vec2']: r#15
[#44 'vec3']: r#15
[#44 'vec4']: r#15
[#44 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#15
[#45 '@']: r#16
[#45 'array']: r#16
[#45 'atomic']: r#16
[#45 'bool']: r#16
[#45 'f16']: r#16
[#45 'f32']: r#16
[#45 'fn']: r#16
[#45 'i32']: r#16
[#45 'mat2x2']: r#16
[#45 'mat2x3']: r#16
[#45 'mat2x4']: r#16
[#45 'mat3x2']: r#16
[#45 'mat3x3']: r#16
[#45 'mat3x4']: r#16
[#45 'mat4x2']: r#16
[#45 'mat4x3']: r#16
[#45 'mat4x4']: r#16
[#45 'override']: r#16
[#45 'ptr']: r#16
[#45 'sampler']: r#16
[#45 'sampler_comparison']: r#16
[#45 'texture_1d']: r#16
[#45 'texture_2d']: r#16
[#45 'texture_2d_array']: r#16
[#45 'texture_3d']: r#16
[#45 'texture_cube']: r#16
[#45 'texture_cube_array']: r#16
[#45 'texture_depth_2d']: r#16
[#45 'texture_depth_2d_array']: r#16
[#45 'texture_depth_cube']: r#16
[#45 'texture_depth_cube_array']: r#16
[#45 'texture_depth_multisampled_2d']: r#16
[#45 'texture_multisampled_2d']: r#16
[#45 'texture_storage_1d']: r#16
[#45 'texture_storage_2d']: r#16
[#45 'texture_storage_2d_array']: r#16
[#45 'texture_storage_3d']: r#16
[#45 'u32']: r#16
[#45 'var']: r#16
[#45 'vec2']: r#16
[#45 'vec3']: r#16
[#45 'vec4']: r#16
[#45 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#16
[#46 'var']: r#17
[#47 'override']: r#18
[#48 'fn']: r#19
[#49 ';']: r#20
[#50 '&&']: r#23
[#50 ')']: r#21
[#50 ',']: r#21
[#50 ':']: r#21
[#50 ';']: r#21
[#50 ']']: r#21
[#50 '{']: r#21
[#50 '||']: r#22
[#51 '||']: s#219
[#52 '&&']: s#218
[#53 ')']: r#24
[#53 ',']: r#24
[#53 ':']: r#24
[#53 ';']: r#24
[#53 ']']: r#24
[#53 '{']: r#24
[#54 '!=']: s#213
[#54 '&&']: r#25
[#54 ')']: r#25
[#54 ',']: r#25
[#54 ':']: r#25
[#54 ';']: r#25
[#54 '==']: s#212
[#54 ']']: r#25
[#54 '{']: r#25
[#54 '||']: r#25
[#54 /\u200B_greater_than/]: s#215
[#54 /\u200B_greater_than_equal/]: s#217
[#54 /\u200B_less_than/]: s#214
[#54 /\u200B_less_than_equal/]: s#216
[#55 '&']: s#207
[#56 '|']: s#206
[#57 '^']: s#205
[#58 '!=']: r#26
[#58 '&&']: r#26
[#58 ')']: r#26
[#58 '+']: s#203
[#58 ',']: r#26
[#58 '-']: s#204
[#58 ':']: r#26
[#58 ';']: r#26
[#58 '==']: r#26
[#58 ']']: r#26
[#58 '{']: r#26
[#58 '||']: r#26
[#58 /\u200B_greater_than/]: r#26
[#58 /\u200B_greater_than_equal/]: r#26
[#58 /\u200B_less_than/]: r#26
[#58 /\u200B_less_than_equal/]: r#26
[#59 '!=']: r#30
[#59 '%']: r#30
[#59 '&&']: r#30
[#59 '&']: r#27
[#59 ')']: r#30
[#59 '*']: r#30
[#59 '+']: r#30
[#59 ',']: r#30
[#59 '-']: r#30
[#59 '/']: r#30
[#59 ':']: r#30
[#59 ';']: r#30
[#59 '==']: r#30
[#59 ']']: r#30
[#59 '^']: r#29
[#59 '{']: r#30
[#59 '|']: r#28
[#59 '||']: r#30
[#59 /\u200B_greater_than/]: r#30
[#59 /\u200B_greater_than_equal/]: r#30
[#59 /\u200B_less_than/]: r#30
[#59 /\u200B_less_than_equal/]: r#30
[#59 /\u200B_shift_left/]: s#200
[#59 /\u200B_shift_right/]: s#201
[#60 '!=']: r#31
[#60 '%']: s#197
[#60 '&&']: r#31
[#60 ')']: r#31
[#60 '*']: s#195
[#60 '+']: r#31
[#60 ',']: r#31
[#60 '-']: r#31
[#60 '/']: s#196
[#60 ':']: r#31
[#60 ';']: r#31
[#60 '==']: r#31
[#60 ']']: r#31
[#60 '{']: r#31
[#60 '||']: r#31
[#60 /\u200B_greater_than/]: r#31
[#60 /\u200B_greater_than_equal/]: r#31
[#60 /\u200B_less_than/]: r#31
[#60 /\u200B_less_than_equal/]: r#31
[#60 /\u200B_template_args_end/]: r#31
[#61 '!=']: r#32
[#61 '%']: r#32
[#61 '&&']: r#32
[#61 '&']: r#32
[#61 ')']: r#32
[#61 '*']: r#32
[#61 '+']: r#32
[#61 ',']: r#32
[#61 '-']: r#32
[#61 '/']: r#32
[#61 ':']: r#32
[#61 ';']: r#32
[#61 '==']: r#32
[#61 ']']: r#32
[#61 '^']: r#32
[#61 '{']: r#32
[#61 '|']: r#32
[#61 '||']: r#32
[#61 /\u200B_greater_than/]: r#32
[#61 /\u200B_greater_than_equal/]: r#32
[#61 /\u200B_less_than/]: r#32
[#61 /\u200B_less_than_equal/]: r#32
[#61 /\u200B_shift_left/]: r#32
[#61 /\u200B_shift_right/]: r#32
[#61 /\u200B_template_args_end/]: r#32
[#62 '!']: s#63
[#62 '&']: s#66
[#62 '(']: s#78
[#62 '*']: s#65
[#62 '-']: s#62
[#62 'array']: s#82
[#62 'atomic']: s#96
[#62 'bitcast']: s#72
[#62 'bool']: s#89
[#62 'f16']: s#91
[#62 'f32']: s#90
[#62 'false']: s#88
[#62 'i32']: s#92
[#62 'mat2x2']: s#101
[#62 'mat2x3']: s#102
[#62 'mat2x4']: s#103
[#62 'mat3x2']: s#104
[#62 'mat3x3']: s#105
[#62 'mat3x4']: s#106
[#62 'mat4x2']: s#107
[#62 'mat4x3']: s#108
[#62 'mat4x4']: s#109
[#62 'ptr']: s#94
[#62 'sampler']: s#126
[#62 'sampler_comparison']: s#127
[#62 'texture_1d']: s#133
[#62 'texture_2d']: s#134
[#62 'texture_2d_array']: s#135
[#62 'texture_3d']: s#136
[#62 'texture_cube']: s#137
[#62 'texture_cube_array']: s#138
[#62 'texture_depth_2d']: s#128
[#62 'texture_depth_2d_array']: s#129
[#62 'texture_depth_cube']: s#130
[#62 'texture_depth_cube_array']: s#131
[#62 'texture_depth_multisampled_2d']: s#132
[#62 'texture_multisampled_2d']: s#139
[#62 'texture_storage_1d']: s#140
[#62 'texture_storage_2d']: s#141
[#62 'texture_storage_2d_array']: s#142
[#62 'texture_storage_3d']: s#143
[#62 'true']: s#87
[#62 'u32']: s#93
[#62 'vec2']: s#98
[#62 'vec3']: s#99
[#62 'vec4']: s#100
[#62 '~']: s#64
[#62 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#62 /0[fh]/]: s#113
[#62 /0[iu]?/]: s#110
[#62 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#62 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#62 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#62 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#62 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#62 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#62 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#62 /[1-9][0-9]*[fh]/]: s#114
[#62 /[1-9][0-9]*[iu]?/]: s#111
[#63 '!']: s#63
[#63 '&']: s#66
[#63 '(']: s#78
[#63 '*']: s#65
[#63 '-']: s#62
[#63 'array']: s#82
[#63 'atomic']: s#96
[#63 'bitcast']: s#72
[#63 'bool']: s#89
[#63 'f16']: s#91
[#63 'f32']: s#90
[#63 'false']: s#88
[#63 'i32']: s#92
[#63 'mat2x2']: s#101
[#63 'mat2x3']: s#102
[#63 'mat2x4']: s#103
[#63 'mat3x2']: s#104
[#63 'mat3x3']: s#105
[#63 'mat3x4']: s#106
[#63 'mat4x2']: s#107
[#63 'mat4x3']: s#108
[#63 'mat4x4']: s#109
[#63 'ptr']: s#94
[#63 'sampler']: s#126
[#63 'sampler_comparison']: s#127
[#63 'texture_1d']: s#133
[#63 'texture_2d']: s#134
[#63 'texture_2d_array']: s#135
[#63 'texture_3d']: s#136
[#63 'texture_cube']: s#137
[#63 'texture_cube_array']: s#138
[#63 'texture_depth_2d']: s#128
[#63 'texture_depth_2d_array']: s#129
[#63 'texture_depth_cube']: s#130
[#63 'texture_depth_cube_array']: s#131
[#63 'texture_depth_multisampled_2d']: s#132
[#63 'texture_multisampled_2d']: s#139
[#63 'texture_storage_1d']: s#140
[#63 'texture_storage_2d']: s#141
[#63 'texture_storage_2d_array']: s#142
[#63 'texture_storage_3d']: s#143
[#63 'true']: s#87
[#63 'u32']: s#93
[#63 'vec2']: s#98
[#63 'vec3']: s#99
[#63 'vec4']: s#100
[#63 '~']: s#64
[#63 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#63 /0[fh]/]: s#113
[#63 /0[iu]?/]: s#110
[#63 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#63 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#63 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#63 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#63 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#63 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#63 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#63 /[1-9][0-9]*[fh]/]: s#114
[#63 /[1-9][0-9]*[iu]?/]: s#111
[#64 '!']: s#63
[#64 '&']: s#66
[#64 '(']: s#78
[#64 '*']: s#65
[#64 '-']: s#62
[#64 'array']: s#82
[#64 'atomic']: s#96
[#64 'bitcast']: s#72
[#64 'bool']: s#89
[#64 'f16']: s#91
[#64 'f32']: s#90
[#64 'false']: s#88
[#64 'i32']: s#92
[#64 'mat2x2']: s#101
[#64 'mat2x3']: s#102
[#64 'mat2x4']: s#103
[#64 'mat3x2']: s#104
[#64 'mat3x3']: s#105
[#64 'mat3x4']: s#106
[#64 'mat4x2']: s#107
[#64 'mat4x3']: s#108
[#64 'mat4x4']: s#109
[#64 'ptr']: s#94
[#64 'sampler']: s#126
[#64 'sampler_comparison']: s#127
[#64 'texture_1d']: s#133
[#64 'texture_2d']: s#134
[#64 'texture_2d_array']: s#135
[#64 'texture_3d']: s#136
[#64 'texture_cube']: s#137
[#64 'texture_cube_array']: s#138
[#64 'texture_depth_2d']: s#128
[#64 'texture_depth_2d_array']: s#129
[#64 'texture_depth_cube']: s#130
[#64 'texture_depth_cube_array']: s#131
[#64 'texture_depth_multisampled_2d']: s#132
[#64 'texture_multisampled_2d']: s#139
[#64 'texture_storage_1d']: s#140
[#64 'texture_storage_2d']: s#141
[#64 'texture_storage_2d_array']: s#142
[#64 'texture_storage_3d']: s#143
[#64 'true']: s#87
[#64 'u32']: s#93
[#64 'vec2']: s#98
[#64 'vec3']: s#99
[#64 'vec4']: s#100
[#64 '~']: s#64
[#64 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#64 /0[fh]/]: s#113
[#64 /0[iu]?/]: s#110
[#64 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#64 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#64 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#64 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#64 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#64 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#64 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#64 /[1-9][0-9]*[fh]/]: s#114
[#64 /[1-9][0-9]*[iu]?/]: s#111
[#65 '!']: s#63
[#65 '&']: s#66
[#65 '(']: s#78
[#65 '*']: s#65
[#65 '-']: s#62
[#65 'array']: s#82
[#65 'atomic']: s#96
[#65 'bitcast']: s#72
[#65 'bool']: s#89
[#65 'f16']: s#91
[#65 'f32']: s#90
[#65 'false']: s#88
[#65 'i32']: s#92
[#65 'mat2x2']: s#101
[#65 'mat2x3']: s#102
[#65 'mat2x4']: s#103
[#65 'mat3x2']: s#104
[#65 'mat3x3']: s#105
[#65 'mat3x4']: s#106
[#65 'mat4x2']: s#107
[#65 'mat4x3']: s#108
[#65 'mat4x4']: s#109
[#65 'ptr']: s#94
[#65 'sampler']: s#126
[#65 'sampler_comparison']: s#127
[#65 'texture_1d']: s#133
[#65 'texture_2d']: s#134
[#65 'texture_2d_array']: s#135
[#65 'texture_3d']: s#136
[#65 'texture_cube']: s#137
[#65 'texture_cube_array']: s#138
[#65 'texture_depth_2d']: s#128
[#65 'texture_depth_2d_array']: s#129
[#65 'texture_depth_cube']: s#130
[#65 'texture_depth_cube_array']: s#131
[#65 'texture_depth_multisampled_2d']: s#132
[#65 'texture_multisampled_2d']: s#139
[#65 'texture_storage_1d']: s#140
[#65 'texture_storage_2d']: s#141
[#65 'texture_storage_2d_array']: s#142
[#65 'texture_storage_3d']: s#143
[#65 'true']: s#87
[#65 'u32']: s#93
[#65 'vec2']: s#98
[#65 'vec3']: s#99
[#65 'vec4']: s#100
[#65 '~']: s#64
[#65 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#65 /0[fh]/]: s#113
[#65 /0[iu]?/]: s#110
[#65 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#65 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#65 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#65 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#65 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#65 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#65 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#65 /[1-9][0-9]*[fh]/]: s#114
[#65 /[1-9][0-9]*[iu]?/]: s#111
[#66 '!']: s#63
[#66 '&']: s#66
[#66 '(']: s#78
[#66 '*']: s#65
[#66 '-']: s#62
[#66 'array']: s#82
[#66 'atomic']: s#96
[#66 'bitcast']: s#72
[#66 'bool']: s#89
[#66 'f16']: s#91
[#66 'f32']: s#90
[#66 'false']: s#88
[#66 'i32']: s#92
[#66 'mat2x2']: s#101
[#66 'mat2x3']: s#102
[#66 'mat2x4']: s#103
[#66 'mat3x2']: s#104
[#66 'mat3x3']: s#105
[#66 'mat3x4']: s#106
[#66 'mat4x2']: s#107
[#66 'mat4x3']: s#108
[#66 'mat4x4']: s#109
[#66 'ptr']: s#94
[#66 'sampler']: s#126
[#66 'sampler_comparison']: s#127
[#66 'texture_1d']: s#133
[#66 'texture_2d']: s#134
[#66 'texture_2d_array']: s#135
[#66 'texture_3d']: s#136
[#66 'texture_cube']: s#137
[#66 'texture_cube_array']: s#138
[#66 'texture_depth_2d']: s#128
[#66 'texture_depth_2d_array']: s#129
[#66 'texture_depth_cube']: s#130
[#66 'texture_depth_cube_array']: s#131
[#66 'texture_depth_multisampled_2d']: s#132
[#66 'texture_multisampled_2d']: s#139
[#66 'texture_storage_1d']: s#140
[#66 'texture_storage_2d']: s#141
[#66 'texture_storage_2d_array']: s#142
[#66 'texture_storage_3d']: s#143
[#66 'true']: s#87
[#66 'u32']: s#93
[#66 'vec2']: s#98
[#66 'vec3']: s#99
[#66 'vec4']: s#100
[#66 '~']: s#64
[#66 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#66 /0[fh]/]: s#113
[#66 /0[iu]?/]: s#110
[#66 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#66 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#66 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#66 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#66 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#66 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#66 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#66 /[1-9][0-9]*[fh]/]: s#114
[#66 /[1-9][0-9]*[iu]?/]: s#111
[#67 '.']: s#188
[#67 '[']: s#187
[#68 '!=']: r#33
[#68 '%']: r#33
[#68 '&&']: r#33
[#68 '&']: r#33
[#68 '(']: r#34
[#68 ')']: r#33
[#68 '*']: r#33
[#68 '+']: r#33
[#68 ',']: r#33
[#68 '-']: r#33
[#68 '.']: r#33
[#68 '/']: r#33
[#68 ':']: r#33
[#68 ';']: r#33
[#68 '==']: r#33
[#68 '[']: r#33
[#68 ']']: r#33
[#68 '^']: r#33
[#68 '{']: r#33
[#68 '|']: r#33
[#68 '||']: r#33
[#68 /\u200B_greater_than/]: r#33
[#68 /\u200B_greater_than_equal/]: r#33
[#68 /\u200B_less_than/]: r#33
[#68 /\u200B_less_than_equal/]: r#33
[#68 /\u200B_shift_left/]: r#33
[#68 /\u200B_shift_right/]: r#33
[#68 /\u200B_template_args_end/]: r#33
[#69 '!=']: r#35
[#69 '%']: r#35
[#69 '&&']: r#35
[#69 '&']: r#35
[#69 ')']: r#35
[#69 '*']: r#35
[#69 '+']: r#35
[#69 ',']: r#35
[#69 '-']: r#35
[#69 '.']: r#35
[#69 '/']: r#35
[#69 ':']: r#35
[#69 ';']: r#35
[#69 '==']: r#35
[#69 '[']: r#35
[#69 ']']: r#35
[#69 '^']: r#35
[#69 '{']: r#35
[#69 '|']: r#35
[#69 '||']: r#35
[#69 /\u200B_greater_than/]: r#35
[#69 /\u200B_greater_than_equal/]: r#35
[#69 /\u200B_less_than/]: r#35
[#69 /\u200B_less_than_equal/]: r#35
[#69 /\u200B_shift_left/]: r#35
[#69 /\u200B_shift_right/]: r#35
[#69 /\u200B_template_args_end/]: r#35
[#70 '!=']: r#36
[#70 '%']: r#36
[#70 '&&']: r#36
[#70 '&']: r#36
[#70 ')']: r#36
[#70 '*']: r#36
[#70 '+']: r#36
[#70 ',']: r#36
[#70 '-']: r#36
[#70 '.']: r#36
[#70 '/']: r#36
[#70 ':']: r#36
[#70 ';']: r#36
[#70 '==']: r#36
[#70 '[']: r#36
[#70 ']']: r#36
[#70 '^']: r#36
[#70 '{']: r#36
[#70 '|']: r#36
[#70 '||']: r#36
[#70 /\u200B_greater_than/]: r#36
[#70 /\u200B_greater_than_equal/]: r#36
[#70 /\u200B_less_than/]: r#36
[#70 /\u200B_less_than_equal/]: r#36
[#70 /\u200B_shift_left/]: r#36
[#70 /\u200B_shift_right/]: r#36
[#70 /\u200B_template_args_end/]: r#36
[#71 '!=']: r#37
[#71 '%']: r#37
[#71 '&&']: r#37
[#71 '&']: r#37
[#71 ')']: r#37
[#71 '*']: r#37
[#71 '+']: r#37
[#71 ',']: r#37
[#71 '-']: r#37
[#71 '.']: r#37
[#71 '/']: r#37
[#71 ':']: r#37
[#71 ';']: r#37
[#71 '==']: r#37
[#71 '[']: r#37
[#71 ']']: r#37
[#71 '^']: r#37
[#71 '{']: r#37
[#71 '|']: r#37
[#71 '||']: r#37
[#71 /\u200B_greater_than/]: r#37
[#71 /\u200B_greater_than_equal/]: r#37
[#71 /\u200B_less_than/]: r#37
[#71 /\u200B_less_than_equal/]: r#37
[#71 /\u200B_shift_left/]: r#37
[#71 /\u200B_shift_right/]: r#37
[#71 /\u200B_template_args_end/]: r#37
[#72 /\u200B_disambiguate_template/]: s#160
[#73 '!=']: r#38
[#73 '%']: r#38
[#73 '%=']: r#38
[#73 '&&']: r#38
[#73 '&']: r#38
[#73 '&=']: r#38
[#73 '(']: r#38
[#73 ')']: r#38
[#73 '*']: r#38
[#73 '*=']: r#38
[#73 '+']: r#38
[#73 '++']: r#38
[#73 '+=']: r#38
[#73 ',']: r#38
[#73 '-']: r#38
[#73 '--']: r#38
[#73 '-=']: r#38
[#73 '.']: r#38
[#73 '/']: r#38
[#73 '/=']: r#38
[#73 ':']: r#38
[#73 ';']: r#38
[#73 '=']: r#38
[#73 '==']: r#38
[#73 '[']: r#38
[#73 ']']: r#38
[#73 '^']: r#38
[#73 '^=']: r#38
[#73 '{']: r#38
[#73 '|']: r#38
[#73 '|=']: r#38
[#73 '||']: r#38
[#73 '}']: r#38
[#73 /\u200B_greater_than/]: r#38
[#73 /\u200B_greater_than_equal/]: r#38
[#73 /\u200B_less_than/]: r#38
[#73 /\u200B_less_than_equal/]: r#38
[#73 /\u200B_shift_left/]: r#38
[#73 /\u200B_shift_left_assign/]: r#38
[#73 /\u200B_shift_right/]: r#38
[#73 /\u200B_shift_right_assign/]: r#38
[#73 /\u200B_template_args_end/]: r#38
[#74 '(']: s#183
[#75 '!=']: r#39
[#75 '%']: r#39
[#75 '&&']: r#39
[#75 '&']: r#39
[#75 ')']: r#39
[#75 '*']: r#39
[#75 '+']: r#39
[#75 ',']: r#39
[#75 '-']: r#39
[#75 '.']: r#39
[#75 '/']: r#39
[#75 ':']: r#39
[#75 ';']: r#39
[#75 '==']: r#39
[#75 '[']: r#39
[#75 ']']: r#39
[#75 '^']: r#39
[#75 '{']: r#39
[#75 '|']: r#39
[#75 '||']: r#39
[#75 /\u200B_greater_than/]: r#39
[#75 /\u200B_greater_than_equal/]: r#39
[#75 /\u200B_less_than/]: r#39
[#75 /\u200B_less_than_equal/]: r#39
[#75 /\u200B_shift_left/]: r#39
[#75 /\u200B_shift_right/]: r#39
[#75 /\u200B_template_args_end/]: r#39
[#76 '!=']: r#40
[#76 '%']: r#40
[#76 '&&']: r#40
[#76 '&']: r#40
[#76 ')']: r#40
[#76 '*']: r#40
[#76 '+']: r#40
[#76 ',']: r#40
[#76 '-']: r#40
[#76 '.']: r#40
[#76 '/']: r#40
[#76 ':']: r#40
[#76 ';']: r#40
[#76 '==']: r#40
[#76 '[']: r#40
[#76 ']']: r#40
[#76 '^']: r#40
[#76 '{']: r#40
[#76 '|']: r#40
[#76 '||']: r#40
[#76 /\u200B_greater_than/]: r#40
[#76 /\u200B_greater_than_equal/]: r#40
[#76 /\u200B_less_than/]: r#40
[#76 /\u200B_less_than_equal/]: r#40
[#76 /\u200B_shift_left/]: r#40
[#76 /\u200B_shift_right/]: r#40
[#76 /\u200B_template_args_end/]: r#40
[#77 '!=']: r#41
[#77 '%']: r#41
[#77 '&&']: r#41
[#77 '&']: r#41
[#77 ')']: r#41
[#77 '*']: r#41
[#77 '+']: r#41
[#77 ',']: r#41
[#77 '-']: r#41
[#77 '.']: r#41
[#77 '/']: r#41
[#77 ':']: r#41
[#77 ';']: r#41
[#77 '==']: r#41
[#77 '[']: r#41
[#77 ']']: r#41
[#77 '^']: r#41
[#77 '{']: r#41
[#77 '|']: r#41
[#77 '||']: r#41
[#77 /\u200B_greater_than/]: r#41
[#77 /\u200B_greater_than_equal/]: r#41
[#77 /\u200B_less_than/]: r#41
[#77 /\u200B_less_than_equal/]: r#41
[#77 /\u200B_shift_left/]: r#41
[#77 /\u200B_shift_right/]: r#41
[#77 /\u200B_template_args_end/]: r#41
[#78 '!']: s#63
[#78 '&']: s#66
[#78 '(']: s#78
[#78 '*']: s#65
[#78 '-']: s#62
[#78 'array']: s#82
[#78 'atomic']: s#96
[#78 'bitcast']: s#72
[#78 'bool']: s#89
[#78 'f16']: s#91
[#78 'f32']: s#90
[#78 'false']: s#88
[#78 'i32']: s#92
[#78 'mat2x2']: s#101
[#78 'mat2x3']: s#102
[#78 'mat2x4']: s#103
[#78 'mat3x2']: s#104
[#78 'mat3x3']: s#105
[#78 'mat3x4']: s#106
[#78 'mat4x2']: s#107
[#78 'mat4x3']: s#108
[#78 'mat4x4']: s#109
[#78 'ptr']: s#94
[#78 'sampler']: s#126
[#78 'sampler_comparison']: s#127
[#78 'texture_1d']: s#133
[#78 'texture_2d']: s#134
[#78 'texture_2d_array']: s#135
[#78 'texture_3d']: s#136
[#78 'texture_cube']: s#137
[#78 'texture_cube_array']: s#138
[#78 'texture_depth_2d']: s#128
[#78 'texture_depth_2d_array']: s#129
[#78 'texture_depth_cube']: s#130
[#78 'texture_depth_cube_array']: s#131
[#78 'texture_depth_multisampled_2d']: s#132
[#78 'texture_multisampled_2d']: s#139
[#78 'texture_storage_1d']: s#140
[#78 'texture_storage_2d']: s#141
[#78 'texture_storage_2d_array']: s#142
[#78 'texture_storage_3d']: s#143
[#78 'true']: s#87
[#78 'u32']: s#93
[#78 'vec2']: s#98
[#78 'vec3']: s#99
[#78 'vec4']: s#100
[#78 '~']: s#64
[#78 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#78 /0[fh]/]: s#113
[#78 /0[iu]?/]: s#110
[#78 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#78 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#78 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#78 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#78 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#78 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#78 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#78 /[1-9][0-9]*[fh]/]: s#114
[#78 /[1-9][0-9]*[iu]?/]: s#111
[#79 '(']: r#42
[#80 /\u200B_disambiguate_template/]: s#160
[#81 /\u200B_disambiguate_template/]: s#160
[#82 /\u200B_disambiguate_template/]: s#160
[#83 '!=']: r#43
[#83 '%']: r#43
[#83 '&&']: r#43
[#83 '&']: r#43
[#83 ')']: r#43
[#83 '*']: r#43
[#83 '+']: r#43
[#83 ',']: r#43
[#83 '-']: r#43
[#83 '.']: r#43
[#83 '/']: r#43
[#83 ':']: r#43
[#83 ';']: r#43
[#83 '==']: r#43
[#83 '[']: r#43
[#83 ']']: r#43
[#83 '^']: r#43
[#83 '{']: r#43
[#83 '|']: r#43
[#83 '||']: r#43
[#83 /\u200B_greater_than/]: r#43
[#83 /\u200B_greater_than_equal/]: r#43
[#83 /\u200B_less_than/]: r#43
[#83 /\u200B_less_than_equal/]: r#43
[#83 /\u200B_shift_left/]: r#43
[#83 /\u200B_shift_right/]: r#43
[#83 /\u200B_template_args_end/]: r#43
[#84 '!=']: r#44
[#84 '%']: r#44
[#84 '&&']: r#44
[#84 '&']: r#44
[#84 ')']: r#44
[#84 '*']: r#44
[#84 '+']: r#44
[#84 ',']: r#44
[#84 '-']: r#44
[#84 '.']: r#44
[#84 '/']: r#44
[#84 ':']: r#44
[#84 ';']: r#44
[#84 '==']: r#44
[#84 '[']: r#44
[#84 ']']: r#44
[#84 '^']: r#44
[#84 '{']: r#44
[#84 '|']: r#44
[#84 '||']: r#44
[#84 /\u200B_greater_than/]: r#44
[#84 /\u200B_greater_than_equal/]: r#44
[#84 /\u200B_less_than/]: r#44
[#84 /\u200B_less_than_equal/]: r#44
[#84 /\u200B_shift_left/]: r#44
[#84 /\u200B_shift_right/]: r#44
[#84 /\u200B_template_args_end/]: r#44
[#85 '!=']: r#45
[#85 '%']: r#45
[#85 '&&']: r#45
[#85 '&']: r#45
[#85 ')']: r#45
[#85 '*']: r#45
[#85 '+']: r#45
[#85 ',']: r#45
[#85 '-']: r#45
[#85 '.']: r#45
[#85 '/']: r#45
[#85 ':']: r#45
[#85 ';']: r#45
[#85 '==']: r#45
[#85 '[']: r#45
[#85 ']']: r#45
[#85 '^']: r#45
[#85 '{']: r#45
[#85 '|']: r#45
[#85 '||']: r#45
[#85 /\u200B_greater_than/]: r#45
[#85 /\u200B_greater_than_equal/]: r#45
[#85 /\u200B_less_than/]: r#45
[#85 /\u200B_less_than_equal/]: r#45
[#85 /\u200B_shift_left/]: r#45
[#85 /\u200B_shift_right/]: r#45
[#85 /\u200B_template_args_end/]: r#45
[#86 '!=']: r#46
[#86 '%']: r#46
[#86 '&&']: r#46
[#86 '&']: r#46
[#86 ')']: r#46
[#86 '*']: r#46
[#86 '+']: r#46
[#86 ',']: r#46
[#86 '-']: r#46
[#86 '.']: r#46
[#86 '/']: r#46
[#86 ':']: r#46
[#86 ';']: r#46
[#86 '==']: r#46
[#86 '[']: r#46
[#86 ']']: r#46
[#86 '^']: r#46
[#86 '{']: r#46
[#86 '|']: r#46
[#86 '||']: r#46
[#86 /\u200B_greater_than/]: r#46
[#86 /\u200B_greater_than_equal/]: r#46
[#86 /\u200B_less_than/]: r#46
[#86 /\u200B_less_than_equal/]: r#46
[#86 /\u200B_shift_left/]: r#46
[#86 /\u200B_shift_right/]: r#46
[#86 /\u200B_template_args_end/]: r#46
[#87 '!=']: r#47
[#87 '%']: r#47
[#87 '&&']: r#47
[#87 '&']: r#47
[#87 ')']: r#47
[#87 '*']: r#47
[#87 '+']: r#47
[#87 ',']: r#47
[#87 '-']: r#47
[#87 '.']: r#47
[#87 '/']: r#47
[#87 ':']: r#47
[#87 ';']: r#47
[#87 '==']: r#47
[#87 '[']: r#47
[#87 ']']: r#47
[#87 '^']: r#47
[#87 '{']: r#47
[#87 '|']: r#47
[#87 '||']: r#47
[#87 /\u200B_greater_than/]: r#47
[#87 /\u200B_greater_than_equal/]: r#47
[#87 /\u200B_less_than/]: r#47
[#87 /\u200B_less_than_equal/]: r#47
[#87 /\u200B_shift_left/]: r#47
[#87 /\u200B_shift_right/]: r#47
[#87 /\u200B_template_args_end/]: r#47
[#88 '!=']: r#48
[#88 '%']: r#48
[#88 '&&']: r#48
[#88 '&']: r#48
[#88 ')']: r#48
[#88 '*']: r#48
[#88 '+']: r#48
[#88 ',']: r#48
[#88 '-']: r#48
[#88 '.']: r#48
[#88 '/']: r#48
[#88 ':']: r#48
[#88 ';']: r#48
[#88 '==']: r#48
[#88 '[']: r#48
[#88 ']']: r#48
[#88 '^']: r#48
[#88 '{']: r#48
[#88 '|']: r#48
[#88 '||']: r#48
[#88 /\u200B_greater_than/]: r#48
[#88 /\u200B_greater_than_equal/]: r#48
[#88 /\u200B_less_than/]: r#48
[#88 /\u200B_less_than_equal/]: r#48
[#88 /\u200B_shift_left/]: r#48
[#88 /\u200B_shift_right/]: r#48
[#88 /\u200B_template_args_end/]: r#48
[#89 '(']: r#49
[#89 ')']: r#49
[#89 ',']: r#49
[#89 ';']: r#49
[#89 '=']: r#49
[#89 '{']: r#49
[#89 '}']: r#49
[#89 /\u200B_template_args_end/]: r#49
[#90 '(']: r#50
[#90 ')']: r#50
[#90 ',']: r#50
[#90 ';']: r#50
[#90 '=']: r#50
[#90 '{']: r#50
[#90 '}']: r#50
[#90 /\u200B_template_args_end/]: r#50
[#91 '(']: r#51
[#91 ')']: r#51
[#91 ',']: r#51
[#91 ';']: r#51
[#91 '=']: r#51
[#91 '{']: r#51
[#91 '}']: r#51
[#91 /\u200B_template_args_end/]: r#51
[#92 '(']: r#52
[#92 ')']: r#52
[#92 ',']: r#52
[#92 ';']: r#52
[#92 '=']: r#52
[#92 '{']: r#52
[#92 '}']: r#52
[#92 /\u200B_template_args_end/]: r#52
[#93 '(']: r#53
[#93 ')']: r#53
[#93 ',']: r#53
[#93 ';']: r#53
[#93 '=']: r#53
[#93 '{']: r#53
[#93 '}']: r#53
[#93 /\u200B_template_args_end/]: r#53
[#94 /\u200B_disambiguate_template/]: s#160
[#95 '(']: r#54
[#95 ')']: r#54
[#95 ',']: r#54
[#95 ';']: r#54
[#95 '=']: r#54
[#95 '{']: r#54
[#95 '}']: r#54
[#95 /\u200B_template_args_end/]: r#54
[#96 /\u200B_disambiguate_template/]: s#160
[#97 '(']: r#55
[#97 ')']: r#55
[#97 ',']: r#55
[#97 ';']: r#55
[#97 '=']: r#55
[#97 '{']: r#55
[#97 '}']: r#55
[#97 /\u200B_template_args_end/]: r#55
[#98 /\u200B_disambiguate_template/]: r#56
[#99 /\u200B_disambiguate_template/]: r#57
[#100 /\u200B_disambiguate_template/]: r#58
[#101 /\u200B_disambiguate_template/]: r#59
[#102 /\u200B_disambiguate_template/]: r#60
[#103 /\u200B_disambiguate_template/]: r#61
[#104 /\u200B_disambiguate_template/]: r#62
[#105 /\u200B_disambiguate_template/]: r#63
[#106 /\u200B_disambiguate_template/]: r#64
[#107 /\u200B_disambiguate_template/]: r#65
[#108 /\u200B_disambiguate_template/]: r#66
[#109 /\u200B_disambiguate_template/]: r#67
[#110 '!=']: r#68
[#110 '%']: r#68
[#110 '&&']: r#68
[#110 '&']: r#68
[#110 ')']: r#68
[#110 '*']: r#68
[#110 '+']: r#68
[#110 ',']: r#68
[#110 '-']: r#68
[#110 '.']: r#68
[#110 '/']: r#68
[#110 ':']: r#68
[#110 ';']: r#68
[#110 '==']: r#68
[#110 '[']: r#68
[#110 ']']: r#68
[#110 '^']: r#68
[#110 '{']: r#68
[#110 '|']: r#68
[#110 '||']: r#68
[#110 /\u200B_greater_than/]: r#68
[#110 /\u200B_greater_than_equal/]: r#68
[#110 /\u200B_less_than/]: r#68
[#110 /\u200B_less_than_equal/]: r#68
[#110 /\u200B_shift_left/]: r#68
[#110 /\u200B_shift_right/]: r#68
[#110 /\u200B_template_args_end/]: r#68
[#111 '!=']: r#69
[#111 '%']: r#69
[#111 '&&']: r#69
[#111 '&']: r#69
[#111 ')']: r#69
[#111 '*']: r#69
[#111 '+']: r#69
[#111 ',']: r#69
[#111 '-']: r#69
[#111 '.']: r#69
[#111 '/']: r#69
[#111 ':']: r#69
[#111 ';']: r#69
[#111 '==']: r#69
[#111 '[']: r#69
[#111 ']']: r#69
[#111 '^']: r#69
[#111 '{']: r#69
[#111 '|']: r#69
[#111 '||']: r#69
[#111 /\u200B_greater_than/]: r#69
[#111 /\u200B_greater_than_equal/]: r#69
[#111 /\u200B_less_than/]: r#69
[#111 /\u200B_less_than_equal/]: r#69
[#111 /\u200B_shift_left/]: r#69
[#111 /\u200B_shift_right/]: r#69
[#111 /\u200B_template_args_end/]: r#69
[#112 '!=']: r#70
[#112 '%']: r#70
[#112 '&&']: r#70
[#112 '&']: r#70
[#112 ')']: r#70
[#112 '*']: r#70
[#112 '+']: r#70
[#112 ',']: r#70
[#112 '-']: r#70
[#112 '.']: r#70
[#112 '/']: r#70
[#112 ':']: r#70
[#112 ';']: r#70
[#112 '==']: r#70
[#112 '[']: r#70
[#112 ']']: r#70
[#112 '^']: r#70
[#112 '{']: r#70
[#112 '|']: r#70
[#112 '||']: r#70
[#112 /\u200B_greater_than/]: r#70
[#112 /\u200B_greater_than_equal/]: r#70
[#112 /\u200B_less_than/]: r#70
[#112 /\u200B_less_than_equal/]: r#70
[#112 /\u200B_shift_left/]: r#70
[#112 /\u200B_shift_right/]: r#70
[#112 /\u200B_template_args_end/]: r#70
[#113 '!=']: r#71
[#113 '%']: r#71
[#113 '&&']: r#71
[#113 '&']: r#71
[#113 ')']: r#71
[#113 '*']: r#71
[#113 '+']: r#71
[#113 ',']: r#71
[#113 '-']: r#71
[#113 '.']: r#71
[#113 '/']: r#71
[#113 ':']: r#71
[#113 ';']: r#71
[#113 '==']: r#71
[#113 '[']: r#71
[#113 ']']: r#71
[#113 '^']: r#71
[#113 '{']: r#71
[#113 '|']: r#71
[#113 '||']: r#71
[#113 /\u200B_greater_than/]: r#71
[#113 /\u200B_greater_than_equal/]: r#71
[#113 /\u200B_less_than/]: r#71
[#113 /\u200B_less_than_equal/]: r#71
[#113 /\u200B_shift_left/]: r#71
[#113 /\u200B_shift_right/]: r#71
[#113 /\u200B_template_args_end/]: r#71
[#114 '!=']: r#72
[#114 '%']: r#72
[#114 '&&']: r#72
[#114 '&']: r#72
[#114 ')']: r#72
[#114 '*']: r#72
[#114 '+']: r#72
[#114 ',']: r#72
[#114 '-']: r#72
[#114 '.']: r#72
[#114 '/']: r#72
[#114 ':']: r#72
[#114 ';']: r#72
[#114 '==']: r#72
[#114 '[']: r#72
[#114 ']']: r#72
[#114 '^']: r#72
[#114 '{']: r#72
[#114 '|']: r#72
[#114 '||']: r#72
[#114 /\u200B_greater_than/]: r#72
[#114 /\u200B_greater_than_equal/]: r#72
[#114 /\u200B_less_than/]: r#72
[#114 /\u200B_less_than_equal/]: r#72
[#114 /\u200B_shift_left/]: r#72
[#114 /\u200B_shift_right/]: r#72
[#114 /\u200B_template_args_end/]: r#72
[#115 '!=']: r#73
[#115 '%']: r#73
[#115 '&&']: r#73
[#115 '&']: r#73
[#115 ')']: r#73
[#115 '*']: r#73
[#115 '+']: r#73
[#115 ',']: r#73
[#115 '-']: r#73
[#115 '.']: r#73
[#115 '/']: r#73
[#115 ':']: r#73
[#115 ';']: r#73
[#115 '==']: r#73
[#115 '[']: r#73
[#115 ']']: r#73
[#115 '^']: r#73
[#115 '{']: r#73
[#115 '|']: r#73
[#115 '||']: r#73
[#115 /\u200B_greater_than/]: r#73
[#115 /\u200B_greater_than_equal/]: r#73
[#115 /\u200B_less_than/]: r#73
[#115 /\u200B_less_than_equal/]: r#73
[#115 /\u200B_shift_left/]: r#73
[#115 /\u200B_shift_right/]: r#73
[#115 /\u200B_template_args_end/]: r#73
[#116 '!=']: r#74
[#116 '%']: r#74
[#116 '&&']: r#74
[#116 '&']: r#74
[#116 ')']: r#74
[#116 '*']: r#74
[#116 '+']: r#74
[#116 ',']: r#74
[#116 '-']: r#74
[#116 '.']: r#74
[#116 '/']: r#74
[#116 ':']: r#74
[#116 ';']: r#74
[#116 '==']: r#74
[#116 '[']: r#74
[#116 ']']: r#74
[#116 '^']: r#74
[#116 '{']: r#74
[#116 '|']: r#74
[#116 '||']: r#74
[#116 /\u200B_greater_than/]: r#74
[#116 /\u200B_greater_than_equal/]: r#74
[#116 /\u200B_less_than/]: r#74
[#116 /\u200B_less_than_equal/]: r#74
[#116 /\u200B_shift_left/]: r#74
[#116 /\u200B_shift_right/]: r#74
[#116 /\u200B_template_args_end/]: r#74
[#117 '!=']: r#75
[#117 '%']: r#75
[#117 '&&']: r#75
[#117 '&']: r#75
[#117 ')']: r#75
[#117 '*']: r#75
[#117 '+']: r#75
[#117 ',']: r#75
[#117 '-']: r#75
[#117 '.']: r#75
[#117 '/']: r#75
[#117 ':']: r#75
[#117 ';']: r#75
[#117 '==']: r#75
[#117 '[']: r#75
[#117 ']']: r#75
[#117 '^']: r#75
[#117 '{']: r#75
[#117 '|']: r#75
[#117 '||']: r#75
[#117 /\u200B_greater_than/]: r#75
[#117 /\u200B_greater_than_equal/]: r#75
[#117 /\u200B_less_than/]: r#75
[#117 /\u200B_less_than_equal/]: r#75
[#117 /\u200B_shift_left/]: r#75
[#117 /\u200B_shift_right/]: r#75
[#117 /\u200B_template_args_end/]: r#75
[#118 '!=']: r#76
[#118 '%']: r#76
[#118 '&&']: r#76
[#118 '&']: r#76
[#118 ')']: r#76
[#118 '*']: r#76
[#118 '+']: r#76
[#118 ',']: r#76
[#118 '-']: r#76
[#118 '.']: r#76
[#118 '/']: r#76
[#118 ':']: r#76
[#118 ';']: r#76
[#118 '==']: r#76
[#118 '[']: r#76
[#118 ']']: r#76
[#118 '^']: r#76
[#118 '{']: r#76
[#118 '|']: r#76
[#118 '||']: r#76
[#118 /\u200B_greater_than/]: r#76
[#118 /\u200B_greater_than_equal/]: r#76
[#118 /\u200B_less_than/]: r#76
[#118 /\u200B_less_than_equal/]: r#76
[#118 /\u200B_shift_left/]: r#76
[#118 /\u200B_shift_right/]: r#76
[#118 /\u200B_template_args_end/]: r#76
[#119 '!=']: r#77
[#119 '%']: r#77
[#119 '&&']: r#77
[#119 '&']: r#77
[#119 ')']: r#77
[#119 '*']: r#77
[#119 '+']: r#77
[#119 ',']: r#77
[#119 '-']: r#77
[#119 '.']: r#77
[#119 '/']: r#77
[#119 ':']: r#77
[#119 ';']: r#77
[#119 '==']: r#77
[#119 '[']: r#77
[#119 ']']: r#77
[#119 '^']: r#77
[#119 '{']: r#77
[#119 '|']: r#77
[#119 '||']: r#77
[#119 /\u200B_greater_than/]: r#77
[#119 /\u200B_greater_than_equal/]: r#77
[#119 /\u200B_less_than/]: r#77
[#119 /\u200B_less_than_equal/]: r#77
[#119 /\u200B_shift_left/]: r#77
[#119 /\u200B_shift_right/]: r#77
[#119 /\u200B_template_args_end/]: r#77
[#120 '!=']: r#78
[#120 '%']: r#78
[#120 '&&']: r#78
[#120 '&']: r#78
[#120 ')']: r#78
[#120 '*']: r#78
[#120 '+']: r#78
[#120 ',']: r#78
[#120 '-']: r#78
[#120 '.']: r#78
[#120 '/']: r#78
[#120 ':']: r#78
[#120 ';']: r#78
[#120 '==']: r#78
[#120 '[']: r#78
[#120 ']']: r#78
[#120 '^']: r#78
[#120 '{']: r#78
[#120 '|']: r#78
[#120 '||']: r#78
[#120 /\u200B_greater_than/]: r#78
[#120 /\u200B_greater_than_equal/]: r#78
[#120 /\u200B_less_than/]: r#78
[#120 /\u200B_less_than_equal/]: r#78
[#120 /\u200B_shift_left/]: r#78
[#120 /\u200B_shift_right/]: r#78
[#120 /\u200B_template_args_end/]: r#78
[#121 '(']: r#79
[#121 ')']: r#79
[#121 ',']: r#79
[#121 ';']: r#79
[#121 '=']: r#79
[#121 '{']: r#79
[#121 '}']: r#79
[#121 /\u200B_template_args_end/]: r#79
[#122 '(']: r#80
[#122 ')']: r#80
[#122 ',']: r#80
[#122 ';']: r#80
[#122 '=']: r#80
[#122 '{']: r#80
[#122 '}']: r#80
[#122 /\u200B_template_args_end/]: r#80
[#123 /\u200B_disambiguate_template/]: s#160
[#124 /\u200B_disambiguate_template/]: s#160
[#125 /\u200B_disambiguate_template/]: s#160
[#126 '(']: r#81
[#126 ')']: r#81
[#126 ',']: r#81
[#126 ';']: r#81
[#126 '=']: r#81
[#126 '{']: r#81
[#126 '}']: r#81
[#126 /\u200B_template_args_end/]: r#81
[#127 '(']: r#82
[#127 ')']: r#82
[#127 ',']: r#82
[#127 ';']: r#82
[#127 '=']: r#82
[#127 '{']: r#82
[#127 '}']: r#82
[#127 /\u200B_template_args_end/]: r#82
[#128 '(']: r#83
[#128 ')']: r#83
[#128 ',']: r#83
[#128 ';']: r#83
[#128 '=']: r#83
[#128 '{']: r#83
[#128 '}']: r#83
[#128 /\u200B_template_args_end/]: r#83
[#129 '(']: r#84
[#129 ')']: r#84
[#129 ',']: r#84
[#129 ';']: r#84
[#129 '=']: r#84
[#129 '{']: r#84
[#129 '}']: r#84
[#129 /\u200B_template_args_end/]: r#84
[#130 '(']: r#85
[#130 ')']: r#85
[#130 ',']: r#85
[#130 ';']: r#85
[#130 '=']: r#85
[#130 '{']: r#85
[#130 '}']: r#85
[#130 /\u200B_template_args_end/]: r#85
[#131 '(']: r#86
[#131 ')']: r#86
[#131 ',']: r#86
[#131 ';']: r#86
[#131 '=']: r#86
[#131 '{']: r#86
[#131 '}']: r#86
[#131 /\u200B_template_args_end/]: r#86
[#132 '(']: r#87
[#132 ')']: r#87
[#132 ',']: r#87
[#132 ';']: r#87
[#132 '=']: r#87
[#132 '{']: r#87
[#132 '}']: r#87
[#132 /\u200B_template_args_end/]: r#87
[#133 /\u200B_disambiguate_template/]: r#88
[#134 /\u200B_disambiguate_template/]: r#89
[#135 /\u200B_disambiguate_template/]: r#90
[#136 /\u200B_disambiguate_template/]: r#91
[#137 /\u200B_disambiguate_template/]: r#92
[#138 /\u200B_disambiguate_template/]: r#93
[#139 /\u200B_disambiguate_template/]: r#94
[#140 /\u200B_disambiguate_template/]: r#95
[#141 /\u200B_disambiguate_template/]: r#96
[#142 /\u200B_disambiguate_template/]: r#97
[#143 /\u200B_disambiguate_template/]: r#98
[#144 '{']: s#172
[#145 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#146 '{']: s#169
[#147 '=']: s#167
[#148 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#149 '=']: s#165
[#150 ':']: s#164
[#151 '=']: s#162
[#152 /\u200B_disambiguate_template/]: s#160
[#153 ';']: r#99
[#153 '@']: r#99
[#153 'alias']: r#99
[#153 'const']: r#99
[#153 'const_assert']: r#99
[#153 'fn']: r#99
[#153 'override']: r#99
[#153 'struct']: r#99
[#153 'var']: r#99
[#153 EndOfText]: r#99
[#154 ';']: r#100
[#154 '@']: r#100
[#154 'alias']: r#100
[#154 'const']: r#100
[#154 'const_assert']: r#100
[#154 'fn']: r#100
[#154 'override']: r#100
[#154 'struct']: r#100
[#154 'var']: r#100
[#154 EndOfText]: r#100
[#155 ';']: r#101
[#155 '@']: r#101
[#155 'alias']: r#101
[#155 'const']: r#101
[#155 'const_assert']: r#101
[#155 'fn']: r#101
[#155 'override']: r#101
[#155 'struct']: r#101
[#155 'var']: r#101
[#155 EndOfText]: r#101
[#156 ';']: r#102
[#156 '@']: r#102
[#156 'alias']: r#102
[#156 'const']: r#102
[#156 'const_assert']: r#102
[#156 'fn']: r#102
[#156 'override']: r#102
[#156 'struct']: r#102
[#156 'var']: r#102
[#156 EndOfText]: r#102
[#157 EndOfText]: r#103
[#158 ';']: r#104
[#158 '@']: r#104
[#158 'alias']: r#104
[#158 'const']: r#104
[#158 'const_assert']: r#104
[#158 'enable']: r#104
[#158 'fn']: r#104
[#158 'override']: r#104
[#158 'struct']: r#104
[#158 'var']: r#104
[#158 EndOfText]: r#104
[#159 /\u200B_template_args_start/]: s#283
[#160 '(']: r#105
[#160 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#105
[#160 /\u200B_template_args_start/]: r#105
[#161 ';']: r#106
[#162 '!']: s#63
[#162 '&']: s#66
[#162 '(']: s#78
[#162 '*']: s#65
[#162 '-']: s#62
[#162 'array']: s#82
[#162 'atomic']: s#96
[#162 'bitcast']: s#72
[#162 'bool']: s#89
[#162 'f16']: s#91
[#162 'f32']: s#90
[#162 'false']: s#88
[#162 'i32']: s#92
[#162 'mat2x2']: s#101
[#162 'mat2x3']: s#102
[#162 'mat2x4']: s#103
[#162 'mat3x2']: s#104
[#162 'mat3x3']: s#105
[#162 'mat3x4']: s#106
[#162 'mat4x2']: s#107
[#162 'mat4x3']: s#108
[#162 'mat4x4']: s#109
[#162 'ptr']: s#94
[#162 'sampler']: s#126
[#162 'sampler_comparison']: s#127
[#162 'texture_1d']: s#133
[#162 'texture_2d']: s#134
[#162 'texture_2d_array']: s#135
[#162 'texture_3d']: s#136
[#162 'texture_cube']: s#137
[#162 'texture_cube_array']: s#138
[#162 'texture_depth_2d']: s#128
[#162 'texture_depth_2d_array']: s#129
[#162 'texture_depth_cube']: s#130
[#162 'texture_depth_cube_array']: s#131
[#162 'texture_depth_multisampled_2d']: s#132
[#162 'texture_multisampled_2d']: s#139
[#162 'texture_storage_1d']: s#140
[#162 'texture_storage_2d']: s#141
[#162 'texture_storage_2d_array']: s#142
[#162 'texture_storage_3d']: s#143
[#162 'true']: s#87
[#162 'u32']: s#93
[#162 'vec2']: s#98
[#162 'vec3']: s#99
[#162 'vec4']: s#100
[#162 '~']: s#64
[#162 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#162 /0[fh]/]: s#113
[#162 /0[iu]?/]: s#110
[#162 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#162 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#162 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#162 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#162 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#162 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#162 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#162 /[1-9][0-9]*[fh]/]: s#114
[#162 /[1-9][0-9]*[iu]?/]: s#111
[#163 ';']: r#107
[#163 '=']: r#107
[#164 'array']: s#347
[#164 'atomic']: s#96
[#164 'bool']: s#89
[#164 'f16']: s#91
[#164 'f32']: s#90
[#164 'i32']: s#92
[#164 'mat2x2']: s#101
[#164 'mat2x3']: s#102
[#164 'mat2x4']: s#103
[#164 'mat3x2']: s#104
[#164 'mat3x3']: s#105
[#164 'mat3x4']: s#106
[#164 'mat4x2']: s#107
[#164 'mat4x3']: s#108
[#164 'mat4x4']: s#109
[#164 'ptr']: s#94
[#164 'sampler']: s#126
[#164 'sampler_comparison']: s#127
[#164 'texture_1d']: s#133
[#164 'texture_2d']: s#134
[#164 'texture_2d_array']: s#135
[#164 'texture_3d']: s#136
[#164 'texture_cube']: s#137
[#164 'texture_cube_array']: s#138
[#164 'texture_depth_2d']: s#128
[#164 'texture_depth_2d_array']: s#129
[#164 'texture_depth_cube']: s#130
[#164 'texture_depth_cube_array']: s#131
[#164 'texture_depth_multisampled_2d']: s#132
[#164 'texture_multisampled_2d']: s#139
[#164 'texture_storage_1d']: s#140
[#164 'texture_storage_2d']: s#141
[#164 'texture_storage_2d_array']: s#142
[#164 'texture_storage_3d']: s#143
[#164 'u32']: s#93
[#164 'vec2']: s#98
[#164 'vec3']: s#99
[#164 'vec4']: s#100
[#164 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#165 '!']: s#63
[#165 '&']: s#66
[#165 '(']: s#78
[#165 '*']: s#65
[#165 '-']: s#62
[#165 'array']: s#82
[#165 'atomic']: s#96
[#165 'bitcast']: s#72
[#165 'bool']: s#89
[#165 'f16']: s#91
[#165 'f32']: s#90
[#165 'false']: s#88
[#165 'i32']: s#92
[#165 'mat2x2']: s#101
[#165 'mat2x3']: s#102
[#165 'mat2x4']: s#103
[#165 'mat3x2']: s#104
[#165 'mat3x3']: s#105
[#165 'mat3x4']: s#106
[#165 'mat4x2']: s#107
[#165 'mat4x3']: s#108
[#165 'mat4x4']: s#109
[#165 'ptr']: s#94
[#165 'sampler']: s#126
[#165 'sampler_comparison']: s#127
[#165 'texture_1d']: s#133
[#165 'texture_2d']: s#134
[#165 'texture_2d_array']: s#135
[#165 'texture_3d']: s#136
[#165 'texture_cube']: s#137
[#165 'texture_cube_array']: s#138
[#165 'texture_depth_2d']: s#128
[#165 'texture_depth_2d_array']: s#129
[#165 'texture_depth_cube']: s#130
[#165 'texture_depth_cube_array']: s#131
[#165 'texture_depth_multisampled_2d']: s#132
[#165 'texture_multisampled_2d']: s#139
[#165 'texture_storage_1d']: s#140
[#165 'texture_storage_2d']: s#141
[#165 'texture_storage_2d_array']: s#142
[#165 'texture_storage_3d']: s#143
[#165 'true']: s#87
[#165 'u32']: s#93
[#165 'vec2']: s#98
[#165 'vec3']: s#99
[#165 'vec4']: s#100
[#165 '~']: s#64
[#165 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#165 /0[fh]/]: s#113
[#165 /0[iu]?/]: s#110
[#165 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#165 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#165 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#165 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#165 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#165 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#165 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#165 /[1-9][0-9]*[fh]/]: s#114
[#165 /[1-9][0-9]*[iu]?/]: s#111
[#166 '=']: s#349
[#167 'array']: s#347
[#167 'atomic']: s#96
[#167 'bool']: s#89
[#167 'f16']: s#91
[#167 'f32']: s#90
[#167 'i32']: s#92
[#167 'mat2x2']: s#101
[#167 'mat2x3']: s#102
[#167 'mat2x4']: s#103
[#167 'mat3x2']: s#104
[#167 'mat3x3']: s#105
[#167 'mat3x4']: s#106
[#167 'mat4x2']: s#107
[#167 'mat4x3']: s#108
[#167 'mat4x4']: s#109
[#167 'ptr']: s#94
[#167 'sampler']: s#126
[#167 'sampler_comparison']: s#127
[#167 'texture_1d']: s#133
[#167 'texture_2d']: s#134
[#167 'texture_2d_array']: s#135
[#167 'texture_3d']: s#136
[#167 'texture_cube']: s#137
[#167 'texture_cube_array']: s#138
[#167 'texture_depth_2d']: s#128
[#167 'texture_depth_2d_array']: s#129
[#167 'texture_depth_cube']: s#130
[#167 'texture_depth_cube_array']: s#131
[#167 'texture_depth_multisampled_2d']: s#132
[#167 'texture_multisampled_2d']: s#139
[#167 'texture_storage_1d']: s#140
[#167 'texture_storage_2d']: s#141
[#167 'texture_storage_2d_array']: s#142
[#167 'texture_storage_3d']: s#143
[#167 'u32']: s#93
[#167 'vec2']: s#98
[#167 'vec3']: s#99
[#167 'vec4']: s#100
[#167 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#168 ';']: r#108
[#168 '@']: r#108
[#168 'alias']: r#108
[#168 'const']: r#108
[#168 'const_assert']: r#108
[#168 'fn']: r#108
[#168 'override']: r#108
[#168 'struct']: r#108
[#168 'var']: r#108
[#168 EndOfText]: r#108
[#169 '@']: s#30
[#170 '(']: s#337
[#171 ';']: r#109
[#171 '@']: r#109
[#171 'alias']: r#109
[#171 'const']: r#109
[#171 'const_assert']: r#109
[#171 'fn']: r#109
[#171 'override']: r#109
[#171 'struct']: r#109
[#171 'var']: r#109
[#171 EndOfText]: r#109
[#172 '&']: s#335
[#172 '(']: s#336
[#172 '*']: s#334
[#172 ';']: s#299
[#172 '_']: s#332
[#172 'array']: s#82
[#172 'atomic']: s#96
[#172 'bool']: s#89
[#172 'break']: s#324
[#172 'const']: s#323
[#172 'const_assert']: s#25
[#172 'continue']: s#325
[#172 'discard']: s#310
[#172 'f16']: s#91
[#172 'f32']: s#90
[#172 'for']: s#318
[#172 'i32']: s#92
[#172 'if']: s#329
[#172 'let']: s#322
[#172 'loop']: s#317
[#172 'mat2x2']: s#101
[#172 'mat2x3']: s#102
[#172 'mat2x4']: s#103
[#172 'mat3x2']: s#104
[#172 'mat3x3']: s#105
[#172 'mat3x4']: s#106
[#172 'mat4x2']: s#107
[#172 'mat4x3']: s#108
[#172 'mat4x4']: s#109
[#172 'ptr']: s#94
[#172 'return']: s#314
[#172 'sampler']: s#126
[#172 'sampler_comparison']: s#127
[#172 'switch']: s#316
[#172 'texture_1d']: s#133
[#172 'texture_2d']: s#134
[#172 'texture_2d_array']: s#135
[#172 'texture_3d']: s#136
[#172 'texture_cube']: s#137
[#172 'texture_cube_array']: s#138
[#172 'texture_depth_2d']: s#128
[#172 'texture_depth_2d_array']: s#129
[#172 'texture_depth_cube']: s#130
[#172 'texture_depth_cube_array']: s#131
[#172 'texture_depth_multisampled_2d']: s#132
[#172 'texture_multisampled_2d']: s#139
[#172 'texture_storage_1d']: s#140
[#172 'texture_storage_2d']: s#141
[#172 'texture_storage_2d_array']: s#142
[#172 'texture_storage_3d']: s#143
[#172 'u32']: s#93
[#172 'var']: s#152
[#172 'vec2']: s#98
[#172 'vec3']: s#99
[#172 'vec4']: s#100
[#172 'while']: s#319
[#172 '{']: s#172
[#172 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#173 /\u200B_template_args_start/]: s#283
[#174 /\u200B_template_args_start/]: s#283
[#175 /\u200B_template_args_start/]: s#283
[#176 /\u200B_template_args_start/]: s#283
[#177 /\u200B_template_args_start/]: s#283
[#178 '(']: r#110
[#178 /\u200B_template_args_start/]: s#283
[#179 '(']: r#111
[#179 /\u200B_template_args_start/]: s#283
[#180 '(']: r#112
[#180 /\u200B_template_args_start/]: s#283
[#181 ')']: s#287
[#182 '!=']: r#113
[#182 '%']: r#113
[#182 '&&']: r#113
[#182 '&']: r#113
[#182 ')']: r#113
[#182 '*']: r#113
[#182 '+']: r#113
[#182 ',']: r#113
[#182 '-']: r#113
[#182 '.']: r#113
[#182 '/']: r#113
[#182 ':']: r#113
[#182 ';']: r#113
[#182 '==']: r#113
[#182 '[']: r#113
[#182 ']']: r#113
[#182 '^']: r#113
[#182 '{']: r#113
[#182 '|']: r#113
[#182 '||']: r#113
[#182 /\u200B_greater_than/]: r#113
[#182 /\u200B_greater_than_equal/]: r#113
[#182 /\u200B_less_than/]: r#113
[#182 /\u200B_less_than_equal/]: r#113
[#182 /\u200B_shift_left/]: r#113
[#182 /\u200B_shift_right/]: r#113
[#182 /\u200B_template_args_end/]: r#113
[#183 '!']: s#63
[#183 '&']: s#66
[#183 '(']: s#78
[#183 '*']: s#65
[#183 '-']: s#62
[#183 'array']: s#82
[#183 'atomic']: s#96
[#183 'bitcast']: s#72
[#183 'bool']: s#89
[#183 'f16']: s#91
[#183 'f32']: s#90
[#183 'false']: s#88
[#183 'i32']: s#92
[#183 'mat2x2']: s#101
[#183 'mat2x3']: s#102
[#183 'mat2x4']: s#103
[#183 'mat3x2']: s#104
[#183 'mat3x3']: s#105
[#183 'mat3x4']: s#106
[#183 'mat4x2']: s#107
[#183 'mat4x3']: s#108
[#183 'mat4x4']: s#109
[#183 'ptr']: s#94
[#183 'sampler']: s#126
[#183 'sampler_comparison']: s#127
[#183 'texture_1d']: s#133
[#183 'texture_2d']: s#134
[#183 'texture_2d_array']: s#135
[#183 'texture_3d']: s#136
[#183 'texture_cube']: s#137
[#183 'texture_cube_array']: s#138
[#183 'texture_depth_2d']: s#128
[#183 'texture_depth_2d_array']: s#129
[#183 'texture_depth_cube']: s#130
[#183 'texture_depth_cube_array']: s#131
[#183 'texture_depth_multisampled_2d']: s#132
[#183 'texture_multisampled_2d']: s#139
[#183 'texture_storage_1d']: s#140
[#183 'texture_storage_2d']: s#141
[#183 'texture_storage_2d_array']: s#142
[#183 'texture_storage_3d']: s#143
[#183 'true']: s#87
[#183 'u32']: s#93
[#183 'vec2']: s#98
[#183 'vec3']: s#99
[#183 'vec4']: s#100
[#183 '~']: s#64
[#183 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#183 /0[fh]/]: s#113
[#183 /0[iu]?/]: s#110
[#183 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#183 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#183 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#183 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#183 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#183 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#183 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#183 /[1-9][0-9]*[fh]/]: s#114
[#183 /[1-9][0-9]*[iu]?/]: s#111
[#184 /\u200B_template_args_start/]: s#283
[#185 '!=']: r#114
[#185 '%']: r#114
[#185 '&&']: r#114
[#185 '&']: r#114
[#185 ')']: r#114
[#185 '*']: r#114
[#185 '+']: r#114
[#185 ',']: r#114
[#185 '-']: r#114
[#185 '/']: r#114
[#185 ':']: r#114
[#185 ';']: r#114
[#185 '==']: r#114
[#185 ']']: r#114
[#185 '^']: r#114
[#185 '{']: r#114
[#185 '|']: r#114
[#185 '||']: r#114
[#185 /\u200B_greater_than/]: r#114
[#185 /\u200B_greater_than_equal/]: r#114
[#185 /\u200B_less_than/]: r#114
[#185 /\u200B_less_than_equal/]: r#114
[#185 /\u200B_shift_left/]: r#114
[#185 /\u200B_shift_right/]: r#114
[#185 /\u200B_template_args_end/]: r#114
[#186 '!=']: r#115
[#186 '%']: r#115
[#186 '&&']: r#115
[#186 '&']: r#115
[#186 ')']: r#115
[#186 '*']: r#115
[#186 '+']: r#115
[#186 ',']: r#115
[#186 '-']: r#115
[#186 '/']: r#115
[#186 ':']: r#115
[#186 ';']: r#115
[#186 '==']: r#115
[#186 ']']: r#115
[#186 '^']: r#115
[#186 '{']: r#115
[#186 '|']: r#115
[#186 '||']: r#115
[#186 /\u200B_greater_than/]: r#115
[#186 /\u200B_greater_than_equal/]: r#115
[#186 /\u200B_less_than/]: r#115
[#186 /\u200B_less_than_equal/]: r#115
[#186 /\u200B_shift_left/]: r#115
[#186 /\u200B_shift_right/]: r#115
[#186 /\u200B_template_args_end/]: r#115
[#187 '!']: s#63
[#187 '&']: s#66
[#187 '(']: s#78
[#187 '*']: s#65
[#187 '-']: s#62
[#187 'array']: s#82
[#187 'atomic']: s#96
[#187 'bitcast']: s#72
[#187 'bool']: s#89
[#187 'f16']: s#91
[#187 'f32']: s#90
[#187 'false']: s#88
[#187 'i32']: s#92
[#187 'mat2x2']: s#101
[#187 'mat2x3']: s#102
[#187 'mat2x4']: s#103
[#187 'mat3x2']: s#104
[#187 'mat3x3']: s#105
[#187 'mat3x4']: s#106
[#187 'mat4x2']: s#107
[#187 'mat4x3']: s#108
[#187 'mat4x4']: s#109
[#187 'ptr']: s#94
[#187 'sampler']: s#126
[#187 'sampler_comparison']: s#127
[#187 'texture_1d']: s#133
[#187 'texture_2d']: s#134
[#187 'texture_2d_array']: s#135
[#187 'texture_3d']: s#136
[#187 'texture_cube']: s#137
[#187 'texture_cube_array']: s#138
[#187 'texture_depth_2d']: s#128
[#187 'texture_depth_2d_array']: s#129
[#187 'texture_depth_cube']: s#130
[#187 'texture_depth_cube_array']: s#131
[#187 'texture_depth_multisampled_2d']: s#132
[#187 'texture_multisampled_2d']: s#139
[#187 'texture_storage_1d']: s#140
[#187 'texture_storage_2d']: s#141
[#187 'texture_storage_2d_array']: s#142
[#187 'texture_storage_3d']: s#143
[#187 'true']: s#87
[#187 'u32']: s#93
[#187 'vec2']: s#98
[#187 'vec3']: s#99
[#187 'vec4']: s#100
[#187 '~']: s#64
[#187 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#187 /0[fh]/]: s#113
[#187 /0[iu]?/]: s#110
[#187 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#187 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#187 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#187 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#187 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#187 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#187 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#187 /[1-9][0-9]*[fh]/]: s#114
[#187 /[1-9][0-9]*[iu]?/]: s#111
[#188 '/[rgba]/']: s#273
[#188 '/[rgba][rgba]/']: s#274
[#188 '/[rgba][rgba][rgba]/']: s#275
[#188 '/[rgba][rgba][rgba][rgba]/']: s#276
[#188 '/[xyzw]/']: s#277
[#188 '/[xyzw][xyzw]/']: s#278
[#188 '/[xyzw][xyzw][xyzw]/']: s#279
[#188 '/[xyzw][xyzw][xyzw][xyzw]/']: s#280
[#188 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#272
[#189 '!=']: r#116
[#189 '%']: r#116
[#189 '&&']: r#116
[#189 '&']: r#116
[#189 ')']: r#116
[#189 '*']: r#116
[#189 '+']: r#116
[#189 ',']: r#116
[#189 '-']: r#116
[#189 '/']: r#116
[#189 ':']: r#116
[#189 ';']: r#116
[#189 '==']: r#116
[#189 ']']: r#116
[#189 '^']: r#116
[#189 '{']: r#116
[#189 '|']: r#116
[#189 '||']: r#116
[#189 /\u200B_greater_than/]: r#116
[#189 /\u200B_greater_than_equal/]: r#116
[#189 /\u200B_less_than/]: r#116
[#189 /\u200B_less_than_equal/]: r#116
[#189 /\u200B_shift_left/]: r#116
[#189 /\u200B_shift_right/]: r#116
[#189 /\u200B_template_args_end/]: r#116
[#190 '!=']: r#117
[#190 '%']: r#117
[#190 '&&']: r#117
[#190 '&']: r#117
[#190 ')']: r#117
[#190 '*']: r#117
[#190 '+']: r#117
[#190 ',']: r#117
[#190 '-']: r#117
[#190 '/']: r#117
[#190 ':']: r#117
[#190 ';']: r#117
[#190 '==']: r#117
[#190 ']']: r#117
[#190 '^']: r#117
[#190 '{']: r#117
[#190 '|']: r#117
[#190 '||']: r#117
[#190 /\u200B_greater_than/]: r#117
[#190 /\u200B_greater_than_equal/]: r#117
[#190 /\u200B_less_than/]: r#117
[#190 /\u200B_less_than_equal/]: r#117
[#190 /\u200B_shift_left/]: r#117
[#190 /\u200B_shift_right/]: r#117
[#190 /\u200B_template_args_end/]: r#117
[#191 '!=']: r#118
[#191 '%']: r#118
[#191 '&&']: r#118
[#191 '&']: r#118
[#191 ')']: r#118
[#191 '*']: r#118
[#191 '+']: r#118
[#191 ',']: r#118
[#191 '-']: r#118
[#191 '/']: r#118
[#191 ':']: r#118
[#191 ';']: r#118
[#191 '==']: r#118
[#191 ']']: r#118
[#191 '^']: r#118
[#191 '{']: r#118
[#191 '|']: r#118
[#191 '||']: r#118
[#191 /\u200B_greater_than/]: r#118
[#191 /\u200B_greater_than_equal/]: r#118
[#191 /\u200B_less_than/]: r#118
[#191 /\u200B_less_than_equal/]: r#118
[#191 /\u200B_shift_left/]: r#118
[#191 /\u200B_shift_right/]: r#118
[#191 /\u200B_template_args_end/]: r#118
[#192 '!=']: r#119
[#192 '%']: r#119
[#192 '&&']: r#119
[#192 '&']: r#119
[#192 ')']: r#119
[#192 '*']: r#119
[#192 '+']: r#119
[#192 ',']: r#119
[#192 '-']: r#119
[#192 '/']: r#119
[#192 ':']: r#119
[#192 ';']: r#119
[#192 '==']: r#119
[#192 ']']: r#119
[#192 '^']: r#119
[#192 '{']: r#119
[#192 '|']: r#119
[#192 '||']: r#119
[#192 /\u200B_greater_than/]: r#119
[#192 /\u200B_greater_than_equal/]: r#119
[#192 /\u200B_less_than/]: r#119
[#192 /\u200B_less_than_equal/]: r#119
[#192 /\u200B_shift_left/]: r#119
[#192 /\u200B_shift_right/]: r#119
[#192 /\u200B_template_args_end/]: r#119
[#193 '!=']: r#120
[#193 '%']: r#120
[#193 '&&']: r#120
[#193 '&']: r#120
[#193 ')']: r#120
[#193 '*']: r#120
[#193 '+']: r#120
[#193 ',']: r#120
[#193 '-']: r#120
[#193 '/']: r#120
[#193 ':']: r#120
[#193 ';']: r#120
[#193 '==']: r#120
[#193 ']']: r#120
[#193 '^']: r#120
[#193 '{']: r#120
[#193 '|']: r#120
[#193 '||']: r#120
[#193 /\u200B_greater_than/]: r#120
[#193 /\u200B_greater_than_equal/]: r#120
[#193 /\u200B_less_than/]: r#120
[#193 /\u200B_less_than_equal/]: r#120
[#193 /\u200B_shift_left/]: r#120
[#193 /\u200B_shift_right/]: r#120
[#193 /\u200B_template_args_end/]: r#120
[#194 '!']: s#63
[#194 '&']: s#66
[#194 '(']: s#78
[#194 '*']: s#65
[#194 '-']: s#62
[#194 'array']: s#82
[#194 'atomic']: s#96
[#194 'bitcast']: s#72
[#194 'bool']: s#89
[#194 'f16']: s#91
[#194 'f32']: s#90
[#194 'false']: s#88
[#194 'i32']: s#92
[#194 'mat2x2']: s#101
[#194 'mat2x3']: s#102
[#194 'mat2x4']: s#103
[#194 'mat3x2']: s#104
[#194 'mat3x3']: s#105
[#194 'mat3x4']: s#106
[#194 'mat4x2']: s#107
[#194 'mat4x3']: s#108
[#194 'mat4x4']: s#109
[#194 'ptr']: s#94
[#194 'sampler']: s#126
[#194 'sampler_comparison']: s#127
[#194 'texture_1d']: s#133
[#194 'texture_2d']: s#134
[#194 'texture_2d_array']: s#135
[#194 'texture_3d']: s#136
[#194 'texture_cube']: s#137
[#194 'texture_cube_array']: s#138
[#194 'texture_depth_2d']: s#128
[#194 'texture_depth_2d_array']: s#129
[#194 'texture_depth_cube']: s#130
[#194 'texture_depth_cube_array']: s#131
[#194 'texture_depth_multisampled_2d']: s#132
[#194 'texture_multisampled_2d']: s#139
[#194 'texture_storage_1d']: s#140
[#194 'texture_storage_2d']: s#141
[#194 'texture_storage_2d_array']: s#142
[#194 'texture_storage_3d']: s#143
[#194 'true']: s#87
[#194 'u32']: s#93
[#194 'vec2']: s#98
[#194 'vec3']: s#99
[#194 'vec4']: s#100
[#194 '~']: s#64
[#194 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#194 /0[fh]/]: s#113
[#194 /0[iu]?/]: s#110
[#194 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#194 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#194 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#194 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#194 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#194 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#194 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#194 /[1-9][0-9]*[fh]/]: s#114
[#194 /[1-9][0-9]*[iu]?/]: s#111
[#195 '!']: r#121
[#195 '&']: r#121
[#195 '(']: r#121
[#195 '*']: r#121
[#195 '-']: r#121
[#195 'array']: r#121
[#195 'atomic']: r#121
[#195 'bitcast']: r#121
[#195 'bool']: r#121
[#195 'f16']: r#121
[#195 'f32']: r#121
[#195 'false']: r#121
[#195 'i32']: r#121
[#195 'mat2x2']: r#121
[#195 'mat2x3']: r#121
[#195 'mat2x4']: r#121
[#195 'mat3x2']: r#121
[#195 'mat3x3']: r#121
[#195 'mat3x4']: r#121
[#195 'mat4x2']: r#121
[#195 'mat4x3']: r#121
[#195 'mat4x4']: r#121
[#195 'ptr']: r#121
[#195 'sampler']: r#121
[#195 'sampler_comparison']: r#121
[#195 'texture_1d']: r#121
[#195 'texture_2d']: r#121
[#195 'texture_2d_array']: r#121
[#195 'texture_3d']: r#121
[#195 'texture_cube']: r#121
[#195 'texture_cube_array']: r#121
[#195 'texture_depth_2d']: r#121
[#195 'texture_depth_2d_array']: r#121
[#195 'texture_depth_cube']: r#121
[#195 'texture_depth_cube_array']: r#121
[#195 'texture_depth_multisampled_2d']: r#121
[#195 'texture_multisampled_2d']: r#121
[#195 'texture_storage_1d']: r#121
[#195 'texture_storage_2d']: r#121
[#195 'texture_storage_2d_array']: r#121
[#195 'texture_storage_3d']: r#121
[#195 'true']: r#121
[#195 'u32']: r#121
[#195 'vec2']: r#121
[#195 'vec3']: r#121
[#195 'vec4']: r#121
[#195 '~']: r#121
[#195 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#121
[#195 /0[fh]/]: r#121
[#195 /0[iu]?/]: r#121
[#195 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#121
[#195 /0[xX][0-9a-fA-F]+[iu]?/]: r#121
[#195 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#121
[#195 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#121
[#195 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#121
[#195 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#121
[#195 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#121
[#195 /[1-9][0-9]*[fh]/]: r#121
[#195 /[1-9][0-9]*[iu]?/]: r#121
[#196 '!']: r#122
[#196 '&']: r#122
[#196 '(']: r#122
[#196 '*']: r#122
[#196 '-']: r#122
[#196 'array']: r#122
[#196 'atomic']: r#122
[#196 'bitcast']: r#122
[#196 'bool']: r#122
[#196 'f16']: r#122
[#196 'f32']: r#122
[#196 'false']: r#122
[#196 'i32']: r#122
[#196 'mat2x2']: r#122
[#196 'mat2x3']: r#122
[#196 'mat2x4']: r#122
[#196 'mat3x2']: r#122
[#196 'mat3x3']: r#122
[#196 'mat3x4']: r#122
[#196 'mat4x2']: r#122
[#196 'mat4x3']: r#122
[#196 'mat4x4']: r#122
[#196 'ptr']: r#122
[#196 'sampler']: r#122
[#196 'sampler_comparison']: r#122
[#196 'texture_1d']: r#122
[#196 'texture_2d']: r#122
[#196 'texture_2d_array']: r#122
[#196 'texture_3d']: r#122
[#196 'texture_cube']: r#122
[#196 'texture_cube_array']: r#122
[#196 'texture_depth_2d']: r#122
[#196 'texture_depth_2d_array']: r#122
[#196 'texture_depth_cube']: r#122
[#196 'texture_depth_cube_array']: r#122
[#196 'texture_depth_multisampled_2d']: r#122
[#196 'texture_multisampled_2d']: r#122
[#196 'texture_storage_1d']: r#122
[#196 'texture_storage_2d']: r#122
[#196 'texture_storage_2d_array']: r#122
[#196 'texture_storage_3d']: r#122
[#196 'true']: r#122
[#196 'u32']: r#122
[#196 'vec2']: r#122
[#196 'vec3']: r#122
[#196 'vec4']: r#122
[#196 '~']: r#122
[#196 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#122
[#196 /0[fh]/]: r#122
[#196 /0[iu]?/]: r#122
[#196 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#122
[#196 /0[xX][0-9a-fA-F]+[iu]?/]: r#122
[#196 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#122
[#196 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#122
[#196 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#122
[#196 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#122
[#196 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#122
[#196 /[1-9][0-9]*[fh]/]: r#122
[#196 /[1-9][0-9]*[iu]?/]: r#122
[#197 '!']: r#123
[#197 '&']: r#123
[#197 '(']: r#123
[#197 '*']: r#123
[#197 '-']: r#123
[#197 'array']: r#123
[#197 'atomic']: r#123
[#197 'bitcast']: r#123
[#197 'bool']: r#123
[#197 'f16']: r#123
[#197 'f32']: r#123
[#197 'false']: r#123
[#197 'i32']: r#123
[#197 'mat2x2']: r#123
[#197 'mat2x3']: r#123
[#197 'mat2x4']: r#123
[#197 'mat3x2']: r#123
[#197 'mat3x3']: r#123
[#197 'mat3x4']: r#123
[#197 'mat4x2']: r#123
[#197 'mat4x3']: r#123
[#197 'mat4x4']: r#123
[#197 'ptr']: r#123
[#197 'sampler']: r#123
[#197 'sampler_comparison']: r#123
[#197 'texture_1d']: r#123
[#197 'texture_2d']: r#123
[#197 'texture_2d_array']: r#123
[#197 'texture_3d']: r#123
[#197 'texture_cube']: r#123
[#197 'texture_cube_array']: r#123
[#197 'texture_depth_2d']: r#123
[#197 'texture_depth_2d_array']: r#123
[#197 'texture_depth_cube']: r#123
[#197 'texture_depth_cube_array']: r#123
[#197 'texture_depth_multisampled_2d']: r#123
[#197 'texture_multisampled_2d']: r#123
[#197 'texture_storage_1d']: r#123
[#197 'texture_storage_2d']: r#123
[#197 'texture_storage_2d_array']: r#123
[#197 'texture_storage_3d']: r#123
[#197 'true']: r#123
[#197 'u32']: r#123
[#197 'vec2']: r#123
[#197 'vec3']: r#123
[#197 'vec4']: r#123
[#197 '~']: r#123
[#197 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#123
[#197 /0[fh]/]: r#123
[#197 /0[iu]?/]: r#123
[#197 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#123
[#197 /0[xX][0-9a-fA-F]+[iu]?/]: r#123
[#197 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#123
[#197 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#123
[#197 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#123
[#197 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#123
[#197 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#123
[#197 /[1-9][0-9]*[fh]/]: r#123
[#197 /[1-9][0-9]*[iu]?/]: r#123
[#198 '!']: s#63
[#198 '&']: s#66
[#198 '(']: s#78
[#198 '*']: s#65
[#198 '-']: s#62
[#198 'array']: s#82
[#198 'atomic']: s#96
[#198 'bitcast']: s#72
[#198 'bool']: s#89
[#198 'f16']: s#91
[#198 'f32']: s#90
[#198 'false']: s#88
[#198 'i32']: s#92
[#198 'mat2x2']: s#101
[#198 'mat2x3']: s#102
[#198 'mat2x4']: s#103
[#198 'mat3x2']: s#104
[#198 'mat3x3']: s#105
[#198 'mat3x4']: s#106
[#198 'mat4x2']: s#107
[#198 'mat4x3']: s#108
[#198 'mat4x4']: s#109
[#198 'ptr']: s#94
[#198 'sampler']: s#126
[#198 'sampler_comparison']: s#127
[#198 'texture_1d']: s#133
[#198 'texture_2d']: s#134
[#198 'texture_2d_array']: s#135
[#198 'texture_3d']: s#136
[#198 'texture_cube']: s#137
[#198 'texture_cube_array']: s#138
[#198 'texture_depth_2d']: s#128
[#198 'texture_depth_2d_array']: s#129
[#198 'texture_depth_cube']: s#130
[#198 'texture_depth_cube_array']: s#131
[#198 'texture_depth_multisampled_2d']: s#132
[#198 'texture_multisampled_2d']: s#139
[#198 'texture_storage_1d']: s#140
[#198 'texture_storage_2d']: s#141
[#198 'texture_storage_2d_array']: s#142
[#198 'texture_storage_3d']: s#143
[#198 'true']: s#87
[#198 'u32']: s#93
[#198 'vec2']: s#98
[#198 'vec3']: s#99
[#198 'vec4']: s#100
[#198 '~']: s#64
[#198 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#198 /0[fh]/]: s#113
[#198 /0[iu]?/]: s#110
[#198 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#198 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#198 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#198 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#198 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#198 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#198 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#198 /[1-9][0-9]*[fh]/]: s#114
[#198 /[1-9][0-9]*[iu]?/]: s#111
[#199 '!']: s#63
[#199 '&']: s#66
[#199 '(']: s#78
[#199 '*']: s#65
[#199 '-']: s#62
[#199 'array']: s#82
[#199 'atomic']: s#96
[#199 'bitcast']: s#72
[#199 'bool']: s#89
[#199 'f16']: s#91
[#199 'f32']: s#90
[#199 'false']: s#88
[#199 'i32']: s#92
[#199 'mat2x2']: s#101
[#199 'mat2x3']: s#102
[#199 'mat2x4']: s#103
[#199 'mat3x2']: s#104
[#199 'mat3x3']: s#105
[#199 'mat3x4']: s#106
[#199 'mat4x2']: s#107
[#199 'mat4x3']: s#108
[#199 'mat4x4']: s#109
[#199 'ptr']: s#94
[#199 'sampler']: s#126
[#199 'sampler_comparison']: s#127
[#199 'texture_1d']: s#133
[#199 'texture_2d']: s#134
[#199 'texture_2d_array']: s#135
[#199 'texture_3d']: s#136
[#199 'texture_cube']: s#137
[#199 'texture_cube_array']: s#138
[#199 'texture_depth_2d']: s#128
[#199 'texture_depth_2d_array']: s#129
[#199 'texture_depth_cube']: s#130
[#199 'texture_depth_cube_array']: s#131
[#199 'texture_depth_multisampled_2d']: s#132
[#199 'texture_multisampled_2d']: s#139
[#199 'texture_storage_1d']: s#140
[#199 'texture_storage_2d']: s#141
[#199 'texture_storage_2d_array']: s#142
[#199 'texture_storage_3d']: s#143
[#199 'true']: s#87
[#199 'u32']: s#93
[#199 'vec2']: s#98
[#199 'vec3']: s#99
[#199 'vec4']: s#100
[#199 '~']: s#64
[#199 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#199 /0[fh]/]: s#113
[#199 /0[iu]?/]: s#110
[#199 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#199 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#199 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#199 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#199 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#199 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#199 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#199 /[1-9][0-9]*[fh]/]: s#114
[#199 /[1-9][0-9]*[iu]?/]: s#111
[#200 '!']: r#124
[#200 '&']: r#124
[#200 '(']: r#124
[#200 '*']: r#124
[#200 '-']: r#124
[#200 'array']: r#124
[#200 'atomic']: r#124
[#200 'bitcast']: r#124
[#200 'bool']: r#124
[#200 'f16']: r#124
[#200 'f32']: r#124
[#200 'false']: r#124
[#200 'i32']: r#124
[#200 'mat2x2']: r#124
[#200 'mat2x3']: r#124
[#200 'mat2x4']: r#124
[#200 'mat3x2']: r#124
[#200 'mat3x3']: r#124
[#200 'mat3x4']: r#124
[#200 'mat4x2']: r#124
[#200 'mat4x3']: r#124
[#200 'mat4x4']: r#124
[#200 'ptr']: r#124
[#200 'sampler']: r#124
[#200 'sampler_comparison']: r#124
[#200 'texture_1d']: r#124
[#200 'texture_2d']: r#124
[#200 'texture_2d_array']: r#124
[#200 'texture_3d']: r#124
[#200 'texture_cube']: r#124
[#200 'texture_cube_array']: r#124
[#200 'texture_depth_2d']: r#124
[#200 'texture_depth_2d_array']: r#124
[#200 'texture_depth_cube']: r#124
[#200 'texture_depth_cube_array']: r#124
[#200 'texture_depth_multisampled_2d']: r#124
[#200 'texture_multisampled_2d']: r#124
[#200 'texture_storage_1d']: r#124
[#200 'texture_storage_2d']: r#124
[#200 'texture_storage_2d_array']: r#124
[#200 'texture_storage_3d']: r#124
[#200 'true']: r#124
[#200 'u32']: r#124
[#200 'vec2']: r#124
[#200 'vec3']: r#124
[#200 'vec4']: r#124
[#200 '~']: r#124
[#200 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#124
[#200 /0[fh]/]: r#124
[#200 /0[iu]?/]: r#124
[#200 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#124
[#200 /0[xX][0-9a-fA-F]+[iu]?/]: r#124
[#200 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#124
[#200 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#124
[#200 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#124
[#200 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#124
[#200 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#124
[#200 /[1-9][0-9]*[fh]/]: r#124
[#200 /[1-9][0-9]*[iu]?/]: r#124
[#201 '!']: r#125
[#201 '&']: r#125
[#201 '(']: r#125
[#201 '*']: r#125
[#201 '-']: r#125
[#201 'array']: r#125
[#201 'atomic']: r#125
[#201 'bitcast']: r#125
[#201 'bool']: r#125
[#201 'f16']: r#125
[#201 'f32']: r#125
[#201 'false']: r#125
[#201 'i32']: r#125
[#201 'mat2x2']: r#125
[#201 'mat2x3']: r#125
[#201 'mat2x4']: r#125
[#201 'mat3x2']: r#125
[#201 'mat3x3']: r#125
[#201 'mat3x4']: r#125
[#201 'mat4x2']: r#125
[#201 'mat4x3']: r#125
[#201 'mat4x4']: r#125
[#201 'ptr']: r#125
[#201 'sampler']: r#125
[#201 'sampler_comparison']: r#125
[#201 'texture_1d']: r#125
[#201 'texture_2d']: r#125
[#201 'texture_2d_array']: r#125
[#201 'texture_3d']: r#125
[#201 'texture_cube']: r#125
[#201 'texture_cube_array']: r#125
[#201 'texture_depth_2d']: r#125
[#201 'texture_depth_2d_array']: r#125
[#201 'texture_depth_cube']: r#125
[#201 'texture_depth_cube_array']: r#125
[#201 'texture_depth_multisampled_2d']: r#125
[#201 'texture_multisampled_2d']: r#125
[#201 'texture_storage_1d']: r#125
[#201 'texture_storage_2d']: r#125
[#201 'texture_storage_2d_array']: r#125
[#201 'texture_storage_3d']: r#125
[#201 'true']: r#125
[#201 'u32']: r#125
[#201 'vec2']: r#125
[#201 'vec3']: r#125
[#201 'vec4']: r#125
[#201 '~']: r#125
[#201 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#125
[#201 /0[fh]/]: r#125
[#201 /0[iu]?/]: r#125
[#201 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#125
[#201 /0[xX][0-9a-fA-F]+[iu]?/]: r#125
[#201 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#125
[#201 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#125
[#201 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#125
[#201 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#125
[#201 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#125
[#201 /[1-9][0-9]*[fh]/]: r#125
[#201 /[1-9][0-9]*[iu]?/]: r#125
[#202 '!']: s#63
[#202 '&']: s#66
[#202 '(']: s#78
[#202 '*']: s#65
[#202 '-']: s#62
[#202 'array']: s#82
[#202 'atomic']: s#96
[#202 'bitcast']: s#72
[#202 'bool']: s#89
[#202 'f16']: s#91
[#202 'f32']: s#90
[#202 'false']: s#88
[#202 'i32']: s#92
[#202 'mat2x2']: s#101
[#202 'mat2x3']: s#102
[#202 'mat2x4']: s#103
[#202 'mat3x2']: s#104
[#202 'mat3x3']: s#105
[#202 'mat3x4']: s#106
[#202 'mat4x2']: s#107
[#202 'mat4x3']: s#108
[#202 'mat4x4']: s#109
[#202 'ptr']: s#94
[#202 'sampler']: s#126
[#202 'sampler_comparison']: s#127
[#202 'texture_1d']: s#133
[#202 'texture_2d']: s#134
[#202 'texture_2d_array']: s#135
[#202 'texture_3d']: s#136
[#202 'texture_cube']: s#137
[#202 'texture_cube_array']: s#138
[#202 'texture_depth_2d']: s#128
[#202 'texture_depth_2d_array']: s#129
[#202 'texture_depth_cube']: s#130
[#202 'texture_depth_cube_array']: s#131
[#202 'texture_depth_multisampled_2d']: s#132
[#202 'texture_multisampled_2d']: s#139
[#202 'texture_storage_1d']: s#140
[#202 'texture_storage_2d']: s#141
[#202 'texture_storage_2d_array']: s#142
[#202 'texture_storage_3d']: s#143
[#202 'true']: s#87
[#202 'u32']: s#93
[#202 'vec2']: s#98
[#202 'vec3']: s#99
[#202 'vec4']: s#100
[#202 '~']: s#64
[#202 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#202 /0[fh]/]: s#113
[#202 /0[iu]?/]: s#110
[#202 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#202 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#202 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#202 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#202 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#202 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#202 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#202 /[1-9][0-9]*[fh]/]: s#114
[#202 /[1-9][0-9]*[iu]?/]: s#111
[#203 '!']: r#126
[#203 '&']: r#126
[#203 '(']: r#126
[#203 '*']: r#126
[#203 '-']: r#126
[#203 'array']: r#126
[#203 'atomic']: r#126
[#203 'bitcast']: r#126
[#203 'bool']: r#126
[#203 'f16']: r#126
[#203 'f32']: r#126
[#203 'false']: r#126
[#203 'i32']: r#126
[#203 'mat2x2']: r#126
[#203 'mat2x3']: r#126
[#203 'mat2x4']: r#126
[#203 'mat3x2']: r#126
[#203 'mat3x3']: r#126
[#203 'mat3x4']: r#126
[#203 'mat4x2']: r#126
[#203 'mat4x3']: r#126
[#203 'mat4x4']: r#126
[#203 'ptr']: r#126
[#203 'sampler']: r#126
[#203 'sampler_comparison']: r#126
[#203 'texture_1d']: r#126
[#203 'texture_2d']: r#126
[#203 'texture_2d_array']: r#126
[#203 'texture_3d']: r#126
[#203 'texture_cube']: r#126
[#203 'texture_cube_array']: r#126
[#203 'texture_depth_2d']: r#126
[#203 'texture_depth_2d_array']: r#126
[#203 'texture_depth_cube']: r#126
[#203 'texture_depth_cube_array']: r#126
[#203 'texture_depth_multisampled_2d']: r#126
[#203 'texture_multisampled_2d']: r#126
[#203 'texture_storage_1d']: r#126
[#203 'texture_storage_2d']: r#126
[#203 'texture_storage_2d_array']: r#126
[#203 'texture_storage_3d']: r#126
[#203 'true']: r#126
[#203 'u32']: r#126
[#203 'vec2']: r#126
[#203 'vec3']: r#126
[#203 'vec4']: r#126
[#203 '~']: r#126
[#203 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#126
[#203 /0[fh]/]: r#126
[#203 /0[iu]?/]: r#126
[#203 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#126
[#203 /0[xX][0-9a-fA-F]+[iu]?/]: r#126
[#203 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#126
[#203 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#126
[#203 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#126
[#203 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#126
[#203 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#126
[#203 /[1-9][0-9]*[fh]/]: r#126
[#203 /[1-9][0-9]*[iu]?/]: r#126
[#204 '!']: r#127
[#204 '&']: r#127
[#204 '(']: r#127
[#204 '*']: r#127
[#204 '-']: r#127
[#204 'array']: r#127
[#204 'atomic']: r#127
[#204 'bitcast']: r#127
[#204 'bool']: r#127
[#204 'f16']: r#127
[#204 'f32']: r#127
[#204 'false']: r#127
[#204 'i32']: r#127
[#204 'mat2x2']: r#127
[#204 'mat2x3']: r#127
[#204 'mat2x4']: r#127
[#204 'mat3x2']: r#127
[#204 'mat3x3']: r#127
[#204 'mat3x4']: r#127
[#204 'mat4x2']: r#127
[#204 'mat4x3']: r#127
[#204 'mat4x4']: r#127
[#204 'ptr']: r#127
[#204 'sampler']: r#127
[#204 'sampler_comparison']: r#127
[#204 'texture_1d']: r#127
[#204 'texture_2d']: r#127
[#204 'texture_2d_array']: r#127
[#204 'texture_3d']: r#127
[#204 'texture_cube']: r#127
[#204 'texture_cube_array']: r#127
[#204 'texture_depth_2d']: r#127
[#204 'texture_depth_2d_array']: r#127
[#204 'texture_depth_cube']: r#127
[#204 'texture_depth_cube_array']: r#127
[#204 'texture_depth_multisampled_2d']: r#127
[#204 'texture_multisampled_2d']: r#127
[#204 'texture_storage_1d']: r#127
[#204 'texture_storage_2d']: r#127
[#204 'texture_storage_2d_array']: r#127
[#204 'texture_storage_3d']: r#127
[#204 'true']: r#127
[#204 'u32']: r#127
[#204 'vec2']: r#127
[#204 'vec3']: r#127
[#204 'vec4']: r#127
[#204 '~']: r#127
[#204 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#127
[#204 /0[fh]/]: r#127
[#204 /0[iu]?/]: r#127
[#204 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#127
[#204 /0[xX][0-9a-fA-F]+[iu]?/]: r#127
[#204 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#127
[#204 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#127
[#204 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#127
[#204 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#127
[#204 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#127
[#204 /[1-9][0-9]*[fh]/]: r#127
[#204 /[1-9][0-9]*[iu]?/]: r#127
[#205 '!']: s#63
[#205 '&']: s#66
[#205 '(']: s#78
[#205 '*']: s#65
[#205 '-']: s#62
[#205 'array']: s#82
[#205 'atomic']: s#96
[#205 'bitcast']: s#72
[#205 'bool']: s#89
[#205 'f16']: s#91
[#205 'f32']: s#90
[#205 'false']: s#88
[#205 'i32']: s#92
[#205 'mat2x2']: s#101
[#205 'mat2x3']: s#102
[#205 'mat2x4']: s#103
[#205 'mat3x2']: s#104
[#205 'mat3x3']: s#105
[#205 'mat3x4']: s#106
[#205 'mat4x2']: s#107
[#205 'mat4x3']: s#108
[#205 'mat4x4']: s#109
[#205 'ptr']: s#94
[#205 'sampler']: s#126
[#205 'sampler_comparison']: s#127
[#205 'texture_1d']: s#133
[#205 'texture_2d']: s#134
[#205 'texture_2d_array']: s#135
[#205 'texture_3d']: s#136
[#205 'texture_cube']: s#137
[#205 'texture_cube_array']: s#138
[#205 'texture_depth_2d']: s#128
[#205 'texture_depth_2d_array']: s#129
[#205 'texture_depth_cube']: s#130
[#205 'texture_depth_cube_array']: s#131
[#205 'texture_depth_multisampled_2d']: s#132
[#205 'texture_multisampled_2d']: s#139
[#205 'texture_storage_1d']: s#140
[#205 'texture_storage_2d']: s#141
[#205 'texture_storage_2d_array']: s#142
[#205 'texture_storage_3d']: s#143
[#205 'true']: s#87
[#205 'u32']: s#93
[#205 'vec2']: s#98
[#205 'vec3']: s#99
[#205 'vec4']: s#100
[#205 '~']: s#64
[#205 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#205 /0[fh]/]: s#113
[#205 /0[iu]?/]: s#110
[#205 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#205 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#205 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#205 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#205 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#205 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#205 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#205 /[1-9][0-9]*[fh]/]: s#114
[#205 /[1-9][0-9]*[iu]?/]: s#111
[#206 '!']: s#63
[#206 '&']: s#66
[#206 '(']: s#78
[#206 '*']: s#65
[#206 '-']: s#62
[#206 'array']: s#82
[#206 'atomic']: s#96
[#206 'bitcast']: s#72
[#206 'bool']: s#89
[#206 'f16']: s#91
[#206 'f32']: s#90
[#206 'false']: s#88
[#206 'i32']: s#92
[#206 'mat2x2']: s#101
[#206 'mat2x3']: s#102
[#206 'mat2x4']: s#103
[#206 'mat3x2']: s#104
[#206 'mat3x3']: s#105
[#206 'mat3x4']: s#106
[#206 'mat4x2']: s#107
[#206 'mat4x3']: s#108
[#206 'mat4x4']: s#109
[#206 'ptr']: s#94
[#206 'sampler']: s#126
[#206 'sampler_comparison']: s#127
[#206 'texture_1d']: s#133
[#206 'texture_2d']: s#134
[#206 'texture_2d_array']: s#135
[#206 'texture_3d']: s#136
[#206 'texture_cube']: s#137
[#206 'texture_cube_array']: s#138
[#206 'texture_depth_2d']: s#128
[#206 'texture_depth_2d_array']: s#129
[#206 'texture_depth_cube']: s#130
[#206 'texture_depth_cube_array']: s#131
[#206 'texture_depth_multisampled_2d']: s#132
[#206 'texture_multisampled_2d']: s#139
[#206 'texture_storage_1d']: s#140
[#206 'texture_storage_2d']: s#141
[#206 'texture_storage_2d_array']: s#142
[#206 'texture_storage_3d']: s#143
[#206 'true']: s#87
[#206 'u32']: s#93
[#206 'vec2']: s#98
[#206 'vec3']: s#99
[#206 'vec4']: s#100
[#206 '~']: s#64
[#206 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#206 /0[fh]/]: s#113
[#206 /0[iu]?/]: s#110
[#206 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#206 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#206 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#206 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#206 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#206 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#206 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#206 /[1-9][0-9]*[fh]/]: s#114
[#206 /[1-9][0-9]*[iu]?/]: s#111
[#207 '!']: s#63
[#207 '&']: s#66
[#207 '(']: s#78
[#207 '*']: s#65
[#207 '-']: s#62
[#207 'array']: s#82
[#207 'atomic']: s#96
[#207 'bitcast']: s#72
[#207 'bool']: s#89
[#207 'f16']: s#91
[#207 'f32']: s#90
[#207 'false']: s#88
[#207 'i32']: s#92
[#207 'mat2x2']: s#101
[#207 'mat2x3']: s#102
[#207 'mat2x4']: s#103
[#207 'mat3x2']: s#104
[#207 'mat3x3']: s#105
[#207 'mat3x4']: s#106
[#207 'mat4x2']: s#107
[#207 'mat4x3']: s#108
[#207 'mat4x4']: s#109
[#207 'ptr']: s#94
[#207 'sampler']: s#126
[#207 'sampler_comparison']: s#127
[#207 'texture_1d']: s#133
[#207 'texture_2d']: s#134
[#207 'texture_2d_array']: s#135
[#207 'texture_3d']: s#136
[#207 'texture_cube']: s#137
[#207 'texture_cube_array']: s#138
[#207 'texture_depth_2d']: s#128
[#207 'texture_depth_2d_array']: s#129
[#207 'texture_depth_cube']: s#130
[#207 'texture_depth_cube_array']: s#131
[#207 'texture_depth_multisampled_2d']: s#132
[#207 'texture_multisampled_2d']: s#139
[#207 'texture_storage_1d']: s#140
[#207 'texture_storage_2d']: s#141
[#207 'texture_storage_2d_array']: s#142
[#207 'texture_storage_3d']: s#143
[#207 'true']: s#87
[#207 'u32']: s#93
[#207 'vec2']: s#98
[#207 'vec3']: s#99
[#207 'vec4']: s#100
[#207 '~']: s#64
[#207 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#207 /0[fh]/]: s#113
[#207 /0[iu]?/]: s#110
[#207 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#207 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#207 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#207 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#207 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#207 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#207 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#207 /[1-9][0-9]*[fh]/]: s#114
[#207 /[1-9][0-9]*[iu]?/]: s#111
[#208 '!']: s#63
[#208 '&']: s#66
[#208 '(']: s#78
[#208 '*']: s#65
[#208 '-']: s#62
[#208 'array']: s#82
[#208 'atomic']: s#96
[#208 'bitcast']: s#72
[#208 'bool']: s#89
[#208 'f16']: s#91
[#208 'f32']: s#90
[#208 'false']: s#88
[#208 'i32']: s#92
[#208 'mat2x2']: s#101
[#208 'mat2x3']: s#102
[#208 'mat2x4']: s#103
[#208 'mat3x2']: s#104
[#208 'mat3x3']: s#105
[#208 'mat3x4']: s#106
[#208 'mat4x2']: s#107
[#208 'mat4x3']: s#108
[#208 'mat4x4']: s#109
[#208 'ptr']: s#94
[#208 'sampler']: s#126
[#208 'sampler_comparison']: s#127
[#208 'texture_1d']: s#133
[#208 'texture_2d']: s#134
[#208 'texture_2d_array']: s#135
[#208 'texture_3d']: s#136
[#208 'texture_cube']: s#137
[#208 'texture_cube_array']: s#138
[#208 'texture_depth_2d']: s#128
[#208 'texture_depth_2d_array']: s#129
[#208 'texture_depth_cube']: s#130
[#208 'texture_depth_cube_array']: s#131
[#208 'texture_depth_multisampled_2d']: s#132
[#208 'texture_multisampled_2d']: s#139
[#208 'texture_storage_1d']: s#140
[#208 'texture_storage_2d']: s#141
[#208 'texture_storage_2d_array']: s#142
[#208 'texture_storage_3d']: s#143
[#208 'true']: s#87
[#208 'u32']: s#93
[#208 'vec2']: s#98
[#208 'vec3']: s#99
[#208 'vec4']: s#100
[#208 '~']: s#64
[#208 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#208 /0[fh]/]: s#113
[#208 /0[iu]?/]: s#110
[#208 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#208 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#208 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#208 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#208 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#208 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#208 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#208 /[1-9][0-9]*[fh]/]: s#114
[#208 /[1-9][0-9]*[iu]?/]: s#111
[#209 '!']: s#63
[#209 '&']: s#66
[#209 '(']: s#78
[#209 '*']: s#65
[#209 '-']: s#62
[#209 'array']: s#82
[#209 'atomic']: s#96
[#209 'bitcast']: s#72
[#209 'bool']: s#89
[#209 'f16']: s#91
[#209 'f32']: s#90
[#209 'false']: s#88
[#209 'i32']: s#92
[#209 'mat2x2']: s#101
[#209 'mat2x3']: s#102
[#209 'mat2x4']: s#103
[#209 'mat3x2']: s#104
[#209 'mat3x3']: s#105
[#209 'mat3x4']: s#106
[#209 'mat4x2']: s#107
[#209 'mat4x3']: s#108
[#209 'mat4x4']: s#109
[#209 'ptr']: s#94
[#209 'sampler']: s#126
[#209 'sampler_comparison']: s#127
[#209 'texture_1d']: s#133
[#209 'texture_2d']: s#134
[#209 'texture_2d_array']: s#135
[#209 'texture_3d']: s#136
[#209 'texture_cube']: s#137
[#209 'texture_cube_array']: s#138
[#209 'texture_depth_2d']: s#128
[#209 'texture_depth_2d_array']: s#129
[#209 'texture_depth_cube']: s#130
[#209 'texture_depth_cube_array']: s#131
[#209 'texture_depth_multisampled_2d']: s#132
[#209 'texture_multisampled_2d']: s#139
[#209 'texture_storage_1d']: s#140
[#209 'texture_storage_2d']: s#141
[#209 'texture_storage_2d_array']: s#142
[#209 'texture_storage_3d']: s#143
[#209 'true']: s#87
[#209 'u32']: s#93
[#209 'vec2']: s#98
[#209 'vec3']: s#99
[#209 'vec4']: s#100
[#209 '~']: s#64
[#209 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#209 /0[fh]/]: s#113
[#209 /0[iu]?/]: s#110
[#209 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#209 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#209 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#209 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#209 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#209 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#209 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#209 /[1-9][0-9]*[fh]/]: s#114
[#209 /[1-9][0-9]*[iu]?/]: s#111
[#210 '!']: s#63
[#210 '&']: s#66
[#210 '(']: s#78
[#210 '*']: s#65
[#210 '-']: s#62
[#210 'array']: s#82
[#210 'atomic']: s#96
[#210 'bitcast']: s#72
[#210 'bool']: s#89
[#210 'f16']: s#91
[#210 'f32']: s#90
[#210 'false']: s#88
[#210 'i32']: s#92
[#210 'mat2x2']: s#101
[#210 'mat2x3']: s#102
[#210 'mat2x4']: s#103
[#210 'mat3x2']: s#104
[#210 'mat3x3']: s#105
[#210 'mat3x4']: s#106
[#210 'mat4x2']: s#107
[#210 'mat4x3']: s#108
[#210 'mat4x4']: s#109
[#210 'ptr']: s#94
[#210 'sampler']: s#126
[#210 'sampler_comparison']: s#127
[#210 'texture_1d']: s#133
[#210 'texture_2d']: s#134
[#210 'texture_2d_array']: s#135
[#210 'texture_3d']: s#136
[#210 'texture_cube']: s#137
[#210 'texture_cube_array']: s#138
[#210 'texture_depth_2d']: s#128
[#210 'texture_depth_2d_array']: s#129
[#210 'texture_depth_cube']: s#130
[#210 'texture_depth_cube_array']: s#131
[#210 'texture_depth_multisampled_2d']: s#132
[#210 'texture_multisampled_2d']: s#139
[#210 'texture_storage_1d']: s#140
[#210 'texture_storage_2d']: s#141
[#210 'texture_storage_2d_array']: s#142
[#210 'texture_storage_3d']: s#143
[#210 'true']: s#87
[#210 'u32']: s#93
[#210 'vec2']: s#98
[#210 'vec3']: s#99
[#210 'vec4']: s#100
[#210 '~']: s#64
[#210 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#210 /0[fh]/]: s#113
[#210 /0[iu]?/]: s#110
[#210 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#210 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#210 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#210 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#210 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#210 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#210 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#210 /[1-9][0-9]*[fh]/]: s#114
[#210 /[1-9][0-9]*[iu]?/]: s#111
[#211 '!']: s#63
[#211 '&']: s#66
[#211 '(']: s#78
[#211 '*']: s#65
[#211 '-']: s#62
[#211 'array']: s#82
[#211 'atomic']: s#96
[#211 'bitcast']: s#72
[#211 'bool']: s#89
[#211 'f16']: s#91
[#211 'f32']: s#90
[#211 'false']: s#88
[#211 'i32']: s#92
[#211 'mat2x2']: s#101
[#211 'mat2x3']: s#102
[#211 'mat2x4']: s#103
[#211 'mat3x2']: s#104
[#211 'mat3x3']: s#105
[#211 'mat3x4']: s#106
[#211 'mat4x2']: s#107
[#211 'mat4x3']: s#108
[#211 'mat4x4']: s#109
[#211 'ptr']: s#94
[#211 'sampler']: s#126
[#211 'sampler_comparison']: s#127
[#211 'texture_1d']: s#133
[#211 'texture_2d']: s#134
[#211 'texture_2d_array']: s#135
[#211 'texture_3d']: s#136
[#211 'texture_cube']: s#137
[#211 'texture_cube_array']: s#138
[#211 'texture_depth_2d']: s#128
[#211 'texture_depth_2d_array']: s#129
[#211 'texture_depth_cube']: s#130
[#211 'texture_depth_cube_array']: s#131
[#211 'texture_depth_multisampled_2d']: s#132
[#211 'texture_multisampled_2d']: s#139
[#211 'texture_storage_1d']: s#140
[#211 'texture_storage_2d']: s#141
[#211 'texture_storage_2d_array']: s#142
[#211 'texture_storage_3d']: s#143
[#211 'true']: s#87
[#211 'u32']: s#93
[#211 'vec2']: s#98
[#211 'vec3']: s#99
[#211 'vec4']: s#100
[#211 '~']: s#64
[#211 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#211 /0[fh]/]: s#113
[#211 /0[iu]?/]: s#110
[#211 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#211 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#211 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#211 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#211 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#211 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#211 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#211 /[1-9][0-9]*[fh]/]: s#114
[#211 /[1-9][0-9]*[iu]?/]: s#111
[#212 '!']: s#63
[#212 '&']: s#66
[#212 '(']: s#78
[#212 '*']: s#65
[#212 '-']: s#62
[#212 'array']: s#82
[#212 'atomic']: s#96
[#212 'bitcast']: s#72
[#212 'bool']: s#89
[#212 'f16']: s#91
[#212 'f32']: s#90
[#212 'false']: s#88
[#212 'i32']: s#92
[#212 'mat2x2']: s#101
[#212 'mat2x3']: s#102
[#212 'mat2x4']: s#103
[#212 'mat3x2']: s#104
[#212 'mat3x3']: s#105
[#212 'mat3x4']: s#106
[#212 'mat4x2']: s#107
[#212 'mat4x3']: s#108
[#212 'mat4x4']: s#109
[#212 'ptr']: s#94
[#212 'sampler']: s#126
[#212 'sampler_comparison']: s#127
[#212 'texture_1d']: s#133
[#212 'texture_2d']: s#134
[#212 'texture_2d_array']: s#135
[#212 'texture_3d']: s#136
[#212 'texture_cube']: s#137
[#212 'texture_cube_array']: s#138
[#212 'texture_depth_2d']: s#128
[#212 'texture_depth_2d_array']: s#129
[#212 'texture_depth_cube']: s#130
[#212 'texture_depth_cube_array']: s#131
[#212 'texture_depth_multisampled_2d']: s#132
[#212 'texture_multisampled_2d']: s#139
[#212 'texture_storage_1d']: s#140
[#212 'texture_storage_2d']: s#141
[#212 'texture_storage_2d_array']: s#142
[#212 'texture_storage_3d']: s#143
[#212 'true']: s#87
[#212 'u32']: s#93
[#212 'vec2']: s#98
[#212 'vec3']: s#99
[#212 'vec4']: s#100
[#212 '~']: s#64
[#212 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#212 /0[fh]/]: s#113
[#212 /0[iu]?/]: s#110
[#212 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#212 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#212 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#212 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#212 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#212 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#212 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#212 /[1-9][0-9]*[fh]/]: s#114
[#212 /[1-9][0-9]*[iu]?/]: s#111
[#213 '!']: s#63
[#213 '&']: s#66
[#213 '(']: s#78
[#213 '*']: s#65
[#213 '-']: s#62
[#213 'array']: s#82
[#213 'atomic']: s#96
[#213 'bitcast']: s#72
[#213 'bool']: s#89
[#213 'f16']: s#91
[#213 'f32']: s#90
[#213 'false']: s#88
[#213 'i32']: s#92
[#213 'mat2x2']: s#101
[#213 'mat2x3']: s#102
[#213 'mat2x4']: s#103
[#213 'mat3x2']: s#104
[#213 'mat3x3']: s#105
[#213 'mat3x4']: s#106
[#213 'mat4x2']: s#107
[#213 'mat4x3']: s#108
[#213 'mat4x4']: s#109
[#213 'ptr']: s#94
[#213 'sampler']: s#126
[#213 'sampler_comparison']: s#127
[#213 'texture_1d']: s#133
[#213 'texture_2d']: s#134
[#213 'texture_2d_array']: s#135
[#213 'texture_3d']: s#136
[#213 'texture_cube']: s#137
[#213 'texture_cube_array']: s#138
[#213 'texture_depth_2d']: s#128
[#213 'texture_depth_2d_array']: s#129
[#213 'texture_depth_cube']: s#130
[#213 'texture_depth_cube_array']: s#131
[#213 'texture_depth_multisampled_2d']: s#132
[#213 'texture_multisampled_2d']: s#139
[#213 'texture_storage_1d']: s#140
[#213 'texture_storage_2d']: s#141
[#213 'texture_storage_2d_array']: s#142
[#213 'texture_storage_3d']: s#143
[#213 'true']: s#87
[#213 'u32']: s#93
[#213 'vec2']: s#98
[#213 'vec3']: s#99
[#213 'vec4']: s#100
[#213 '~']: s#64
[#213 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#213 /0[fh]/]: s#113
[#213 /0[iu]?/]: s#110
[#213 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#213 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#213 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#213 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#213 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#213 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#213 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#213 /[1-9][0-9]*[fh]/]: s#114
[#213 /[1-9][0-9]*[iu]?/]: s#111
[#214 '!']: r#128
[#214 '&']: r#128
[#214 '(']: r#128
[#214 '*']: r#128
[#214 '-']: r#128
[#214 'array']: r#128
[#214 'atomic']: r#128
[#214 'bitcast']: r#128
[#214 'bool']: r#128
[#214 'f16']: r#128
[#214 'f32']: r#128
[#214 'false']: r#128
[#214 'i32']: r#128
[#214 'mat2x2']: r#128
[#214 'mat2x3']: r#128
[#214 'mat2x4']: r#128
[#214 'mat3x2']: r#128
[#214 'mat3x3']: r#128
[#214 'mat3x4']: r#128
[#214 'mat4x2']: r#128
[#214 'mat4x3']: r#128
[#214 'mat4x4']: r#128
[#214 'ptr']: r#128
[#214 'sampler']: r#128
[#214 'sampler_comparison']: r#128
[#214 'texture_1d']: r#128
[#214 'texture_2d']: r#128
[#214 'texture_2d_array']: r#128
[#214 'texture_3d']: r#128
[#214 'texture_cube']: r#128
[#214 'texture_cube_array']: r#128
[#214 'texture_depth_2d']: r#128
[#214 'texture_depth_2d_array']: r#128
[#214 'texture_depth_cube']: r#128
[#214 'texture_depth_cube_array']: r#128
[#214 'texture_depth_multisampled_2d']: r#128
[#214 'texture_multisampled_2d']: r#128
[#214 'texture_storage_1d']: r#128
[#214 'texture_storage_2d']: r#128
[#214 'texture_storage_2d_array']: r#128
[#214 'texture_storage_3d']: r#128
[#214 'true']: r#128
[#214 'u32']: r#128
[#214 'vec2']: r#128
[#214 'vec3']: r#128
[#214 'vec4']: r#128
[#214 '~']: r#128
[#214 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#128
[#214 /0[fh]/]: r#128
[#214 /0[iu]?/]: r#128
[#214 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#128
[#214 /0[xX][0-9a-fA-F]+[iu]?/]: r#128
[#214 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#128
[#214 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#128
[#214 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#128
[#214 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#128
[#214 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#128
[#214 /[1-9][0-9]*[fh]/]: r#128
[#214 /[1-9][0-9]*[iu]?/]: r#128
[#215 '!']: r#129
[#215 '&']: r#129
[#215 '(']: r#129
[#215 '*']: r#129
[#215 '-']: r#129
[#215 'array']: r#129
[#215 'atomic']: r#129
[#215 'bitcast']: r#129
[#215 'bool']: r#129
[#215 'f16']: r#129
[#215 'f32']: r#129
[#215 'false']: r#129
[#215 'i32']: r#129
[#215 'mat2x2']: r#129
[#215 'mat2x3']: r#129
[#215 'mat2x4']: r#129
[#215 'mat3x2']: r#129
[#215 'mat3x3']: r#129
[#215 'mat3x4']: r#129
[#215 'mat4x2']: r#129
[#215 'mat4x3']: r#129
[#215 'mat4x4']: r#129
[#215 'ptr']: r#129
[#215 'sampler']: r#129
[#215 'sampler_comparison']: r#129
[#215 'texture_1d']: r#129
[#215 'texture_2d']: r#129
[#215 'texture_2d_array']: r#129
[#215 'texture_3d']: r#129
[#215 'texture_cube']: r#129
[#215 'texture_cube_array']: r#129
[#215 'texture_depth_2d']: r#129
[#215 'texture_depth_2d_array']: r#129
[#215 'texture_depth_cube']: r#129
[#215 'texture_depth_cube_array']: r#129
[#215 'texture_depth_multisampled_2d']: r#129
[#215 'texture_multisampled_2d']: r#129
[#215 'texture_storage_1d']: r#129
[#215 'texture_storage_2d']: r#129
[#215 'texture_storage_2d_array']: r#129
[#215 'texture_storage_3d']: r#129
[#215 'true']: r#129
[#215 'u32']: r#129
[#215 'vec2']: r#129
[#215 'vec3']: r#129
[#215 'vec4']: r#129
[#215 '~']: r#129
[#215 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#129
[#215 /0[fh]/]: r#129
[#215 /0[iu]?/]: r#129
[#215 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#129
[#215 /0[xX][0-9a-fA-F]+[iu]?/]: r#129
[#215 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#129
[#215 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#129
[#215 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#129
[#215 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#129
[#215 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#129
[#215 /[1-9][0-9]*[fh]/]: r#129
[#215 /[1-9][0-9]*[iu]?/]: r#129
[#216 '!']: r#130
[#216 '&']: r#130
[#216 '(']: r#130
[#216 '*']: r#130
[#216 '-']: r#130
[#216 'array']: r#130
[#216 'atomic']: r#130
[#216 'bitcast']: r#130
[#216 'bool']: r#130
[#216 'f16']: r#130
[#216 'f32']: r#130
[#216 'false']: r#130
[#216 'i32']: r#130
[#216 'mat2x2']: r#130
[#216 'mat2x3']: r#130
[#216 'mat2x4']: r#130
[#216 'mat3x2']: r#130
[#216 'mat3x3']: r#130
[#216 'mat3x4']: r#130
[#216 'mat4x2']: r#130
[#216 'mat4x3']: r#130
[#216 'mat4x4']: r#130
[#216 'ptr']: r#130
[#216 'sampler']: r#130
[#216 'sampler_comparison']: r#130
[#216 'texture_1d']: r#130
[#216 'texture_2d']: r#130
[#216 'texture_2d_array']: r#130
[#216 'texture_3d']: r#130
[#216 'texture_cube']: r#130
[#216 'texture_cube_array']: r#130
[#216 'texture_depth_2d']: r#130
[#216 'texture_depth_2d_array']: r#130
[#216 'texture_depth_cube']: r#130
[#216 'texture_depth_cube_array']: r#130
[#216 'texture_depth_multisampled_2d']: r#130
[#216 'texture_multisampled_2d']: r#130
[#216 'texture_storage_1d']: r#130
[#216 'texture_storage_2d']: r#130
[#216 'texture_storage_2d_array']: r#130
[#216 'texture_storage_3d']: r#130
[#216 'true']: r#130
[#216 'u32']: r#130
[#216 'vec2']: r#130
[#216 'vec3']: r#130
[#216 'vec4']: r#130
[#216 '~']: r#130
[#216 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#130
[#216 /0[fh]/]: r#130
[#216 /0[iu]?/]: r#130
[#216 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#130
[#216 /0[xX][0-9a-fA-F]+[iu]?/]: r#130
[#216 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#130
[#216 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#130
[#216 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#130
[#216 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#130
[#216 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#130
[#216 /[1-9][0-9]*[fh]/]: r#130
[#216 /[1-9][0-9]*[iu]?/]: r#130
[#217 '!']: r#131
[#217 '&']: r#131
[#217 '(']: r#131
[#217 '*']: r#131
[#217 '-']: r#131
[#217 'array']: r#131
[#217 'atomic']: r#131
[#217 'bitcast']: r#131
[#217 'bool']: r#131
[#217 'f16']: r#131
[#217 'f32']: r#131
[#217 'false']: r#131
[#217 'i32']: r#131
[#217 'mat2x2']: r#131
[#217 'mat2x3']: r#131
[#217 'mat2x4']: r#131
[#217 'mat3x2']: r#131
[#217 'mat3x3']: r#131
[#217 'mat3x4']: r#131
[#217 'mat4x2']: r#131
[#217 'mat4x3']: r#131
[#217 'mat4x4']: r#131
[#217 'ptr']: r#131
[#217 'sampler']: r#131
[#217 'sampler_comparison']: r#131
[#217 'texture_1d']: r#131
[#217 'texture_2d']: r#131
[#217 'texture_2d_array']: r#131
[#217 'texture_3d']: r#131
[#217 'texture_cube']: r#131
[#217 'texture_cube_array']: r#131
[#217 'texture_depth_2d']: r#131
[#217 'texture_depth_2d_array']: r#131
[#217 'texture_depth_cube']: r#131
[#217 'texture_depth_cube_array']: r#131
[#217 'texture_depth_multisampled_2d']: r#131
[#217 'texture_multisampled_2d']: r#131
[#217 'texture_storage_1d']: r#131
[#217 'texture_storage_2d']: r#131
[#217 'texture_storage_2d_array']: r#131
[#217 'texture_storage_3d']: r#131
[#217 'true']: r#131
[#217 'u32']: r#131
[#217 'vec2']: r#131
[#217 'vec3']: r#131
[#217 'vec4']: r#131
[#217 '~']: r#131
[#217 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#131
[#217 /0[fh]/]: r#131
[#217 /0[iu]?/]: r#131
[#217 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#131
[#217 /0[xX][0-9a-fA-F]+[iu]?/]: r#131
[#217 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#131
[#217 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#131
[#217 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#131
[#217 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#131
[#217 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#131
[#217 /[1-9][0-9]*[fh]/]: r#131
[#217 /[1-9][0-9]*[iu]?/]: r#131
[#218 '!']: s#63
[#218 '&']: s#66
[#218 '(']: s#78
[#218 '*']: s#65
[#218 '-']: s#62
[#218 'array']: s#82
[#218 'atomic']: s#96
[#218 'bitcast']: s#72
[#218 'bool']: s#89
[#218 'f16']: s#91
[#218 'f32']: s#90
[#218 'false']: s#88
[#218 'i32']: s#92
[#218 'mat2x2']: s#101
[#218 'mat2x3']: s#102
[#218 'mat2x4']: s#103
[#218 'mat3x2']: s#104
[#218 'mat3x3']: s#105
[#218 'mat3x4']: s#106
[#218 'mat4x2']: s#107
[#218 'mat4x3']: s#108
[#218 'mat4x4']: s#109
[#218 'ptr']: s#94
[#218 'sampler']: s#126
[#218 'sampler_comparison']: s#127
[#218 'texture_1d']: s#133
[#218 'texture_2d']: s#134
[#218 'texture_2d_array']: s#135
[#218 'texture_3d']: s#136
[#218 'texture_cube']: s#137
[#218 'texture_cube_array']: s#138
[#218 'texture_depth_2d']: s#128
[#218 'texture_depth_2d_array']: s#129
[#218 'texture_depth_cube']: s#130
[#218 'texture_depth_cube_array']: s#131
[#218 'texture_depth_multisampled_2d']: s#132
[#218 'texture_multisampled_2d']: s#139
[#218 'texture_storage_1d']: s#140
[#218 'texture_storage_2d']: s#141
[#218 'texture_storage_2d_array']: s#142
[#218 'texture_storage_3d']: s#143
[#218 'true']: s#87
[#218 'u32']: s#93
[#218 'vec2']: s#98
[#218 'vec3']: s#99
[#218 'vec4']: s#100
[#218 '~']: s#64
[#218 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#218 /0[fh]/]: s#113
[#218 /0[iu]?/]: s#110
[#218 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#218 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#218 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#218 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#218 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#218 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#218 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#218 /[1-9][0-9]*[fh]/]: s#114
[#218 /[1-9][0-9]*[iu]?/]: s#111
[#219 '!']: s#63
[#219 '&']: s#66
[#219 '(']: s#78
[#219 '*']: s#65
[#219 '-']: s#62
[#219 'array']: s#82
[#219 'atomic']: s#96
[#219 'bitcast']: s#72
[#219 'bool']: s#89
[#219 'f16']: s#91
[#219 'f32']: s#90
[#219 'false']: s#88
[#219 'i32']: s#92
[#219 'mat2x2']: s#101
[#219 'mat2x3']: s#102
[#219 'mat2x4']: s#103
[#219 'mat3x2']: s#104
[#219 'mat3x3']: s#105
[#219 'mat3x4']: s#106
[#219 'mat4x2']: s#107
[#219 'mat4x3']: s#108
[#219 'mat4x4']: s#109
[#219 'ptr']: s#94
[#219 'sampler']: s#126
[#219 'sampler_comparison']: s#127
[#219 'texture_1d']: s#133
[#219 'texture_2d']: s#134
[#219 'texture_2d_array']: s#135
[#219 'texture_3d']: s#136
[#219 'texture_cube']: s#137
[#219 'texture_cube_array']: s#138
[#219 'texture_depth_2d']: s#128
[#219 'texture_depth_2d_array']: s#129
[#219 'texture_depth_cube']: s#130
[#219 'texture_depth_cube_array']: s#131
[#219 'texture_depth_multisampled_2d']: s#132
[#219 'texture_multisampled_2d']: s#139
[#219 'texture_storage_1d']: s#140
[#219 'texture_storage_2d']: s#141
[#219 'texture_storage_2d_array']: s#142
[#219 'texture_storage_3d']: s#143
[#219 'true']: s#87
[#219 'u32']: s#93
[#219 'vec2']: s#98
[#219 'vec3']: s#99
[#219 'vec4']: s#100
[#219 '~']: s#64
[#219 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#219 /0[fh]/]: s#113
[#219 /0[iu]?/]: s#110
[#219 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#219 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#219 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#219 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#219 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#219 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#219 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#219 /[1-9][0-9]*[fh]/]: s#114
[#219 /[1-9][0-9]*[iu]?/]: s#111
[#220 '!']: s#63
[#220 '&']: s#66
[#220 '(']: s#78
[#220 '*']: s#65
[#220 '-']: s#62
[#220 'array']: s#82
[#220 'atomic']: s#96
[#220 'bitcast']: s#72
[#220 'bool']: s#89
[#220 'f16']: s#91
[#220 'f32']: s#90
[#220 'false']: s#88
[#220 'i32']: s#92
[#220 'mat2x2']: s#101
[#220 'mat2x3']: s#102
[#220 'mat2x4']: s#103
[#220 'mat3x2']: s#104
[#220 'mat3x3']: s#105
[#220 'mat3x4']: s#106
[#220 'mat4x2']: s#107
[#220 'mat4x3']: s#108
[#220 'mat4x4']: s#109
[#220 'ptr']: s#94
[#220 'sampler']: s#126
[#220 'sampler_comparison']: s#127
[#220 'texture_1d']: s#133
[#220 'texture_2d']: s#134
[#220 'texture_2d_array']: s#135
[#220 'texture_3d']: s#136
[#220 'texture_cube']: s#137
[#220 'texture_cube_array']: s#138
[#220 'texture_depth_2d']: s#128
[#220 'texture_depth_2d_array']: s#129
[#220 'texture_depth_cube']: s#130
[#220 'texture_depth_cube_array']: s#131
[#220 'texture_depth_multisampled_2d']: s#132
[#220 'texture_multisampled_2d']: s#139
[#220 'texture_storage_1d']: s#140
[#220 'texture_storage_2d']: s#141
[#220 'texture_storage_2d_array']: s#142
[#220 'texture_storage_3d']: s#143
[#220 'true']: s#87
[#220 'u32']: s#93
[#220 'vec2']: s#98
[#220 'vec3']: s#99
[#220 'vec4']: s#100
[#220 '~']: s#64
[#220 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#220 /0[fh]/]: s#113
[#220 /0[iu]?/]: s#110
[#220 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#220 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#220 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#220 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#220 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#220 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#220 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#220 /[1-9][0-9]*[fh]/]: s#114
[#220 /[1-9][0-9]*[iu]?/]: s#111
[#221 '!']: s#63
[#221 '&']: s#66
[#221 '(']: s#78
[#221 '*']: s#65
[#221 '-']: s#62
[#221 'array']: s#82
[#221 'atomic']: s#96
[#221 'bitcast']: s#72
[#221 'bool']: s#89
[#221 'f16']: s#91
[#221 'f32']: s#90
[#221 'false']: s#88
[#221 'i32']: s#92
[#221 'mat2x2']: s#101
[#221 'mat2x3']: s#102
[#221 'mat2x4']: s#103
[#221 'mat3x2']: s#104
[#221 'mat3x3']: s#105
[#221 'mat3x4']: s#106
[#221 'mat4x2']: s#107
[#221 'mat4x3']: s#108
[#221 'mat4x4']: s#109
[#221 'ptr']: s#94
[#221 'sampler']: s#126
[#221 'sampler_comparison']: s#127
[#221 'texture_1d']: s#133
[#221 'texture_2d']: s#134
[#221 'texture_2d_array']: s#135
[#221 'texture_3d']: s#136
[#221 'texture_cube']: s#137
[#221 'texture_cube_array']: s#138
[#221 'texture_depth_2d']: s#128
[#221 'texture_depth_2d_array']: s#129
[#221 'texture_depth_cube']: s#130
[#221 'texture_depth_cube_array']: s#131
[#221 'texture_depth_multisampled_2d']: s#132
[#221 'texture_multisampled_2d']: s#139
[#221 'texture_storage_1d']: s#140
[#221 'texture_storage_2d']: s#141
[#221 'texture_storage_2d_array']: s#142
[#221 'texture_storage_3d']: s#143
[#221 'true']: s#87
[#221 'u32']: s#93
[#221 'vec2']: s#98
[#221 'vec3']: s#99
[#221 'vec4']: s#100
[#221 '~']: s#64
[#221 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#221 /0[fh]/]: s#113
[#221 /0[iu]?/]: s#110
[#221 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#221 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#221 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#221 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#221 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#221 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#221 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#221 /[1-9][0-9]*[fh]/]: s#114
[#221 /[1-9][0-9]*[iu]?/]: s#111
[#222 '!']: s#63
[#222 '&']: s#66
[#222 '(']: s#78
[#222 '*']: s#65
[#222 '-']: s#62
[#222 'array']: s#82
[#222 'atomic']: s#96
[#222 'bitcast']: s#72
[#222 'bool']: s#89
[#222 'f16']: s#91
[#222 'f32']: s#90
[#222 'false']: s#88
[#222 'i32']: s#92
[#222 'mat2x2']: s#101
[#222 'mat2x3']: s#102
[#222 'mat2x4']: s#103
[#222 'mat3x2']: s#104
[#222 'mat3x3']: s#105
[#222 'mat3x4']: s#106
[#222 'mat4x2']: s#107
[#222 'mat4x3']: s#108
[#222 'mat4x4']: s#109
[#222 'ptr']: s#94
[#222 'sampler']: s#126
[#222 'sampler_comparison']: s#127
[#222 'texture_1d']: s#133
[#222 'texture_2d']: s#134
[#222 'texture_2d_array']: s#135
[#222 'texture_3d']: s#136
[#222 'texture_cube']: s#137
[#222 'texture_cube_array']: s#138
[#222 'texture_depth_2d']: s#128
[#222 'texture_depth_2d_array']: s#129
[#222 'texture_depth_cube']: s#130
[#222 'texture_depth_cube_array']: s#131
[#222 'texture_depth_multisampled_2d']: s#132
[#222 'texture_multisampled_2d']: s#139
[#222 'texture_storage_1d']: s#140
[#222 'texture_storage_2d']: s#141
[#222 'texture_storage_2d_array']: s#142
[#222 'texture_storage_3d']: s#143
[#222 'true']: s#87
[#222 'u32']: s#93
[#222 'vec2']: s#98
[#222 'vec3']: s#99
[#222 'vec4']: s#100
[#222 '~']: s#64
[#222 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#222 /0[fh]/]: s#113
[#222 /0[iu]?/]: s#110
[#222 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#222 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#222 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#222 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#222 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#222 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#222 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#222 /[1-9][0-9]*[fh]/]: s#114
[#222 /[1-9][0-9]*[iu]?/]: s#111
[#223 'flat']: s#249
[#223 'linear']: s#248
[#223 'perspective']: s#247
[#224 '!']: s#63
[#224 '&']: s#66
[#224 '(']: s#78
[#224 '*']: s#65
[#224 '-']: s#62
[#224 'array']: s#82
[#224 'atomic']: s#96
[#224 'bitcast']: s#72
[#224 'bool']: s#89
[#224 'f16']: s#91
[#224 'f32']: s#90
[#224 'false']: s#88
[#224 'i32']: s#92
[#224 'mat2x2']: s#101
[#224 'mat2x3']: s#102
[#224 'mat2x4']: s#103
[#224 'mat3x2']: s#104
[#224 'mat3x3']: s#105
[#224 'mat3x4']: s#106
[#224 'mat4x2']: s#107
[#224 'mat4x3']: s#108
[#224 'mat4x4']: s#109
[#224 'ptr']: s#94
[#224 'sampler']: s#126
[#224 'sampler_comparison']: s#127
[#224 'texture_1d']: s#133
[#224 'texture_2d']: s#134
[#224 'texture_2d_array']: s#135
[#224 'texture_3d']: s#136
[#224 'texture_cube']: s#137
[#224 'texture_cube_array']: s#138
[#224 'texture_depth_2d']: s#128
[#224 'texture_depth_2d_array']: s#129
[#224 'texture_depth_cube']: s#130
[#224 'texture_depth_cube_array']: s#131
[#224 'texture_depth_multisampled_2d']: s#132
[#224 'texture_multisampled_2d']: s#139
[#224 'texture_storage_1d']: s#140
[#224 'texture_storage_2d']: s#141
[#224 'texture_storage_2d_array']: s#142
[#224 'texture_storage_3d']: s#143
[#224 'true']: s#87
[#224 'u32']: s#93
[#224 'vec2']: s#98
[#224 'vec3']: s#99
[#224 'vec4']: s#100
[#224 '~']: s#64
[#224 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#224 /0[fh]/]: s#113
[#224 /0[iu]?/]: s#110
[#224 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#224 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#224 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#224 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#224 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#224 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#224 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#224 /[1-9][0-9]*[fh]/]: s#114
[#224 /[1-9][0-9]*[iu]?/]: s#111
[#225 '!']: s#63
[#225 '&']: s#66
[#225 '(']: s#78
[#225 '*']: s#65
[#225 '-']: s#62
[#225 'array']: s#82
[#225 'atomic']: s#96
[#225 'bitcast']: s#72
[#225 'bool']: s#89
[#225 'f16']: s#91
[#225 'f32']: s#90
[#225 'false']: s#88
[#225 'i32']: s#92
[#225 'mat2x2']: s#101
[#225 'mat2x3']: s#102
[#225 'mat2x4']: s#103
[#225 'mat3x2']: s#104
[#225 'mat3x3']: s#105
[#225 'mat3x4']: s#106
[#225 'mat4x2']: s#107
[#225 'mat4x3']: s#108
[#225 'mat4x4']: s#109
[#225 'ptr']: s#94
[#225 'sampler']: s#126
[#225 'sampler_comparison']: s#127
[#225 'texture_1d']: s#133
[#225 'texture_2d']: s#134
[#225 'texture_2d_array']: s#135
[#225 'texture_3d']: s#136
[#225 'texture_cube']: s#137
[#225 'texture_cube_array']: s#138
[#225 'texture_depth_2d']: s#128
[#225 'texture_depth_2d_array']: s#129
[#225 'texture_depth_cube']: s#130
[#225 'texture_depth_cube_array']: s#131
[#225 'texture_depth_multisampled_2d']: s#132
[#225 'texture_multisampled_2d']: s#139
[#225 'texture_storage_1d']: s#140
[#225 'texture_storage_2d']: s#141
[#225 'texture_storage_2d_array']: s#142
[#225 'texture_storage_3d']: s#143
[#225 'true']: s#87
[#225 'u32']: s#93
[#225 'vec2']: s#98
[#225 'vec3']: s#99
[#225 'vec4']: s#100
[#225 '~']: s#64
[#225 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#225 /0[fh]/]: s#113
[#225 /0[iu]?/]: s#110
[#225 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#225 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#225 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#225 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#225 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#225 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#225 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#225 /[1-9][0-9]*[fh]/]: s#114
[#225 /[1-9][0-9]*[iu]?/]: s#111
[#226 'frag_depth']: s#236
[#226 'front_facing']: s#235
[#226 'global_invocation_id']: s#239
[#226 'instance_index']: s#233
[#226 'local_invocation_id']: s#237
[#226 'local_invocation_index']: s#238
[#226 'num_workgroups']: s#241
[#226 'position']: s#234
[#226 'sample_index']: s#242
[#226 'sample_mask']: s#243
[#226 'vertex_index']: s#232
[#226 'workgroup_id']: s#240
[#227 '!']: s#63
[#227 '&']: s#66
[#227 '(']: s#78
[#227 '*']: s#65
[#227 '-']: s#62
[#227 'array']: s#82
[#227 'atomic']: s#96
[#227 'bitcast']: s#72
[#227 'bool']: s#89
[#227 'f16']: s#91
[#227 'f32']: s#90
[#227 'false']: s#88
[#227 'i32']: s#92
[#227 'mat2x2']: s#101
[#227 'mat2x3']: s#102
[#227 'mat2x4']: s#103
[#227 'mat3x2']: s#104
[#227 'mat3x3']: s#105
[#227 'mat3x4']: s#106
[#227 'mat4x2']: s#107
[#227 'mat4x3']: s#108
[#227 'mat4x4']: s#109
[#227 'ptr']: s#94
[#227 'sampler']: s#126
[#227 'sampler_comparison']: s#127
[#227 'texture_1d']: s#133
[#227 'texture_2d']: s#134
[#227 'texture_2d_array']: s#135
[#227 'texture_3d']: s#136
[#227 'texture_cube']: s#137
[#227 'texture_cube_array']: s#138
[#227 'texture_depth_2d']: s#128
[#227 'texture_depth_2d_array']: s#129
[#227 'texture_depth_cube']: s#130
[#227 'texture_depth_cube_array']: s#131
[#227 'texture_depth_multisampled_2d']: s#132
[#227 'texture_multisampled_2d']: s#139
[#227 'texture_storage_1d']: s#140
[#227 'texture_storage_2d']: s#141
[#227 'texture_storage_2d_array']: s#142
[#227 'texture_storage_3d']: s#143
[#227 'true']: s#87
[#227 'u32']: s#93
[#227 'vec2']: s#98
[#227 'vec3']: s#99
[#227 'vec4']: s#100
[#227 '~']: s#64
[#227 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#227 /0[fh]/]: s#113
[#227 /0[iu]?/]: s#110
[#227 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#227 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#227 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#227 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#227 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#227 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#227 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#227 /[1-9][0-9]*[fh]/]: s#114
[#227 /[1-9][0-9]*[iu]?/]: s#111
[#228 '!']: s#63
[#228 '&']: s#66
[#228 '(']: s#78
[#228 '*']: s#65
[#228 '-']: s#62
[#228 'array']: s#82
[#228 'atomic']: s#96
[#228 'bitcast']: s#72
[#228 'bool']: s#89
[#228 'f16']: s#91
[#228 'f32']: s#90
[#228 'false']: s#88
[#228 'i32']: s#92
[#228 'mat2x2']: s#101
[#228 'mat2x3']: s#102
[#228 'mat2x4']: s#103
[#228 'mat3x2']: s#104
[#228 'mat3x3']: s#105
[#228 'mat3x4']: s#106
[#228 'mat4x2']: s#107
[#228 'mat4x3']: s#108
[#228 'mat4x4']: s#109
[#228 'ptr']: s#94
[#228 'sampler']: s#126
[#228 'sampler_comparison']: s#127
[#228 'texture_1d']: s#133
[#228 'texture_2d']: s#134
[#228 'texture_2d_array']: s#135
[#228 'texture_3d']: s#136
[#228 'texture_cube']: s#137
[#228 'texture_cube_array']: s#138
[#228 'texture_depth_2d']: s#128
[#228 'texture_depth_2d_array']: s#129
[#228 'texture_depth_cube']: s#130
[#228 'texture_depth_cube_array']: s#131
[#228 'texture_depth_multisampled_2d']: s#132
[#228 'texture_multisampled_2d']: s#139
[#228 'texture_storage_1d']: s#140
[#228 'texture_storage_2d']: s#141
[#228 'texture_storage_2d_array']: s#142
[#228 'texture_storage_3d']: s#143
[#228 'true']: s#87
[#228 'u32']: s#93
[#228 'vec2']: s#98
[#228 'vec3']: s#99
[#228 'vec4']: s#100
[#228 '~']: s#64
[#228 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#228 /0[fh]/]: s#113
[#228 /0[iu]?/]: s#110
[#228 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#228 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#228 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#228 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#228 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#228 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#228 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#228 /[1-9][0-9]*[fh]/]: s#114
[#228 /[1-9][0-9]*[iu]?/]: s#111
[#229 ',']: s#468
[#230 ',']: s#468
[#231 ',']: s#468
[#232 ')']: r#132
[#232 ',']: r#132
[#233 ')']: r#133
[#233 ',']: r#133
[#234 ')']: r#134
[#234 ',']: r#134
[#235 ')']: r#135
[#235 ',']: r#135
[#236 ')']: r#136
[#236 ',']: r#136
[#237 ')']: r#137
[#237 ',']: r#137
[#238 ')']: r#138
[#238 ',']: r#138
[#239 ')']: r#139
[#239 ',']: r#139
[#240 ')']: r#140
[#240 ',']: r#140
[#241 ')']: r#141
[#241 ',']: r#141
[#242 ')']: r#142
[#242 ',']: r#142
[#243 ')']: r#143
[#243 ',']: r#143
[#244 ',']: s#468
[#245 ',']: s#468
[#246 ',']: s#471
[#247 ')']: r#144
[#247 ',']: r#144
[#248 ')']: r#145
[#248 ',']: r#145
[#249 ')']: r#146
[#249 ',']: r#146
[#250 ',']: s#468
[#251 ',']: s#468
[#252 ',']: s#465
[#253 ')']: r#147
[#253 ',']: r#147
[#253 ':']: r#147
[#253 ';']: r#147
[#253 ']']: r#147
[#253 '{']: r#147
[#253 '||']: r#148
[#254 '!=']: r#30
[#254 '%']: r#30
[#254 '&&']: r#30
[#254 ')']: r#30
[#254 '*']: r#30
[#254 '+']: r#30
[#254 ',']: r#30
[#254 '-']: r#30
[#254 '/']: r#30
[#254 ':']: r#30
[#254 ';']: r#30
[#254 '==']: r#30
[#254 ']']: r#30
[#254 '{']: r#30
[#254 '||']: r#30
[#254 /\u200B_greater_than/]: r#30
[#254 /\u200B_greater_than_equal/]: r#30
[#254 /\u200B_less_than/]: r#30
[#254 /\u200B_less_than_equal/]: r#30
[#254 /\u200B_shift_left/]: s#200
[#254 /\u200B_shift_right/]: s#201
[#255 '&&']: r#150
[#255 ')']: r#149
[#255 ',']: r#149
[#255 ':']: r#149
[#255 ';']: r#149
[#255 ']']: r#149
[#255 '{']: r#149
[#256 '&&']: r#151
[#256 ')']: r#151
[#256 ',']: r#151
[#256 ':']: r#151
[#256 ';']: r#151
[#256 ']']: r#151
[#256 '{']: r#151
[#256 '||']: r#151
[#257 '&&']: r#152
[#257 ')']: r#152
[#257 ',']: r#152
[#257 ':']: r#152
[#257 ';']: r#152
[#257 ']']: r#152
[#257 '{']: r#152
[#257 '||']: r#152
[#258 '&&']: r#153
[#258 ')']: r#153
[#258 ',']: r#153
[#258 ':']: r#153
[#258 ';']: r#153
[#258 ']']: r#153
[#258 '{']: r#153
[#258 '||']: r#153
[#259 '&&']: r#154
[#259 ')']: r#154
[#259 ',']: r#154
[#259 ':']: r#154
[#259 ';']: r#154
[#259 ']']: r#154
[#259 '{']: r#154
[#259 '||']: r#154
[#260 '&&']: r#155
[#260 ')']: r#155
[#260 ',']: r#155
[#260 ':']: r#155
[#260 ';']: r#155
[#260 ']']: r#155
[#260 '{']: r#155
[#260 '||']: r#155
[#261 '&&']: r#156
[#261 ')']: r#156
[#261 ',']: r#156
[#261 ':']: r#156
[#261 ';']: r#156
[#261 ']']: r#156
[#261 '{']: r#156
[#261 '||']: r#156
[#262 '&']: r#158
[#262 ')']: r#157
[#262 ',']: r#157
[#262 ':']: r#157
[#262 ';']: r#157
[#262 ']']: r#157
[#262 '{']: r#157
[#262 /\u200B_template_args_end/]: r#157
[#263 ')']: r#159
[#263 ',']: r#159
[#263 ':']: r#159
[#263 ';']: r#159
[#263 ']']: r#159
[#263 '{']: r#159
[#263 '|']: r#160
[#263 /\u200B_template_args_end/]: r#159
[#264 ')']: r#161
[#264 ',']: r#161
[#264 ':']: r#161
[#264 ';']: r#161
[#264 ']']: r#161
[#264 '^']: r#162
[#264 '{']: r#161
[#264 /\u200B_template_args_end/]: r#161
[#265 '!=']: r#163
[#265 '%']: s#197
[#265 '&&']: r#163
[#265 ')']: r#163
[#265 '*']: s#195
[#265 '+']: r#163
[#265 ',']: r#163
[#265 '-']: r#163
[#265 '/']: s#196
[#265 ':']: r#163
[#265 ';']: r#163
[#265 '==']: r#163
[#265 ']']: r#163
[#265 '{']: r#163
[#265 '||']: r#163
[#265 /\u200B_greater_than/]: r#163
[#265 /\u200B_greater_than_equal/]: r#163
[#265 /\u200B_less_than/]: r#163
[#265 /\u200B_less_than_equal/]: r#163
[#265 /\u200B_template_args_end/]: r#163
[#266 '!=']: r#30
[#266 '%']: r#30
[#266 '&&']: r#30
[#266 ')']: r#30
[#266 '*']: r#30
[#266 '+']: r#30
[#266 ',']: r#30
[#266 '-']: r#30
[#266 '/']: r#30
[#266 ':']: r#30
[#266 ';']: r#30
[#266 '==']: r#30
[#266 ']']: r#30
[#266 '{']: r#30
[#266 '||']: r#30
[#266 /\u200B_greater_than/]: r#30
[#266 /\u200B_greater_than_equal/]: r#30
[#266 /\u200B_less_than/]: r#30
[#266 /\u200B_less_than_equal/]: r#30
[#266 /\u200B_template_args_end/]: r#30
[#267 '!=']: r#164
[#267 '&&']: r#164
[#267 ')']: r#164
[#267 ',']: r#164
[#267 ':']: r#164
[#267 ';']: r#164
[#267 '==']: r#164
[#267 ']']: r#164
[#267 '{']: r#164
[#267 '||']: r#164
[#267 /\u200B_greater_than/]: r#164
[#267 /\u200B_greater_than_equal/]: r#164
[#267 /\u200B_less_than/]: r#164
[#267 /\u200B_less_than_equal/]: r#164
[#268 '!=']: r#165
[#268 '&&']: r#165
[#268 ')']: r#165
[#268 ',']: r#165
[#268 ':']: r#165
[#268 ';']: r#165
[#268 '==']: r#165
[#268 ']']: r#165
[#268 '{']: r#165
[#268 '||']: r#165
[#268 /\u200B_greater_than/]: r#165
[#268 /\u200B_greater_than_equal/]: r#165
[#268 /\u200B_less_than/]: r#165
[#268 /\u200B_less_than_equal/]: r#165
[#269 '!=']: r#166
[#269 '%']: r#166
[#269 '&&']: r#166
[#269 ')']: r#166
[#269 '*']: r#166
[#269 '+']: r#166
[#269 ',']: r#166
[#269 '-']: r#166
[#269 '/']: r#166
[#269 ':']: r#166
[#269 ';']: r#166
[#269 '==']: r#166
[#269 ']']: r#166
[#269 '{']: r#166
[#269 '||']: r#166
[#269 /\u200B_greater_than/]: r#166
[#269 /\u200B_greater_than_equal/]: r#166
[#269 /\u200B_less_than/]: r#166
[#269 /\u200B_less_than_equal/]: r#166
[#269 /\u200B_template_args_end/]: r#166
[#270 '.']: s#188
[#270 '[']: s#187
[#271 '.']: s#188
[#271 '[']: s#187
[#272 '!=']: r#167
[#272 '%']: r#167
[#272 '%=']: r#167
[#272 '&&']: r#167
[#272 '&']: r#167
[#272 '&=']: r#167
[#272 ')']: r#167
[#272 '*']: r#167
[#272 '*=']: r#167
[#272 '+']: r#167
[#272 '++']: r#167
[#272 '+=']: r#167
[#272 ',']: r#167
[#272 '-']: r#167
[#272 '--']: r#167
[#272 '-=']: r#167
[#272 '.']: r#167
[#272 '/']: r#167
[#272 '/=']: r#167
[#272 ':']: r#167
[#272 ';']: r#167
[#272 '=']: r#167
[#272 '==']: r#167
[#272 '[']: r#167
[#272 ']']: r#167
[#272 '^']: r#167
[#272 '^=']: r#167
[#272 '{']: r#167
[#272 '|']: r#167
[#272 '|=']: r#167
[#272 '||']: r#167
[#272 /\u200B_greater_than/]: r#167
[#272 /\u200B_greater_than_equal/]: r#167
[#272 /\u200B_less_than/]: r#167
[#272 /\u200B_less_than_equal/]: r#167
[#272 /\u200B_shift_left/]: r#167
[#272 /\u200B_shift_left_assign/]: r#167
[#272 /\u200B_shift_right/]: r#167
[#272 /\u200B_shift_right_assign/]: r#167
[#272 /\u200B_template_args_end/]: r#167
[#273 '!=']: r#168
[#273 '%']: r#168
[#273 '%=']: r#168
[#273 '&&']: r#168
[#273 '&']: r#168
[#273 '&=']: r#168
[#273 ')']: r#168
[#273 '*']: r#168
[#273 '*=']: r#168
[#273 '+']: r#168
[#273 '++']: r#168
[#273 '+=']: r#168
[#273 ',']: r#168
[#273 '-']: r#168
[#273 '--']: r#168
[#273 '-=']: r#168
[#273 '.']: r#168
[#273 '/']: r#168
[#273 '/=']: r#168
[#273 ':']: r#168
[#273 ';']: r#168
[#273 '=']: r#168
[#273 '==']: r#168
[#273 '[']: r#168
[#273 ']']: r#168
[#273 '^']: r#168
[#273 '^=']: r#168
[#273 '{']: r#168
[#273 '|']: r#168
[#273 '|=']: r#168
[#273 '||']: r#168
[#273 /\u200B_greater_than/]: r#168
[#273 /\u200B_greater_than_equal/]: r#168
[#273 /\u200B_less_than/]: r#168
[#273 /\u200B_less_than_equal/]: r#168
[#273 /\u200B_shift_left/]: r#168
[#273 /\u200B_shift_left_assign/]: r#168
[#273 /\u200B_shift_right/]: r#168
[#273 /\u200B_shift_right_assign/]: r#168
[#273 /\u200B_template_args_end/]: r#168
[#274 '!=']: r#169
[#274 '%']: r#169
[#274 '%=']: r#169
[#274 '&&']: r#169
[#274 '&']: r#169
[#274 '&=']: r#169
[#274 ')']: r#169
[#274 '*']: r#169
[#274 '*=']: r#169
[#274 '+']: r#169
[#274 '++']: r#169
[#274 '+=']: r#169
[#274 ',']: r#169
[#274 '-']: r#169
[#274 '--']: r#169
[#274 '-=']: r#169
[#274 '.']: r#169
[#274 '/']: r#169
[#274 '/=']: r#169
[#274 ':']: r#169
[#274 ';']: r#169
[#274 '=']: r#169
[#274 '==']: r#169
[#274 '[']: r#169
[#274 ']']: r#169
[#274 '^']: r#169
[#274 '^=']: r#169
[#274 '{']: r#169
[#274 '|']: r#169
[#274 '|=']: r#169
[#274 '||']: r#169
[#274 /\u200B_greater_than/]: r#169
[#274 /\u200B_greater_than_equal/]: r#169
[#274 /\u200B_less_than/]: r#169
[#274 /\u200B_less_than_equal/]: r#169
[#274 /\u200B_shift_left/]: r#169
[#274 /\u200B_shift_left_assign/]: r#169
[#274 /\u200B_shift_right/]: r#169
[#274 /\u200B_shift_right_assign/]: r#169
[#274 /\u200B_template_args_end/]: r#169
[#275 '!=']: r#170
[#275 '%']: r#170
[#275 '%=']: r#170
[#275 '&&']: r#170
[#275 '&']: r#170
[#275 '&=']: r#170
[#275 ')']: r#170
[#275 '*']: r#170
[#275 '*=']: r#170
[#275 '+']: r#170
[#275 '++']: r#170
[#275 '+=']: r#170
[#275 ',']: r#170
[#275 '-']: r#170
[#275 '--']: r#170
[#275 '-=']: r#170
[#275 '.']: r#170
[#275 '/']: r#170
[#275 '/=']: r#170
[#275 ':']: r#170
[#275 ';']: r#170
[#275 '=']: r#170
[#275 '==']: r#170
[#275 '[']: r#170
[#275 ']']: r#170
[#275 '^']: r#170
[#275 '^=']: r#170
[#275 '{']: r#170
[#275 '|']: r#170
[#275 '|=']: r#170
[#275 '||']: r#170
[#275 /\u200B_greater_than/]: r#170
[#275 /\u200B_greater_than_equal/]: r#170
[#275 /\u200B_less_than/]: r#170
[#275 /\u200B_less_than_equal/]: r#170
[#275 /\u200B_shift_left/]: r#170
[#275 /\u200B_shift_left_assign/]: r#170
[#275 /\u200B_shift_right/]: r#170
[#275 /\u200B_shift_right_assign/]: r#170
[#275 /\u200B_template_args_end/]: r#170
[#276 '!=']: r#171
[#276 '%']: r#171
[#276 '%=']: r#171
[#276 '&&']: r#171
[#276 '&']: r#171
[#276 '&=']: r#171
[#276 ')']: r#171
[#276 '*']: r#171
[#276 '*=']: r#171
[#276 '+']: r#171
[#276 '++']: r#171
[#276 '+=']: r#171
[#276 ',']: r#171
[#276 '-']: r#171
[#276 '--']: r#171
[#276 '-=']: r#171
[#276 '.']: r#171
[#276 '/']: r#171
[#276 '/=']: r#171
[#276 ':']: r#171
[#276 ';']: r#171
[#276 '=']: r#171
[#276 '==']: r#171
[#276 '[']: r#171
[#276 ']']: r#171
[#276 '^']: r#171
[#276 '^=']: r#171
[#276 '{']: r#171
[#276 '|']: r#171
[#276 '|=']: r#171
[#276 '||']: r#171
[#276 /\u200B_greater_than/]: r#171
[#276 /\u200B_greater_than_equal/]: r#171
[#276 /\u200B_less_than/]: r#171
[#276 /\u200B_less_than_equal/]: r#171
[#276 /\u200B_shift_left/]: r#171
[#276 /\u200B_shift_left_assign/]: r#171
[#276 /\u200B_shift_right/]: r#171
[#276 /\u200B_shift_right_assign/]: r#171
[#276 /\u200B_template_args_end/]: r#171
[#277 '!=']: r#172
[#277 '%']: r#172
[#277 '%=']: r#172
[#277 '&&']: r#172
[#277 '&']: r#172
[#277 '&=']: r#172
[#277 ')']: r#172
[#277 '*']: r#172
[#277 '*=']: r#172
[#277 '+']: r#172
[#277 '++']: r#172
[#277 '+=']: r#172
[#277 ',']: r#172
[#277 '-']: r#172
[#277 '--']: r#172
[#277 '-=']: r#172
[#277 '.']: r#172
[#277 '/']: r#172
[#277 '/=']: r#172
[#277 ':']: r#172
[#277 ';']: r#172
[#277 '=']: r#172
[#277 '==']: r#172
[#277 '[']: r#172
[#277 ']']: r#172
[#277 '^']: r#172
[#277 '^=']: r#172
[#277 '{']: r#172
[#277 '|']: r#172
[#277 '|=']: r#172
[#277 '||']: r#172
[#277 /\u200B_greater_than/]: r#172
[#277 /\u200B_greater_than_equal/]: r#172
[#277 /\u200B_less_than/]: r#172
[#277 /\u200B_less_than_equal/]: r#172
[#277 /\u200B_shift_left/]: r#172
[#277 /\u200B_shift_left_assign/]: r#172
[#277 /\u200B_shift_right/]: r#172
[#277 /\u200B_shift_right_assign/]: r#172
[#277 /\u200B_template_args_end/]: r#172
[#278 '!=']: r#173
[#278 '%']: r#173
[#278 '%=']: r#173
[#278 '&&']: r#173
[#278 '&']: r#173
[#278 '&=']: r#173
[#278 ')']: r#173
[#278 '*']: r#173
[#278 '*=']: r#173
[#278 '+']: r#173
[#278 '++']: r#173
[#278 '+=']: r#173
[#278 ',']: r#173
[#278 '-']: r#173
[#278 '--']: r#173
[#278 '-=']: r#173
[#278 '.']: r#173
[#278 '/']: r#173
[#278 '/=']: r#173
[#278 ':']: r#173
[#278 ';']: r#173
[#278 '=']: r#173
[#278 '==']: r#173
[#278 '[']: r#173
[#278 ']']: r#173
[#278 '^']: r#173
[#278 '^=']: r#173
[#278 '{']: r#173
[#278 '|']: r#173
[#278 '|=']: r#173
[#278 '||']: r#173
[#278 /\u200B_greater_than/]: r#173
[#278 /\u200B_greater_than_equal/]: r#173
[#278 /\u200B_less_than/]: r#173
[#278 /\u200B_less_than_equal/]: r#173
[#278 /\u200B_shift_left/]: r#173
[#278 /\u200B_shift_left_assign/]: r#173
[#278 /\u200B_shift_right/]: r#173
[#278 /\u200B_shift_right_assign/]: r#173
[#278 /\u200B_template_args_end/]: r#173
[#279 '!=']: r#174
[#279 '%']: r#174
[#279 '%=']: r#174
[#279 '&&']: r#174
[#279 '&']: r#174
[#279 '&=']: r#174
[#279 ')']: r#174
[#279 '*']: r#174
[#279 '*=']: r#174
[#279 '+']: r#174
[#279 '++']: r#174
[#279 '+=']: r#174
[#279 ',']: r#174
[#279 '-']: r#174
[#279 '--']: r#174
[#279 '-=']: r#174
[#279 '.']: r#174
[#279 '/']: r#174
[#279 '/=']: r#174
[#279 ':']: r#174
[#279 ';']: r#174
[#279 '=']: r#174
[#279 '==']: r#174
[#279 '[']: r#174
[#279 ']']: r#174
[#279 '^']: r#174
[#279 '^=']: r#174
[#279 '{']: r#174
[#279 '|']: r#174
[#279 '|=']: r#174
[#279 '||']: r#174
[#279 /\u200B_greater_than/]: r#174
[#279 /\u200B_greater_than_equal/]: r#174
[#279 /\u200B_less_than/]: r#174
[#279 /\u200B_less_than_equal/]: r#174
[#279 /\u200B_shift_left/]: r#174
[#279 /\u200B_shift_left_assign/]: r#174
[#279 /\u200B_shift_right/]: r#174
[#279 /\u200B_shift_right_assign/]: r#174
[#279 /\u200B_template_args_end/]: r#174
[#280 '!=']: r#175
[#280 '%']: r#175
[#280 '%=']: r#175
[#280 '&&']: r#175
[#280 '&']: r#175
[#280 '&=']: r#175
[#280 ')']: r#175
[#280 '*']: r#175
[#280 '*=']: r#175
[#280 '+']: r#175
[#280 '++']: r#175
[#280 '+=']: r#175
[#280 ',']: r#175
[#280 '-']: r#175
[#280 '--']: r#175
[#280 '-=']: r#175
[#280 '.']: r#175
[#280 '/']: r#175
[#280 '/=']: r#175
[#280 ':']: r#175
[#280 ';']: r#175
[#280 '=']: r#175
[#280 '==']: r#175
[#280 '[']: r#175
[#280 ']']: r#175
[#280 '^']: r#175
[#280 '^=']: r#175
[#280 '{']: r#175
[#280 '|']: r#175
[#280 '|=']: r#175
[#280 '||']: r#175
[#280 /\u200B_greater_than/]: r#175
[#280 /\u200B_greater_than_equal/]: r#175
[#280 /\u200B_less_than/]: r#175
[#280 /\u200B_less_than_equal/]: r#175
[#280 /\u200B_shift_left/]: r#175
[#280 /\u200B_shift_left_assign/]: r#175
[#280 /\u200B_shift_right/]: r#175
[#280 /\u200B_shift_right_assign/]: r#175
[#280 /\u200B_template_args_end/]: r#175
[#281 ']']: s#459
[#282 'array']: s#347
[#282 'atomic']: s#96
[#282 'bool']: s#89
[#282 'f16']: s#91
[#282 'f32']: s#90
[#282 'i32']: s#92
[#282 'mat2x2']: s#101
[#282 'mat2x3']: s#102
[#282 'mat2x4']: s#103
[#282 'mat3x2']: s#104
[#282 'mat3x3']: s#105
[#282 'mat3x4']: s#106
[#282 'mat4x2']: s#107
[#282 'mat4x3']: s#108
[#282 'mat4x4']: s#109
[#282 'ptr']: s#94
[#282 'sampler']: s#126
[#282 'sampler_comparison']: s#127
[#282 'texture_1d']: s#133
[#282 'texture_2d']: s#134
[#282 'texture_2d_array']: s#135
[#282 'texture_3d']: s#136
[#282 'texture_cube']: s#137
[#282 'texture_cube_array']: s#138
[#282 'texture_depth_2d']: s#128
[#282 'texture_depth_2d_array']: s#129
[#282 'texture_depth_cube']: s#130
[#282 'texture_depth_cube_array']: s#131
[#282 'texture_depth_multisampled_2d']: s#132
[#282 'texture_multisampled_2d']: s#139
[#282 'texture_storage_1d']: s#140
[#282 'texture_storage_2d']: s#141
[#282 'texture_storage_2d_array']: s#142
[#282 'texture_storage_3d']: s#143
[#282 'u32']: s#93
[#282 'vec2']: s#98
[#282 'vec3']: s#99
[#282 'vec4']: s#100
[#282 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#283 'array']: r#176
[#283 'atomic']: r#176
[#283 'bgra8unorm']: r#176
[#283 'bool']: r#176
[#283 'f16']: r#176
[#283 'f32']: r#176
[#283 'function']: r#176
[#283 'i32']: r#176
[#283 'mat2x2']: r#176
[#283 'mat2x3']: r#176
[#283 'mat2x4']: r#176
[#283 'mat3x2']: r#176
[#283 'mat3x3']: r#176
[#283 'mat3x4']: r#176
[#283 'mat4x2']: r#176
[#283 'mat4x3']: r#176
[#283 'mat4x4']: r#176
[#283 'private']: r#176
[#283 'ptr']: r#176
[#283 'r32float']: r#176
[#283 'r32sint']: r#176
[#283 'r32uint']: r#176
[#283 'rg32float']: r#176
[#283 'rg32sint']: r#176
[#283 'rg32uint']: r#176
[#283 'rgba16float']: r#176
[#283 'rgba16sint']: r#176
[#283 'rgba16uint']: r#176
[#283 'rgba32float']: r#176
[#283 'rgba32sint']: r#176
[#283 'rgba32uint']: r#176
[#283 'rgba8sint']: r#176
[#283 'rgba8snorm']: r#176
[#283 'rgba8uint']: r#176
[#283 'rgba8unorm']: r#176
[#283 'sampler']: r#176
[#283 'sampler_comparison']: r#176
[#283 'storage']: r#176
[#283 'texture_1d']: r#176
[#283 'texture_2d']: r#176
[#283 'texture_2d_array']: r#176
[#283 'texture_3d']: r#176
[#283 'texture_cube']: r#176
[#283 'texture_cube_array']: r#176
[#283 'texture_depth_2d']: r#176
[#283 'texture_depth_2d_array']: r#176
[#283 'texture_depth_cube']: r#176
[#283 'texture_depth_cube_array']: r#176
[#283 'texture_depth_multisampled_2d']: r#176
[#283 'texture_multisampled_2d']: r#176
[#283 'texture_storage_1d']: r#176
[#283 'texture_storage_2d']: r#176
[#283 'texture_storage_2d_array']: r#176
[#283 'texture_storage_3d']: r#176
[#283 'u32']: r#176
[#283 'uniform']: r#176
[#283 'vec2']: r#176
[#283 'vec3']: r#176
[#283 'vec4']: r#176
[#283 'workgroup']: r#176
[#283 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#176
[#284 ')']: s#457
[#285 ')']: r#177
[#286 ',']: s#456
[#287 '!=']: r#178
[#287 '%']: r#178
[#287 '&&']: r#178
[#287 '&']: r#178
[#287 ')']: r#178
[#287 '*']: r#178
[#287 '+']: r#178
[#287 ',']: r#178
[#287 '-']: r#178
[#287 '.']: r#178
[#287 '/']: r#178
[#287 ':']: r#178
[#287 ';']: r#178
[#287 '==']: r#178
[#287 '[']: r#178
[#287 ']']: r#178
[#287 '^']: r#178
[#287 '{']: r#178
[#287 '|']: r#178
[#287 '||']: r#178
[#287 /\u200B_greater_than/]: r#178
[#287 /\u200B_greater_than_equal/]: r#178
[#287 /\u200B_less_than/]: r#178
[#287 /\u200B_less_than_equal/]: r#178
[#287 /\u200B_shift_left/]: r#178
[#287 /\u200B_shift_right/]: r#178
[#287 /\u200B_template_args_end/]: r#178
[#288 'array']: s#347
[#288 'atomic']: s#96
[#288 'bool']: s#89
[#288 'f16']: s#91
[#288 'f32']: s#90
[#288 'i32']: s#92
[#288 'mat2x2']: s#101
[#288 'mat2x3']: s#102
[#288 'mat2x4']: s#103
[#288 'mat3x2']: s#104
[#288 'mat3x3']: s#105
[#288 'mat3x4']: s#106
[#288 'mat4x2']: s#107
[#288 'mat4x3']: s#108
[#288 'mat4x4']: s#109
[#288 'ptr']: s#94
[#288 'sampler']: s#126
[#288 'sampler_comparison']: s#127
[#288 'texture_1d']: s#133
[#288 'texture_2d']: s#134
[#288 'texture_2d_array']: s#135
[#288 'texture_3d']: s#136
[#288 'texture_cube']: s#137
[#288 'texture_cube_array']: s#138
[#288 'texture_depth_2d']: s#128
[#288 'texture_depth_2d_array']: s#129
[#288 'texture_depth_cube']: s#130
[#288 'texture_depth_cube_array']: s#131
[#288 'texture_depth_multisampled_2d']: s#132
[#288 'texture_multisampled_2d']: s#139
[#288 'texture_storage_1d']: s#140
[#288 'texture_storage_2d']: s#141
[#288 'texture_storage_2d_array']: s#142
[#288 'texture_storage_3d']: s#143
[#288 'u32']: s#93
[#288 'vec2']: s#98
[#288 'vec3']: s#99
[#288 'vec4']: s#100
[#288 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#289 'array']: s#347
[#289 'atomic']: s#96
[#289 'bool']: s#89
[#289 'f16']: s#91
[#289 'f32']: s#90
[#289 'i32']: s#92
[#289 'mat2x2']: s#101
[#289 'mat2x3']: s#102
[#289 'mat2x4']: s#103
[#289 'mat3x2']: s#104
[#289 'mat3x3']: s#105
[#289 'mat3x4']: s#106
[#289 'mat4x2']: s#107
[#289 'mat4x3']: s#108
[#289 'mat4x4']: s#109
[#289 'ptr']: s#94
[#289 'sampler']: s#126
[#289 'sampler_comparison']: s#127
[#289 'texture_1d']: s#133
[#289 'texture_2d']: s#134
[#289 'texture_2d_array']: s#135
[#289 'texture_3d']: s#136
[#289 'texture_cube']: s#137
[#289 'texture_cube_array']: s#138
[#289 'texture_depth_2d']: s#128
[#289 'texture_depth_2d_array']: s#129
[#289 'texture_depth_cube']: s#130
[#289 'texture_depth_cube_array']: s#131
[#289 'texture_depth_multisampled_2d']: s#132
[#289 'texture_multisampled_2d']: s#139
[#289 'texture_storage_1d']: s#140
[#289 'texture_storage_2d']: s#141
[#289 'texture_storage_2d_array']: s#142
[#289 'texture_storage_3d']: s#143
[#289 'u32']: s#93
[#289 'vec2']: s#98
[#289 'vec3']: s#99
[#289 'vec4']: s#100
[#289 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#290 'array']: s#347
[#290 'atomic']: s#96
[#290 'bool']: s#89
[#290 'f16']: s#91
[#290 'f32']: s#90
[#290 'i32']: s#92
[#290 'mat2x2']: s#101
[#290 'mat2x3']: s#102
[#290 'mat2x4']: s#103
[#290 'mat3x2']: s#104
[#290 'mat3x3']: s#105
[#290 'mat3x4']: s#106
[#290 'mat4x2']: s#107
[#290 'mat4x3']: s#108
[#290 'mat4x4']: s#109
[#290 'ptr']: s#94
[#290 'sampler']: s#126
[#290 'sampler_comparison']: s#127
[#290 'texture_1d']: s#133
[#290 'texture_2d']: s#134
[#290 'texture_2d_array']: s#135
[#290 'texture_3d']: s#136
[#290 'texture_cube']: s#137
[#290 'texture_cube_array']: s#138
[#290 'texture_depth_2d']: s#128
[#290 'texture_depth_2d_array']: s#129
[#290 'texture_depth_cube']: s#130
[#290 'texture_depth_cube_array']: s#131
[#290 'texture_depth_multisampled_2d']: s#132
[#290 'texture_multisampled_2d']: s#139
[#290 'texture_storage_1d']: s#140
[#290 'texture_storage_2d']: s#141
[#290 'texture_storage_2d_array']: s#142
[#290 'texture_storage_3d']: s#143
[#290 'u32']: s#93
[#290 'vec2']: s#98
[#290 'vec3']: s#99
[#290 'vec4']: s#100
[#290 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#291 'function']: s#357
[#291 'private']: s#358
[#291 'storage']: s#361
[#291 'uniform']: s#360
[#291 'workgroup']: s#359
[#292 'array']: s#347
[#292 'atomic']: s#96
[#292 'bool']: s#89
[#292 'f16']: s#91
[#292 'f32']: s#90
[#292 'i32']: s#92
[#292 'mat2x2']: s#101
[#292 'mat2x3']: s#102
[#292 'mat2x4']: s#103
[#292 'mat3x2']: s#104
[#292 'mat3x3']: s#105
[#292 'mat3x4']: s#106
[#292 'mat4x2']: s#107
[#292 'mat4x3']: s#108
[#292 'mat4x4']: s#109
[#292 'ptr']: s#94
[#292 'sampler']: s#126
[#292 'sampler_comparison']: s#127
[#292 'texture_1d']: s#133
[#292 'texture_2d']: s#134
[#292 'texture_2d_array']: s#135
[#292 'texture_3d']: s#136
[#292 'texture_cube']: s#137
[#292 'texture_cube_array']: s#138
[#292 'texture_depth_2d']: s#128
[#292 'texture_depth_2d_array']: s#129
[#292 'texture_depth_cube']: s#130
[#292 'texture_depth_cube_array']: s#131
[#292 'texture_depth_multisampled_2d']: s#132
[#292 'texture_multisampled_2d']: s#139
[#292 'texture_storage_1d']: s#140
[#292 'texture_storage_2d']: s#141
[#292 'texture_storage_2d_array']: s#142
[#292 'texture_storage_3d']: s#143
[#292 'u32']: s#93
[#292 'vec2']: s#98
[#292 'vec3']: s#99
[#292 'vec4']: s#100
[#292 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#293 'array']: s#347
[#293 'atomic']: s#96
[#293 'bool']: s#89
[#293 'f16']: s#91
[#293 'f32']: s#90
[#293 'i32']: s#92
[#293 'mat2x2']: s#101
[#293 'mat2x3']: s#102
[#293 'mat2x4']: s#103
[#293 'mat3x2']: s#104
[#293 'mat3x3']: s#105
[#293 'mat3x4']: s#106
[#293 'mat4x2']: s#107
[#293 'mat4x3']: s#108
[#293 'mat4x4']: s#109
[#293 'ptr']: s#94
[#293 'sampler']: s#126
[#293 'sampler_comparison']: s#127
[#293 'texture_1d']: s#133
[#293 'texture_2d']: s#134
[#293 'texture_2d_array']: s#135
[#293 'texture_3d']: s#136
[#293 'texture_cube']: s#137
[#293 'texture_cube_array']: s#138
[#293 'texture_depth_2d']: s#128
[#293 'texture_depth_2d_array']: s#129
[#293 'texture_depth_cube']: s#130
[#293 'texture_depth_cube_array']: s#131
[#293 'texture_depth_multisampled_2d']: s#132
[#293 'texture_multisampled_2d']: s#139
[#293 'texture_storage_1d']: s#140
[#293 'texture_storage_2d']: s#141
[#293 'texture_storage_2d_array']: s#142
[#293 'texture_storage_3d']: s#143
[#293 'u32']: s#93
[#293 'vec2']: s#98
[#293 'vec3']: s#99
[#293 'vec4']: s#100
[#293 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#294 'array']: s#347
[#294 'atomic']: s#96
[#294 'bool']: s#89
[#294 'f16']: s#91
[#294 'f32']: s#90
[#294 'i32']: s#92
[#294 'mat2x2']: s#101
[#294 'mat2x3']: s#102
[#294 'mat2x4']: s#103
[#294 'mat3x2']: s#104
[#294 'mat3x3']: s#105
[#294 'mat3x4']: s#106
[#294 'mat4x2']: s#107
[#294 'mat4x3']: s#108
[#294 'mat4x4']: s#109
[#294 'ptr']: s#94
[#294 'sampler']: s#126
[#294 'sampler_comparison']: s#127
[#294 'texture_1d']: s#133
[#294 'texture_2d']: s#134
[#294 'texture_2d_array']: s#135
[#294 'texture_3d']: s#136
[#294 'texture_cube']: s#137
[#294 'texture_cube_array']: s#138
[#294 'texture_depth_2d']: s#128
[#294 'texture_depth_2d_array']: s#129
[#294 'texture_depth_cube']: s#130
[#294 'texture_depth_cube_array']: s#131
[#294 'texture_depth_multisampled_2d']: s#132
[#294 'texture_multisampled_2d']: s#139
[#294 'texture_storage_1d']: s#140
[#294 'texture_storage_2d']: s#141
[#294 'texture_storage_2d_array']: s#142
[#294 'texture_storage_3d']: s#143
[#294 'u32']: s#93
[#294 'vec2']: s#98
[#294 'vec3']: s#99
[#294 'vec4']: s#100
[#294 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#295 'bgra8unorm']: s#445
[#295 'r32float']: s#438
[#295 'r32sint']: s#437
[#295 'r32uint']: s#436
[#295 'rg32float']: s#441
[#295 'rg32sint']: s#440
[#295 'rg32uint']: s#439
[#295 'rgba16float']: s#435
[#295 'rgba16sint']: s#434
[#295 'rgba16uint']: s#433
[#295 'rgba32float']: s#444
[#295 'rgba32sint']: s#443
[#295 'rgba32uint']: s#442
[#295 'rgba8sint']: s#432
[#295 'rgba8snorm']: s#430
[#295 'rgba8uint']: s#431
[#295 'rgba8unorm']: s#429
[#296 '}']: s#427
[#297 '}']: r#179
[#298 '&']: s#335
[#298 '(']: s#336
[#298 '*']: s#334
[#298 ';']: s#299
[#298 '_']: s#332
[#298 'array']: s#82
[#298 'atomic']: s#96
[#298 'bool']: s#89
[#298 'break']: s#324
[#298 'const']: s#323
[#298 'const_assert']: s#25
[#298 'continue']: s#325
[#298 'discard']: s#310
[#298 'f16']: s#91
[#298 'f32']: s#90
[#298 'for']: s#318
[#298 'i32']: s#92
[#298 'if']: s#329
[#298 'let']: s#322
[#298 'loop']: s#317
[#298 'mat2x2']: s#101
[#298 'mat2x3']: s#102
[#298 'mat2x4']: s#103
[#298 'mat3x2']: s#104
[#298 'mat3x3']: s#105
[#298 'mat3x4']: s#106
[#298 'mat4x2']: s#107
[#298 'mat4x3']: s#108
[#298 'mat4x4']: s#109
[#298 'ptr']: s#94
[#298 'return']: s#314
[#298 'sampler']: s#126
[#298 'sampler_comparison']: s#127
[#298 'switch']: s#316
[#298 'texture_1d']: s#133
[#298 'texture_2d']: s#134
[#298 'texture_2d_array']: s#135
[#298 'texture_3d']: s#136
[#298 'texture_cube']: s#137
[#298 'texture_cube_array']: s#138
[#298 'texture_depth_2d']: s#128
[#298 'texture_depth_2d_array']: s#129
[#298 'texture_depth_cube']: s#130
[#298 'texture_depth_cube_array']: s#131
[#298 'texture_depth_multisampled_2d']: s#132
[#298 'texture_multisampled_2d']: s#139
[#298 'texture_storage_1d']: s#140
[#298 'texture_storage_2d']: s#141
[#298 'texture_storage_2d_array']: s#142
[#298 'texture_storage_3d']: s#143
[#298 'u32']: s#93
[#298 'var']: s#152
[#298 'vec2']: s#98
[#298 'vec3']: s#99
[#298 'vec4']: s#100
[#298 'while']: s#319
[#298 '{']: s#172
[#298 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#299 '&']: r#180
[#299 '(']: r#180
[#299 '*']: r#180
[#299 ';']: r#180
[#299 '_']: r#180
[#299 'array']: r#180
[#299 'atomic']: r#180
[#299 'bool']: r#180
[#299 'break']: r#180
[#299 'const']: r#180
[#299 'const_assert']: r#180
[#299 'continue']: r#180
[#299 'continuing']: r#180
[#299 'discard']: r#180
[#299 'f16']: r#180
[#299 'f32']: r#180
[#299 'for']: r#180
[#299 'i32']: r#180
[#299 'if']: r#180
[#299 'let']: r#180
[#299 'loop']: r#180
[#299 'mat2x2']: r#180
[#299 'mat2x3']: r#180
[#299 'mat2x4']: r#180
[#299 'mat3x2']: r#180
[#299 'mat3x3']: r#180
[#299 'mat3x4']: r#180
[#299 'mat4x2']: r#180
[#299 'mat4x3']: r#180
[#299 'mat4x4']: r#180
[#299 'ptr']: r#180
[#299 'return']: r#180
[#299 'sampler']: r#180
[#299 'sampler_comparison']: r#180
[#299 'switch']: r#180
[#299 'texture_1d']: r#180
[#299 'texture_2d']: r#180
[#299 'texture_2d_array']: r#180
[#299 'texture_3d']: r#180
[#299 'texture_cube']: r#180
[#299 'texture_cube_array']: r#180
[#299 'texture_depth_2d']: r#180
[#299 'texture_depth_2d_array']: r#180
[#299 'texture_depth_cube']: r#180
[#299 'texture_depth_cube_array']: r#180
[#299 'texture_depth_multisampled_2d']: r#180
[#299 'texture_multisampled_2d']: r#180
[#299 'texture_storage_1d']: r#180
[#299 'texture_storage_2d']: r#180
[#299 'texture_storage_2d_array']: r#180
[#299 'texture_storage_3d']: r#180
[#299 'u32']: r#180
[#299 'var']: r#180
[#299 'vec2']: r#180
[#299 'vec3']: r#180
[#299 'vec4']: r#180
[#299 'while']: r#180
[#299 '{']: r#180
[#299 '}']: r#180
[#299 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#180
[#300 ';']: s#425
[#301 '&']: r#181
[#301 '(']: r#181
[#301 '*']: r#181
[#301 ';']: r#181
[#301 '_']: r#181
[#301 'array']: r#181
[#301 'atomic']: r#181
[#301 'bool']: r#181
[#301 'break']: r#181
[#301 'const']: r#181
[#301 'const_assert']: r#181
[#301 'continue']: r#181
[#301 'continuing']: r#181
[#301 'discard']: r#181
[#301 'f16']: r#181
[#301 'f32']: r#181
[#301 'for']: r#181
[#301 'i32']: r#181
[#301 'if']: r#181
[#301 'let']: r#181
[#301 'loop']: r#181
[#301 'mat2x2']: r#181
[#301 'mat2x3']: r#181
[#301 'mat2x4']: r#181
[#301 'mat3x2']: r#181
[#301 'mat3x3']: r#181
[#301 'mat3x4']: r#181
[#301 'mat4x2']: r#181
[#301 'mat4x3']: r#181
[#301 'mat4x4']: r#181
[#301 'ptr']: r#181
[#301 'return']: r#181
[#301 'sampler']: r#181
[#301 'sampler_comparison']: r#181
[#301 'switch']: r#181
[#301 'texture_1d']: r#181
[#301 'texture_2d']: r#181
[#301 'texture_2d_array']: r#181
[#301 'texture_3d']: r#181
[#301 'texture_cube']: r#181
[#301 'texture_cube_array']: r#181
[#301 'texture_depth_2d']: r#181
[#301 'texture_depth_2d_array']: r#181
[#301 'texture_depth_cube']: r#181
[#301 'texture_depth_cube_array']: r#181
[#301 'texture_depth_multisampled_2d']: r#181
[#301 'texture_multisampled_2d']: r#181
[#301 'texture_storage_1d']: r#181
[#301 'texture_storage_2d']: r#181
[#301 'texture_storage_2d_array']: r#181
[#301 'texture_storage_3d']: r#181
[#301 'u32']: r#181
[#301 'var']: r#181
[#301 'vec2']: r#181
[#301 'vec3']: r#181
[#301 'vec4']: r#181
[#301 'while']: r#181
[#301 '{']: r#181
[#301 '}']: r#181
[#301 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#181
[#302 '&']: r#182
[#302 '(']: r#182
[#302 '*']: r#182
[#302 ';']: r#182
[#302 '_']: r#182
[#302 'array']: r#182
[#302 'atomic']: r#182
[#302 'bool']: r#182
[#302 'break']: r#182
[#302 'const']: r#182
[#302 'const_assert']: r#182
[#302 'continue']: r#182
[#302 'continuing']: r#182
[#302 'discard']: r#182
[#302 'f16']: r#182
[#302 'f32']: r#182
[#302 'for']: r#182
[#302 'i32']: r#182
[#302 'if']: r#182
[#302 'let']: r#182
[#302 'loop']: r#182
[#302 'mat2x2']: r#182
[#302 'mat2x3']: r#182
[#302 'mat2x4']: r#182
[#302 'mat3x2']: r#182
[#302 'mat3x3']: r#182
[#302 'mat3x4']: r#182
[#302 'mat4x2']: r#182
[#302 'mat4x3']: r#182
[#302 'mat4x4']: r#182
[#302 'ptr']: r#182
[#302 'return']: r#182
[#302 'sampler']: r#182
[#302 'sampler_comparison']: r#182
[#302 'switch']: r#182
[#302 'texture_1d']: r#182
[#302 'texture_2d']: r#182
[#302 'texture_2d_array']: r#182
[#302 'texture_3d']: r#182
[#302 'texture_cube']: r#182
[#302 'texture_cube_array']: r#182
[#302 'texture_depth_2d']: r#182
[#302 'texture_depth_2d_array']: r#182
[#302 'texture_depth_cube']: r#182
[#302 'texture_depth_cube_array']: r#182
[#302 'texture_depth_multisampled_2d']: r#182
[#302 'texture_multisampled_2d']: r#182
[#302 'texture_storage_1d']: r#182
[#302 'texture_storage_2d']: r#182
[#302 'texture_storage_2d_array']: r#182
[#302 'texture_storage_3d']: r#182
[#302 'u32']: r#182
[#302 'var']: r#182
[#302 'vec2']: r#182
[#302 'vec3']: r#182
[#302 'vec4']: r#182
[#302 'while']: r#182
[#302 '{']: r#182
[#302 '}']: r#182
[#302 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#182
[#303 '&']: r#183
[#303 '(']: r#183
[#303 '*']: r#183
[#303 ';']: r#183
[#303 '_']: r#183
[#303 'array']: r#183
[#303 'atomic']: r#183
[#303 'bool']: r#183
[#303 'break']: r#183
[#303 'const']: r#183
[#303 'const_assert']: r#183
[#303 'continue']: r#183
[#303 'continuing']: r#183
[#303 'discard']: r#183
[#303 'f16']: r#183
[#303 'f32']: r#183
[#303 'for']: r#183
[#303 'i32']: r#183
[#303 'if']: r#183
[#303 'let']: r#183
[#303 'loop']: r#183
[#303 'mat2x2']: r#183
[#303 'mat2x3']: r#183
[#303 'mat2x4']: r#183
[#303 'mat3x2']: r#183
[#303 'mat3x3']: r#183
[#303 'mat3x4']: r#183
[#303 'mat4x2']: r#183
[#303 'mat4x3']: r#183
[#303 'mat4x4']: r#183
[#303 'ptr']: r#183
[#303 'return']: r#183
[#303 'sampler']: r#183
[#303 'sampler_comparison']: r#183
[#303 'switch']: r#183
[#303 'texture_1d']: r#183
[#303 'texture_2d']: r#183
[#303 'texture_2d_array']: r#183
[#303 'texture_3d']: r#183
[#303 'texture_cube']: r#183
[#303 'texture_cube_array']: r#183
[#303 'texture_depth_2d']: r#183
[#303 'texture_depth_2d_array']: r#183
[#303 'texture_depth_cube']: r#183
[#303 'texture_depth_cube_array']: r#183
[#303 'texture_depth_multisampled_2d']: r#183
[#303 'texture_multisampled_2d']: r#183
[#303 'texture_storage_1d']: r#183
[#303 'texture_storage_2d']: r#183
[#303 'texture_storage_2d_array']: r#183
[#303 'texture_storage_3d']: r#183
[#303 'u32']: r#183
[#303 'var']: r#183
[#303 'vec2']: r#183
[#303 'vec3']: r#183
[#303 'vec4']: r#183
[#303 'while']: r#183
[#303 '{']: r#183
[#303 '}']: r#183
[#303 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#183
[#304 '&']: r#184
[#304 '(']: r#184
[#304 '*']: r#184
[#304 ';']: r#184
[#304 '_']: r#184
[#304 'array']: r#184
[#304 'atomic']: r#184
[#304 'bool']: r#184
[#304 'break']: r#184
[#304 'const']: r#184
[#304 'const_assert']: r#184
[#304 'continue']: r#184
[#304 'continuing']: r#184
[#304 'discard']: r#184
[#304 'f16']: r#184
[#304 'f32']: r#184
[#304 'for']: r#184
[#304 'i32']: r#184
[#304 'if']: r#184
[#304 'let']: r#184
[#304 'loop']: r#184
[#304 'mat2x2']: r#184
[#304 'mat2x3']: r#184
[#304 'mat2x4']: r#184
[#304 'mat3x2']: r#184
[#304 'mat3x3']: r#184
[#304 'mat3x4']: r#184
[#304 'mat4x2']: r#184
[#304 'mat4x3']: r#184
[#304 'mat4x4']: r#184
[#304 'ptr']: r#184
[#304 'return']: r#184
[#304 'sampler']: r#184
[#304 'sampler_comparison']: r#184
[#304 'switch']: r#184
[#304 'texture_1d']: r#184
[#304 'texture_2d']: r#184
[#304 'texture_2d_array']: r#184
[#304 'texture_3d']: r#184
[#304 'texture_cube']: r#184
[#304 'texture_cube_array']: r#184
[#304 'texture_depth_2d']: r#184
[#304 'texture_depth_2d_array']: r#184
[#304 'texture_depth_cube']: r#184
[#304 'texture_depth_cube_array']: r#184
[#304 'texture_depth_multisampled_2d']: r#184
[#304 'texture_multisampled_2d']: r#184
[#304 'texture_storage_1d']: r#184
[#304 'texture_storage_2d']: r#184
[#304 'texture_storage_2d_array']: r#184
[#304 'texture_storage_3d']: r#184
[#304 'u32']: r#184
[#304 'var']: r#184
[#304 'vec2']: r#184
[#304 'vec3']: r#184
[#304 'vec4']: r#184
[#304 'while']: r#184
[#304 '{']: r#184
[#304 '}']: r#184
[#304 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#184
[#305 '&']: r#185
[#305 '(']: r#185
[#305 '*']: r#185
[#305 ';']: r#185
[#305 '_']: r#185
[#305 'array']: r#185
[#305 'atomic']: r#185
[#305 'bool']: r#185
[#305 'break']: r#185
[#305 'const']: r#185
[#305 'const_assert']: r#185
[#305 'continue']: r#185
[#305 'continuing']: r#185
[#305 'discard']: r#185
[#305 'f16']: r#185
[#305 'f32']: r#185
[#305 'for']: r#185
[#305 'i32']: r#185
[#305 'if']: r#185
[#305 'let']: r#185
[#305 'loop']: r#185
[#305 'mat2x2']: r#185
[#305 'mat2x3']: r#185
[#305 'mat2x4']: r#185
[#305 'mat3x2']: r#185
[#305 'mat3x3']: r#185
[#305 'mat3x4']: r#185
[#305 'mat4x2']: r#185
[#305 'mat4x3']: r#185
[#305 'mat4x4']: r#185
[#305 'ptr']: r#185
[#305 'return']: r#185
[#305 'sampler']: r#185
[#305 'sampler_comparison']: r#185
[#305 'switch']: r#185
[#305 'texture_1d']: r#185
[#305 'texture_2d']: r#185
[#305 'texture_2d_array']: r#185
[#305 'texture_3d']: r#185
[#305 'texture_cube']: r#185
[#305 'texture_cube_array']: r#185
[#305 'texture_depth_2d']: r#185
[#305 'texture_depth_2d_array']: r#185
[#305 'texture_depth_cube']: r#185
[#305 'texture_depth_cube_array']: r#185
[#305 'texture_depth_multisampled_2d']: r#185
[#305 'texture_multisampled_2d']: r#185
[#305 'texture_storage_1d']: r#185
[#305 'texture_storage_2d']: r#185
[#305 'texture_storage_2d_array']: r#185
[#305 'texture_storage_3d']: r#185
[#305 'u32']: r#185
[#305 'var']: r#185
[#305 'vec2']: r#185
[#305 'vec3']: r#185
[#305 'vec4']: r#185
[#305 'while']: r#185
[#305 '{']: r#185
[#305 '}']: r#185
[#305 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#185
[#306 ';']: s#424
[#307 ';']: s#423
[#308 ';']: s#422
[#309 ';']: s#421
[#310 ';']: s#420
[#311 ';']: s#419
[#312 '&']: r#186
[#312 '(']: r#186
[#312 '*']: r#186
[#312 ';']: r#186
[#312 '_']: r#186
[#312 'array']: r#186
[#312 'atomic']: r#186
[#312 'bool']: r#186
[#312 'break']: r#186
[#312 'const']: r#186
[#312 'const_assert']: r#186
[#312 'continue']: r#186
[#312 'continuing']: r#186
[#312 'discard']: r#186
[#312 'f16']: r#186
[#312 'f32']: r#186
[#312 'for']: r#186
[#312 'i32']: r#186
[#312 'if']: r#186
[#312 'let']: r#186
[#312 'loop']: r#186
[#312 'mat2x2']: r#186
[#312 'mat2x3']: r#186
[#312 'mat2x4']: r#186
[#312 'mat3x2']: r#186
[#312 'mat3x3']: r#186
[#312 'mat3x4']: r#186
[#312 'mat4x2']: r#186
[#312 'mat4x3']: r#186
[#312 'mat4x4']: r#186
[#312 'ptr']: r#186
[#312 'return']: r#186
[#312 'sampler']: r#186
[#312 'sampler_comparison']: r#186
[#312 'switch']: r#186
[#312 'texture_1d']: r#186
[#312 'texture_2d']: r#186
[#312 'texture_2d_array']: r#186
[#312 'texture_3d']: r#186
[#312 'texture_cube']: r#186
[#312 'texture_cube_array']: r#186
[#312 'texture_depth_2d']: r#186
[#312 'texture_depth_2d_array']: r#186
[#312 'texture_depth_cube']: r#186
[#312 'texture_depth_cube_array']: r#186
[#312 'texture_depth_multisampled_2d']: r#186
[#312 'texture_multisampled_2d']: r#186
[#312 'texture_storage_1d']: r#186
[#312 'texture_storage_2d']: r#186
[#312 'texture_storage_2d_array']: r#186
[#312 'texture_storage_3d']: r#186
[#312 'u32']: r#186
[#312 'var']: r#186
[#312 'vec2']: r#186
[#312 'vec3']: r#186
[#312 'vec4']: r#186
[#312 'while']: r#186
[#312 '{']: r#186
[#312 '}']: r#186
[#312 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#186
[#313 ';']: s#418
[#314 '!']: s#63
[#314 '&']: s#66
[#314 '(']: s#78
[#314 '*']: s#65
[#314 '-']: s#62
[#314 'array']: s#82
[#314 'atomic']: s#96
[#314 'bitcast']: s#72
[#314 'bool']: s#89
[#314 'f16']: s#91
[#314 'f32']: s#90
[#314 'false']: s#88
[#314 'i32']: s#92
[#314 'mat2x2']: s#101
[#314 'mat2x3']: s#102
[#314 'mat2x4']: s#103
[#314 'mat3x2']: s#104
[#314 'mat3x3']: s#105
[#314 'mat3x4']: s#106
[#314 'mat4x2']: s#107
[#314 'mat4x3']: s#108
[#314 'mat4x4']: s#109
[#314 'ptr']: s#94
[#314 'sampler']: s#126
[#314 'sampler_comparison']: s#127
[#314 'texture_1d']: s#133
[#314 'texture_2d']: s#134
[#314 'texture_2d_array']: s#135
[#314 'texture_3d']: s#136
[#314 'texture_cube']: s#137
[#314 'texture_cube_array']: s#138
[#314 'texture_depth_2d']: s#128
[#314 'texture_depth_2d_array']: s#129
[#314 'texture_depth_cube']: s#130
[#314 'texture_depth_cube_array']: s#131
[#314 'texture_depth_multisampled_2d']: s#132
[#314 'texture_multisampled_2d']: s#139
[#314 'texture_storage_1d']: s#140
[#314 'texture_storage_2d']: s#141
[#314 'texture_storage_2d_array']: s#142
[#314 'texture_storage_3d']: s#143
[#314 'true']: s#87
[#314 'u32']: s#93
[#314 'vec2']: s#98
[#314 'vec3']: s#99
[#314 'vec4']: s#100
[#314 '~']: s#64
[#314 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#314 /0[fh]/]: s#113
[#314 /0[iu]?/]: s#110
[#314 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#314 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#314 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#314 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#314 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#314 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#314 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#314 /[1-9][0-9]*[fh]/]: s#114
[#314 /[1-9][0-9]*[iu]?/]: s#111
[#315 'else']: s#415
[#316 '!']: s#63
[#316 '&']: s#66
[#316 '(']: s#78
[#316 '*']: s#65
[#316 '-']: s#62
[#316 'array']: s#82
[#316 'atomic']: s#96
[#316 'bitcast']: s#72
[#316 'bool']: s#89
[#316 'f16']: s#91
[#316 'f32']: s#90
[#316 'false']: s#88
[#316 'i32']: s#92
[#316 'mat2x2']: s#101
[#316 'mat2x3']: s#102
[#316 'mat2x4']: s#103
[#316 'mat3x2']: s#104
[#316 'mat3x3']: s#105
[#316 'mat3x4']: s#106
[#316 'mat4x2']: s#107
[#316 'mat4x3']: s#108
[#316 'mat4x4']: s#109
[#316 'ptr']: s#94
[#316 'sampler']: s#126
[#316 'sampler_comparison']: s#127
[#316 'texture_1d']: s#133
[#316 'texture_2d']: s#134
[#316 'texture_2d_array']: s#135
[#316 'texture_3d']: s#136
[#316 'texture_cube']: s#137
[#316 'texture_cube_array']: s#138
[#316 'texture_depth_2d']: s#128
[#316 'texture_depth_2d_array']: s#129
[#316 'texture_depth_cube']: s#130
[#316 'texture_depth_cube_array']: s#131
[#316 'texture_depth_multisampled_2d']: s#132
[#316 'texture_multisampled_2d']: s#139
[#316 'texture_storage_1d']: s#140
[#316 'texture_storage_2d']: s#141
[#316 'texture_storage_2d_array']: s#142
[#316 'texture_storage_3d']: s#143
[#316 'true']: s#87
[#316 'u32']: s#93
[#316 'vec2']: s#98
[#316 'vec3']: s#99
[#316 'vec4']: s#100
[#316 '~']: s#64
[#316 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#316 /0[fh]/]: s#113
[#316 /0[iu]?/]: s#110
[#316 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#316 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#316 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#316 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#316 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#316 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#316 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#316 /[1-9][0-9]*[fh]/]: s#114
[#316 /[1-9][0-9]*[iu]?/]: s#111
[#317 '{']: s#410
[#318 '(']: s#409
[#319 '!']: s#63
[#319 '&']: s#66
[#319 '(']: s#78
[#319 '*']: s#65
[#319 '-']: s#62
[#319 'array']: s#82
[#319 'atomic']: s#96
[#319 'bitcast']: s#72
[#319 'bool']: s#89
[#319 'f16']: s#91
[#319 'f32']: s#90
[#319 'false']: s#88
[#319 'i32']: s#92
[#319 'mat2x2']: s#101
[#319 'mat2x3']: s#102
[#319 'mat2x4']: s#103
[#319 'mat3x2']: s#104
[#319 'mat3x3']: s#105
[#319 'mat3x4']: s#106
[#319 'mat4x2']: s#107
[#319 'mat4x3']: s#108
[#319 'mat4x4']: s#109
[#319 'ptr']: s#94
[#319 'sampler']: s#126
[#319 'sampler_comparison']: s#127
[#319 'texture_1d']: s#133
[#319 'texture_2d']: s#134
[#319 'texture_2d_array']: s#135
[#319 'texture_3d']: s#136
[#319 'texture_cube']: s#137
[#319 'texture_cube_array']: s#138
[#319 'texture_depth_2d']: s#128
[#319 'texture_depth_2d_array']: s#129
[#319 'texture_depth_cube']: s#130
[#319 'texture_depth_cube_array']: s#131
[#319 'texture_depth_multisampled_2d']: s#132
[#319 'texture_multisampled_2d']: s#139
[#319 'texture_storage_1d']: s#140
[#319 'texture_storage_2d']: s#141
[#319 'texture_storage_2d_array']: s#142
[#319 'texture_storage_3d']: s#143
[#319 'true']: s#87
[#319 'u32']: s#93
[#319 'vec2']: s#98
[#319 'vec3']: s#99
[#319 'vec4']: s#100
[#319 '~']: s#64
[#319 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#319 /0[fh]/]: s#113
[#319 /0[iu]?/]: s#110
[#319 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#319 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#319 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#319 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#319 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#319 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#319 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#319 /[1-9][0-9]*[fh]/]: s#114
[#319 /[1-9][0-9]*[iu]?/]: s#111
[#320 '(']: s#183
[#321 ';']: r#187
[#321 '=']: s#406
[#322 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#323 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#324 ';']: r#188
[#325 ';']: r#189
[#326 ')']: r#190
[#326 ';']: r#190
[#327 ')']: r#191
[#327 ';']: r#191
[#328 ')']: r#192
[#328 ';']: r#192
[#329 '!']: s#63
[#329 '&']: s#66
[#329 '(']: s#78
[#329 '*']: s#65
[#329 '-']: s#62
[#329 'array']: s#82
[#329 'atomic']: s#96
[#329 'bitcast']: s#72
[#329 'bool']: s#89
[#329 'f16']: s#91
[#329 'f32']: s#90
[#329 'false']: s#88
[#329 'i32']: s#92
[#329 'mat2x2']: s#101
[#329 'mat2x3']: s#102
[#329 'mat2x4']: s#103
[#329 'mat3x2']: s#104
[#329 'mat3x3']: s#105
[#329 'mat3x4']: s#106
[#329 'mat4x2']: s#107
[#329 'mat4x3']: s#108
[#329 'mat4x4']: s#109
[#329 'ptr']: s#94
[#329 'sampler']: s#126
[#329 'sampler_comparison']: s#127
[#329 'texture_1d']: s#133
[#329 'texture_2d']: s#134
[#329 'texture_2d_array']: s#135
[#329 'texture_3d']: s#136
[#329 'texture_cube']: s#137
[#329 'texture_cube_array']: s#138
[#329 'texture_depth_2d']: s#128
[#329 'texture_depth_2d_array']: s#129
[#329 'texture_depth_cube']: s#130
[#329 'texture_depth_cube_array']: s#131
[#329 'texture_depth_multisampled_2d']: s#132
[#329 'texture_multisampled_2d']: s#139
[#329 'texture_storage_1d']: s#140
[#329 'texture_storage_2d']: s#141
[#329 'texture_storage_2d_array']: s#142
[#329 'texture_storage_3d']: s#143
[#329 'true']: s#87
[#329 'u32']: s#93
[#329 'vec2']: s#98
[#329 'vec3']: s#99
[#329 'vec4']: s#100
[#329 '~']: s#64
[#329 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#329 /0[fh]/]: s#113
[#329 /0[iu]?/]: s#110
[#329 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#329 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#329 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#329 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#329 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#329 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#329 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#329 /[1-9][0-9]*[fh]/]: s#114
[#329 /[1-9][0-9]*[iu]?/]: s#111
[#330 '%=']: r#193
[#330 '&=']: r#193
[#330 '(']: r#34
[#330 '*=']: r#193
[#330 '++']: r#193
[#330 '+=']: r#193
[#330 '--']: r#193
[#330 '-=']: r#193
[#330 '.']: r#193
[#330 '/=']: r#193
[#330 '=']: r#193
[#330 '[']: r#193
[#330 '^=']: r#193
[#330 '|=']: r#193
[#330 /\u200B_shift_left_assign/]: r#193
[#330 /\u200B_shift_right_assign/]: r#193
[#331 '%=']: s#395
[#331 '&=']: s#396
[#331 '*=']: s#393
[#331 '++']: s#387
[#331 '+=']: s#391
[#331 '--']: s#388
[#331 '-=']: s#392
[#331 '/=']: s#394
[#331 '=']: s#389
[#331 '^=']: s#398
[#331 '|=']: s#397
[#331 /\u200B_shift_left_assign/]: s#402
[#331 /\u200B_shift_right_assign/]: s#401
[#332 '=']: s#385
[#333 '.']: s#188
[#333 '[']: s#187
[#334 '&']: s#335
[#334 '(']: s#336
[#334 '*']: s#334
[#334 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#335 '&']: s#335
[#335 '(']: s#336
[#335 '*']: s#334
[#335 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#336 '&']: s#335
[#336 '(']: s#336
[#336 '*']: s#334
[#336 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#337 '@']: s#30
[#338 ',']: s#372
[#339 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#272
[#340 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#194
[#341 '@']: s#30
[#342 ';']: r#195
[#343 ')']: r#196
[#343 ',']: r#196
[#343 ';']: r#196
[#343 '=']: r#196
[#343 '{']: r#196
[#343 '}']: r#196
[#343 /\u200B_template_args_end/]: r#196
[#344 ')']: r#197
[#344 ',']: r#197
[#344 ';']: r#197
[#344 '=']: r#197
[#344 '{']: r#197
[#344 '}']: r#197
[#344 /\u200B_template_args_end/]: r#197
[#345 /\u200B_disambiguate_template/]: s#160
[#346 /\u200B_disambiguate_template/]: s#160
[#347 /\u200B_disambiguate_template/]: s#160
[#348 ';']: r#198
[#349 '!']: s#63
[#349 '&']: s#66
[#349 '(']: s#78
[#349 '*']: s#65
[#349 '-']: s#62
[#349 'array']: s#82
[#349 'atomic']: s#96
[#349 'bitcast']: s#72
[#349 'bool']: s#89
[#349 'f16']: s#91
[#349 'f32']: s#90
[#349 'false']: s#88
[#349 'i32']: s#92
[#349 'mat2x2']: s#101
[#349 'mat2x3']: s#102
[#349 'mat2x4']: s#103
[#349 'mat3x2']: s#104
[#349 'mat3x3']: s#105
[#349 'mat3x4']: s#106
[#349 'mat4x2']: s#107
[#349 'mat4x3']: s#108
[#349 'mat4x4']: s#109
[#349 'ptr']: s#94
[#349 'sampler']: s#126
[#349 'sampler_comparison']: s#127
[#349 'texture_1d']: s#133
[#349 'texture_2d']: s#134
[#349 'texture_2d_array']: s#135
[#349 'texture_3d']: s#136
[#349 'texture_cube']: s#137
[#349 'texture_cube_array']: s#138
[#349 'texture_depth_2d']: s#128
[#349 'texture_depth_2d_array']: s#129
[#349 'texture_depth_cube']: s#130
[#349 'texture_depth_cube_array']: s#131
[#349 'texture_depth_multisampled_2d']: s#132
[#349 'texture_multisampled_2d']: s#139
[#349 'texture_storage_1d']: s#140
[#349 'texture_storage_2d']: s#141
[#349 'texture_storage_2d_array']: s#142
[#349 'texture_storage_3d']: s#143
[#349 'true']: s#87
[#349 'u32']: s#93
[#349 'vec2']: s#98
[#349 'vec3']: s#99
[#349 'vec4']: s#100
[#349 '~']: s#64
[#349 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#349 /0[fh]/]: s#113
[#349 /0[iu]?/]: s#110
[#349 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#349 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#349 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#349 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#349 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#349 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#349 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#349 /[1-9][0-9]*[fh]/]: s#114
[#349 /[1-9][0-9]*[iu]?/]: s#111
[#350 ';']: r#199
[#351 ';']: r#200
[#351 '=']: r#200
[#352 ';']: r#201
[#353 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#354 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#202
[#355 'function']: s#357
[#355 'private']: s#358
[#355 'storage']: s#361
[#355 'uniform']: s#360
[#355 'workgroup']: s#359
[#356 ',']: s#536
[#357 ',']: r#203
[#357 /\u200B_template_args_end/]: r#203
[#358 ',']: r#204
[#358 /\u200B_template_args_end/]: r#204
[#359 ',']: r#205
[#359 /\u200B_template_args_end/]: r#205
[#360 ',']: r#206
[#360 /\u200B_template_args_end/]: r#206
[#361 ',']: r#207
[#361 /\u200B_template_args_end/]: r#207
[#362 ';']: r#208
[#362 '=']: r#208
[#363 ';']: r#209
[#364 /\u200B_template_args_start/]: s#283
[#365 /\u200B_template_args_start/]: s#283
[#366 /\u200B_template_args_start/]: s#283
[#367 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#210
[#368 ':']: s#534
[#369 ',']: s#533
[#370 ',']: r#211
[#370 '}']: r#211
[#371 ',']: s#372
[#372 '@']: s#30
[#373 ')']: s#529
[#374 ')']: r#212
[#375 ',']: s#528
[#376 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#377 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#213
[#378 '@']: s#30
[#379 ')']: s#522
[#380 '%=']: r#193
[#380 '&=']: r#193
[#380 ')']: r#193
[#380 '*=']: r#193
[#380 '++']: r#193
[#380 '+=']: r#193
[#380 '--']: r#193
[#380 '-=']: r#193
[#380 '.']: r#193
[#380 '/=']: r#193
[#380 '=']: r#193
[#380 '[']: r#193
[#380 '^=']: r#193
[#380 '|=']: r#193
[#380 /\u200B_shift_left_assign/]: r#193
[#380 /\u200B_shift_right_assign/]: r#193
[#381 '%=']: r#214
[#381 '&=']: r#214
[#381 ')']: r#214
[#381 '*=']: r#214
[#381 '++']: r#214
[#381 '+=']: r#214
[#381 '--']: r#214
[#381 '-=']: r#214
[#381 '/=']: r#214
[#381 '=']: r#214
[#381 '^=']: r#214
[#381 '|=']: r#214
[#381 /\u200B_shift_left_assign/]: r#214
[#381 /\u200B_shift_right_assign/]: r#214
[#382 '%=']: r#215
[#382 '&=']: r#215
[#382 ')']: r#215
[#382 '*=']: r#215
[#382 '++']: r#215
[#382 '+=']: r#215
[#382 '--']: r#215
[#382 '-=']: r#215
[#382 '/=']: r#215
[#382 '=']: r#215
[#382 '^=']: r#215
[#382 '|=']: r#215
[#382 /\u200B_shift_left_assign/]: r#215
[#382 /\u200B_shift_right_assign/]: r#215
[#383 '%=']: r#216
[#383 '&=']: r#216
[#383 ')']: r#216
[#383 '*=']: r#216
[#383 '++']: r#216
[#383 '+=']: r#216
[#383 '--']: r#216
[#383 '-=']: r#216
[#383 '/=']: r#216
[#383 '=']: r#216
[#383 '^=']: r#216
[#383 '|=']: r#216
[#383 /\u200B_shift_left_assign/]: r#216
[#383 /\u200B_shift_right_assign/]: r#216
[#384 '%=']: r#217
[#384 '&=']: r#217
[#384 ')']: r#217
[#384 '*=']: r#217
[#384 '++']: r#217
[#384 '+=']: r#217
[#384 '--']: r#217
[#384 '-=']: r#217
[#384 '/=']: r#217
[#384 '=']: r#217
[#384 '^=']: r#217
[#384 '|=']: r#217
[#384 /\u200B_shift_left_assign/]: r#217
[#384 /\u200B_shift_right_assign/]: r#217
[#385 '!']: s#63
[#385 '&']: s#66
[#385 '(']: s#78
[#385 '*']: s#65
[#385 '-']: s#62
[#385 'array']: s#82
[#385 'atomic']: s#96
[#385 'bitcast']: s#72
[#385 'bool']: s#89
[#385 'f16']: s#91
[#385 'f32']: s#90
[#385 'false']: s#88
[#385 'i32']: s#92
[#385 'mat2x2']: s#101
[#385 'mat2x3']: s#102
[#385 'mat2x4']: s#103
[#385 'mat3x2']: s#104
[#385 'mat3x3']: s#105
[#385 'mat3x4']: s#106
[#385 'mat4x2']: s#107
[#385 'mat4x3']: s#108
[#385 'mat4x4']: s#109
[#385 'ptr']: s#94
[#385 'sampler']: s#126
[#385 'sampler_comparison']: s#127
[#385 'texture_1d']: s#133
[#385 'texture_2d']: s#134
[#385 'texture_2d_array']: s#135
[#385 'texture_3d']: s#136
[#385 'texture_cube']: s#137
[#385 'texture_cube_array']: s#138
[#385 'texture_depth_2d']: s#128
[#385 'texture_depth_2d_array']: s#129
[#385 'texture_depth_cube']: s#130
[#385 'texture_depth_cube_array']: s#131
[#385 'texture_depth_multisampled_2d']: s#132
[#385 'texture_multisampled_2d']: s#139
[#385 'texture_storage_1d']: s#140
[#385 'texture_storage_2d']: s#141
[#385 'texture_storage_2d_array']: s#142
[#385 'texture_storage_3d']: s#143
[#385 'true']: s#87
[#385 'u32']: s#93
[#385 'vec2']: s#98
[#385 'vec3']: s#99
[#385 'vec4']: s#100
[#385 '~']: s#64
[#385 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#385 /0[fh]/]: s#113
[#385 /0[iu]?/]: s#110
[#385 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#385 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#385 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#385 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#385 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#385 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#385 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#385 /[1-9][0-9]*[fh]/]: s#114
[#385 /[1-9][0-9]*[iu]?/]: s#111
[#386 '!']: s#63
[#386 '&']: s#66
[#386 '(']: s#78
[#386 '*']: s#65
[#386 '-']: s#62
[#386 'array']: s#82
[#386 'atomic']: s#96
[#386 'bitcast']: s#72
[#386 'bool']: s#89
[#386 'f16']: s#91
[#386 'f32']: s#90
[#386 'false']: s#88
[#386 'i32']: s#92
[#386 'mat2x2']: s#101
[#386 'mat2x3']: s#102
[#386 'mat2x4']: s#103
[#386 'mat3x2']: s#104
[#386 'mat3x3']: s#105
[#386 'mat3x4']: s#106
[#386 'mat4x2']: s#107
[#386 'mat4x3']: s#108
[#386 'mat4x4']: s#109
[#386 'ptr']: s#94
[#386 'sampler']: s#126
[#386 'sampler_comparison']: s#127
[#386 'texture_1d']: s#133
[#386 'texture_2d']: s#134
[#386 'texture_2d_array']: s#135
[#386 'texture_3d']: s#136
[#386 'texture_cube']: s#137
[#386 'texture_cube_array']: s#138
[#386 'texture_depth_2d']: s#128
[#386 'texture_depth_2d_array']: s#129
[#386 'texture_depth_cube']: s#130
[#386 'texture_depth_cube_array']: s#131
[#386 'texture_depth_multisampled_2d']: s#132
[#386 'texture_multisampled_2d']: s#139
[#386 'texture_storage_1d']: s#140
[#386 'texture_storage_2d']: s#141
[#386 'texture_storage_2d_array']: s#142
[#386 'texture_storage_3d']: s#143
[#386 'true']: s#87
[#386 'u32']: s#93
[#386 'vec2']: s#98
[#386 'vec3']: s#99
[#386 'vec4']: s#100
[#386 '~']: s#64
[#386 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#386 /0[fh]/]: s#113
[#386 /0[iu]?/]: s#110
[#386 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#386 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#386 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#386 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#386 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#386 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#386 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#386 /[1-9][0-9]*[fh]/]: s#114
[#386 /[1-9][0-9]*[iu]?/]: s#111
[#387 ')']: r#218
[#387 ';']: r#218
[#388 ')']: r#219
[#388 ';']: r#219
[#389 '!']: r#220
[#389 '&']: r#220
[#389 '(']: r#220
[#389 '*']: r#220
[#389 '-']: r#220
[#389 'array']: r#220
[#389 'atomic']: r#220
[#389 'bitcast']: r#220
[#389 'bool']: r#220
[#389 'f16']: r#220
[#389 'f32']: r#220
[#389 'false']: r#220
[#389 'i32']: r#220
[#389 'mat2x2']: r#220
[#389 'mat2x3']: r#220
[#389 'mat2x4']: r#220
[#389 'mat3x2']: r#220
[#389 'mat3x3']: r#220
[#389 'mat3x4']: r#220
[#389 'mat4x2']: r#220
[#389 'mat4x3']: r#220
[#389 'mat4x4']: r#220
[#389 'ptr']: r#220
[#389 'sampler']: r#220
[#389 'sampler_comparison']: r#220
[#389 'texture_1d']: r#220
[#389 'texture_2d']: r#220
[#389 'texture_2d_array']: r#220
[#389 'texture_3d']: r#220
[#389 'texture_cube']: r#220
[#389 'texture_cube_array']: r#220
[#389 'texture_depth_2d']: r#220
[#389 'texture_depth_2d_array']: r#220
[#389 'texture_depth_cube']: r#220
[#389 'texture_depth_cube_array']: r#220
[#389 'texture_depth_multisampled_2d']: r#220
[#389 'texture_multisampled_2d']: r#220
[#389 'texture_storage_1d']: r#220
[#389 'texture_storage_2d']: r#220
[#389 'texture_storage_2d_array']: r#220
[#389 'texture_storage_3d']: r#220
[#389 'true']: r#220
[#389 'u32']: r#220
[#389 'vec2']: r#220
[#389 'vec3']: r#220
[#389 'vec4']: r#220
[#389 '~']: r#220
[#389 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#220
[#389 /0[fh]/]: r#220
[#389 /0[iu]?/]: r#220
[#389 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#220
[#389 /0[xX][0-9a-fA-F]+[iu]?/]: r#220
[#389 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#220
[#389 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#220
[#389 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#220
[#389 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#220
[#389 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#220
[#389 /[1-9][0-9]*[fh]/]: r#220
[#389 /[1-9][0-9]*[iu]?/]: r#220
[#390 '!']: r#221
[#390 '&']: r#221
[#390 '(']: r#221
[#390 '*']: r#221
[#390 '-']: r#221
[#390 'array']: r#221
[#390 'atomic']: r#221
[#390 'bitcast']: r#221
[#390 'bool']: r#221
[#390 'f16']: r#221
[#390 'f32']: r#221
[#390 'false']: r#221
[#390 'i32']: r#221
[#390 'mat2x2']: r#221
[#390 'mat2x3']: r#221
[#390 'mat2x4']: r#221
[#390 'mat3x2']: r#221
[#390 'mat3x3']: r#221
[#390 'mat3x4']: r#221
[#390 'mat4x2']: r#221
[#390 'mat4x3']: r#221
[#390 'mat4x4']: r#221
[#390 'ptr']: r#221
[#390 'sampler']: r#221
[#390 'sampler_comparison']: r#221
[#390 'texture_1d']: r#221
[#390 'texture_2d']: r#221
[#390 'texture_2d_array']: r#221
[#390 'texture_3d']: r#221
[#390 'texture_cube']: r#221
[#390 'texture_cube_array']: r#221
[#390 'texture_depth_2d']: r#221
[#390 'texture_depth_2d_array']: r#221
[#390 'texture_depth_cube']: r#221
[#390 'texture_depth_cube_array']: r#221
[#390 'texture_depth_multisampled_2d']: r#221
[#390 'texture_multisampled_2d']: r#221
[#390 'texture_storage_1d']: r#221
[#390 'texture_storage_2d']: r#221
[#390 'texture_storage_2d_array']: r#221
[#390 'texture_storage_3d']: r#221
[#390 'true']: r#221
[#390 'u32']: r#221
[#390 'vec2']: r#221
[#390 'vec3']: r#221
[#390 'vec4']: r#221
[#390 '~']: r#221
[#390 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#221
[#390 /0[fh]/]: r#221
[#390 /0[iu]?/]: r#221
[#390 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#221
[#390 /0[xX][0-9a-fA-F]+[iu]?/]: r#221
[#390 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#221
[#390 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#221
[#390 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#221
[#390 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#221
[#390 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#221
[#390 /[1-9][0-9]*[fh]/]: r#221
[#390 /[1-9][0-9]*[iu]?/]: r#221
[#391 '!']: r#222
[#391 '&']: r#222
[#391 '(']: r#222
[#391 '*']: r#222
[#391 '-']: r#222
[#391 'array']: r#222
[#391 'atomic']: r#222
[#391 'bitcast']: r#222
[#391 'bool']: r#222
[#391 'f16']: r#222
[#391 'f32']: r#222
[#391 'false']: r#222
[#391 'i32']: r#222
[#391 'mat2x2']: r#222
[#391 'mat2x3']: r#222
[#391 'mat2x4']: r#222
[#391 'mat3x2']: r#222
[#391 'mat3x3']: r#222
[#391 'mat3x4']: r#222
[#391 'mat4x2']: r#222
[#391 'mat4x3']: r#222
[#391 'mat4x4']: r#222
[#391 'ptr']: r#222
[#391 'sampler']: r#222
[#391 'sampler_comparison']: r#222
[#391 'texture_1d']: r#222
[#391 'texture_2d']: r#222
[#391 'texture_2d_array']: r#222
[#391 'texture_3d']: r#222
[#391 'texture_cube']: r#222
[#391 'texture_cube_array']: r#222
[#391 'texture_depth_2d']: r#222
[#391 'texture_depth_2d_array']: r#222
[#391 'texture_depth_cube']: r#222
[#391 'texture_depth_cube_array']: r#222
[#391 'texture_depth_multisampled_2d']: r#222
[#391 'texture_multisampled_2d']: r#222
[#391 'texture_storage_1d']: r#222
[#391 'texture_storage_2d']: r#222
[#391 'texture_storage_2d_array']: r#222
[#391 'texture_storage_3d']: r#222
[#391 'true']: r#222
[#391 'u32']: r#222
[#391 'vec2']: r#222
[#391 'vec3']: r#222
[#391 'vec4']: r#222
[#391 '~']: r#222
[#391 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#222
[#391 /0[fh]/]: r#222
[#391 /0[iu]?/]: r#222
[#391 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#222
[#391 /0[xX][0-9a-fA-F]+[iu]?/]: r#222
[#391 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#222
[#391 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#222
[#391 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#222
[#391 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#222
[#391 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#222
[#391 /[1-9][0-9]*[fh]/]: r#222
[#391 /[1-9][0-9]*[iu]?/]: r#222
[#392 '!']: r#223
[#392 '&']: r#223
[#392 '(']: r#223
[#392 '*']: r#223
[#392 '-']: r#223
[#392 'array']: r#223
[#392 'atomic']: r#223
[#392 'bitcast']: r#223
[#392 'bool']: r#223
[#392 'f16']: r#223
[#392 'f32']: r#223
[#392 'false']: r#223
[#392 'i32']: r#223
[#392 'mat2x2']: r#223
[#392 'mat2x3']: r#223
[#392 'mat2x4']: r#223
[#392 'mat3x2']: r#223
[#392 'mat3x3']: r#223
[#392 'mat3x4']: r#223
[#392 'mat4x2']: r#223
[#392 'mat4x3']: r#223
[#392 'mat4x4']: r#223
[#392 'ptr']: r#223
[#392 'sampler']: r#223
[#392 'sampler_comparison']: r#223
[#392 'texture_1d']: r#223
[#392 'texture_2d']: r#223
[#392 'texture_2d_array']: r#223
[#392 'texture_3d']: r#223
[#392 'texture_cube']: r#223
[#392 'texture_cube_array']: r#223
[#392 'texture_depth_2d']: r#223
[#392 'texture_depth_2d_array']: r#223
[#392 'texture_depth_cube']: r#223
[#392 'texture_depth_cube_array']: r#223
[#392 'texture_depth_multisampled_2d']: r#223
[#392 'texture_multisampled_2d']: r#223
[#392 'texture_storage_1d']: r#223
[#392 'texture_storage_2d']: r#223
[#392 'texture_storage_2d_array']: r#223
[#392 'texture_storage_3d']: r#223
[#392 'true']: r#223
[#392 'u32']: r#223
[#392 'vec2']: r#223
[#392 'vec3']: r#223
[#392 'vec4']: r#223
[#392 '~']: r#223
[#392 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#223
[#392 /0[fh]/]: r#223
[#392 /0[iu]?/]: r#223
[#392 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#223
[#392 /0[xX][0-9a-fA-F]+[iu]?/]: r#223
[#392 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#223
[#392 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#223
[#392 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#223
[#392 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#223
[#392 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#223
[#392 /[1-9][0-9]*[fh]/]: r#223
[#392 /[1-9][0-9]*[iu]?/]: r#223
[#393 '!']: r#224
[#393 '&']: r#224
[#393 '(']: r#224
[#393 '*']: r#224
[#393 '-']: r#224
[#393 'array']: r#224
[#393 'atomic']: r#224
[#393 'bitcast']: r#224
[#393 'bool']: r#224
[#393 'f16']: r#224
[#393 'f32']: r#224
[#393 'false']: r#224
[#393 'i32']: r#224
[#393 'mat2x2']: r#224
[#393 'mat2x3']: r#224
[#393 'mat2x4']: r#224
[#393 'mat3x2']: r#224
[#393 'mat3x3']: r#224
[#393 'mat3x4']: r#224
[#393 'mat4x2']: r#224
[#393 'mat4x3']: r#224
[#393 'mat4x4']: r#224
[#393 'ptr']: r#224
[#393 'sampler']: r#224
[#393 'sampler_comparison']: r#224
[#393 'texture_1d']: r#224
[#393 'texture_2d']: r#224
[#393 'texture_2d_array']: r#224
[#393 'texture_3d']: r#224
[#393 'texture_cube']: r#224
[#393 'texture_cube_array']: r#224
[#393 'texture_depth_2d']: r#224
[#393 'texture_depth_2d_array']: r#224
[#393 'texture_depth_cube']: r#224
[#393 'texture_depth_cube_array']: r#224
[#393 'texture_depth_multisampled_2d']: r#224
[#393 'texture_multisampled_2d']: r#224
[#393 'texture_storage_1d']: r#224
[#393 'texture_storage_2d']: r#224
[#393 'texture_storage_2d_array']: r#224
[#393 'texture_storage_3d']: r#224
[#393 'true']: r#224
[#393 'u32']: r#224
[#393 'vec2']: r#224
[#393 'vec3']: r#224
[#393 'vec4']: r#224
[#393 '~']: r#224
[#393 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#224
[#393 /0[fh]/]: r#224
[#393 /0[iu]?/]: r#224
[#393 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#224
[#393 /0[xX][0-9a-fA-F]+[iu]?/]: r#224
[#393 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#224
[#393 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#224
[#393 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#224
[#393 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#224
[#393 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#224
[#393 /[1-9][0-9]*[fh]/]: r#224
[#393 /[1-9][0-9]*[iu]?/]: r#224
[#394 '!']: r#225
[#394 '&']: r#225
[#394 '(']: r#225
[#394 '*']: r#225
[#394 '-']: r#225
[#394 'array']: r#225
[#394 'atomic']: r#225
[#394 'bitcast']: r#225
[#394 'bool']: r#225
[#394 'f16']: r#225
[#394 'f32']: r#225
[#394 'false']: r#225
[#394 'i32']: r#225
[#394 'mat2x2']: r#225
[#394 'mat2x3']: r#225
[#394 'mat2x4']: r#225
[#394 'mat3x2']: r#225
[#394 'mat3x3']: r#225
[#394 'mat3x4']: r#225
[#394 'mat4x2']: r#225
[#394 'mat4x3']: r#225
[#394 'mat4x4']: r#225
[#394 'ptr']: r#225
[#394 'sampler']: r#225
[#394 'sampler_comparison']: r#225
[#394 'texture_1d']: r#225
[#394 'texture_2d']: r#225
[#394 'texture_2d_array']: r#225
[#394 'texture_3d']: r#225
[#394 'texture_cube']: r#225
[#394 'texture_cube_array']: r#225
[#394 'texture_depth_2d']: r#225
[#394 'texture_depth_2d_array']: r#225
[#394 'texture_depth_cube']: r#225
[#394 'texture_depth_cube_array']: r#225
[#394 'texture_depth_multisampled_2d']: r#225
[#394 'texture_multisampled_2d']: r#225
[#394 'texture_storage_1d']: r#225
[#394 'texture_storage_2d']: r#225
[#394 'texture_storage_2d_array']: r#225
[#394 'texture_storage_3d']: r#225
[#394 'true']: r#225
[#394 'u32']: r#225
[#394 'vec2']: r#225
[#394 'vec3']: r#225
[#394 'vec4']: r#225
[#394 '~']: r#225
[#394 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#225
[#394 /0[fh]/]: r#225
[#394 /0[iu]?/]: r#225
[#394 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#225
[#394 /0[xX][0-9a-fA-F]+[iu]?/]: r#225
[#394 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#225
[#394 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#225
[#394 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#225
[#394 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#225
[#394 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#225
[#394 /[1-9][0-9]*[fh]/]: r#225
[#394 /[1-9][0-9]*[iu]?/]: r#225
[#395 '!']: r#226
[#395 '&']: r#226
[#395 '(']: r#226
[#395 '*']: r#226
[#395 '-']: r#226
[#395 'array']: r#226
[#395 'atomic']: r#226
[#395 'bitcast']: r#226
[#395 'bool']: r#226
[#395 'f16']: r#226
[#395 'f32']: r#226
[#395 'false']: r#226
[#395 'i32']: r#226
[#395 'mat2x2']: r#226
[#395 'mat2x3']: r#226
[#395 'mat2x4']: r#226
[#395 'mat3x2']: r#226
[#395 'mat3x3']: r#226
[#395 'mat3x4']: r#226
[#395 'mat4x2']: r#226
[#395 'mat4x3']: r#226
[#395 'mat4x4']: r#226
[#395 'ptr']: r#226
[#395 'sampler']: r#226
[#395 'sampler_comparison']: r#226
[#395 'texture_1d']: r#226
[#395 'texture_2d']: r#226
[#395 'texture_2d_array']: r#226
[#395 'texture_3d']: r#226
[#395 'texture_cube']: r#226
[#395 'texture_cube_array']: r#226
[#395 'texture_depth_2d']: r#226
[#395 'texture_depth_2d_array']: r#226
[#395 'texture_depth_cube']: r#226
[#395 'texture_depth_cube_array']: r#226
[#395 'texture_depth_multisampled_2d']: r#226
[#395 'texture_multisampled_2d']: r#226
[#395 'texture_storage_1d']: r#226
[#395 'texture_storage_2d']: r#226
[#395 'texture_storage_2d_array']: r#226
[#395 'texture_storage_3d']: r#226
[#395 'true']: r#226
[#395 'u32']: r#226
[#395 'vec2']: r#226
[#395 'vec3']: r#226
[#395 'vec4']: r#226
[#395 '~']: r#226
[#395 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#226
[#395 /0[fh]/]: r#226
[#395 /0[iu]?/]: r#226
[#395 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#226
[#395 /0[xX][0-9a-fA-F]+[iu]?/]: r#226
[#395 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#226
[#395 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#226
[#395 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#226
[#395 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#226
[#395 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#226
[#395 /[1-9][0-9]*[fh]/]: r#226
[#395 /[1-9][0-9]*[iu]?/]: r#226
[#396 '!']: r#227
[#396 '&']: r#227
[#396 '(']: r#227
[#396 '*']: r#227
[#396 '-']: r#227
[#396 'array']: r#227
[#396 'atomic']: r#227
[#396 'bitcast']: r#227
[#396 'bool']: r#227
[#396 'f16']: r#227
[#396 'f32']: r#227
[#396 'false']: r#227
[#396 'i32']: r#227
[#396 'mat2x2']: r#227
[#396 'mat2x3']: r#227
[#396 'mat2x4']: r#227
[#396 'mat3x2']: r#227
[#396 'mat3x3']: r#227
[#396 'mat3x4']: r#227
[#396 'mat4x2']: r#227
[#396 'mat4x3']: r#227
[#396 'mat4x4']: r#227
[#396 'ptr']: r#227
[#396 'sampler']: r#227
[#396 'sampler_comparison']: r#227
[#396 'texture_1d']: r#227
[#396 'texture_2d']: r#227
[#396 'texture_2d_array']: r#227
[#396 'texture_3d']: r#227
[#396 'texture_cube']: r#227
[#396 'texture_cube_array']: r#227
[#396 'texture_depth_2d']: r#227
[#396 'texture_depth_2d_array']: r#227
[#396 'texture_depth_cube']: r#227
[#396 'texture_depth_cube_array']: r#227
[#396 'texture_depth_multisampled_2d']: r#227
[#396 'texture_multisampled_2d']: r#227
[#396 'texture_storage_1d']: r#227
[#396 'texture_storage_2d']: r#227
[#396 'texture_storage_2d_array']: r#227
[#396 'texture_storage_3d']: r#227
[#396 'true']: r#227
[#396 'u32']: r#227
[#396 'vec2']: r#227
[#396 'vec3']: r#227
[#396 'vec4']: r#227
[#396 '~']: r#227
[#396 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#227
[#396 /0[fh]/]: r#227
[#396 /0[iu]?/]: r#227
[#396 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#227
[#396 /0[xX][0-9a-fA-F]+[iu]?/]: r#227
[#396 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#227
[#396 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#227
[#396 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#227
[#396 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#227
[#396 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#227
[#396 /[1-9][0-9]*[fh]/]: r#227
[#396 /[1-9][0-9]*[iu]?/]: r#227
[#397 '!']: r#228
[#397 '&']: r#228
[#397 '(']: r#228
[#397 '*']: r#228
[#397 '-']: r#228
[#397 'array']: r#228
[#397 'atomic']: r#228
[#397 'bitcast']: r#228
[#397 'bool']: r#228
[#397 'f16']: r#228
[#397 'f32']: r#228
[#397 'false']: r#228
[#397 'i32']: r#228
[#397 'mat2x2']: r#228
[#397 'mat2x3']: r#228
[#397 'mat2x4']: r#228
[#397 'mat3x2']: r#228
[#397 'mat3x3']: r#228
[#397 'mat3x4']: r#228
[#397 'mat4x2']: r#228
[#397 'mat4x3']: r#228
[#397 'mat4x4']: r#228
[#397 'ptr']: r#228
[#397 'sampler']: r#228
[#397 'sampler_comparison']: r#228
[#397 'texture_1d']: r#228
[#397 'texture_2d']: r#228
[#397 'texture_2d_array']: r#228
[#397 'texture_3d']: r#228
[#397 'texture_cube']: r#228
[#397 'texture_cube_array']: r#228
[#397 'texture_depth_2d']: r#228
[#397 'texture_depth_2d_array']: r#228
[#397 'texture_depth_cube']: r#228
[#397 'texture_depth_cube_array']: r#228
[#397 'texture_depth_multisampled_2d']: r#228
[#397 'texture_multisampled_2d']: r#228
[#397 'texture_storage_1d']: r#228
[#397 'texture_storage_2d']: r#228
[#397 'texture_storage_2d_array']: r#228
[#397 'texture_storage_3d']: r#228
[#397 'true']: r#228
[#397 'u32']: r#228
[#397 'vec2']: r#228
[#397 'vec3']: r#228
[#397 'vec4']: r#228
[#397 '~']: r#228
[#397 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#228
[#397 /0[fh]/]: r#228
[#397 /0[iu]?/]: r#228
[#397 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#228
[#397 /0[xX][0-9a-fA-F]+[iu]?/]: r#228
[#397 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#228
[#397 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#228
[#397 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#228
[#397 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#228
[#397 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#228
[#397 /[1-9][0-9]*[fh]/]: r#228
[#397 /[1-9][0-9]*[iu]?/]: r#228
[#398 '!']: r#229
[#398 '&']: r#229
[#398 '(']: r#229
[#398 '*']: r#229
[#398 '-']: r#229
[#398 'array']: r#229
[#398 'atomic']: r#229
[#398 'bitcast']: r#229
[#398 'bool']: r#229
[#398 'f16']: r#229
[#398 'f32']: r#229
[#398 'false']: r#229
[#398 'i32']: r#229
[#398 'mat2x2']: r#229
[#398 'mat2x3']: r#229
[#398 'mat2x4']: r#229
[#398 'mat3x2']: r#229
[#398 'mat3x3']: r#229
[#398 'mat3x4']: r#229
[#398 'mat4x2']: r#229
[#398 'mat4x3']: r#229
[#398 'mat4x4']: r#229
[#398 'ptr']: r#229
[#398 'sampler']: r#229
[#398 'sampler_comparison']: r#229
[#398 'texture_1d']: r#229
[#398 'texture_2d']: r#229
[#398 'texture_2d_array']: r#229
[#398 'texture_3d']: r#229
[#398 'texture_cube']: r#229
[#398 'texture_cube_array']: r#229
[#398 'texture_depth_2d']: r#229
[#398 'texture_depth_2d_array']: r#229
[#398 'texture_depth_cube']: r#229
[#398 'texture_depth_cube_array']: r#229
[#398 'texture_depth_multisampled_2d']: r#229
[#398 'texture_multisampled_2d']: r#229
[#398 'texture_storage_1d']: r#229
[#398 'texture_storage_2d']: r#229
[#398 'texture_storage_2d_array']: r#229
[#398 'texture_storage_3d']: r#229
[#398 'true']: r#229
[#398 'u32']: r#229
[#398 'vec2']: r#229
[#398 'vec3']: r#229
[#398 'vec4']: r#229
[#398 '~']: r#229
[#398 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#229
[#398 /0[fh]/]: r#229
[#398 /0[iu]?/]: r#229
[#398 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#229
[#398 /0[xX][0-9a-fA-F]+[iu]?/]: r#229
[#398 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#229
[#398 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#229
[#398 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#229
[#398 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#229
[#398 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#229
[#398 /[1-9][0-9]*[fh]/]: r#229
[#398 /[1-9][0-9]*[iu]?/]: r#229
[#399 '!']: r#230
[#399 '&']: r#230
[#399 '(']: r#230
[#399 '*']: r#230
[#399 '-']: r#230
[#399 'array']: r#230
[#399 'atomic']: r#230
[#399 'bitcast']: r#230
[#399 'bool']: r#230
[#399 'f16']: r#230
[#399 'f32']: r#230
[#399 'false']: r#230
[#399 'i32']: r#230
[#399 'mat2x2']: r#230
[#399 'mat2x3']: r#230
[#399 'mat2x4']: r#230
[#399 'mat3x2']: r#230
[#399 'mat3x3']: r#230
[#399 'mat3x4']: r#230
[#399 'mat4x2']: r#230
[#399 'mat4x3']: r#230
[#399 'mat4x4']: r#230
[#399 'ptr']: r#230
[#399 'sampler']: r#230
[#399 'sampler_comparison']: r#230
[#399 'texture_1d']: r#230
[#399 'texture_2d']: r#230
[#399 'texture_2d_array']: r#230
[#399 'texture_3d']: r#230
[#399 'texture_cube']: r#230
[#399 'texture_cube_array']: r#230
[#399 'texture_depth_2d']: r#230
[#399 'texture_depth_2d_array']: r#230
[#399 'texture_depth_cube']: r#230
[#399 'texture_depth_cube_array']: r#230
[#399 'texture_depth_multisampled_2d']: r#230
[#399 'texture_multisampled_2d']: r#230
[#399 'texture_storage_1d']: r#230
[#399 'texture_storage_2d']: r#230
[#399 'texture_storage_2d_array']: r#230
[#399 'texture_storage_3d']: r#230
[#399 'true']: r#230
[#399 'u32']: r#230
[#399 'vec2']: r#230
[#399 'vec3']: r#230
[#399 'vec4']: r#230
[#399 '~']: r#230
[#399 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#230
[#399 /0[fh]/]: r#230
[#399 /0[iu]?/]: r#230
[#399 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#230
[#399 /0[xX][0-9a-fA-F]+[iu]?/]: r#230
[#399 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#230
[#399 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#230
[#399 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#230
[#399 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#230
[#399 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#230
[#399 /[1-9][0-9]*[fh]/]: r#230
[#399 /[1-9][0-9]*[iu]?/]: r#230
[#400 '!']: r#231
[#400 '&']: r#231
[#400 '(']: r#231
[#400 '*']: r#231
[#400 '-']: r#231
[#400 'array']: r#231
[#400 'atomic']: r#231
[#400 'bitcast']: r#231
[#400 'bool']: r#231
[#400 'f16']: r#231
[#400 'f32']: r#231
[#400 'false']: r#231
[#400 'i32']: r#231
[#400 'mat2x2']: r#231
[#400 'mat2x3']: r#231
[#400 'mat2x4']: r#231
[#400 'mat3x2']: r#231
[#400 'mat3x3']: r#231
[#400 'mat3x4']: r#231
[#400 'mat4x2']: r#231
[#400 'mat4x3']: r#231
[#400 'mat4x4']: r#231
[#400 'ptr']: r#231
[#400 'sampler']: r#231
[#400 'sampler_comparison']: r#231
[#400 'texture_1d']: r#231
[#400 'texture_2d']: r#231
[#400 'texture_2d_array']: r#231
[#400 'texture_3d']: r#231
[#400 'texture_cube']: r#231
[#400 'texture_cube_array']: r#231
[#400 'texture_depth_2d']: r#231
[#400 'texture_depth_2d_array']: r#231
[#400 'texture_depth_cube']: r#231
[#400 'texture_depth_cube_array']: r#231
[#400 'texture_depth_multisampled_2d']: r#231
[#400 'texture_multisampled_2d']: r#231
[#400 'texture_storage_1d']: r#231
[#400 'texture_storage_2d']: r#231
[#400 'texture_storage_2d_array']: r#231
[#400 'texture_storage_3d']: r#231
[#400 'true']: r#231
[#400 'u32']: r#231
[#400 'vec2']: r#231
[#400 'vec3']: r#231
[#400 'vec4']: r#231
[#400 '~']: r#231
[#400 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#231
[#400 /0[fh]/]: r#231
[#400 /0[iu]?/]: r#231
[#400 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#231
[#400 /0[xX][0-9a-fA-F]+[iu]?/]: r#231
[#400 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#231
[#400 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#231
[#400 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#231
[#400 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#231
[#400 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#231
[#400 /[1-9][0-9]*[fh]/]: r#231
[#400 /[1-9][0-9]*[iu]?/]: r#231
[#401 '!']: r#232
[#401 '&']: r#232
[#401 '(']: r#232
[#401 '*']: r#232
[#401 '-']: r#232
[#401 'array']: r#232
[#401 'atomic']: r#232
[#401 'bitcast']: r#232
[#401 'bool']: r#232
[#401 'f16']: r#232
[#401 'f32']: r#232
[#401 'false']: r#232
[#401 'i32']: r#232
[#401 'mat2x2']: r#232
[#401 'mat2x3']: r#232
[#401 'mat2x4']: r#232
[#401 'mat3x2']: r#232
[#401 'mat3x3']: r#232
[#401 'mat3x4']: r#232
[#401 'mat4x2']: r#232
[#401 'mat4x3']: r#232
[#401 'mat4x4']: r#232
[#401 'ptr']: r#232
[#401 'sampler']: r#232
[#401 'sampler_comparison']: r#232
[#401 'texture_1d']: r#232
[#401 'texture_2d']: r#232
[#401 'texture_2d_array']: r#232
[#401 'texture_3d']: r#232
[#401 'texture_cube']: r#232
[#401 'texture_cube_array']: r#232
[#401 'texture_depth_2d']: r#232
[#401 'texture_depth_2d_array']: r#232
[#401 'texture_depth_cube']: r#232
[#401 'texture_depth_cube_array']: r#232
[#401 'texture_depth_multisampled_2d']: r#232
[#401 'texture_multisampled_2d']: r#232
[#401 'texture_storage_1d']: r#232
[#401 'texture_storage_2d']: r#232
[#401 'texture_storage_2d_array']: r#232
[#401 'texture_storage_3d']: r#232
[#401 'true']: r#232
[#401 'u32']: r#232
[#401 'vec2']: r#232
[#401 'vec3']: r#232
[#401 'vec4']: r#232
[#401 '~']: r#232
[#401 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#232
[#401 /0[fh]/]: r#232
[#401 /0[iu]?/]: r#232
[#401 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#232
[#401 /0[xX][0-9a-fA-F]+[iu]?/]: r#232
[#401 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#232
[#401 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#232
[#401 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#232
[#401 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#232
[#401 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#232
[#401 /[1-9][0-9]*[fh]/]: r#232
[#401 /[1-9][0-9]*[iu]?/]: r#232
[#402 '!']: r#233
[#402 '&']: r#233
[#402 '(']: r#233
[#402 '*']: r#233
[#402 '-']: r#233
[#402 'array']: r#233
[#402 'atomic']: r#233
[#402 'bitcast']: r#233
[#402 'bool']: r#233
[#402 'f16']: r#233
[#402 'f32']: r#233
[#402 'false']: r#233
[#402 'i32']: r#233
[#402 'mat2x2']: r#233
[#402 'mat2x3']: r#233
[#402 'mat2x4']: r#233
[#402 'mat3x2']: r#233
[#402 'mat3x3']: r#233
[#402 'mat3x4']: r#233
[#402 'mat4x2']: r#233
[#402 'mat4x3']: r#233
[#402 'mat4x4']: r#233
[#402 'ptr']: r#233
[#402 'sampler']: r#233
[#402 'sampler_comparison']: r#233
[#402 'texture_1d']: r#233
[#402 'texture_2d']: r#233
[#402 'texture_2d_array']: r#233
[#402 'texture_3d']: r#233
[#402 'texture_cube']: r#233
[#402 'texture_cube_array']: r#233
[#402 'texture_depth_2d']: r#233
[#402 'texture_depth_2d_array']: r#233
[#402 'texture_depth_cube']: r#233
[#402 'texture_depth_cube_array']: r#233
[#402 'texture_depth_multisampled_2d']: r#233
[#402 'texture_multisampled_2d']: r#233
[#402 'texture_storage_1d']: r#233
[#402 'texture_storage_2d']: r#233
[#402 'texture_storage_2d_array']: r#233
[#402 'texture_storage_3d']: r#233
[#402 'true']: r#233
[#402 'u32']: r#233
[#402 'vec2']: r#233
[#402 'vec3']: r#233
[#402 'vec4']: r#233
[#402 '~']: r#233
[#402 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#233
[#402 /0[fh]/]: r#233
[#402 /0[iu]?/]: r#233
[#402 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#233
[#402 /0[xX][0-9a-fA-F]+[iu]?/]: r#233
[#402 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#233
[#402 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#233
[#402 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#233
[#402 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#233
[#402 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#233
[#402 /[1-9][0-9]*[fh]/]: r#233
[#402 /[1-9][0-9]*[iu]?/]: r#233
[#403 '{']: s#172
[#404 '=']: s#518
[#405 '=']: s#517
[#406 '!']: s#63
[#406 '&']: s#66
[#406 '(']: s#78
[#406 '*']: s#65
[#406 '-']: s#62
[#406 'array']: s#82
[#406 'atomic']: s#96
[#406 'bitcast']: s#72
[#406 'bool']: s#89
[#406 'f16']: s#91
[#406 'f32']: s#90
[#406 'false']: s#88
[#406 'i32']: s#92
[#406 'mat2x2']: s#101
[#406 'mat2x3']: s#102
[#406 'mat2x4']: s#103
[#406 'mat3x2']: s#104
[#406 'mat3x3']: s#105
[#406 'mat3x4']: s#106
[#406 'mat4x2']: s#107
[#406 'mat4x3']: s#108
[#406 'mat4x4']: s#109
[#406 'ptr']: s#94
[#406 'sampler']: s#126
[#406 'sampler_comparison']: s#127
[#406 'texture_1d']: s#133
[#406 'texture_2d']: s#134
[#406 'texture_2d_array']: s#135
[#406 'texture_3d']: s#136
[#406 'texture_cube']: s#137
[#406 'texture_cube_array']: s#138
[#406 'texture_depth_2d']: s#128
[#406 'texture_depth_2d_array']: s#129
[#406 'texture_depth_cube']: s#130
[#406 'texture_depth_cube_array']: s#131
[#406 'texture_depth_multisampled_2d']: s#132
[#406 'texture_multisampled_2d']: s#139
[#406 'texture_storage_1d']: s#140
[#406 'texture_storage_2d']: s#141
[#406 'texture_storage_2d_array']: s#142
[#406 'texture_storage_3d']: s#143
[#406 'true']: s#87
[#406 'u32']: s#93
[#406 'vec2']: s#98
[#406 'vec3']: s#99
[#406 'vec4']: s#100
[#406 '~']: s#64
[#406 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#406 /0[fh]/]: s#113
[#406 /0[iu]?/]: s#110
[#406 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#406 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#406 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#406 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#406 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#406 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#406 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#406 /[1-9][0-9]*[fh]/]: s#114
[#406 /[1-9][0-9]*[iu]?/]: s#111
[#407 ')']: r#234
[#407 ';']: r#234
[#408 '{']: s#172
[#409 '&']: s#335
[#409 '(']: s#336
[#409 '*']: s#334
[#409 '_']: s#332
[#409 'array']: s#82
[#409 'atomic']: s#96
[#409 'bool']: s#89
[#409 'const']: s#323
[#409 'f16']: s#91
[#409 'f32']: s#90
[#409 'i32']: s#92
[#409 'let']: s#322
[#409 'mat2x2']: s#101
[#409 'mat2x3']: s#102
[#409 'mat2x4']: s#103
[#409 'mat3x2']: s#104
[#409 'mat3x3']: s#105
[#409 'mat3x4']: s#106
[#409 'mat4x2']: s#107
[#409 'mat4x3']: s#108
[#409 'mat4x4']: s#109
[#409 'ptr']: s#94
[#409 'sampler']: s#126
[#409 'sampler_comparison']: s#127
[#409 'texture_1d']: s#133
[#409 'texture_2d']: s#134
[#409 'texture_2d_array']: s#135
[#409 'texture_3d']: s#136
[#409 'texture_cube']: s#137
[#409 'texture_cube_array']: s#138
[#409 'texture_depth_2d']: s#128
[#409 'texture_depth_2d_array']: s#129
[#409 'texture_depth_cube']: s#130
[#409 'texture_depth_cube_array']: s#131
[#409 'texture_depth_multisampled_2d']: s#132
[#409 'texture_multisampled_2d']: s#139
[#409 'texture_storage_1d']: s#140
[#409 'texture_storage_2d']: s#141
[#409 'texture_storage_2d_array']: s#142
[#409 'texture_storage_3d']: s#143
[#409 'u32']: s#93
[#409 'var']: s#152
[#409 'vec2']: s#98
[#409 'vec3']: s#99
[#409 'vec4']: s#100
[#409 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#410 '&']: s#335
[#410 '(']: s#336
[#410 '*']: s#334
[#410 ';']: s#299
[#410 '_']: s#332
[#410 'array']: s#82
[#410 'atomic']: s#96
[#410 'bool']: s#89
[#410 'break']: s#324
[#410 'const']: s#323
[#410 'const_assert']: s#25
[#410 'continue']: s#325
[#410 'discard']: s#310
[#410 'f16']: s#91
[#410 'f32']: s#90
[#410 'for']: s#318
[#410 'i32']: s#92
[#410 'if']: s#329
[#410 'let']: s#322
[#410 'loop']: s#317
[#410 'mat2x2']: s#101
[#410 'mat2x3']: s#102
[#410 'mat2x4']: s#103
[#410 'mat3x2']: s#104
[#410 'mat3x3']: s#105
[#410 'mat3x4']: s#106
[#410 'mat4x2']: s#107
[#410 'mat4x3']: s#108
[#410 'mat4x4']: s#109
[#410 'ptr']: s#94
[#410 'return']: s#314
[#410 'sampler']: s#126
[#410 'sampler_comparison']: s#127
[#410 'switch']: s#316
[#410 'texture_1d']: s#133
[#410 'texture_2d']: s#134
[#410 'texture_2d_array']: s#135
[#410 'texture_3d']: s#136
[#410 'texture_cube']: s#137
[#410 'texture_cube_array']: s#138
[#410 'texture_depth_2d']: s#128
[#410 'texture_depth_2d_array']: s#129
[#410 'texture_depth_cube']: s#130
[#410 'texture_depth_cube_array']: s#131
[#410 'texture_depth_multisampled_2d']: s#132
[#410 'texture_multisampled_2d']: s#139
[#410 'texture_storage_1d']: s#140
[#410 'texture_storage_2d']: s#141
[#410 'texture_storage_2d_array']: s#142
[#410 'texture_storage_3d']: s#143
[#410 'u32']: s#93
[#410 'var']: s#152
[#410 'vec2']: s#98
[#410 'vec3']: s#99
[#410 'vec4']: s#100
[#410 'while']: s#319
[#410 '{']: s#172
[#410 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#411 '{']: s#505
[#412 'else']: s#504
[#413 '&']: r#235
[#413 '(']: r#235
[#413 '*']: r#235
[#413 ';']: r#235
[#413 '_']: r#235
[#413 'array']: r#235
[#413 'atomic']: r#235
[#413 'bool']: r#235
[#413 'break']: r#235
[#413 'const']: r#235
[#413 'const_assert']: r#235
[#413 'continue']: r#235
[#413 'continuing']: r#235
[#413 'discard']: r#235
[#413 'else']: r#235
[#413 'f16']: r#235
[#413 'f32']: r#235
[#413 'for']: r#235
[#413 'i32']: r#235
[#413 'if']: r#235
[#413 'let']: r#235
[#413 'loop']: r#235
[#413 'mat2x2']: r#235
[#413 'mat2x3']: r#235
[#413 'mat2x4']: r#235
[#413 'mat3x2']: r#235
[#413 'mat3x3']: r#235
[#413 'mat3x4']: r#235
[#413 'mat4x2']: r#235
[#413 'mat4x3']: r#235
[#413 'mat4x4']: r#235
[#413 'ptr']: r#235
[#413 'return']: r#235
[#413 'sampler']: r#235
[#413 'sampler_comparison']: r#235
[#413 'switch']: r#235
[#413 'texture_1d']: r#235
[#413 'texture_2d']: r#235
[#413 'texture_2d_array']: r#235
[#413 'texture_3d']: r#235
[#413 'texture_cube']: r#235
[#413 'texture_cube_array']: r#235
[#413 'texture_depth_2d']: r#235
[#413 'texture_depth_2d_array']: r#235
[#413 'texture_depth_cube']: r#235
[#413 'texture_depth_cube_array']: r#235
[#413 'texture_depth_multisampled_2d']: r#235
[#413 'texture_multisampled_2d']: r#235
[#413 'texture_storage_1d']: r#235
[#413 'texture_storage_2d']: r#235
[#413 'texture_storage_2d_array']: r#235
[#413 'texture_storage_3d']: r#235
[#413 'u32']: r#235
[#413 'var']: r#235
[#413 'vec2']: r#235
[#413 'vec3']: r#235
[#413 'vec4']: r#235
[#413 'while']: r#235
[#413 '{']: r#235
[#413 '}']: r#235
[#413 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#235
[#414 'else']: s#415
[#415 'if']: s#500
[#416 ';']: r#236
[#417 ';']: r#237
[#418 '&']: r#238
[#418 '(']: r#238
[#418 '*']: r#238
[#418 ';']: r#238
[#418 '_']: r#238
[#418 'array']: r#238
[#418 'atomic']: r#238
[#418 'bool']: r#238
[#418 'break']: r#238
[#418 'const']: r#238
[#418 'const_assert']: r#238
[#418 'continue']: r#238
[#418 'continuing']: r#238
[#418 'discard']: r#238
[#418 'f16']: r#238
[#418 'f32']: r#238
[#418 'for']: r#238
[#418 'i32']: r#238
[#418 'if']: r#238
[#418 'let']: r#238
[#418 'loop']: r#238
[#418 'mat2x2']: r#238
[#418 'mat2x3']: r#238
[#418 'mat2x4']: r#238
[#418 'mat3x2']: r#238
[#418 'mat3x3']: r#238
[#418 'mat3x4']: r#238
[#418 'mat4x2']: r#238
[#418 'mat4x3']: r#238
[#418 'mat4x4']: r#238
[#418 'ptr']: r#238
[#418 'return']: r#238
[#418 'sampler']: r#238
[#418 'sampler_comparison']: r#238
[#418 'switch']: r#238
[#418 'texture_1d']: r#238
[#418 'texture_2d']: r#238
[#418 'texture_2d_array']: r#238
[#418 'texture_3d']: r#238
[#418 'texture_cube']: r#238
[#418 'texture_cube_array']: r#238
[#418 'texture_depth_2d']: r#238
[#418 'texture_depth_2d_array']: r#238
[#418 'texture_depth_cube']: r#238
[#418 'texture_depth_cube_array']: r#238
[#418 'texture_depth_multisampled_2d']: r#238
[#418 'texture_multisampled_2d']: r#238
[#418 'texture_storage_1d']: r#238
[#418 'texture_storage_2d']: r#238
[#418 'texture_storage_2d_array']: r#238
[#418 'texture_storage_3d']: r#238
[#418 'u32']: r#238
[#418 'var']: r#238
[#418 'vec2']: r#238
[#418 'vec3']: r#238
[#418 'vec4']: r#238
[#418 'while']: r#238
[#418 '{']: r#238
[#418 '}']: r#238
[#418 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#238
[#419 '&']: r#239
[#419 '(']: r#239
[#419 '*']: r#239
[#419 ';']: r#239
[#419 '_']: r#239
[#419 'array']: r#239
[#419 'atomic']: r#239
[#419 'bool']: r#239
[#419 'break']: r#239
[#419 'const']: r#239
[#419 'const_assert']: r#239
[#419 'continue']: r#239
[#419 'continuing']: r#239
[#419 'discard']: r#239
[#419 'f16']: r#239
[#419 'f32']: r#239
[#419 'for']: r#239
[#419 'i32']: r#239
[#419 'if']: r#239
[#419 'let']: r#239
[#419 'loop']: r#239
[#419 'mat2x2']: r#239
[#419 'mat2x3']: r#239
[#419 'mat2x4']: r#239
[#419 'mat3x2']: r#239
[#419 'mat3x3']: r#239
[#419 'mat3x4']: r#239
[#419 'mat4x2']: r#239
[#419 'mat4x3']: r#239
[#419 'mat4x4']: r#239
[#419 'ptr']: r#239
[#419 'return']: r#239
[#419 'sampler']: r#239
[#419 'sampler_comparison']: r#239
[#419 'switch']: r#239
[#419 'texture_1d']: r#239
[#419 'texture_2d']: r#239
[#419 'texture_2d_array']: r#239
[#419 'texture_3d']: r#239
[#419 'texture_cube']: r#239
[#419 'texture_cube_array']: r#239
[#419 'texture_depth_2d']: r#239
[#419 'texture_depth_2d_array']: r#239
[#419 'texture_depth_cube']: r#239
[#419 'texture_depth_cube_array']: r#239
[#419 'texture_depth_multisampled_2d']: r#239
[#419 'texture_multisampled_2d']: r#239
[#419 'texture_storage_1d']: r#239
[#419 'texture_storage_2d']: r#239
[#419 'texture_storage_2d_array']: r#239
[#419 'texture_storage_3d']: r#239
[#419 'u32']: r#239
[#419 'var']: r#239
[#419 'vec2']: r#239
[#419 'vec3']: r#239
[#419 'vec4']: r#239
[#419 'while']: r#239
[#419 '{']: r#239
[#419 '}']: r#239
[#419 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#239
[#420 '&']: r#240
[#420 '(']: r#240
[#420 '*']: r#240
[#420 ';']: r#240
[#420 '_']: r#240
[#420 'array']: r#240
[#420 'atomic']: r#240
[#420 'bool']: r#240
[#420 'break']: r#240
[#420 'const']: r#240
[#420 'const_assert']: r#240
[#420 'continue']: r#240
[#420 'continuing']: r#240
[#420 'discard']: r#240
[#420 'f16']: r#240
[#420 'f32']: r#240
[#420 'for']: r#240
[#420 'i32']: r#240
[#420 'if']: r#240
[#420 'let']: r#240
[#420 'loop']: r#240
[#420 'mat2x2']: r#240
[#420 'mat2x3']: r#240
[#420 'mat2x4']: r#240
[#420 'mat3x2']: r#240
[#420 'mat3x3']: r#240
[#420 'mat3x4']: r#240
[#420 'mat4x2']: r#240
[#420 'mat4x3']: r#240
[#420 'mat4x4']: r#240
[#420 'ptr']: r#240
[#420 'return']: r#240
[#420 'sampler']: r#240
[#420 'sampler_comparison']: r#240
[#420 'switch']: r#240
[#420 'texture_1d']: r#240
[#420 'texture_2d']: r#240
[#420 'texture_2d_array']: r#240
[#420 'texture_3d']: r#240
[#420 'texture_cube']: r#240
[#420 'texture_cube_array']: r#240
[#420 'texture_depth_2d']: r#240
[#420 'texture_depth_2d_array']: r#240
[#420 'texture_depth_cube']: r#240
[#420 'texture_depth_cube_array']: r#240
[#420 'texture_depth_multisampled_2d']: r#240
[#420 'texture_multisampled_2d']: r#240
[#420 'texture_storage_1d']: r#240
[#420 'texture_storage_2d']: r#240
[#420 'texture_storage_2d_array']: r#240
[#420 'texture_storage_3d']: r#240
[#420 'u32']: r#240
[#420 'var']: r#240
[#420 'vec2']: r#240
[#420 'vec3']: r#240
[#420 'vec4']: r#240
[#420 'while']: r#240
[#420 '{']: r#240
[#420 '}']: r#240
[#420 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#240
[#421 '&']: r#241
[#421 '(']: r#241
[#421 '*']: r#241
[#421 ';']: r#241
[#421 '_']: r#241
[#421 'array']: r#241
[#421 'atomic']: r#241
[#421 'bool']: r#241
[#421 'break']: r#241
[#421 'const']: r#241
[#421 'const_assert']: r#241
[#421 'continue']: r#241
[#421 'continuing']: r#241
[#421 'discard']: r#241
[#421 'f16']: r#241
[#421 'f32']: r#241
[#421 'for']: r#241
[#421 'i32']: r#241
[#421 'if']: r#241
[#421 'let']: r#241
[#421 'loop']: r#241
[#421 'mat2x2']: r#241
[#421 'mat2x3']: r#241
[#421 'mat2x4']: r#241
[#421 'mat3x2']: r#241
[#421 'mat3x3']: r#241
[#421 'mat3x4']: r#241
[#421 'mat4x2']: r#241
[#421 'mat4x3']: r#241
[#421 'mat4x4']: r#241
[#421 'ptr']: r#241
[#421 'return']: r#241
[#421 'sampler']: r#241
[#421 'sampler_comparison']: r#241
[#421 'switch']: r#241
[#421 'texture_1d']: r#241
[#421 'texture_2d']: r#241
[#421 'texture_2d_array']: r#241
[#421 'texture_3d']: r#241
[#421 'texture_cube']: r#241
[#421 'texture_cube_array']: r#241
[#421 'texture_depth_2d']: r#241
[#421 'texture_depth_2d_array']: r#241
[#421 'texture_depth_cube']: r#241
[#421 'texture_depth_cube_array']: r#241
[#421 'texture_depth_multisampled_2d']: r#241
[#421 'texture_multisampled_2d']: r#241
[#421 'texture_storage_1d']: r#241
[#421 'texture_storage_2d']: r#241
[#421 'texture_storage_2d_array']: r#241
[#421 'texture_storage_3d']: r#241
[#421 'u32']: r#241
[#421 'var']: r#241
[#421 'vec2']: r#241
[#421 'vec3']: r#241
[#421 'vec4']: r#241
[#421 'while']: r#241
[#421 '{']: r#241
[#421 '}']: r#241
[#421 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#241
[#422 '&']: r#242
[#422 '(']: r#242
[#422 '*']: r#242
[#422 ';']: r#242
[#422 '_']: r#242
[#422 'array']: r#242
[#422 'atomic']: r#242
[#422 'bool']: r#242
[#422 'break']: r#242
[#422 'const']: r#242
[#422 'const_assert']: r#242
[#422 'continue']: r#242
[#422 'continuing']: r#242
[#422 'discard']: r#242
[#422 'f16']: r#242
[#422 'f32']: r#242
[#422 'for']: r#242
[#422 'i32']: r#242
[#422 'if']: r#242
[#422 'let']: r#242
[#422 'loop']: r#242
[#422 'mat2x2']: r#242
[#422 'mat2x3']: r#242
[#422 'mat2x4']: r#242
[#422 'mat3x2']: r#242
[#422 'mat3x3']: r#242
[#422 'mat3x4']: r#242
[#422 'mat4x2']: r#242
[#422 'mat4x3']: r#242
[#422 'mat4x4']: r#242
[#422 'ptr']: r#242
[#422 'return']: r#242
[#422 'sampler']: r#242
[#422 'sampler_comparison']: r#242
[#422 'switch']: r#242
[#422 'texture_1d']: r#242
[#422 'texture_2d']: r#242
[#422 'texture_2d_array']: r#242
[#422 'texture_3d']: r#242
[#422 'texture_cube']: r#242
[#422 'texture_cube_array']: r#242
[#422 'texture_depth_2d']: r#242
[#422 'texture_depth_2d_array']: r#242
[#422 'texture_depth_cube']: r#242
[#422 'texture_depth_cube_array']: r#242
[#422 'texture_depth_multisampled_2d']: r#242
[#422 'texture_multisampled_2d']: r#242
[#422 'texture_storage_1d']: r#242
[#422 'texture_storage_2d']: r#242
[#422 'texture_storage_2d_array']: r#242
[#422 'texture_storage_3d']: r#242
[#422 'u32']: r#242
[#422 'var']: r#242
[#422 'vec2']: r#242
[#422 'vec3']: r#242
[#422 'vec4']: r#242
[#422 'while']: r#242
[#422 '{']: r#242
[#422 '}']: r#242
[#422 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#242
[#423 '&']: r#243
[#423 '(']: r#243
[#423 '*']: r#243
[#423 ';']: r#243
[#423 '_']: r#243
[#423 'array']: r#243
[#423 'atomic']: r#243
[#423 'bool']: r#243
[#423 'break']: r#243
[#423 'const']: r#243
[#423 'const_assert']: r#243
[#423 'continue']: r#243
[#423 'continuing']: r#243
[#423 'discard']: r#243
[#423 'f16']: r#243
[#423 'f32']: r#243
[#423 'for']: r#243
[#423 'i32']: r#243
[#423 'if']: r#243
[#423 'let']: r#243
[#423 'loop']: r#243
[#423 'mat2x2']: r#243
[#423 'mat2x3']: r#243
[#423 'mat2x4']: r#243
[#423 'mat3x2']: r#243
[#423 'mat3x3']: r#243
[#423 'mat3x4']: r#243
[#423 'mat4x2']: r#243
[#423 'mat4x3']: r#243
[#423 'mat4x4']: r#243
[#423 'ptr']: r#243
[#423 'return']: r#243
[#423 'sampler']: r#243
[#423 'sampler_comparison']: r#243
[#423 'switch']: r#243
[#423 'texture_1d']: r#243
[#423 'texture_2d']: r#243
[#423 'texture_2d_array']: r#243
[#423 'texture_3d']: r#243
[#423 'texture_cube']: r#243
[#423 'texture_cube_array']: r#243
[#423 'texture_depth_2d']: r#243
[#423 'texture_depth_2d_array']: r#243
[#423 'texture_depth_cube']: r#243
[#423 'texture_depth_cube_array']: r#243
[#423 'texture_depth_multisampled_2d']: r#243
[#423 'texture_multisampled_2d']: r#243
[#423 'texture_storage_1d']: r#243
[#423 'texture_storage_2d']: r#243
[#423 'texture_storage_2d_array']: r#243
[#423 'texture_storage_3d']: r#243
[#423 'u32']: r#243
[#423 'var']: r#243
[#423 'vec2']: r#243
[#423 'vec3']: r#243
[#423 'vec4']: r#243
[#423 'while']: r#243
[#423 '{']: r#243
[#423 '}']: r#243
[#423 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#243
[#424 '&']: r#244
[#424 '(']: r#244
[#424 '*']: r#244
[#424 ';']: r#244
[#424 '_']: r#244
[#424 'array']: r#244
[#424 'atomic']: r#244
[#424 'bool']: r#244
[#424 'break']: r#244
[#424 'const']: r#244
[#424 'const_assert']: r#244
[#424 'continue']: r#244
[#424 'continuing']: r#244
[#424 'discard']: r#244
[#424 'f16']: r#244
[#424 'f32']: r#244
[#424 'for']: r#244
[#424 'i32']: r#244
[#424 'if']: r#244
[#424 'let']: r#244
[#424 'loop']: r#244
[#424 'mat2x2']: r#244
[#424 'mat2x3']: r#244
[#424 'mat2x4']: r#244
[#424 'mat3x2']: r#244
[#424 'mat3x3']: r#244
[#424 'mat3x4']: r#244
[#424 'mat4x2']: r#244
[#424 'mat4x3']: r#244
[#424 'mat4x4']: r#244
[#424 'ptr']: r#244
[#424 'return']: r#244
[#424 'sampler']: r#244
[#424 'sampler_comparison']: r#244
[#424 'switch']: r#244
[#424 'texture_1d']: r#244
[#424 'texture_2d']: r#244
[#424 'texture_2d_array']: r#244
[#424 'texture_3d']: r#244
[#424 'texture_cube']: r#244
[#424 'texture_cube_array']: r#244
[#424 'texture_depth_2d']: r#244
[#424 'texture_depth_2d_array']: r#244
[#424 'texture_depth_cube']: r#244
[#424 'texture_depth_cube_array']: r#244
[#424 'texture_depth_multisampled_2d']: r#244
[#424 'texture_multisampled_2d']: r#244
[#424 'texture_storage_1d']: r#244
[#424 'texture_storage_2d']: r#244
[#424 'texture_storage_2d_array']: r#244
[#424 'texture_storage_3d']: r#244
[#424 'u32']: r#244
[#424 'var']: r#244
[#424 'vec2']: r#244
[#424 'vec3']: r#244
[#424 'vec4']: r#244
[#424 'while']: r#244
[#424 '{']: r#244
[#424 '}']: r#244
[#424 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#244
[#425 '&']: r#245
[#425 '(']: r#245
[#425 '*']: r#245
[#425 ';']: r#245
[#425 '_']: r#245
[#425 'array']: r#245
[#425 'atomic']: r#245
[#425 'bool']: r#245
[#425 'break']: r#245
[#425 'const']: r#245
[#425 'const_assert']: r#245
[#425 'continue']: r#245
[#425 'continuing']: r#245
[#425 'discard']: r#245
[#425 'f16']: r#245
[#425 'f32']: r#245
[#425 'for']: r#245
[#425 'i32']: r#245
[#425 'if']: r#245
[#425 'let']: r#245
[#425 'loop']: r#245
[#425 'mat2x2']: r#245
[#425 'mat2x3']: r#245
[#425 'mat2x4']: r#245
[#425 'mat3x2']: r#245
[#425 'mat3x3']: r#245
[#425 'mat3x4']: r#245
[#425 'mat4x2']: r#245
[#425 'mat4x3']: r#245
[#425 'mat4x4']: r#245
[#425 'ptr']: r#245
[#425 'return']: r#245
[#425 'sampler']: r#245
[#425 'sampler_comparison']: r#245
[#425 'switch']: r#245
[#425 'texture_1d']: r#245
[#425 'texture_2d']: r#245
[#425 'texture_2d_array']: r#245
[#425 'texture_3d']: r#245
[#425 'texture_cube']: r#245
[#425 'texture_cube_array']: r#245
[#425 'texture_depth_2d']: r#245
[#425 'texture_depth_2d_array']: r#245
[#425 'texture_depth_cube']: r#245
[#425 'texture_depth_cube_array']: r#245
[#425 'texture_depth_multisampled_2d']: r#245
[#425 'texture_multisampled_2d']: r#245
[#425 'texture_storage_1d']: r#245
[#425 'texture_storage_2d']: r#245
[#425 'texture_storage_2d_array']: r#245
[#425 'texture_storage_3d']: r#245
[#425 'u32']: r#245
[#425 'var']: r#245
[#425 'vec2']: r#245
[#425 'vec3']: r#245
[#425 'vec4']: r#245
[#425 'while']: r#245
[#425 '{']: r#245
[#425 '}']: r#245
[#425 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#245
[#426 '}']: r#246
[#427 '&']: r#247
[#427 '(']: r#247
[#427 '*']: r#247
[#427 ';']: r#247
[#427 '@']: r#247
[#427 '_']: r#247
[#427 'alias']: r#247
[#427 'array']: r#247
[#427 'atomic']: r#247
[#427 'bool']: r#247
[#427 'break']: r#247
[#427 'case']: r#247
[#427 'const']: r#247
[#427 'const_assert']: r#247
[#427 'continue']: r#247
[#427 'continuing']: r#247
[#427 'default']: r#247
[#427 'discard']: r#247
[#427 'else']: r#247
[#427 'f16']: r#247
[#427 'f32']: r#247
[#427 'fn']: r#247
[#427 'for']: r#247
[#427 'i32']: r#247
[#427 'if']: r#247
[#427 'let']: r#247
[#427 'loop']: r#247
[#427 'mat2x2']: r#247
[#427 'mat2x3']: r#247
[#427 'mat2x4']: r#247
[#427 'mat3x2']: r#247
[#427 'mat3x3']: r#247
[#427 'mat3x4']: r#247
[#427 'mat4x2']: r#247
[#427 'mat4x3']: r#247
[#427 'mat4x4']: r#247
[#427 'override']: r#247
[#427 'ptr']: r#247
[#427 'return']: r#247
[#427 'sampler']: r#247
[#427 'sampler_comparison']: r#247
[#427 'struct']: r#247
[#427 'switch']: r#247
[#427 'texture_1d']: r#247
[#427 'texture_2d']: r#247
[#427 'texture_2d_array']: r#247
[#427 'texture_3d']: r#247
[#427 'texture_cube']: r#247
[#427 'texture_cube_array']: r#247
[#427 'texture_depth_2d']: r#247
[#427 'texture_depth_2d_array']: r#247
[#427 'texture_depth_cube']: r#247
[#427 'texture_depth_cube_array']: r#247
[#427 'texture_depth_multisampled_2d']: r#247
[#427 'texture_multisampled_2d']: r#247
[#427 'texture_storage_1d']: r#247
[#427 'texture_storage_2d']: r#247
[#427 'texture_storage_2d_array']: r#247
[#427 'texture_storage_3d']: r#247
[#427 'u32']: r#247
[#427 'var']: r#247
[#427 'vec2']: r#247
[#427 'vec3']: r#247
[#427 'vec4']: r#247
[#427 'while']: r#247
[#427 '{']: r#247
[#427 '}']: r#247
[#427 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#247
[#427 EndOfText]: r#247
[#428 ',']: s#499
[#429 ',']: r#248
[#430 ',']: r#249
[#431 ',']: r#250
[#432 ',']: r#251
[#433 ',']: r#252
[#434 ',']: r#253
[#435 ',']: r#254
[#436 ',']: r#255
[#437 ',']: r#256
[#438 ',']: r#257
[#439 ',']: r#258
[#440 ',']: r#259
[#441 ',']: r#260
[#442 ',']: r#261
[#443 ',']: r#262
[#444 ',']: r#263
[#445 ',']: r#264
[#446 /\u200B_template_args_end/]: s#486
[#447 /\u200B_template_args_end/]: s#486
[#448 /\u200B_template_args_end/]: s#486
[#449 ',']: s#495
[#450 ',']: s#494
[#451 /\u200B_template_args_end/]: s#486
[#452 /\u200B_template_args_end/]: s#486
[#453 ',']: s#490
[#454 ')']: r#265
[#454 ',']: r#265
[#455 ',']: s#456
[#456 '!']: s#63
[#456 '&']: s#66
[#456 '(']: s#78
[#456 '*']: s#65
[#456 '-']: s#62
[#456 'array']: s#82
[#456 'atomic']: s#96
[#456 'bitcast']: s#72
[#456 'bool']: s#89
[#456 'f16']: s#91
[#456 'f32']: s#90
[#456 'false']: s#88
[#456 'i32']: s#92
[#456 'mat2x2']: s#101
[#456 'mat2x3']: s#102
[#456 'mat2x4']: s#103
[#456 'mat3x2']: s#104
[#456 'mat3x3']: s#105
[#456 'mat3x4']: s#106
[#456 'mat4x2']: s#107
[#456 'mat4x3']: s#108
[#456 'mat4x4']: s#109
[#456 'ptr']: s#94
[#456 'sampler']: s#126
[#456 'sampler_comparison']: s#127
[#456 'texture_1d']: s#133
[#456 'texture_2d']: s#134
[#456 'texture_2d_array']: s#135
[#456 'texture_3d']: s#136
[#456 'texture_cube']: s#137
[#456 'texture_cube_array']: s#138
[#456 'texture_depth_2d']: s#128
[#456 'texture_depth_2d_array']: s#129
[#456 'texture_depth_cube']: s#130
[#456 'texture_depth_cube_array']: s#131
[#456 'texture_depth_multisampled_2d']: s#132
[#456 'texture_multisampled_2d']: s#139
[#456 'texture_storage_1d']: s#140
[#456 'texture_storage_2d']: s#141
[#456 'texture_storage_2d_array']: s#142
[#456 'texture_storage_3d']: s#143
[#456 'true']: s#87
[#456 'u32']: s#93
[#456 'vec2']: s#98
[#456 'vec3']: s#99
[#456 'vec4']: s#100
[#456 '~']: s#64
[#456 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#456 /0[fh]/]: s#113
[#456 /0[iu]?/]: s#110
[#456 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#456 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#456 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#456 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#456 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#456 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#456 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#456 /[1-9][0-9]*[fh]/]: s#114
[#456 /[1-9][0-9]*[iu]?/]: s#111
[#457 '!=']: r#266
[#457 '%']: r#266
[#457 '&&']: r#266
[#457 '&']: r#266
[#457 ')']: r#266
[#457 '*']: r#266
[#457 '+']: r#266
[#457 ',']: r#266
[#457 '-']: r#266
[#457 '.']: r#266
[#457 '/']: r#266
[#457 ':']: r#266
[#457 ';']: r#266
[#457 '==']: r#266
[#457 '[']: r#266
[#457 ']']: r#266
[#457 '^']: r#266
[#457 '{']: r#266
[#457 '|']: r#266
[#457 '||']: r#266
[#457 /\u200B_greater_than/]: r#266
[#457 /\u200B_greater_than_equal/]: r#266
[#457 /\u200B_less_than/]: r#266
[#457 /\u200B_less_than_equal/]: r#266
[#457 /\u200B_shift_left/]: r#266
[#457 /\u200B_shift_right/]: r#266
[#457 /\u200B_template_args_end/]: r#266
[#458 /\u200B_template_args_end/]: s#486
[#459 '.']: s#188
[#459 '[']: s#187
[#460 '!=']: r#267
[#460 '%']: r#267
[#460 '%=']: r#267
[#460 '&&']: r#267
[#460 '&']: r#267
[#460 '&=']: r#267
[#460 ')']: r#267
[#460 '*']: r#267
[#460 '*=']: r#267
[#460 '+']: r#267
[#460 '++']: r#267
[#460 '+=']: r#267
[#460 ',']: r#267
[#460 '-']: r#267
[#460 '--']: r#267
[#460 '-=']: r#267
[#460 '/']: r#267
[#460 '/=']: r#267
[#460 ':']: r#267
[#460 ';']: r#267
[#460 '=']: r#267
[#460 '==']: r#267
[#460 ']']: r#267
[#460 '^']: r#267
[#460 '^=']: r#267
[#460 '{']: r#267
[#460 '|']: r#267
[#460 '|=']: r#267
[#460 '||']: r#267
[#460 /\u200B_greater_than/]: r#267
[#460 /\u200B_greater_than_equal/]: r#267
[#460 /\u200B_less_than/]: r#267
[#460 /\u200B_less_than_equal/]: r#267
[#460 /\u200B_shift_left/]: r#267
[#460 /\u200B_shift_left_assign/]: r#267
[#460 /\u200B_shift_right/]: r#267
[#460 /\u200B_shift_right_assign/]: r#267
[#460 /\u200B_template_args_end/]: r#267
[#461 '!=']: r#268
[#461 '%']: r#268
[#461 '%=']: r#268
[#461 '&&']: r#268
[#461 '&']: r#268
[#461 '&=']: r#268
[#461 ')']: r#268
[#461 '*']: r#268
[#461 '*=']: r#268
[#461 '+']: r#268
[#461 '++']: r#268
[#461 '+=']: r#268
[#461 ',']: r#268
[#461 '-']: r#268
[#461 '--']: r#268
[#461 '-=']: r#268
[#461 '/']: r#268
[#461 '/=']: r#268
[#461 ':']: r#268
[#461 ';']: r#268
[#461 '=']: r#268
[#461 '==']: r#268
[#461 ']']: r#268
[#461 '^']: r#268
[#461 '^=']: r#268
[#461 '{']: r#268
[#461 '|']: r#268
[#461 '|=']: r#268
[#461 '||']: r#268
[#461 /\u200B_greater_than/]: r#268
[#461 /\u200B_greater_than_equal/]: r#268
[#461 /\u200B_less_than/]: r#268
[#461 /\u200B_less_than_equal/]: r#268
[#461 /\u200B_shift_left/]: r#268
[#461 /\u200B_shift_left_assign/]: r#268
[#461 /\u200B_shift_right/]: r#268
[#461 /\u200B_shift_right_assign/]: r#268
[#461 /\u200B_template_args_end/]: r#268
[#462 '!=']: r#269
[#462 '%']: r#269
[#462 '%=']: r#269
[#462 '&&']: r#269
[#462 '&']: r#269
[#462 '&=']: r#269
[#462 ')']: r#269
[#462 '*']: r#269
[#462 '*=']: r#269
[#462 '+']: r#269
[#462 '++']: r#269
[#462 '+=']: r#269
[#462 ',']: r#269
[#462 '-']: r#269
[#462 '--']: r#269
[#462 '-=']: r#269
[#462 '/']: r#269
[#462 '/=']: r#269
[#462 ':']: r#269
[#462 ';']: r#269
[#462 '=']: r#269
[#462 '==']: r#269
[#462 ']']: r#269
[#462 '^']: r#269
[#462 '^=']: r#269
[#462 '{']: r#269
[#462 '|']: r#269
[#462 '|=']: r#269
[#462 '||']: r#269
[#462 /\u200B_greater_than/]: r#269
[#462 /\u200B_greater_than_equal/]: r#269
[#462 /\u200B_less_than/]: r#269
[#462 /\u200B_less_than_equal/]: r#269
[#462 /\u200B_shift_left/]: r#269
[#462 /\u200B_shift_left_assign/]: r#269
[#462 /\u200B_shift_right/]: r#269
[#462 /\u200B_shift_right_assign/]: r#269
[#462 /\u200B_template_args_end/]: r#269
[#463 '!=']: r#270
[#463 '%']: r#270
[#463 '%=']: r#270
[#463 '&&']: r#270
[#463 '&']: r#270
[#463 '&=']: r#270
[#463 ')']: r#270
[#463 '*']: r#270
[#463 '*=']: r#270
[#463 '+']: r#270
[#463 '++']: r#270
[#463 '+=']: r#270
[#463 ',']: r#270
[#463 '-']: r#270
[#463 '--']: r#270
[#463 '-=']: r#270
[#463 '/']: r#270
[#463 '/=']: r#270
[#463 ':']: r#270
[#463 ';']: r#270
[#463 '=']: r#270
[#463 '==']: r#270
[#463 ']']: r#270
[#463 '^']: r#270
[#463 '^=']: r#270
[#463 '{']: r#270
[#463 '|']: r#270
[#463 '|=']: r#270
[#463 '||']: r#270
[#463 /\u200B_greater_than/]: r#270
[#463 /\u200B_greater_than_equal/]: r#270
[#463 /\u200B_less_than/]: r#270
[#463 /\u200B_less_than_equal/]: r#270
[#463 /\u200B_shift_left/]: r#270
[#463 /\u200B_shift_left_assign/]: r#270
[#463 /\u200B_shift_right/]: r#270
[#463 /\u200B_shift_right_assign/]: r#270
[#463 /\u200B_template_args_end/]: r#270
[#464 '@']: r#271
[#464 'array']: r#271
[#464 'atomic']: r#271
[#464 'bool']: r#271
[#464 'f16']: r#271
[#464 'f32']: r#271
[#464 'fn']: r#271
[#464 'i32']: r#271
[#464 'mat2x2']: r#271
[#464 'mat2x3']: r#271
[#464 'mat2x4']: r#271
[#464 'mat3x2']: r#271
[#464 'mat3x3']: r#271
[#464 'mat3x4']: r#271
[#464 'mat4x2']: r#271
[#464 'mat4x3']: r#271
[#464 'mat4x4']: r#271
[#464 'override']: r#271
[#464 'ptr']: r#271
[#464 'sampler']: r#271
[#464 'sampler_comparison']: r#271
[#464 'texture_1d']: r#271
[#464 'texture_2d']: r#271
[#464 'texture_2d_array']: r#271
[#464 'texture_3d']: r#271
[#464 'texture_cube']: r#271
[#464 'texture_cube_array']: r#271
[#464 'texture_depth_2d']: r#271
[#464 'texture_depth_2d_array']: r#271
[#464 'texture_depth_cube']: r#271
[#464 'texture_depth_cube_array']: r#271
[#464 'texture_depth_multisampled_2d']: r#271
[#464 'texture_multisampled_2d']: r#271
[#464 'texture_storage_1d']: r#271
[#464 'texture_storage_2d']: r#271
[#464 'texture_storage_2d_array']: r#271
[#464 'texture_storage_3d']: r#271
[#464 'u32']: r#271
[#464 'var']: r#271
[#464 'vec2']: r#271
[#464 'vec3']: r#271
[#464 'vec4']: r#271
[#464 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#271
[#465 '!']: s#63
[#465 '&']: s#66
[#465 '(']: s#78
[#465 ')']: r#272
[#465 '*']: s#65
[#465 '-']: s#62
[#465 'array']: s#82
[#465 'atomic']: s#96
[#465 'bitcast']: s#72
[#465 'bool']: s#89
[#465 'f16']: s#91
[#465 'f32']: s#90
[#465 'false']: s#88
[#465 'i32']: s#92
[#465 'mat2x2']: s#101
[#465 'mat2x3']: s#102
[#465 'mat2x4']: s#103
[#465 'mat3x2']: s#104
[#465 'mat3x3']: s#105
[#465 'mat3x4']: s#106
[#465 'mat4x2']: s#107
[#465 'mat4x3']: s#108
[#465 'mat4x4']: s#109
[#465 'ptr']: s#94
[#465 'sampler']: s#126
[#465 'sampler_comparison']: s#127
[#465 'texture_1d']: s#133
[#465 'texture_2d']: s#134
[#465 'texture_2d_array']: s#135
[#465 'texture_3d']: s#136
[#465 'texture_cube']: s#137
[#465 'texture_cube_array']: s#138
[#465 'texture_depth_2d']: s#128
[#465 'texture_depth_2d_array']: s#129
[#465 'texture_depth_cube']: s#130
[#465 'texture_depth_cube_array']: s#131
[#465 'texture_depth_multisampled_2d']: s#132
[#465 'texture_multisampled_2d']: s#139
[#465 'texture_storage_1d']: s#140
[#465 'texture_storage_2d']: s#141
[#465 'texture_storage_2d_array']: s#142
[#465 'texture_storage_3d']: s#143
[#465 'true']: s#87
[#465 'u32']: s#93
[#465 'vec2']: s#98
[#465 'vec3']: s#99
[#465 'vec4']: s#100
[#465 '~']: s#64
[#465 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#465 /0[fh]/]: s#113
[#465 /0[iu]?/]: s#110
[#465 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#465 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#465 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#465 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#465 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#465 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#465 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#465 /[1-9][0-9]*[fh]/]: s#114
[#465 /[1-9][0-9]*[iu]?/]: s#111
[#466 ')']: s#481
[#467 '@']: r#273
[#467 'array']: r#273
[#467 'atomic']: r#273
[#467 'bool']: r#273
[#467 'f16']: r#273
[#467 'f32']: r#273
[#467 'fn']: r#273
[#467 'i32']: r#273
[#467 'mat2x2']: r#273
[#467 'mat2x3']: r#273
[#467 'mat2x4']: r#273
[#467 'mat3x2']: r#273
[#467 'mat3x3']: r#273
[#467 'mat3x4']: r#273
[#467 'mat4x2']: r#273
[#467 'mat4x3']: r#273
[#467 'mat4x4']: r#273
[#467 'override']: r#273
[#467 'ptr']: r#273
[#467 'sampler']: r#273
[#467 'sampler_comparison']: r#273
[#467 'texture_1d']: r#273
[#467 'texture_2d']: r#273
[#467 'texture_2d_array']: r#273
[#467 'texture_3d']: r#273
[#467 'texture_cube']: r#273
[#467 'texture_cube_array']: r#273
[#467 'texture_depth_2d']: r#273
[#467 'texture_depth_2d_array']: r#273
[#467 'texture_depth_cube']: r#273
[#467 'texture_depth_cube_array']: r#273
[#467 'texture_depth_multisampled_2d']: r#273
[#467 'texture_multisampled_2d']: r#273
[#467 'texture_storage_1d']: r#273
[#467 'texture_storage_2d']: r#273
[#467 'texture_storage_2d_array']: r#273
[#467 'texture_storage_3d']: r#273
[#467 'u32']: r#273
[#467 'var']: r#273
[#467 'vec2']: r#273
[#467 'vec3']: r#273
[#467 'vec4']: r#273
[#467 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#273
[#468 ')']: r#272
[#469 '@']: r#274
[#469 'array']: r#274
[#469 'atomic']: r#274
[#469 'bool']: r#274
[#469 'f16']: r#274
[#469 'f32']: r#274
[#469 'fn']: r#274
[#469 'i32']: r#274
[#469 'mat2x2']: r#274
[#469 'mat2x3']: r#274
[#469 'mat2x4']: r#274
[#469 'mat3x2']: r#274
[#469 'mat3x3']: r#274
[#469 'mat3x4']: r#274
[#469 'mat4x2']: r#274
[#469 'mat4x3']: r#274
[#469 'mat4x4']: r#274
[#469 'override']: r#274
[#469 'ptr']: r#274
[#469 'sampler']: r#274
[#469 'sampler_comparison']: r#274
[#469 'texture_1d']: r#274
[#469 'texture_2d']: r#274
[#469 'texture_2d_array']: r#274
[#469 'texture_3d']: r#274
[#469 'texture_cube']: r#274
[#469 'texture_cube_array']: r#274
[#469 'texture_depth_2d']: r#274
[#469 'texture_depth_2d_array']: r#274
[#469 'texture_depth_cube']: r#274
[#469 'texture_depth_cube_array']: r#274
[#469 'texture_depth_multisampled_2d']: r#274
[#469 'texture_multisampled_2d']: r#274
[#469 'texture_storage_1d']: r#274
[#469 'texture_storage_2d']: r#274
[#469 'texture_storage_2d_array']: r#274
[#469 'texture_storage_3d']: r#274
[#469 'u32']: r#274
[#469 'var']: r#274
[#469 'vec2']: r#274
[#469 'vec3']: r#274
[#469 'vec4']: r#274
[#469 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#274
[#470 '@']: r#275
[#470 'array']: r#275
[#470 'atomic']: r#275
[#470 'bool']: r#275
[#470 'f16']: r#275
[#470 'f32']: r#275
[#470 'fn']: r#275
[#470 'i32']: r#275
[#470 'mat2x2']: r#275
[#470 'mat2x3']: r#275
[#470 'mat2x4']: r#275
[#470 'mat3x2']: r#275
[#470 'mat3x3']: r#275
[#470 'mat3x4']: r#275
[#470 'mat4x2']: r#275
[#470 'mat4x3']: r#275
[#470 'mat4x4']: r#275
[#470 'override']: r#275
[#470 'ptr']: r#275
[#470 'sampler']: r#275
[#470 'sampler_comparison']: r#275
[#470 'texture_1d']: r#275
[#470 'texture_2d']: r#275
[#470 'texture_2d_array']: r#275
[#470 'texture_3d']: r#275
[#470 'texture_cube']: r#275
[#470 'texture_cube_array']: r#275
[#470 'texture_depth_2d']: r#275
[#470 'texture_depth_2d_array']: r#275
[#470 'texture_depth_cube']: r#275
[#470 'texture_depth_cube_array']: r#275
[#470 'texture_depth_multisampled_2d']: r#275
[#470 'texture_multisampled_2d']: r#275
[#470 'texture_storage_1d']: r#275
[#470 'texture_storage_2d']: r#275
[#470 'texture_storage_2d_array']: r#275
[#470 'texture_storage_3d']: r#275
[#470 'u32']: r#275
[#470 'var']: r#275
[#470 'vec2']: r#275
[#470 'vec3']: r#275
[#470 'vec4']: r#275
[#470 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#275
[#471 ')']: r#272
[#471 'center']: s#478
[#471 'centroid']: s#479
[#471 'sample']: s#480
[#472 '@']: r#276
[#472 'array']: r#276
[#472 'atomic']: r#276
[#472 'bool']: r#276
[#472 'f16']: r#276
[#472 'f32']: r#276
[#472 'fn']: r#276
[#472 'i32']: r#276
[#472 'mat2x2']: r#276
[#472 'mat2x3']: r#276
[#472 'mat2x4']: r#276
[#472 'mat3x2']: r#276
[#472 'mat3x3']: r#276
[#472 'mat3x4']: r#276
[#472 'mat4x2']: r#276
[#472 'mat4x3']: r#276
[#472 'mat4x4']: r#276
[#472 'override']: r#276
[#472 'ptr']: r#276
[#472 'sampler']: r#276
[#472 'sampler_comparison']: r#276
[#472 'texture_1d']: r#276
[#472 'texture_2d']: r#276
[#472 'texture_2d_array']: r#276
[#472 'texture_3d']: r#276
[#472 'texture_cube']: r#276
[#472 'texture_cube_array']: r#276
[#472 'texture_depth_2d']: r#276
[#472 'texture_depth_2d_array']: r#276
[#472 'texture_depth_cube']: r#276
[#472 'texture_depth_cube_array']: r#276
[#472 'texture_depth_multisampled_2d']: r#276
[#472 'texture_multisampled_2d']: r#276
[#472 'texture_storage_1d']: r#276
[#472 'texture_storage_2d']: r#276
[#472 'texture_storage_2d_array']: r#276
[#472 'texture_storage_3d']: r#276
[#472 'u32']: r#276
[#472 'var']: r#276
[#472 'vec2']: r#276
[#472 'vec3']: r#276
[#472 'vec4']: r#276
[#472 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#276
[#473 '@']: r#277
[#473 'array']: r#277
[#473 'atomic']: r#277
[#473 'bool']: r#277
[#473 'f16']: r#277
[#473 'f32']: r#277
[#473 'fn']: r#277
[#473 'i32']: r#277
[#473 'mat2x2']: r#277
[#473 'mat2x3']: r#277
[#473 'mat2x4']: r#277
[#473 'mat3x2']: r#277
[#473 'mat3x3']: r#277
[#473 'mat3x4']: r#277
[#473 'mat4x2']: r#277
[#473 'mat4x3']: r#277
[#473 'mat4x4']: r#277
[#473 'override']: r#277
[#473 'ptr']: r#277
[#473 'sampler']: r#277
[#473 'sampler_comparison']: r#277
[#473 'texture_1d']: r#277
[#473 'texture_2d']: r#277
[#473 'texture_2d_array']: r#277
[#473 'texture_3d']: r#277
[#473 'texture_cube']: r#277
[#473 'texture_cube_array']: r#277
[#473 'texture_depth_2d']: r#277
[#473 'texture_depth_2d_array']: r#277
[#473 'texture_depth_cube']: r#277
[#473 'texture_depth_cube_array']: r#277
[#473 'texture_depth_multisampled_2d']: r#277
[#473 'texture_multisampled_2d']: r#277
[#473 'texture_storage_1d']: r#277
[#473 'texture_storage_2d']: r#277
[#473 'texture_storage_2d_array']: r#277
[#473 'texture_storage_3d']: r#277
[#473 'u32']: r#277
[#473 'var']: r#277
[#473 'vec2']: r#277
[#473 'vec3']: r#277
[#473 'vec4']: r#277
[#473 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#277
[#474 '@']: r#278
[#474 'array']: r#278
[#474 'atomic']: r#278
[#474 'bool']: r#278
[#474 'f16']: r#278
[#474 'f32']: r#278
[#474 'fn']: r#278
[#474 'i32']: r#278
[#474 'mat2x2']: r#278
[#474 'mat2x3']: r#278
[#474 'mat2x4']: r#278
[#474 'mat3x2']: r#278
[#474 'mat3x3']: r#278
[#474 'mat3x4']: r#278
[#474 'mat4x2']: r#278
[#474 'mat4x3']: r#278
[#474 'mat4x4']: r#278
[#474 'override']: r#278
[#474 'ptr']: r#278
[#474 'sampler']: r#278
[#474 'sampler_comparison']: r#278
[#474 'texture_1d']: r#278
[#474 'texture_2d']: r#278
[#474 'texture_2d_array']: r#278
[#474 'texture_3d']: r#278
[#474 'texture_cube']: r#278
[#474 'texture_cube_array']: r#278
[#474 'texture_depth_2d']: r#278
[#474 'texture_depth_2d_array']: r#278
[#474 'texture_depth_cube']: r#278
[#474 'texture_depth_cube_array']: r#278
[#474 'texture_depth_multisampled_2d']: r#278
[#474 'texture_multisampled_2d']: r#278
[#474 'texture_storage_1d']: r#278
[#474 'texture_storage_2d']: r#278
[#474 'texture_storage_2d_array']: r#278
[#474 'texture_storage_3d']: r#278
[#474 'u32']: r#278
[#474 'var']: r#278
[#474 'vec2']: r#278
[#474 'vec3']: r#278
[#474 'vec4']: r#278
[#474 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#278
[#475 '@']: r#279
[#475 'array']: r#279
[#475 'atomic']: r#279
[#475 'bool']: r#279
[#475 'f16']: r#279
[#475 'f32']: r#279
[#475 'fn']: r#279
[#475 'i32']: r#279
[#475 'mat2x2']: r#279
[#475 'mat2x3']: r#279
[#475 'mat2x4']: r#279
[#475 'mat3x2']: r#279
[#475 'mat3x3']: r#279
[#475 'mat3x4']: r#279
[#475 'mat4x2']: r#279
[#475 'mat4x3']: r#279
[#475 'mat4x4']: r#279
[#475 'override']: r#279
[#475 'ptr']: r#279
[#475 'sampler']: r#279
[#475 'sampler_comparison']: r#279
[#475 'texture_1d']: r#279
[#475 'texture_2d']: r#279
[#475 'texture_2d_array']: r#279
[#475 'texture_3d']: r#279
[#475 'texture_cube']: r#279
[#475 'texture_cube_array']: r#279
[#475 'texture_depth_2d']: r#279
[#475 'texture_depth_2d_array']: r#279
[#475 'texture_depth_cube']: r#279
[#475 'texture_depth_cube_array']: r#279
[#475 'texture_depth_multisampled_2d']: r#279
[#475 'texture_multisampled_2d']: r#279
[#475 'texture_storage_1d']: r#279
[#475 'texture_storage_2d']: r#279
[#475 'texture_storage_2d_array']: r#279
[#475 'texture_storage_3d']: r#279
[#475 'u32']: r#279
[#475 'var']: r#279
[#475 'vec2']: r#279
[#475 'vec3']: r#279
[#475 'vec4']: r#279
[#475 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#279
[#476 '@']: r#280
[#476 'array']: r#280
[#476 'atomic']: r#280
[#476 'bool']: r#280
[#476 'f16']: r#280
[#476 'f32']: r#280
[#476 'fn']: r#280
[#476 'i32']: r#280
[#476 'mat2x2']: r#280
[#476 'mat2x3']: r#280
[#476 'mat2x4']: r#280
[#476 'mat3x2']: r#280
[#476 'mat3x3']: r#280
[#476 'mat3x4']: r#280
[#476 'mat4x2']: r#280
[#476 'mat4x3']: r#280
[#476 'mat4x4']: r#280
[#476 'override']: r#280
[#476 'ptr']: r#280
[#476 'sampler']: r#280
[#476 'sampler_comparison']: r#280
[#476 'texture_1d']: r#280
[#476 'texture_2d']: r#280
[#476 'texture_2d_array']: r#280
[#476 'texture_3d']: r#280
[#476 'texture_cube']: r#280
[#476 'texture_cube_array']: r#280
[#476 'texture_depth_2d']: r#280
[#476 'texture_depth_2d_array']: r#280
[#476 'texture_depth_cube']: r#280
[#476 'texture_depth_cube_array']: r#280
[#476 'texture_depth_multisampled_2d']: r#280
[#476 'texture_multisampled_2d']: r#280
[#476 'texture_storage_1d']: r#280
[#476 'texture_storage_2d']: r#280
[#476 'texture_storage_2d_array']: r#280
[#476 'texture_storage_3d']: r#280
[#476 'u32']: r#280
[#476 'var']: r#280
[#476 'vec2']: r#280
[#476 'vec3']: r#280
[#476 'vec4']: r#280
[#476 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#280
[#477 ',']: s#468
[#478 ')']: r#281
[#478 ',']: r#281
[#479 ')']: r#282
[#479 ',']: r#282
[#480 ')']: r#283
[#480 ',']: r#283
[#481 '@']: r#284
[#481 'array']: r#284
[#481 'atomic']: r#284
[#481 'bool']: r#284
[#481 'f16']: r#284
[#481 'f32']: r#284
[#481 'fn']: r#284
[#481 'i32']: r#284
[#481 'mat2x2']: r#284
[#481 'mat2x3']: r#284
[#481 'mat2x4']: r#284
[#481 'mat3x2']: r#284
[#481 'mat3x3']: r#284
[#481 'mat3x4']: r#284
[#481 'mat4x2']: r#284
[#481 'mat4x3']: r#284
[#481 'mat4x4']: r#284
[#481 'override']: r#284
[#481 'ptr']: r#284
[#481 'sampler']: r#284
[#481 'sampler_comparison']: r#284
[#481 'texture_1d']: r#284
[#481 'texture_2d']: r#284
[#481 'texture_2d_array']: r#284
[#481 'texture_3d']: r#284
[#481 'texture_cube']: r#284
[#481 'texture_cube_array']: r#284
[#481 'texture_depth_2d']: r#284
[#481 'texture_depth_2d_array']: r#284
[#481 'texture_depth_cube']: r#284
[#481 'texture_depth_cube_array']: r#284
[#481 'texture_depth_multisampled_2d']: r#284
[#481 'texture_multisampled_2d']: r#284
[#481 'texture_storage_1d']: r#284
[#481 'texture_storage_2d']: r#284
[#481 'texture_storage_2d_array']: r#284
[#481 'texture_storage_3d']: r#284
[#481 'u32']: r#284
[#481 'var']: r#284
[#481 'vec2']: r#284
[#481 'vec3']: r#284
[#481 'vec4']: r#284
[#481 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#284
[#482 ',']: s#577
[#483 '!=']: r#285
[#483 '%']: r#285
[#483 '%=']: r#285
[#483 '&&']: r#285
[#483 '&']: r#285
[#483 '&=']: r#285
[#483 ')']: r#285
[#483 '*']: r#285
[#483 '*=']: r#285
[#483 '+']: r#285
[#483 '++']: r#285
[#483 '+=']: r#285
[#483 ',']: r#285
[#483 '-']: r#285
[#483 '--']: r#285
[#483 '-=']: r#285
[#483 '/']: r#285
[#483 '/=']: r#285
[#483 ':']: r#285
[#483 ';']: r#285
[#483 '=']: r#285
[#483 '==']: r#285
[#483 ']']: r#285
[#483 '^']: r#285
[#483 '^=']: r#285
[#483 '{']: r#285
[#483 '|']: r#285
[#483 '|=']: r#285
[#483 '||']: r#285
[#483 /\u200B_greater_than/]: r#285
[#483 /\u200B_greater_than_equal/]: r#285
[#483 /\u200B_less_than/]: r#285
[#483 /\u200B_less_than_equal/]: r#285
[#483 /\u200B_shift_left/]: r#285
[#483 /\u200B_shift_left_assign/]: r#285
[#483 /\u200B_shift_right/]: r#285
[#483 /\u200B_shift_right_assign/]: r#285
[#483 /\u200B_template_args_end/]: r#285
[#484 '!=']: r#286
[#484 '%']: r#286
[#484 '%=']: r#286
[#484 '&&']: r#286
[#484 '&']: r#286
[#484 '&=']: r#286
[#484 ')']: r#286
[#484 '*']: r#286
[#484 '*=']: r#286
[#484 '+']: r#286
[#484 '++']: r#286
[#484 '+=']: r#286
[#484 ',']: r#286
[#484 '-']: r#286
[#484 '--']: r#286
[#484 '-=']: r#286
[#484 '/']: r#286
[#484 '/=']: r#286
[#484 ':']: r#286
[#484 ';']: r#286
[#484 '=']: r#286
[#484 '==']: r#286
[#484 ']']: r#286
[#484 '^']: r#286
[#484 '^=']: r#286
[#484 '{']: r#286
[#484 '|']: r#286
[#484 '|=']: r#286
[#484 '||']: r#286
[#484 /\u200B_greater_than/]: r#286
[#484 /\u200B_greater_than_equal/]: r#286
[#484 /\u200B_less_than/]: r#286
[#484 /\u200B_less_than_equal/]: r#286
[#484 /\u200B_shift_left/]: r#286
[#484 /\u200B_shift_left_assign/]: r#286
[#484 /\u200B_shift_right/]: r#286
[#484 /\u200B_shift_right_assign/]: r#286
[#484 /\u200B_template_args_end/]: r#286
[#485 '(']: s#78
[#486 '(']: r#287
[#486 ')']: r#287
[#486 ',']: r#287
[#486 ';']: r#287
[#486 '=']: r#287
[#486 '{']: r#287
[#486 '}']: r#287
[#486 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#287
[#486 /\u200B_template_args_end/]: r#287
[#487 ')']: r#288
[#487 ',']: r#288
[#488 ')']: r#289
[#488 ',']: r#289
[#489 ')']: r#290
[#490 ')']: r#291
[#491 '(']: r#292
[#491 ')']: r#292
[#491 ',']: r#292
[#491 ';']: r#292
[#491 '=']: r#292
[#491 '{']: r#292
[#491 '}']: r#292
[#491 /\u200B_template_args_end/]: r#292
[#492 '(']: r#293
[#492 ')']: r#293
[#492 ',']: r#293
[#492 ';']: r#293
[#492 '=']: r#293
[#492 '{']: r#293
[#492 '}']: r#293
[#492 /\u200B_template_args_end/]: r#293
[#493 /\u200B_template_args_end/]: s#486
[#494 '!']: s#63
[#494 '&']: s#66
[#494 '(']: s#78
[#494 '*']: s#65
[#494 '-']: s#62
[#494 'array']: s#82
[#494 'atomic']: s#96
[#494 'bitcast']: s#72
[#494 'bool']: s#89
[#494 'f16']: s#91
[#494 'f32']: s#90
[#494 'false']: s#88
[#494 'i32']: s#92
[#494 'mat2x2']: s#101
[#494 'mat2x3']: s#102
[#494 'mat2x4']: s#103
[#494 'mat3x2']: s#104
[#494 'mat3x3']: s#105
[#494 'mat3x4']: s#106
[#494 'mat4x2']: s#107
[#494 'mat4x3']: s#108
[#494 'mat4x4']: s#109
[#494 'ptr']: s#94
[#494 'sampler']: s#126
[#494 'sampler_comparison']: s#127
[#494 'texture_1d']: s#133
[#494 'texture_2d']: s#134
[#494 'texture_2d_array']: s#135
[#494 'texture_3d']: s#136
[#494 'texture_cube']: s#137
[#494 'texture_cube_array']: s#138
[#494 'texture_depth_2d']: s#128
[#494 'texture_depth_2d_array']: s#129
[#494 'texture_depth_cube']: s#130
[#494 'texture_depth_cube_array']: s#131
[#494 'texture_depth_multisampled_2d']: s#132
[#494 'texture_multisampled_2d']: s#139
[#494 'texture_storage_1d']: s#140
[#494 'texture_storage_2d']: s#141
[#494 'texture_storage_2d_array']: s#142
[#494 'texture_storage_3d']: s#143
[#494 'true']: s#87
[#494 'u32']: s#93
[#494 'vec2']: s#98
[#494 'vec3']: s#99
[#494 'vec4']: s#100
[#494 '~']: s#64
[#494 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#494 /0[fh]/]: s#113
[#494 /0[iu]?/]: s#110
[#494 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#494 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#494 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#494 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#494 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#494 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#494 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#494 /[1-9][0-9]*[fh]/]: s#114
[#494 /[1-9][0-9]*[iu]?/]: s#111
[#495 'array']: s#347
[#495 'atomic']: s#96
[#495 'bool']: s#89
[#495 'f16']: s#91
[#495 'f32']: s#90
[#495 'i32']: s#92
[#495 'mat2x2']: s#101
[#495 'mat2x3']: s#102
[#495 'mat2x4']: s#103
[#495 'mat3x2']: s#104
[#495 'mat3x3']: s#105
[#495 'mat3x4']: s#106
[#495 'mat4x2']: s#107
[#495 'mat4x3']: s#108
[#495 'mat4x4']: s#109
[#495 'ptr']: s#94
[#495 'sampler']: s#126
[#495 'sampler_comparison']: s#127
[#495 'texture_1d']: s#133
[#495 'texture_2d']: s#134
[#495 'texture_2d_array']: s#135
[#495 'texture_3d']: s#136
[#495 'texture_cube']: s#137
[#495 'texture_cube_array']: s#138
[#495 'texture_depth_2d']: s#128
[#495 'texture_depth_2d_array']: s#129
[#495 'texture_depth_cube']: s#130
[#495 'texture_depth_cube_array']: s#131
[#495 'texture_depth_multisampled_2d']: s#132
[#495 'texture_multisampled_2d']: s#139
[#495 'texture_storage_1d']: s#140
[#495 'texture_storage_2d']: s#141
[#495 'texture_storage_2d_array']: s#142
[#495 'texture_storage_3d']: s#143
[#495 'u32']: s#93
[#495 'vec2']: s#98
[#495 'vec3']: s#99
[#495 'vec4']: s#100
[#495 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#496 '(']: r#294
[#496 ')']: r#294
[#496 ',']: r#294
[#496 ';']: r#294
[#496 '=']: r#294
[#496 '{']: r#294
[#496 '}']: r#294
[#496 /\u200B_template_args_end/]: r#294
[#497 '(']: r#295
[#497 ')']: r#295
[#497 ',']: r#295
[#497 ';']: r#295
[#497 '=']: r#295
[#497 '{']: r#295
[#497 '}']: r#295
[#497 /\u200B_template_args_end/]: r#295
[#498 '(']: r#296
[#498 ')']: r#296
[#498 ',']: r#296
[#498 ';']: r#296
[#498 '=']: r#296
[#498 '{']: r#296
[#498 '}']: r#296
[#498 /\u200B_template_args_end/]: r#296
[#499 'read']: s#538
[#499 'read_write']: s#540
[#499 'write']: s#539
[#500 '!']: s#63
[#500 '&']: s#66
[#500 '(']: s#78
[#500 '*']: s#65
[#500 '-']: s#62
[#500 'array']: s#82
[#500 'atomic']: s#96
[#500 'bitcast']: s#72
[#500 'bool']: s#89
[#500 'f16']: s#91
[#500 'f32']: s#90
[#500 'false']: s#88
[#500 'i32']: s#92
[#500 'mat2x2']: s#101
[#500 'mat2x3']: s#102
[#500 'mat2x4']: s#103
[#500 'mat3x2']: s#104
[#500 'mat3x3']: s#105
[#500 'mat3x4']: s#106
[#500 'mat4x2']: s#107
[#500 'mat4x3']: s#108
[#500 'mat4x4']: s#109
[#500 'ptr']: s#94
[#500 'sampler']: s#126
[#500 'sampler_comparison']: s#127
[#500 'texture_1d']: s#133
[#500 'texture_2d']: s#134
[#500 'texture_2d_array']: s#135
[#500 'texture_3d']: s#136
[#500 'texture_cube']: s#137
[#500 'texture_cube_array']: s#138
[#500 'texture_depth_2d']: s#128
[#500 'texture_depth_2d_array']: s#129
[#500 'texture_depth_cube']: s#130
[#500 'texture_depth_cube_array']: s#131
[#500 'texture_depth_multisampled_2d']: s#132
[#500 'texture_multisampled_2d']: s#139
[#500 'texture_storage_1d']: s#140
[#500 'texture_storage_2d']: s#141
[#500 'texture_storage_2d_array']: s#142
[#500 'texture_storage_3d']: s#143
[#500 'true']: s#87
[#500 'u32']: s#93
[#500 'vec2']: s#98
[#500 'vec3']: s#99
[#500 'vec4']: s#100
[#500 '~']: s#64
[#500 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#500 /0[fh]/]: s#113
[#500 /0[iu]?/]: s#110
[#500 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#500 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#500 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#500 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#500 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#500 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#500 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#500 /[1-9][0-9]*[fh]/]: s#114
[#500 /[1-9][0-9]*[iu]?/]: s#111
[#501 '&']: r#297
[#501 '(']: r#297
[#501 '*']: r#297
[#501 ';']: r#297
[#501 '_']: r#297
[#501 'array']: r#297
[#501 'atomic']: r#297
[#501 'bool']: r#297
[#501 'break']: r#297
[#501 'const']: r#297
[#501 'const_assert']: r#297
[#501 'continue']: r#297
[#501 'continuing']: r#297
[#501 'discard']: r#297
[#501 'else']: r#297
[#501 'f16']: r#297
[#501 'f32']: r#297
[#501 'for']: r#297
[#501 'i32']: r#297
[#501 'if']: r#297
[#501 'let']: r#297
[#501 'loop']: r#297
[#501 'mat2x2']: r#297
[#501 'mat2x3']: r#297
[#501 'mat2x4']: r#297
[#501 'mat3x2']: r#297
[#501 'mat3x3']: r#297
[#501 'mat3x4']: r#297
[#501 'mat4x2']: r#297
[#501 'mat4x3']: r#297
[#501 'mat4x4']: r#297
[#501 'ptr']: r#297
[#501 'return']: r#297
[#501 'sampler']: r#297
[#501 'sampler_comparison']: r#297
[#501 'switch']: r#297
[#501 'texture_1d']: r#297
[#501 'texture_2d']: r#297
[#501 'texture_2d_array']: r#297
[#501 'texture_3d']: r#297
[#501 'texture_cube']: r#297
[#501 'texture_cube_array']: r#297
[#501 'texture_depth_2d']: r#297
[#501 'texture_depth_2d_array']: r#297
[#501 'texture_depth_cube']: r#297
[#501 'texture_depth_cube_array']: r#297
[#501 'texture_depth_multisampled_2d']: r#297
[#501 'texture_multisampled_2d']: r#297
[#501 'texture_storage_1d']: r#297
[#501 'texture_storage_2d']: r#297
[#501 'texture_storage_2d_array']: r#297
[#501 'texture_storage_3d']: r#297
[#501 'u32']: r#297
[#501 'var']: r#297
[#501 'vec2']: r#297
[#501 'vec3']: r#297
[#501 'vec4']: r#297
[#501 'while']: r#297
[#501 '{']: r#297
[#501 '}']: r#297
[#501 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#297
[#502 '&']: r#298
[#502 '(']: r#298
[#502 '*']: r#298
[#502 ';']: r#298
[#502 '_']: r#298
[#502 'array']: r#298
[#502 'atomic']: r#298
[#502 'bool']: r#298
[#502 'break']: r#298
[#502 'const']: r#298
[#502 'const_assert']: r#298
[#502 'continue']: r#298
[#502 'continuing']: r#298
[#502 'discard']: r#298
[#502 'f16']: r#298
[#502 'f32']: r#298
[#502 'for']: r#298
[#502 'i32']: r#298
[#502 'if']: r#298
[#502 'let']: r#298
[#502 'loop']: r#298
[#502 'mat2x2']: r#298
[#502 'mat2x3']: r#298
[#502 'mat2x4']: r#298
[#502 'mat3x2']: r#298
[#502 'mat3x3']: r#298
[#502 'mat3x4']: r#298
[#502 'mat4x2']: r#298
[#502 'mat4x3']: r#298
[#502 'mat4x4']: r#298
[#502 'ptr']: r#298
[#502 'return']: r#298
[#502 'sampler']: r#298
[#502 'sampler_comparison']: r#298
[#502 'switch']: r#298
[#502 'texture_1d']: r#298
[#502 'texture_2d']: r#298
[#502 'texture_2d_array']: r#298
[#502 'texture_3d']: r#298
[#502 'texture_cube']: r#298
[#502 'texture_cube_array']: r#298
[#502 'texture_depth_2d']: r#298
[#502 'texture_depth_2d_array']: r#298
[#502 'texture_depth_cube']: r#298
[#502 'texture_depth_cube_array']: r#298
[#502 'texture_depth_multisampled_2d']: r#298
[#502 'texture_multisampled_2d']: r#298
[#502 'texture_storage_1d']: r#298
[#502 'texture_storage_2d']: r#298
[#502 'texture_storage_2d_array']: r#298
[#502 'texture_storage_3d']: r#298
[#502 'u32']: r#298
[#502 'var']: r#298
[#502 'vec2']: r#298
[#502 'vec3']: r#298
[#502 'vec4']: r#298
[#502 'while']: r#298
[#502 '{']: r#298
[#502 '}']: r#298
[#502 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#298
[#503 '&']: r#299
[#503 '(']: r#299
[#503 '*']: r#299
[#503 ';']: r#299
[#503 '_']: r#299
[#503 'array']: r#299
[#503 'atomic']: r#299
[#503 'bool']: r#299
[#503 'break']: r#299
[#503 'const']: r#299
[#503 'const_assert']: r#299
[#503 'continue']: r#299
[#503 'continuing']: r#299
[#503 'discard']: r#299
[#503 'f16']: r#299
[#503 'f32']: r#299
[#503 'for']: r#299
[#503 'i32']: r#299
[#503 'if']: r#299
[#503 'let']: r#299
[#503 'loop']: r#299
[#503 'mat2x2']: r#299
[#503 'mat2x3']: r#299
[#503 'mat2x4']: r#299
[#503 'mat3x2']: r#299
[#503 'mat3x3']: r#299
[#503 'mat3x4']: r#299
[#503 'mat4x2']: r#299
[#503 'mat4x3']: r#299
[#503 'mat4x4']: r#299
[#503 'ptr']: r#299
[#503 'return']: r#299
[#503 'sampler']: r#299
[#503 'sampler_comparison']: r#299
[#503 'switch']: r#299
[#503 'texture_1d']: r#299
[#503 'texture_2d']: r#299
[#503 'texture_2d_array']: r#299
[#503 'texture_3d']: r#299
[#503 'texture_cube']: r#299
[#503 'texture_cube_array']: r#299
[#503 'texture_depth_2d']: r#299
[#503 'texture_depth_2d_array']: r#299
[#503 'texture_depth_cube']: r#299
[#503 'texture_depth_cube_array']: r#299
[#503 'texture_depth_multisampled_2d']: r#299
[#503 'texture_multisampled_2d']: r#299
[#503 'texture_storage_1d']: r#299
[#503 'texture_storage_2d']: r#299
[#503 'texture_storage_2d_array']: r#299
[#503 'texture_storage_3d']: r#299
[#503 'u32']: r#299
[#503 'var']: r#299
[#503 'vec2']: r#299
[#503 'vec3']: r#299
[#503 'vec4']: r#299
[#503 'while']: r#299
[#503 '{']: r#299
[#503 '}']: r#299
[#503 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#299
[#504 '{']: s#172
[#505 'case']: s#564
[#505 'default']: s#565
[#506 'continuing']: s#558
[#507 'continuing']: r#300
[#507 '}']: r#300
[#508 '&']: s#335
[#508 '(']: s#336
[#508 '*']: s#334
[#508 ';']: s#299
[#508 '_']: s#332
[#508 'array']: s#82
[#508 'atomic']: s#96
[#508 'bool']: s#89
[#508 'break']: s#324
[#508 'const']: s#323
[#508 'const_assert']: s#25
[#508 'continue']: s#325
[#508 'discard']: s#310
[#508 'f16']: s#91
[#508 'f32']: s#90
[#508 'for']: s#318
[#508 'i32']: s#92
[#508 'if']: s#329
[#508 'let']: s#322
[#508 'loop']: s#317
[#508 'mat2x2']: s#101
[#508 'mat2x3']: s#102
[#508 'mat2x4']: s#103
[#508 'mat3x2']: s#104
[#508 'mat3x3']: s#105
[#508 'mat3x4']: s#106
[#508 'mat4x2']: s#107
[#508 'mat4x3']: s#108
[#508 'mat4x4']: s#109
[#508 'ptr']: s#94
[#508 'return']: s#314
[#508 'sampler']: s#126
[#508 'sampler_comparison']: s#127
[#508 'switch']: s#316
[#508 'texture_1d']: s#133
[#508 'texture_2d']: s#134
[#508 'texture_2d_array']: s#135
[#508 'texture_3d']: s#136
[#508 'texture_cube']: s#137
[#508 'texture_cube_array']: s#138
[#508 'texture_depth_2d']: s#128
[#508 'texture_depth_2d_array']: s#129
[#508 'texture_depth_cube']: s#130
[#508 'texture_depth_cube_array']: s#131
[#508 'texture_depth_multisampled_2d']: s#132
[#508 'texture_multisampled_2d']: s#139
[#508 'texture_storage_1d']: s#140
[#508 'texture_storage_2d']: s#141
[#508 'texture_storage_2d_array']: s#142
[#508 'texture_storage_3d']: s#143
[#508 'u32']: s#93
[#508 'var']: s#152
[#508 'vec2']: s#98
[#508 'vec3']: s#99
[#508 'vec4']: s#100
[#508 'while']: s#319
[#508 '{']: s#172
[#508 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#509 ')']: s#554
[#510 ';']: s#553
[#511 ';']: r#301
[#512 ';']: r#302
[#513 ';']: r#303
[#514 ';']: r#304
[#515 '&']: r#305
[#515 '(']: r#305
[#515 '*']: r#305
[#515 ';']: r#305
[#515 '_']: r#305
[#515 'array']: r#305
[#515 'atomic']: r#305
[#515 'bool']: r#305
[#515 'break']: r#305
[#515 'const']: r#305
[#515 'const_assert']: r#305
[#515 'continue']: r#305
[#515 'continuing']: r#305
[#515 'discard']: r#305
[#515 'f16']: r#305
[#515 'f32']: r#305
[#515 'for']: r#305
[#515 'i32']: r#305
[#515 'if']: r#305
[#515 'let']: r#305
[#515 'loop']: r#305
[#515 'mat2x2']: r#305
[#515 'mat2x3']: r#305
[#515 'mat2x4']: r#305
[#515 'mat3x2']: r#305
[#515 'mat3x3']: r#305
[#515 'mat3x4']: r#305
[#515 'mat4x2']: r#305
[#515 'mat4x3']: r#305
[#515 'mat4x4']: r#305
[#515 'ptr']: r#305
[#515 'return']: r#305
[#515 'sampler']: r#305
[#515 'sampler_comparison']: r#305
[#515 'switch']: r#305
[#515 'texture_1d']: r#305
[#515 'texture_2d']: r#305
[#515 'texture_2d_array']: r#305
[#515 'texture_3d']: r#305
[#515 'texture_cube']: r#305
[#515 'texture_cube_array']: r#305
[#515 'texture_depth_2d']: r#305
[#515 'texture_depth_2d_array']: r#305
[#515 'texture_depth_cube']: r#305
[#515 'texture_depth_cube_array']: r#305
[#515 'texture_depth_multisampled_2d']: r#305
[#515 'texture_multisampled_2d']: r#305
[#515 'texture_storage_1d']: r#305
[#515 'texture_storage_2d']: r#305
[#515 'texture_storage_2d_array']: r#305
[#515 'texture_storage_3d']: r#305
[#515 'u32']: r#305
[#515 'var']: r#305
[#515 'vec2']: r#305
[#515 'vec3']: r#305
[#515 'vec4']: r#305
[#515 'while']: r#305
[#515 '{']: r#305
[#515 '}']: r#305
[#515 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#305
[#516 ';']: r#306
[#517 '!']: s#63
[#517 '&']: s#66
[#517 '(']: s#78
[#517 '*']: s#65
[#517 '-']: s#62
[#517 'array']: s#82
[#517 'atomic']: s#96
[#517 'bitcast']: s#72
[#517 'bool']: s#89
[#517 'f16']: s#91
[#517 'f32']: s#90
[#517 'false']: s#88
[#517 'i32']: s#92
[#517 'mat2x2']: s#101
[#517 'mat2x3']: s#102
[#517 'mat2x4']: s#103
[#517 'mat3x2']: s#104
[#517 'mat3x3']: s#105
[#517 'mat3x4']: s#106
[#517 'mat4x2']: s#107
[#517 'mat4x3']: s#108
[#517 'mat4x4']: s#109
[#517 'ptr']: s#94
[#517 'sampler']: s#126
[#517 'sampler_comparison']: s#127
[#517 'texture_1d']: s#133
[#517 'texture_2d']: s#134
[#517 'texture_2d_array']: s#135
[#517 'texture_3d']: s#136
[#517 'texture_cube']: s#137
[#517 'texture_cube_array']: s#138
[#517 'texture_depth_2d']: s#128
[#517 'texture_depth_2d_array']: s#129
[#517 'texture_depth_cube']: s#130
[#517 'texture_depth_cube_array']: s#131
[#517 'texture_depth_multisampled_2d']: s#132
[#517 'texture_multisampled_2d']: s#139
[#517 'texture_storage_1d']: s#140
[#517 'texture_storage_2d']: s#141
[#517 'texture_storage_2d_array']: s#142
[#517 'texture_storage_3d']: s#143
[#517 'true']: s#87
[#517 'u32']: s#93
[#517 'vec2']: s#98
[#517 'vec3']: s#99
[#517 'vec4']: s#100
[#517 '~']: s#64
[#517 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#517 /0[fh]/]: s#113
[#517 /0[iu]?/]: s#110
[#517 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#517 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#517 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#517 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#517 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#517 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#517 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#517 /[1-9][0-9]*[fh]/]: s#114
[#517 /[1-9][0-9]*[iu]?/]: s#111
[#518 '!']: s#63
[#518 '&']: s#66
[#518 '(']: s#78
[#518 '*']: s#65
[#518 '-']: s#62
[#518 'array']: s#82
[#518 'atomic']: s#96
[#518 'bitcast']: s#72
[#518 'bool']: s#89
[#518 'f16']: s#91
[#518 'f32']: s#90
[#518 'false']: s#88
[#518 'i32']: s#92
[#518 'mat2x2']: s#101
[#518 'mat2x3']: s#102
[#518 'mat2x4']: s#103
[#518 'mat3x2']: s#104
[#518 'mat3x3']: s#105
[#518 'mat3x4']: s#106
[#518 'mat4x2']: s#107
[#518 'mat4x3']: s#108
[#518 'mat4x4']: s#109
[#518 'ptr']: s#94
[#518 'sampler']: s#126
[#518 'sampler_comparison']: s#127
[#518 'texture_1d']: s#133
[#518 'texture_2d']: s#134
[#518 'texture_2d_array']: s#135
[#518 'texture_3d']: s#136
[#518 'texture_cube']: s#137
[#518 'texture_cube_array']: s#138
[#518 'texture_depth_2d']: s#128
[#518 'texture_depth_2d_array']: s#129
[#518 'texture_depth_cube']: s#130
[#518 'texture_depth_cube_array']: s#131
[#518 'texture_depth_multisampled_2d']: s#132
[#518 'texture_multisampled_2d']: s#139
[#518 'texture_storage_1d']: s#140
[#518 'texture_storage_2d']: s#141
[#518 'texture_storage_2d_array']: s#142
[#518 'texture_storage_3d']: s#143
[#518 'true']: s#87
[#518 'u32']: s#93
[#518 'vec2']: s#98
[#518 'vec3']: s#99
[#518 'vec4']: s#100
[#518 '~']: s#64
[#518 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#518 /0[fh]/]: s#113
[#518 /0[iu]?/]: s#110
[#518 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#518 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#518 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#518 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#518 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#518 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#518 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#518 /[1-9][0-9]*[fh]/]: s#114
[#518 /[1-9][0-9]*[iu]?/]: s#111
[#519 '&']: r#307
[#519 '(']: r#307
[#519 '*']: r#307
[#519 ';']: r#307
[#519 '_']: r#307
[#519 'array']: r#307
[#519 'atomic']: r#307
[#519 'bool']: r#307
[#519 'break']: r#307
[#519 'const']: r#307
[#519 'const_assert']: r#307
[#519 'continue']: r#307
[#519 'continuing']: r#307
[#519 'discard']: r#307
[#519 'else']: r#307
[#519 'f16']: r#307
[#519 'f32']: r#307
[#519 'for']: r#307
[#519 'i32']: r#307
[#519 'if']: r#307
[#519 'let']: r#307
[#519 'loop']: r#307
[#519 'mat2x2']: r#307
[#519 'mat2x3']: r#307
[#519 'mat2x4']: r#307
[#519 'mat3x2']: r#307
[#519 'mat3x3']: r#307
[#519 'mat3x4']: r#307
[#519 'mat4x2']: r#307
[#519 'mat4x3']: r#307
[#519 'mat4x4']: r#307
[#519 'ptr']: r#307
[#519 'return']: r#307
[#519 'sampler']: r#307
[#519 'sampler_comparison']: r#307
[#519 'switch']: r#307
[#519 'texture_1d']: r#307
[#519 'texture_2d']: r#307
[#519 'texture_2d_array']: r#307
[#519 'texture_3d']: r#307
[#519 'texture_cube']: r#307
[#519 'texture_cube_array']: r#307
[#519 'texture_depth_2d']: r#307
[#519 'texture_depth_2d_array']: r#307
[#519 'texture_depth_cube']: r#307
[#519 'texture_depth_cube_array']: r#307
[#519 'texture_depth_multisampled_2d']: r#307
[#519 'texture_multisampled_2d']: r#307
[#519 'texture_storage_1d']: r#307
[#519 'texture_storage_2d']: r#307
[#519 'texture_storage_2d_array']: r#307
[#519 'texture_storage_3d']: r#307
[#519 'u32']: r#307
[#519 'var']: r#307
[#519 'vec2']: r#307
[#519 'vec3']: r#307
[#519 'vec4']: r#307
[#519 'while']: r#307
[#519 '{']: r#307
[#519 '}']: r#307
[#519 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#307
[#520 ')']: r#308
[#520 ';']: r#308
[#521 ')']: r#309
[#521 ';']: r#309
[#522 '%=']: r#310
[#522 '&=']: r#310
[#522 ')']: r#310
[#522 '*=']: r#310
[#522 '++']: r#310
[#522 '+=']: r#310
[#522 '--']: r#310
[#522 '-=']: r#310
[#522 '.']: r#310
[#522 '/=']: r#310
[#522 '=']: r#310
[#522 '[']: r#310
[#522 '^=']: r#310
[#522 '|=']: r#310
[#522 /\u200B_shift_left_assign/]: r#310
[#522 /\u200B_shift_right_assign/]: r#310
[#523 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#311
[#524 ':']: s#550
[#525 ',']: s#549
[#526 ')']: r#312
[#526 ',']: r#312
[#527 ',']: s#528
[#528 '@']: s#30
[#529 '->']: s#545
[#530 ',']: r#313
[#530 '}']: r#313
[#531 ',']: r#314
[#531 '}']: r#314
[#532 '}']: s#543
[#533 '}']: r#315
[#534 'array']: s#347
[#534 'atomic']: s#96
[#534 'bool']: s#89
[#534 'f16']: s#91
[#534 'f32']: s#90
[#534 'i32']: s#92
[#534 'mat2x2']: s#101
[#534 'mat2x3']: s#102
[#534 'mat2x4']: s#103
[#534 'mat3x2']: s#104
[#534 'mat3x3']: s#105
[#534 'mat3x4']: s#106
[#534 'mat4x2']: s#107
[#534 'mat4x3']: s#108
[#534 'mat4x4']: s#109
[#534 'ptr']: s#94
[#534 'sampler']: s#126
[#534 'sampler_comparison']: s#127
[#534 'texture_1d']: s#133
[#534 'texture_2d']: s#134
[#534 'texture_2d_array']: s#135
[#534 'texture_3d']: s#136
[#534 'texture_cube']: s#137
[#534 'texture_cube_array']: s#138
[#534 'texture_depth_2d']: s#128
[#534 'texture_depth_2d_array']: s#129
[#534 'texture_depth_cube']: s#130
[#534 'texture_depth_cube_array']: s#131
[#534 'texture_depth_multisampled_2d']: s#132
[#534 'texture_multisampled_2d']: s#139
[#534 'texture_storage_1d']: s#140
[#534 'texture_storage_2d']: s#141
[#534 'texture_storage_2d_array']: s#142
[#534 'texture_storage_3d']: s#143
[#534 'u32']: s#93
[#534 'vec2']: s#98
[#534 'vec3']: s#99
[#534 'vec4']: s#100
[#534 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#535 /\u200B_template_args_end/]: s#486
[#536 'read']: s#538
[#536 'read_write']: s#540
[#536 'write']: s#539
[#537 /\u200B_template_args_end/]: r#316
[#538 /\u200B_template_args_end/]: r#317
[#539 /\u200B_template_args_end/]: r#318
[#540 /\u200B_template_args_end/]: r#319
[#541 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#320
[#542 ',']: r#321
[#542 '}']: r#321
[#543 ';']: r#322
[#543 '@']: r#322
[#543 'alias']: r#322
[#543 'const']: r#322
[#543 'const_assert']: r#322
[#543 'fn']: r#322
[#543 'override']: r#322
[#543 'struct']: r#322
[#543 'var']: r#322
[#543 EndOfText]: r#322
[#544 '{']: r#323
[#545 '@']: s#30
[#546 ')']: r#324
[#546 ',']: r#324
[#547 ')']: r#325
[#547 ',']: r#325
[#548 ')']: r#326
[#549 ')']: r#327
[#550 'array']: s#347
[#550 'atomic']: s#96
[#550 'bool']: s#89
[#550 'f16']: s#91
[#550 'f32']: s#90
[#550 'i32']: s#92
[#550 'mat2x2']: s#101
[#550 'mat2x3']: s#102
[#550 'mat2x4']: s#103
[#550 'mat3x2']: s#104
[#550 'mat3x3']: s#105
[#550 'mat3x4']: s#106
[#550 'mat4x2']: s#107
[#550 'mat4x3']: s#108
[#550 'mat4x4']: s#109
[#550 'ptr']: s#94
[#550 'sampler']: s#126
[#550 'sampler_comparison']: s#127
[#550 'texture_1d']: s#133
[#550 'texture_2d']: s#134
[#550 'texture_2d_array']: s#135
[#550 'texture_3d']: s#136
[#550 'texture_cube']: s#137
[#550 'texture_cube_array']: s#138
[#550 'texture_depth_2d']: s#128
[#550 'texture_depth_2d_array']: s#129
[#550 'texture_depth_cube']: s#130
[#550 'texture_depth_cube_array']: s#131
[#550 'texture_depth_multisampled_2d']: s#132
[#550 'texture_multisampled_2d']: s#139
[#550 'texture_storage_1d']: s#140
[#550 'texture_storage_2d']: s#141
[#550 'texture_storage_2d_array']: s#142
[#550 'texture_storage_3d']: s#143
[#550 'u32']: s#93
[#550 'vec2']: s#98
[#550 'vec3']: s#99
[#550 'vec4']: s#100
[#550 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#551 ';']: r#328
[#552 ';']: r#329
[#553 '!']: s#63
[#553 '&']: s#66
[#553 '(']: s#78
[#553 '*']: s#65
[#553 '-']: s#62
[#553 'array']: s#82
[#553 'atomic']: s#96
[#553 'bitcast']: s#72
[#553 'bool']: s#89
[#553 'f16']: s#91
[#553 'f32']: s#90
[#553 'false']: s#88
[#553 'i32']: s#92
[#553 'mat2x2']: s#101
[#553 'mat2x3']: s#102
[#553 'mat2x4']: s#103
[#553 'mat3x2']: s#104
[#553 'mat3x3']: s#105
[#553 'mat3x4']: s#106
[#553 'mat4x2']: s#107
[#553 'mat4x3']: s#108
[#553 'mat4x4']: s#109
[#553 'ptr']: s#94
[#553 'sampler']: s#126
[#553 'sampler_comparison']: s#127
[#553 'texture_1d']: s#133
[#553 'texture_2d']: s#134
[#553 'texture_2d_array']: s#135
[#553 'texture_3d']: s#136
[#553 'texture_cube']: s#137
[#553 'texture_cube_array']: s#138
[#553 'texture_depth_2d']: s#128
[#553 'texture_depth_2d_array']: s#129
[#553 'texture_depth_cube']: s#130
[#553 'texture_depth_cube_array']: s#131
[#553 'texture_depth_multisampled_2d']: s#132
[#553 'texture_multisampled_2d']: s#139
[#553 'texture_storage_1d']: s#140
[#553 'texture_storage_2d']: s#141
[#553 'texture_storage_2d_array']: s#142
[#553 'texture_storage_3d']: s#143
[#553 'true']: s#87
[#553 'u32']: s#93
[#553 'vec2']: s#98
[#553 'vec3']: s#99
[#553 'vec4']: s#100
[#553 '~']: s#64
[#553 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#553 /0[fh]/]: s#113
[#553 /0[iu]?/]: s#110
[#553 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#553 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#553 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#553 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#553 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#553 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#553 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#553 /[1-9][0-9]*[fh]/]: s#114
[#553 /[1-9][0-9]*[iu]?/]: s#111
[#554 '{']: s#172
[#555 'continuing']: r#330
[#555 '}']: r#330
[#556 '}']: s#594
[#557 '}']: r#331
[#558 '{']: s#593
[#559 '}']: s#591
[#560 '}']: r#332
[#561 'case']: s#564
[#561 'default']: s#565
[#562 'case']: r#333
[#562 'default']: r#333
[#562 '}']: r#333
[#563 'case']: r#334
[#563 'default']: r#334
[#563 '}']: r#334
[#564 '!']: s#63
[#564 '&']: s#66
[#564 '(']: s#78
[#564 '*']: s#65
[#564 '-']: s#62
[#564 'array']: s#82
[#564 'atomic']: s#96
[#564 'bitcast']: s#72
[#564 'bool']: s#89
[#564 'default']: s#588
[#564 'f16']: s#91
[#564 'f32']: s#90
[#564 'false']: s#88
[#564 'i32']: s#92
[#564 'mat2x2']: s#101
[#564 'mat2x3']: s#102
[#564 'mat2x4']: s#103
[#564 'mat3x2']: s#104
[#564 'mat3x3']: s#105
[#564 'mat3x4']: s#106
[#564 'mat4x2']: s#107
[#564 'mat4x3']: s#108
[#564 'mat4x4']: s#109
[#564 'ptr']: s#94
[#564 'sampler']: s#126
[#564 'sampler_comparison']: s#127
[#564 'texture_1d']: s#133
[#564 'texture_2d']: s#134
[#564 'texture_2d_array']: s#135
[#564 'texture_3d']: s#136
[#564 'texture_cube']: s#137
[#564 'texture_cube_array']: s#138
[#564 'texture_depth_2d']: s#128
[#564 'texture_depth_2d_array']: s#129
[#564 'texture_depth_cube']: s#130
[#564 'texture_depth_cube_array']: s#131
[#564 'texture_depth_multisampled_2d']: s#132
[#564 'texture_multisampled_2d']: s#139
[#564 'texture_storage_1d']: s#140
[#564 'texture_storage_2d']: s#141
[#564 'texture_storage_2d_array']: s#142
[#564 'texture_storage_3d']: s#143
[#564 'true']: s#87
[#564 'u32']: s#93
[#564 'vec2']: s#98
[#564 'vec3']: s#99
[#564 'vec4']: s#100
[#564 '~']: s#64
[#564 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#564 /0[fh]/]: s#113
[#564 /0[iu]?/]: s#110
[#564 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#564 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#564 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#564 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#564 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#564 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#564 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#564 /[1-9][0-9]*[fh]/]: s#114
[#564 /[1-9][0-9]*[iu]?/]: s#111
[#565 ':']: s#585
[#566 '&']: r#335
[#566 '(']: r#335
[#566 '*']: r#335
[#566 ';']: r#335
[#566 '_']: r#335
[#566 'array']: r#335
[#566 'atomic']: r#335
[#566 'bool']: r#335
[#566 'break']: r#335
[#566 'const']: r#335
[#566 'const_assert']: r#335
[#566 'continue']: r#335
[#566 'continuing']: r#335
[#566 'discard']: r#335
[#566 'f16']: r#335
[#566 'f32']: r#335
[#566 'for']: r#335
[#566 'i32']: r#335
[#566 'if']: r#335
[#566 'let']: r#335
[#566 'loop']: r#335
[#566 'mat2x2']: r#335
[#566 'mat2x3']: r#335
[#566 'mat2x4']: r#335
[#566 'mat3x2']: r#335
[#566 'mat3x3']: r#335
[#566 'mat3x4']: r#335
[#566 'mat4x2']: r#335
[#566 'mat4x3']: r#335
[#566 'mat4x4']: r#335
[#566 'ptr']: r#335
[#566 'return']: r#335
[#566 'sampler']: r#335
[#566 'sampler_comparison']: r#335
[#566 'switch']: r#335
[#566 'texture_1d']: r#335
[#566 'texture_2d']: r#335
[#566 'texture_2d_array']: r#335
[#566 'texture_3d']: r#335
[#566 'texture_cube']: r#335
[#566 'texture_cube_array']: r#335
[#566 'texture_depth_2d']: r#335
[#566 'texture_depth_2d_array']: r#335
[#566 'texture_depth_cube']: r#335
[#566 'texture_depth_cube_array']: r#335
[#566 'texture_depth_multisampled_2d']: r#335
[#566 'texture_multisampled_2d']: r#335
[#566 'texture_storage_1d']: r#335
[#566 'texture_storage_2d']: r#335
[#566 'texture_storage_2d_array']: r#335
[#566 'texture_storage_3d']: r#335
[#566 'u32']: r#335
[#566 'var']: r#335
[#566 'vec2']: r#335
[#566 'vec3']: r#335
[#566 'vec4']: r#335
[#566 'while']: r#335
[#566 '{']: r#335
[#566 '}']: r#335
[#566 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#335
[#567 '{']: s#172
[#568 /\u200B_template_args_end/]: s#486
[#569 ',']: s#581
[#570 /\u200B_template_args_end/]: r#336
[#571 '+']: s#203
[#571 '-']: s#204
[#571 /\u200B_template_args_end/]: r#337
[#572 /\u200B_template_args_end/]: r#338
[#573 '%']: r#30
[#573 '&']: r#27
[#573 '*']: r#30
[#573 '+']: r#30
[#573 '-']: r#30
[#573 '/']: r#30
[#573 '^']: r#29
[#573 '|']: r#28
[#573 /\u200B_template_args_end/]: r#30
[#574 '(']: r#339
[#574 ')']: r#339
[#574 ',']: r#339
[#574 ';']: r#339
[#574 '=']: r#339
[#574 '{']: r#339
[#574 '}']: r#339
[#574 /\u200B_template_args_end/]: r#339
[#575 '!=']: r#340
[#575 '%']: r#340
[#575 '&&']: r#340
[#575 '&']: r#340
[#575 ')']: r#340
[#575 '*']: r#340
[#575 '+']: r#340
[#575 ',']: r#340
[#575 '-']: r#340
[#575 '.']: r#340
[#575 '/']: r#340
[#575 ':']: r#340
[#575 ';']: r#340
[#575 '==']: r#340
[#575 '[']: r#340
[#575 ']']: r#340
[#575 '^']: r#340
[#575 '{']: r#340
[#575 '|']: r#340
[#575 '||']: r#340
[#575 /\u200B_greater_than/]: r#340
[#575 /\u200B_greater_than_equal/]: r#340
[#575 /\u200B_less_than/]: r#340
[#575 /\u200B_less_than_equal/]: r#340
[#575 /\u200B_shift_left/]: r#340
[#575 /\u200B_shift_right/]: r#340
[#575 /\u200B_template_args_end/]: r#340
[#576 '@']: r#341
[#576 'array']: r#341
[#576 'atomic']: r#341
[#576 'bool']: r#341
[#576 'f16']: r#341
[#576 'f32']: r#341
[#576 'fn']: r#341
[#576 'i32']: r#341
[#576 'mat2x2']: r#341
[#576 'mat2x3']: r#341
[#576 'mat2x4']: r#341
[#576 'mat3x2']: r#341
[#576 'mat3x3']: r#341
[#576 'mat3x4']: r#341
[#576 'mat4x2']: r#341
[#576 'mat4x3']: r#341
[#576 'mat4x4']: r#341
[#576 'override']: r#341
[#576 'ptr']: r#341
[#576 'sampler']: r#341
[#576 'sampler_comparison']: r#341
[#576 'texture_1d']: r#341
[#576 'texture_2d']: r#341
[#576 'texture_2d_array']: r#341
[#576 'texture_3d']: r#341
[#576 'texture_cube']: r#341
[#576 'texture_cube_array']: r#341
[#576 'texture_depth_2d']: r#341
[#576 'texture_depth_2d_array']: r#341
[#576 'texture_depth_cube']: r#341
[#576 'texture_depth_cube_array']: r#341
[#576 'texture_depth_multisampled_2d']: r#341
[#576 'texture_multisampled_2d']: r#341
[#576 'texture_storage_1d']: r#341
[#576 'texture_storage_2d']: r#341
[#576 'texture_storage_2d_array']: r#341
[#576 'texture_storage_3d']: r#341
[#576 'u32']: r#341
[#576 'var']: r#341
[#576 'vec2']: r#341
[#576 'vec3']: r#341
[#576 'vec4']: r#341
[#576 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#341
[#577 '!']: s#63
[#577 '&']: s#66
[#577 '(']: s#78
[#577 ')']: r#272
[#577 '*']: s#65
[#577 '-']: s#62
[#577 'array']: s#82
[#577 'atomic']: s#96
[#577 'bitcast']: s#72
[#577 'bool']: s#89
[#577 'f16']: s#91
[#577 'f32']: s#90
[#577 'false']: s#88
[#577 'i32']: s#92
[#577 'mat2x2']: s#101
[#577 'mat2x3']: s#102
[#577 'mat2x4']: s#103
[#577 'mat3x2']: s#104
[#577 'mat3x3']: s#105
[#577 'mat3x4']: s#106
[#577 'mat4x2']: s#107
[#577 'mat4x3']: s#108
[#577 'mat4x4']: s#109
[#577 'ptr']: s#94
[#577 'sampler']: s#126
[#577 'sampler_comparison']: s#127
[#577 'texture_1d']: s#133
[#577 'texture_2d']: s#134
[#577 'texture_2d_array']: s#135
[#577 'texture_3d']: s#136
[#577 'texture_cube']: s#137
[#577 'texture_cube_array']: s#138
[#577 'texture_depth_2d']: s#128
[#577 'texture_depth_2d_array']: s#129
[#577 'texture_depth_cube']: s#130
[#577 'texture_depth_cube_array']: s#131
[#577 'texture_depth_multisampled_2d']: s#132
[#577 'texture_multisampled_2d']: s#139
[#577 'texture_storage_1d']: s#140
[#577 'texture_storage_2d']: s#141
[#577 'texture_storage_2d_array']: s#142
[#577 'texture_storage_3d']: s#143
[#577 'true']: s#87
[#577 'u32']: s#93
[#577 'vec2']: s#98
[#577 'vec3']: s#99
[#577 'vec4']: s#100
[#577 '~']: s#64
[#577 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#577 /0[fh]/]: s#113
[#577 /0[iu]?/]: s#110
[#577 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#577 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#577 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#577 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#577 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#577 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#577 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#577 /[1-9][0-9]*[fh]/]: s#114
[#577 /[1-9][0-9]*[iu]?/]: s#111
[#578 '@']: r#342
[#578 'array']: r#342
[#578 'atomic']: r#342
[#578 'bool']: r#342
[#578 'f16']: r#342
[#578 'f32']: r#342
[#578 'fn']: r#342
[#578 'i32']: r#342
[#578 'mat2x2']: r#342
[#578 'mat2x3']: r#342
[#578 'mat2x4']: r#342
[#578 'mat3x2']: r#342
[#578 'mat3x3']: r#342
[#578 'mat3x4']: r#342
[#578 'mat4x2']: r#342
[#578 'mat4x3']: r#342
[#578 'mat4x4']: r#342
[#578 'override']: r#342
[#578 'ptr']: r#342
[#578 'sampler']: r#342
[#578 'sampler_comparison']: r#342
[#578 'texture_1d']: r#342
[#578 'texture_2d']: r#342
[#578 'texture_2d_array']: r#342
[#578 'texture_3d']: r#342
[#578 'texture_cube']: r#342
[#578 'texture_cube_array']: r#342
[#578 'texture_depth_2d']: r#342
[#578 'texture_depth_2d_array']: r#342
[#578 'texture_depth_cube']: r#342
[#578 'texture_depth_cube_array']: r#342
[#578 'texture_depth_multisampled_2d']: r#342
[#578 'texture_multisampled_2d']: r#342
[#578 'texture_storage_1d']: r#342
[#578 'texture_storage_2d']: r#342
[#578 'texture_storage_2d_array']: r#342
[#578 'texture_storage_3d']: r#342
[#578 'u32']: r#342
[#578 'var']: r#342
[#578 'vec2']: r#342
[#578 'vec3']: r#342
[#578 'vec4']: r#342
[#578 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#342
[#579 ',']: s#468
[#580 /\u200B_template_args_end/]: s#486
[#581 'read']: s#538
[#581 'read_write']: s#540
[#581 'write']: s#539
[#582 '(']: r#343
[#582 ')']: r#343
[#582 ',']: r#343
[#582 ';']: r#343
[#582 '=']: r#343
[#582 '{']: r#343
[#582 '}']: r#343
[#582 /\u200B_template_args_end/]: r#343
[#583 '&']: r#344
[#583 '(']: r#344
[#583 '*']: r#344
[#583 ';']: r#344
[#583 '_']: r#344
[#583 'array']: r#344
[#583 'atomic']: r#344
[#583 'bool']: r#344
[#583 'break']: r#344
[#583 'const']: r#344
[#583 'const_assert']: r#344
[#583 'continue']: r#344
[#583 'continuing']: r#344
[#583 'discard']: r#344
[#583 'else']: r#344
[#583 'f16']: r#344
[#583 'f32']: r#344
[#583 'for']: r#344
[#583 'i32']: r#344
[#583 'if']: r#344
[#583 'let']: r#344
[#583 'loop']: r#344
[#583 'mat2x2']: r#344
[#583 'mat2x3']: r#344
[#583 'mat2x4']: r#344
[#583 'mat3x2']: r#344
[#583 'mat3x3']: r#344
[#583 'mat3x4']: r#344
[#583 'mat4x2']: r#344
[#583 'mat4x3']: r#344
[#583 'mat4x4']: r#344
[#583 'ptr']: r#344
[#583 'return']: r#344
[#583 'sampler']: r#344
[#583 'sampler_comparison']: r#344
[#583 'switch']: r#344
[#583 'texture_1d']: r#344
[#583 'texture_2d']: r#344
[#583 'texture_2d_array']: r#344
[#583 'texture_3d']: r#344
[#583 'texture_cube']: r#344
[#583 'texture_cube_array']: r#344
[#583 'texture_depth_2d']: r#344
[#583 'texture_depth_2d_array']: r#344
[#583 'texture_depth_cube']: r#344
[#583 'texture_depth_cube_array']: r#344
[#583 'texture_depth_multisampled_2d']: r#344
[#583 'texture_multisampled_2d']: r#344
[#583 'texture_storage_1d']: r#344
[#583 'texture_storage_2d']: r#344
[#583 'texture_storage_2d_array']: r#344
[#583 'texture_storage_3d']: r#344
[#583 'u32']: r#344
[#583 'var']: r#344
[#583 'vec2']: r#344
[#583 'vec3']: r#344
[#583 'vec4']: r#344
[#583 'while']: r#344
[#583 '{']: r#344
[#583 '}']: r#344
[#583 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#344
[#584 '{']: s#172
[#585 '{']: r#345
[#586 ':']: s#613
[#587 ',']: s#611
[#588 ',']: r#346
[#588 ':']: r#346
[#588 '{']: r#346
[#589 ',']: r#347
[#589 ':']: r#347
[#589 '{']: r#347
[#590 '}']: r#348
[#591 '&']: r#349
[#591 '(']: r#349
[#591 '*']: r#349
[#591 ';']: r#349
[#591 '_']: r#349
[#591 'array']: r#349
[#591 'atomic']: r#349
[#591 'bool']: r#349
[#591 'break']: r#349
[#591 'const']: r#349
[#591 'const_assert']: r#349
[#591 'continue']: r#349
[#591 'continuing']: r#349
[#591 'discard']: r#349
[#591 'f16']: r#349
[#591 'f32']: r#349
[#591 'for']: r#349
[#591 'i32']: r#349
[#591 'if']: r#349
[#591 'let']: r#349
[#591 'loop']: r#349
[#591 'mat2x2']: r#349
[#591 'mat2x3']: r#349
[#591 'mat2x4']: r#349
[#591 'mat3x2']: r#349
[#591 'mat3x3']: r#349
[#591 'mat3x4']: r#349
[#591 'mat4x2']: r#349
[#591 'mat4x3']: r#349
[#591 'mat4x4']: r#349
[#591 'ptr']: r#349
[#591 'return']: r#349
[#591 'sampler']: r#349
[#591 'sampler_comparison']: r#349
[#591 'switch']: r#349
[#591 'texture_1d']: r#349
[#591 'texture_2d']: r#349
[#591 'texture_2d_array']: r#349
[#591 'texture_3d']: r#349
[#591 'texture_cube']: r#349
[#591 'texture_cube_array']: r#349
[#591 'texture_depth_2d']: r#349
[#591 'texture_depth_2d_array']: r#349
[#591 'texture_depth_cube']: r#349
[#591 'texture_depth_cube_array']: r#349
[#591 'texture_depth_multisampled_2d']: r#349
[#591 'texture_multisampled_2d']: r#349
[#591 'texture_storage_1d']: r#349
[#591 'texture_storage_2d']: r#349
[#591 'texture_storage_2d_array']: r#349
[#591 'texture_storage_3d']: r#349
[#591 'u32']: r#349
[#591 'var']: r#349
[#591 'vec2']: r#349
[#591 'vec3']: r#349
[#591 'vec4']: r#349
[#591 'while']: r#349
[#591 '{']: r#349
[#591 '}']: r#349
[#591 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#349
[#592 '}']: r#350
[#593 '&']: s#335
[#593 '(']: s#336
[#593 '*']: s#334
[#593 ';']: s#299
[#593 '_']: s#332
[#593 'array']: s#82
[#593 'atomic']: s#96
[#593 'bool']: s#89
[#593 'break']: s#324
[#593 'const']: s#323
[#593 'const_assert']: s#25
[#593 'continue']: s#325
[#593 'discard']: s#310
[#593 'f16']: s#91
[#593 'f32']: s#90
[#593 'for']: s#318
[#593 'i32']: s#92
[#593 'if']: s#329
[#593 'let']: s#322
[#593 'loop']: s#317
[#593 'mat2x2']: s#101
[#593 'mat2x3']: s#102
[#593 'mat2x4']: s#103
[#593 'mat3x2']: s#104
[#593 'mat3x3']: s#105
[#593 'mat3x4']: s#106
[#593 'mat4x2']: s#107
[#593 'mat4x3']: s#108
[#593 'mat4x4']: s#109
[#593 'ptr']: s#94
[#593 'return']: s#314
[#593 'sampler']: s#126
[#593 'sampler_comparison']: s#127
[#593 'switch']: s#316
[#593 'texture_1d']: s#133
[#593 'texture_2d']: s#134
[#593 'texture_2d_array']: s#135
[#593 'texture_3d']: s#136
[#593 'texture_cube']: s#137
[#593 'texture_cube_array']: s#138
[#593 'texture_depth_2d']: s#128
[#593 'texture_depth_2d_array']: s#129
[#593 'texture_depth_cube']: s#130
[#593 'texture_depth_cube_array']: s#131
[#593 'texture_depth_multisampled_2d']: s#132
[#593 'texture_multisampled_2d']: s#139
[#593 'texture_storage_1d']: s#140
[#593 'texture_storage_2d']: s#141
[#593 'texture_storage_2d_array']: s#142
[#593 'texture_storage_3d']: s#143
[#593 'u32']: s#93
[#593 'var']: s#152
[#593 'vec2']: s#98
[#593 'vec3']: s#99
[#593 'vec4']: s#100
[#593 'while']: s#319
[#593 '{']: s#172
[#593 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#594 '&']: r#351
[#594 '(']: r#351
[#594 '*']: r#351
[#594 ';']: r#351
[#594 '_']: r#351
[#594 'array']: r#351
[#594 'atomic']: r#351
[#594 'bool']: r#351
[#594 'break']: r#351
[#594 'const']: r#351
[#594 'const_assert']: r#351
[#594 'continue']: r#351
[#594 'continuing']: r#351
[#594 'discard']: r#351
[#594 'f16']: r#351
[#594 'f32']: r#351
[#594 'for']: r#351
[#594 'i32']: r#351
[#594 'if']: r#351
[#594 'let']: r#351
[#594 'loop']: r#351
[#594 'mat2x2']: r#351
[#594 'mat2x3']: r#351
[#594 'mat2x4']: r#351
[#594 'mat3x2']: r#351
[#594 'mat3x3']: r#351
[#594 'mat3x4']: r#351
[#594 'mat4x2']: r#351
[#594 'mat4x3']: r#351
[#594 'mat4x4']: r#351
[#594 'ptr']: r#351
[#594 'return']: r#351
[#594 'sampler']: r#351
[#594 'sampler_comparison']: r#351
[#594 'switch']: r#351
[#594 'texture_1d']: r#351
[#594 'texture_2d']: r#351
[#594 'texture_2d_array']: r#351
[#594 'texture_3d']: r#351
[#594 'texture_cube']: r#351
[#594 'texture_cube_array']: r#351
[#594 'texture_depth_2d']: r#351
[#594 'texture_depth_2d_array']: r#351
[#594 'texture_depth_cube']: r#351
[#594 'texture_depth_cube_array']: r#351
[#594 'texture_depth_multisampled_2d']: r#351
[#594 'texture_multisampled_2d']: r#351
[#594 'texture_storage_1d']: r#351
[#594 'texture_storage_2d']: r#351
[#594 'texture_storage_2d_array']: r#351
[#594 'texture_storage_3d']: r#351
[#594 'u32']: r#351
[#594 'var']: r#351
[#594 'vec2']: r#351
[#594 'vec3']: r#351
[#594 'vec4']: r#351
[#594 'while']: r#351
[#594 '{']: r#351
[#594 '}']: r#351
[#594 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#351
[#595 '&']: r#352
[#595 '(']: r#352
[#595 '*']: r#352
[#595 ';']: r#352
[#595 '_']: r#352
[#595 'array']: r#352
[#595 'atomic']: r#352
[#595 'bool']: r#352
[#595 'break']: r#352
[#595 'const']: r#352
[#595 'const_assert']: r#352
[#595 'continue']: r#352
[#595 'continuing']: r#352
[#595 'discard']: r#352
[#595 'f16']: r#352
[#595 'f32']: r#352
[#595 'for']: r#352
[#595 'i32']: r#352
[#595 'if']: r#352
[#595 'let']: r#352
[#595 'loop']: r#352
[#595 'mat2x2']: r#352
[#595 'mat2x3']: r#352
[#595 'mat2x4']: r#352
[#595 'mat3x2']: r#352
[#595 'mat3x3']: r#352
[#595 'mat3x4']: r#352
[#595 'mat4x2']: r#352
[#595 'mat4x3']: r#352
[#595 'mat4x4']: r#352
[#595 'ptr']: r#352
[#595 'return']: r#352
[#595 'sampler']: r#352
[#595 'sampler_comparison']: r#352
[#595 'switch']: r#352
[#595 'texture_1d']: r#352
[#595 'texture_2d']: r#352
[#595 'texture_2d_array']: r#352
[#595 'texture_3d']: r#352
[#595 'texture_cube']: r#352
[#595 'texture_cube_array']: r#352
[#595 'texture_depth_2d']: r#352
[#595 'texture_depth_2d_array']: r#352
[#595 'texture_depth_cube']: r#352
[#595 'texture_depth_cube_array']: r#352
[#595 'texture_depth_multisampled_2d']: r#352
[#595 'texture_multisampled_2d']: r#352
[#595 'texture_storage_1d']: r#352
[#595 'texture_storage_2d']: r#352
[#595 'texture_storage_2d_array']: r#352
[#595 'texture_storage_3d']: r#352
[#595 'u32']: r#352
[#595 'var']: r#352
[#595 'vec2']: r#352
[#595 'vec3']: r#352
[#595 'vec4']: r#352
[#595 'while']: r#352
[#595 '{']: r#352
[#595 '}']: r#352
[#595 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#352
[#596 ';']: s#604
[#597 ';']: r#353
[#598 ')']: r#354
[#598 ',']: r#354
[#599 'array']: s#347
[#599 'atomic']: s#96
[#599 'bool']: s#89
[#599 'f16']: s#91
[#599 'f32']: s#90
[#599 'i32']: s#92
[#599 'mat2x2']: s#101
[#599 'mat2x3']: s#102
[#599 'mat2x4']: s#103
[#599 'mat3x2']: s#104
[#599 'mat3x3']: s#105
[#599 'mat3x4']: s#106
[#599 'mat4x2']: s#107
[#599 'mat4x3']: s#108
[#599 'mat4x4']: s#109
[#599 'ptr']: s#94
[#599 'sampler']: s#126
[#599 'sampler_comparison']: s#127
[#599 'texture_1d']: s#133
[#599 'texture_2d']: s#134
[#599 'texture_2d_array']: s#135
[#599 'texture_3d']: s#136
[#599 'texture_cube']: s#137
[#599 'texture_cube_array']: s#138
[#599 'texture_depth_2d']: s#128
[#599 'texture_depth_2d_array']: s#129
[#599 'texture_depth_cube']: s#130
[#599 'texture_depth_cube_array']: s#131
[#599 'texture_depth_multisampled_2d']: s#132
[#599 'texture_multisampled_2d']: s#139
[#599 'texture_storage_1d']: s#140
[#599 'texture_storage_2d']: s#141
[#599 'texture_storage_2d_array']: s#142
[#599 'texture_storage_3d']: s#143
[#599 'u32']: s#93
[#599 'vec2']: s#98
[#599 'vec3']: s#99
[#599 'vec4']: s#100
[#599 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#600 'array']: r#355
[#600 'atomic']: r#355
[#600 'bool']: r#355
[#600 'f16']: r#355
[#600 'f32']: r#355
[#600 'i32']: r#355
[#600 'mat2x2']: r#355
[#600 'mat2x3']: r#355
[#600 'mat2x4']: r#355
[#600 'mat3x2']: r#355
[#600 'mat3x3']: r#355
[#600 'mat3x4']: r#355
[#600 'mat4x2']: r#355
[#600 'mat4x3']: r#355
[#600 'mat4x4']: r#355
[#600 'ptr']: r#355
[#600 'sampler']: r#355
[#600 'sampler_comparison']: r#355
[#600 'texture_1d']: r#355
[#600 'texture_2d']: r#355
[#600 'texture_2d_array']: r#355
[#600 'texture_3d']: r#355
[#600 'texture_cube']: r#355
[#600 'texture_cube_array']: r#355
[#600 'texture_depth_2d']: r#355
[#600 'texture_depth_2d_array']: r#355
[#600 'texture_depth_cube']: r#355
[#600 'texture_depth_cube_array']: r#355
[#600 'texture_depth_multisampled_2d']: r#355
[#600 'texture_multisampled_2d']: r#355
[#600 'texture_storage_1d']: r#355
[#600 'texture_storage_2d']: r#355
[#600 'texture_storage_2d_array']: r#355
[#600 'texture_storage_3d']: r#355
[#600 'u32']: r#355
[#600 'vec2']: r#355
[#600 'vec3']: r#355
[#600 'vec4']: r#355
[#600 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#355
[#601 '@']: s#30
[#602 'array']: r#356
[#602 'atomic']: r#356
[#602 'bool']: r#356
[#602 'f16']: r#356
[#602 'f32']: r#356
[#602 'i32']: r#356
[#602 'mat2x2']: r#356
[#602 'mat2x3']: r#356
[#602 'mat2x4']: r#356
[#602 'mat3x2']: r#356
[#602 'mat3x3']: r#356
[#602 'mat3x4']: r#356
[#602 'mat4x2']: r#356
[#602 'mat4x3']: r#356
[#602 'mat4x4']: r#356
[#602 'ptr']: r#356
[#602 'sampler']: r#356
[#602 'sampler_comparison']: r#356
[#602 'texture_1d']: r#356
[#602 'texture_2d']: r#356
[#602 'texture_2d_array']: r#356
[#602 'texture_3d']: r#356
[#602 'texture_cube']: r#356
[#602 'texture_cube_array']: r#356
[#602 'texture_depth_2d']: r#356
[#602 'texture_depth_2d_array']: r#356
[#602 'texture_depth_cube']: r#356
[#602 'texture_depth_cube_array']: r#356
[#602 'texture_depth_multisampled_2d']: r#356
[#602 'texture_multisampled_2d']: r#356
[#602 'texture_storage_1d']: r#356
[#602 'texture_storage_2d']: r#356
[#602 'texture_storage_2d_array']: r#356
[#602 'texture_storage_3d']: r#356
[#602 'u32']: r#356
[#602 'vec2']: r#356
[#602 'vec3']: r#356
[#602 'vec4']: r#356
[#602 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#356
[#603 '{']: r#357
[#604 '&']: s#335
[#604 '(']: s#336
[#604 '*']: s#334
[#604 '_']: s#332
[#604 'array']: s#82
[#604 'atomic']: s#96
[#604 'bool']: s#89
[#604 'f16']: s#91
[#604 'f32']: s#90
[#604 'i32']: s#92
[#604 'mat2x2']: s#101
[#604 'mat2x3']: s#102
[#604 'mat2x4']: s#103
[#604 'mat3x2']: s#104
[#604 'mat3x3']: s#105
[#604 'mat3x4']: s#106
[#604 'mat4x2']: s#107
[#604 'mat4x3']: s#108
[#604 'mat4x4']: s#109
[#604 'ptr']: s#94
[#604 'sampler']: s#126
[#604 'sampler_comparison']: s#127
[#604 'texture_1d']: s#133
[#604 'texture_2d']: s#134
[#604 'texture_2d_array']: s#135
[#604 'texture_3d']: s#136
[#604 'texture_cube']: s#137
[#604 'texture_cube_array']: s#138
[#604 'texture_depth_2d']: s#128
[#604 'texture_depth_2d_array']: s#129
[#604 'texture_depth_cube']: s#130
[#604 'texture_depth_cube_array']: s#131
[#604 'texture_depth_multisampled_2d']: s#132
[#604 'texture_multisampled_2d']: s#139
[#604 'texture_storage_1d']: s#140
[#604 'texture_storage_2d']: s#141
[#604 'texture_storage_2d_array']: s#142
[#604 'texture_storage_3d']: s#143
[#604 'u32']: s#93
[#604 'vec2']: s#98
[#604 'vec3']: s#99
[#604 'vec4']: s#100
[#604 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#605 'break']: s#626
[#606 'break']: r#358
[#606 '}']: r#358
[#607 '&']: s#335
[#607 '(']: s#336
[#607 '*']: s#334
[#607 ';']: s#299
[#607 '_']: s#332
[#607 'array']: s#82
[#607 'atomic']: s#96
[#607 'bool']: s#89
[#607 'break']: s#324
[#607 'const']: s#323
[#607 'const_assert']: s#25
[#607 'continue']: s#325
[#607 'discard']: s#310
[#607 'f16']: s#91
[#607 'f32']: s#90
[#607 'for']: s#318
[#607 'i32']: s#92
[#607 'if']: s#329
[#607 'let']: s#322
[#607 'loop']: s#317
[#607 'mat2x2']: s#101
[#607 'mat2x3']: s#102
[#607 'mat2x4']: s#103
[#607 'mat3x2']: s#104
[#607 'mat3x3']: s#105
[#607 'mat3x4']: s#106
[#607 'mat4x2']: s#107
[#607 'mat4x3']: s#108
[#607 'mat4x4']: s#109
[#607 'ptr']: s#94
[#607 'return']: s#314
[#607 'sampler']: s#126
[#607 'sampler_comparison']: s#127
[#607 'switch']: s#316
[#607 'texture_1d']: s#133
[#607 'texture_2d']: s#134
[#607 'texture_2d_array']: s#135
[#607 'texture_3d']: s#136
[#607 'texture_cube']: s#137
[#607 'texture_cube_array']: s#138
[#607 'texture_depth_2d']: s#128
[#607 'texture_depth_2d_array']: s#129
[#607 'texture_depth_cube']: s#130
[#607 'texture_depth_cube_array']: s#131
[#607 'texture_depth_multisampled_2d']: s#132
[#607 'texture_multisampled_2d']: s#139
[#607 'texture_storage_1d']: s#140
[#607 'texture_storage_2d']: s#141
[#607 'texture_storage_2d_array']: s#142
[#607 'texture_storage_3d']: s#143
[#607 'u32']: s#93
[#607 'var']: s#152
[#607 'vec2']: s#98
[#607 'vec3']: s#99
[#607 'vec4']: s#100
[#607 'while']: s#319
[#607 '{']: s#172
[#607 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#608 ',']: s#622
[#609 ',']: r#359
[#609 ':']: r#359
[#609 '{']: r#359
[#610 ',']: s#611
[#611 '!']: s#63
[#611 '&']: s#66
[#611 '(']: s#78
[#611 '*']: s#65
[#611 '-']: s#62
[#611 'array']: s#82
[#611 'atomic']: s#96
[#611 'bitcast']: s#72
[#611 'bool']: s#89
[#611 'default']: s#588
[#611 'f16']: s#91
[#611 'f32']: s#90
[#611 'false']: s#88
[#611 'i32']: s#92
[#611 'mat2x2']: s#101
[#611 'mat2x3']: s#102
[#611 'mat2x4']: s#103
[#611 'mat3x2']: s#104
[#611 'mat3x3']: s#105
[#611 'mat3x4']: s#106
[#611 'mat4x2']: s#107
[#611 'mat4x3']: s#108
[#611 'mat4x4']: s#109
[#611 'ptr']: s#94
[#611 'sampler']: s#126
[#611 'sampler_comparison']: s#127
[#611 'texture_1d']: s#133
[#611 'texture_2d']: s#134
[#611 'texture_2d_array']: s#135
[#611 'texture_3d']: s#136
[#611 'texture_cube']: s#137
[#611 'texture_cube_array']: s#138
[#611 'texture_depth_2d']: s#128
[#611 'texture_depth_2d_array']: s#129
[#611 'texture_depth_cube']: s#130
[#611 'texture_depth_cube_array']: s#131
[#611 'texture_depth_multisampled_2d']: s#132
[#611 'texture_multisampled_2d']: s#139
[#611 'texture_storage_1d']: s#140
[#611 'texture_storage_2d']: s#141
[#611 'texture_storage_2d_array']: s#142
[#611 'texture_storage_3d']: s#143
[#611 'true']: s#87
[#611 'u32']: s#93
[#611 'vec2']: s#98
[#611 'vec3']: s#99
[#611 'vec4']: s#100
[#611 '~']: s#64
[#611 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#611 /0[fh]/]: s#113
[#611 /0[iu]?/]: s#110
[#611 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#611 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#611 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#611 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#611 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#611 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#611 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#611 /[1-9][0-9]*[fh]/]: s#114
[#611 /[1-9][0-9]*[iu]?/]: s#111
[#612 '{']: s#172
[#613 '{']: r#360
[#614 'case']: r#361
[#614 'default']: r#361
[#614 '}']: r#361
[#615 /\u200B_template_args_end/]: r#362
[#616 '(']: r#363
[#616 ')']: r#363
[#616 ',']: r#363
[#616 ';']: r#363
[#616 '=']: r#363
[#616 '{']: r#363
[#616 '}']: r#363
[#616 /\u200B_template_args_end/]: r#363
[#617 '@']: r#364
[#617 'array']: r#364
[#617 'atomic']: r#364
[#617 'bool']: r#364
[#617 'f16']: r#364
[#617 'f32']: r#364
[#617 'fn']: r#364
[#617 'i32']: r#364
[#617 'mat2x2']: r#364
[#617 'mat2x3']: r#364
[#617 'mat2x4']: r#364
[#617 'mat3x2']: r#364
[#617 'mat3x3']: r#364
[#617 'mat3x4']: r#364
[#617 'mat4x2']: r#364
[#617 'mat4x3']: r#364
[#617 'mat4x4']: r#364
[#617 'override']: r#364
[#617 'ptr']: r#364
[#617 'sampler']: r#364
[#617 'sampler_comparison']: r#364
[#617 'texture_1d']: r#364
[#617 'texture_2d']: r#364
[#617 'texture_2d_array']: r#364
[#617 'texture_3d']: r#364
[#617 'texture_cube']: r#364
[#617 'texture_cube_array']: r#364
[#617 'texture_depth_2d']: r#364
[#617 'texture_depth_2d_array']: r#364
[#617 'texture_depth_cube']: r#364
[#617 'texture_depth_cube_array']: r#364
[#617 'texture_depth_multisampled_2d']: r#364
[#617 'texture_multisampled_2d']: r#364
[#617 'texture_storage_1d']: r#364
[#617 'texture_storage_2d']: r#364
[#617 'texture_storage_2d_array']: r#364
[#617 'texture_storage_3d']: r#364
[#617 'u32']: r#364
[#617 'var']: r#364
[#617 'vec2']: r#364
[#617 'vec3']: r#364
[#617 'vec4']: r#364
[#617 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#364
[#618 'case']: r#365
[#618 'default']: r#365
[#618 '}']: r#365
[#619 ',']: r#366
[#619 ':']: r#366
[#619 '{']: r#366
[#620 ',']: r#367
[#620 ':']: r#367
[#620 '{']: r#367
[#621 ':']: r#368
[#621 '{']: r#368
[#622 ':']: r#369
[#622 '{']: r#369
[#623 'break']: r#370
[#623 '}']: r#370
[#624 '}']: s#632
[#625 '}']: r#371
[#626 'if']: s#631
[#627 ')']: r#372
[#628 ')']: r#373
[#629 ')']: r#374
[#630 ')']: r#375
[#631 '!']: s#63
[#631 '&']: s#66
[#631 '(']: s#78
[#631 '*']: s#65
[#631 '-']: s#62
[#631 'array']: s#82
[#631 'atomic']: s#96
[#631 'bitcast']: s#72
[#631 'bool']: s#89
[#631 'f16']: s#91
[#631 'f32']: s#90
[#631 'false']: s#88
[#631 'i32']: s#92
[#631 'mat2x2']: s#101
[#631 'mat2x3']: s#102
[#631 'mat2x4']: s#103
[#631 'mat3x2']: s#104
[#631 'mat3x3']: s#105
[#631 'mat3x4']: s#106
[#631 'mat4x2']: s#107
[#631 'mat4x3']: s#108
[#631 'mat4x4']: s#109
[#631 'ptr']: s#94
[#631 'sampler']: s#126
[#631 'sampler_comparison']: s#127
[#631 'texture_1d']: s#133
[#631 'texture_2d']: s#134
[#631 'texture_2d_array']: s#135
[#631 'texture_3d']: s#136
[#631 'texture_cube']: s#137
[#631 'texture_cube_array']: s#138
[#631 'texture_depth_2d']: s#128
[#631 'texture_depth_2d_array']: s#129
[#631 'texture_depth_cube']: s#130
[#631 'texture_depth_cube_array']: s#131
[#631 'texture_depth_multisampled_2d']: s#132
[#631 'texture_multisampled_2d']: s#139
[#631 'texture_storage_1d']: s#140
[#631 'texture_storage_2d']: s#141
[#631 'texture_storage_2d_array']: s#142
[#631 'texture_storage_3d']: s#143
[#631 'true']: s#87
[#631 'u32']: s#93
[#631 'vec2']: s#98
[#631 'vec3']: s#99
[#631 'vec4']: s#100
[#631 '~']: s#64
[#631 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#73
[#631 /0[fh]/]: s#113
[#631 /0[iu]?/]: s#110
[#631 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#118
[#631 /0[xX][0-9a-fA-F]+[iu]?/]: s#112
[#631 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#120
[#631 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#119
[#631 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#115
[#631 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#117
[#631 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#116
[#631 /[1-9][0-9]*[fh]/]: s#114
[#631 /[1-9][0-9]*[iu]?/]: s#111
[#632 '}']: r#376
[#633 ';']: s#634
[#634 '}']: r#377

=Goto:
[#0 global_directive]: #4
[#0 translation_unit]: #1
[#0 translation_unit/0.0]: #2
[#0 translation_unit/0.0/0]: #3
[#2 attribute]: #29
[#2 const_assert_statement]: #18
[#2 function_decl]: #17
[#2 function_decl/0.0]: #24
[#2 function_decl/0.0/0]: #28
[#2 global_constant_decl]: #14
[#2 global_constant_decl/1.0]: #21
[#2 global_constant_decl/1.0/0]: #27
[#2 global_decl]: #11
[#2 global_variable_decl]: #13
[#2 global_variable_decl/0.0]: #19
[#2 global_variable_decl/0.0/0]: #26
[#2 struct_decl]: #16
[#2 translation_unit/0.1]: #9
[#2 translation_unit/0.1/0]: #10
[#2 type_alias_decl]: #15
[#4 global_directive]: #4
[#4 translation_unit/0.0/0]: #8
[#5 extension_name]: #6
[#11 attribute]: #29
[#11 const_assert_statement]: #18
[#11 function_decl]: #17
[#11 function_decl/0.0]: #24
[#11 function_decl/0.0/0]: #28
[#11 global_constant_decl]: #14
[#11 global_constant_decl/1.0]: #21
[#11 global_constant_decl/1.0/0]: #27
[#11 global_decl]: #11
[#11 global_variable_decl]: #13
[#11 global_variable_decl/0.0]: #19
[#11 global_variable_decl/0.0/0]: #26
[#11 struct_decl]: #16
[#11 translation_unit/0.1/0]: #157
[#11 type_alias_decl]: #15
[#19 variable_decl]: #151
[#20 ident]: #150
[#20 optionally_typed_ident]: #149
[#22 ident]: #147
[#23 ident]: #146
[#24 function_header]: #144
[#25 additive_expression]: #58
[#25 array_type_specifier]: #95
[#25 binary_and_expression]: #55
[#25 binary_or_expression]: #56
[#25 binary_xor_expression]: #57
[#25 bitwise_expression]: #53
[#25 bool_literal]: #77
[#25 call_expression]: #69
[#25 callable]: #74
[#25 decimal_float_literal]: #85
[#25 decimal_int_literal]: #83
[#25 depth_texture_type]: #122
[#25 expression]: #49
[#25 float_literal]: #76
[#25 hex_float_literal]: #86
[#25 hex_int_literal]: #84
[#25 ident]: #68
[#25 int_literal]: #75
[#25 literal]: #70
[#25 mat_prefix]: #81
[#25 multiplicative_expression]: #60
[#25 multisampled_texture_type]: #124
[#25 paren_expression]: #71
[#25 primary_expression]: #67
[#25 relational_expression]: #50
[#25 sampled_texture_type]: #123
[#25 sampler_type]: #121
[#25 shift_expression]: #54
[#25 short_circuit_and_expression]: #52
[#25 short_circuit_or_expression]: #51
[#25 singular_expression]: #61
[#25 storage_texture_type]: #125
[#25 texture_and_sampler_types]: #97
[#25 type_specifier_without_ident]: #79
[#25 unary_expression]: #59
[#25 vec_prefix]: #80
[#29 attribute]: #29
[#29 function_decl/0.0/0]: #48
[#29 global_constant_decl/1.0/0]: #47
[#29 global_variable_decl/0.0/0]: #46
[#54 _greater_than]: #209
[#54 _greater_than_equal]: #211
[#54 _less_than]: #208
[#54 _less_than_equal]: #210
[#58 additive_operator]: #202
[#59 _shift_left]: #198
[#59 _shift_right]: #199
[#60 multiplicative_operator]: #194
[#62 array_type_specifier]: #95
[#62 bool_literal]: #77
[#62 call_expression]: #69
[#62 callable]: #74
[#62 decimal_float_literal]: #85
[#62 decimal_int_literal]: #83
[#62 depth_texture_type]: #122
[#62 float_literal]: #76
[#62 hex_float_literal]: #86
[#62 hex_int_literal]: #84
[#62 ident]: #68
[#62 int_literal]: #75
[#62 literal]: #70
[#62 mat_prefix]: #81
[#62 multisampled_texture_type]: #124
[#62 paren_expression]: #71
[#62 primary_expression]: #67
[#62 sampled_texture_type]: #123
[#62 sampler_type]: #121
[#62 singular_expression]: #61
[#62 storage_texture_type]: #125
[#62 texture_and_sampler_types]: #97
[#62 type_specifier_without_ident]: #79
[#62 unary_expression]: #193
[#62 vec_prefix]: #80
[#63 array_type_specifier]: #95
[#63 bool_literal]: #77
[#63 call_expression]: #69
[#63 callable]: #74
[#63 decimal_float_literal]: #85
[#63 decimal_int_literal]: #83
[#63 depth_texture_type]: #122
[#63 float_literal]: #76
[#63 hex_float_literal]: #86
[#63 hex_int_literal]: #84
[#63 ident]: #68
[#63 int_literal]: #75
[#63 literal]: #70
[#63 mat_prefix]: #81
[#63 multisampled_texture_type]: #124
[#63 paren_expression]: #71
[#63 primary_expression]: #67
[#63 sampled_texture_type]: #123
[#63 sampler_type]: #121
[#63 singular_expression]: #61
[#63 storage_texture_type]: #125
[#63 texture_and_sampler_types]: #97
[#63 type_specifier_without_ident]: #79
[#63 unary_expression]: #192
[#63 vec_prefix]: #80
[#64 array_type_specifier]: #95
[#64 bool_literal]: #77
[#64 call_expression]: #69
[#64 callable]: #74
[#64 decimal_float_literal]: #85
[#64 decimal_int_literal]: #83
[#64 depth_texture_type]: #122
[#64 float_literal]: #76
[#64 hex_float_literal]: #86
[#64 hex_int_literal]: #84
[#64 ident]: #68
[#64 int_literal]: #75
[#64 literal]: #70
[#64 mat_prefix]: #81
[#64 multisampled_texture_type]: #124
[#64 paren_expression]: #71
[#64 primary_expression]: #67
[#64 sampled_texture_type]: #123
[#64 sampler_type]: #121
[#64 singular_expression]: #61
[#64 storage_texture_type]: #125
[#64 texture_and_sampler_types]: #97
[#64 type_specifier_without_ident]: #79
[#64 unary_expression]: #191
[#64 vec_prefix]: #80
[#65 array_type_specifier]: #95
[#65 bool_literal]: #77
[#65 call_expression]: #69
[#65 callable]: #74
[#65 decimal_float_literal]: #85
[#65 decimal_int_literal]: #83
[#65 depth_texture_type]: #122
[#65 float_literal]: #76
[#65 hex_float_literal]: #86
[#65 hex_int_literal]: #84
[#65 ident]: #68
[#65 int_literal]: #75
[#65 literal]: #70
[#65 mat_prefix]: #81
[#65 multisampled_texture_type]: #124
[#65 paren_expression]: #71
[#65 primary_expression]: #67
[#65 sampled_texture_type]: #123
[#65 sampler_type]: #121
[#65 singular_expression]: #61
[#65 storage_texture_type]: #125
[#65 texture_and_sampler_types]: #97
[#65 type_specifier_without_ident]: #79
[#65 unary_expression]: #190
[#65 vec_prefix]: #80
[#66 array_type_specifier]: #95
[#66 bool_literal]: #77
[#66 call_expression]: #69
[#66 callable]: #74
[#66 decimal_float_literal]: #85
[#66 decimal_int_literal]: #83
[#66 depth_texture_type]: #122
[#66 float_literal]: #76
[#66 hex_float_literal]: #86
[#66 hex_int_literal]: #84
[#66 ident]: #68
[#66 int_literal]: #75
[#66 literal]: #70
[#66 mat_prefix]: #81
[#66 multisampled_texture_type]: #124
[#66 paren_expression]: #71
[#66 primary_expression]: #67
[#66 sampled_texture_type]: #123
[#66 sampler_type]: #121
[#66 singular_expression]: #61
[#66 storage_texture_type]: #125
[#66 texture_and_sampler_types]: #97
[#66 type_specifier_without_ident]: #79
[#66 unary_expression]: #189
[#66 vec_prefix]: #80
[#67 component_or_swizzle_specifier]: #186
[#67 singular_expression/0.1]: #185
[#72 _disambiguate_template]: #184
[#74 argument_expression_list]: #182
[#78 additive_expression]: #58
[#78 array_type_specifier]: #95
[#78 binary_and_expression]: #55
[#78 binary_or_expression]: #56
[#78 binary_xor_expression]: #57
[#78 bitwise_expression]: #53
[#78 bool_literal]: #77
[#78 call_expression]: #69
[#78 callable]: #74
[#78 decimal_float_literal]: #85
[#78 decimal_int_literal]: #83
[#78 depth_texture_type]: #122
[#78 expression]: #181
[#78 float_literal]: #76
[#78 hex_float_literal]: #86
[#78 hex_int_literal]: #84
[#78 ident]: #68
[#78 int_literal]: #75
[#78 literal]: #70
[#78 mat_prefix]: #81
[#78 multiplicative_expression]: #60
[#78 multisampled_texture_type]: #124
[#78 paren_expression]: #71
[#78 primary_expression]: #67
[#78 relational_expression]: #50
[#78 sampled_texture_type]: #123
[#78 sampler_type]: #121
[#78 shift_expression]: #54
[#78 short_circuit_and_expression]: #52
[#78 short_circuit_or_expression]: #51
[#78 singular_expression]: #61
[#78 storage_texture_type]: #125
[#78 texture_and_sampler_types]: #97
[#78 type_specifier_without_ident]: #79
[#78 unary_expression]: #59
[#78 vec_prefix]: #80
[#80 _disambiguate_template]: #180
[#81 _disambiguate_template]: #179
[#82 _disambiguate_template]: #178
[#94 _disambiguate_template]: #177
[#96 _disambiguate_template]: #176
[#123 _disambiguate_template]: #175
[#124 _disambiguate_template]: #174
[#125 _disambiguate_template]: #173
[#144 compound_statement]: #171
[#145 ident]: #170
[#146 struct_body_decl]: #168
[#148 ident]: #150
[#148 optionally_typed_ident]: #166
[#150 optionally_typed_ident/0.1]: #163
[#151 global_variable_decl/0.2]: #161
[#152 _disambiguate_template]: #159
[#159 _template_args_start]: #355
[#159 variable_decl/0.2]: #353
[#159 variable_qualifier]: #354
[#162 additive_expression]: #58
[#162 array_type_specifier]: #95
[#162 binary_and_expression]: #55
[#162 binary_or_expression]: #56
[#162 binary_xor_expression]: #57
[#162 bitwise_expression]: #53
[#162 bool_literal]: #77
[#162 call_expression]: #69
[#162 callable]: #74
[#162 decimal_float_literal]: #85
[#162 decimal_int_literal]: #83
[#162 depth_texture_type]: #122
[#162 expression]: #352
[#162 float_literal]: #76
[#162 hex_float_literal]: #86
[#162 hex_int_literal]: #84
[#162 ident]: #68
[#162 int_literal]: #75
[#162 literal]: #70
[#162 mat_prefix]: #81
[#162 multiplicative_expression]: #60
[#162 multisampled_texture_type]: #124
[#162 paren_expression]: #71
[#162 primary_expression]: #67
[#162 relational_expression]: #50
[#162 sampled_texture_type]: #123
[#162 sampler_type]: #121
[#162 shift_expression]: #54
[#162 short_circuit_and_expression]: #52
[#162 short_circuit_or_expression]: #51
[#162 singular_expression]: #61
[#162 storage_texture_type]: #125
[#162 texture_and_sampler_types]: #97
[#162 type_specifier_without_ident]: #79
[#162 unary_expression]: #59
[#162 vec_prefix]: #80
[#164 array_type_specifier]: #95
[#164 depth_texture_type]: #122
[#164 ident]: #343
[#164 mat_prefix]: #346
[#164 multisampled_texture_type]: #124
[#164 sampled_texture_type]: #123
[#164 sampler_type]: #121
[#164 storage_texture_type]: #125
[#164 texture_and_sampler_types]: #97
[#164 type_specifier]: #351
[#164 type_specifier_without_ident]: #344
[#164 vec_prefix]: #345
[#165 additive_expression]: #58
[#165 array_type_specifier]: #95
[#165 binary_and_expression]: #55
[#165 binary_or_expression]: #56
[#165 binary_xor_expression]: #57
[#165 bitwise_expression]: #53
[#165 bool_literal]: #77
[#165 call_expression]: #69
[#165 callable]: #74
[#165 decimal_float_literal]: #85
[#165 decimal_int_literal]: #83
[#165 depth_texture_type]: #122
[#165 expression]: #350
[#165 float_literal]: #76
[#165 hex_float_literal]: #86
[#165 hex_int_literal]: #84
[#165 ident]: #68
[#165 int_literal]: #75
[#165 literal]: #70
[#165 mat_prefix]: #81
[#165 multiplicative_expression]: #60
[#165 multisampled_texture_type]: #124
[#165 paren_expression]: #71
[#165 primary_expression]: #67
[#165 relational_expression]: #50
[#165 sampled_texture_type]: #123
[#165 sampler_type]: #121
[#165 shift_expression]: #54
[#165 short_circuit_and_expression]: #52
[#165 short_circuit_or_expression]: #51
[#165 singular_expression]: #61
[#165 storage_texture_type]: #125
[#165 texture_and_sampler_types]: #97
[#165 type_specifier_without_ident]: #79
[#165 unary_expression]: #59
[#165 vec_prefix]: #80
[#166 global_constant_decl/1.3]: #348
[#167 array_type_specifier]: #95
[#167 depth_texture_type]: #122
[#167 ident]: #343
[#167 mat_prefix]: #346
[#167 multisampled_texture_type]: #124
[#167 sampled_texture_type]: #123
[#167 sampler_type]: #121
[#167 storage_texture_type]: #125
[#167 texture_and_sampler_types]: #97
[#167 type_specifier]: #342
[#167 type_specifier_without_ident]: #344
[#167 vec_prefix]: #345
[#169 attribute]: #341
[#169 struct_member]: #338
[#169 struct_member/0.0]: #339
[#169 struct_member/0.0/0]: #340
[#172 array_type_specifier]: #95
[#172 assignment_statement]: #326
[#172 break_statement]: #308
[#172 callable]: #320
[#172 compound_statement]: #312
[#172 compound_statement/0.1]: #296
[#172 compound_statement/0.1/0]: #297
[#172 const_assert_statement]: #313
[#172 continue_statement]: #309
[#172 core_lhs_expression]: #333
[#172 decrement_statement]: #328
[#172 depth_texture_type]: #122
[#172 for_statement]: #304
[#172 func_call_statement]: #306
[#172 ident]: #330
[#172 if_clause]: #315
[#172 if_statement]: #301
[#172 increment_statement]: #327
[#172 lhs_expression]: #331
[#172 loop_statement]: #303
[#172 mat_prefix]: #81
[#172 multisampled_texture_type]: #124
[#172 return_statement]: #300
[#172 sampled_texture_type]: #123
[#172 sampler_type]: #121
[#172 statement]: #298
[#172 storage_texture_type]: #125
[#172 switch_statement]: #302
[#172 texture_and_sampler_types]: #97
[#172 type_specifier_without_ident]: #79
[#172 variable_decl]: #321
[#172 variable_statement]: #307
[#172 variable_updating_statement]: #311
[#172 vec_prefix]: #80
[#172 while_statement]: #305
[#173 _template_args_start]: #295
[#174 _template_args_start]: #294
[#175 _template_args_start]: #293
[#176 _template_args_start]: #292
[#177 _template_args_start]: #291
[#178 _template_args_start]: #290
[#179 _template_args_start]: #289
[#180 _template_args_start]: #288
[#183 additive_expression]: #58
[#183 argument_expression_list/0.1]: #284
[#183 array_type_specifier]: #95
[#183 binary_and_expression]: #55
[#183 binary_or_expression]: #56
[#183 binary_xor_expression]: #57
[#183 bitwise_expression]: #53
[#183 bool_literal]: #77
[#183 call_expression]: #69
[#183 callable]: #74
[#183 decimal_float_literal]: #85
[#183 decimal_int_literal]: #83
[#183 depth_texture_type]: #122
[#183 expression]: #286
[#183 expression_comma_list]: #285
[#183 float_literal]: #76
[#183 hex_float_literal]: #86
[#183 hex_int_literal]: #84
[#183 ident]: #68
[#183 int_literal]: #75
[#183 literal]: #70
[#183 mat_prefix]: #81
[#183 multiplicative_expression]: #60
[#183 multisampled_texture_type]: #124
[#183 paren_expression]: #71
[#183 primary_expression]: #67
[#183 relational_expression]: #50
[#183 sampled_texture_type]: #123
[#183 sampler_type]: #121
[#183 shift_expression]: #54
[#183 short_circuit_and_expression]: #52
[#183 short_circuit_or_expression]: #51
[#183 singular_expression]: #61
[#183 storage_texture_type]: #125
[#183 texture_and_sampler_types]: #97
[#183 type_specifier_without_ident]: #79
[#183 unary_expression]: #59
[#183 vec_prefix]: #80
[#184 _template_args_start]: #282
[#187 additive_expression]: #58
[#187 array_type_specifier]: #95
[#187 binary_and_expression]: #55
[#187 binary_or_expression]: #56
[#187 binary_xor_expression]: #57
[#187 bitwise_expression]: #53
[#187 bool_literal]: #77
[#187 call_expression]: #69
[#187 callable]: #74
[#187 decimal_float_literal]: #85
[#187 decimal_int_literal]: #83
[#187 depth_texture_type]: #122
[#187 expression]: #281
[#187 float_literal]: #76
[#187 hex_float_literal]: #86
[#187 hex_int_literal]: #84
[#187 ident]: #68
[#187 int_literal]: #75
[#187 literal]: #70
[#187 mat_prefix]: #81
[#187 multiplicative_expression]: #60
[#187 multisampled_texture_type]: #124
[#187 paren_expression]: #71
[#187 primary_expression]: #67
[#187 relational_expression]: #50
[#187 sampled_texture_type]: #123
[#187 sampler_type]: #121
[#187 shift_expression]: #54
[#187 short_circuit_and_expression]: #52
[#187 short_circuit_or_expression]: #51
[#187 singular_expression]: #61
[#187 storage_texture_type]: #125
[#187 texture_and_sampler_types]: #97
[#187 type_specifier_without_ident]: #79
[#187 unary_expression]: #59
[#187 vec_prefix]: #80
[#188 member_ident]: #270
[#188 swizzle_name]: #271
[#194 array_type_specifier]: #95
[#194 bool_literal]: #77
[#194 call_expression]: #69
[#194 callable]: #74
[#194 decimal_float_literal]: #85
[#194 decimal_int_literal]: #83
[#194 depth_texture_type]: #122
[#194 float_literal]: #76
[#194 hex_float_literal]: #86
[#194 hex_int_literal]: #84
[#194 ident]: #68
[#194 int_literal]: #75
[#194 literal]: #70
[#194 mat_prefix]: #81
[#194 multisampled_texture_type]: #124
[#194 paren_expression]: #71
[#194 primary_expression]: #67
[#194 sampled_texture_type]: #123
[#194 sampler_type]: #121
[#194 singular_expression]: #61
[#194 storage_texture_type]: #125
[#194 texture_and_sampler_types]: #97
[#194 type_specifier_without_ident]: #79
[#194 unary_expression]: #269
[#194 vec_prefix]: #80
[#198 array_type_specifier]: #95
[#198 bool_literal]: #77
[#198 call_expression]: #69
[#198 callable]: #74
[#198 decimal_float_literal]: #85
[#198 decimal_int_literal]: #83
[#198 depth_texture_type]: #122
[#198 float_literal]: #76
[#198 hex_float_literal]: #86
[#198 hex_int_literal]: #84
[#198 ident]: #68
[#198 int_literal]: #75
[#198 literal]: #70
[#198 mat_prefix]: #81
[#198 multisampled_texture_type]: #124
[#198 paren_expression]: #71
[#198 primary_expression]: #67
[#198 sampled_texture_type]: #123
[#198 sampler_type]: #121
[#198 singular_expression]: #61
[#198 storage_texture_type]: #125
[#198 texture_and_sampler_types]: #97
[#198 type_specifier_without_ident]: #79
[#198 unary_expression]: #268
[#198 vec_prefix]: #80
[#199 array_type_specifier]: #95
[#199 bool_literal]: #77
[#199 call_expression]: #69
[#199 callable]: #74
[#199 decimal_float_literal]: #85
[#199 decimal_int_literal]: #83
[#199 depth_texture_type]: #122
[#199 float_literal]: #76
[#199 hex_float_literal]: #86
[#199 hex_int_literal]: #84
[#199 ident]: #68
[#199 int_literal]: #75
[#199 literal]: #70
[#199 mat_prefix]: #81
[#199 multisampled_texture_type]: #124
[#199 paren_expression]: #71
[#199 primary_expression]: #67
[#199 sampled_texture_type]: #123
[#199 sampler_type]: #121
[#199 singular_expression]: #61
[#199 storage_texture_type]: #125
[#199 texture_and_sampler_types]: #97
[#199 type_specifier_without_ident]: #79
[#199 unary_expression]: #267
[#199 vec_prefix]: #80
[#202 array_type_specifier]: #95
[#202 bool_literal]: #77
[#202 call_expression]: #69
[#202 callable]: #74
[#202 decimal_float_literal]: #85
[#202 decimal_int_literal]: #83
[#202 depth_texture_type]: #122
[#202 float_literal]: #76
[#202 hex_float_literal]: #86
[#202 hex_int_literal]: #84
[#202 ident]: #68
[#202 int_literal]: #75
[#202 literal]: #70
[#202 mat_prefix]: #81
[#202 multiplicative_expression]: #265
[#202 multisampled_texture_type]: #124
[#202 paren_expression]: #71
[#202 primary_expression]: #67
[#202 sampled_texture_type]: #123
[#202 sampler_type]: #121
[#202 singular_expression]: #61
[#202 storage_texture_type]: #125
[#202 texture_and_sampler_types]: #97
[#202 type_specifier_without_ident]: #79
[#202 unary_expression]: #266
[#202 vec_prefix]: #80
[#205 array_type_specifier]: #95
[#205 bool_literal]: #77
[#205 call_expression]: #69
[#205 callable]: #74
[#205 decimal_float_literal]: #85
[#205 decimal_int_literal]: #83
[#205 depth_texture_type]: #122
[#205 float_literal]: #76
[#205 hex_float_literal]: #86
[#205 hex_int_literal]: #84
[#205 ident]: #68
[#205 int_literal]: #75
[#205 literal]: #70
[#205 mat_prefix]: #81
[#205 multisampled_texture_type]: #124
[#205 paren_expression]: #71
[#205 primary_expression]: #67
[#205 sampled_texture_type]: #123
[#205 sampler_type]: #121
[#205 singular_expression]: #61
[#205 storage_texture_type]: #125
[#205 texture_and_sampler_types]: #97
[#205 type_specifier_without_ident]: #79
[#205 unary_expression]: #264
[#205 vec_prefix]: #80
[#206 array_type_specifier]: #95
[#206 bool_literal]: #77
[#206 call_expression]: #69
[#206 callable]: #74
[#206 decimal_float_literal]: #85
[#206 decimal_int_literal]: #83
[#206 depth_texture_type]: #122
[#206 float_literal]: #76
[#206 hex_float_literal]: #86
[#206 hex_int_literal]: #84
[#206 ident]: #68
[#206 int_literal]: #75
[#206 literal]: #70
[#206 mat_prefix]: #81
[#206 multisampled_texture_type]: #124
[#206 paren_expression]: #71
[#206 primary_expression]: #67
[#206 sampled_texture_type]: #123
[#206 sampler_type]: #121
[#206 singular_expression]: #61
[#206 storage_texture_type]: #125
[#206 texture_and_sampler_types]: #97
[#206 type_specifier_without_ident]: #79
[#206 unary_expression]: #263
[#206 vec_prefix]: #80
[#207 array_type_specifier]: #95
[#207 bool_literal]: #77
[#207 call_expression]: #69
[#207 callable]: #74
[#207 decimal_float_literal]: #85
[#207 decimal_int_literal]: #83
[#207 depth_texture_type]: #122
[#207 float_literal]: #76
[#207 hex_float_literal]: #86
[#207 hex_int_literal]: #84
[#207 ident]: #68
[#207 int_literal]: #75
[#207 literal]: #70
[#207 mat_prefix]: #81
[#207 multisampled_texture_type]: #124
[#207 paren_expression]: #71
[#207 primary_expression]: #67
[#207 sampled_texture_type]: #123
[#207 sampler_type]: #121
[#207 singular_expression]: #61
[#207 storage_texture_type]: #125
[#207 texture_and_sampler_types]: #97
[#207 type_specifier_without_ident]: #79
[#207 unary_expression]: #262
[#207 vec_prefix]: #80
[#208 additive_expression]: #58
[#208 array_type_specifier]: #95
[#208 bool_literal]: #77
[#208 call_expression]: #69
[#208 callable]: #74
[#208 decimal_float_literal]: #85
[#208 decimal_int_literal]: #83
[#208 depth_texture_type]: #122
[#208 float_literal]: #76
[#208 hex_float_literal]: #86
[#208 hex_int_literal]: #84
[#208 ident]: #68
[#208 int_literal]: #75
[#208 literal]: #70
[#208 mat_prefix]: #81
[#208 multiplicative_expression]: #60
[#208 multisampled_texture_type]: #124
[#208 paren_expression]: #71
[#208 primary_expression]: #67
[#208 sampled_texture_type]: #123
[#208 sampler_type]: #121
[#208 shift_expression]: #261
[#208 singular_expression]: #61
[#208 storage_texture_type]: #125
[#208 texture_and_sampler_types]: #97
[#208 type_specifier_without_ident]: #79
[#208 unary_expression]: #254
[#208 vec_prefix]: #80
[#209 additive_expression]: #58
[#209 array_type_specifier]: #95
[#209 bool_literal]: #77
[#209 call_expression]: #69
[#209 callable]: #74
[#209 decimal_float_literal]: #85
[#209 decimal_int_literal]: #83
[#209 depth_texture_type]: #122
[#209 float_literal]: #76
[#209 hex_float_literal]: #86
[#209 hex_int_literal]: #84
[#209 ident]: #68
[#209 int_literal]: #75
[#209 literal]: #70
[#209 mat_prefix]: #81
[#209 multiplicative_expression]: #60
[#209 multisampled_texture_type]: #124
[#209 paren_expression]: #71
[#209 primary_expression]: #67
[#209 sampled_texture_type]: #123
[#209 sampler_type]: #121
[#209 shift_expression]: #260
[#209 singular_expression]: #61
[#209 storage_texture_type]: #125
[#209 texture_and_sampler_types]: #97
[#209 type_specifier_without_ident]: #79
[#209 unary_expression]: #254
[#209 vec_prefix]: #80
[#210 additive_expression]: #58
[#210 array_type_specifier]: #95
[#210 bool_literal]: #77
[#210 call_expression]: #69
[#210 callable]: #74
[#210 decimal_float_literal]: #85
[#210 decimal_int_literal]: #83
[#210 depth_texture_type]: #122
[#210 float_literal]: #76
[#210 hex_float_literal]: #86
[#210 hex_int_literal]: #84
[#210 ident]: #68
[#210 int_literal]: #75
[#210 literal]: #70
[#210 mat_prefix]: #81
[#210 multiplicative_expression]: #60
[#210 multisampled_texture_type]: #124
[#210 paren_expression]: #71
[#210 primary_expression]: #67
[#210 sampled_texture_type]: #123
[#210 sampler_type]: #121
[#210 shift_expression]: #259
[#210 singular_expression]: #61
[#210 storage_texture_type]: #125
[#210 texture_and_sampler_types]: #97
[#210 type_specifier_without_ident]: #79
[#210 unary_expression]: #254
[#210 vec_prefix]: #80
[#211 additive_expression]: #58
[#211 array_type_specifier]: #95
[#211 bool_literal]: #77
[#211 call_expression]: #69
[#211 callable]: #74
[#211 decimal_float_literal]: #85
[#211 decimal_int_literal]: #83
[#211 depth_texture_type]: #122
[#211 float_literal]: #76
[#211 hex_float_literal]: #86
[#211 hex_int_literal]: #84
[#211 ident]: #68
[#211 int_literal]: #75
[#211 literal]: #70
[#211 mat_prefix]: #81
[#211 multiplicative_expression]: #60
[#211 multisampled_texture_type]: #124
[#211 paren_expression]: #71
[#211 primary_expression]: #67
[#211 sampled_texture_type]: #123
[#211 sampler_type]: #121
[#211 shift_expression]: #258
[#211 singular_expression]: #61
[#211 storage_texture_type]: #125
[#211 texture_and_sampler_types]: #97
[#211 type_specifier_without_ident]: #79
[#211 unary_expression]: #254
[#211 vec_prefix]: #80
[#212 additive_expression]: #58
[#212 array_type_specifier]: #95
[#212 bool_literal]: #77
[#212 call_expression]: #69
[#212 callable]: #74
[#212 decimal_float_literal]: #85
[#212 decimal_int_literal]: #83
[#212 depth_texture_type]: #122
[#212 float_literal]: #76
[#212 hex_float_literal]: #86
[#212 hex_int_literal]: #84
[#212 ident]: #68
[#212 int_literal]: #75
[#212 literal]: #70
[#212 mat_prefix]: #81
[#212 multiplicative_expression]: #60
[#212 multisampled_texture_type]: #124
[#212 paren_expression]: #71
[#212 primary_expression]: #67
[#212 sampled_texture_type]: #123
[#212 sampler_type]: #121
[#212 shift_expression]: #257
[#212 singular_expression]: #61
[#212 storage_texture_type]: #125
[#212 texture_and_sampler_types]: #97
[#212 type_specifier_without_ident]: #79
[#212 unary_expression]: #254
[#212 vec_prefix]: #80
[#213 additive_expression]: #58
[#213 array_type_specifier]: #95
[#213 bool_literal]: #77
[#213 call_expression]: #69
[#213 callable]: #74
[#213 decimal_float_literal]: #85
[#213 decimal_int_literal]: #83
[#213 depth_texture_type]: #122
[#213 float_literal]: #76
[#213 hex_float_literal]: #86
[#213 hex_int_literal]: #84
[#213 ident]: #68
[#213 int_literal]: #75
[#213 literal]: #70
[#213 mat_prefix]: #81
[#213 multiplicative_expression]: #60
[#213 multisampled_texture_type]: #124
[#213 paren_expression]: #71
[#213 primary_expression]: #67
[#213 sampled_texture_type]: #123
[#213 sampler_type]: #121
[#213 shift_expression]: #256
[#213 singular_expression]: #61
[#213 storage_texture_type]: #125
[#213 texture_and_sampler_types]: #97
[#213 type_specifier_without_ident]: #79
[#213 unary_expression]: #254
[#213 vec_prefix]: #80
[#218 additive_expression]: #58
[#218 array_type_specifier]: #95
[#218 bool_literal]: #77
[#218 call_expression]: #69
[#218 callable]: #74
[#218 decimal_float_literal]: #85
[#218 decimal_int_literal]: #83
[#218 depth_texture_type]: #122
[#218 float_literal]: #76
[#218 hex_float_literal]: #86
[#218 hex_int_literal]: #84
[#218 ident]: #68
[#218 int_literal]: #75
[#218 literal]: #70
[#218 mat_prefix]: #81
[#218 multiplicative_expression]: #60
[#218 multisampled_texture_type]: #124
[#218 paren_expression]: #71
[#218 primary_expression]: #67
[#218 relational_expression]: #255
[#218 sampled_texture_type]: #123
[#218 sampler_type]: #121
[#218 shift_expression]: #54
[#218 singular_expression]: #61
[#218 storage_texture_type]: #125
[#218 texture_and_sampler_types]: #97
[#218 type_specifier_without_ident]: #79
[#218 unary_expression]: #254
[#218 vec_prefix]: #80
[#219 additive_expression]: #58
[#219 array_type_specifier]: #95
[#219 bool_literal]: #77
[#219 call_expression]: #69
[#219 callable]: #74
[#219 decimal_float_literal]: #85
[#219 decimal_int_literal]: #83
[#219 depth_texture_type]: #122
[#219 float_literal]: #76
[#219 hex_float_literal]: #86
[#219 hex_int_literal]: #84
[#219 ident]: #68
[#219 int_literal]: #75
[#219 literal]: #70
[#219 mat_prefix]: #81
[#219 multiplicative_expression]: #60
[#219 multisampled_texture_type]: #124
[#219 paren_expression]: #71
[#219 primary_expression]: #67
[#219 relational_expression]: #253
[#219 sampled_texture_type]: #123
[#219 sampler_type]: #121
[#219 shift_expression]: #54
[#219 singular_expression]: #61
[#219 storage_texture_type]: #125
[#219 texture_and_sampler_types]: #97
[#219 type_specifier_without_ident]: #79
[#219 unary_expression]: #254
[#219 vec_prefix]: #80
[#220 additive_expression]: #58
[#220 array_type_specifier]: #95
[#220 binary_and_expression]: #55
[#220 binary_or_expression]: #56
[#220 binary_xor_expression]: #57
[#220 bitwise_expression]: #53
[#220 bool_literal]: #77
[#220 call_expression]: #69
[#220 callable]: #74
[#220 decimal_float_literal]: #85
[#220 decimal_int_literal]: #83
[#220 depth_texture_type]: #122
[#220 expression]: #252
[#220 float_literal]: #76
[#220 hex_float_literal]: #86
[#220 hex_int_literal]: #84
[#220 ident]: #68
[#220 int_literal]: #75
[#220 literal]: #70
[#220 mat_prefix]: #81
[#220 multiplicative_expression]: #60
[#220 multisampled_texture_type]: #124
[#220 paren_expression]: #71
[#220 primary_expression]: #67
[#220 relational_expression]: #50
[#220 sampled_texture_type]: #123
[#220 sampler_type]: #121
[#220 shift_expression]: #54
[#220 short_circuit_and_expression]: #52
[#220 short_circuit_or_expression]: #51
[#220 singular_expression]: #61
[#220 storage_texture_type]: #125
[#220 texture_and_sampler_types]: #97
[#220 type_specifier_without_ident]: #79
[#220 unary_expression]: #59
[#220 vec_prefix]: #80
[#221 additive_expression]: #58
[#221 array_type_specifier]: #95
[#221 binary_and_expression]: #55
[#221 binary_or_expression]: #56
[#221 binary_xor_expression]: #57
[#221 bitwise_expression]: #53
[#221 bool_literal]: #77
[#221 call_expression]: #69
[#221 callable]: #74
[#221 decimal_float_literal]: #85
[#221 decimal_int_literal]: #83
[#221 depth_texture_type]: #122
[#221 expression]: #251
[#221 float_literal]: #76
[#221 hex_float_literal]: #86
[#221 hex_int_literal]: #84
[#221 ident]: #68
[#221 int_literal]: #75
[#221 literal]: #70
[#221 mat_prefix]: #81
[#221 multiplicative_expression]: #60
[#221 multisampled_texture_type]: #124
[#221 paren_expression]: #71
[#221 primary_expression]: #67
[#221 relational_expression]: #50
[#221 sampled_texture_type]: #123
[#221 sampler_type]: #121
[#221 shift_expression]: #54
[#221 short_circuit_and_expression]: #52
[#221 short_circuit_or_expression]: #51
[#221 singular_expression]: #61
[#221 storage_texture_type]: #125
[#221 texture_and_sampler_types]: #97
[#221 type_specifier_without_ident]: #79
[#221 unary_expression]: #59
[#221 vec_prefix]: #80
[#222 additive_expression]: #58
[#222 array_type_specifier]: #95
[#222 binary_and_expression]: #55
[#222 binary_or_expression]: #56
[#222 binary_xor_expression]: #57
[#222 bitwise_expression]: #53
[#222 bool_literal]: #77
[#222 call_expression]: #69
[#222 callable]: #74
[#222 decimal_float_literal]: #85
[#222 decimal_int_literal]: #83
[#222 depth_texture_type]: #122
[#222 expression]: #250
[#222 float_literal]: #76
[#222 hex_float_literal]: #86
[#222 hex_int_literal]: #84
[#222 ident]: #68
[#222 int_literal]: #75
[#222 literal]: #70
[#222 mat_prefix]: #81
[#222 multiplicative_expression]: #60
[#222 multisampled_texture_type]: #124
[#222 paren_expression]: #71
[#222 primary_expression]: #67
[#222 relational_expression]: #50
[#222 sampled_texture_type]: #123
[#222 sampler_type]: #121
[#222 shift_expression]: #54
[#222 short_circuit_and_expression]: #52
[#222 short_circuit_or_expression]: #51
[#222 singular_expression]: #61
[#222 storage_texture_type]: #125
[#222 texture_and_sampler_types]: #97
[#222 type_specifier_without_ident]: #79
[#222 unary_expression]: #59
[#222 vec_prefix]: #80
[#223 interpolation_type_name]: #246
[#224 additive_expression]: #58
[#224 array_type_specifier]: #95
[#224 binary_and_expression]: #55
[#224 binary_or_expression]: #56
[#224 binary_xor_expression]: #57
[#224 bitwise_expression]: #53
[#224 bool_literal]: #77
[#224 call_expression]: #69
[#224 callable]: #74
[#224 decimal_float_literal]: #85
[#224 decimal_int_literal]: #83
[#224 depth_texture_type]: #122
[#224 expression]: #245
[#224 float_literal]: #76
[#224 hex_float_literal]: #86
[#224 hex_int_literal]: #84
[#224 ident]: #68
[#224 int_literal]: #75
[#224 literal]: #70
[#224 mat_prefix]: #81
[#224 multiplicative_expression]: #60
[#224 multisampled_texture_type]: #124
[#224 paren_expression]: #71
[#224 primary_expression]: #67
[#224 relational_expression]: #50
[#224 sampled_texture_type]: #123
[#224 sampler_type]: #121
[#224 shift_expression]: #54
[#224 short_circuit_and_expression]: #52
[#224 short_circuit_or_expression]: #51
[#224 singular_expression]: #61
[#224 storage_texture_type]: #125
[#224 texture_and_sampler_types]: #97
[#224 type_specifier_without_ident]: #79
[#224 unary_expression]: #59
[#224 vec_prefix]: #80
[#225 additive_expression]: #58
[#225 array_type_specifier]: #95
[#225 binary_and_expression]: #55
[#225 binary_or_expression]: #56
[#225 binary_xor_expression]: #57
[#225 bitwise_expression]: #53
[#225 bool_literal]: #77
[#225 call_expression]: #69
[#225 callable]: #74
[#225 decimal_float_literal]: #85
[#225 decimal_int_literal]: #83
[#225 depth_texture_type]: #122
[#225 expression]: #244
[#225 float_literal]: #76
[#225 hex_float_literal]: #86
[#225 hex_int_literal]: #84
[#225 ident]: #68
[#225 int_literal]: #75
[#225 literal]: #70
[#225 mat_prefix]: #81
[#225 multiplicative_expression]: #60
[#225 multisampled_texture_type]: #124
[#225 paren_expression]: #71
[#225 primary_expression]: #67
[#225 relational_expression]: #50
[#225 sampled_texture_type]: #123
[#225 sampler_type]: #121
[#225 shift_expression]: #54
[#225 short_circuit_and_expression]: #52
[#225 short_circuit_or_expression]: #51
[#225 singular_expression]: #61
[#225 storage_texture_type]: #125
[#225 texture_and_sampler_types]: #97
[#225 type_specifier_without_ident]: #79
[#225 unary_expression]: #59
[#225 vec_prefix]: #80
[#226 builtin_value_name]: #231
[#227 additive_expression]: #58
[#227 array_type_specifier]: #95
[#227 binary_and_expression]: #55
[#227 binary_or_expression]: #56
[#227 binary_xor_expression]: #57
[#227 bitwise_expression]: #53
[#227 bool_literal]: #77
[#227 call_expression]: #69
[#227 callable]: #74
[#227 decimal_float_literal]: #85
[#227 decimal_int_literal]: #83
[#227 depth_texture_type]: #122
[#227 expression]: #230
[#227 float_literal]: #76
[#227 hex_float_literal]: #86
[#227 hex_int_literal]: #84
[#227 ident]: #68
[#227 int_literal]: #75
[#227 literal]: #70
[#227 mat_prefix]: #81
[#227 multiplicative_expression]: #60
[#227 multisampled_texture_type]: #124
[#227 paren_expression]: #71
[#227 primary_expression]: #67
[#227 relational_expression]: #50
[#227 sampled_texture_type]: #123
[#227 sampler_type]: #121
[#227 shift_expression]: #54
[#227 short_circuit_and_expression]: #52
[#227 short_circuit_or_expression]: #51
[#227 singular_expression]: #61
[#227 storage_texture_type]: #125
[#227 texture_and_sampler_types]: #97
[#227 type_specifier_without_ident]: #79
[#227 unary_expression]: #59
[#227 vec_prefix]: #80
[#228 additive_expression]: #58
[#228 array_type_specifier]: #95
[#228 binary_and_expression]: #55
[#228 binary_or_expression]: #56
[#228 binary_xor_expression]: #57
[#228 bitwise_expression]: #53
[#228 bool_literal]: #77
[#228 call_expression]: #69
[#228 callable]: #74
[#228 decimal_float_literal]: #85
[#228 decimal_int_literal]: #83
[#228 depth_texture_type]: #122
[#228 expression]: #229
[#228 float_literal]: #76
[#228 hex_float_literal]: #86
[#228 hex_int_literal]: #84
[#228 ident]: #68
[#228 int_literal]: #75
[#228 literal]: #70
[#228 mat_prefix]: #81
[#228 multiplicative_expression]: #60
[#228 multisampled_texture_type]: #124
[#228 paren_expression]: #71
[#228 primary_expression]: #67
[#228 relational_expression]: #50
[#228 sampled_texture_type]: #123
[#228 sampler_type]: #121
[#228 shift_expression]: #54
[#228 short_circuit_and_expression]: #52
[#228 short_circuit_or_expression]: #51
[#228 singular_expression]: #61
[#228 storage_texture_type]: #125
[#228 texture_and_sampler_types]: #97
[#228 type_specifier_without_ident]: #79
[#228 unary_expression]: #59
[#228 vec_prefix]: #80
[#229 attrib_end]: #476
[#229 attrib_end/0.0]: #466
[#230 attrib_end]: #475
[#230 attrib_end/0.0]: #466
[#231 attrib_end]: #474
[#231 attrib_end/0.0]: #466
[#244 attrib_end]: #473
[#244 attrib_end/0.0]: #466
[#245 attrib_end]: #472
[#245 attrib_end/0.0]: #466
[#246 attrib_end]: #470
[#246 attrib_end/0.0]: #466
[#250 attrib_end]: #469
[#250 attrib_end/0.0]: #466
[#251 attrib_end]: #467
[#251 attrib_end/0.0]: #466
[#252 attrib_end]: #464
[#252 attrib_end/0.0]: #466
[#254 _shift_left]: #198
[#254 _shift_right]: #199
[#265 multiplicative_operator]: #194
[#270 component_or_swizzle_specifier]: #463
[#270 component_or_swizzle_specifier/1.2]: #462
[#271 component_or_swizzle_specifier]: #461
[#271 component_or_swizzle_specifier/2.2]: #460
[#282 array_type_specifier]: #95
[#282 depth_texture_type]: #122
[#282 ident]: #343
[#282 mat_prefix]: #346
[#282 multisampled_texture_type]: #124
[#282 sampled_texture_type]: #123
[#282 sampler_type]: #121
[#282 storage_texture_type]: #125
[#282 texture_and_sampler_types]: #97
[#282 type_specifier]: #458
[#282 type_specifier_without_ident]: #344
[#282 vec_prefix]: #345
[#286 expression_comma_list/0.1]: #453
[#286 expression_comma_list/0.1/0]: #454
[#286 expression_comma_list/0.1/0/0.0]: #455
[#288 array_type_specifier]: #95
[#288 depth_texture_type]: #122
[#288 ident]: #343
[#288 mat_prefix]: #346
[#288 multisampled_texture_type]: #124
[#288 sampled_texture_type]: #123
[#288 sampler_type]: #121
[#288 storage_texture_type]: #125
[#288 texture_and_sampler_types]: #97
[#288 type_specifier]: #452
[#288 type_specifier_without_ident]: #344
[#288 vec_prefix]: #345
[#289 array_type_specifier]: #95
[#289 depth_texture_type]: #122
[#289 ident]: #343
[#289 mat_prefix]: #346
[#289 multisampled_texture_type]: #124
[#289 sampled_texture_type]: #123
[#289 sampler_type]: #121
[#289 storage_texture_type]: #125
[#289 texture_and_sampler_types]: #97
[#289 type_specifier]: #451
[#289 type_specifier_without_ident]: #344
[#289 vec_prefix]: #345
[#290 array_type_specifier]: #95
[#290 depth_texture_type]: #122
[#290 ident]: #343
[#290 mat_prefix]: #346
[#290 multisampled_texture_type]: #124
[#290 sampled_texture_type]: #123
[#290 sampler_type]: #121
[#290 storage_texture_type]: #125
[#290 texture_and_sampler_types]: #97
[#290 type_specifier]: #450
[#290 type_specifier_without_ident]: #344
[#290 vec_prefix]: #345
[#291 address_space]: #449
[#292 array_type_specifier]: #95
[#292 depth_texture_type]: #122
[#292 ident]: #343
[#292 mat_prefix]: #346
[#292 multisampled_texture_type]: #124
[#292 sampled_texture_type]: #123
[#292 sampler_type]: #121
[#292 storage_texture_type]: #125
[#292 texture_and_sampler_types]: #97
[#292 type_specifier]: #448
[#292 type_specifier_without_ident]: #344
[#292 vec_prefix]: #345
[#293 array_type_specifier]: #95
[#293 depth_texture_type]: #122
[#293 ident]: #343
[#293 mat_prefix]: #346
[#293 multisampled_texture_type]: #124
[#293 sampled_texture_type]: #123
[#293 sampler_type]: #121
[#293 storage_texture_type]: #125
[#293 texture_and_sampler_types]: #97
[#293 type_specifier]: #447
[#293 type_specifier_without_ident]: #344
[#293 vec_prefix]: #345
[#294 array_type_specifier]: #95
[#294 depth_texture_type]: #122
[#294 ident]: #343
[#294 mat_prefix]: #346
[#294 multisampled_texture_type]: #124
[#294 sampled_texture_type]: #123
[#294 sampler_type]: #121
[#294 storage_texture_type]: #125
[#294 texture_and_sampler_types]: #97
[#294 type_specifier]: #446
[#294 type_specifier_without_ident]: #344
[#294 vec_prefix]: #345
[#295 texel_format]: #428
[#298 array_type_specifier]: #95
[#298 assignment_statement]: #326
[#298 break_statement]: #308
[#298 callable]: #320
[#298 compound_statement]: #312
[#298 compound_statement/0.1/0]: #426
[#298 const_assert_statement]: #313
[#298 continue_statement]: #309
[#298 core_lhs_expression]: #333
[#298 decrement_statement]: #328
[#298 depth_texture_type]: #122
[#298 for_statement]: #304
[#298 func_call_statement]: #306
[#298 ident]: #330
[#298 if_clause]: #315
[#298 if_statement]: #301
[#298 increment_statement]: #327
[#298 lhs_expression]: #331
[#298 loop_statement]: #303
[#298 mat_prefix]: #81
[#298 multisampled_texture_type]: #124
[#298 return_statement]: #300
[#298 sampled_texture_type]: #123
[#298 sampler_type]: #121
[#298 statement]: #298
[#298 storage_texture_type]: #125
[#298 switch_statement]: #302
[#298 texture_and_sampler_types]: #97
[#298 type_specifier_without_ident]: #79
[#298 variable_decl]: #321
[#298 variable_statement]: #307
[#298 variable_updating_statement]: #311
[#298 vec_prefix]: #80
[#298 while_statement]: #305
[#314 additive_expression]: #58
[#314 array_type_specifier]: #95
[#314 binary_and_expression]: #55
[#314 binary_or_expression]: #56
[#314 binary_xor_expression]: #57
[#314 bitwise_expression]: #53
[#314 bool_literal]: #77
[#314 call_expression]: #69
[#314 callable]: #74
[#314 decimal_float_literal]: #85
[#314 decimal_int_literal]: #83
[#314 depth_texture_type]: #122
[#314 expression]: #417
[#314 float_literal]: #76
[#314 hex_float_literal]: #86
[#314 hex_int_literal]: #84
[#314 ident]: #68
[#314 int_literal]: #75
[#314 literal]: #70
[#314 mat_prefix]: #81
[#314 multiplicative_expression]: #60
[#314 multisampled_texture_type]: #124
[#314 paren_expression]: #71
[#314 primary_expression]: #67
[#314 relational_expression]: #50
[#314 return_statement/0.1]: #416
[#314 sampled_texture_type]: #123
[#314 sampler_type]: #121
[#314 shift_expression]: #54
[#314 short_circuit_and_expression]: #52
[#314 short_circuit_or_expression]: #51
[#314 singular_expression]: #61
[#314 storage_texture_type]: #125
[#314 texture_and_sampler_types]: #97
[#314 type_specifier_without_ident]: #79
[#314 unary_expression]: #59
[#314 vec_prefix]: #80
[#315 else_if_clause]: #414
[#315 if_statement/0.1]: #412
[#315 if_statement/0.1/0]: #413
[#316 additive_expression]: #58
[#316 array_type_specifier]: #95
[#316 binary_and_expression]: #55
[#316 binary_or_expression]: #56
[#316 binary_xor_expression]: #57
[#316 bitwise_expression]: #53
[#316 bool_literal]: #77
[#316 call_expression]: #69
[#316 callable]: #74
[#316 decimal_float_literal]: #85
[#316 decimal_int_literal]: #83
[#316 depth_texture_type]: #122
[#316 expression]: #411
[#316 float_literal]: #76
[#316 hex_float_literal]: #86
[#316 hex_int_literal]: #84
[#316 ident]: #68
[#316 int_literal]: #75
[#316 literal]: #70
[#316 mat_prefix]: #81
[#316 multiplicative_expression]: #60
[#316 multisampled_texture_type]: #124
[#316 paren_expression]: #71
[#316 primary_expression]: #67
[#316 relational_expression]: #50
[#316 sampled_texture_type]: #123
[#316 sampler_type]: #121
[#316 shift_expression]: #54
[#316 short_circuit_and_expression]: #52
[#316 short_circuit_or_expression]: #51
[#316 singular_expression]: #61
[#316 storage_texture_type]: #125
[#316 texture_and_sampler_types]: #97
[#316 type_specifier_without_ident]: #79
[#316 unary_expression]: #59
[#316 vec_prefix]: #80
[#319 additive_expression]: #58
[#319 array_type_specifier]: #95
[#319 binary_and_expression]: #55
[#319 binary_or_expression]: #56
[#319 binary_xor_expression]: #57
[#319 bitwise_expression]: #53
[#319 bool_literal]: #77
[#319 call_expression]: #69
[#319 callable]: #74
[#319 decimal_float_literal]: #85
[#319 decimal_int_literal]: #83
[#319 depth_texture_type]: #122
[#319 expression]: #408
[#319 float_literal]: #76
[#319 hex_float_literal]: #86
[#319 hex_int_literal]: #84
[#319 ident]: #68
[#319 int_literal]: #75
[#319 literal]: #70
[#319 mat_prefix]: #81
[#319 multiplicative_expression]: #60
[#319 multisampled_texture_type]: #124
[#319 paren_expression]: #71
[#319 primary_expression]: #67
[#319 relational_expression]: #50
[#319 sampled_texture_type]: #123
[#319 sampler_type]: #121
[#319 shift_expression]: #54
[#319 short_circuit_and_expression]: #52
[#319 short_circuit_or_expression]: #51
[#319 singular_expression]: #61
[#319 storage_texture_type]: #125
[#319 texture_and_sampler_types]: #97
[#319 type_specifier_without_ident]: #79
[#319 unary_expression]: #59
[#319 vec_prefix]: #80
[#320 argument_expression_list]: #407
[#322 ident]: #150
[#322 optionally_typed_ident]: #405
[#323 ident]: #150
[#323 optionally_typed_ident]: #404
[#329 additive_expression]: #58
[#329 array_type_specifier]: #95
[#329 binary_and_expression]: #55
[#329 binary_or_expression]: #56
[#329 binary_xor_expression]: #57
[#329 bitwise_expression]: #53
[#329 bool_literal]: #77
[#329 call_expression]: #69
[#329 callable]: #74
[#329 decimal_float_literal]: #85
[#329 decimal_int_literal]: #83
[#329 depth_texture_type]: #122
[#329 expression]: #403
[#329 float_literal]: #76
[#329 hex_float_literal]: #86
[#329 hex_int_literal]: #84
[#329 ident]: #68
[#329 int_literal]: #75
[#329 literal]: #70
[#329 mat_prefix]: #81
[#329 multiplicative_expression]: #60
[#329 multisampled_texture_type]: #124
[#329 paren_expression]: #71
[#329 primary_expression]: #67
[#329 relational_expression]: #50
[#329 sampled_texture_type]: #123
[#329 sampler_type]: #121
[#329 shift_expression]: #54
[#329 short_circuit_and_expression]: #52
[#329 short_circuit_or_expression]: #51
[#329 singular_expression]: #61
[#329 storage_texture_type]: #125
[#329 texture_and_sampler_types]: #97
[#329 type_specifier_without_ident]: #79
[#329 unary_expression]: #59
[#329 vec_prefix]: #80
[#331 _shift_left_assign]: #400
[#331 _shift_right_assign]: #399
[#331 assignment_statement/0.1]: #386
[#331 compound_assignment_operator]: #390
[#333 component_or_swizzle_specifier]: #384
[#333 lhs_expression/0.1]: #383
[#334 core_lhs_expression]: #333
[#334 ident]: #380
[#334 lhs_expression]: #382
[#335 core_lhs_expression]: #333
[#335 ident]: #380
[#335 lhs_expression]: #381
[#336 core_lhs_expression]: #333
[#336 ident]: #380
[#336 lhs_expression]: #379
[#337 attribute]: #378
[#337 function_header/0.3]: #373
[#337 param]: #375
[#337 param/0.0]: #376
[#337 param/0.0/0]: #377
[#337 param_list]: #374
[#338 struct_body_decl/0.2]: #369
[#338 struct_body_decl/0.2/0]: #370
[#338 struct_body_decl/0.2/0/0.0]: #371
[#339 member_ident]: #368
[#341 attribute]: #341
[#341 struct_member/0.0/0]: #367
[#345 _disambiguate_template]: #366
[#346 _disambiguate_template]: #365
[#347 _disambiguate_template]: #364
[#349 additive_expression]: #58
[#349 array_type_specifier]: #95
[#349 binary_and_expression]: #55
[#349 binary_or_expression]: #56
[#349 binary_xor_expression]: #57
[#349 bitwise_expression]: #53
[#349 bool_literal]: #77
[#349 call_expression]: #69
[#349 callable]: #74
[#349 decimal_float_literal]: #85
[#349 decimal_int_literal]: #83
[#349 depth_texture_type]: #122
[#349 expression]: #363
[#349 float_literal]: #76
[#349 hex_float_literal]: #86
[#349 hex_int_literal]: #84
[#349 ident]: #68
[#349 int_literal]: #75
[#349 literal]: #70
[#349 mat_prefix]: #81
[#349 multiplicative_expression]: #60
[#349 multisampled_texture_type]: #124
[#349 paren_expression]: #71
[#349 primary_expression]: #67
[#349 relational_expression]: #50
[#349 sampled_texture_type]: #123
[#349 sampler_type]: #121
[#349 shift_expression]: #54
[#349 short_circuit_and_expression]: #52
[#349 short_circuit_or_expression]: #51
[#349 singular_expression]: #61
[#349 storage_texture_type]: #125
[#349 texture_and_sampler_types]: #97
[#349 type_specifier_without_ident]: #79
[#349 unary_expression]: #59
[#349 vec_prefix]: #80
[#353 ident]: #150
[#353 optionally_typed_ident]: #362
[#355 address_space]: #356
[#356 variable_qualifier/0.2]: #535
[#364 _template_args_start]: #290
[#365 _template_args_start]: #289
[#366 _template_args_start]: #288
[#369 struct_body_decl/0.3]: #532
[#371 struct_body_decl/0.2/0]: #531
[#371 struct_body_decl/0.2/0/0.0]: #371
[#372 attribute]: #341
[#372 struct_member]: #530
[#372 struct_member/0.0]: #339
[#372 struct_member/0.0/0]: #340
[#375 param_list/0.1]: #525
[#375 param_list/0.1/0]: #526
[#375 param_list/0.1/0/0.0]: #527
[#376 ident]: #524
[#378 attribute]: #378
[#378 param/0.0/0]: #523
[#385 additive_expression]: #58
[#385 array_type_specifier]: #95
[#385 binary_and_expression]: #55
[#385 binary_or_expression]: #56
[#385 binary_xor_expression]: #57
[#385 bitwise_expression]: #53
[#385 bool_literal]: #77
[#385 call_expression]: #69
[#385 callable]: #74
[#385 decimal_float_literal]: #85
[#385 decimal_int_literal]: #83
[#385 depth_texture_type]: #122
[#385 expression]: #521
[#385 float_literal]: #76
[#385 hex_float_literal]: #86
[#385 hex_int_literal]: #84
[#385 ident]: #68
[#385 int_literal]: #75
[#385 literal]: #70
[#385 mat_prefix]: #81
[#385 multiplicative_expression]: #60
[#385 multisampled_texture_type]: #124
[#385 paren_expression]: #71
[#385 primary_expression]: #67
[#385 relational_expression]: #50
[#385 sampled_texture_type]: #123
[#385 sampler_type]: #121
[#385 shift_expression]: #54
[#385 short_circuit_and_expression]: #52
[#385 short_circuit_or_expression]: #51
[#385 singular_expression]: #61
[#385 storage_texture_type]: #125
[#385 texture_and_sampler_types]: #97
[#385 type_specifier_without_ident]: #79
[#385 unary_expression]: #59
[#385 vec_prefix]: #80
[#386 additive_expression]: #58
[#386 array_type_specifier]: #95
[#386 binary_and_expression]: #55
[#386 binary_or_expression]: #56
[#386 binary_xor_expression]: #57
[#386 bitwise_expression]: #53
[#386 bool_literal]: #77
[#386 call_expression]: #69
[#386 callable]: #74
[#386 decimal_float_literal]: #85
[#386 decimal_int_literal]: #83
[#386 depth_texture_type]: #122
[#386 expression]: #520
[#386 float_literal]: #76
[#386 hex_float_literal]: #86
[#386 hex_int_literal]: #84
[#386 ident]: #68
[#386 int_literal]: #75
[#386 literal]: #70
[#386 mat_prefix]: #81
[#386 multiplicative_expression]: #60
[#386 multisampled_texture_type]: #124
[#386 paren_expression]: #71
[#386 primary_expression]: #67
[#386 relational_expression]: #50
[#386 sampled_texture_type]: #123
[#386 sampler_type]: #121
[#386 shift_expression]: #54
[#386 short_circuit_and_expression]: #52
[#386 short_circuit_or_expression]: #51
[#386 singular_expression]: #61
[#386 storage_texture_type]: #125
[#386 texture_and_sampler_types]: #97
[#386 type_specifier_without_ident]: #79
[#386 unary_expression]: #59
[#386 vec_prefix]: #80
[#403 compound_statement]: #519
[#406 additive_expression]: #58
[#406 array_type_specifier]: #95
[#406 binary_and_expression]: #55
[#406 binary_or_expression]: #56
[#406 binary_xor_expression]: #57
[#406 bitwise_expression]: #53
[#406 bool_literal]: #77
[#406 call_expression]: #69
[#406 callable]: #74
[#406 decimal_float_literal]: #85
[#406 decimal_int_literal]: #83
[#406 depth_texture_type]: #122
[#406 expression]: #516
[#406 float_literal]: #76
[#406 hex_float_literal]: #86
[#406 hex_int_literal]: #84
[#406 ident]: #68
[#406 int_literal]: #75
[#406 literal]: #70
[#406 mat_prefix]: #81
[#406 multiplicative_expression]: #60
[#406 multisampled_texture_type]: #124
[#406 paren_expression]: #71
[#406 primary_expression]: #67
[#406 relational_expression]: #50
[#406 sampled_texture_type]: #123
[#406 sampler_type]: #121
[#406 shift_expression]: #54
[#406 short_circuit_and_expression]: #52
[#406 short_circuit_or_expression]: #51
[#406 singular_expression]: #61
[#406 storage_texture_type]: #125
[#406 texture_and_sampler_types]: #97
[#406 type_specifier_without_ident]: #79
[#406 unary_expression]: #59
[#406 vec_prefix]: #80
[#408 compound_statement]: #515
[#409 array_type_specifier]: #95
[#409 assignment_statement]: #326
[#409 callable]: #320
[#409 core_lhs_expression]: #333
[#409 decrement_statement]: #328
[#409 depth_texture_type]: #122
[#409 for_header]: #509
[#409 for_header/0.0]: #510
[#409 for_init]: #511
[#409 func_call_statement]: #514
[#409 ident]: #330
[#409 increment_statement]: #327
[#409 lhs_expression]: #331
[#409 mat_prefix]: #81
[#409 multisampled_texture_type]: #124
[#409 sampled_texture_type]: #123
[#409 sampler_type]: #121
[#409 storage_texture_type]: #125
[#409 texture_and_sampler_types]: #97
[#409 type_specifier_without_ident]: #79
[#409 variable_decl]: #321
[#409 variable_statement]: #512
[#409 variable_updating_statement]: #513
[#409 vec_prefix]: #80
[#410 array_type_specifier]: #95
[#410 assignment_statement]: #326
[#410 break_statement]: #308
[#410 callable]: #320
[#410 compound_statement]: #312
[#410 const_assert_statement]: #313
[#410 continue_statement]: #309
[#410 core_lhs_expression]: #333
[#410 decrement_statement]: #328
[#410 depth_texture_type]: #122
[#410 for_statement]: #304
[#410 func_call_statement]: #306
[#410 ident]: #330
[#410 if_clause]: #315
[#410 if_statement]: #301
[#410 increment_statement]: #327
[#410 lhs_expression]: #331
[#410 loop_statement]: #303
[#410 loop_statement/0.2]: #506
[#410 loop_statement/0.2/0]: #507
[#410 mat_prefix]: #81
[#410 multisampled_texture_type]: #124
[#410 return_statement]: #300
[#410 sampled_texture_type]: #123
[#410 sampler_type]: #121
[#410 statement]: #508
[#410 storage_texture_type]: #125
[#410 switch_statement]: #302
[#410 texture_and_sampler_types]: #97
[#410 type_specifier_without_ident]: #79
[#410 variable_decl]: #321
[#410 variable_statement]: #307
[#410 variable_updating_statement]: #311
[#410 vec_prefix]: #80
[#410 while_statement]: #305
[#412 else_clause]: #503
[#412 if_statement/0.2]: #502
[#414 else_if_clause]: #414
[#414 if_statement/0.1/0]: #501
[#446 _template_args_end]: #498
[#447 _template_args_end]: #497
[#448 _template_args_end]: #496
[#450 array_type_specifier/0.4]: #493
[#451 _template_args_end]: #492
[#452 _template_args_end]: #491
[#453 expression_comma_list/0.2]: #489
[#455 expression_comma_list/0.1/0]: #488
[#455 expression_comma_list/0.1/0/0.0]: #455
[#456 additive_expression]: #58
[#456 array_type_specifier]: #95
[#456 binary_and_expression]: #55
[#456 binary_or_expression]: #56
[#456 binary_xor_expression]: #57
[#456 bitwise_expression]: #53
[#456 bool_literal]: #77
[#456 call_expression]: #69
[#456 callable]: #74
[#456 decimal_float_literal]: #85
[#456 decimal_int_literal]: #83
[#456 depth_texture_type]: #122
[#456 expression]: #487
[#456 float_literal]: #76
[#456 hex_float_literal]: #86
[#456 hex_int_literal]: #84
[#456 ident]: #68
[#456 int_literal]: #75
[#456 literal]: #70
[#456 mat_prefix]: #81
[#456 multiplicative_expression]: #60
[#456 multisampled_texture_type]: #124
[#456 paren_expression]: #71
[#456 primary_expression]: #67
[#456 relational_expression]: #50
[#456 sampled_texture_type]: #123
[#456 sampler_type]: #121
[#456 shift_expression]: #54
[#456 short_circuit_and_expression]: #52
[#456 short_circuit_or_expression]: #51
[#456 singular_expression]: #61
[#456 storage_texture_type]: #125
[#456 texture_and_sampler_types]: #97
[#456 type_specifier_without_ident]: #79
[#456 unary_expression]: #59
[#456 vec_prefix]: #80
[#458 _template_args_end]: #485
[#459 component_or_swizzle_specifier]: #484
[#459 component_or_swizzle_specifier/0.3]: #483
[#465 additive_expression]: #58
[#465 array_type_specifier]: #95
[#465 binary_and_expression]: #55
[#465 binary_or_expression]: #56
[#465 binary_xor_expression]: #57
[#465 bitwise_expression]: #53
[#465 bool_literal]: #77
[#465 call_expression]: #69
[#465 callable]: #74
[#465 decimal_float_literal]: #85
[#465 decimal_int_literal]: #83
[#465 depth_texture_type]: #122
[#465 expression]: #482
[#465 float_literal]: #76
[#465 hex_float_literal]: #86
[#465 hex_int_literal]: #84
[#465 ident]: #68
[#465 int_literal]: #75
[#465 literal]: #70
[#465 mat_prefix]: #81
[#465 multiplicative_expression]: #60
[#465 multisampled_texture_type]: #124
[#465 paren_expression]: #71
[#465 primary_expression]: #67
[#465 relational_expression]: #50
[#465 sampled_texture_type]: #123
[#465 sampler_type]: #121
[#465 shift_expression]: #54
[#465 short_circuit_and_expression]: #52
[#465 short_circuit_or_expression]: #51
[#465 singular_expression]: #61
[#465 storage_texture_type]: #125
[#465 texture_and_sampler_types]: #97
[#465 type_specifier_without_ident]: #79
[#465 unary_expression]: #59
[#465 vec_prefix]: #80
[#471 interpolation_sample_name]: #477
[#477 attrib_end]: #578
[#477 attrib_end/0.0]: #466
[#482 attrib_end]: #576
[#482 attrib_end/0.0]: #466
[#485 paren_expression]: #575
[#493 _template_args_end]: #574
[#494 additive_expression]: #571
[#494 array_type_specifier]: #95
[#494 binary_and_expression]: #55
[#494 binary_or_expression]: #56
[#494 binary_xor_expression]: #57
[#494 bitwise_expression]: #572
[#494 bool_literal]: #77
[#494 call_expression]: #69
[#494 callable]: #74
[#494 decimal_float_literal]: #85
[#494 decimal_int_literal]: #83
[#494 depth_texture_type]: #122
[#494 element_count_expression]: #570
[#494 float_literal]: #76
[#494 hex_float_literal]: #86
[#494 hex_int_literal]: #84
[#494 ident]: #68
[#494 int_literal]: #75
[#494 literal]: #70
[#494 mat_prefix]: #81
[#494 multiplicative_expression]: #60
[#494 multisampled_texture_type]: #124
[#494 paren_expression]: #71
[#494 primary_expression]: #67
[#494 sampled_texture_type]: #123
[#494 sampler_type]: #121
[#494 singular_expression]: #61
[#494 storage_texture_type]: #125
[#494 texture_and_sampler_types]: #97
[#494 type_specifier_without_ident]: #79
[#494 unary_expression]: #573
[#494 vec_prefix]: #80
[#495 array_type_specifier]: #95
[#495 depth_texture_type]: #122
[#495 ident]: #343
[#495 mat_prefix]: #346
[#495 multisampled_texture_type]: #124
[#495 sampled_texture_type]: #123
[#495 sampler_type]: #121
[#495 storage_texture_type]: #125
[#495 texture_and_sampler_types]: #97
[#495 type_specifier]: #569
[#495 type_specifier_without_ident]: #344
[#495 vec_prefix]: #345
[#499 access_mode]: #568
[#500 additive_expression]: #58
[#500 array_type_specifier]: #95
[#500 binary_and_expression]: #55
[#500 binary_or_expression]: #56
[#500 binary_xor_expression]: #57
[#500 bitwise_expression]: #53
[#500 bool_literal]: #77
[#500 call_expression]: #69
[#500 callable]: #74
[#500 decimal_float_literal]: #85
[#500 decimal_int_literal]: #83
[#500 depth_texture_type]: #122
[#500 expression]: #567
[#500 float_literal]: #76
[#500 hex_float_literal]: #86
[#500 hex_int_literal]: #84
[#500 ident]: #68
[#500 int_literal]: #75
[#500 literal]: #70
[#500 mat_prefix]: #81
[#500 multiplicative_expression]: #60
[#500 multisampled_texture_type]: #124
[#500 paren_expression]: #71
[#500 primary_expression]: #67
[#500 relational_expression]: #50
[#500 sampled_texture_type]: #123
[#500 sampler_type]: #121
[#500 shift_expression]: #54
[#500 short_circuit_and_expression]: #52
[#500 short_circuit_or_expression]: #51
[#500 singular_expression]: #61
[#500 storage_texture_type]: #125
[#500 texture_and_sampler_types]: #97
[#500 type_specifier_without_ident]: #79
[#500 unary_expression]: #59
[#500 vec_prefix]: #80
[#504 compound_statement]: #566
[#505 case_clause]: #562
[#505 default_alone_clause]: #563
[#505 switch_body]: #561
[#505 switch_statement/0.3]: #559
[#505 switch_statement/0.3/0]: #560
[#506 continuing_statement]: #557
[#506 loop_statement/0.3]: #556
[#508 array_type_specifier]: #95
[#508 assignment_statement]: #326
[#508 break_statement]: #308
[#508 callable]: #320
[#508 compound_statement]: #312
[#508 const_assert_statement]: #313
[#508 continue_statement]: #309
[#508 core_lhs_expression]: #333
[#508 decrement_statement]: #328
[#508 depth_texture_type]: #122
[#508 for_statement]: #304
[#508 func_call_statement]: #306
[#508 ident]: #330
[#508 if_clause]: #315
[#508 if_statement]: #301
[#508 increment_statement]: #327
[#508 lhs_expression]: #331
[#508 loop_statement]: #303
[#508 loop_statement/0.2/0]: #555
[#508 mat_prefix]: #81
[#508 multisampled_texture_type]: #124
[#508 return_statement]: #300
[#508 sampled_texture_type]: #123
[#508 sampler_type]: #121
[#508 statement]: #508
[#508 storage_texture_type]: #125
[#508 switch_statement]: #302
[#508 texture_and_sampler_types]: #97
[#508 type_specifier_without_ident]: #79
[#508 variable_decl]: #321
[#508 variable_statement]: #307
[#508 variable_updating_statement]: #311
[#508 vec_prefix]: #80
[#508 while_statement]: #305
[#517 additive_expression]: #58
[#517 array_type_specifier]: #95
[#517 binary_and_expression]: #55
[#517 binary_or_expression]: #56
[#517 binary_xor_expression]: #57
[#517 bitwise_expression]: #53
[#517 bool_literal]: #77
[#517 call_expression]: #69
[#517 callable]: #74
[#517 decimal_float_literal]: #85
[#517 decimal_int_literal]: #83
[#517 depth_texture_type]: #122
[#517 expression]: #552
[#517 float_literal]: #76
[#517 hex_float_literal]: #86
[#517 hex_int_literal]: #84
[#517 ident]: #68
[#517 int_literal]: #75
[#517 literal]: #70
[#517 mat_prefix]: #81
[#517 multiplicative_expression]: #60
[#517 multisampled_texture_type]: #124
[#517 paren_expression]: #71
[#517 primary_expression]: #67
[#517 relational_expression]: #50
[#517 sampled_texture_type]: #123
[#517 sampler_type]: #121
[#517 shift_expression]: #54
[#517 short_circuit_and_expression]: #52
[#517 short_circuit_or_expression]: #51
[#517 singular_expression]: #61
[#517 storage_texture_type]: #125
[#517 texture_and_sampler_types]: #97
[#517 type_specifier_without_ident]: #79
[#517 unary_expression]: #59
[#517 vec_prefix]: #80
[#518 additive_expression]: #58
[#518 array_type_specifier]: #95
[#518 binary_and_expression]: #55
[#518 binary_or_expression]: #56
[#518 binary_xor_expression]: #57
[#518 bitwise_expression]: #53
[#518 bool_literal]: #77
[#518 call_expression]: #69
[#518 callable]: #74
[#518 decimal_float_literal]: #85
[#518 decimal_int_literal]: #83
[#518 depth_texture_type]: #122
[#518 expression]: #551
[#518 float_literal]: #76
[#518 hex_float_literal]: #86
[#518 hex_int_literal]: #84
[#518 ident]: #68
[#518 int_literal]: #75
[#518 literal]: #70
[#518 mat_prefix]: #81
[#518 multiplicative_expression]: #60
[#518 multisampled_texture_type]: #124
[#518 paren_expression]: #71
[#518 primary_expression]: #67
[#518 relational_expression]: #50
[#518 sampled_texture_type]: #123
[#518 sampler_type]: #121
[#518 shift_expression]: #54
[#518 short_circuit_and_expression]: #52
[#518 short_circuit_or_expression]: #51
[#518 singular_expression]: #61
[#518 storage_texture_type]: #125
[#518 texture_and_sampler_types]: #97
[#518 type_specifier_without_ident]: #79
[#518 unary_expression]: #59
[#518 vec_prefix]: #80
[#525 param_list/0.2]: #548
[#527 param_list/0.1/0]: #547
[#527 param_list/0.1/0/0.0]: #527
[#528 attribute]: #378
[#528 param]: #546
[#528 param/0.0]: #376
[#528 param/0.0/0]: #377
[#529 function_header/0.5]: #544
[#534 array_type_specifier]: #95
[#534 depth_texture_type]: #122
[#534 ident]: #343
[#534 mat_prefix]: #346
[#534 multisampled_texture_type]: #124
[#534 sampled_texture_type]: #123
[#534 sampler_type]: #121
[#534 storage_texture_type]: #125
[#534 texture_and_sampler_types]: #97
[#534 type_specifier]: #542
[#534 type_specifier_without_ident]: #344
[#534 vec_prefix]: #345
[#535 _template_args_end]: #541
[#536 access_mode]: #537
[#545 attribute]: #601
[#545 function_header/0.5/0.1]: #599
[#545 function_header/0.5/0.1/0]: #600
[#550 array_type_specifier]: #95
[#550 depth_texture_type]: #122
[#550 ident]: #343
[#550 mat_prefix]: #346
[#550 multisampled_texture_type]: #124
[#550 sampled_texture_type]: #123
[#550 sampler_type]: #121
[#550 storage_texture_type]: #125
[#550 texture_and_sampler_types]: #97
[#550 type_specifier]: #598
[#550 type_specifier_without_ident]: #344
[#550 vec_prefix]: #345
[#553 additive_expression]: #58
[#553 array_type_specifier]: #95
[#553 binary_and_expression]: #55
[#553 binary_or_expression]: #56
[#553 binary_xor_expression]: #57
[#553 bitwise_expression]: #53
[#553 bool_literal]: #77
[#553 call_expression]: #69
[#553 callable]: #74
[#553 decimal_float_literal]: #85
[#553 decimal_int_literal]: #83
[#553 depth_texture_type]: #122
[#553 expression]: #597
[#553 float_literal]: #76
[#553 for_header/0.2]: #596
[#553 hex_float_literal]: #86
[#553 hex_int_literal]: #84
[#553 ident]: #68
[#553 int_literal]: #75
[#553 literal]: #70
[#553 mat_prefix]: #81
[#553 multiplicative_expression]: #60
[#553 multisampled_texture_type]: #124
[#553 paren_expression]: #71
[#553 primary_expression]: #67
[#553 relational_expression]: #50
[#553 sampled_texture_type]: #123
[#553 sampler_type]: #121
[#553 shift_expression]: #54
[#553 short_circuit_and_expression]: #52
[#553 short_circuit_or_expression]: #51
[#553 singular_expression]: #61
[#553 storage_texture_type]: #125
[#553 texture_and_sampler_types]: #97
[#553 type_specifier_without_ident]: #79
[#553 unary_expression]: #59
[#553 vec_prefix]: #80
[#554 compound_statement]: #595
[#558 continuing_compound_statement]: #592
[#561 case_clause]: #562
[#561 default_alone_clause]: #563
[#561 switch_body]: #561
[#561 switch_statement/0.3/0]: #590
[#564 additive_expression]: #58
[#564 array_type_specifier]: #95
[#564 binary_and_expression]: #55
[#564 binary_or_expression]: #56
[#564 binary_xor_expression]: #57
[#564 bitwise_expression]: #53
[#564 bool_literal]: #77
[#564 call_expression]: #69
[#564 callable]: #74
[#564 case_selector]: #587
[#564 case_selectors]: #586
[#564 decimal_float_literal]: #85
[#564 decimal_int_literal]: #83
[#564 depth_texture_type]: #122
[#564 expression]: #589
[#564 float_literal]: #76
[#564 hex_float_literal]: #86
[#564 hex_int_literal]: #84
[#564 ident]: #68
[#564 int_literal]: #75
[#564 literal]: #70
[#564 mat_prefix]: #81
[#564 multiplicative_expression]: #60
[#564 multisampled_texture_type]: #124
[#564 paren_expression]: #71
[#564 primary_expression]: #67
[#564 relational_expression]: #50
[#564 sampled_texture_type]: #123
[#564 sampler_type]: #121
[#564 shift_expression]: #54
[#564 short_circuit_and_expression]: #52
[#564 short_circuit_or_expression]: #51
[#564 singular_expression]: #61
[#564 storage_texture_type]: #125
[#564 texture_and_sampler_types]: #97
[#564 type_specifier_without_ident]: #79
[#564 unary_expression]: #59
[#564 vec_prefix]: #80
[#565 default_alone_clause/0.1]: #584
[#567 compound_statement]: #583
[#568 _template_args_end]: #582
[#569 type_specifier_without_ident/7.6]: #580
[#571 additive_operator]: #202
[#577 additive_expression]: #58
[#577 array_type_specifier]: #95
[#577 binary_and_expression]: #55
[#577 binary_or_expression]: #56
[#577 binary_xor_expression]: #57
[#577 bitwise_expression]: #53
[#577 bool_literal]: #77
[#577 call_expression]: #69
[#577 callable]: #74
[#577 decimal_float_literal]: #85
[#577 decimal_int_literal]: #83
[#577 depth_texture_type]: #122
[#577 expression]: #579
[#577 float_literal]: #76
[#577 hex_float_literal]: #86
[#577 hex_int_literal]: #84
[#577 ident]: #68
[#577 int_literal]: #75
[#577 literal]: #70
[#577 mat_prefix]: #81
[#577 multiplicative_expression]: #60
[#577 multisampled_texture_type]: #124
[#577 paren_expression]: #71
[#577 primary_expression]: #67
[#577 relational_expression]: #50
[#577 sampled_texture_type]: #123
[#577 sampler_type]: #121
[#577 shift_expression]: #54
[#577 short_circuit_and_expression]: #52
[#577 short_circuit_or_expression]: #51
[#577 singular_expression]: #61
[#577 storage_texture_type]: #125
[#577 texture_and_sampler_types]: #97
[#577 type_specifier_without_ident]: #79
[#577 unary_expression]: #59
[#577 vec_prefix]: #80
[#579 attrib_end]: #617
[#579 attrib_end/0.0]: #466
[#580 _template_args_end]: #616
[#581 access_mode]: #615
[#584 compound_statement]: #614
[#586 case_clause/0.2]: #612
[#587 case_selectors/0.1]: #608
[#587 case_selectors/0.1/0]: #609
[#587 case_selectors/0.1/0/0.0]: #610
[#593 array_type_specifier]: #95
[#593 assignment_statement]: #326
[#593 break_statement]: #308
[#593 callable]: #320
[#593 compound_statement]: #312
[#593 const_assert_statement]: #313
[#593 continue_statement]: #309
[#593 continuing_compound_statement/0.1]: #605
[#593 continuing_compound_statement/0.1/0]: #606
[#593 core_lhs_expression]: #333
[#593 decrement_statement]: #328
[#593 depth_texture_type]: #122
[#593 for_statement]: #304
[#593 func_call_statement]: #306
[#593 ident]: #330
[#593 if_clause]: #315
[#593 if_statement]: #301
[#593 increment_statement]: #327
[#593 lhs_expression]: #331
[#593 loop_statement]: #303
[#593 mat_prefix]: #81
[#593 multisampled_texture_type]: #124
[#593 return_statement]: #300
[#593 sampled_texture_type]: #123
[#593 sampler_type]: #121
[#593 statement]: #607
[#593 storage_texture_type]: #125
[#593 switch_statement]: #302
[#593 texture_and_sampler_types]: #97
[#593 type_specifier_without_ident]: #79
[#593 variable_decl]: #321
[#593 variable_statement]: #307
[#593 variable_updating_statement]: #311
[#593 vec_prefix]: #80
[#593 while_statement]: #305
[#599 array_type_specifier]: #95
[#599 depth_texture_type]: #122
[#599 ident]: #343
[#599 mat_prefix]: #346
[#599 multisampled_texture_type]: #124
[#599 sampled_texture_type]: #123
[#599 sampler_type]: #121
[#599 storage_texture_type]: #125
[#599 texture_and_sampler_types]: #97
[#599 type_specifier]: #603
[#599 type_specifier_without_ident]: #344
[#599 vec_prefix]: #345
[#601 attribute]: #601
[#601 function_header/0.5/0.1/0]: #602
[#604 array_type_specifier]: #95
[#604 assignment_statement]: #326
[#604 callable]: #320
[#604 core_lhs_expression]: #333
[#604 decrement_statement]: #328
[#604 depth_texture_type]: #122
[#604 for_header/0.4]: #627
[#604 for_update]: #628
[#604 func_call_statement]: #630
[#604 ident]: #330
[#604 increment_statement]: #327
[#604 lhs_expression]: #331
[#604 mat_prefix]: #81
[#604 multisampled_texture_type]: #124
[#604 sampled_texture_type]: #123
[#604 sampler_type]: #121
[#604 storage_texture_type]: #125
[#604 texture_and_sampler_types]: #97
[#604 type_specifier_without_ident]: #79
[#604 variable_updating_statement]: #629
[#604 vec_prefix]: #80
[#605 break_if_statement]: #625
[#605 continuing_compound_statement/0.2]: #624
[#607 array_type_specifier]: #95
[#607 assignment_statement]: #326
[#607 break_statement]: #308
[#607 callable]: #320
[#607 compound_statement]: #312
[#607 const_assert_statement]: #313
[#607 continue_statement]: #309
[#607 continuing_compound_statement/0.1/0]: #623
[#607 core_lhs_expression]: #333
[#607 decrement_statement]: #328
[#607 depth_texture_type]: #122
[#607 for_statement]: #304
[#607 func_call_statement]: #306
[#607 ident]: #330
[#607 if_clause]: #315
[#607 if_statement]: #301
[#607 increment_statement]: #327
[#607 lhs_expression]: #331
[#607 loop_statement]: #303
[#607 mat_prefix]: #81
[#607 multisampled_texture_type]: #124
[#607 return_statement]: #300
[#607 sampled_texture_type]: #123
[#607 sampler_type]: #121
[#607 statement]: #607
[#607 storage_texture_type]: #125
[#607 switch_statement]: #302
[#607 texture_and_sampler_types]: #97
[#607 type_specifier_without_ident]: #79
[#607 variable_decl]: #321
[#607 variable_statement]: #307
[#607 variable_updating_statement]: #311
[#607 vec_prefix]: #80
[#607 while_statement]: #305
[#608 case_selectors/0.2]: #621
[#610 case_selectors/0.1/0]: #620
[#610 case_selectors/0.1/0/0.0]: #610
[#611 additive_expression]: #58
[#611 array_type_specifier]: #95
[#611 binary_and_expression]: #55
[#611 binary_or_expression]: #56
[#611 binary_xor_expression]: #57
[#611 bitwise_expression]: #53
[#611 bool_literal]: #77
[#611 call_expression]: #69
[#611 callable]: #74
[#611 case_selector]: #619
[#611 decimal_float_literal]: #85
[#611 decimal_int_literal]: #83
[#611 depth_texture_type]: #122
[#611 expression]: #589
[#611 float_literal]: #76
[#611 hex_float_literal]: #86
[#611 hex_int_literal]: #84
[#611 ident]: #68
[#611 int_literal]: #75
[#611 literal]: #70
[#611 mat_prefix]: #81
[#611 multiplicative_expression]: #60
[#611 multisampled_texture_type]: #124
[#611 paren_expression]: #71
[#611 primary_expression]: #67
[#611 relational_expression]: #50
[#611 sampled_texture_type]: #123
[#611 sampler_type]: #121
[#611 shift_expression]: #54
[#611 short_circuit_and_expression]: #52
[#611 short_circuit_or_expression]: #51
[#611 singular_expression]: #61
[#611 storage_texture_type]: #125
[#611 texture_and_sampler_types]: #97
[#611 type_specifier_without_ident]: #79
[#611 unary_expression]: #59
[#611 vec_prefix]: #80
[#612 compound_statement]: #618
[#631 additive_expression]: #58
[#631 array_type_specifier]: #95
[#631 binary_and_expression]: #55
[#631 binary_or_expression]: #56
[#631 binary_xor_expression]: #57
[#631 bitwise_expression]: #53
[#631 bool_literal]: #77
[#631 call_expression]: #69
[#631 callable]: #74
[#631 decimal_float_literal]: #85
[#631 decimal_int_literal]: #83
[#631 depth_texture_type]: #122
[#631 expression]: #633
[#631 float_literal]: #76
[#631 hex_float_literal]: #86
[#631 hex_int_literal]: #84
[#631 ident]: #68
[#631 int_literal]: #75
[#631 literal]: #70
[#631 mat_prefix]: #81
[#631 multiplicative_expression]: #60
[#631 multisampled_texture_type]: #124
[#631 paren_expression]: #71
[#631 primary_expression]: #67
[#631 relational_expression]: #50
[#631 sampled_texture_type]: #123
[#631 sampler_type]: #121
[#631 shift_expression]: #54
[#631 short_circuit_and_expression]: #52
[#631 short_circuit_or_expression]: #51
[#631 singular_expression]: #61
[#631 storage_texture_type]: #125
[#631 texture_and_sampler_types]: #97
[#631 type_specifier_without_ident]: #79
[#631 unary_expression]: #59
[#631 vec_prefix]: #80
