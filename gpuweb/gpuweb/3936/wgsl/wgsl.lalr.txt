=Grammar:

_blankspace:/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_block_comment:/\u200B_block_comment/
_comment:/\/\/.*/
_disambiguate_template:/\u200B_disambiguate_template/
_error_sentinel:/\u200B_error_sentinel/
_greater_than:/\u200B_greater_than/
_greater_than_equal:/\u200B_greater_than_equal/
_less_than:/\u200B_less_than/
_less_than_equal:/\u200B_less_than_equal/
_shift_left:/\u200B_shift_left/
_shift_left_assign:/\u200B_shift_left_assign/
_shift_right:/\u200B_shift_right/
_shift_right_assign:/\u200B_shift_right_assign/
_template_args_end:/\u200B_template_args_end/
_template_args_start:/\u200B_template_args_start/
additive_expression:
   additive_expression additive_operator multiplicative_expression
 | multiplicative_expression
additive_operator:
   '+'
 | '-'
argument_expression_list:
   '(' expression_comma_list ? ')'
assignment_statement:
   '_' '=' expression
 | lhs_expression ( '=' | compound_assignment_operator ) expression
assignment_statement/0.1:
   '='
 | compound_assignment_operator
attrib_end:
   ',' ? ')'
attribute:
   '@' 'align' '(' expression attrib_end
 | '@' 'binding' '(' expression attrib_end
 | '@' 'builtin' '(' expression attrib_end
 | '@' 'compute'
 | '@' 'const'
 | '@' 'diagnostic' diagnostic_control
 | '@' 'fragment'
 | '@' 'group' '(' expression attrib_end
 | '@' 'id' '(' expression attrib_end
 | '@' 'interpolate' '(' expression ',' expression attrib_end
 | '@' 'interpolate' '(' expression attrib_end
 | '@' 'invariant'
 | '@' 'location' '(' expression attrib_end
 | '@' 'must_use'
 | '@' 'size' '(' expression attrib_end
 | '@' 'vertex'
 | '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end
 | '@' 'workgroup_size' '(' expression ',' expression attrib_end
 | '@' 'workgroup_size' '(' expression attrib_end
binary_and_expression:
   binary_and_expression '&' unary_expression
 | unary_expression
binary_or_expression:
   binary_or_expression '|' unary_expression
 | unary_expression
binary_xor_expression:
   binary_xor_expression '^' unary_expression
 | unary_expression
bitwise_expression:
   binary_and_expression '&' unary_expression
 | binary_or_expression '|' unary_expression
 | binary_xor_expression '^' unary_expression
bool_literal:
   'false'
 | 'true'
break_if_statement:
   'break' 'if' expression ';'
break_statement:'break'
call_expression:call_phrase
call_phrase:
   template_elaborated_ident argument_expression_list
case_clause:
   'case' case_selectors ':' ? compound_statement
case_selector:
   'default'
 | expression
case_selectors:
   case_selector ( ',' case_selector ) * ? ',' ?
case_selectors/0.1/0/0.0:
   ',' case_selector
component_or_swizzle_specifier:
   '.' member_ident component_or_swizzle_specifier ?
 | '.' swizzle_name component_or_swizzle_specifier ?
 | '[' expression ']' component_or_swizzle_specifier ?
compound_assignment_operator:
   '%='
 | '&='
 | '*='
 | '+='
 | '-='
 | '/='
 | '^='
 | '|='
 | _shift_left_assign
 | _shift_right_assign
compound_statement:
   attribute * ? '{' statement * ? '}'
const_assert_statement:
   'const_assert' expression
continue_statement:'continue'
continuing_compound_statement:
   attribute * ? '{' statement * ? break_if_statement ? '}'
continuing_statement:
   'continuing' continuing_compound_statement
core_lhs_expression:
   '(' lhs_expression ')'
 | ident _disambiguate_template
decimal_float_literal:
   /0[fh]/
 | /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/
 | /[0-9]+[eE][+-]?[0-9]+[fh]?/
 | /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/
 | /[1-9][0-9]*[fh]/
decimal_int_literal:
   /0[iu]?/
 | /[1-9][0-9]*[iu]?/
decrement_statement:
   lhs_expression '--'
default_alone_clause:
   'default' ':' ? compound_statement
diagnostic_control:
   '(' severity_control_name ',' diagnostic_rule_name attrib_end
diagnostic_directive:
   'diagnostic' diagnostic_control ';'
diagnostic_rule_name:ident_pattern_token
else_clause:
   'else' compound_statement
else_if_clause:
   'else' 'if' expression compound_statement
enable_directive:
   'enable' enable_extension_name ';'
enable_extension_name:ident_pattern_token
expression:
   bitwise_expression
 | relational_expression
 | short_circuit_and_expression '&&' relational_expression
 | short_circuit_or_expression '||' relational_expression
expression_comma_list:
   expression ( ',' expression ) * ? ',' ?
expression_comma_list/0.1/0/0.0:
   ',' expression
float_literal:
   decimal_float_literal
 | hex_float_literal
for_header:
   for_init ? ';' expression ? ';' for_update ?
for_init:
   func_call_statement
 | variable_or_value_statement
 | variable_updating_statement
for_statement:
   attribute * ? 'for' '(' for_header ')' compound_statement
for_update:
   func_call_statement
 | variable_updating_statement
func_call_statement:call_phrase
function_decl:
   attribute * ? function_header compound_statement
function_header:
   'fn' ident '(' param_list ? ')' ( '->' attribute * ? template_elaborated_ident )?
global_decl:
   ';'
 | const_assert_statement ';'
 | function_decl
 | global_value_decl ';'
 | global_variable_decl ';'
 | struct_decl
 | type_alias_decl ';'
global_directive:
   diagnostic_directive
 | enable_directive
 | requires_directive
global_value_decl:
   'const' optionally_typed_ident '=' expression
 | attribute * ? 'override' optionally_typed_ident ( '=' expression )?
global_variable_decl:
   attribute * ? variable_decl ( '=' expression )?
hex_float_literal:
   /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/
 | /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/
 | /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/
hex_int_literal:/0[xX][0-9a-fA-F]+[iu]?/
ident:
   ident_pattern_token _disambiguate_template
ident_pattern_token:/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
if_clause:
   'if' expression compound_statement
if_statement:
   attribute * ? if_clause else_if_clause * ? else_clause ?
increment_statement:
   lhs_expression '++'
int_literal:
   decimal_int_literal
 | hex_int_literal
lhs_expression:
   '&' lhs_expression
 | '*' lhs_expression
 | core_lhs_expression component_or_swizzle_specifier ?
literal:
   bool_literal
 | float_literal
 | int_literal
loop_statement:
   attribute * ? 'loop' attribute * ? '{' statement * ? continuing_statement ? '}'
member_ident:ident_pattern_token
multiplicative_expression:
   multiplicative_expression multiplicative_operator unary_expression
 | unary_expression
multiplicative_operator:
   '%'
 | '*'
 | '/'
optionally_typed_ident:
   ident ( ':' type_specifier )?
param:
   attribute * ? ident ':' type_specifier
param_list:
   param ( ',' param ) * ? ',' ?
param_list/0.1/0/0.0:
   ',' param
paren_expression:
   '(' expression ')'
primary_expression:
   call_expression
 | literal
 | paren_expression
 | template_elaborated_ident
relational_expression:
   shift_expression
 | shift_expression '!=' shift_expression
 | shift_expression '==' shift_expression
 | shift_expression _greater_than shift_expression
 | shift_expression _greater_than_equal shift_expression
 | shift_expression _less_than shift_expression
 | shift_expression _less_than_equal shift_expression
requires_directive:
   'requires' software_extension_list ';'
return_statement:
   'return' expression ?
severity_control_name:
   'error'
 | 'info'
 | 'off'
 | 'warning'
shift_expression:
   additive_expression
 | unary_expression _shift_left unary_expression
 | unary_expression _shift_right unary_expression
short_circuit_and_expression:
   relational_expression
 | short_circuit_and_expression '&&' relational_expression
short_circuit_or_expression:
   relational_expression
 | short_circuit_or_expression '||' relational_expression
singular_expression:
   primary_expression component_or_swizzle_specifier ?
software_extension_list:
   software_extension_name ( ',' software_extension_name ) * ? ',' ?
software_extension_list/0.1/0/0.0:
   ',' software_extension_name
software_extension_name:ident_pattern_token
statement:
   ';'
 | 'discard' ';'
 | break_statement ';'
 | compound_statement
 | const_assert_statement ';'
 | continue_statement ';'
 | for_statement
 | func_call_statement ';'
 | if_statement
 | loop_statement
 | return_statement ';'
 | switch_statement
 | variable_or_value_statement ';'
 | variable_updating_statement ';'
 | while_statement
struct_body_decl:
   '{' struct_member ( ',' struct_member ) * ? ',' ? '}'
struct_body_decl/0.2/0/0.0:
   ',' struct_member
struct_decl:
   'struct' ident struct_body_decl
struct_member:
   attribute * ? member_ident ':' type_specifier
switch_body:
   attribute * ? '{' ( switch_clause * ) '}'
switch_body/0.2:
   switch_clause *
switch_clause:
   case_clause
 | default_alone_clause
switch_statement:
   attribute * ? 'switch' expression switch_body
swizzle_name:
   '/[rgba]/'
 | '/[rgba][rgba]/'
 | '/[rgba][rgba][rgba]/'
 | '/[rgba][rgba][rgba][rgba]/'
 | '/[xyzw]/'
 | '/[xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw][xyzw]/'
template_arg_comma_list:
   template_arg_expression ( ',' template_arg_expression ) * ? ',' ?
template_arg_comma_list/0.1/0/0.0:
   ',' template_arg_expression
template_arg_expression:expression
template_elaborated_ident:
   ident _disambiguate_template template_list ?
template_list:
   _template_args_start template_arg_comma_list _template_args_end
translation_unit:
   global_directive * ? global_decl * ?
type_alias_decl:
   'alias' ident '=' type_specifier
type_specifier:template_elaborated_ident
unary_expression:
   '!' unary_expression
 | '&' unary_expression
 | '*' unary_expression
 | '-' unary_expression
 | '~' unary_expression
 | singular_expression
variable_decl:
   'var' _disambiguate_template template_list ? optionally_typed_ident
variable_or_value_statement:
   'const' optionally_typed_ident '=' expression
 | 'let' optionally_typed_ident '=' expression
 | variable_decl
 | variable_decl '=' expression
variable_updating_statement:
   assignment_statement
 | decrement_statement
 | increment_statement
while_statement:
   attribute * ? 'while' expression compound_statement

=Raw rules:
translation_unit  -> ( Choice ( Seq translation_unit/0.0 translation_unit/0.1 ) )
translation_unit .reg_info.index: 490
translation_unit .first: {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' ε}
translation_unit .derives_empty: True
translation_unit .follow: {EndOfText}
global_directive  -> ( Choice diagnostic_directive enable_directive requires_directive )
global_directive .reg_info.index: 129
global_directive .first: {'diagnostic' 'enable' 'requires'}
global_directive .derives_empty: False
global_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_decl  -> ( Choice ';' ( Seq global_variable_decl ';' ) ( Seq global_value_decl ';' ) ( Seq type_alias_decl ';' ) struct_decl function_decl ( Seq const_assert_statement ';' ) )
global_decl .reg_info.index: 140
global_decl .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var'}
global_decl .derives_empty: False
global_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
bool_literal  -> ( Choice 'true' 'false' )
bool_literal .reg_info.index: 141
bool_literal .first: {'false' 'true'}
bool_literal .derives_empty: False
bool_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal  -> ( Choice decimal_int_literal hex_int_literal )
int_literal .reg_info.index: 144
int_literal .first: {/0[iu]?/ /0[xX][0-9a-fA-F]+[iu]?/ /[1-9][0-9]*[iu]?/}
int_literal .derives_empty: False
int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal  -> ( Choice /0[iu]?/ /[1-9][0-9]*[iu]?/ )
decimal_int_literal .reg_info.index: 145
decimal_int_literal .first: {/0[iu]?/ /[1-9][0-9]*[iu]?/}
decimal_int_literal .derives_empty: False
decimal_int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal  -> /0[xX][0-9a-fA-F]+[iu]?/
hex_int_literal .reg_info.index: 7
hex_int_literal .first: {/0[xX][0-9a-fA-F]+[iu]?/}
hex_int_literal .derives_empty: False
hex_int_literal .follow: {}
float_literal  -> ( Choice decimal_float_literal hex_float_literal )
float_literal .reg_info.index: 148
float_literal .first: {/0[fh]/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
float_literal .derives_empty: False
float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal  -> ( Choice /0[fh]/ /[1-9][0-9]*[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ )
decimal_float_literal .reg_info.index: 149
decimal_float_literal .first: {/0[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
decimal_float_literal .derives_empty: False
decimal_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal  -> ( Choice /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ )
hex_float_literal .reg_info.index: 150
hex_float_literal .first: {/0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/}
hex_float_literal .derives_empty: False
hex_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
diagnostic_directive  -> ( Choice ( Seq 'diagnostic' diagnostic_control ';' ) )
diagnostic_directive .reg_info.index: 436
diagnostic_directive .first: {'diagnostic'}
diagnostic_directive .derives_empty: False
diagnostic_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
literal  -> ( Choice int_literal float_literal bool_literal )
literal .reg_info.index: 156
literal .first: {'false' 'true' /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
literal .derives_empty: False
literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident  -> ( Choice ( Seq ident_pattern_token _disambiguate_template ) )
ident .reg_info.index: 437
ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident .derives_empty: False
ident .follow: {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}
member_ident  -> ident_pattern_token
member_ident .reg_info.index: 157
member_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
member_ident .derives_empty: False
member_ident .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
diagnostic_rule_name  -> ident_pattern_token
diagnostic_rule_name .reg_info.index: 157
diagnostic_rule_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_rule_name .derives_empty: False
diagnostic_rule_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
template_list  -> ( Choice ( Seq _template_args_start template_arg_comma_list _template_args_end ) )
template_list .reg_info.index: 438
template_list .first: {/\u200B_template_args_start/}
template_list .derives_empty: False
template_list .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_arg_comma_list  -> ( Choice ( Seq template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 ) )
template_arg_comma_list .reg_info.index: 546
template_arg_comma_list .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_arg_comma_list .derives_empty: False
template_arg_comma_list .follow: {/\u200B_template_args_end/}
template_arg_expression  -> expression
template_arg_expression .reg_info.index: 170
template_arg_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_arg_expression .derives_empty: False
template_arg_expression .follow: {',' /\u200B_template_args_end/}
attribute  -> ( Choice ( Seq '@' 'align' '(' expression attrib_end ) ( Seq '@' 'binding' '(' expression attrib_end ) ( Seq '@' 'builtin' '(' expression attrib_end ) ( Seq '@' 'const' ) ( Seq '@' 'diagnostic' diagnostic_control ) ( Seq '@' 'group' '(' expression attrib_end ) ( Seq '@' 'id' '(' expression attrib_end ) ( Seq '@' 'interpolate' '(' expression attrib_end ) ( Seq '@' 'interpolate' '(' expression ',' expression attrib_end ) ( Seq '@' 'invariant' ) ( Seq '@' 'location' '(' expression attrib_end ) ( Seq '@' 'must_use' ) ( Seq '@' 'size' '(' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression ',' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end ) ( Seq '@' 'vertex' ) ( Seq '@' 'fragment' ) ( Seq '@' 'compute' ) )
attribute .reg_info.index: 191
attribute .first: {'@'}
attribute .derives_empty: False
attribute .follow: {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end  -> ( Choice ( Seq attrib_end/0.0 ')' ) )
attrib_end .reg_info.index: 653
attrib_end .first: {')' ','}
attrib_end .derives_empty: False
attrib_end .follow: {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_control  -> ( Choice ( Seq '(' severity_control_name ',' diagnostic_rule_name attrib_end ) )
diagnostic_control .reg_info.index: 441
diagnostic_control .first: {'('}
diagnostic_control .derives_empty: False
diagnostic_control .follow: {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_decl  -> ( Choice ( Seq 'struct' ident struct_body_decl ) )
struct_decl .reg_info.index: 442
struct_decl .first: {'struct'}
struct_decl .derives_empty: False
struct_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl  -> ( Choice ( Seq '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' ) )
struct_body_decl .reg_info.index: 672
struct_body_decl .first: {'{'}
struct_body_decl .derives_empty: False
struct_body_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_member  -> ( Choice ( Seq struct_member/0.0 member_ident ':' type_specifier ) )
struct_member .reg_info.index: 680
struct_member .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member .derives_empty: False
struct_member .follow: {',' '}'}
type_alias_decl  -> ( Choice ( Seq 'alias' ident '=' type_specifier ) )
type_alias_decl .reg_info.index: 445
type_alias_decl .first: {'alias'}
type_alias_decl .derives_empty: False
type_alias_decl .follow: {';'}
type_specifier  -> template_elaborated_ident
type_specifier .reg_info.index: 211
type_specifier .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
type_specifier .derives_empty: False
type_specifier .follow: {')' ',' ';' '=' '}'}
template_elaborated_ident  -> ( Choice ( Seq ident _disambiguate_template template_elaborated_ident/0.2 ) )
template_elaborated_ident .reg_info.index: 692
template_elaborated_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident .derives_empty: False
template_elaborated_ident .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
variable_or_value_statement  -> ( Choice variable_decl ( Seq variable_decl '=' expression ) ( Seq 'let' optionally_typed_ident '=' expression ) ( Seq 'const' optionally_typed_ident '=' expression ) )
variable_or_value_statement .reg_info.index: 220
variable_or_value_statement .first: {'const' 'let' 'var'}
variable_or_value_statement .derives_empty: False
variable_or_value_statement .follow: {';'}
variable_decl  -> ( Choice ( Seq 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident ) )
variable_decl .reg_info.index: 714
variable_decl .first: {'var'}
variable_decl .derives_empty: False
variable_decl .follow: {';' '='}
optionally_typed_ident  -> ( Choice ( Seq ident optionally_typed_ident/0.1 ) )
optionally_typed_ident .reg_info.index: 720
optionally_typed_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
optionally_typed_ident .derives_empty: False
optionally_typed_ident .follow: {';' '='}
global_variable_decl  -> ( Choice ( Seq global_variable_decl/0.0 variable_decl global_variable_decl/0.2 ) )
global_variable_decl .reg_info.index: 727
global_variable_decl .first: {'@' 'var'}
global_variable_decl .derives_empty: False
global_variable_decl .follow: {';'}
global_value_decl  -> ( Choice ( Seq 'const' optionally_typed_ident '=' expression ) ( Seq global_value_decl/1.0 'override' optionally_typed_ident global_value_decl/1.3 ) )
global_value_decl .reg_info.index: 739
global_value_decl .first: {'@' 'const' 'override'}
global_value_decl .derives_empty: False
global_value_decl .follow: {';'}
primary_expression  -> ( Choice template_elaborated_ident call_expression literal paren_expression )
primary_expression .reg_info.index: 233
primary_expression .first: {'(' 'false' 'true' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
primary_expression .derives_empty: False
primary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression  -> call_phrase
call_expression .reg_info.index: 234
call_expression .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_expression .derives_empty: False
call_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_phrase  -> ( Choice ( Seq template_elaborated_ident argument_expression_list ) )
call_phrase .reg_info.index: 450
call_phrase .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_phrase .derives_empty: False
call_phrase .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression  -> ( Choice ( Seq '(' expression ')' ) )
paren_expression .reg_info.index: 451
paren_expression .first: {'('}
paren_expression .derives_empty: False
paren_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list  -> ( Choice ( Seq '(' argument_expression_list/0.1 ')' ) )
argument_expression_list .reg_info.index: 757
argument_expression_list .first: {'('}
argument_expression_list .derives_empty: False
argument_expression_list .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
expression_comma_list  -> ( Choice ( Seq expression expression_comma_list/0.1 expression_comma_list/0.2 ) )
expression_comma_list .reg_info.index: 764
expression_comma_list .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression_comma_list .derives_empty: False
expression_comma_list .follow: {')'}
component_or_swizzle_specifier  -> ( Choice ( Seq '[' expression ']' component_or_swizzle_specifier/0.3 ) ( Seq '.' member_ident component_or_swizzle_specifier/1.2 ) ( Seq '.' swizzle_name component_or_swizzle_specifier/2.2 ) )
component_or_swizzle_specifier .reg_info.index: 782
component_or_swizzle_specifier .first: {'.' '['}
component_or_swizzle_specifier .derives_empty: False
component_or_swizzle_specifier .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
unary_expression  -> ( Choice singular_expression ( Seq '-' unary_expression ) ( Seq '!' unary_expression ) ( Seq '~' unary_expression ) ( Seq '*' unary_expression ) ( Seq '&' unary_expression ) )
unary_expression .reg_info.index: 259
unary_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
unary_expression .derives_empty: False
unary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression  -> ( Choice ( Seq primary_expression singular_expression/0.1 ) )
singular_expression .reg_info.index: 803
singular_expression .first: {'(' 'false' 'true' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
singular_expression .derives_empty: False
singular_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
lhs_expression  -> ( Choice ( Seq core_lhs_expression lhs_expression/0.1 ) ( Seq '*' lhs_expression ) ( Seq '&' lhs_expression ) )
lhs_expression .reg_info.index: 814
lhs_expression .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
lhs_expression .derives_empty: False
lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression  -> ( Choice ( Seq ident _disambiguate_template ) ( Seq '(' lhs_expression ')' ) )
core_lhs_expression .reg_info.index: 270
core_lhs_expression .first: {'(' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
core_lhs_expression .derives_empty: False
core_lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
multiplicative_expression  -> ( Choice unary_expression ( Seq multiplicative_expression multiplicative_operator unary_expression ) )
multiplicative_expression .reg_info.index: 274
multiplicative_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_expression .derives_empty: False
multiplicative_expression .follow: {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator  -> ( Choice '*' '/' '%' )
multiplicative_operator .reg_info.index: 275
multiplicative_operator .first: {'%' '*' '/'}
multiplicative_operator .derives_empty: False
multiplicative_operator .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression  -> ( Choice multiplicative_expression ( Seq additive_expression additive_operator multiplicative_expression ) )
additive_expression .reg_info.index: 279
additive_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression .derives_empty: False
additive_expression .follow: {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_operator  -> ( Choice '+' '-' )
additive_operator .reg_info.index: 280
additive_operator .first: {'+' '-'}
additive_operator .derives_empty: False
additive_operator .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression  -> ( Choice additive_expression ( Seq unary_expression _shift_left unary_expression ) ( Seq unary_expression _shift_right unary_expression ) )
shift_expression .reg_info.index: 285
shift_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression .derives_empty: False
shift_expression .follow: {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
relational_expression  -> ( Choice shift_expression ( Seq shift_expression _less_than shift_expression ) ( Seq shift_expression _greater_than shift_expression ) ( Seq shift_expression _less_than_equal shift_expression ) ( Seq shift_expression _greater_than_equal shift_expression ) ( Seq shift_expression '==' shift_expression ) ( Seq shift_expression '!=' shift_expression ) )
relational_expression .reg_info.index: 297
relational_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
relational_expression .derives_empty: False
relational_expression .follow: {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
short_circuit_and_expression  -> ( Choice relational_expression ( Seq short_circuit_and_expression '&&' relational_expression ) )
short_circuit_and_expression .reg_info.index: 301
short_circuit_and_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_and_expression .derives_empty: False
short_circuit_and_expression .follow: {'&&'}
short_circuit_or_expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) )
short_circuit_or_expression .reg_info.index: 304
short_circuit_or_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_or_expression .derives_empty: False
short_circuit_or_expression .follow: {'||'}
binary_or_expression  -> ( Choice unary_expression ( Seq binary_or_expression '|' unary_expression ) )
binary_or_expression .reg_info.index: 307
binary_or_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_or_expression .derives_empty: False
binary_or_expression .follow: {'|'}
binary_and_expression  -> ( Choice unary_expression ( Seq binary_and_expression '&' unary_expression ) )
binary_and_expression .reg_info.index: 310
binary_and_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_and_expression .derives_empty: False
binary_and_expression .follow: {'&'}
binary_xor_expression  -> ( Choice unary_expression ( Seq binary_xor_expression '^' unary_expression ) )
binary_xor_expression .reg_info.index: 313
binary_xor_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_xor_expression .derives_empty: False
binary_xor_expression .follow: {'^'}
bitwise_expression  -> ( Choice ( Seq binary_and_expression '&' unary_expression ) ( Seq binary_or_expression '|' unary_expression ) ( Seq binary_xor_expression '^' unary_expression ) )
bitwise_expression .reg_info.index: 314
bitwise_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
bitwise_expression .derives_empty: False
bitwise_expression .follow: {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) ( Seq short_circuit_and_expression '&&' relational_expression ) bitwise_expression )
expression .reg_info.index: 316
expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression .derives_empty: False
expression .follow: {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
compound_statement  -> ( Choice ( Seq compound_statement/0.0 '{' compound_statement/0.2 '}' ) )
compound_statement .reg_info.index: 925
compound_statement .first: {'@' '{'}
compound_statement .derives_empty: False
compound_statement .follow: {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
assignment_statement  -> ( Choice ( Seq lhs_expression assignment_statement/0.1 expression ) ( Seq '_' '=' expression ) )
assignment_statement .reg_info.index: 936
assignment_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement .derives_empty: False
assignment_statement .follow: {')' ';'}
compound_assignment_operator  -> ( Choice '+=' '-=' '*=' '/=' '%=' '&=' '|=' '^=' _shift_right_assign _shift_left_assign )
compound_assignment_operator .reg_info.index: 328
compound_assignment_operator .first: {'%=' '&=' '*=' '+=' '-=' '/=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
compound_assignment_operator .derives_empty: False
compound_assignment_operator .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
increment_statement  -> ( Choice ( Seq lhs_expression '++' ) )
increment_statement .reg_info.index: 456
increment_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement .derives_empty: False
increment_statement .follow: {')' ';'}
decrement_statement  -> ( Choice ( Seq lhs_expression '--' ) )
decrement_statement .reg_info.index: 457
decrement_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
decrement_statement .derives_empty: False
decrement_statement .follow: {')' ';'}
if_statement  -> ( Choice ( Seq if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 ) )
if_statement .reg_info.index: 961
if_statement .first: {'@' 'if'}
if_statement .derives_empty: False
if_statement .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_clause  -> ( Choice ( Seq 'if' expression compound_statement ) )
if_clause .reg_info.index: 459
if_clause .first: {'if'}
if_clause .derives_empty: False
if_clause .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause  -> ( Choice ( Seq 'else' 'if' expression compound_statement ) )
else_if_clause .reg_info.index: 460
else_if_clause .first: {'else'}
else_if_clause .derives_empty: False
else_if_clause .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause  -> ( Choice ( Seq 'else' compound_statement ) )
else_clause .reg_info.index: 461
else_clause .first: {'else'}
else_clause .derives_empty: False
else_clause .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement  -> ( Choice ( Seq switch_statement/0.0 'switch' expression switch_body ) )
switch_statement .reg_info.index: 980
switch_statement .first: {'@' 'switch'}
switch_statement .derives_empty: False
switch_statement .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_body  -> ( Choice ( Seq switch_body/0.0 '{' switch_body/0.2 '}' ) )
switch_body .reg_info.index: 988
switch_body .first: {'@' '{'}
switch_body .derives_empty: False
switch_body .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_clause  -> ( Choice case_clause default_alone_clause )
switch_clause .reg_info.index: 349
switch_clause .first: {'case' 'default'}
switch_clause .derives_empty: False
switch_clause .follow: {'case' 'default' '}'}
case_clause  -> ( Choice ( Seq 'case' case_selectors case_clause/0.2 compound_statement ) )
case_clause .reg_info.index: 998
case_clause .first: {'case'}
case_clause .derives_empty: False
case_clause .follow: {'case' 'default' '}'}
default_alone_clause  -> ( Choice ( Seq 'default' default_alone_clause/0.1 compound_statement ) )
default_alone_clause .reg_info.index: 1004
default_alone_clause .first: {'default'}
default_alone_clause .derives_empty: False
default_alone_clause .follow: {'case' 'default' '}'}
case_selectors  -> ( Choice ( Seq case_selector case_selectors/0.1 case_selectors/0.2 ) )
case_selectors .reg_info.index: 1011
case_selectors .first: {'!' '&' '(' '*' '-' 'default' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selectors .derives_empty: False
case_selectors .follow: {':' '@' '{'}
case_selector  -> ( Choice 'default' expression )
case_selector .reg_info.index: 359
case_selector .first: {'!' '&' '(' '*' '-' 'default' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selector .derives_empty: False
case_selector .follow: {',' ':' '@' '{'}
loop_statement  -> ( Choice ( Seq loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' ) )
loop_statement .reg_info.index: 1024
loop_statement .first: {'@' 'loop'}
loop_statement .derives_empty: False
loop_statement .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement  -> ( Choice ( Seq for_statement/0.0 'for' '(' for_header ')' compound_statement ) )
for_statement .reg_info.index: 1033
for_statement .first: {'@' 'for'}
for_statement .derives_empty: False
for_statement .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header  -> ( Choice ( Seq for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 ) )
for_header .reg_info.index: 1044
for_header .first: {'&' '(' '*' ';' '_' 'const' 'let' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header .derives_empty: False
for_header .follow: {')'}
for_init  -> ( Choice variable_or_value_statement variable_updating_statement func_call_statement )
for_init .reg_info.index: 374
for_init .first: {'&' '(' '*' '_' 'const' 'let' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_init .derives_empty: False
for_init .follow: {';'}
for_update  -> ( Choice variable_updating_statement func_call_statement )
for_update .reg_info.index: 375
for_update .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_update .derives_empty: False
for_update .follow: {')'}
while_statement  -> ( Choice ( Seq while_statement/0.0 'while' expression compound_statement ) )
while_statement .reg_info.index: 1056
while_statement .first: {'@' 'while'}
while_statement .derives_empty: False
while_statement .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
break_statement  -> 'break'
break_statement .reg_info.index: 81
break_statement .first: {'break'}
break_statement .derives_empty: False
break_statement .follow: {}
break_if_statement  -> ( Choice ( Seq 'break' 'if' expression ';' ) )
break_if_statement .reg_info.index: 471
break_if_statement .first: {'break'}
break_if_statement .derives_empty: False
break_if_statement .follow: {'}'}
continue_statement  -> 'continue'
continue_statement .reg_info.index: 82
continue_statement .first: {'continue'}
continue_statement .derives_empty: False
continue_statement .follow: {}
continuing_statement  -> ( Choice ( Seq 'continuing' continuing_compound_statement ) )
continuing_statement .reg_info.index: 472
continuing_statement .first: {'continuing'}
continuing_statement .derives_empty: False
continuing_statement .follow: {'}'}
continuing_compound_statement  -> ( Choice ( Seq continuing_compound_statement/0.0 '{' continuing_compound_statement/0.2 continuing_compound_statement/0.3 '}' ) )
continuing_compound_statement .reg_info.index: 1073
continuing_compound_statement .first: {'@' '{'}
continuing_compound_statement .derives_empty: False
continuing_compound_statement .follow: {'}'}
return_statement  -> ( Choice ( Seq 'return' return_statement/0.1 ) )
return_statement .reg_info.index: 1078
return_statement .first: {'return'}
return_statement .derives_empty: False
return_statement .follow: {';'}
func_call_statement  -> call_phrase
func_call_statement .reg_info.index: 234
func_call_statement .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement .derives_empty: False
func_call_statement .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
const_assert_statement  -> ( Choice ( Seq 'const_assert' expression ) )
const_assert_statement .reg_info.index: 475
const_assert_statement .first: {'const_assert'}
const_assert_statement .derives_empty: False
const_assert_statement .follow: {';'}
statement  -> ( Choice ';' ( Seq return_statement ';' ) if_statement switch_statement loop_statement for_statement while_statement ( Seq func_call_statement ';' ) ( Seq variable_or_value_statement ';' ) ( Seq break_statement ';' ) ( Seq continue_statement ';' ) ( Seq 'discard' ';' ) ( Seq variable_updating_statement ';' ) compound_statement ( Seq const_assert_statement ';' ) )
statement .reg_info.index: 400
statement .first: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement .derives_empty: False
statement .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement  -> ( Choice assignment_statement increment_statement decrement_statement )
variable_updating_statement .reg_info.index: 404
variable_updating_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement .derives_empty: False
variable_updating_statement .follow: {')' ';'}
function_decl  -> ( Choice ( Seq function_decl/0.0 function_header compound_statement ) )
function_decl .reg_info.index: 1121
function_decl .first: {'@' 'fn'}
function_decl .derives_empty: False
function_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header  -> ( Choice ( Seq 'fn' ident '(' function_header/0.3 ')' function_header/0.5 ) )
function_header .reg_info.index: 1132
function_header .first: {'fn'}
function_header .derives_empty: False
function_header .follow: {'@' '{'}
param_list  -> ( Choice ( Seq param param_list/0.1 param_list/0.2 ) )
param_list .reg_info.index: 1139
param_list .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list .derives_empty: False
param_list .follow: {')'}
param  -> ( Choice ( Seq param/0.0 ident ':' type_specifier ) )
param .reg_info.index: 1146
param .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param .derives_empty: False
param .follow: {')' ','}
enable_directive  -> ( Choice ( Seq 'enable' enable_extension_name ';' ) )
enable_directive .reg_info.index: 480
enable_directive .first: {'enable'}
enable_directive .derives_empty: False
enable_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive  -> ( Choice ( Seq 'requires' software_extension_list ';' ) )
requires_directive .reg_info.index: 481
requires_directive .first: {'requires'}
requires_directive .derives_empty: False
requires_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
software_extension_list  -> ( Choice ( Seq software_extension_name software_extension_list/0.1 software_extension_list/0.2 ) )
software_extension_list .reg_info.index: 1161
software_extension_list .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list .derives_empty: False
software_extension_list .follow: {';'}
enable_extension_name  -> ident_pattern_token
enable_extension_name .reg_info.index: 157
enable_extension_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
enable_extension_name .derives_empty: False
enable_extension_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
software_extension_name  -> ident_pattern_token
software_extension_name .reg_info.index: 157
software_extension_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_name .derives_empty: False
software_extension_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
ident_pattern_token  -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
ident_pattern_token .reg_info.index: 91
ident_pattern_token .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident_pattern_token .derives_empty: False
ident_pattern_token .follow: {}
severity_control_name  -> ( Choice 'error' 'warning' 'info' 'off' )
severity_control_name .reg_info.index: 427
severity_control_name .first: {'error' 'info' 'off' 'warning'}
severity_control_name .derives_empty: False
severity_control_name .follow: {','}
swizzle_name  -> ( Choice '/[rgba]/' '/[rgba][rgba]/' '/[rgba][rgba][rgba]/' '/[rgba][rgba][rgba][rgba]/' '/[xyzw]/' '/[xyzw][xyzw]/' '/[xyzw][xyzw][xyzw]/' '/[xyzw][xyzw][xyzw][xyzw]/' )
swizzle_name .reg_info.index: 428
swizzle_name .first: {'/[rgba]/' '/[rgba][rgba]/' '/[rgba][rgba][rgba]/' '/[rgba][rgba][rgba][rgba]/' '/[xyzw]/' '/[xyzw][xyzw]/' '/[xyzw][xyzw][xyzw]/' '/[xyzw][xyzw][xyzw][xyzw]/'}
swizzle_name .derives_empty: False
swizzle_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
_comment  -> /\/\/.*/
_comment .reg_info.index: 104
_comment .first: {/\/\/.*/}
_comment .derives_empty: False
_comment .follow: {}
_blankspace  -> /[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_blankspace .reg_info.index: 105
_blankspace .first: {/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/}
_blankspace .derives_empty: False
_blankspace .follow: {}
_block_comment  -> /\u200B_block_comment/
_block_comment .reg_info.index: 106
_block_comment .first: {/\u200B_block_comment/}
_block_comment .derives_empty: False
_block_comment .follow: {}
_shift_right  -> /\u200B_shift_right/
_shift_right .reg_info.index: 107
_shift_right .first: {/\u200B_shift_right/}
_shift_right .derives_empty: False
_shift_right .follow: {}
_template_args_start  -> /\u200B_template_args_start/
_template_args_start .reg_info.index: 108
_template_args_start .first: {/\u200B_template_args_start/}
_template_args_start .derives_empty: False
_template_args_start .follow: {}
_less_than  -> /\u200B_less_than/
_less_than .reg_info.index: 109
_less_than .first: {/\u200B_less_than/}
_less_than .derives_empty: False
_less_than .follow: {}
_less_than_equal  -> /\u200B_less_than_equal/
_less_than_equal .reg_info.index: 110
_less_than_equal .first: {/\u200B_less_than_equal/}
_less_than_equal .derives_empty: False
_less_than_equal .follow: {}
_greater_than  -> /\u200B_greater_than/
_greater_than .reg_info.index: 111
_greater_than .first: {/\u200B_greater_than/}
_greater_than .derives_empty: False
_greater_than .follow: {}
_shift_right_assign  -> /\u200B_shift_right_assign/
_shift_right_assign .reg_info.index: 112
_shift_right_assign .first: {/\u200B_shift_right_assign/}
_shift_right_assign .derives_empty: False
_shift_right_assign .follow: {}
_disambiguate_template  -> /\u200B_disambiguate_template/
_disambiguate_template .reg_info.index: 113
_disambiguate_template .first: {/\u200B_disambiguate_template/}
_disambiguate_template .derives_empty: False
_disambiguate_template .follow: {}
_error_sentinel  -> /\u200B_error_sentinel/
_error_sentinel .reg_info.index: 114
_error_sentinel .first: {/\u200B_error_sentinel/}
_error_sentinel .derives_empty: False
_error_sentinel .follow: {}
_greater_than_equal  -> /\u200B_greater_than_equal/
_greater_than_equal .reg_info.index: 115
_greater_than_equal .first: {/\u200B_greater_than_equal/}
_greater_than_equal .derives_empty: False
_greater_than_equal .follow: {}
_shift_left_assign  -> /\u200B_shift_left_assign/
_shift_left_assign .reg_info.index: 116
_shift_left_assign .first: {/\u200B_shift_left_assign/}
_shift_left_assign .derives_empty: False
_shift_left_assign .follow: {}
_template_args_end  -> /\u200B_template_args_end/
_template_args_end .reg_info.index: 117
_template_args_end .first: {/\u200B_template_args_end/}
_template_args_end .derives_empty: False
_template_args_end .follow: {}
_shift_left  -> /\u200B_shift_left/
_shift_left .reg_info.index: 118
_shift_left .first: {/\u200B_shift_left/}
_shift_left .derives_empty: False
_shift_left .follow: {}
language  -> ( Choice ( Seq translation_unit EndOfText ) )
language .reg_info.index: 483
language .first: {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
language .derives_empty: False
language .follow: {}
translation_unit/0.0  -> ( Choice translation_unit/0.0/0 ε )
translation_unit/0.0 .reg_info.index: 1240
translation_unit/0.0 .first: {'diagnostic' 'enable' 'requires' ε}
translation_unit/0.0 .derives_empty: True
translation_unit/0.0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1  -> ( Choice translation_unit/0.1/0 ε )
translation_unit/0.1 .reg_info.index: 1244
translation_unit/0.1 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' ε}
translation_unit/0.1 .derives_empty: True
translation_unit/0.1 .follow: {EndOfText}
template_arg_comma_list/0.1  -> ( Choice template_arg_comma_list/0.1/0 ε )
template_arg_comma_list/0.1 .reg_info.index: 1248
template_arg_comma_list/0.1 .first: {',' ε}
template_arg_comma_list/0.1 .derives_empty: True
template_arg_comma_list/0.1 .follow: {',' /\u200B_template_args_end/}
template_arg_comma_list/0.2  -> ( Choice ',' ε )
template_arg_comma_list/0.2 .reg_info.index: 168
template_arg_comma_list/0.2 .first: {',' ε}
template_arg_comma_list/0.2 .derives_empty: True
template_arg_comma_list/0.2 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
attrib_end/0.0  -> ( Choice ',' ε )
attrib_end/0.0 .reg_info.index: 168
attrib_end/0.0 .first: {',' ε}
attrib_end/0.0 .derives_empty: True
attrib_end/0.0 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
struct_body_decl/0.2  -> ( Choice struct_body_decl/0.2/0 ε )
struct_body_decl/0.2 .reg_info.index: 1254
struct_body_decl/0.2 .first: {',' ε}
struct_body_decl/0.2 .derives_empty: True
struct_body_decl/0.2 .follow: {',' '}'}
struct_body_decl/0.3  -> ( Choice ',' ε )
struct_body_decl/0.3 .reg_info.index: 168
struct_body_decl/0.3 .first: {',' ε}
struct_body_decl/0.3 .derives_empty: True
struct_body_decl/0.3 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
struct_member/0.0  -> ( Choice struct_member/0.0/0 ε )
struct_member/0.0 .reg_info.index: 1259
struct_member/0.0 .first: {'@' ε}
struct_member/0.0 .derives_empty: True
struct_member/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident/0.2  -> ( Choice template_list ε )
template_elaborated_ident/0.2 .reg_info.index: 213
template_elaborated_ident/0.2 .first: {/\u200B_template_args_start/ ε}
template_elaborated_ident/0.2 .derives_empty: True
template_elaborated_ident/0.2 .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
variable_decl/0.2  -> ( Choice template_list ε )
variable_decl/0.2 .reg_info.index: 213
variable_decl/0.2 .first: {/\u200B_template_args_start/ ε}
variable_decl/0.2 .derives_empty: True
variable_decl/0.2 .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
optionally_typed_ident/0.1  -> ( Choice ( Seq ':' type_specifier ) ε )
optionally_typed_ident/0.1 .reg_info.index: 223
optionally_typed_ident/0.1 .first: {':' ε}
optionally_typed_ident/0.1 .derives_empty: True
optionally_typed_ident/0.1 .follow: {';' '='}
global_variable_decl/0.0  -> ( Choice global_variable_decl/0.0/0 ε )
global_variable_decl/0.0 .reg_info.index: 1268
global_variable_decl/0.0 .first: {'@' ε}
global_variable_decl/0.0 .derives_empty: True
global_variable_decl/0.0 .follow: {'var'}
global_variable_decl/0.2  -> ( Choice ( Seq '=' expression ) ε )
global_variable_decl/0.2 .reg_info.index: 226
global_variable_decl/0.2 .first: {'=' ε}
global_variable_decl/0.2 .derives_empty: True
global_variable_decl/0.2 .follow: {';'}
global_value_decl/1.0  -> ( Choice global_value_decl/1.0/0 ε )
global_value_decl/1.0 .reg_info.index: 1275
global_value_decl/1.0 .first: {'@' ε}
global_value_decl/1.0 .derives_empty: True
global_value_decl/1.0 .follow: {'override'}
global_value_decl/1.3  -> ( Choice ( Seq '=' expression ) ε )
global_value_decl/1.3 .reg_info.index: 226
global_value_decl/1.3 .first: {'=' ε}
global_value_decl/1.3 .derives_empty: True
global_value_decl/1.3 .follow: {';'}
argument_expression_list/0.1  -> ( Choice expression_comma_list ε )
argument_expression_list/0.1 .reg_info.index: 239
argument_expression_list/0.1 .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ ε}
argument_expression_list/0.1 .derives_empty: True
argument_expression_list/0.1 .follow: {')'}
expression_comma_list/0.1  -> ( Choice expression_comma_list/0.1/0 ε )
expression_comma_list/0.1 .reg_info.index: 1283
expression_comma_list/0.1 .first: {',' ε}
expression_comma_list/0.1 .derives_empty: True
expression_comma_list/0.1 .follow: {')' ','}
expression_comma_list/0.2  -> ( Choice ',' ε )
expression_comma_list/0.2 .reg_info.index: 168
expression_comma_list/0.2 .first: {',' ε}
expression_comma_list/0.2 .derives_empty: True
expression_comma_list/0.2 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
component_or_swizzle_specifier/0.3  -> ( Choice component_or_swizzle_specifier ε )
component_or_swizzle_specifier/0.3 .reg_info.index: 246
component_or_swizzle_specifier/0.3 .first: {'.' '[' ε}
component_or_swizzle_specifier/0.3 .derives_empty: True
component_or_swizzle_specifier/0.3 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2  -> ( Choice component_or_swizzle_specifier ε )
component_or_swizzle_specifier/1.2 .reg_info.index: 246
component_or_swizzle_specifier/1.2 .first: {'.' '[' ε}
component_or_swizzle_specifier/1.2 .derives_empty: True
component_or_swizzle_specifier/1.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2  -> ( Choice component_or_swizzle_specifier ε )
component_or_swizzle_specifier/2.2 .reg_info.index: 246
component_or_swizzle_specifier/2.2 .first: {'.' '[' ε}
component_or_swizzle_specifier/2.2 .derives_empty: True
component_or_swizzle_specifier/2.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
singular_expression/0.1  -> ( Choice component_or_swizzle_specifier ε )
singular_expression/0.1 .reg_info.index: 246
singular_expression/0.1 .first: {'.' '[' ε}
singular_expression/0.1 .derives_empty: True
singular_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
lhs_expression/0.1  -> ( Choice component_or_swizzle_specifier ε )
lhs_expression/0.1 .reg_info.index: 246
lhs_expression/0.1 .first: {'.' '[' ε}
lhs_expression/0.1 .derives_empty: True
lhs_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
compound_statement/0.0  -> ( Choice compound_statement/0.0/0 ε )
compound_statement/0.0 .reg_info.index: 1293
compound_statement/0.0 .first: {'@' ε}
compound_statement/0.0 .derives_empty: True
compound_statement/0.0 .follow: {'{'}
compound_statement/0.2  -> ( Choice compound_statement/0.2/0 ε )
compound_statement/0.2 .reg_info.index: 1297
compound_statement/0.2 .first: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
compound_statement/0.2 .derives_empty: True
compound_statement/0.2 .follow: {'}'}
assignment_statement/0.1  -> ( Choice '=' compound_assignment_operator )
assignment_statement/0.1 .reg_info.index: 322
assignment_statement/0.1 .first: {'%=' '&=' '*=' '+=' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
assignment_statement/0.1 .derives_empty: False
assignment_statement/0.1 .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
if_statement/0.0  -> ( Choice if_statement/0.0/0 ε )
if_statement/0.0 .reg_info.index: 1302
if_statement/0.0 .first: {'@' ε}
if_statement/0.0 .derives_empty: True
if_statement/0.0 .follow: {'if'}
if_statement/0.2  -> ( Choice if_statement/0.2/0 ε )
if_statement/0.2 .reg_info.index: 1306
if_statement/0.2 .first: {'else' ε}
if_statement/0.2 .derives_empty: True
if_statement/0.2 .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.3  -> ( Choice else_clause ε )
if_statement/0.3 .reg_info.index: 336
if_statement/0.3 .first: {'else' ε}
if_statement/0.3 .derives_empty: True
if_statement/0.3 .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0  -> ( Choice switch_statement/0.0/0 ε )
switch_statement/0.0 .reg_info.index: 1311
switch_statement/0.0 .first: {'@' ε}
switch_statement/0.0 .derives_empty: True
switch_statement/0.0 .follow: {'switch'}
switch_body/0.0  -> ( Choice switch_body/0.0/0 ε )
switch_body/0.0 .reg_info.index: 1315
switch_body/0.0 .first: {'@' ε}
switch_body/0.0 .derives_empty: True
switch_body/0.0 .follow: {'{'}
switch_body/0.2  -> ( Choice switch_body/0.2/0 )
switch_body/0.2 .reg_info.index: 1211
switch_body/0.2 .first: {'case' 'default' ε}
switch_body/0.2 .derives_empty: True
switch_body/0.2 .follow: {'}'}
case_clause/0.2  -> ( Choice ':' ε )
case_clause/0.2 .reg_info.index: 351
case_clause/0.2 .first: {':' ε}
case_clause/0.2 .derives_empty: True
case_clause/0.2 .follow: {'@' '{'}
default_alone_clause/0.1  -> ( Choice ':' ε )
default_alone_clause/0.1 .reg_info.index: 351
default_alone_clause/0.1 .first: {':' ε}
default_alone_clause/0.1 .derives_empty: True
default_alone_clause/0.1 .follow: {'@' '{'}
case_selectors/0.1  -> ( Choice case_selectors/0.1/0 ε )
case_selectors/0.1 .reg_info.index: 1321
case_selectors/0.1 .first: {',' ε}
case_selectors/0.1 .derives_empty: True
case_selectors/0.1 .follow: {',' ':' '@' '{'}
case_selectors/0.2  -> ( Choice ',' ε )
case_selectors/0.2 .reg_info.index: 168
case_selectors/0.2 .first: {',' ε}
case_selectors/0.2 .derives_empty: True
case_selectors/0.2 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
loop_statement/0.0  -> ( Choice loop_statement/0.0/0 ε )
loop_statement/0.0 .reg_info.index: 1326
loop_statement/0.0 .first: {'@' ε}
loop_statement/0.0 .derives_empty: True
loop_statement/0.0 .follow: {'loop'}
loop_statement/0.2  -> ( Choice loop_statement/0.2/0 ε )
loop_statement/0.2 .reg_info.index: 1330
loop_statement/0.2 .first: {'@' ε}
loop_statement/0.2 .derives_empty: True
loop_statement/0.2 .follow: {'{'}
loop_statement/0.4  -> ( Choice loop_statement/0.4/0 ε )
loop_statement/0.4 .reg_info.index: 1334
loop_statement/0.4 .first: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
loop_statement/0.4 .derives_empty: True
loop_statement/0.4 .follow: {'continuing' '}'}
loop_statement/0.5  -> ( Choice continuing_statement ε )
loop_statement/0.5 .reg_info.index: 361
loop_statement/0.5 .first: {'continuing' ε}
loop_statement/0.5 .derives_empty: True
loop_statement/0.5 .follow: {'}'}
for_statement/0.0  -> ( Choice for_statement/0.0/0 ε )
for_statement/0.0 .reg_info.index: 1339
for_statement/0.0 .first: {'@' ε}
for_statement/0.0 .derives_empty: True
for_statement/0.0 .follow: {'for'}
for_header/0.0  -> ( Choice for_init ε )
for_header/0.0 .reg_info.index: 366
for_header/0.0 .first: {'&' '(' '*' '_' 'const' 'let' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
for_header/0.0 .derives_empty: True
for_header/0.0 .follow: {';'}
for_header/0.2  -> ( Choice expression ε )
for_header/0.2 .reg_info.index: 367
for_header/0.2 .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ ε}
for_header/0.2 .derives_empty: True
for_header/0.2 .follow: {';'}
for_header/0.4  -> ( Choice for_update ε )
for_header/0.4 .reg_info.index: 369
for_header/0.4 .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
for_header/0.4 .derives_empty: True
for_header/0.4 .follow: {')'}
while_statement/0.0  -> ( Choice while_statement/0.0/0 ε )
while_statement/0.0 .reg_info.index: 1346
while_statement/0.0 .first: {'@' ε}
while_statement/0.0 .derives_empty: True
while_statement/0.0 .follow: {'while'}
continuing_compound_statement/0.0  -> ( Choice continuing_compound_statement/0.0/0 ε )
continuing_compound_statement/0.0 .reg_info.index: 1350
continuing_compound_statement/0.0 .first: {'@' ε}
continuing_compound_statement/0.0 .derives_empty: True
continuing_compound_statement/0.0 .follow: {'{'}
continuing_compound_statement/0.2  -> ( Choice continuing_compound_statement/0.2/0 ε )
continuing_compound_statement/0.2 .reg_info.index: 1354
continuing_compound_statement/0.2 .first: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
continuing_compound_statement/0.2 .derives_empty: True
continuing_compound_statement/0.2 .follow: {'break' '}'}
continuing_compound_statement/0.3  -> ( Choice break_if_statement ε )
continuing_compound_statement/0.3 .reg_info.index: 381
continuing_compound_statement/0.3 .first: {'break' ε}
continuing_compound_statement/0.3 .derives_empty: True
continuing_compound_statement/0.3 .follow: {'}'}
return_statement/0.1  -> ( Choice expression ε )
return_statement/0.1 .reg_info.index: 367
return_statement/0.1 .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ ε}
return_statement/0.1 .derives_empty: True
return_statement/0.1 .follow: {';'}
function_decl/0.0  -> ( Choice function_decl/0.0/0 ε )
function_decl/0.0 .reg_info.index: 1360
function_decl/0.0 .first: {'@' ε}
function_decl/0.0 .derives_empty: True
function_decl/0.0 .follow: {'fn'}
function_header/0.3  -> ( Choice param_list ε )
function_header/0.3 .reg_info.index: 408
function_header/0.3 .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
function_header/0.3 .derives_empty: True
function_header/0.3 .follow: {')'}
function_header/0.5  -> ( Choice ( Seq '->' function_header/0.5/0.1 template_elaborated_ident ) ε )
function_header/0.5 .reg_info.index: 1367
function_header/0.5 .first: {'->' ε}
function_header/0.5 .derives_empty: True
function_header/0.5 .follow: {'@' '{'}
param_list/0.1  -> ( Choice param_list/0.1/0 ε )
param_list/0.1 .reg_info.index: 1371
param_list/0.1 .first: {',' ε}
param_list/0.1 .derives_empty: True
param_list/0.1 .follow: {')' ','}
param_list/0.2  -> ( Choice ',' ε )
param_list/0.2 .reg_info.index: 168
param_list/0.2 .first: {',' ε}
param_list/0.2 .derives_empty: True
param_list/0.2 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
param/0.0  -> ( Choice param/0.0/0 ε )
param/0.0 .reg_info.index: 1376
param/0.0 .first: {'@' ε}
param/0.0 .derives_empty: True
param/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list/0.1  -> ( Choice software_extension_list/0.1/0 ε )
software_extension_list/0.1 .reg_info.index: 1380
software_extension_list/0.1 .first: {',' ε}
software_extension_list/0.1 .derives_empty: True
software_extension_list/0.1 .follow: {',' ';'}
software_extension_list/0.2  -> ( Choice ',' ε )
software_extension_list/0.2 .reg_info.index: 168
software_extension_list/0.2 .first: {',' ε}
software_extension_list/0.2 .derives_empty: True
software_extension_list/0.2 .follow: {')' ':' ';' '@' '{' '}' /\u200B_template_args_end/}
switch_body/0.2/0  -> ( Choice ( Seq switch_clause switch_body/0.2/0 ) ε )
switch_body/0.2/0 .reg_info.index: 1210
switch_body/0.2/0 .first: {'case' 'default' ε}
switch_body/0.2/0 .derives_empty: True
switch_body/0.2/0 .follow: {'}'}
translation_unit/0.0/0  -> ( Choice ( Seq global_directive translation_unit/0.0/0 ) ε )
translation_unit/0.0/0 .reg_info.index: 1238
translation_unit/0.0/0 .first: {'diagnostic' 'enable' 'requires' ε}
translation_unit/0.0/0 .derives_empty: True
translation_unit/0.0/0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0  -> ( Choice ( Seq global_decl translation_unit/0.1/0 ) ε )
translation_unit/0.1/0 .reg_info.index: 1242
translation_unit/0.1/0 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' ε}
translation_unit/0.1/0 .derives_empty: True
translation_unit/0.1/0 .follow: {EndOfText}
template_arg_comma_list/0.1/0  -> ( Choice ( Seq template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 ) ε )
template_arg_comma_list/0.1/0 .reg_info.index: 1400
template_arg_comma_list/0.1/0 .first: {',' ε}
template_arg_comma_list/0.1/0 .derives_empty: True
template_arg_comma_list/0.1/0 .follow: {',' /\u200B_template_args_end/}
struct_body_decl/0.2/0  -> ( Choice ( Seq struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 ) ε )
struct_body_decl/0.2/0 .reg_info.index: 1407
struct_body_decl/0.2/0 .first: {',' ε}
struct_body_decl/0.2/0 .derives_empty: True
struct_body_decl/0.2/0 .follow: {',' '}'}
struct_member/0.0/0  -> ( Choice ( Seq attribute struct_member/0.0/0 ) ε )
struct_member/0.0/0 .reg_info.index: 1257
struct_member/0.0/0 .first: {'@' ε}
struct_member/0.0/0 .derives_empty: True
struct_member/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
global_variable_decl/0.0/0  -> ( Choice ( Seq attribute global_variable_decl/0.0/0 ) ε )
global_variable_decl/0.0/0 .reg_info.index: 1266
global_variable_decl/0.0/0 .first: {'@' ε}
global_variable_decl/0.0/0 .derives_empty: True
global_variable_decl/0.0/0 .follow: {'var'}
global_value_decl/1.0/0  -> ( Choice ( Seq attribute global_value_decl/1.0/0 ) ε )
global_value_decl/1.0/0 .reg_info.index: 1273
global_value_decl/1.0/0 .first: {'@' ε}
global_value_decl/1.0/0 .derives_empty: True
global_value_decl/1.0/0 .follow: {'override'}
expression_comma_list/0.1/0  -> ( Choice ( Seq expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 ) ε )
expression_comma_list/0.1/0 .reg_info.index: 1426
expression_comma_list/0.1/0 .first: {',' ε}
expression_comma_list/0.1/0 .derives_empty: True
expression_comma_list/0.1/0 .follow: {')' ','}
compound_statement/0.0/0  -> ( Choice ( Seq attribute compound_statement/0.0/0 ) ε )
compound_statement/0.0/0 .reg_info.index: 1291
compound_statement/0.0/0 .first: {'@' ε}
compound_statement/0.0/0 .derives_empty: True
compound_statement/0.0/0 .follow: {'{'}
compound_statement/0.2/0  -> ( Choice ( Seq statement compound_statement/0.2/0 ) ε )
compound_statement/0.2/0 .reg_info.index: 1295
compound_statement/0.2/0 .first: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
compound_statement/0.2/0 .derives_empty: True
compound_statement/0.2/0 .follow: {'}'}
if_statement/0.0/0  -> ( Choice ( Seq attribute if_statement/0.0/0 ) ε )
if_statement/0.0/0 .reg_info.index: 1300
if_statement/0.0/0 .first: {'@' ε}
if_statement/0.0/0 .derives_empty: True
if_statement/0.0/0 .follow: {'if'}
if_statement/0.2/0  -> ( Choice ( Seq else_if_clause if_statement/0.2/0 ) ε )
if_statement/0.2/0 .reg_info.index: 1304
if_statement/0.2/0 .first: {'else' ε}
if_statement/0.2/0 .derives_empty: True
if_statement/0.2/0 .follow: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0/0  -> ( Choice ( Seq attribute switch_statement/0.0/0 ) ε )
switch_statement/0.0/0 .reg_info.index: 1309
switch_statement/0.0/0 .first: {'@' ε}
switch_statement/0.0/0 .derives_empty: True
switch_statement/0.0/0 .follow: {'switch'}
switch_body/0.0/0  -> ( Choice ( Seq attribute switch_body/0.0/0 ) ε )
switch_body/0.0/0 .reg_info.index: 1313
switch_body/0.0/0 .first: {'@' ε}
switch_body/0.0/0 .derives_empty: True
switch_body/0.0/0 .follow: {'{'}
case_selectors/0.1/0  -> ( Choice ( Seq case_selectors/0.1/0/0.0 case_selectors/0.1/0 ) ε )
case_selectors/0.1/0 .reg_info.index: 1457
case_selectors/0.1/0 .first: {',' ε}
case_selectors/0.1/0 .derives_empty: True
case_selectors/0.1/0 .follow: {',' ':' '@' '{'}
loop_statement/0.0/0  -> ( Choice ( Seq attribute loop_statement/0.0/0 ) ε )
loop_statement/0.0/0 .reg_info.index: 1324
loop_statement/0.0/0 .first: {'@' ε}
loop_statement/0.0/0 .derives_empty: True
loop_statement/0.0/0 .follow: {'loop'}
loop_statement/0.2/0  -> ( Choice ( Seq attribute loop_statement/0.2/0 ) ε )
loop_statement/0.2/0 .reg_info.index: 1328
loop_statement/0.2/0 .first: {'@' ε}
loop_statement/0.2/0 .derives_empty: True
loop_statement/0.2/0 .follow: {'{'}
loop_statement/0.4/0  -> ( Choice ( Seq statement loop_statement/0.4/0 ) ε )
loop_statement/0.4/0 .reg_info.index: 1332
loop_statement/0.4/0 .first: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
loop_statement/0.4/0 .derives_empty: True
loop_statement/0.4/0 .follow: {'continuing' '}'}
for_statement/0.0/0  -> ( Choice ( Seq attribute for_statement/0.0/0 ) ε )
for_statement/0.0/0 .reg_info.index: 1337
for_statement/0.0/0 .first: {'@' ε}
for_statement/0.0/0 .derives_empty: True
for_statement/0.0/0 .follow: {'for'}
while_statement/0.0/0  -> ( Choice ( Seq attribute while_statement/0.0/0 ) ε )
while_statement/0.0/0 .reg_info.index: 1344
while_statement/0.0/0 .first: {'@' ε}
while_statement/0.0/0 .derives_empty: True
while_statement/0.0/0 .follow: {'while'}
continuing_compound_statement/0.0/0  -> ( Choice ( Seq attribute continuing_compound_statement/0.0/0 ) ε )
continuing_compound_statement/0.0/0 .reg_info.index: 1348
continuing_compound_statement/0.0/0 .first: {'@' ε}
continuing_compound_statement/0.0/0 .derives_empty: True
continuing_compound_statement/0.0/0 .follow: {'{'}
continuing_compound_statement/0.2/0  -> ( Choice ( Seq statement continuing_compound_statement/0.2/0 ) ε )
continuing_compound_statement/0.2/0 .reg_info.index: 1352
continuing_compound_statement/0.2/0 .first: {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
continuing_compound_statement/0.2/0 .derives_empty: True
continuing_compound_statement/0.2/0 .follow: {'break' '}'}
function_decl/0.0/0  -> ( Choice ( Seq attribute function_decl/0.0/0 ) ε )
function_decl/0.0/0 .reg_info.index: 1358
function_decl/0.0/0 .first: {'@' ε}
function_decl/0.0/0 .derives_empty: True
function_decl/0.0/0 .follow: {'fn'}
function_header/0.5/0.1  -> ( Choice function_header/0.5/0.1/0 ε )
function_header/0.5/0.1 .reg_info.index: 1512
function_header/0.5/0.1 .first: {'@' ε}
function_header/0.5/0.1 .derives_empty: True
function_header/0.5/0.1 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list/0.1/0  -> ( Choice ( Seq param_list/0.1/0/0.0 param_list/0.1/0 ) ε )
param_list/0.1/0 .reg_info.index: 1497
param_list/0.1/0 .first: {',' ε}
param_list/0.1/0 .derives_empty: True
param_list/0.1/0 .follow: {')' ','}
param/0.0/0  -> ( Choice ( Seq attribute param/0.0/0 ) ε )
param/0.0/0 .reg_info.index: 1374
param/0.0/0 .first: {'@' ε}
param/0.0/0 .derives_empty: True
param/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list/0.1/0  -> ( Choice ( Seq software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 ) ε )
software_extension_list/0.1/0 .reg_info.index: 1508
software_extension_list/0.1/0 .first: {',' ε}
software_extension_list/0.1/0 .derives_empty: True
software_extension_list/0.1/0 .follow: {',' ';'}
template_arg_comma_list/0.1/0/0.0  -> ( Choice ( Seq ',' template_arg_expression ) )
template_arg_comma_list/0.1/0/0.0 .reg_info.index: 1396
template_arg_comma_list/0.1/0/0.0 .first: {','}
template_arg_comma_list/0.1/0/0.0 .derives_empty: False
template_arg_comma_list/0.1/0/0.0 .follow: {',' /\u200B_template_args_end/}
struct_body_decl/0.2/0/0.0  -> ( Choice ( Seq ',' struct_member ) )
struct_body_decl/0.2/0/0.0 .reg_info.index: 1403
struct_body_decl/0.2/0/0.0 .first: {','}
struct_body_decl/0.2/0/0.0 .derives_empty: False
struct_body_decl/0.2/0/0.0 .follow: {',' '}'}
expression_comma_list/0.1/0/0.0  -> ( Choice ( Seq ',' expression ) )
expression_comma_list/0.1/0/0.0 .reg_info.index: 1422
expression_comma_list/0.1/0/0.0 .first: {','}
expression_comma_list/0.1/0/0.0 .derives_empty: False
expression_comma_list/0.1/0/0.0 .follow: {')' ','}
case_selectors/0.1/0/0.0  -> ( Choice ( Seq ',' case_selector ) )
case_selectors/0.1/0/0.0 .reg_info.index: 1453
case_selectors/0.1/0/0.0 .first: {','}
case_selectors/0.1/0/0.0 .derives_empty: False
case_selectors/0.1/0/0.0 .follow: {',' ':' '@' '{'}
param_list/0.1/0/0.0  -> ( Choice ( Seq ',' param ) )
param_list/0.1/0/0.0 .reg_info.index: 1493
param_list/0.1/0/0.0 .first: {','}
param_list/0.1/0/0.0 .derives_empty: False
param_list/0.1/0/0.0 .follow: {')' ','}
software_extension_list/0.1/0/0.0  -> ( Choice ( Seq ',' software_extension_name ) )
software_extension_list/0.1/0/0.0 .reg_info.index: 1504
software_extension_list/0.1/0/0.0 .first: {','}
software_extension_list/0.1/0/0.0 .derives_empty: False
software_extension_list/0.1/0/0.0 .follow: {',' ';'}
function_header/0.5/0.1/0  -> ( Choice ( Seq attribute function_header/0.5/0.1/0 ) ε )
function_header/0.5/0.1/0 .reg_info.index: 1510
function_header/0.5/0.1/0 .first: {'@' ε}
function_header/0.5/0.1/0 .derives_empty: True
function_header/0.5/0.1/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

=LALR1 item sets:
#0
language -> · translation_unit EndOfText : {EndOfText}
diagnostic_directive -> · 'diagnostic' diagnostic_control ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
enable_directive -> · 'enable' enable_extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · diagnostic_directive : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · enable_directive : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · requires_directive : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive -> · 'requires' software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
translation_unit -> · translation_unit/0.0 translation_unit/0.1 : {EndOfText}
translation_unit/0.0 -> · translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> · global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#1
language -> translation_unit · EndOfText : {EndOfText}

#2
translation_unit -> translation_unit/0.0 · translation_unit/0.1 : {EndOfText}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'must_use' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
const_assert_statement -> · 'const_assert' expression : {';'}
function_decl -> · function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> · function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_decl -> · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_value_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_value_decl -> · 'const' optionally_typed_ident '=' expression : {';'}
global_value_decl -> · global_value_decl/1.0 'override' optionally_typed_ident global_value_decl/1.3 : {';'}
global_value_decl/1.0 -> · global_value_decl/1.0/0 : {'override'}
global_value_decl/1.0/0 -> · attribute global_value_decl/1.0/0 : {'override'}
global_variable_decl -> · global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> · global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}
struct_decl -> · 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1 -> · translation_unit/0.1/0 : {EndOfText}
translation_unit/0.1/0 -> · global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> · 'alias' ident '=' type_specifier : {';'}

#3
translation_unit/0.0 -> translation_unit/0.0/0 · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#4
translation_unit/0.0/0 -> global_directive · translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
diagnostic_directive -> · 'diagnostic' diagnostic_control ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
enable_directive -> · 'enable' enable_extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · diagnostic_directive : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · enable_directive : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · requires_directive : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive -> · 'requires' software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> · global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#5
global_directive -> diagnostic_directive · : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#6
global_directive -> enable_directive · : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#7
global_directive -> requires_directive · : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#8
diagnostic_directive -> 'diagnostic' · diagnostic_control ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
diagnostic_control -> · '(' severity_control_name ',' diagnostic_rule_name attrib_end : {';'}

#9
enable_directive -> 'enable' · enable_extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
enable_extension_name -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {';'}

#10
requires_directive -> 'requires' · software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
software_extension_list -> · software_extension_name software_extension_list/0.1 software_extension_list/0.2 : {';'}
software_extension_name -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' ';'}

#11
requires_directive -> 'requires' software_extension_list · ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#12
software_extension_list -> software_extension_name · software_extension_list/0.1 software_extension_list/0.2 : {';'}
software_extension_list/0.1 -> · software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0 -> · software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0/0.0 -> · ',' software_extension_name : {',' ';'}

#13
software_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {',' ';'}

#14
enable_directive -> 'enable' enable_extension_name · ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#15
enable_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {';'}

#16
diagnostic_directive -> 'diagnostic' diagnostic_control · ';' : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#17
diagnostic_control -> '(' · severity_control_name ',' diagnostic_rule_name attrib_end : {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
severity_control_name -> · 'error' : {','}
severity_control_name -> · 'info' : {','}
severity_control_name -> · 'off' : {','}
severity_control_name -> · 'warning' : {','}

#18
translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#19
translation_unit -> translation_unit/0.0 translation_unit/0.1 · : {EndOfText}

#20
translation_unit/0.1 -> translation_unit/0.1/0 · : {EndOfText}

#21
translation_unit/0.1/0 -> global_decl · translation_unit/0.1/0 : {EndOfText}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'must_use' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
const_assert_statement -> · 'const_assert' expression : {';'}
function_decl -> · function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> · function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_decl -> · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_value_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_value_decl -> · 'const' optionally_typed_ident '=' expression : {';'}
global_value_decl -> · global_value_decl/1.0 'override' optionally_typed_ident global_value_decl/1.3 : {';'}
global_value_decl/1.0 -> · global_value_decl/1.0/0 : {'override'}
global_value_decl/1.0/0 -> · attribute global_value_decl/1.0/0 : {'override'}
global_variable_decl -> · global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> · global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}
struct_decl -> · 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0 -> · global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> · 'alias' ident '=' type_specifier : {';'}

#22
global_decl -> ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#23
global_decl -> global_variable_decl · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#24
global_decl -> global_value_decl · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#25
global_decl -> type_alias_decl · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#26
global_decl -> struct_decl · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#27
global_decl -> function_decl · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#28
global_decl -> const_assert_statement · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#29
global_variable_decl -> global_variable_decl/0.0 · variable_decl global_variable_decl/0.2 : {';'}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}

#30
global_value_decl -> 'const' · optionally_typed_ident '=' expression : {';'}
ident -> · ident_pattern_token _disambiguate_template : {':' '='}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#31
global_value_decl -> global_value_decl/1.0 · 'override' optionally_typed_ident global_value_decl/1.3 : {';'}

#32
type_alias_decl -> 'alias' · ident '=' type_specifier : {';'}
ident -> · ident_pattern_token _disambiguate_template : {'='}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#33
struct_decl -> 'struct' · ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
ident -> · ident_pattern_token _disambiguate_template : {'{'}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#34
function_decl -> function_decl/0.0 · function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header -> · 'fn' ident '(' function_header/0.3 ')' function_header/0.5 : {'@' '{'}

#35
const_assert_statement -> 'const_assert' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#36
global_variable_decl/0.0 -> global_variable_decl/0.0/0 · : {'var'}

#37
global_value_decl/1.0 -> global_value_decl/1.0/0 · : {'override'}

#38
function_decl/0.0 -> function_decl/0.0/0 · : {'fn'}

#39
function_decl/0.0/0 -> attribute · function_decl/0.0/0 : {'fn'}
global_value_decl/1.0/0 -> attribute · global_value_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> attribute · global_variable_decl/0.0/0 : {'var'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'must_use' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_value_decl/1.0/0 -> · attribute global_value_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}

#40
attribute -> '@' · 'align' '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'binding' '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'builtin' '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'compute' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'const' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'diagnostic' diagnostic_control : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'fragment' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'group' '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'id' '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'interpolate' '(' expression ',' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'interpolate' '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'invariant' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'location' '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'must_use' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'size' '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'vertex' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#41
attribute -> '@' 'align' · '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#42
attribute -> '@' 'binding' · '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#43
attribute -> '@' 'builtin' · '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#44
attribute -> '@' 'const' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#45
attribute -> '@' 'diagnostic' · diagnostic_control : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_control -> · '(' severity_control_name ',' diagnostic_rule_name attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#46
attribute -> '@' 'group' · '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#47
attribute -> '@' 'id' · '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#48
attribute -> '@' 'interpolate' · '(' expression ',' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' · '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#49
attribute -> '@' 'invariant' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#50
attribute -> '@' 'location' · '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#51
attribute -> '@' 'must_use' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#52
attribute -> '@' 'size' · '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#53
attribute -> '@' 'workgroup_size' · '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' · '(' expression ',' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' · '(' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#54
attribute -> '@' 'vertex' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#55
attribute -> '@' 'fragment' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#56
attribute -> '@' 'compute' · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#57
global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 · : {'var'}

#58
global_value_decl/1.0/0 -> attribute global_value_decl/1.0/0 · : {'override'}

#59
function_decl/0.0/0 -> attribute function_decl/0.0/0 · : {'fn'}

#60
const_assert_statement -> 'const_assert' expression · : {';'}

#61
expression -> relational_expression · : {')' ',' ':' ';' '@' ']' '{'}
short_circuit_and_expression -> relational_expression · : {'&&'}
short_circuit_or_expression -> relational_expression · : {'||'}

#62
expression -> short_circuit_or_expression · '||' relational_expression : {')' ',' ':' ';' '@' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression · '||' relational_expression : {'||'}

#63
expression -> short_circuit_and_expression · '&&' relational_expression : {')' ',' ':' ';' '@' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression · '&&' relational_expression : {'&&'}

#64
expression -> bitwise_expression · : {')' ',' ':' ';' '@' ']' '{'}

#65
relational_expression -> shift_expression · '!=' shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression · '==' shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression · : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression · _greater_than shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression · _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression · _less_than shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression · _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
_greater_than -> · /\u200B_greater_than/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_greater_than_equal -> · /\u200B_greater_than_equal/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than -> · /\u200B_less_than/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than_equal -> · /\u200B_less_than_equal/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#66
binary_and_expression -> binary_and_expression · '&' unary_expression : {'&'}
bitwise_expression -> binary_and_expression · '&' unary_expression : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}

#67
binary_or_expression -> binary_or_expression · '|' unary_expression : {'|'}
bitwise_expression -> binary_or_expression · '|' unary_expression : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}

#68
binary_xor_expression -> binary_xor_expression · '^' unary_expression : {'^'}
bitwise_expression -> binary_xor_expression · '^' unary_expression : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}

#69
additive_expression -> additive_expression · additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> additive_expression · : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_operator -> · '+' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_operator -> · '-' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#70
binary_and_expression -> unary_expression · : {'&'}
binary_or_expression -> unary_expression · : {'|'}
binary_xor_expression -> unary_expression · : {'^'}
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression · _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression · _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
_shift_left -> · /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> · /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#71
additive_expression -> multiplicative_expression · : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression · multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> · '%' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '*' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '/' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#72
unary_expression -> singular_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#73
unary_expression -> '-' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#74
unary_expression -> '!' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#75
unary_expression -> '~' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#76
unary_expression -> '*' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#77
unary_expression -> '&' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#78
singular_expression -> primary_expression · singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression/0.1 -> · component_or_swizzle_specifier : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#79
call_expression -> template_elaborated_ident · argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> template_elaborated_ident · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list -> · '(' argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#80
primary_expression -> call_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#81
primary_expression -> literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#82
primary_expression -> paren_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#83
template_elaborated_ident -> ident · _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/ /\u200B_template_args_start/}

#84
literal -> int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#85
literal -> float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#86
literal -> bool_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#87
paren_expression -> '(' · expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')'}
expression -> · relational_expression : {')'}
expression -> · short_circuit_and_expression '&&' relational_expression : {')'}
expression -> · short_circuit_or_expression '||' relational_expression : {')'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#88
ident -> ident_pattern_token · _disambiguate_template : {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}

#89
int_literal -> decimal_int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#90
int_literal -> hex_int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#91
float_literal -> decimal_float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#92
float_literal -> hex_float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#93
bool_literal -> 'true' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#94
bool_literal -> 'false' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#95
ident_pattern_token -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {/\u200B_disambiguate_template/}

#96
decimal_int_literal -> /0[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#97
decimal_int_literal -> /[1-9][0-9]*[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#98
hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#99
decimal_float_literal -> /0[fh]/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#100
decimal_float_literal -> /[1-9][0-9]*[fh]/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#101
decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#102
decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#103
decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#104
hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#105
hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#106
hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#107
function_decl -> function_decl/0.0 function_header · compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'compute' : {'@' '{'}
attribute -> · '@' 'const' : {'@' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
attribute -> · '@' 'fragment' : {'@' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'invariant' : {'@' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'must_use' : {'@' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'vertex' : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}

#108
function_header -> 'fn' · ident '(' function_header/0.3 ')' function_header/0.5 : {'@' '{'}
ident -> · ident_pattern_token _disambiguate_template : {'('}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#109
struct_decl -> 'struct' ident · struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl -> · '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#110
type_alias_decl -> 'alias' ident · '=' type_specifier : {';'}

#111
global_value_decl -> global_value_decl/1.0 'override' · optionally_typed_ident global_value_decl/1.3 : {';'}
ident -> · ident_pattern_token _disambiguate_template : {':' ';' '='}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {';' '='}

#112
global_value_decl -> 'const' optionally_typed_ident · '=' expression : {';'}

#113
optionally_typed_ident -> ident · optionally_typed_ident/0.1 : {';' '='}
optionally_typed_ident/0.1 -> · ':' type_specifier : {';' '='}

#114
global_variable_decl -> global_variable_decl/0.0 variable_decl · global_variable_decl/0.2 : {';'}
global_variable_decl/0.2 -> · '=' expression : {';'}

#115
variable_decl -> 'var' · _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_template_args_start/}

#116
global_decl -> const_assert_statement ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#117
global_decl -> type_alias_decl ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#118
global_decl -> global_value_decl ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#119
global_decl -> global_variable_decl ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#120
translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 · : {EndOfText}

#121
diagnostic_control -> '(' severity_control_name · ',' diagnostic_rule_name attrib_end : {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#122
severity_control_name -> 'error' · : {','}

#123
severity_control_name -> 'warning' · : {','}

#124
severity_control_name -> 'info' · : {','}

#125
severity_control_name -> 'off' · : {','}

#126
diagnostic_directive -> 'diagnostic' diagnostic_control ';' · : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#127
enable_directive -> 'enable' enable_extension_name ';' · : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#128
software_extension_list -> software_extension_name software_extension_list/0.1 · software_extension_list/0.2 : {';'}
software_extension_list/0.2 -> · ',' : {';'}

#129
software_extension_list/0.1 -> software_extension_list/0.1/0 · : {',' ';'}

#130
software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 · software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0 -> · software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0/0.0 -> · ',' software_extension_name : {',' ';'}

#131
software_extension_list/0.1/0/0.0 -> ',' · software_extension_name : {',' ';'}
software_extension_name -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' ';'}

#132
requires_directive -> 'requires' software_extension_list ';' · : {';' '@' 'alias' 'const' 'const_assert' 'diagnostic' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#133
software_extension_list/0.1/0/0.0 -> ',' software_extension_name · : {',' ';'}

#134
software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 · : {',' ';'}

#135
software_extension_list -> software_extension_name software_extension_list/0.1 software_extension_list/0.2 · : {';'}

#136
software_extension_list/0.2 -> ',' · : {';'}

#137
diagnostic_control -> '(' severity_control_name ',' · diagnostic_rule_name attrib_end : {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
diagnostic_rule_name -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' ','}

#138
variable_decl -> 'var' _disambiguate_template · variable_decl/0.2 optionally_typed_ident : {';' '='}
_template_args_start -> · /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_list -> · _template_args_start template_arg_comma_list _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_decl/0.2 -> · template_list : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#139
_disambiguate_template -> /\u200B_disambiguate_template/ · : {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_disambiguate_template/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/ /\u200B_template_args_start/}

#140
global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 · : {';'}

#141
global_variable_decl/0.2 -> '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#142
optionally_typed_ident -> ident optionally_typed_ident/0.1 · : {';' '='}

#143
optionally_typed_ident/0.1 -> ':' · type_specifier : {';' '='}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> · ident _disambiguate_template template_elaborated_ident/0.2 : {';' '='}

#144
global_value_decl -> 'const' optionally_typed_ident '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#145
global_value_decl -> global_value_decl/1.0 'override' optionally_typed_ident · global_value_decl/1.3 : {';'}
global_value_decl/1.3 -> · '=' expression : {';'}

#146
type_alias_decl -> 'alias' ident '=' · type_specifier : {';'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> · ident _disambiguate_template template_elaborated_ident/0.2 : {';'}

#147
struct_decl -> 'struct' ident struct_body_decl · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#148
struct_body_decl -> '{' · struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> · struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> · struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#149
function_header -> 'fn' ident · '(' function_header/0.3 ')' function_header/0.5 : {'@' '{'}

#150
function_decl -> function_decl/0.0 function_header compound_statement · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#151
compound_statement -> compound_statement/0.0 · '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#152
compound_statement/0.0 -> compound_statement/0.0/0 · : {'{'}

#153
compound_statement/0.0/0 -> attribute · compound_statement/0.0/0 : {'{'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'compute' : {'@' '{'}
attribute -> · '@' 'const' : {'@' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
attribute -> · '@' 'fragment' : {'@' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'invariant' : {'@' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'must_use' : {'@' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'vertex' : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' '{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}

#154
ident -> ident_pattern_token _disambiguate_template · : {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}

#155
paren_expression -> '(' expression · ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#156
template_elaborated_ident -> ident _disambiguate_template · template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_elaborated_ident/0.2 -> · template_list : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_list -> · _template_args_start template_arg_comma_list _template_args_end : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#157
call_expression -> template_elaborated_ident argument_expression_list · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#158
argument_expression_list -> '(' · argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
argument_expression_list/0.1 -> · expression_comma_list : {')'}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
expression_comma_list -> · expression expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#159
singular_expression -> primary_expression singular_expression/0.1 · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#160
singular_expression/0.1 -> component_or_swizzle_specifier · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#161
component_or_swizzle_specifier -> '[' · expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {']'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {']'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {']'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {']'}
expression -> · relational_expression : {']'}
expression -> · short_circuit_and_expression '&&' relational_expression : {']'}
expression -> · short_circuit_or_expression '||' relational_expression : {']'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ']' '||'}
shift_expression -> · additive_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#162
component_or_swizzle_specifier -> '.' · member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> '.' · swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
member_ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba][rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw][xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#163
unary_expression -> '&' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#164
unary_expression -> '*' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#165
unary_expression -> '~' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#166
unary_expression -> '!' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#167
unary_expression -> '-' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#168
multiplicative_expression -> multiplicative_expression multiplicative_operator · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#169
multiplicative_operator -> '*' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#170
multiplicative_operator -> '/' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#171
multiplicative_operator -> '%' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#172
shift_expression -> unary_expression _shift_left · unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#173
shift_expression -> unary_expression _shift_right · unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#174
_shift_left -> /\u200B_shift_left/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#175
_shift_right -> /\u200B_shift_right/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#176
additive_expression -> additive_expression additive_operator · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#177
additive_operator -> '+' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#178
additive_operator -> '-' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#179
binary_xor_expression -> binary_xor_expression '^' · unary_expression : {'^'}
bitwise_expression -> binary_xor_expression '^' · unary_expression : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
bool_literal -> · 'false' : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
bool_literal -> · 'true' : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> · bool_literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> · float_literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> · int_literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · call_expression : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · literal : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {')' ',' ':' ';' '@' ']' '^' '{' /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'(' ')' ',' '.' ':' ';' '@' '[' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {')' ',' ':' ';' '@' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {')' ',' ':' ';' '@' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {')' ',' ':' ';' '@' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {')' ',' ':' ';' '@' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {')' ',' ':' ';' '@' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {')' ',' ':' ';' '@' ']' '^' '{' /\u200B_template_args_end/}

#180
binary_or_expression -> binary_or_expression '|' · unary_expression : {'|'}
bitwise_expression -> binary_or_expression '|' · unary_expression : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
bool_literal -> · 'false' : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
bool_literal -> · 'true' : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> · bool_literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> · float_literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> · int_literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · call_expression : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · literal : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {')' ',' ':' ';' '@' ']' '{' '|' /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'(' ')' ',' '.' ':' ';' '@' '[' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {')' ',' ':' ';' '@' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {')' ',' ':' ';' '@' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {')' ',' ':' ';' '@' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {')' ',' ':' ';' '@' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {')' ',' ':' ';' '@' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {')' ',' ':' ';' '@' ']' '{' '|' /\u200B_template_args_end/}

#181
binary_and_expression -> binary_and_expression '&' · unary_expression : {'&'}
bitwise_expression -> binary_and_expression '&' · unary_expression : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
bool_literal -> · 'true' : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
literal -> · bool_literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
literal -> · float_literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
literal -> · int_literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · call_expression : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · literal : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'&' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'&' ')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'&' '(' ')' ',' '.' ':' ';' '@' '[' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'&' ')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'&' ')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'&' ')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'&' ')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'&' ')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'&' ')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}

#182
relational_expression -> shift_expression _less_than · shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#183
relational_expression -> shift_expression _greater_than · shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#184
relational_expression -> shift_expression _less_than_equal · shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#185
relational_expression -> shift_expression _greater_than_equal · shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#186
relational_expression -> shift_expression '==' · shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#187
relational_expression -> shift_expression '!=' · shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '@' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '@' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#188
_less_than -> /\u200B_less_than/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#189
_greater_than -> /\u200B_greater_than/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#190
_less_than_equal -> /\u200B_less_than_equal/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#191
_greater_than_equal -> /\u200B_greater_than_equal/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#192
expression -> short_circuit_and_expression '&&' · relational_expression : {')' ',' ':' ';' '@' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' · relational_expression : {'&&'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{'}
relational_expression -> · shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' '@' ']' '{'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#193
expression -> short_circuit_or_expression '||' · relational_expression : {')' ',' ':' ';' '@' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' · relational_expression : {'||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> · 'false' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · decimal_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {')' ',' ':' ';' '@' ']' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {')' ',' ':' ';' '@' ']' '{' '||'}
relational_expression -> · shift_expression : {')' ',' ':' ';' '@' ']' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {')' ',' ':' ';' '@' ']' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {')' ',' ':' ';' '@' ']' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {')' ',' ':' ';' '@' ']' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {')' ',' ':' ';' '@' ']' '{' '||'}
shift_expression -> · additive_expression : {'!=' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#194
attribute -> '@' 'workgroup_size' '(' · expression ',' expression ',' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' · expression ',' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' · expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#195
attribute -> '@' 'size' '(' · expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#196
attribute -> '@' 'location' '(' · expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#197
attribute -> '@' 'interpolate' '(' · expression ',' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' '(' · expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#198
attribute -> '@' 'id' '(' · expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#199
attribute -> '@' 'group' '(' · expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#200
attribute -> '@' 'diagnostic' diagnostic_control · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#201
attribute -> '@' 'builtin' '(' · expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#202
attribute -> '@' 'binding' '(' · expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#203
attribute -> '@' 'align' '(' · expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#204
attribute -> '@' 'align' '(' expression · attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#205
attribute -> '@' 'binding' '(' expression · attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#206
attribute -> '@' 'builtin' '(' expression · attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#207
attribute -> '@' 'group' '(' expression · attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#208
attribute -> '@' 'id' '(' expression · attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#209
attribute -> '@' 'interpolate' '(' expression · ',' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' '(' expression · attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#210
attribute -> '@' 'location' '(' expression · attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#211
attribute -> '@' 'size' '(' expression · attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#212
attribute -> '@' 'workgroup_size' '(' expression · ',' expression ',' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression · ',' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression · attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#213
expression -> short_circuit_or_expression '||' relational_expression · : {')' ',' ':' ';' '@' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression · : {'||'}

#214
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression · _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression · _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
_shift_left -> · /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> · /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#215
expression -> short_circuit_and_expression '&&' relational_expression · : {')' ',' ':' ';' '@' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression · : {'&&'}

#216
relational_expression -> shift_expression '!=' shift_expression · : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}

#217
relational_expression -> shift_expression '==' shift_expression · : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}

#218
relational_expression -> shift_expression _greater_than_equal shift_expression · : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}

#219
relational_expression -> shift_expression _less_than_equal shift_expression · : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}

#220
relational_expression -> shift_expression _greater_than shift_expression · : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}

#221
relational_expression -> shift_expression _less_than shift_expression · : {'&&' ')' ',' ':' ';' '@' ']' '{' '||' /\u200B_template_args_end/}

#222
binary_and_expression -> binary_and_expression '&' unary_expression · : {'&'}
bitwise_expression -> binary_and_expression '&' unary_expression · : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}

#223
binary_or_expression -> binary_or_expression '|' unary_expression · : {'|'}
bitwise_expression -> binary_or_expression '|' unary_expression · : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}

#224
binary_xor_expression -> binary_xor_expression '^' unary_expression · : {'^'}
bitwise_expression -> binary_xor_expression '^' unary_expression · : {')' ',' ':' ';' '@' ']' '{' /\u200B_template_args_end/}

#225
additive_expression -> additive_expression additive_operator multiplicative_expression · : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression · multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> · '%' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '*' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '/' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#226
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#227
shift_expression -> unary_expression _shift_right unary_expression · : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#228
shift_expression -> unary_expression _shift_left unary_expression · : {'!=' '&&' ')' ',' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#229
multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' '@' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#230
component_or_swizzle_specifier -> '.' member_ident · component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#231
component_or_swizzle_specifier -> '.' swizzle_name · component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#232
member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#233
swizzle_name -> '/[rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#234
swizzle_name -> '/[rgba][rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#235
swizzle_name -> '/[rgba][rgba][rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#236
swizzle_name -> '/[rgba][rgba][rgba][rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#237
swizzle_name -> '/[xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#238
swizzle_name -> '/[xyzw][xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#239
swizzle_name -> '/[xyzw][xyzw][xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#240
swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '@' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#241
component_or_swizzle_specifier -> '[' expression · ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#242
argument_expression_list -> '(' argument_expression_list/0.1 · ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#243
argument_expression_list/0.1 -> expression_comma_list · : {')'}

#244
expression_comma_list -> expression · expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
expression_comma_list/0.1 -> · expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> · expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> · ',' expression : {')' ','}

#245
template_elaborated_ident -> ident _disambiguate_template template_elaborated_ident/0.2 · : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#246
template_elaborated_ident/0.2 -> template_list · : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#247
template_list -> _template_args_start · template_arg_comma_list _template_args_end : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> · binary_or_expression '|' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {',' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_arg_comma_list -> · template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 : {/\u200B_template_args_end/}
template_arg_expression -> · bitwise_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> · relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> · short_circuit_and_expression '&&' relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> · short_circuit_or_expression '||' relational_expression : {',' /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#248
_template_args_start -> /\u200B_template_args_start/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#249
paren_expression -> '(' expression ')' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#250
compound_statement/0.0/0 -> attribute compound_statement/0.0/0 · : {'{'}

#251
compound_statement -> compound_statement/0.0 '{' · compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'compute' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'const' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'fragment' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'invariant' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'must_use' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'vertex' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
break_statement -> · 'break' : {';'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compound_statement/0.2 -> · compound_statement/0.2/0 : {'}'}
compound_statement/0.2/0 -> · statement compound_statement/0.2/0 : {'}'}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
for_statement -> · for_statement/0.0 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement/0.0 -> · for_statement/0.0/0 : {'for'}
for_statement/0.0/0 -> · attribute for_statement/0.0/0 : {'for'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {';'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_statement -> · if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.0 -> · if_statement/0.0/0 : {'if'}
if_statement/0.0/0 -> · attribute if_statement/0.0/0 : {'if'}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.0 -> · loop_statement/0.0/0 : {'loop'}
loop_statement/0.0/0 -> · attribute loop_statement/0.0/0 : {'loop'}
return_statement -> · 'return' return_statement/0.1 : {';'}
statement -> · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_or_value_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> · switch_statement/0.0 'switch' expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0 -> · switch_statement/0.0/0 : {'switch'}
switch_statement/0.0/0 -> · attribute switch_statement/0.0/0 : {'switch'}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_or_value_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · variable_decl '=' expression : {';'}
variable_or_value_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
while_statement -> · while_statement/0.0 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
while_statement/0.0 -> · while_statement/0.0/0 : {'while'}
while_statement/0.0/0 -> · attribute while_statement/0.0/0 : {'while'}

#252
function_header -> 'fn' ident '(' · function_header/0.3 ')' function_header/0.5 : {'@' '{'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.3 -> · param_list : {')'}
param -> · param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> · param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> · attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list -> · param param_list/0.1 param_list/0.2 : {')'}

#253
struct_body_decl -> '{' struct_member · struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.2 -> · struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> · struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> · ',' struct_member : {',' '}'}

#254
struct_member -> struct_member/0.0 · member_ident ':' type_specifier : {',' '}'}
member_ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':'}

#255
struct_member/0.0 -> struct_member/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#256
struct_member/0.0/0 -> attribute · struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#257
type_alias_decl -> 'alias' ident '=' type_specifier · : {';'}

#258
type_specifier -> ident · _disambiguate_template template_elaborated_ident/0.2 : {')' ',' ';' '=' '}'}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {')' ',' ';' '=' '}' /\u200B_template_args_start/}

#259
global_value_decl -> global_value_decl/1.0 'override' optionally_typed_ident global_value_decl/1.3 · : {';'}

#260
global_value_decl/1.3 -> '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#261
global_value_decl -> 'const' optionally_typed_ident '=' expression · : {';'}

#262
optionally_typed_ident/0.1 -> ':' type_specifier · : {';' '='}

#263
global_variable_decl/0.2 -> '=' expression · : {';'}

#264
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 · optionally_typed_ident : {';' '='}
ident -> · ident_pattern_token _disambiguate_template : {':' ';' '='}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {';' '='}

#265
variable_decl/0.2 -> template_list · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#266
diagnostic_control -> '(' severity_control_name ',' diagnostic_rule_name · attrib_end : {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#267
diagnostic_rule_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {')' ','}

#268
diagnostic_control -> '(' severity_control_name ',' diagnostic_rule_name attrib_end · : {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#269
attrib_end -> attrib_end/0.0 · ')' : {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#270
attrib_end/0.0 -> ',' · : {')'}

#271
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident · : {';' '='}

#272
global_value_decl/1.3 -> '=' expression · : {';'}

#273
type_specifier -> ident _disambiguate_template · template_elaborated_ident/0.2 : {')' ',' ';' '=' '}'}
_template_args_start -> · /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_elaborated_ident/0.2 -> · template_list : {')' ',' ';' '=' '}'}
template_list -> · _template_args_start template_arg_comma_list _template_args_end : {')' ',' ';' '=' '}'}

#274
struct_member/0.0/0 -> attribute struct_member/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#275
struct_member -> struct_member/0.0 member_ident · ':' type_specifier : {',' '}'}

#276
struct_body_decl -> '{' struct_member struct_body_decl/0.2 · struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.3 -> · ',' : {'}'}

#277
struct_body_decl/0.2 -> struct_body_decl/0.2/0 · : {',' '}'}

#278
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 · struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> · struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> · ',' struct_member : {',' '}'}

#279
struct_body_decl/0.2/0/0.0 -> ',' · struct_member : {',' '}'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> · struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> · struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#280
function_header -> 'fn' ident '(' function_header/0.3 · ')' function_header/0.5 : {'@' '{'}

#281
function_header/0.3 -> param_list · : {')'}

#282
param_list -> param · param_list/0.1 param_list/0.2 : {')'}
param_list/0.1 -> · param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> · param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> · ',' param : {')' ','}

#283
param -> param/0.0 · ident ':' type_specifier : {')' ','}
ident -> · ident_pattern_token _disambiguate_template : {':'}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#284
param/0.0 -> param/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#285
param/0.0/0 -> attribute · param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> · attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#286
compound_statement -> compound_statement/0.0 '{' compound_statement/0.2 · '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#287
compound_statement/0.2 -> compound_statement/0.2/0 · : {'}'}

#288
compound_statement/0.2/0 -> statement · compound_statement/0.2/0 : {'}'}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'compute' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'const' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'fragment' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'invariant' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'must_use' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'vertex' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
break_statement -> · 'break' : {';'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
compound_statement/0.2/0 -> · statement compound_statement/0.2/0 : {'}'}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
for_statement -> · for_statement/0.0 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement/0.0 -> · for_statement/0.0/0 : {'for'}
for_statement/0.0/0 -> · attribute for_statement/0.0/0 : {'for'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {';'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_statement -> · if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.0 -> · if_statement/0.0/0 : {'if'}
if_statement/0.0/0 -> · attribute if_statement/0.0/0 : {'if'}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.0 -> · loop_statement/0.0/0 : {'loop'}
loop_statement/0.0/0 -> · attribute loop_statement/0.0/0 : {'loop'}
return_statement -> · 'return' return_statement/0.1 : {';'}
statement -> · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_or_value_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> · switch_statement/0.0 'switch' expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0 -> · switch_statement/0.0/0 : {'switch'}
switch_statement/0.0/0 -> · attribute switch_statement/0.0/0 : {'switch'}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_or_value_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · variable_decl '=' expression : {';'}
variable_or_value_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
while_statement -> · while_statement/0.0 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
while_statement/0.0 -> · while_statement/0.0/0 : {'while'}
while_statement/0.0/0 -> · attribute while_statement/0.0/0 : {'while'}

#289
statement -> ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#290
statement -> return_statement · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#291
statement -> if_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#292
statement -> switch_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#293
statement -> loop_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#294
statement -> for_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#295
statement -> while_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#296
statement -> func_call_statement · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#297
statement -> variable_or_value_statement · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#298
statement -> break_statement · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#299
statement -> continue_statement · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#300
statement -> 'discard' · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#301
statement -> variable_updating_statement · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#302
statement -> compound_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#303
statement -> const_assert_statement · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#304
return_statement -> 'return' · return_statement/0.1 : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
return_statement/0.1 -> · expression : {';'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#305
if_statement -> if_statement/0.0 · if_clause if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#306
switch_statement -> switch_statement/0.0 · 'switch' expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#307
loop_statement -> loop_statement/0.0 · 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#308
for_statement -> for_statement/0.0 · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#309
while_statement -> while_statement/0.0 · 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#310
func_call_statement -> template_elaborated_ident · argument_expression_list : {')' ';'}
argument_expression_list -> · '(' argument_expression_list/0.1 ')' : {')' ';'}

#311
variable_or_value_statement -> variable_decl · '=' expression : {';'}
variable_or_value_statement -> variable_decl · : {';'}

#312
variable_or_value_statement -> 'let' · optionally_typed_ident '=' expression : {';'}
ident -> · ident_pattern_token _disambiguate_template : {':' '='}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#313
variable_or_value_statement -> 'const' · optionally_typed_ident '=' expression : {';'}
ident -> · ident_pattern_token _disambiguate_template : {':' '='}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#314
break_statement -> 'break' · : {';'}

#315
continue_statement -> 'continue' · : {';'}

#316
variable_updating_statement -> assignment_statement · : {')' ';'}

#317
variable_updating_statement -> increment_statement · : {')' ';'}

#318
variable_updating_statement -> decrement_statement · : {')' ';'}

#319
if_statement/0.0 -> if_statement/0.0/0 · : {'if'}

#320
switch_statement/0.0 -> switch_statement/0.0/0 · : {'switch'}

#321
loop_statement/0.0 -> loop_statement/0.0/0 · : {'loop'}

#322
for_statement/0.0 -> for_statement/0.0/0 · : {'for'}

#323
while_statement/0.0 -> while_statement/0.0/0 · : {'while'}

#324
core_lhs_expression -> ident · _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> ident · _disambiguate_template template_elaborated_ident/0.2 : {'('}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/ /\u200B_template_args_start/}

#325
assignment_statement -> lhs_expression · assignment_statement/0.1 expression : {')' ';'}
decrement_statement -> lhs_expression · '--' : {')' ';'}
increment_statement -> lhs_expression · '++' : {')' ';'}
_shift_left_assign -> · /\u200B_shift_left_assign/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right_assign -> · /\u200B_shift_right_assign/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> · '=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> · compound_assignment_operator : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '%=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '&=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '*=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '+=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '-=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '/=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '^=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '|=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · _shift_left_assign : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · _shift_right_assign : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#326
assignment_statement -> '_' · '=' expression : {')' ';'}

#327
compound_statement/0.0/0 -> attribute · compound_statement/0.0/0 : {'{'}
for_statement/0.0/0 -> attribute · for_statement/0.0/0 : {'for'}
if_statement/0.0/0 -> attribute · if_statement/0.0/0 : {'if'}
loop_statement/0.0/0 -> attribute · loop_statement/0.0/0 : {'loop'}
switch_statement/0.0/0 -> attribute · switch_statement/0.0/0 : {'switch'}
while_statement/0.0/0 -> attribute · while_statement/0.0/0 : {'while'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'compute' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'const' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'fragment' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'invariant' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'must_use' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'vertex' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
for_statement/0.0/0 -> · attribute for_statement/0.0/0 : {'for'}
if_statement/0.0/0 -> · attribute if_statement/0.0/0 : {'if'}
loop_statement/0.0/0 -> · attribute loop_statement/0.0/0 : {'loop'}
switch_statement/0.0/0 -> · attribute switch_statement/0.0/0 : {'switch'}
while_statement/0.0/0 -> · attribute while_statement/0.0/0 : {'while'}

#328
lhs_expression -> core_lhs_expression · lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression/0.1 -> · component_or_swizzle_specifier : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#329
lhs_expression -> '*' · lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#330
lhs_expression -> '&' · lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#331
core_lhs_expression -> '(' · lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · '(' lhs_expression ')' : {')' '.' '['}
core_lhs_expression -> · ident _disambiguate_template : {')' '.' '['}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
lhs_expression -> · '&' lhs_expression : {')'}
lhs_expression -> · '*' lhs_expression : {')'}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {')'}

#332
template_list -> _template_args_start template_arg_comma_list · _template_args_end : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#333
template_arg_comma_list -> template_arg_expression · template_arg_comma_list/0.1 template_arg_comma_list/0.2 : {/\u200B_template_args_end/}
template_arg_comma_list/0.1 -> · template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0 -> · template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0/0.0 -> · ',' template_arg_expression : {',' /\u200B_template_args_end/}

#334
short_circuit_and_expression -> relational_expression · : {'&&'}
short_circuit_or_expression -> relational_expression · : {'||'}
template_arg_expression -> relational_expression · : {',' /\u200B_template_args_end/}

#335
short_circuit_or_expression -> short_circuit_or_expression · '||' relational_expression : {'||'}
template_arg_expression -> short_circuit_or_expression · '||' relational_expression : {',' /\u200B_template_args_end/}

#336
short_circuit_and_expression -> short_circuit_and_expression · '&&' relational_expression : {'&&'}
template_arg_expression -> short_circuit_and_expression · '&&' relational_expression : {',' /\u200B_template_args_end/}

#337
template_arg_expression -> bitwise_expression · : {',' /\u200B_template_args_end/}

#338
expression_comma_list -> expression expression_comma_list/0.1 · expression_comma_list/0.2 : {')'}
expression_comma_list/0.2 -> · ',' : {')'}

#339
expression_comma_list/0.1 -> expression_comma_list/0.1/0 · : {')' ','}

#340
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 · expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> · expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> · ',' expression : {')' ','}

#341
expression_comma_list/0.1/0/0.0 -> ',' · expression : {')' ','}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#342
argument_expression_list -> '(' argument_expression_list/0.1 ')' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '@' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#343
component_or_swizzle_specifier -> '[' expression ']' · component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/0.3 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#344
component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#345
component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#346
component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#347
component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#348
attribute -> '@' 'workgroup_size' '(' expression attrib_end · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#349
attrib_end/0.0 -> ',' · : {')'}
attribute -> '@' 'workgroup_size' '(' expression ',' · expression ',' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression ',' · expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#350
attribute -> '@' 'size' '(' expression attrib_end · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#351
attribute -> '@' 'location' '(' expression attrib_end · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#352
attribute -> '@' 'interpolate' '(' expression attrib_end · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#353
attrib_end/0.0 -> ',' · : {')'}
attribute -> '@' 'interpolate' '(' expression ',' · expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#354
attribute -> '@' 'id' '(' expression attrib_end · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#355
attribute -> '@' 'group' '(' expression attrib_end · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#356
attribute -> '@' 'builtin' '(' expression attrib_end · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#357
attribute -> '@' 'binding' '(' expression attrib_end · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#358
attribute -> '@' 'align' '(' expression attrib_end · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#359
attribute -> '@' 'interpolate' '(' expression ',' expression · attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#360
attribute -> '@' 'workgroup_size' '(' expression ',' expression · ',' expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression ',' expression · attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#361
component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#362
component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' '@' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#363
expression_comma_list/0.1/0/0.0 -> ',' expression · : {')' ','}

#364
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 · : {')' ','}

#365
expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 · : {')'}

#366
expression_comma_list/0.2 -> ',' · : {')'}

#367
short_circuit_and_expression -> short_circuit_and_expression '&&' · relational_expression : {'&&'}
template_arg_expression -> short_circuit_and_expression '&&' · relational_expression : {',' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> · shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'!=' '&&' ',' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#368
short_circuit_or_expression -> short_circuit_or_expression '||' · relational_expression : {'||'}
template_arg_expression -> short_circuit_or_expression '||' · relational_expression : {',' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'!=' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> · shift_expression '!=' shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression '==' shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than_equal shift_expression : {',' '||' /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'!=' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '(' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#369
template_arg_comma_list -> template_arg_expression template_arg_comma_list/0.1 · template_arg_comma_list/0.2 : {/\u200B_template_args_end/}
template_arg_comma_list/0.2 -> · ',' : {/\u200B_template_args_end/}

#370
template_arg_comma_list/0.1 -> template_arg_comma_list/0.1/0 · : {',' /\u200B_template_args_end/}

#371
template_arg_comma_list/0.1/0 -> template_arg_comma_list/0.1/0/0.0 · template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0 -> · template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0/0.0 -> · ',' template_arg_expression : {',' /\u200B_template_args_end/}

#372
template_arg_comma_list/0.1/0/0.0 -> ',' · template_arg_expression : {',' /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> · binary_or_expression '|' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {',' /\u200B_template_args_end/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
shift_expression -> · additive_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_arg_expression -> · bitwise_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> · relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> · short_circuit_and_expression '&&' relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> · short_circuit_or_expression '||' relational_expression : {',' /\u200B_template_args_end/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#373
template_list -> _template_args_start template_arg_comma_list _template_args_end · : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#374
_template_args_end -> /\u200B_template_args_end/ · : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '@' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#375
core_lhs_expression -> '(' lhs_expression · ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#376
core_lhs_expression -> ident · _disambiguate_template : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#377
lhs_expression -> '&' lhs_expression · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#378
lhs_expression -> '*' lhs_expression · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#379
lhs_expression -> core_lhs_expression lhs_expression/0.1 · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#380
lhs_expression/0.1 -> component_or_swizzle_specifier · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#381
if_statement/0.0/0 -> attribute if_statement/0.0/0 · : {'if'}

#382
switch_statement/0.0/0 -> attribute switch_statement/0.0/0 · : {'switch'}

#383
loop_statement/0.0/0 -> attribute loop_statement/0.0/0 · : {'loop'}

#384
for_statement/0.0/0 -> attribute for_statement/0.0/0 · : {'for'}

#385
while_statement/0.0/0 -> attribute while_statement/0.0/0 · : {'while'}

#386
assignment_statement -> '_' '=' · expression : {')' ';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ';'}
expression -> · relational_expression : {')' ';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#387
assignment_statement -> lhs_expression assignment_statement/0.1 · expression : {')' ';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ';'}
expression -> · relational_expression : {')' ';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#388
increment_statement -> lhs_expression '++' · : {')' ';'}

#389
decrement_statement -> lhs_expression '--' · : {')' ';'}

#390
assignment_statement/0.1 -> '=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#391
assignment_statement/0.1 -> compound_assignment_operator · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#392
compound_assignment_operator -> '+=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#393
compound_assignment_operator -> '-=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#394
compound_assignment_operator -> '*=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#395
compound_assignment_operator -> '/=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#396
compound_assignment_operator -> '%=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#397
compound_assignment_operator -> '&=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#398
compound_assignment_operator -> '|=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#399
compound_assignment_operator -> '^=' · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#400
compound_assignment_operator -> _shift_right_assign · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#401
compound_assignment_operator -> _shift_left_assign · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#402
_shift_right_assign -> /\u200B_shift_right_assign/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#403
_shift_left_assign -> /\u200B_shift_left_assign/ · : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#404
core_lhs_expression -> ident _disambiguate_template · : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> ident _disambiguate_template · template_elaborated_ident/0.2 : {'('}
_template_args_start -> · /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_elaborated_ident/0.2 -> · template_list : {'('}
template_list -> · _template_args_start template_arg_comma_list _template_args_end : {'('}

#405
variable_or_value_statement -> 'const' optionally_typed_ident · '=' expression : {';'}

#406
variable_or_value_statement -> 'let' optionally_typed_ident · '=' expression : {';'}

#407
variable_or_value_statement -> variable_decl '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#408
func_call_statement -> template_elaborated_ident argument_expression_list · : {')' ';'}

#409
while_statement -> while_statement/0.0 'while' · expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'@' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'@' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'@' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {'@' '{'}
expression -> · relational_expression : {'@' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'@' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'@' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '@' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#410
for_statement -> for_statement/0.0 'for' · '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#411
loop_statement -> loop_statement/0.0 'loop' · loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'compute' : {'@' '{'}
attribute -> · '@' 'const' : {'@' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
attribute -> · '@' 'fragment' : {'@' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'invariant' : {'@' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'must_use' : {'@' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'vertex' : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' '{'}
loop_statement/0.2 -> · loop_statement/0.2/0 : {'{'}
loop_statement/0.2/0 -> · attribute loop_statement/0.2/0 : {'{'}

#412
switch_statement -> switch_statement/0.0 'switch' · expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'@' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'@' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'@' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {'@' '{'}
expression -> · relational_expression : {'@' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'@' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'@' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '@' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#413
if_statement -> if_statement/0.0 if_clause · if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> · 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2 -> · if_statement/0.2/0 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2/0 -> · else_if_clause if_statement/0.2/0 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#414
if_clause -> 'if' · expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'@' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'@' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'@' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {'@' '{'}
expression -> · relational_expression : {'@' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'@' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'@' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '@' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#415
return_statement -> 'return' return_statement/0.1 · : {';'}

#416
return_statement/0.1 -> expression · : {';'}

#417
statement -> const_assert_statement ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#418
statement -> variable_updating_statement ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#419
statement -> 'discard' ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#420
statement -> continue_statement ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#421
statement -> break_statement ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#422
statement -> variable_or_value_statement ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#423
statement -> func_call_statement ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#424
statement -> return_statement ';' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#425
compound_statement/0.2/0 -> statement compound_statement/0.2/0 · : {'}'}

#426
compound_statement -> compound_statement/0.0 '{' compound_statement/0.2 '}' · : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#427
param/0.0/0 -> attribute param/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#428
param -> param/0.0 ident · ':' type_specifier : {')' ','}

#429
param_list -> param param_list/0.1 · param_list/0.2 : {')'}
param_list/0.2 -> · ',' : {')'}

#430
param_list/0.1 -> param_list/0.1/0 · : {')' ','}

#431
param_list/0.1/0 -> param_list/0.1/0/0.0 · param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> · param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> · ',' param : {')' ','}

#432
param_list/0.1/0/0.0 -> ',' · param : {')' ','}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param -> · param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> · param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> · attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#433
function_header -> 'fn' ident '(' function_header/0.3 ')' · function_header/0.5 : {'@' '{'}
function_header/0.5 -> · '->' function_header/0.5/0.1 template_elaborated_ident : {'@' '{'}

#434
struct_body_decl/0.2/0/0.0 -> ',' struct_member · : {',' '}'}

#435
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 · : {',' '}'}

#436
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 · '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#437
struct_body_decl/0.3 -> ',' · : {'}'}

#438
struct_member -> struct_member/0.0 member_ident ':' · type_specifier : {',' '}'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> · ident _disambiguate_template template_elaborated_ident/0.2 : {',' '}'}

#439
type_specifier -> ident _disambiguate_template template_elaborated_ident/0.2 · : {')' ',' ';' '=' '}'}

#440
attrib_end -> attrib_end/0.0 ')' · : {';' '@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#441
struct_member -> struct_member/0.0 member_ident ':' type_specifier · : {',' '}'}

#442
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#443
function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 · : {'@' '{'}

#444
function_header/0.5 -> '->' · function_header/0.5/0.1 template_elaborated_ident : {'@' '{'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1 -> · function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> · attribute function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#445
param_list/0.1/0/0.0 -> ',' param · : {')' ','}

#446
param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 · : {')' ','}

#447
param_list -> param param_list/0.1 param_list/0.2 · : {')'}

#448
param_list/0.2 -> ',' · : {')'}

#449
param -> param/0.0 ident ':' · type_specifier : {')' ','}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> · ident _disambiguate_template template_elaborated_ident/0.2 : {')' ','}

#450
if_clause -> 'if' expression · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'compute' : {'@' '{'}
attribute -> · '@' 'const' : {'@' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
attribute -> · '@' 'fragment' : {'@' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'invariant' : {'@' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'must_use' : {'@' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'vertex' : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}

#451
if_statement -> if_statement/0.0 if_clause if_statement/0.2 · if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause -> · 'else' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.3 -> · else_clause : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#452
if_statement/0.2 -> if_statement/0.2/0 · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#453
if_statement/0.2/0 -> else_if_clause · if_statement/0.2/0 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> · 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2/0 -> · else_if_clause if_statement/0.2/0 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#454
else_if_clause -> 'else' · 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#455
switch_statement -> switch_statement/0.0 'switch' expression · switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'compute' : {'@' '{'}
attribute -> · '@' 'const' : {'@' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
attribute -> · '@' 'fragment' : {'@' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'invariant' : {'@' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'must_use' : {'@' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'vertex' : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' '{'}
switch_body -> · switch_body/0.0 '{' switch_body/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_body/0.0 -> · switch_body/0.0/0 : {'{'}
switch_body/0.0/0 -> · attribute switch_body/0.0/0 : {'{'}

#456
loop_statement -> loop_statement/0.0 'loop' loop_statement/0.2 · '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#457
loop_statement/0.2 -> loop_statement/0.2/0 · : {'{'}

#458
loop_statement/0.2/0 -> attribute · loop_statement/0.2/0 : {'{'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'compute' : {'@' '{'}
attribute -> · '@' 'const' : {'@' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
attribute -> · '@' 'fragment' : {'@' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'invariant' : {'@' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'must_use' : {'@' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'vertex' : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' '{'}
loop_statement/0.2/0 -> · attribute loop_statement/0.2/0 : {'{'}

#459
for_statement -> for_statement/0.0 'for' '(' · for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
for_header -> · for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 : {')'}
for_header/0.0 -> · for_init : {';'}
for_init -> · func_call_statement : {';'}
for_init -> · variable_or_value_statement : {';'}
for_init -> · variable_updating_statement : {';'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {';'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_or_value_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · variable_decl '=' expression : {';'}
variable_or_value_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}

#460
while_statement -> while_statement/0.0 'while' expression · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'compute' : {'@' '{'}
attribute -> · '@' 'const' : {'@' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
attribute -> · '@' 'fragment' : {'@' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'invariant' : {'@' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'must_use' : {'@' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'vertex' : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}

#461
variable_or_value_statement -> variable_decl '=' expression · : {';'}

#462
variable_or_value_statement -> 'let' optionally_typed_ident '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#463
variable_or_value_statement -> 'const' optionally_typed_ident '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#464
assignment_statement -> lhs_expression assignment_statement/0.1 expression · : {')' ';'}

#465
assignment_statement -> '_' '=' expression · : {')' ';'}

#466
core_lhs_expression -> ident _disambiguate_template · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#467
core_lhs_expression -> '(' lhs_expression ')' · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#468
template_arg_comma_list/0.1/0/0.0 -> ',' template_arg_expression · : {',' /\u200B_template_args_end/}

#469
template_arg_comma_list/0.1/0 -> template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 · : {',' /\u200B_template_args_end/}

#470
template_arg_comma_list -> template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 · : {/\u200B_template_args_end/}

#471
template_arg_comma_list/0.2 -> ',' · : {/\u200B_template_args_end/}

#472
short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression · : {'||'}
template_arg_expression -> short_circuit_or_expression '||' relational_expression · : {',' /\u200B_template_args_end/}

#473
short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression · : {'&&'}
template_arg_expression -> short_circuit_and_expression '&&' relational_expression · : {',' /\u200B_template_args_end/}

#474
attribute -> '@' 'workgroup_size' '(' expression ',' expression attrib_end · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#475
attrib_end/0.0 -> ',' · : {')'}
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' · expression attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#476
attribute -> '@' 'interpolate' '(' expression ',' expression attrib_end · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#477
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression · attrib_end : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#478
variable_or_value_statement -> 'const' optionally_typed_ident '=' expression · : {';'}

#479
variable_or_value_statement -> 'let' optionally_typed_ident '=' expression · : {';'}

#480
while_statement -> while_statement/0.0 'while' expression compound_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#481
for_statement -> for_statement/0.0 'for' '(' for_header · ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#482
for_header -> for_header/0.0 · ';' for_header/0.2 ';' for_header/0.4 : {')'}

#483
for_header/0.0 -> for_init · : {';'}

#484
for_init -> variable_or_value_statement · : {';'}

#485
for_init -> variable_updating_statement · : {';'}

#486
for_init -> func_call_statement · : {';'}

#487
loop_statement/0.2/0 -> attribute loop_statement/0.2/0 · : {'{'}

#488
loop_statement -> loop_statement/0.0 'loop' loop_statement/0.2 '{' · loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'compute' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'const' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'fragment' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'invariant' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'must_use' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'vertex' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
break_statement -> · 'break' : {';'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
for_statement -> · for_statement/0.0 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement/0.0 -> · for_statement/0.0/0 : {'for'}
for_statement/0.0/0 -> · attribute for_statement/0.0/0 : {'for'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {';'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_statement -> · if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.0 -> · if_statement/0.0/0 : {'if'}
if_statement/0.0/0 -> · attribute if_statement/0.0/0 : {'if'}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.0 -> · loop_statement/0.0/0 : {'loop'}
loop_statement/0.0/0 -> · attribute loop_statement/0.0/0 : {'loop'}
loop_statement/0.4 -> · loop_statement/0.4/0 : {'continuing' '}'}
loop_statement/0.4/0 -> · statement loop_statement/0.4/0 : {'continuing' '}'}
return_statement -> · 'return' return_statement/0.1 : {';'}
statement -> · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_or_value_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> · switch_statement/0.0 'switch' expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0 -> · switch_statement/0.0/0 : {'switch'}
switch_statement/0.0/0 -> · attribute switch_statement/0.0/0 : {'switch'}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_or_value_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · variable_decl '=' expression : {';'}
variable_or_value_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
while_statement -> · while_statement/0.0 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
while_statement/0.0 -> · while_statement/0.0/0 : {'while'}
while_statement/0.0/0 -> · attribute while_statement/0.0/0 : {'while'}

#489
switch_statement -> switch_statement/0.0 'switch' expression switch_body · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#490
switch_body -> switch_body/0.0 · '{' switch_body/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#491
switch_body/0.0 -> switch_body/0.0/0 · : {'{'}

#492
switch_body/0.0/0 -> attribute · switch_body/0.0/0 : {'{'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'compute' : {'@' '{'}
attribute -> · '@' 'const' : {'@' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
attribute -> · '@' 'fragment' : {'@' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'invariant' : {'@' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'must_use' : {'@' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'vertex' : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' '{'}
switch_body/0.0/0 -> · attribute switch_body/0.0/0 : {'{'}

#493
else_if_clause -> 'else' 'if' · expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'@' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'@' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'@' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {'@' '{'}
expression -> · relational_expression : {'@' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'@' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'@' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '@' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '@' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#494
if_statement/0.2/0 -> else_if_clause if_statement/0.2/0 · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#495
if_statement -> if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#496
if_statement/0.3 -> else_clause · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#497
else_clause -> 'else' · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'compute' : {'@' '{'}
attribute -> · '@' 'const' : {'@' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
attribute -> · '@' 'fragment' : {'@' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'invariant' : {'@' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'must_use' : {'@' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'vertex' : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}

#498
if_clause -> 'if' expression compound_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#499
param -> param/0.0 ident ':' type_specifier · : {')' ','}

#500
function_header/0.5 -> '->' function_header/0.5/0.1 · template_elaborated_ident : {'@' '{'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'@' '{'}

#501
function_header/0.5/0.1 -> function_header/0.5/0.1/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#502
function_header/0.5/0.1/0 -> attribute · function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> · attribute function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#503
function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#504
function_header/0.5 -> '->' function_header/0.5/0.1 template_elaborated_ident · : {'@' '{'}

#505
else_clause -> 'else' compound_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#506
else_if_clause -> 'else' 'if' expression · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'compute' : {'@' '{'}
attribute -> · '@' 'const' : {'@' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
attribute -> · '@' 'fragment' : {'@' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'invariant' : {'@' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'must_use' : {'@' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'vertex' : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}

#507
switch_body/0.0/0 -> attribute switch_body/0.0/0 · : {'{'}

#508
switch_body -> switch_body/0.0 '{' · switch_body/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
case_clause -> · 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> · 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body/0.2 -> · switch_body/0.2/0 : {'}'}
switch_body/0.2/0 -> · switch_clause switch_body/0.2/0 : {'}'}
switch_clause -> · case_clause : {'case' 'default' '}'}
switch_clause -> · default_alone_clause : {'case' 'default' '}'}

#509
loop_statement -> loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 · loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
continuing_statement -> · 'continuing' continuing_compound_statement : {'}'}
loop_statement/0.5 -> · continuing_statement : {'}'}

#510
loop_statement/0.4 -> loop_statement/0.4/0 · : {'continuing' '}'}

#511
loop_statement/0.4/0 -> statement · loop_statement/0.4/0 : {'continuing' '}'}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'compute' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'const' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'fragment' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'invariant' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'must_use' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'vertex' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
break_statement -> · 'break' : {';'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
for_statement -> · for_statement/0.0 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement/0.0 -> · for_statement/0.0/0 : {'for'}
for_statement/0.0/0 -> · attribute for_statement/0.0/0 : {'for'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {';'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_statement -> · if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.0 -> · if_statement/0.0/0 : {'if'}
if_statement/0.0/0 -> · attribute if_statement/0.0/0 : {'if'}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.0 -> · loop_statement/0.0/0 : {'loop'}
loop_statement/0.0/0 -> · attribute loop_statement/0.0/0 : {'loop'}
loop_statement/0.4/0 -> · statement loop_statement/0.4/0 : {'continuing' '}'}
return_statement -> · 'return' return_statement/0.1 : {';'}
statement -> · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_or_value_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> · switch_statement/0.0 'switch' expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0 -> · switch_statement/0.0/0 : {'switch'}
switch_statement/0.0/0 -> · attribute switch_statement/0.0/0 : {'switch'}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_or_value_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · variable_decl '=' expression : {';'}
variable_or_value_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
while_statement -> · while_statement/0.0 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
while_statement/0.0 -> · while_statement/0.0/0 : {'while'}
while_statement/0.0/0 -> · attribute while_statement/0.0/0 : {'while'}

#512
for_header -> for_header/0.0 ';' · for_header/0.2 ';' for_header/0.4 : {')'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
for_header/0.2 -> · expression : {';'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#513
for_statement -> for_statement/0.0 'for' '(' for_header ')' · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'compute' : {'@' '{'}
attribute -> · '@' 'const' : {'@' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
attribute -> · '@' 'fragment' : {'@' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'invariant' : {'@' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'must_use' : {'@' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'vertex' : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}

#514
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end · : {'@' 'fn' 'for' 'if' 'loop' 'override' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#515
for_statement -> for_statement/0.0 'for' '(' for_header ')' compound_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#516
for_header -> for_header/0.0 ';' for_header/0.2 · ';' for_header/0.4 : {')'}

#517
for_header/0.2 -> expression · : {';'}

#518
loop_statement/0.4/0 -> statement loop_statement/0.4/0 · : {'continuing' '}'}

#519
loop_statement -> loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 · '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#520
loop_statement/0.5 -> continuing_statement · : {'}'}

#521
continuing_statement -> 'continuing' · continuing_compound_statement : {'}'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'compute' : {'@' '{'}
attribute -> · '@' 'const' : {'@' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
attribute -> · '@' 'fragment' : {'@' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'invariant' : {'@' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'must_use' : {'@' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'vertex' : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' '{'}
continuing_compound_statement -> · continuing_compound_statement/0.0 '{' continuing_compound_statement/0.2 continuing_compound_statement/0.3 '}' : {'}'}
continuing_compound_statement/0.0 -> · continuing_compound_statement/0.0/0 : {'{'}
continuing_compound_statement/0.0/0 -> · attribute continuing_compound_statement/0.0/0 : {'{'}

#522
switch_body -> switch_body/0.0 '{' switch_body/0.2 · '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#523
switch_body/0.2 -> switch_body/0.2/0 · : {'}'}

#524
switch_body/0.2/0 -> switch_clause · switch_body/0.2/0 : {'}'}
case_clause -> · 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> · 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body/0.2/0 -> · switch_clause switch_body/0.2/0 : {'}'}
switch_clause -> · case_clause : {'case' 'default' '}'}
switch_clause -> · default_alone_clause : {'case' 'default' '}'}

#525
switch_clause -> case_clause · : {'case' 'default' '}'}

#526
switch_clause -> default_alone_clause · : {'case' 'default' '}'}

#527
case_clause -> 'case' · case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {',' ':' '@' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {',' ':' '@' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {',' ':' '@' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
case_selector -> · 'default' : {',' ':' '@' '{'}
case_selector -> · expression : {',' ':' '@' '{'}
case_selectors -> · case_selector case_selectors/0.1 case_selectors/0.2 : {':' '@' '{'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {',' ':' '@' '{'}
expression -> · relational_expression : {',' ':' '@' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {',' ':' '@' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {',' ':' '@' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '@' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ',' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#528
default_alone_clause -> 'default' · default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
default_alone_clause/0.1 -> · ':' : {'@' '{'}

#529
else_if_clause -> 'else' 'if' expression compound_statement · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#530
default_alone_clause -> 'default' default_alone_clause/0.1 · compound_statement : {'case' 'default' '}'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'compute' : {'@' '{'}
attribute -> · '@' 'const' : {'@' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
attribute -> · '@' 'fragment' : {'@' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'invariant' : {'@' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'must_use' : {'@' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'vertex' : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'case' 'default' '}'}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}

#531
default_alone_clause/0.1 -> ':' · : {'@' '{'}

#532
case_clause -> 'case' case_selectors · case_clause/0.2 compound_statement : {'case' 'default' '}'}
case_clause/0.2 -> · ':' : {'@' '{'}

#533
case_selectors -> case_selector · case_selectors/0.1 case_selectors/0.2 : {':' '@' '{'}
case_selectors/0.1 -> · case_selectors/0.1/0 : {',' ':' '@' '{'}
case_selectors/0.1/0 -> · case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '@' '{'}
case_selectors/0.1/0/0.0 -> · ',' case_selector : {',' ':' '@' '{'}

#534
case_selector -> 'default' · : {',' ':' '@' '{'}

#535
case_selector -> expression · : {',' ':' '@' '{'}

#536
switch_body/0.2/0 -> switch_clause switch_body/0.2/0 · : {'}'}

#537
switch_body -> switch_body/0.0 '{' switch_body/0.2 '}' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#538
continuing_statement -> 'continuing' continuing_compound_statement · : {'}'}

#539
continuing_compound_statement -> continuing_compound_statement/0.0 · '{' continuing_compound_statement/0.2 continuing_compound_statement/0.3 '}' : {'}'}

#540
continuing_compound_statement/0.0 -> continuing_compound_statement/0.0/0 · : {'{'}

#541
continuing_compound_statement/0.0/0 -> attribute · continuing_compound_statement/0.0/0 : {'{'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'compute' : {'@' '{'}
attribute -> · '@' 'const' : {'@' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
attribute -> · '@' 'fragment' : {'@' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'invariant' : {'@' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'must_use' : {'@' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'vertex' : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' '{'}
continuing_compound_statement/0.0/0 -> · attribute continuing_compound_statement/0.0/0 : {'{'}

#542
loop_statement -> loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' · : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#543
for_header -> for_header/0.0 ';' for_header/0.2 ';' · for_header/0.4 : {')'}
assignment_statement -> · '_' '=' expression : {')'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {')'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {')'}
for_header/0.4 -> · for_update : {')'}
for_update -> · func_call_statement : {')'}
for_update -> · variable_updating_statement : {')'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {')'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
increment_statement -> · lhs_expression '++' : {')'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_updating_statement -> · assignment_statement : {')'}
variable_updating_statement -> · decrement_statement : {')'}
variable_updating_statement -> · increment_statement : {')'}

#544
for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 · : {')'}

#545
for_header/0.4 -> for_update · : {')'}

#546
for_update -> variable_updating_statement · : {')'}

#547
for_update -> func_call_statement · : {')'}

#548
continuing_compound_statement/0.0/0 -> attribute continuing_compound_statement/0.0/0 · : {'{'}

#549
continuing_compound_statement -> continuing_compound_statement/0.0 '{' · continuing_compound_statement/0.2 continuing_compound_statement/0.3 '}' : {'}'}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'compute' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'const' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'fragment' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'invariant' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'must_use' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'vertex' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
break_statement -> · 'break' : {';'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
continuing_compound_statement/0.2 -> · continuing_compound_statement/0.2/0 : {'break' '}'}
continuing_compound_statement/0.2/0 -> · statement continuing_compound_statement/0.2/0 : {'break' '}'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
for_statement -> · for_statement/0.0 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement/0.0 -> · for_statement/0.0/0 : {'for'}
for_statement/0.0/0 -> · attribute for_statement/0.0/0 : {'for'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {';'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_statement -> · if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.0 -> · if_statement/0.0/0 : {'if'}
if_statement/0.0/0 -> · attribute if_statement/0.0/0 : {'if'}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.0 -> · loop_statement/0.0/0 : {'loop'}
loop_statement/0.0/0 -> · attribute loop_statement/0.0/0 : {'loop'}
return_statement -> · 'return' return_statement/0.1 : {';'}
statement -> · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_or_value_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> · switch_statement/0.0 'switch' expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0 -> · switch_statement/0.0/0 : {'switch'}
switch_statement/0.0/0 -> · attribute switch_statement/0.0/0 : {'switch'}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_or_value_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · variable_decl '=' expression : {';'}
variable_or_value_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
while_statement -> · while_statement/0.0 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
while_statement/0.0 -> · while_statement/0.0/0 : {'while'}
while_statement/0.0/0 -> · attribute while_statement/0.0/0 : {'while'}

#550
case_selectors -> case_selector case_selectors/0.1 · case_selectors/0.2 : {':' '@' '{'}
case_selectors/0.2 -> · ',' : {':' '@' '{'}

#551
case_selectors/0.1 -> case_selectors/0.1/0 · : {',' ':' '@' '{'}

#552
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 · case_selectors/0.1/0 : {',' ':' '@' '{'}
case_selectors/0.1/0 -> · case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '@' '{'}
case_selectors/0.1/0/0.0 -> · ',' case_selector : {',' ':' '@' '{'}

#553
case_selectors/0.1/0/0.0 -> ',' · case_selector : {',' ':' '@' '{'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {',' ':' '@' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {',' ':' '@' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {',' ':' '@' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
case_selector -> · 'default' : {',' ':' '@' '{'}
case_selector -> · expression : {',' ':' '@' '{'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {',' ':' '@' '{'}
expression -> · relational_expression : {',' ':' '@' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {',' ':' '@' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {',' ':' '@' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' ':' '@' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '@' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ',' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '@' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '@' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '@' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#554
case_clause -> 'case' case_selectors case_clause/0.2 · compound_statement : {'case' 'default' '}'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'compute' : {'@' '{'}
attribute -> · '@' 'const' : {'@' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' '{'}
attribute -> · '@' 'fragment' : {'@' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'invariant' : {'@' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'must_use' : {'@' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' '{'}
attribute -> · '@' 'vertex' : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' '{'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'case' 'default' '}'}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}

#555
case_clause/0.2 -> ':' · : {'@' '{'}

#556
default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement · : {'case' 'default' '}'}

#557
case_clause -> 'case' case_selectors case_clause/0.2 compound_statement · : {'case' 'default' '}'}

#558
case_selectors/0.1/0/0.0 -> ',' case_selector · : {',' ':' '@' '{'}

#559
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 · : {',' ':' '@' '{'}

#560
case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 · : {':' '@' '{'}

#561
case_selectors/0.2 -> ',' · : {':' '@' '{'}

#562
continuing_compound_statement -> continuing_compound_statement/0.0 '{' continuing_compound_statement/0.2 · continuing_compound_statement/0.3 '}' : {'}'}
break_if_statement -> · 'break' 'if' expression ';' : {'}'}
continuing_compound_statement/0.3 -> · break_if_statement : {'}'}

#563
continuing_compound_statement/0.2 -> continuing_compound_statement/0.2/0 · : {'break' '}'}

#564
continuing_compound_statement/0.2/0 -> statement · continuing_compound_statement/0.2/0 : {'break' '}'}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'builtin' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'compute' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'const' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'diagnostic' diagnostic_control : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'fragment' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'interpolate' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'invariant' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'must_use' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'vertex' : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'for' 'if' 'loop' 'switch' 'while' '{'}
break_statement -> · 'break' : {';'}
compound_statement -> · compound_statement/0.0 '{' compound_statement/0.2 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.0 -> · compound_statement/0.0/0 : {'{'}
compound_statement/0.0/0 -> · attribute compound_statement/0.0/0 : {'{'}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
continuing_compound_statement/0.2/0 -> · statement continuing_compound_statement/0.2/0 : {'break' '}'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
for_statement -> · for_statement/0.0 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement/0.0 -> · for_statement/0.0/0 : {'for'}
for_statement/0.0/0 -> · attribute for_statement/0.0/0 : {'for'}
func_call_statement -> · template_elaborated_ident argument_expression_list : {';'}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_statement -> · if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.0 -> · if_statement/0.0/0 : {'if'}
if_statement/0.0/0 -> · attribute if_statement/0.0/0 : {'if'}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.0 -> · loop_statement/0.0/0 : {'loop'}
loop_statement/0.0/0 -> · attribute loop_statement/0.0/0 : {'loop'}
return_statement -> · 'return' return_statement/0.1 : {';'}
statement -> · ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_or_value_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> · switch_statement/0.0 'switch' expression switch_body : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.0 -> · switch_statement/0.0/0 : {'switch'}
switch_statement/0.0/0 -> · attribute switch_statement/0.0/0 : {'switch'}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_or_value_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_or_value_statement -> · variable_decl '=' expression : {';'}
variable_or_value_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
while_statement -> · while_statement/0.0 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
while_statement/0.0 -> · while_statement/0.0/0 : {'while'}
while_statement/0.0/0 -> · attribute while_statement/0.0/0 : {'while'}

#565
continuing_compound_statement/0.2/0 -> statement continuing_compound_statement/0.2/0 · : {'break' '}'}

#566
continuing_compound_statement -> continuing_compound_statement/0.0 '{' continuing_compound_statement/0.2 continuing_compound_statement/0.3 · '}' : {'}'}

#567
continuing_compound_statement/0.3 -> break_if_statement · : {'}'}

#568
break_if_statement -> 'break' · 'if' expression ';' : {'}'}

#569
break_if_statement -> 'break' 'if' · expression ';' : {'}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> · ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#570
continuing_compound_statement -> continuing_compound_statement/0.0 '{' continuing_compound_statement/0.2 continuing_compound_statement/0.3 '}' · : {'}'}

#571
break_if_statement -> 'break' 'if' expression · ';' : {'}'}

#572
break_if_statement -> 'break' 'if' expression ';' · : {'}'}


=Reductions:
r#0 translation_unit/0.0 -> translation_unit/0.0/0 ·
r#1 global_directive -> diagnostic_directive ·
r#2 global_directive -> enable_directive ·
r#3 global_directive -> requires_directive ·
r#4 software_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#5 enable_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#6 translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 ·
r#7 translation_unit -> translation_unit/0.0 translation_unit/0.1 ·
r#8 translation_unit/0.1 -> translation_unit/0.1/0 ·
r#9 global_decl -> ';' ·
r#10 global_decl -> struct_decl ·
r#11 global_decl -> function_decl ·
r#12 global_variable_decl/0.0 -> global_variable_decl/0.0/0 ·
r#13 global_value_decl/1.0 -> global_value_decl/1.0/0 ·
r#14 function_decl/0.0 -> function_decl/0.0/0 ·
r#15 attribute -> '@' 'const' ·
r#16 attribute -> '@' 'invariant' ·
r#17 attribute -> '@' 'must_use' ·
r#18 attribute -> '@' 'vertex' ·
r#19 attribute -> '@' 'fragment' ·
r#20 attribute -> '@' 'compute' ·
r#21 global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 ·
r#22 global_value_decl/1.0/0 -> attribute global_value_decl/1.0/0 ·
r#23 function_decl/0.0/0 -> attribute function_decl/0.0/0 ·
r#24 const_assert_statement -> 'const_assert' expression ·
r#25 expression -> relational_expression ·
r#26 short_circuit_or_expression -> relational_expression ·
r#27 short_circuit_and_expression -> relational_expression ·
r#28 expression -> bitwise_expression ·
r#29 relational_expression -> shift_expression ·
r#30 shift_expression -> additive_expression ·
r#31 binary_and_expression -> unary_expression ·
r#32 binary_or_expression -> unary_expression ·
r#33 binary_xor_expression -> unary_expression ·
r#34 multiplicative_expression -> unary_expression ·
r#35 additive_expression -> multiplicative_expression ·
r#36 unary_expression -> singular_expression ·
r#37 primary_expression -> template_elaborated_ident ·
r#38 primary_expression -> call_expression ·
r#39 primary_expression -> literal ·
r#40 primary_expression -> paren_expression ·
r#41 literal -> int_literal ·
r#42 literal -> float_literal ·
r#43 literal -> bool_literal ·
r#44 int_literal -> decimal_int_literal ·
r#45 int_literal -> hex_int_literal ·
r#46 float_literal -> decimal_float_literal ·
r#47 float_literal -> hex_float_literal ·
r#48 bool_literal -> 'true' ·
r#49 bool_literal -> 'false' ·
r#50 ident_pattern_token -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#51 decimal_int_literal -> /0[iu]?/ ·
r#52 decimal_int_literal -> /[1-9][0-9]*[iu]?/ ·
r#53 hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ ·
r#54 decimal_float_literal -> /0[fh]/ ·
r#55 decimal_float_literal -> /[1-9][0-9]*[fh]/ ·
r#56 decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ ·
r#57 decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ ·
r#58 decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ ·
r#59 hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ ·
r#60 hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ ·
r#61 hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ ·
r#62 global_decl -> const_assert_statement ';' ·
r#63 global_decl -> type_alias_decl ';' ·
r#64 global_decl -> global_value_decl ';' ·
r#65 global_decl -> global_variable_decl ';' ·
r#66 translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 ·
r#67 severity_control_name -> 'error' ·
r#68 severity_control_name -> 'warning' ·
r#69 severity_control_name -> 'info' ·
r#70 severity_control_name -> 'off' ·
r#71 diagnostic_directive -> 'diagnostic' diagnostic_control ';' ·
r#72 enable_directive -> 'enable' enable_extension_name ';' ·
r#73 software_extension_list/0.1 -> software_extension_list/0.1/0 ·
r#74 requires_directive -> 'requires' software_extension_list ';' ·
r#75 software_extension_list/0.1/0/0.0 -> ',' software_extension_name ·
r#76 software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 ·
r#77 software_extension_list -> software_extension_name software_extension_list/0.1 software_extension_list/0.2 ·
r#78 software_extension_list/0.2 -> ',' ·
r#79 _disambiguate_template -> /\u200B_disambiguate_template/ ·
r#80 global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 ·
r#81 optionally_typed_ident -> ident optionally_typed_ident/0.1 ·
r#82 struct_decl -> 'struct' ident struct_body_decl ·
r#83 function_decl -> function_decl/0.0 function_header compound_statement ·
r#84 compound_statement/0.0 -> compound_statement/0.0/0 ·
r#85 ident -> ident_pattern_token _disambiguate_template ·
r#86 call_expression -> template_elaborated_ident argument_expression_list ·
r#87 singular_expression -> primary_expression singular_expression/0.1 ·
r#88 singular_expression/0.1 -> component_or_swizzle_specifier ·
r#89 unary_expression -> '&' unary_expression ·
r#90 unary_expression -> '*' unary_expression ·
r#91 unary_expression -> '~' unary_expression ·
r#92 unary_expression -> '!' unary_expression ·
r#93 unary_expression -> '-' unary_expression ·
r#94 multiplicative_operator -> '*' ·
r#95 multiplicative_operator -> '/' ·
r#96 multiplicative_operator -> '%' ·
r#97 _shift_left -> /\u200B_shift_left/ ·
r#98 _shift_right -> /\u200B_shift_right/ ·
r#99 additive_operator -> '+' ·
r#100 additive_operator -> '-' ·
r#101 _less_than -> /\u200B_less_than/ ·
r#102 _greater_than -> /\u200B_greater_than/ ·
r#103 _less_than_equal -> /\u200B_less_than_equal/ ·
r#104 _greater_than_equal -> /\u200B_greater_than_equal/ ·
r#105 attribute -> '@' 'diagnostic' diagnostic_control ·
r#106 expression -> short_circuit_or_expression '||' relational_expression ·
r#107 short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression ·
r#108 expression -> short_circuit_and_expression '&&' relational_expression ·
r#109 short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression ·
r#110 relational_expression -> shift_expression '!=' shift_expression ·
r#111 relational_expression -> shift_expression '==' shift_expression ·
r#112 relational_expression -> shift_expression _greater_than_equal shift_expression ·
r#113 relational_expression -> shift_expression _less_than_equal shift_expression ·
r#114 relational_expression -> shift_expression _greater_than shift_expression ·
r#115 relational_expression -> shift_expression _less_than shift_expression ·
r#116 bitwise_expression -> binary_and_expression '&' unary_expression ·
r#117 binary_and_expression -> binary_and_expression '&' unary_expression ·
r#118 bitwise_expression -> binary_or_expression '|' unary_expression ·
r#119 binary_or_expression -> binary_or_expression '|' unary_expression ·
r#120 bitwise_expression -> binary_xor_expression '^' unary_expression ·
r#121 binary_xor_expression -> binary_xor_expression '^' unary_expression ·
r#122 additive_expression -> additive_expression additive_operator multiplicative_expression ·
r#123 shift_expression -> unary_expression _shift_right unary_expression ·
r#124 shift_expression -> unary_expression _shift_left unary_expression ·
r#125 multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression ·
r#126 member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#127 swizzle_name -> '/[rgba]/' ·
r#128 swizzle_name -> '/[rgba][rgba]/' ·
r#129 swizzle_name -> '/[rgba][rgba][rgba]/' ·
r#130 swizzle_name -> '/[rgba][rgba][rgba][rgba]/' ·
r#131 swizzle_name -> '/[xyzw]/' ·
r#132 swizzle_name -> '/[xyzw][xyzw]/' ·
r#133 swizzle_name -> '/[xyzw][xyzw][xyzw]/' ·
r#134 swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' ·
r#135 argument_expression_list/0.1 -> expression_comma_list ·
r#136 template_elaborated_ident -> ident _disambiguate_template template_elaborated_ident/0.2 ·
r#137 template_elaborated_ident/0.2 -> template_list ·
r#138 _template_args_start -> /\u200B_template_args_start/ ·
r#139 paren_expression -> '(' expression ')' ·
r#140 compound_statement/0.0/0 -> attribute compound_statement/0.0/0 ·
r#141 struct_member/0.0 -> struct_member/0.0/0 ·
r#142 type_alias_decl -> 'alias' ident '=' type_specifier ·
r#143 global_value_decl -> global_value_decl/1.0 'override' optionally_typed_ident global_value_decl/1.3 ·
r#144 global_value_decl -> 'const' optionally_typed_ident '=' expression ·
r#145 optionally_typed_ident/0.1 -> ':' type_specifier ·
r#146 global_variable_decl/0.2 -> '=' expression ·
r#147 variable_decl/0.2 -> template_list ·
r#148 diagnostic_rule_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#149 diagnostic_control -> '(' severity_control_name ',' diagnostic_rule_name attrib_end ·
r#150 attrib_end/0.0 -> ',' ·
r#151 variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident ·
r#152 global_value_decl/1.3 -> '=' expression ·
r#153 struct_member/0.0/0 -> attribute struct_member/0.0/0 ·
r#154 struct_body_decl/0.2 -> struct_body_decl/0.2/0 ·
r#155 function_header/0.3 -> param_list ·
r#156 param/0.0 -> param/0.0/0 ·
r#157 compound_statement/0.2 -> compound_statement/0.2/0 ·
r#158 statement -> ';' ·
r#159 statement -> if_statement ·
r#160 statement -> switch_statement ·
r#161 statement -> loop_statement ·
r#162 statement -> for_statement ·
r#163 statement -> while_statement ·
r#164 statement -> compound_statement ·
r#165 variable_or_value_statement -> variable_decl ·
r#166 break_statement -> 'break' ·
r#167 continue_statement -> 'continue' ·
r#168 variable_updating_statement -> assignment_statement ·
r#169 variable_updating_statement -> increment_statement ·
r#170 variable_updating_statement -> decrement_statement ·
r#171 if_statement/0.0 -> if_statement/0.0/0 ·
r#172 switch_statement/0.0 -> switch_statement/0.0/0 ·
r#173 loop_statement/0.0 -> loop_statement/0.0/0 ·
r#174 for_statement/0.0 -> for_statement/0.0/0 ·
r#175 while_statement/0.0 -> while_statement/0.0/0 ·
r#176 template_arg_expression -> relational_expression ·
r#177 template_arg_expression -> bitwise_expression ·
r#178 expression_comma_list/0.1 -> expression_comma_list/0.1/0 ·
r#179 argument_expression_list -> '(' argument_expression_list/0.1 ')' ·
r#180 component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 ·
r#181 component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier ·
r#182 component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 ·
r#183 component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier ·
r#184 attribute -> '@' 'workgroup_size' '(' expression attrib_end ·
r#185 attribute -> '@' 'size' '(' expression attrib_end ·
r#186 attribute -> '@' 'location' '(' expression attrib_end ·
r#187 attribute -> '@' 'interpolate' '(' expression attrib_end ·
r#188 attribute -> '@' 'id' '(' expression attrib_end ·
r#189 attribute -> '@' 'group' '(' expression attrib_end ·
r#190 attribute -> '@' 'builtin' '(' expression attrib_end ·
r#191 attribute -> '@' 'binding' '(' expression attrib_end ·
r#192 attribute -> '@' 'align' '(' expression attrib_end ·
r#193 component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 ·
r#194 component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier ·
r#195 expression_comma_list/0.1/0/0.0 -> ',' expression ·
r#196 expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 ·
r#197 expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 ·
r#198 expression_comma_list/0.2 -> ',' ·
r#199 template_arg_comma_list/0.1 -> template_arg_comma_list/0.1/0 ·
r#200 template_list -> _template_args_start template_arg_comma_list _template_args_end ·
r#201 _template_args_end -> /\u200B_template_args_end/ ·
r#202 lhs_expression -> '&' lhs_expression ·
r#203 lhs_expression -> '*' lhs_expression ·
r#204 lhs_expression -> core_lhs_expression lhs_expression/0.1 ·
r#205 lhs_expression/0.1 -> component_or_swizzle_specifier ·
r#206 if_statement/0.0/0 -> attribute if_statement/0.0/0 ·
r#207 switch_statement/0.0/0 -> attribute switch_statement/0.0/0 ·
r#208 loop_statement/0.0/0 -> attribute loop_statement/0.0/0 ·
r#209 for_statement/0.0/0 -> attribute for_statement/0.0/0 ·
r#210 while_statement/0.0/0 -> attribute while_statement/0.0/0 ·
r#211 increment_statement -> lhs_expression '++' ·
r#212 decrement_statement -> lhs_expression '--' ·
r#213 assignment_statement/0.1 -> '=' ·
r#214 assignment_statement/0.1 -> compound_assignment_operator ·
r#215 compound_assignment_operator -> '+=' ·
r#216 compound_assignment_operator -> '-=' ·
r#217 compound_assignment_operator -> '*=' ·
r#218 compound_assignment_operator -> '/=' ·
r#219 compound_assignment_operator -> '%=' ·
r#220 compound_assignment_operator -> '&=' ·
r#221 compound_assignment_operator -> '|=' ·
r#222 compound_assignment_operator -> '^=' ·
r#223 compound_assignment_operator -> _shift_right_assign ·
r#224 compound_assignment_operator -> _shift_left_assign ·
r#225 _shift_right_assign -> /\u200B_shift_right_assign/ ·
r#226 _shift_left_assign -> /\u200B_shift_left_assign/ ·
r#227 core_lhs_expression -> ident _disambiguate_template ·
r#228 func_call_statement -> template_elaborated_ident argument_expression_list ·
r#229 return_statement -> 'return' return_statement/0.1 ·
r#230 return_statement/0.1 -> expression ·
r#231 statement -> const_assert_statement ';' ·
r#232 statement -> variable_updating_statement ';' ·
r#233 statement -> 'discard' ';' ·
r#234 statement -> continue_statement ';' ·
r#235 statement -> break_statement ';' ·
r#236 statement -> variable_or_value_statement ';' ·
r#237 statement -> func_call_statement ';' ·
r#238 statement -> return_statement ';' ·
r#239 compound_statement/0.2/0 -> statement compound_statement/0.2/0 ·
r#240 compound_statement -> compound_statement/0.0 '{' compound_statement/0.2 '}' ·
r#241 param/0.0/0 -> attribute param/0.0/0 ·
r#242 param_list/0.1 -> param_list/0.1/0 ·
r#243 struct_body_decl/0.2/0/0.0 -> ',' struct_member ·
r#244 struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 ·
r#245 struct_body_decl/0.3 -> ',' ·
r#246 type_specifier -> ident _disambiguate_template template_elaborated_ident/0.2 ·
r#247 attrib_end -> attrib_end/0.0 ')' ·
r#248 struct_member -> struct_member/0.0 member_ident ':' type_specifier ·
r#249 struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' ·
r#250 function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 ·
r#251 param_list/0.1/0/0.0 -> ',' param ·
r#252 param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 ·
r#253 param_list -> param param_list/0.1 param_list/0.2 ·
r#254 param_list/0.2 -> ',' ·
r#255 if_statement/0.2 -> if_statement/0.2/0 ·
r#256 loop_statement/0.2 -> loop_statement/0.2/0 ·
r#257 variable_or_value_statement -> variable_decl '=' expression ·
r#258 assignment_statement -> lhs_expression assignment_statement/0.1 expression ·
r#259 assignment_statement -> '_' '=' expression ·
r#260 core_lhs_expression -> '(' lhs_expression ')' ·
r#261 template_arg_comma_list/0.1/0/0.0 -> ',' template_arg_expression ·
r#262 template_arg_comma_list/0.1/0 -> template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 ·
r#263 template_arg_comma_list -> template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 ·
r#264 template_arg_comma_list/0.2 -> ',' ·
r#265 template_arg_expression -> short_circuit_or_expression '||' relational_expression ·
r#266 template_arg_expression -> short_circuit_and_expression '&&' relational_expression ·
r#267 attribute -> '@' 'workgroup_size' '(' expression ',' expression attrib_end ·
r#268 attribute -> '@' 'interpolate' '(' expression ',' expression attrib_end ·
r#269 variable_or_value_statement -> 'const' optionally_typed_ident '=' expression ·
r#270 variable_or_value_statement -> 'let' optionally_typed_ident '=' expression ·
r#271 while_statement -> while_statement/0.0 'while' expression compound_statement ·
r#272 for_header/0.0 -> for_init ·
r#273 for_init -> variable_or_value_statement ·
r#274 for_init -> variable_updating_statement ·
r#275 for_init -> func_call_statement ·
r#276 loop_statement/0.2/0 -> attribute loop_statement/0.2/0 ·
r#277 switch_statement -> switch_statement/0.0 'switch' expression switch_body ·
r#278 switch_body/0.0 -> switch_body/0.0/0 ·
r#279 if_statement/0.2/0 -> else_if_clause if_statement/0.2/0 ·
r#280 if_statement -> if_statement/0.0 if_clause if_statement/0.2 if_statement/0.3 ·
r#281 if_statement/0.3 -> else_clause ·
r#282 if_clause -> 'if' expression compound_statement ·
r#283 param -> param/0.0 ident ':' type_specifier ·
r#284 function_header/0.5/0.1 -> function_header/0.5/0.1/0 ·
r#285 function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 ·
r#286 function_header/0.5 -> '->' function_header/0.5/0.1 template_elaborated_ident ·
r#287 else_clause -> 'else' compound_statement ·
r#288 switch_body/0.0/0 -> attribute switch_body/0.0/0 ·
r#289 loop_statement/0.4 -> loop_statement/0.4/0 ·
r#290 attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end ·
r#291 for_statement -> for_statement/0.0 'for' '(' for_header ')' compound_statement ·
r#292 for_header/0.2 -> expression ·
r#293 loop_statement/0.4/0 -> statement loop_statement/0.4/0 ·
r#294 loop_statement/0.5 -> continuing_statement ·
r#295 switch_body/0.2 -> switch_body/0.2/0 ·
r#296 switch_clause -> case_clause ·
r#297 switch_clause -> default_alone_clause ·
r#298 else_if_clause -> 'else' 'if' expression compound_statement ·
r#299 default_alone_clause/0.1 -> ':' ·
r#300 case_selector -> 'default' ·
r#301 case_selector -> expression ·
r#302 switch_body/0.2/0 -> switch_clause switch_body/0.2/0 ·
r#303 switch_body -> switch_body/0.0 '{' switch_body/0.2 '}' ·
r#304 continuing_statement -> 'continuing' continuing_compound_statement ·
r#305 continuing_compound_statement/0.0 -> continuing_compound_statement/0.0/0 ·
r#306 loop_statement -> loop_statement/0.0 'loop' loop_statement/0.2 '{' loop_statement/0.4 loop_statement/0.5 '}' ·
r#307 for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 ·
r#308 for_header/0.4 -> for_update ·
r#309 for_update -> variable_updating_statement ·
r#310 for_update -> func_call_statement ·
r#311 continuing_compound_statement/0.0/0 -> attribute continuing_compound_statement/0.0/0 ·
r#312 case_selectors/0.1 -> case_selectors/0.1/0 ·
r#313 case_clause/0.2 -> ':' ·
r#314 default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement ·
r#315 case_clause -> 'case' case_selectors case_clause/0.2 compound_statement ·
r#316 case_selectors/0.1/0/0.0 -> ',' case_selector ·
r#317 case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 ·
r#318 case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 ·
r#319 case_selectors/0.2 -> ',' ·
r#320 continuing_compound_statement/0.2 -> continuing_compound_statement/0.2/0 ·
r#321 continuing_compound_statement/0.2/0 -> statement continuing_compound_statement/0.2/0 ·
r#322 continuing_compound_statement/0.3 -> break_if_statement ·
r#323 continuing_compound_statement -> continuing_compound_statement/0.0 '{' continuing_compound_statement/0.2 continuing_compound_statement/0.3 '}' ·
r#324 break_if_statement -> 'break' 'if' expression ';' ·

=Action:
[#0 'diagnostic']: s#8
[#0 'enable']: s#9
[#0 'requires']: s#10
[#1 EndOfText]: acc
[#2 ';']: s#22
[#2 '@']: s#40
[#2 'alias']: s#32
[#2 'const']: s#30
[#2 'const_assert']: s#35
[#2 'struct']: s#33
[#3 ';']: r#0
[#3 '@']: r#0
[#3 'alias']: r#0
[#3 'const']: r#0
[#3 'const_assert']: r#0
[#3 'fn']: r#0
[#3 'override']: r#0
[#3 'struct']: r#0
[#3 'var']: r#0
[#3 EndOfText]: r#0
[#4 'diagnostic']: s#8
[#4 'enable']: s#9
[#4 'requires']: s#10
[#5 ';']: r#1
[#5 '@']: r#1
[#5 'alias']: r#1
[#5 'const']: r#1
[#5 'const_assert']: r#1
[#5 'diagnostic']: r#1
[#5 'enable']: r#1
[#5 'fn']: r#1
[#5 'override']: r#1
[#5 'requires']: r#1
[#5 'struct']: r#1
[#5 'var']: r#1
[#5 EndOfText]: r#1
[#6 ';']: r#2
[#6 '@']: r#2
[#6 'alias']: r#2
[#6 'const']: r#2
[#6 'const_assert']: r#2
[#6 'diagnostic']: r#2
[#6 'enable']: r#2
[#6 'fn']: r#2
[#6 'override']: r#2
[#6 'requires']: r#2
[#6 'struct']: r#2
[#6 'var']: r#2
[#6 EndOfText]: r#2
[#7 ';']: r#3
[#7 '@']: r#3
[#7 'alias']: r#3
[#7 'const']: r#3
[#7 'const_assert']: r#3
[#7 'diagnostic']: r#3
[#7 'enable']: r#3
[#7 'fn']: r#3
[#7 'override']: r#3
[#7 'requires']: r#3
[#7 'struct']: r#3
[#7 'var']: r#3
[#7 EndOfText]: r#3
[#8 '(']: s#17
[#9 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#15
[#10 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#13
[#11 ';']: s#132
[#12 ',']: s#131
[#13 ',']: r#4
[#13 ';']: r#4
[#14 ';']: s#127
[#15 ';']: r#5
[#16 ';']: s#126
[#17 'error']: s#122
[#17 'info']: s#124
[#17 'off']: s#125
[#17 'warning']: s#123
[#18 ';']: r#6
[#18 '@']: r#6
[#18 'alias']: r#6
[#18 'const']: r#6
[#18 'const_assert']: r#6
[#18 'fn']: r#6
[#18 'override']: r#6
[#18 'struct']: r#6
[#18 'var']: r#6
[#18 EndOfText]: r#6
[#19 EndOfText]: r#7
[#20 EndOfText]: r#8
[#21 ';']: s#22
[#21 '@']: s#40
[#21 'alias']: s#32
[#21 'const']: s#30
[#21 'const_assert']: s#35
[#21 'struct']: s#33
[#22 ';']: r#9
[#22 '@']: r#9
[#22 'alias']: r#9
[#22 'const']: r#9
[#22 'const_assert']: r#9
[#22 'fn']: r#9
[#22 'override']: r#9
[#22 'struct']: r#9
[#22 'var']: r#9
[#22 EndOfText]: r#9
[#23 ';']: s#119
[#24 ';']: s#118
[#25 ';']: s#117
[#26 ';']: r#10
[#26 '@']: r#10
[#26 'alias']: r#10
[#26 'const']: r#10
[#26 'const_assert']: r#10
[#26 'fn']: r#10
[#26 'override']: r#10
[#26 'struct']: r#10
[#26 'var']: r#10
[#26 EndOfText]: r#10
[#27 ';']: r#11
[#27 '@']: r#11
[#27 'alias']: r#11
[#27 'const']: r#11
[#27 'const_assert']: r#11
[#27 'fn']: r#11
[#27 'override']: r#11
[#27 'struct']: r#11
[#27 'var']: r#11
[#27 EndOfText]: r#11
[#28 ';']: s#116
[#29 'var']: s#115
[#30 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#31 'override']: s#111
[#32 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#33 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#34 'fn']: s#108
[#35 '!']: s#74
[#35 '&']: s#77
[#35 '(']: s#87
[#35 '*']: s#76
[#35 '-']: s#73
[#35 'false']: s#94
[#35 'true']: s#93
[#35 '~']: s#75
[#35 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#35 /0[fh]/]: s#99
[#35 /0[iu]?/]: s#96
[#35 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#35 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#35 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#35 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#35 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#35 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#35 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#35 /[1-9][0-9]*[fh]/]: s#100
[#35 /[1-9][0-9]*[iu]?/]: s#97
[#36 'var']: r#12
[#37 'override']: r#13
[#38 'fn']: r#14
[#39 '@']: s#40
[#40 'align']: s#41
[#40 'binding']: s#42
[#40 'builtin']: s#43
[#40 'compute']: s#56
[#40 'const']: s#44
[#40 'diagnostic']: s#45
[#40 'fragment']: s#55
[#40 'group']: s#46
[#40 'id']: s#47
[#40 'interpolate']: s#48
[#40 'invariant']: s#49
[#40 'location']: s#50
[#40 'must_use']: s#51
[#40 'size']: s#52
[#40 'vertex']: s#54
[#40 'workgroup_size']: s#53
[#41 '(']: s#203
[#42 '(']: s#202
[#43 '(']: s#201
[#44 '@']: r#15
[#44 'fn']: r#15
[#44 'for']: r#15
[#44 'if']: r#15
[#44 'loop']: r#15
[#44 'override']: r#15
[#44 'switch']: r#15
[#44 'var']: r#15
[#44 'while']: r#15
[#44 '{']: r#15
[#44 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#15
[#45 '(']: s#17
[#46 '(']: s#199
[#47 '(']: s#198
[#48 '(']: s#197
[#49 '@']: r#16
[#49 'fn']: r#16
[#49 'for']: r#16
[#49 'if']: r#16
[#49 'loop']: r#16
[#49 'override']: r#16
[#49 'switch']: r#16
[#49 'var']: r#16
[#49 'while']: r#16
[#49 '{']: r#16
[#49 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#16
[#50 '(']: s#196
[#51 '@']: r#17
[#51 'fn']: r#17
[#51 'for']: r#17
[#51 'if']: r#17
[#51 'loop']: r#17
[#51 'override']: r#17
[#51 'switch']: r#17
[#51 'var']: r#17
[#51 'while']: r#17
[#51 '{']: r#17
[#51 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#17
[#52 '(']: s#195
[#53 '(']: s#194
[#54 '@']: r#18
[#54 'fn']: r#18
[#54 'for']: r#18
[#54 'if']: r#18
[#54 'loop']: r#18
[#54 'override']: r#18
[#54 'switch']: r#18
[#54 'var']: r#18
[#54 'while']: r#18
[#54 '{']: r#18
[#54 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#18
[#55 '@']: r#19
[#55 'fn']: r#19
[#55 'for']: r#19
[#55 'if']: r#19
[#55 'loop']: r#19
[#55 'override']: r#19
[#55 'switch']: r#19
[#55 'var']: r#19
[#55 'while']: r#19
[#55 '{']: r#19
[#55 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#19
[#56 '@']: r#20
[#56 'fn']: r#20
[#56 'for']: r#20
[#56 'if']: r#20
[#56 'loop']: r#20
[#56 'override']: r#20
[#56 'switch']: r#20
[#56 'var']: r#20
[#56 'while']: r#20
[#56 '{']: r#20
[#56 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#20
[#57 'var']: r#21
[#58 'override']: r#22
[#59 'fn']: r#23
[#60 ';']: r#24
[#61 '&&']: r#27
[#61 ')']: r#25
[#61 ',']: r#25
[#61 ':']: r#25
[#61 ';']: r#25
[#61 '@']: r#25
[#61 ']']: r#25
[#61 '{']: r#25
[#61 '||']: r#26
[#62 '||']: s#193
[#63 '&&']: s#192
[#64 ')']: r#28
[#64 ',']: r#28
[#64 ':']: r#28
[#64 ';']: r#28
[#64 '@']: r#28
[#64 ']']: r#28
[#64 '{']: r#28
[#65 '!=']: s#187
[#65 '&&']: r#29
[#65 ')']: r#29
[#65 ',']: r#29
[#65 ':']: r#29
[#65 ';']: r#29
[#65 '==']: s#186
[#65 '@']: r#29
[#65 ']']: r#29
[#65 '{']: r#29
[#65 '||']: r#29
[#65 /\u200B_greater_than/]: s#189
[#65 /\u200B_greater_than_equal/]: s#191
[#65 /\u200B_less_than/]: s#188
[#65 /\u200B_less_than_equal/]: s#190
[#65 /\u200B_template_args_end/]: r#29
[#66 '&']: s#181
[#67 '|']: s#180
[#68 '^']: s#179
[#69 '!=']: r#30
[#69 '&&']: r#30
[#69 ')']: r#30
[#69 '+']: s#177
[#69 ',']: r#30
[#69 '-']: s#178
[#69 ':']: r#30
[#69 ';']: r#30
[#69 '==']: r#30
[#69 '@']: r#30
[#69 ']']: r#30
[#69 '{']: r#30
[#69 '||']: r#30
[#69 /\u200B_greater_than/]: r#30
[#69 /\u200B_greater_than_equal/]: r#30
[#69 /\u200B_less_than/]: r#30
[#69 /\u200B_less_than_equal/]: r#30
[#69 /\u200B_template_args_end/]: r#30
[#70 '!=']: r#34
[#70 '%']: r#34
[#70 '&&']: r#34
[#70 '&']: r#31
[#70 ')']: r#34
[#70 '*']: r#34
[#70 '+']: r#34
[#70 ',']: r#34
[#70 '-']: r#34
[#70 '/']: r#34
[#70 ':']: r#34
[#70 ';']: r#34
[#70 '==']: r#34
[#70 '@']: r#34
[#70 ']']: r#34
[#70 '^']: r#33
[#70 '{']: r#34
[#70 '|']: r#32
[#70 '||']: r#34
[#70 /\u200B_greater_than/]: r#34
[#70 /\u200B_greater_than_equal/]: r#34
[#70 /\u200B_less_than/]: r#34
[#70 /\u200B_less_than_equal/]: r#34
[#70 /\u200B_shift_left/]: s#174
[#70 /\u200B_shift_right/]: s#175
[#70 /\u200B_template_args_end/]: r#34
[#71 '!=']: r#35
[#71 '%']: s#171
[#71 '&&']: r#35
[#71 ')']: r#35
[#71 '*']: s#169
[#71 '+']: r#35
[#71 ',']: r#35
[#71 '-']: r#35
[#71 '/']: s#170
[#71 ':']: r#35
[#71 ';']: r#35
[#71 '==']: r#35
[#71 '@']: r#35
[#71 ']']: r#35
[#71 '{']: r#35
[#71 '||']: r#35
[#71 /\u200B_greater_than/]: r#35
[#71 /\u200B_greater_than_equal/]: r#35
[#71 /\u200B_less_than/]: r#35
[#71 /\u200B_less_than_equal/]: r#35
[#71 /\u200B_template_args_end/]: r#35
[#72 '!=']: r#36
[#72 '%']: r#36
[#72 '&&']: r#36
[#72 '&']: r#36
[#72 ')']: r#36
[#72 '*']: r#36
[#72 '+']: r#36
[#72 ',']: r#36
[#72 '-']: r#36
[#72 '/']: r#36
[#72 ':']: r#36
[#72 ';']: r#36
[#72 '==']: r#36
[#72 '@']: r#36
[#72 ']']: r#36
[#72 '^']: r#36
[#72 '{']: r#36
[#72 '|']: r#36
[#72 '||']: r#36
[#72 /\u200B_greater_than/]: r#36
[#72 /\u200B_greater_than_equal/]: r#36
[#72 /\u200B_less_than/]: r#36
[#72 /\u200B_less_than_equal/]: r#36
[#72 /\u200B_shift_left/]: r#36
[#72 /\u200B_shift_right/]: r#36
[#72 /\u200B_template_args_end/]: r#36
[#73 '!']: s#74
[#73 '&']: s#77
[#73 '(']: s#87
[#73 '*']: s#76
[#73 '-']: s#73
[#73 'false']: s#94
[#73 'true']: s#93
[#73 '~']: s#75
[#73 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#73 /0[fh]/]: s#99
[#73 /0[iu]?/]: s#96
[#73 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#73 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#73 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#73 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#73 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#73 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#73 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#73 /[1-9][0-9]*[fh]/]: s#100
[#73 /[1-9][0-9]*[iu]?/]: s#97
[#74 '!']: s#74
[#74 '&']: s#77
[#74 '(']: s#87
[#74 '*']: s#76
[#74 '-']: s#73
[#74 'false']: s#94
[#74 'true']: s#93
[#74 '~']: s#75
[#74 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#74 /0[fh]/]: s#99
[#74 /0[iu]?/]: s#96
[#74 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#74 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#74 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#74 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#74 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#74 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#74 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#74 /[1-9][0-9]*[fh]/]: s#100
[#74 /[1-9][0-9]*[iu]?/]: s#97
[#75 '!']: s#74
[#75 '&']: s#77
[#75 '(']: s#87
[#75 '*']: s#76
[#75 '-']: s#73
[#75 'false']: s#94
[#75 'true']: s#93
[#75 '~']: s#75
[#75 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#75 /0[fh]/]: s#99
[#75 /0[iu]?/]: s#96
[#75 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#75 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#75 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#75 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#75 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#75 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#75 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#75 /[1-9][0-9]*[fh]/]: s#100
[#75 /[1-9][0-9]*[iu]?/]: s#97
[#76 '!']: s#74
[#76 '&']: s#77
[#76 '(']: s#87
[#76 '*']: s#76
[#76 '-']: s#73
[#76 'false']: s#94
[#76 'true']: s#93
[#76 '~']: s#75
[#76 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#76 /0[fh]/]: s#99
[#76 /0[iu]?/]: s#96
[#76 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#76 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#76 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#76 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#76 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#76 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#76 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#76 /[1-9][0-9]*[fh]/]: s#100
[#76 /[1-9][0-9]*[iu]?/]: s#97
[#77 '!']: s#74
[#77 '&']: s#77
[#77 '(']: s#87
[#77 '*']: s#76
[#77 '-']: s#73
[#77 'false']: s#94
[#77 'true']: s#93
[#77 '~']: s#75
[#77 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#77 /0[fh]/]: s#99
[#77 /0[iu]?/]: s#96
[#77 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#77 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#77 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#77 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#77 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#77 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#77 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#77 /[1-9][0-9]*[fh]/]: s#100
[#77 /[1-9][0-9]*[iu]?/]: s#97
[#78 '.']: s#162
[#78 '[']: s#161
[#79 '!=']: r#37
[#79 '%']: r#37
[#79 '&&']: r#37
[#79 '&']: r#37
[#79 '(']: s#158
[#79 ')']: r#37
[#79 '*']: r#37
[#79 '+']: r#37
[#79 ',']: r#37
[#79 '-']: r#37
[#79 '.']: r#37
[#79 '/']: r#37
[#79 ':']: r#37
[#79 ';']: r#37
[#79 '==']: r#37
[#79 '@']: r#37
[#79 '[']: r#37
[#79 ']']: r#37
[#79 '^']: r#37
[#79 '{']: r#37
[#79 '|']: r#37
[#79 '||']: r#37
[#79 /\u200B_greater_than/]: r#37
[#79 /\u200B_greater_than_equal/]: r#37
[#79 /\u200B_less_than/]: r#37
[#79 /\u200B_less_than_equal/]: r#37
[#79 /\u200B_shift_left/]: r#37
[#79 /\u200B_shift_right/]: r#37
[#79 /\u200B_template_args_end/]: r#37
[#80 '!=']: r#38
[#80 '%']: r#38
[#80 '&&']: r#38
[#80 '&']: r#38
[#80 ')']: r#38
[#80 '*']: r#38
[#80 '+']: r#38
[#80 ',']: r#38
[#80 '-']: r#38
[#80 '.']: r#38
[#80 '/']: r#38
[#80 ':']: r#38
[#80 ';']: r#38
[#80 '==']: r#38
[#80 '@']: r#38
[#80 '[']: r#38
[#80 ']']: r#38
[#80 '^']: r#38
[#80 '{']: r#38
[#80 '|']: r#38
[#80 '||']: r#38
[#80 /\u200B_greater_than/]: r#38
[#80 /\u200B_greater_than_equal/]: r#38
[#80 /\u200B_less_than/]: r#38
[#80 /\u200B_less_than_equal/]: r#38
[#80 /\u200B_shift_left/]: r#38
[#80 /\u200B_shift_right/]: r#38
[#80 /\u200B_template_args_end/]: r#38
[#81 '!=']: r#39
[#81 '%']: r#39
[#81 '&&']: r#39
[#81 '&']: r#39
[#81 ')']: r#39
[#81 '*']: r#39
[#81 '+']: r#39
[#81 ',']: r#39
[#81 '-']: r#39
[#81 '.']: r#39
[#81 '/']: r#39
[#81 ':']: r#39
[#81 ';']: r#39
[#81 '==']: r#39
[#81 '@']: r#39
[#81 '[']: r#39
[#81 ']']: r#39
[#81 '^']: r#39
[#81 '{']: r#39
[#81 '|']: r#39
[#81 '||']: r#39
[#81 /\u200B_greater_than/]: r#39
[#81 /\u200B_greater_than_equal/]: r#39
[#81 /\u200B_less_than/]: r#39
[#81 /\u200B_less_than_equal/]: r#39
[#81 /\u200B_shift_left/]: r#39
[#81 /\u200B_shift_right/]: r#39
[#81 /\u200B_template_args_end/]: r#39
[#82 '!=']: r#40
[#82 '%']: r#40
[#82 '&&']: r#40
[#82 '&']: r#40
[#82 ')']: r#40
[#82 '*']: r#40
[#82 '+']: r#40
[#82 ',']: r#40
[#82 '-']: r#40
[#82 '.']: r#40
[#82 '/']: r#40
[#82 ':']: r#40
[#82 ';']: r#40
[#82 '==']: r#40
[#82 '@']: r#40
[#82 '[']: r#40
[#82 ']']: r#40
[#82 '^']: r#40
[#82 '{']: r#40
[#82 '|']: r#40
[#82 '||']: r#40
[#82 /\u200B_greater_than/]: r#40
[#82 /\u200B_greater_than_equal/]: r#40
[#82 /\u200B_less_than/]: r#40
[#82 /\u200B_less_than_equal/]: r#40
[#82 /\u200B_shift_left/]: r#40
[#82 /\u200B_shift_right/]: r#40
[#82 /\u200B_template_args_end/]: r#40
[#83 /\u200B_disambiguate_template/]: s#139
[#84 '!=']: r#41
[#84 '%']: r#41
[#84 '&&']: r#41
[#84 '&']: r#41
[#84 ')']: r#41
[#84 '*']: r#41
[#84 '+']: r#41
[#84 ',']: r#41
[#84 '-']: r#41
[#84 '.']: r#41
[#84 '/']: r#41
[#84 ':']: r#41
[#84 ';']: r#41
[#84 '==']: r#41
[#84 '@']: r#41
[#84 '[']: r#41
[#84 ']']: r#41
[#84 '^']: r#41
[#84 '{']: r#41
[#84 '|']: r#41
[#84 '||']: r#41
[#84 /\u200B_greater_than/]: r#41
[#84 /\u200B_greater_than_equal/]: r#41
[#84 /\u200B_less_than/]: r#41
[#84 /\u200B_less_than_equal/]: r#41
[#84 /\u200B_shift_left/]: r#41
[#84 /\u200B_shift_right/]: r#41
[#84 /\u200B_template_args_end/]: r#41
[#85 '!=']: r#42
[#85 '%']: r#42
[#85 '&&']: r#42
[#85 '&']: r#42
[#85 ')']: r#42
[#85 '*']: r#42
[#85 '+']: r#42
[#85 ',']: r#42
[#85 '-']: r#42
[#85 '.']: r#42
[#85 '/']: r#42
[#85 ':']: r#42
[#85 ';']: r#42
[#85 '==']: r#42
[#85 '@']: r#42
[#85 '[']: r#42
[#85 ']']: r#42
[#85 '^']: r#42
[#85 '{']: r#42
[#85 '|']: r#42
[#85 '||']: r#42
[#85 /\u200B_greater_than/]: r#42
[#85 /\u200B_greater_than_equal/]: r#42
[#85 /\u200B_less_than/]: r#42
[#85 /\u200B_less_than_equal/]: r#42
[#85 /\u200B_shift_left/]: r#42
[#85 /\u200B_shift_right/]: r#42
[#85 /\u200B_template_args_end/]: r#42
[#86 '!=']: r#43
[#86 '%']: r#43
[#86 '&&']: r#43
[#86 '&']: r#43
[#86 ')']: r#43
[#86 '*']: r#43
[#86 '+']: r#43
[#86 ',']: r#43
[#86 '-']: r#43
[#86 '.']: r#43
[#86 '/']: r#43
[#86 ':']: r#43
[#86 ';']: r#43
[#86 '==']: r#43
[#86 '@']: r#43
[#86 '[']: r#43
[#86 ']']: r#43
[#86 '^']: r#43
[#86 '{']: r#43
[#86 '|']: r#43
[#86 '||']: r#43
[#86 /\u200B_greater_than/]: r#43
[#86 /\u200B_greater_than_equal/]: r#43
[#86 /\u200B_less_than/]: r#43
[#86 /\u200B_less_than_equal/]: r#43
[#86 /\u200B_shift_left/]: r#43
[#86 /\u200B_shift_right/]: r#43
[#86 /\u200B_template_args_end/]: r#43
[#87 '!']: s#74
[#87 '&']: s#77
[#87 '(']: s#87
[#87 '*']: s#76
[#87 '-']: s#73
[#87 'false']: s#94
[#87 'true']: s#93
[#87 '~']: s#75
[#87 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#87 /0[fh]/]: s#99
[#87 /0[iu]?/]: s#96
[#87 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#87 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#87 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#87 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#87 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#87 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#87 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#87 /[1-9][0-9]*[fh]/]: s#100
[#87 /[1-9][0-9]*[iu]?/]: s#97
[#88 /\u200B_disambiguate_template/]: s#139
[#89 '!=']: r#44
[#89 '%']: r#44
[#89 '&&']: r#44
[#89 '&']: r#44
[#89 ')']: r#44
[#89 '*']: r#44
[#89 '+']: r#44
[#89 ',']: r#44
[#89 '-']: r#44
[#89 '.']: r#44
[#89 '/']: r#44
[#89 ':']: r#44
[#89 ';']: r#44
[#89 '==']: r#44
[#89 '@']: r#44
[#89 '[']: r#44
[#89 ']']: r#44
[#89 '^']: r#44
[#89 '{']: r#44
[#89 '|']: r#44
[#89 '||']: r#44
[#89 /\u200B_greater_than/]: r#44
[#89 /\u200B_greater_than_equal/]: r#44
[#89 /\u200B_less_than/]: r#44
[#89 /\u200B_less_than_equal/]: r#44
[#89 /\u200B_shift_left/]: r#44
[#89 /\u200B_shift_right/]: r#44
[#89 /\u200B_template_args_end/]: r#44
[#90 '!=']: r#45
[#90 '%']: r#45
[#90 '&&']: r#45
[#90 '&']: r#45
[#90 ')']: r#45
[#90 '*']: r#45
[#90 '+']: r#45
[#90 ',']: r#45
[#90 '-']: r#45
[#90 '.']: r#45
[#90 '/']: r#45
[#90 ':']: r#45
[#90 ';']: r#45
[#90 '==']: r#45
[#90 '@']: r#45
[#90 '[']: r#45
[#90 ']']: r#45
[#90 '^']: r#45
[#90 '{']: r#45
[#90 '|']: r#45
[#90 '||']: r#45
[#90 /\u200B_greater_than/]: r#45
[#90 /\u200B_greater_than_equal/]: r#45
[#90 /\u200B_less_than/]: r#45
[#90 /\u200B_less_than_equal/]: r#45
[#90 /\u200B_shift_left/]: r#45
[#90 /\u200B_shift_right/]: r#45
[#90 /\u200B_template_args_end/]: r#45
[#91 '!=']: r#46
[#91 '%']: r#46
[#91 '&&']: r#46
[#91 '&']: r#46
[#91 ')']: r#46
[#91 '*']: r#46
[#91 '+']: r#46
[#91 ',']: r#46
[#91 '-']: r#46
[#91 '.']: r#46
[#91 '/']: r#46
[#91 ':']: r#46
[#91 ';']: r#46
[#91 '==']: r#46
[#91 '@']: r#46
[#91 '[']: r#46
[#91 ']']: r#46
[#91 '^']: r#46
[#91 '{']: r#46
[#91 '|']: r#46
[#91 '||']: r#46
[#91 /\u200B_greater_than/]: r#46
[#91 /\u200B_greater_than_equal/]: r#46
[#91 /\u200B_less_than/]: r#46
[#91 /\u200B_less_than_equal/]: r#46
[#91 /\u200B_shift_left/]: r#46
[#91 /\u200B_shift_right/]: r#46
[#91 /\u200B_template_args_end/]: r#46
[#92 '!=']: r#47
[#92 '%']: r#47
[#92 '&&']: r#47
[#92 '&']: r#47
[#92 ')']: r#47
[#92 '*']: r#47
[#92 '+']: r#47
[#92 ',']: r#47
[#92 '-']: r#47
[#92 '.']: r#47
[#92 '/']: r#47
[#92 ':']: r#47
[#92 ';']: r#47
[#92 '==']: r#47
[#92 '@']: r#47
[#92 '[']: r#47
[#92 ']']: r#47
[#92 '^']: r#47
[#92 '{']: r#47
[#92 '|']: r#47
[#92 '||']: r#47
[#92 /\u200B_greater_than/]: r#47
[#92 /\u200B_greater_than_equal/]: r#47
[#92 /\u200B_less_than/]: r#47
[#92 /\u200B_less_than_equal/]: r#47
[#92 /\u200B_shift_left/]: r#47
[#92 /\u200B_shift_right/]: r#47
[#92 /\u200B_template_args_end/]: r#47
[#93 '!=']: r#48
[#93 '%']: r#48
[#93 '&&']: r#48
[#93 '&']: r#48
[#93 ')']: r#48
[#93 '*']: r#48
[#93 '+']: r#48
[#93 ',']: r#48
[#93 '-']: r#48
[#93 '.']: r#48
[#93 '/']: r#48
[#93 ':']: r#48
[#93 ';']: r#48
[#93 '==']: r#48
[#93 '@']: r#48
[#93 '[']: r#48
[#93 ']']: r#48
[#93 '^']: r#48
[#93 '{']: r#48
[#93 '|']: r#48
[#93 '||']: r#48
[#93 /\u200B_greater_than/]: r#48
[#93 /\u200B_greater_than_equal/]: r#48
[#93 /\u200B_less_than/]: r#48
[#93 /\u200B_less_than_equal/]: r#48
[#93 /\u200B_shift_left/]: r#48
[#93 /\u200B_shift_right/]: r#48
[#93 /\u200B_template_args_end/]: r#48
[#94 '!=']: r#49
[#94 '%']: r#49
[#94 '&&']: r#49
[#94 '&']: r#49
[#94 ')']: r#49
[#94 '*']: r#49
[#94 '+']: r#49
[#94 ',']: r#49
[#94 '-']: r#49
[#94 '.']: r#49
[#94 '/']: r#49
[#94 ':']: r#49
[#94 ';']: r#49
[#94 '==']: r#49
[#94 '@']: r#49
[#94 '[']: r#49
[#94 ']']: r#49
[#94 '^']: r#49
[#94 '{']: r#49
[#94 '|']: r#49
[#94 '||']: r#49
[#94 /\u200B_greater_than/]: r#49
[#94 /\u200B_greater_than_equal/]: r#49
[#94 /\u200B_less_than/]: r#49
[#94 /\u200B_less_than_equal/]: r#49
[#94 /\u200B_shift_left/]: r#49
[#94 /\u200B_shift_right/]: r#49
[#94 /\u200B_template_args_end/]: r#49
[#95 /\u200B_disambiguate_template/]: r#50
[#96 '!=']: r#51
[#96 '%']: r#51
[#96 '&&']: r#51
[#96 '&']: r#51
[#96 ')']: r#51
[#96 '*']: r#51
[#96 '+']: r#51
[#96 ',']: r#51
[#96 '-']: r#51
[#96 '.']: r#51
[#96 '/']: r#51
[#96 ':']: r#51
[#96 ';']: r#51
[#96 '==']: r#51
[#96 '@']: r#51
[#96 '[']: r#51
[#96 ']']: r#51
[#96 '^']: r#51
[#96 '{']: r#51
[#96 '|']: r#51
[#96 '||']: r#51
[#96 /\u200B_greater_than/]: r#51
[#96 /\u200B_greater_than_equal/]: r#51
[#96 /\u200B_less_than/]: r#51
[#96 /\u200B_less_than_equal/]: r#51
[#96 /\u200B_shift_left/]: r#51
[#96 /\u200B_shift_right/]: r#51
[#96 /\u200B_template_args_end/]: r#51
[#97 '!=']: r#52
[#97 '%']: r#52
[#97 '&&']: r#52
[#97 '&']: r#52
[#97 ')']: r#52
[#97 '*']: r#52
[#97 '+']: r#52
[#97 ',']: r#52
[#97 '-']: r#52
[#97 '.']: r#52
[#97 '/']: r#52
[#97 ':']: r#52
[#97 ';']: r#52
[#97 '==']: r#52
[#97 '@']: r#52
[#97 '[']: r#52
[#97 ']']: r#52
[#97 '^']: r#52
[#97 '{']: r#52
[#97 '|']: r#52
[#97 '||']: r#52
[#97 /\u200B_greater_than/]: r#52
[#97 /\u200B_greater_than_equal/]: r#52
[#97 /\u200B_less_than/]: r#52
[#97 /\u200B_less_than_equal/]: r#52
[#97 /\u200B_shift_left/]: r#52
[#97 /\u200B_shift_right/]: r#52
[#97 /\u200B_template_args_end/]: r#52
[#98 '!=']: r#53
[#98 '%']: r#53
[#98 '&&']: r#53
[#98 '&']: r#53
[#98 ')']: r#53
[#98 '*']: r#53
[#98 '+']: r#53
[#98 ',']: r#53
[#98 '-']: r#53
[#98 '.']: r#53
[#98 '/']: r#53
[#98 ':']: r#53
[#98 ';']: r#53
[#98 '==']: r#53
[#98 '@']: r#53
[#98 '[']: r#53
[#98 ']']: r#53
[#98 '^']: r#53
[#98 '{']: r#53
[#98 '|']: r#53
[#98 '||']: r#53
[#98 /\u200B_greater_than/]: r#53
[#98 /\u200B_greater_than_equal/]: r#53
[#98 /\u200B_less_than/]: r#53
[#98 /\u200B_less_than_equal/]: r#53
[#98 /\u200B_shift_left/]: r#53
[#98 /\u200B_shift_right/]: r#53
[#98 /\u200B_template_args_end/]: r#53
[#99 '!=']: r#54
[#99 '%']: r#54
[#99 '&&']: r#54
[#99 '&']: r#54
[#99 ')']: r#54
[#99 '*']: r#54
[#99 '+']: r#54
[#99 ',']: r#54
[#99 '-']: r#54
[#99 '.']: r#54
[#99 '/']: r#54
[#99 ':']: r#54
[#99 ';']: r#54
[#99 '==']: r#54
[#99 '@']: r#54
[#99 '[']: r#54
[#99 ']']: r#54
[#99 '^']: r#54
[#99 '{']: r#54
[#99 '|']: r#54
[#99 '||']: r#54
[#99 /\u200B_greater_than/]: r#54
[#99 /\u200B_greater_than_equal/]: r#54
[#99 /\u200B_less_than/]: r#54
[#99 /\u200B_less_than_equal/]: r#54
[#99 /\u200B_shift_left/]: r#54
[#99 /\u200B_shift_right/]: r#54
[#99 /\u200B_template_args_end/]: r#54
[#100 '!=']: r#55
[#100 '%']: r#55
[#100 '&&']: r#55
[#100 '&']: r#55
[#100 ')']: r#55
[#100 '*']: r#55
[#100 '+']: r#55
[#100 ',']: r#55
[#100 '-']: r#55
[#100 '.']: r#55
[#100 '/']: r#55
[#100 ':']: r#55
[#100 ';']: r#55
[#100 '==']: r#55
[#100 '@']: r#55
[#100 '[']: r#55
[#100 ']']: r#55
[#100 '^']: r#55
[#100 '{']: r#55
[#100 '|']: r#55
[#100 '||']: r#55
[#100 /\u200B_greater_than/]: r#55
[#100 /\u200B_greater_than_equal/]: r#55
[#100 /\u200B_less_than/]: r#55
[#100 /\u200B_less_than_equal/]: r#55
[#100 /\u200B_shift_left/]: r#55
[#100 /\u200B_shift_right/]: r#55
[#100 /\u200B_template_args_end/]: r#55
[#101 '!=']: r#56
[#101 '%']: r#56
[#101 '&&']: r#56
[#101 '&']: r#56
[#101 ')']: r#56
[#101 '*']: r#56
[#101 '+']: r#56
[#101 ',']: r#56
[#101 '-']: r#56
[#101 '.']: r#56
[#101 '/']: r#56
[#101 ':']: r#56
[#101 ';']: r#56
[#101 '==']: r#56
[#101 '@']: r#56
[#101 '[']: r#56
[#101 ']']: r#56
[#101 '^']: r#56
[#101 '{']: r#56
[#101 '|']: r#56
[#101 '||']: r#56
[#101 /\u200B_greater_than/]: r#56
[#101 /\u200B_greater_than_equal/]: r#56
[#101 /\u200B_less_than/]: r#56
[#101 /\u200B_less_than_equal/]: r#56
[#101 /\u200B_shift_left/]: r#56
[#101 /\u200B_shift_right/]: r#56
[#101 /\u200B_template_args_end/]: r#56
[#102 '!=']: r#57
[#102 '%']: r#57
[#102 '&&']: r#57
[#102 '&']: r#57
[#102 ')']: r#57
[#102 '*']: r#57
[#102 '+']: r#57
[#102 ',']: r#57
[#102 '-']: r#57
[#102 '.']: r#57
[#102 '/']: r#57
[#102 ':']: r#57
[#102 ';']: r#57
[#102 '==']: r#57
[#102 '@']: r#57
[#102 '[']: r#57
[#102 ']']: r#57
[#102 '^']: r#57
[#102 '{']: r#57
[#102 '|']: r#57
[#102 '||']: r#57
[#102 /\u200B_greater_than/]: r#57
[#102 /\u200B_greater_than_equal/]: r#57
[#102 /\u200B_less_than/]: r#57
[#102 /\u200B_less_than_equal/]: r#57
[#102 /\u200B_shift_left/]: r#57
[#102 /\u200B_shift_right/]: r#57
[#102 /\u200B_template_args_end/]: r#57
[#103 '!=']: r#58
[#103 '%']: r#58
[#103 '&&']: r#58
[#103 '&']: r#58
[#103 ')']: r#58
[#103 '*']: r#58
[#103 '+']: r#58
[#103 ',']: r#58
[#103 '-']: r#58
[#103 '.']: r#58
[#103 '/']: r#58
[#103 ':']: r#58
[#103 ';']: r#58
[#103 '==']: r#58
[#103 '@']: r#58
[#103 '[']: r#58
[#103 ']']: r#58
[#103 '^']: r#58
[#103 '{']: r#58
[#103 '|']: r#58
[#103 '||']: r#58
[#103 /\u200B_greater_than/]: r#58
[#103 /\u200B_greater_than_equal/]: r#58
[#103 /\u200B_less_than/]: r#58
[#103 /\u200B_less_than_equal/]: r#58
[#103 /\u200B_shift_left/]: r#58
[#103 /\u200B_shift_right/]: r#58
[#103 /\u200B_template_args_end/]: r#58
[#104 '!=']: r#59
[#104 '%']: r#59
[#104 '&&']: r#59
[#104 '&']: r#59
[#104 ')']: r#59
[#104 '*']: r#59
[#104 '+']: r#59
[#104 ',']: r#59
[#104 '-']: r#59
[#104 '.']: r#59
[#104 '/']: r#59
[#104 ':']: r#59
[#104 ';']: r#59
[#104 '==']: r#59
[#104 '@']: r#59
[#104 '[']: r#59
[#104 ']']: r#59
[#104 '^']: r#59
[#104 '{']: r#59
[#104 '|']: r#59
[#104 '||']: r#59
[#104 /\u200B_greater_than/]: r#59
[#104 /\u200B_greater_than_equal/]: r#59
[#104 /\u200B_less_than/]: r#59
[#104 /\u200B_less_than_equal/]: r#59
[#104 /\u200B_shift_left/]: r#59
[#104 /\u200B_shift_right/]: r#59
[#104 /\u200B_template_args_end/]: r#59
[#105 '!=']: r#60
[#105 '%']: r#60
[#105 '&&']: r#60
[#105 '&']: r#60
[#105 ')']: r#60
[#105 '*']: r#60
[#105 '+']: r#60
[#105 ',']: r#60
[#105 '-']: r#60
[#105 '.']: r#60
[#105 '/']: r#60
[#105 ':']: r#60
[#105 ';']: r#60
[#105 '==']: r#60
[#105 '@']: r#60
[#105 '[']: r#60
[#105 ']']: r#60
[#105 '^']: r#60
[#105 '{']: r#60
[#105 '|']: r#60
[#105 '||']: r#60
[#105 /\u200B_greater_than/]: r#60
[#105 /\u200B_greater_than_equal/]: r#60
[#105 /\u200B_less_than/]: r#60
[#105 /\u200B_less_than_equal/]: r#60
[#105 /\u200B_shift_left/]: r#60
[#105 /\u200B_shift_right/]: r#60
[#105 /\u200B_template_args_end/]: r#60
[#106 '!=']: r#61
[#106 '%']: r#61
[#106 '&&']: r#61
[#106 '&']: r#61
[#106 ')']: r#61
[#106 '*']: r#61
[#106 '+']: r#61
[#106 ',']: r#61
[#106 '-']: r#61
[#106 '.']: r#61
[#106 '/']: r#61
[#106 ':']: r#61
[#106 ';']: r#61
[#106 '==']: r#61
[#106 '@']: r#61
[#106 '[']: r#61
[#106 ']']: r#61
[#106 '^']: r#61
[#106 '{']: r#61
[#106 '|']: r#61
[#106 '||']: r#61
[#106 /\u200B_greater_than/]: r#61
[#106 /\u200B_greater_than_equal/]: r#61
[#106 /\u200B_less_than/]: r#61
[#106 /\u200B_less_than_equal/]: r#61
[#106 /\u200B_shift_left/]: r#61
[#106 /\u200B_shift_right/]: r#61
[#106 /\u200B_template_args_end/]: r#61
[#107 '@']: s#40
[#108 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#109 '{']: s#148
[#110 '=']: s#146
[#111 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#112 '=']: s#144
[#113 ':']: s#143
[#114 '=']: s#141
[#115 /\u200B_disambiguate_template/]: s#139
[#116 ';']: r#62
[#116 '@']: r#62
[#116 'alias']: r#62
[#116 'const']: r#62
[#116 'const_assert']: r#62
[#116 'fn']: r#62
[#116 'override']: r#62
[#116 'struct']: r#62
[#116 'var']: r#62
[#116 EndOfText]: r#62
[#117 ';']: r#63
[#117 '@']: r#63
[#117 'alias']: r#63
[#117 'const']: r#63
[#117 'const_assert']: r#63
[#117 'fn']: r#63
[#117 'override']: r#63
[#117 'struct']: r#63
[#117 'var']: r#63
[#117 EndOfText]: r#63
[#118 ';']: r#64
[#118 '@']: r#64
[#118 'alias']: r#64
[#118 'const']: r#64
[#118 'const_assert']: r#64
[#118 'fn']: r#64
[#118 'override']: r#64
[#118 'struct']: r#64
[#118 'var']: r#64
[#118 EndOfText]: r#64
[#119 ';']: r#65
[#119 '@']: r#65
[#119 'alias']: r#65
[#119 'const']: r#65
[#119 'const_assert']: r#65
[#119 'fn']: r#65
[#119 'override']: r#65
[#119 'struct']: r#65
[#119 'var']: r#65
[#119 EndOfText]: r#65
[#120 EndOfText]: r#66
[#121 ',']: s#137
[#122 ',']: r#67
[#123 ',']: r#68
[#124 ',']: r#69
[#125 ',']: r#70
[#126 ';']: r#71
[#126 '@']: r#71
[#126 'alias']: r#71
[#126 'const']: r#71
[#126 'const_assert']: r#71
[#126 'diagnostic']: r#71
[#126 'enable']: r#71
[#126 'fn']: r#71
[#126 'override']: r#71
[#126 'requires']: r#71
[#126 'struct']: r#71
[#126 'var']: r#71
[#126 EndOfText]: r#71
[#127 ';']: r#72
[#127 '@']: r#72
[#127 'alias']: r#72
[#127 'const']: r#72
[#127 'const_assert']: r#72
[#127 'diagnostic']: r#72
[#127 'enable']: r#72
[#127 'fn']: r#72
[#127 'override']: r#72
[#127 'requires']: r#72
[#127 'struct']: r#72
[#127 'var']: r#72
[#127 EndOfText]: r#72
[#128 ',']: s#136
[#129 ',']: r#73
[#129 ';']: r#73
[#130 ',']: s#131
[#131 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#13
[#132 ';']: r#74
[#132 '@']: r#74
[#132 'alias']: r#74
[#132 'const']: r#74
[#132 'const_assert']: r#74
[#132 'diagnostic']: r#74
[#132 'enable']: r#74
[#132 'fn']: r#74
[#132 'override']: r#74
[#132 'requires']: r#74
[#132 'struct']: r#74
[#132 'var']: r#74
[#132 EndOfText]: r#74
[#133 ',']: r#75
[#133 ';']: r#75
[#134 ',']: r#76
[#134 ';']: r#76
[#135 ';']: r#77
[#136 ';']: r#78
[#137 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#267
[#138 /\u200B_template_args_start/]: s#248
[#139 '!=']: r#79
[#139 '%']: r#79
[#139 '%=']: r#79
[#139 '&&']: r#79
[#139 '&']: r#79
[#139 '&=']: r#79
[#139 '(']: r#79
[#139 ')']: r#79
[#139 '*']: r#79
[#139 '*=']: r#79
[#139 '+']: r#79
[#139 '++']: r#79
[#139 '+=']: r#79
[#139 ',']: r#79
[#139 '-']: r#79
[#139 '--']: r#79
[#139 '-=']: r#79
[#139 '.']: r#79
[#139 '/']: r#79
[#139 '/=']: r#79
[#139 ':']: r#79
[#139 ';']: r#79
[#139 '=']: r#79
[#139 '==']: r#79
[#139 '@']: r#79
[#139 '[']: r#79
[#139 ']']: r#79
[#139 '^']: r#79
[#139 '^=']: r#79
[#139 '{']: r#79
[#139 '|']: r#79
[#139 '|=']: r#79
[#139 '||']: r#79
[#139 '}']: r#79
[#139 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#79
[#139 /\u200B_disambiguate_template/]: r#79
[#139 /\u200B_greater_than/]: r#79
[#139 /\u200B_greater_than_equal/]: r#79
[#139 /\u200B_less_than/]: r#79
[#139 /\u200B_less_than_equal/]: r#79
[#139 /\u200B_shift_left/]: r#79
[#139 /\u200B_shift_left_assign/]: r#79
[#139 /\u200B_shift_right/]: r#79
[#139 /\u200B_shift_right_assign/]: r#79
[#139 /\u200B_template_args_end/]: r#79
[#139 /\u200B_template_args_start/]: r#79
[#140 ';']: r#80
[#141 '!']: s#74
[#141 '&']: s#77
[#141 '(']: s#87
[#141 '*']: s#76
[#141 '-']: s#73
[#141 'false']: s#94
[#141 'true']: s#93
[#141 '~']: s#75
[#141 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#141 /0[fh]/]: s#99
[#141 /0[iu]?/]: s#96
[#141 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#141 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#141 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#141 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#141 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#141 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#141 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#141 /[1-9][0-9]*[fh]/]: s#100
[#141 /[1-9][0-9]*[iu]?/]: s#97
[#142 ';']: r#81
[#142 '=']: r#81
[#143 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#144 '!']: s#74
[#144 '&']: s#77
[#144 '(']: s#87
[#144 '*']: s#76
[#144 '-']: s#73
[#144 'false']: s#94
[#144 'true']: s#93
[#144 '~']: s#75
[#144 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#144 /0[fh]/]: s#99
[#144 /0[iu]?/]: s#96
[#144 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#144 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#144 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#144 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#144 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#144 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#144 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#144 /[1-9][0-9]*[fh]/]: s#100
[#144 /[1-9][0-9]*[iu]?/]: s#97
[#145 '=']: s#260
[#146 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#147 ';']: r#82
[#147 '@']: r#82
[#147 'alias']: r#82
[#147 'const']: r#82
[#147 'const_assert']: r#82
[#147 'fn']: r#82
[#147 'override']: r#82
[#147 'struct']: r#82
[#147 'var']: r#82
[#147 EndOfText]: r#82
[#148 '@']: s#40
[#149 '(']: s#252
[#150 ';']: r#83
[#150 '@']: r#83
[#150 'alias']: r#83
[#150 'const']: r#83
[#150 'const_assert']: r#83
[#150 'fn']: r#83
[#150 'override']: r#83
[#150 'struct']: r#83
[#150 'var']: r#83
[#150 EndOfText]: r#83
[#151 '{']: s#251
[#152 '{']: r#84
[#153 '@']: s#40
[#154 '(']: r#85
[#154 ':']: r#85
[#154 ';']: r#85
[#154 '=']: r#85
[#154 '{']: r#85
[#154 /\u200B_disambiguate_template/]: r#85
[#155 ')']: s#249
[#156 /\u200B_template_args_start/]: s#248
[#157 '!=']: r#86
[#157 '%']: r#86
[#157 '&&']: r#86
[#157 '&']: r#86
[#157 ')']: r#86
[#157 '*']: r#86
[#157 '+']: r#86
[#157 ',']: r#86
[#157 '-']: r#86
[#157 '.']: r#86
[#157 '/']: r#86
[#157 ':']: r#86
[#157 ';']: r#86
[#157 '==']: r#86
[#157 '@']: r#86
[#157 '[']: r#86
[#157 ']']: r#86
[#157 '^']: r#86
[#157 '{']: r#86
[#157 '|']: r#86
[#157 '||']: r#86
[#157 /\u200B_greater_than/]: r#86
[#157 /\u200B_greater_than_equal/]: r#86
[#157 /\u200B_less_than/]: r#86
[#157 /\u200B_less_than_equal/]: r#86
[#157 /\u200B_shift_left/]: r#86
[#157 /\u200B_shift_right/]: r#86
[#157 /\u200B_template_args_end/]: r#86
[#158 '!']: s#74
[#158 '&']: s#77
[#158 '(']: s#87
[#158 '*']: s#76
[#158 '-']: s#73
[#158 'false']: s#94
[#158 'true']: s#93
[#158 '~']: s#75
[#158 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#158 /0[fh]/]: s#99
[#158 /0[iu]?/]: s#96
[#158 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#158 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#158 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#158 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#158 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#158 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#158 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#158 /[1-9][0-9]*[fh]/]: s#100
[#158 /[1-9][0-9]*[iu]?/]: s#97
[#159 '!=']: r#87
[#159 '%']: r#87
[#159 '&&']: r#87
[#159 '&']: r#87
[#159 ')']: r#87
[#159 '*']: r#87
[#159 '+']: r#87
[#159 ',']: r#87
[#159 '-']: r#87
[#159 '/']: r#87
[#159 ':']: r#87
[#159 ';']: r#87
[#159 '==']: r#87
[#159 '@']: r#87
[#159 ']']: r#87
[#159 '^']: r#87
[#159 '{']: r#87
[#159 '|']: r#87
[#159 '||']: r#87
[#159 /\u200B_greater_than/]: r#87
[#159 /\u200B_greater_than_equal/]: r#87
[#159 /\u200B_less_than/]: r#87
[#159 /\u200B_less_than_equal/]: r#87
[#159 /\u200B_shift_left/]: r#87
[#159 /\u200B_shift_right/]: r#87
[#159 /\u200B_template_args_end/]: r#87
[#160 '!=']: r#88
[#160 '%']: r#88
[#160 '&&']: r#88
[#160 '&']: r#88
[#160 ')']: r#88
[#160 '*']: r#88
[#160 '+']: r#88
[#160 ',']: r#88
[#160 '-']: r#88
[#160 '/']: r#88
[#160 ':']: r#88
[#160 ';']: r#88
[#160 '==']: r#88
[#160 '@']: r#88
[#160 ']']: r#88
[#160 '^']: r#88
[#160 '{']: r#88
[#160 '|']: r#88
[#160 '||']: r#88
[#160 /\u200B_greater_than/]: r#88
[#160 /\u200B_greater_than_equal/]: r#88
[#160 /\u200B_less_than/]: r#88
[#160 /\u200B_less_than_equal/]: r#88
[#160 /\u200B_shift_left/]: r#88
[#160 /\u200B_shift_right/]: r#88
[#160 /\u200B_template_args_end/]: r#88
[#161 '!']: s#74
[#161 '&']: s#77
[#161 '(']: s#87
[#161 '*']: s#76
[#161 '-']: s#73
[#161 'false']: s#94
[#161 'true']: s#93
[#161 '~']: s#75
[#161 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#161 /0[fh]/]: s#99
[#161 /0[iu]?/]: s#96
[#161 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#161 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#161 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#161 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#161 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#161 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#161 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#161 /[1-9][0-9]*[fh]/]: s#100
[#161 /[1-9][0-9]*[iu]?/]: s#97
[#162 '/[rgba]/']: s#233
[#162 '/[rgba][rgba]/']: s#234
[#162 '/[rgba][rgba][rgba]/']: s#235
[#162 '/[rgba][rgba][rgba][rgba]/']: s#236
[#162 '/[xyzw]/']: s#237
[#162 '/[xyzw][xyzw]/']: s#238
[#162 '/[xyzw][xyzw][xyzw]/']: s#239
[#162 '/[xyzw][xyzw][xyzw][xyzw]/']: s#240
[#162 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#232
[#163 '!=']: r#89
[#163 '%']: r#89
[#163 '&&']: r#89
[#163 '&']: r#89
[#163 ')']: r#89
[#163 '*']: r#89
[#163 '+']: r#89
[#163 ',']: r#89
[#163 '-']: r#89
[#163 '/']: r#89
[#163 ':']: r#89
[#163 ';']: r#89
[#163 '==']: r#89
[#163 '@']: r#89
[#163 ']']: r#89
[#163 '^']: r#89
[#163 '{']: r#89
[#163 '|']: r#89
[#163 '||']: r#89
[#163 /\u200B_greater_than/]: r#89
[#163 /\u200B_greater_than_equal/]: r#89
[#163 /\u200B_less_than/]: r#89
[#163 /\u200B_less_than_equal/]: r#89
[#163 /\u200B_shift_left/]: r#89
[#163 /\u200B_shift_right/]: r#89
[#163 /\u200B_template_args_end/]: r#89
[#164 '!=']: r#90
[#164 '%']: r#90
[#164 '&&']: r#90
[#164 '&']: r#90
[#164 ')']: r#90
[#164 '*']: r#90
[#164 '+']: r#90
[#164 ',']: r#90
[#164 '-']: r#90
[#164 '/']: r#90
[#164 ':']: r#90
[#164 ';']: r#90
[#164 '==']: r#90
[#164 '@']: r#90
[#164 ']']: r#90
[#164 '^']: r#90
[#164 '{']: r#90
[#164 '|']: r#90
[#164 '||']: r#90
[#164 /\u200B_greater_than/]: r#90
[#164 /\u200B_greater_than_equal/]: r#90
[#164 /\u200B_less_than/]: r#90
[#164 /\u200B_less_than_equal/]: r#90
[#164 /\u200B_shift_left/]: r#90
[#164 /\u200B_shift_right/]: r#90
[#164 /\u200B_template_args_end/]: r#90
[#165 '!=']: r#91
[#165 '%']: r#91
[#165 '&&']: r#91
[#165 '&']: r#91
[#165 ')']: r#91
[#165 '*']: r#91
[#165 '+']: r#91
[#165 ',']: r#91
[#165 '-']: r#91
[#165 '/']: r#91
[#165 ':']: r#91
[#165 ';']: r#91
[#165 '==']: r#91
[#165 '@']: r#91
[#165 ']']: r#91
[#165 '^']: r#91
[#165 '{']: r#91
[#165 '|']: r#91
[#165 '||']: r#91
[#165 /\u200B_greater_than/]: r#91
[#165 /\u200B_greater_than_equal/]: r#91
[#165 /\u200B_less_than/]: r#91
[#165 /\u200B_less_than_equal/]: r#91
[#165 /\u200B_shift_left/]: r#91
[#165 /\u200B_shift_right/]: r#91
[#165 /\u200B_template_args_end/]: r#91
[#166 '!=']: r#92
[#166 '%']: r#92
[#166 '&&']: r#92
[#166 '&']: r#92
[#166 ')']: r#92
[#166 '*']: r#92
[#166 '+']: r#92
[#166 ',']: r#92
[#166 '-']: r#92
[#166 '/']: r#92
[#166 ':']: r#92
[#166 ';']: r#92
[#166 '==']: r#92
[#166 '@']: r#92
[#166 ']']: r#92
[#166 '^']: r#92
[#166 '{']: r#92
[#166 '|']: r#92
[#166 '||']: r#92
[#166 /\u200B_greater_than/]: r#92
[#166 /\u200B_greater_than_equal/]: r#92
[#166 /\u200B_less_than/]: r#92
[#166 /\u200B_less_than_equal/]: r#92
[#166 /\u200B_shift_left/]: r#92
[#166 /\u200B_shift_right/]: r#92
[#166 /\u200B_template_args_end/]: r#92
[#167 '!=']: r#93
[#167 '%']: r#93
[#167 '&&']: r#93
[#167 '&']: r#93
[#167 ')']: r#93
[#167 '*']: r#93
[#167 '+']: r#93
[#167 ',']: r#93
[#167 '-']: r#93
[#167 '/']: r#93
[#167 ':']: r#93
[#167 ';']: r#93
[#167 '==']: r#93
[#167 '@']: r#93
[#167 ']']: r#93
[#167 '^']: r#93
[#167 '{']: r#93
[#167 '|']: r#93
[#167 '||']: r#93
[#167 /\u200B_greater_than/]: r#93
[#167 /\u200B_greater_than_equal/]: r#93
[#167 /\u200B_less_than/]: r#93
[#167 /\u200B_less_than_equal/]: r#93
[#167 /\u200B_shift_left/]: r#93
[#167 /\u200B_shift_right/]: r#93
[#167 /\u200B_template_args_end/]: r#93
[#168 '!']: s#74
[#168 '&']: s#77
[#168 '(']: s#87
[#168 '*']: s#76
[#168 '-']: s#73
[#168 'false']: s#94
[#168 'true']: s#93
[#168 '~']: s#75
[#168 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#168 /0[fh]/]: s#99
[#168 /0[iu]?/]: s#96
[#168 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#168 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#168 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#168 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#168 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#168 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#168 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#168 /[1-9][0-9]*[fh]/]: s#100
[#168 /[1-9][0-9]*[iu]?/]: s#97
[#169 '!']: r#94
[#169 '&']: r#94
[#169 '(']: r#94
[#169 '*']: r#94
[#169 '-']: r#94
[#169 'false']: r#94
[#169 'true']: r#94
[#169 '~']: r#94
[#169 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#94
[#169 /0[fh]/]: r#94
[#169 /0[iu]?/]: r#94
[#169 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#94
[#169 /0[xX][0-9a-fA-F]+[iu]?/]: r#94
[#169 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#94
[#169 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#94
[#169 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#94
[#169 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#94
[#169 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#94
[#169 /[1-9][0-9]*[fh]/]: r#94
[#169 /[1-9][0-9]*[iu]?/]: r#94
[#170 '!']: r#95
[#170 '&']: r#95
[#170 '(']: r#95
[#170 '*']: r#95
[#170 '-']: r#95
[#170 'false']: r#95
[#170 'true']: r#95
[#170 '~']: r#95
[#170 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#95
[#170 /0[fh]/]: r#95
[#170 /0[iu]?/]: r#95
[#170 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#95
[#170 /0[xX][0-9a-fA-F]+[iu]?/]: r#95
[#170 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#95
[#170 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#95
[#170 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#95
[#170 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#95
[#170 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#95
[#170 /[1-9][0-9]*[fh]/]: r#95
[#170 /[1-9][0-9]*[iu]?/]: r#95
[#171 '!']: r#96
[#171 '&']: r#96
[#171 '(']: r#96
[#171 '*']: r#96
[#171 '-']: r#96
[#171 'false']: r#96
[#171 'true']: r#96
[#171 '~']: r#96
[#171 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#96
[#171 /0[fh]/]: r#96
[#171 /0[iu]?/]: r#96
[#171 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#96
[#171 /0[xX][0-9a-fA-F]+[iu]?/]: r#96
[#171 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#96
[#171 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#96
[#171 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#96
[#171 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#96
[#171 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#96
[#171 /[1-9][0-9]*[fh]/]: r#96
[#171 /[1-9][0-9]*[iu]?/]: r#96
[#172 '!']: s#74
[#172 '&']: s#77
[#172 '(']: s#87
[#172 '*']: s#76
[#172 '-']: s#73
[#172 'false']: s#94
[#172 'true']: s#93
[#172 '~']: s#75
[#172 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#172 /0[fh]/]: s#99
[#172 /0[iu]?/]: s#96
[#172 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#172 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#172 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#172 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#172 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#172 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#172 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#172 /[1-9][0-9]*[fh]/]: s#100
[#172 /[1-9][0-9]*[iu]?/]: s#97
[#173 '!']: s#74
[#173 '&']: s#77
[#173 '(']: s#87
[#173 '*']: s#76
[#173 '-']: s#73
[#173 'false']: s#94
[#173 'true']: s#93
[#173 '~']: s#75
[#173 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#173 /0[fh]/]: s#99
[#173 /0[iu]?/]: s#96
[#173 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#173 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#173 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#173 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#173 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#173 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#173 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#173 /[1-9][0-9]*[fh]/]: s#100
[#173 /[1-9][0-9]*[iu]?/]: s#97
[#174 '!']: r#97
[#174 '&']: r#97
[#174 '(']: r#97
[#174 '*']: r#97
[#174 '-']: r#97
[#174 'false']: r#97
[#174 'true']: r#97
[#174 '~']: r#97
[#174 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#97
[#174 /0[fh]/]: r#97
[#174 /0[iu]?/]: r#97
[#174 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#97
[#174 /0[xX][0-9a-fA-F]+[iu]?/]: r#97
[#174 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#97
[#174 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#97
[#174 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#97
[#174 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#97
[#174 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#97
[#174 /[1-9][0-9]*[fh]/]: r#97
[#174 /[1-9][0-9]*[iu]?/]: r#97
[#175 '!']: r#98
[#175 '&']: r#98
[#175 '(']: r#98
[#175 '*']: r#98
[#175 '-']: r#98
[#175 'false']: r#98
[#175 'true']: r#98
[#175 '~']: r#98
[#175 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#98
[#175 /0[fh]/]: r#98
[#175 /0[iu]?/]: r#98
[#175 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#98
[#175 /0[xX][0-9a-fA-F]+[iu]?/]: r#98
[#175 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#98
[#175 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#98
[#175 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#98
[#175 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#98
[#175 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#98
[#175 /[1-9][0-9]*[fh]/]: r#98
[#175 /[1-9][0-9]*[iu]?/]: r#98
[#176 '!']: s#74
[#176 '&']: s#77
[#176 '(']: s#87
[#176 '*']: s#76
[#176 '-']: s#73
[#176 'false']: s#94
[#176 'true']: s#93
[#176 '~']: s#75
[#176 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#176 /0[fh]/]: s#99
[#176 /0[iu]?/]: s#96
[#176 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#176 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#176 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#176 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#176 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#176 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#176 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#176 /[1-9][0-9]*[fh]/]: s#100
[#176 /[1-9][0-9]*[iu]?/]: s#97
[#177 '!']: r#99
[#177 '&']: r#99
[#177 '(']: r#99
[#177 '*']: r#99
[#177 '-']: r#99
[#177 'false']: r#99
[#177 'true']: r#99
[#177 '~']: r#99
[#177 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#99
[#177 /0[fh]/]: r#99
[#177 /0[iu]?/]: r#99
[#177 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#99
[#177 /0[xX][0-9a-fA-F]+[iu]?/]: r#99
[#177 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#99
[#177 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#99
[#177 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#99
[#177 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#99
[#177 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#99
[#177 /[1-9][0-9]*[fh]/]: r#99
[#177 /[1-9][0-9]*[iu]?/]: r#99
[#178 '!']: r#100
[#178 '&']: r#100
[#178 '(']: r#100
[#178 '*']: r#100
[#178 '-']: r#100
[#178 'false']: r#100
[#178 'true']: r#100
[#178 '~']: r#100
[#178 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#100
[#178 /0[fh]/]: r#100
[#178 /0[iu]?/]: r#100
[#178 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#100
[#178 /0[xX][0-9a-fA-F]+[iu]?/]: r#100
[#178 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#100
[#178 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#100
[#178 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#100
[#178 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#100
[#178 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#100
[#178 /[1-9][0-9]*[fh]/]: r#100
[#178 /[1-9][0-9]*[iu]?/]: r#100
[#179 '!']: s#74
[#179 '&']: s#77
[#179 '(']: s#87
[#179 '*']: s#76
[#179 '-']: s#73
[#179 'false']: s#94
[#179 'true']: s#93
[#179 '~']: s#75
[#179 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#179 /0[fh]/]: s#99
[#179 /0[iu]?/]: s#96
[#179 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#179 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#179 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#179 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#179 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#179 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#179 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#179 /[1-9][0-9]*[fh]/]: s#100
[#179 /[1-9][0-9]*[iu]?/]: s#97
[#180 '!']: s#74
[#180 '&']: s#77
[#180 '(']: s#87
[#180 '*']: s#76
[#180 '-']: s#73
[#180 'false']: s#94
[#180 'true']: s#93
[#180 '~']: s#75
[#180 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#180 /0[fh]/]: s#99
[#180 /0[iu]?/]: s#96
[#180 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#180 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#180 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#180 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#180 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#180 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#180 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#180 /[1-9][0-9]*[fh]/]: s#100
[#180 /[1-9][0-9]*[iu]?/]: s#97
[#181 '!']: s#74
[#181 '&']: s#77
[#181 '(']: s#87
[#181 '*']: s#76
[#181 '-']: s#73
[#181 'false']: s#94
[#181 'true']: s#93
[#181 '~']: s#75
[#181 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#181 /0[fh]/]: s#99
[#181 /0[iu]?/]: s#96
[#181 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#181 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#181 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#181 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#181 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#181 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#181 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#181 /[1-9][0-9]*[fh]/]: s#100
[#181 /[1-9][0-9]*[iu]?/]: s#97
[#182 '!']: s#74
[#182 '&']: s#77
[#182 '(']: s#87
[#182 '*']: s#76
[#182 '-']: s#73
[#182 'false']: s#94
[#182 'true']: s#93
[#182 '~']: s#75
[#182 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#182 /0[fh]/]: s#99
[#182 /0[iu]?/]: s#96
[#182 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#182 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#182 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#182 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#182 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#182 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#182 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#182 /[1-9][0-9]*[fh]/]: s#100
[#182 /[1-9][0-9]*[iu]?/]: s#97
[#183 '!']: s#74
[#183 '&']: s#77
[#183 '(']: s#87
[#183 '*']: s#76
[#183 '-']: s#73
[#183 'false']: s#94
[#183 'true']: s#93
[#183 '~']: s#75
[#183 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#183 /0[fh]/]: s#99
[#183 /0[iu]?/]: s#96
[#183 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#183 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#183 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#183 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#183 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#183 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#183 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#183 /[1-9][0-9]*[fh]/]: s#100
[#183 /[1-9][0-9]*[iu]?/]: s#97
[#184 '!']: s#74
[#184 '&']: s#77
[#184 '(']: s#87
[#184 '*']: s#76
[#184 '-']: s#73
[#184 'false']: s#94
[#184 'true']: s#93
[#184 '~']: s#75
[#184 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#184 /0[fh]/]: s#99
[#184 /0[iu]?/]: s#96
[#184 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#184 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#184 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#184 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#184 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#184 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#184 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#184 /[1-9][0-9]*[fh]/]: s#100
[#184 /[1-9][0-9]*[iu]?/]: s#97
[#185 '!']: s#74
[#185 '&']: s#77
[#185 '(']: s#87
[#185 '*']: s#76
[#185 '-']: s#73
[#185 'false']: s#94
[#185 'true']: s#93
[#185 '~']: s#75
[#185 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#185 /0[fh]/]: s#99
[#185 /0[iu]?/]: s#96
[#185 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#185 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#185 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#185 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#185 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#185 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#185 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#185 /[1-9][0-9]*[fh]/]: s#100
[#185 /[1-9][0-9]*[iu]?/]: s#97
[#186 '!']: s#74
[#186 '&']: s#77
[#186 '(']: s#87
[#186 '*']: s#76
[#186 '-']: s#73
[#186 'false']: s#94
[#186 'true']: s#93
[#186 '~']: s#75
[#186 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#186 /0[fh]/]: s#99
[#186 /0[iu]?/]: s#96
[#186 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#186 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#186 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#186 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#186 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#186 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#186 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#186 /[1-9][0-9]*[fh]/]: s#100
[#186 /[1-9][0-9]*[iu]?/]: s#97
[#187 '!']: s#74
[#187 '&']: s#77
[#187 '(']: s#87
[#187 '*']: s#76
[#187 '-']: s#73
[#187 'false']: s#94
[#187 'true']: s#93
[#187 '~']: s#75
[#187 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#187 /0[fh]/]: s#99
[#187 /0[iu]?/]: s#96
[#187 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#187 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#187 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#187 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#187 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#187 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#187 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#187 /[1-9][0-9]*[fh]/]: s#100
[#187 /[1-9][0-9]*[iu]?/]: s#97
[#188 '!']: r#101
[#188 '&']: r#101
[#188 '(']: r#101
[#188 '*']: r#101
[#188 '-']: r#101
[#188 'false']: r#101
[#188 'true']: r#101
[#188 '~']: r#101
[#188 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#101
[#188 /0[fh]/]: r#101
[#188 /0[iu]?/]: r#101
[#188 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#101
[#188 /0[xX][0-9a-fA-F]+[iu]?/]: r#101
[#188 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#101
[#188 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#101
[#188 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#101
[#188 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#101
[#188 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#101
[#188 /[1-9][0-9]*[fh]/]: r#101
[#188 /[1-9][0-9]*[iu]?/]: r#101
[#189 '!']: r#102
[#189 '&']: r#102
[#189 '(']: r#102
[#189 '*']: r#102
[#189 '-']: r#102
[#189 'false']: r#102
[#189 'true']: r#102
[#189 '~']: r#102
[#189 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#102
[#189 /0[fh]/]: r#102
[#189 /0[iu]?/]: r#102
[#189 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#102
[#189 /0[xX][0-9a-fA-F]+[iu]?/]: r#102
[#189 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#102
[#189 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#102
[#189 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#102
[#189 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#102
[#189 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#102
[#189 /[1-9][0-9]*[fh]/]: r#102
[#189 /[1-9][0-9]*[iu]?/]: r#102
[#190 '!']: r#103
[#190 '&']: r#103
[#190 '(']: r#103
[#190 '*']: r#103
[#190 '-']: r#103
[#190 'false']: r#103
[#190 'true']: r#103
[#190 '~']: r#103
[#190 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#103
[#190 /0[fh]/]: r#103
[#190 /0[iu]?/]: r#103
[#190 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#103
[#190 /0[xX][0-9a-fA-F]+[iu]?/]: r#103
[#190 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#103
[#190 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#103
[#190 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#103
[#190 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#103
[#190 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#103
[#190 /[1-9][0-9]*[fh]/]: r#103
[#190 /[1-9][0-9]*[iu]?/]: r#103
[#191 '!']: r#104
[#191 '&']: r#104
[#191 '(']: r#104
[#191 '*']: r#104
[#191 '-']: r#104
[#191 'false']: r#104
[#191 'true']: r#104
[#191 '~']: r#104
[#191 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#104
[#191 /0[fh]/]: r#104
[#191 /0[iu]?/]: r#104
[#191 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#104
[#191 /0[xX][0-9a-fA-F]+[iu]?/]: r#104
[#191 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#104
[#191 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#104
[#191 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#104
[#191 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#104
[#191 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#104
[#191 /[1-9][0-9]*[fh]/]: r#104
[#191 /[1-9][0-9]*[iu]?/]: r#104
[#192 '!']: s#74
[#192 '&']: s#77
[#192 '(']: s#87
[#192 '*']: s#76
[#192 '-']: s#73
[#192 'false']: s#94
[#192 'true']: s#93
[#192 '~']: s#75
[#192 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#192 /0[fh]/]: s#99
[#192 /0[iu]?/]: s#96
[#192 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#192 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#192 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#192 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#192 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#192 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#192 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#192 /[1-9][0-9]*[fh]/]: s#100
[#192 /[1-9][0-9]*[iu]?/]: s#97
[#193 '!']: s#74
[#193 '&']: s#77
[#193 '(']: s#87
[#193 '*']: s#76
[#193 '-']: s#73
[#193 'false']: s#94
[#193 'true']: s#93
[#193 '~']: s#75
[#193 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#193 /0[fh]/]: s#99
[#193 /0[iu]?/]: s#96
[#193 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#193 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#193 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#193 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#193 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#193 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#193 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#193 /[1-9][0-9]*[fh]/]: s#100
[#193 /[1-9][0-9]*[iu]?/]: s#97
[#194 '!']: s#74
[#194 '&']: s#77
[#194 '(']: s#87
[#194 '*']: s#76
[#194 '-']: s#73
[#194 'false']: s#94
[#194 'true']: s#93
[#194 '~']: s#75
[#194 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#194 /0[fh]/]: s#99
[#194 /0[iu]?/]: s#96
[#194 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#194 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#194 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#194 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#194 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#194 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#194 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#194 /[1-9][0-9]*[fh]/]: s#100
[#194 /[1-9][0-9]*[iu]?/]: s#97
[#195 '!']: s#74
[#195 '&']: s#77
[#195 '(']: s#87
[#195 '*']: s#76
[#195 '-']: s#73
[#195 'false']: s#94
[#195 'true']: s#93
[#195 '~']: s#75
[#195 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#195 /0[fh]/]: s#99
[#195 /0[iu]?/]: s#96
[#195 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#195 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#195 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#195 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#195 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#195 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#195 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#195 /[1-9][0-9]*[fh]/]: s#100
[#195 /[1-9][0-9]*[iu]?/]: s#97
[#196 '!']: s#74
[#196 '&']: s#77
[#196 '(']: s#87
[#196 '*']: s#76
[#196 '-']: s#73
[#196 'false']: s#94
[#196 'true']: s#93
[#196 '~']: s#75
[#196 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#196 /0[fh]/]: s#99
[#196 /0[iu]?/]: s#96
[#196 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#196 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#196 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#196 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#196 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#196 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#196 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#196 /[1-9][0-9]*[fh]/]: s#100
[#196 /[1-9][0-9]*[iu]?/]: s#97
[#197 '!']: s#74
[#197 '&']: s#77
[#197 '(']: s#87
[#197 '*']: s#76
[#197 '-']: s#73
[#197 'false']: s#94
[#197 'true']: s#93
[#197 '~']: s#75
[#197 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#197 /0[fh]/]: s#99
[#197 /0[iu]?/]: s#96
[#197 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#197 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#197 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#197 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#197 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#197 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#197 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#197 /[1-9][0-9]*[fh]/]: s#100
[#197 /[1-9][0-9]*[iu]?/]: s#97
[#198 '!']: s#74
[#198 '&']: s#77
[#198 '(']: s#87
[#198 '*']: s#76
[#198 '-']: s#73
[#198 'false']: s#94
[#198 'true']: s#93
[#198 '~']: s#75
[#198 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#198 /0[fh]/]: s#99
[#198 /0[iu]?/]: s#96
[#198 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#198 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#198 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#198 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#198 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#198 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#198 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#198 /[1-9][0-9]*[fh]/]: s#100
[#198 /[1-9][0-9]*[iu]?/]: s#97
[#199 '!']: s#74
[#199 '&']: s#77
[#199 '(']: s#87
[#199 '*']: s#76
[#199 '-']: s#73
[#199 'false']: s#94
[#199 'true']: s#93
[#199 '~']: s#75
[#199 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#199 /0[fh]/]: s#99
[#199 /0[iu]?/]: s#96
[#199 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#199 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#199 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#199 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#199 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#199 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#199 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#199 /[1-9][0-9]*[fh]/]: s#100
[#199 /[1-9][0-9]*[iu]?/]: s#97
[#200 '@']: r#105
[#200 'fn']: r#105
[#200 'for']: r#105
[#200 'if']: r#105
[#200 'loop']: r#105
[#200 'override']: r#105
[#200 'switch']: r#105
[#200 'var']: r#105
[#200 'while']: r#105
[#200 '{']: r#105
[#200 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#105
[#201 '!']: s#74
[#201 '&']: s#77
[#201 '(']: s#87
[#201 '*']: s#76
[#201 '-']: s#73
[#201 'false']: s#94
[#201 'true']: s#93
[#201 '~']: s#75
[#201 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#201 /0[fh]/]: s#99
[#201 /0[iu]?/]: s#96
[#201 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#201 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#201 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#201 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#201 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#201 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#201 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#201 /[1-9][0-9]*[fh]/]: s#100
[#201 /[1-9][0-9]*[iu]?/]: s#97
[#202 '!']: s#74
[#202 '&']: s#77
[#202 '(']: s#87
[#202 '*']: s#76
[#202 '-']: s#73
[#202 'false']: s#94
[#202 'true']: s#93
[#202 '~']: s#75
[#202 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#202 /0[fh]/]: s#99
[#202 /0[iu]?/]: s#96
[#202 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#202 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#202 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#202 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#202 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#202 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#202 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#202 /[1-9][0-9]*[fh]/]: s#100
[#202 /[1-9][0-9]*[iu]?/]: s#97
[#203 '!']: s#74
[#203 '&']: s#77
[#203 '(']: s#87
[#203 '*']: s#76
[#203 '-']: s#73
[#203 'false']: s#94
[#203 'true']: s#93
[#203 '~']: s#75
[#203 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#203 /0[fh]/]: s#99
[#203 /0[iu]?/]: s#96
[#203 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#203 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#203 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#203 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#203 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#203 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#203 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#203 /[1-9][0-9]*[fh]/]: s#100
[#203 /[1-9][0-9]*[iu]?/]: s#97
[#204 ',']: s#270
[#205 ',']: s#270
[#206 ',']: s#270
[#207 ',']: s#270
[#208 ',']: s#270
[#209 ',']: s#353
[#210 ',']: s#270
[#211 ',']: s#270
[#212 ',']: s#349
[#213 ')']: r#106
[#213 ',']: r#106
[#213 ':']: r#106
[#213 ';']: r#106
[#213 '@']: r#106
[#213 ']']: r#106
[#213 '{']: r#106
[#213 '||']: r#107
[#214 '!=']: r#34
[#214 '%']: r#34
[#214 '&&']: r#34
[#214 ')']: r#34
[#214 '*']: r#34
[#214 '+']: r#34
[#214 ',']: r#34
[#214 '-']: r#34
[#214 '/']: r#34
[#214 ':']: r#34
[#214 ';']: r#34
[#214 '==']: r#34
[#214 '@']: r#34
[#214 ']']: r#34
[#214 '{']: r#34
[#214 '||']: r#34
[#214 /\u200B_greater_than/]: r#34
[#214 /\u200B_greater_than_equal/]: r#34
[#214 /\u200B_less_than/]: r#34
[#214 /\u200B_less_than_equal/]: r#34
[#214 /\u200B_shift_left/]: s#174
[#214 /\u200B_shift_right/]: s#175
[#214 /\u200B_template_args_end/]: r#34
[#215 '&&']: r#109
[#215 ')']: r#108
[#215 ',']: r#108
[#215 ':']: r#108
[#215 ';']: r#108
[#215 '@']: r#108
[#215 ']']: r#108
[#215 '{']: r#108
[#216 '&&']: r#110
[#216 ')']: r#110
[#216 ',']: r#110
[#216 ':']: r#110
[#216 ';']: r#110
[#216 '@']: r#110
[#216 ']']: r#110
[#216 '{']: r#110
[#216 '||']: r#110
[#216 /\u200B_template_args_end/]: r#110
[#217 '&&']: r#111
[#217 ')']: r#111
[#217 ',']: r#111
[#217 ':']: r#111
[#217 ';']: r#111
[#217 '@']: r#111
[#217 ']']: r#111
[#217 '{']: r#111
[#217 '||']: r#111
[#217 /\u200B_template_args_end/]: r#111
[#218 '&&']: r#112
[#218 ')']: r#112
[#218 ',']: r#112
[#218 ':']: r#112
[#218 ';']: r#112
[#218 '@']: r#112
[#218 ']']: r#112
[#218 '{']: r#112
[#218 '||']: r#112
[#218 /\u200B_template_args_end/]: r#112
[#219 '&&']: r#113
[#219 ')']: r#113
[#219 ',']: r#113
[#219 ':']: r#113
[#219 ';']: r#113
[#219 '@']: r#113
[#219 ']']: r#113
[#219 '{']: r#113
[#219 '||']: r#113
[#219 /\u200B_template_args_end/]: r#113
[#220 '&&']: r#114
[#220 ')']: r#114
[#220 ',']: r#114
[#220 ':']: r#114
[#220 ';']: r#114
[#220 '@']: r#114
[#220 ']']: r#114
[#220 '{']: r#114
[#220 '||']: r#114
[#220 /\u200B_template_args_end/]: r#114
[#221 '&&']: r#115
[#221 ')']: r#115
[#221 ',']: r#115
[#221 ':']: r#115
[#221 ';']: r#115
[#221 '@']: r#115
[#221 ']']: r#115
[#221 '{']: r#115
[#221 '||']: r#115
[#221 /\u200B_template_args_end/]: r#115
[#222 '&']: r#117
[#222 ')']: r#116
[#222 ',']: r#116
[#222 ':']: r#116
[#222 ';']: r#116
[#222 '@']: r#116
[#222 ']']: r#116
[#222 '{']: r#116
[#222 /\u200B_template_args_end/]: r#116
[#223 ')']: r#118
[#223 ',']: r#118
[#223 ':']: r#118
[#223 ';']: r#118
[#223 '@']: r#118
[#223 ']']: r#118
[#223 '{']: r#118
[#223 '|']: r#119
[#223 /\u200B_template_args_end/]: r#118
[#224 ')']: r#120
[#224 ',']: r#120
[#224 ':']: r#120
[#224 ';']: r#120
[#224 '@']: r#120
[#224 ']']: r#120
[#224 '^']: r#121
[#224 '{']: r#120
[#224 /\u200B_template_args_end/]: r#120
[#225 '!=']: r#122
[#225 '%']: s#171
[#225 '&&']: r#122
[#225 ')']: r#122
[#225 '*']: s#169
[#225 '+']: r#122
[#225 ',']: r#122
[#225 '-']: r#122
[#225 '/']: s#170
[#225 ':']: r#122
[#225 ';']: r#122
[#225 '==']: r#122
[#225 '@']: r#122
[#225 ']']: r#122
[#225 '{']: r#122
[#225 '||']: r#122
[#225 /\u200B_greater_than/]: r#122
[#225 /\u200B_greater_than_equal/]: r#122
[#225 /\u200B_less_than/]: r#122
[#225 /\u200B_less_than_equal/]: r#122
[#225 /\u200B_template_args_end/]: r#122
[#226 '!=']: r#34
[#226 '%']: r#34
[#226 '&&']: r#34
[#226 ')']: r#34
[#226 '*']: r#34
[#226 '+']: r#34
[#226 ',']: r#34
[#226 '-']: r#34
[#226 '/']: r#34
[#226 ':']: r#34
[#226 ';']: r#34
[#226 '==']: r#34
[#226 '@']: r#34
[#226 ']']: r#34
[#226 '{']: r#34
[#226 '||']: r#34
[#226 /\u200B_greater_than/]: r#34
[#226 /\u200B_greater_than_equal/]: r#34
[#226 /\u200B_less_than/]: r#34
[#226 /\u200B_less_than_equal/]: r#34
[#226 /\u200B_template_args_end/]: r#34
[#227 '!=']: r#123
[#227 '&&']: r#123
[#227 ')']: r#123
[#227 ',']: r#123
[#227 ':']: r#123
[#227 ';']: r#123
[#227 '==']: r#123
[#227 '@']: r#123
[#227 ']']: r#123
[#227 '{']: r#123
[#227 '||']: r#123
[#227 /\u200B_greater_than/]: r#123
[#227 /\u200B_greater_than_equal/]: r#123
[#227 /\u200B_less_than/]: r#123
[#227 /\u200B_less_than_equal/]: r#123
[#227 /\u200B_template_args_end/]: r#123
[#228 '!=']: r#124
[#228 '&&']: r#124
[#228 ')']: r#124
[#228 ',']: r#124
[#228 ':']: r#124
[#228 ';']: r#124
[#228 '==']: r#124
[#228 '@']: r#124
[#228 ']']: r#124
[#228 '{']: r#124
[#228 '||']: r#124
[#228 /\u200B_greater_than/]: r#124
[#228 /\u200B_greater_than_equal/]: r#124
[#228 /\u200B_less_than/]: r#124
[#228 /\u200B_less_than_equal/]: r#124
[#228 /\u200B_template_args_end/]: r#124
[#229 '!=']: r#125
[#229 '%']: r#125
[#229 '&&']: r#125
[#229 ')']: r#125
[#229 '*']: r#125
[#229 '+']: r#125
[#229 ',']: r#125
[#229 '-']: r#125
[#229 '/']: r#125
[#229 ':']: r#125
[#229 ';']: r#125
[#229 '==']: r#125
[#229 '@']: r#125
[#229 ']']: r#125
[#229 '{']: r#125
[#229 '||']: r#125
[#229 /\u200B_greater_than/]: r#125
[#229 /\u200B_greater_than_equal/]: r#125
[#229 /\u200B_less_than/]: r#125
[#229 /\u200B_less_than_equal/]: r#125
[#229 /\u200B_template_args_end/]: r#125
[#230 '.']: s#162
[#230 '[']: s#161
[#231 '.']: s#162
[#231 '[']: s#161
[#232 '!=']: r#126
[#232 '%']: r#126
[#232 '%=']: r#126
[#232 '&&']: r#126
[#232 '&']: r#126
[#232 '&=']: r#126
[#232 ')']: r#126
[#232 '*']: r#126
[#232 '*=']: r#126
[#232 '+']: r#126
[#232 '++']: r#126
[#232 '+=']: r#126
[#232 ',']: r#126
[#232 '-']: r#126
[#232 '--']: r#126
[#232 '-=']: r#126
[#232 '.']: r#126
[#232 '/']: r#126
[#232 '/=']: r#126
[#232 ':']: r#126
[#232 ';']: r#126
[#232 '=']: r#126
[#232 '==']: r#126
[#232 '@']: r#126
[#232 '[']: r#126
[#232 ']']: r#126
[#232 '^']: r#126
[#232 '^=']: r#126
[#232 '{']: r#126
[#232 '|']: r#126
[#232 '|=']: r#126
[#232 '||']: r#126
[#232 /\u200B_greater_than/]: r#126
[#232 /\u200B_greater_than_equal/]: r#126
[#232 /\u200B_less_than/]: r#126
[#232 /\u200B_less_than_equal/]: r#126
[#232 /\u200B_shift_left/]: r#126
[#232 /\u200B_shift_left_assign/]: r#126
[#232 /\u200B_shift_right/]: r#126
[#232 /\u200B_shift_right_assign/]: r#126
[#232 /\u200B_template_args_end/]: r#126
[#233 '!=']: r#127
[#233 '%']: r#127
[#233 '%=']: r#127
[#233 '&&']: r#127
[#233 '&']: r#127
[#233 '&=']: r#127
[#233 ')']: r#127
[#233 '*']: r#127
[#233 '*=']: r#127
[#233 '+']: r#127
[#233 '++']: r#127
[#233 '+=']: r#127
[#233 ',']: r#127
[#233 '-']: r#127
[#233 '--']: r#127
[#233 '-=']: r#127
[#233 '.']: r#127
[#233 '/']: r#127
[#233 '/=']: r#127
[#233 ':']: r#127
[#233 ';']: r#127
[#233 '=']: r#127
[#233 '==']: r#127
[#233 '@']: r#127
[#233 '[']: r#127
[#233 ']']: r#127
[#233 '^']: r#127
[#233 '^=']: r#127
[#233 '{']: r#127
[#233 '|']: r#127
[#233 '|=']: r#127
[#233 '||']: r#127
[#233 /\u200B_greater_than/]: r#127
[#233 /\u200B_greater_than_equal/]: r#127
[#233 /\u200B_less_than/]: r#127
[#233 /\u200B_less_than_equal/]: r#127
[#233 /\u200B_shift_left/]: r#127
[#233 /\u200B_shift_left_assign/]: r#127
[#233 /\u200B_shift_right/]: r#127
[#233 /\u200B_shift_right_assign/]: r#127
[#233 /\u200B_template_args_end/]: r#127
[#234 '!=']: r#128
[#234 '%']: r#128
[#234 '%=']: r#128
[#234 '&&']: r#128
[#234 '&']: r#128
[#234 '&=']: r#128
[#234 ')']: r#128
[#234 '*']: r#128
[#234 '*=']: r#128
[#234 '+']: r#128
[#234 '++']: r#128
[#234 '+=']: r#128
[#234 ',']: r#128
[#234 '-']: r#128
[#234 '--']: r#128
[#234 '-=']: r#128
[#234 '.']: r#128
[#234 '/']: r#128
[#234 '/=']: r#128
[#234 ':']: r#128
[#234 ';']: r#128
[#234 '=']: r#128
[#234 '==']: r#128
[#234 '@']: r#128
[#234 '[']: r#128
[#234 ']']: r#128
[#234 '^']: r#128
[#234 '^=']: r#128
[#234 '{']: r#128
[#234 '|']: r#128
[#234 '|=']: r#128
[#234 '||']: r#128
[#234 /\u200B_greater_than/]: r#128
[#234 /\u200B_greater_than_equal/]: r#128
[#234 /\u200B_less_than/]: r#128
[#234 /\u200B_less_than_equal/]: r#128
[#234 /\u200B_shift_left/]: r#128
[#234 /\u200B_shift_left_assign/]: r#128
[#234 /\u200B_shift_right/]: r#128
[#234 /\u200B_shift_right_assign/]: r#128
[#234 /\u200B_template_args_end/]: r#128
[#235 '!=']: r#129
[#235 '%']: r#129
[#235 '%=']: r#129
[#235 '&&']: r#129
[#235 '&']: r#129
[#235 '&=']: r#129
[#235 ')']: r#129
[#235 '*']: r#129
[#235 '*=']: r#129
[#235 '+']: r#129
[#235 '++']: r#129
[#235 '+=']: r#129
[#235 ',']: r#129
[#235 '-']: r#129
[#235 '--']: r#129
[#235 '-=']: r#129
[#235 '.']: r#129
[#235 '/']: r#129
[#235 '/=']: r#129
[#235 ':']: r#129
[#235 ';']: r#129
[#235 '=']: r#129
[#235 '==']: r#129
[#235 '@']: r#129
[#235 '[']: r#129
[#235 ']']: r#129
[#235 '^']: r#129
[#235 '^=']: r#129
[#235 '{']: r#129
[#235 '|']: r#129
[#235 '|=']: r#129
[#235 '||']: r#129
[#235 /\u200B_greater_than/]: r#129
[#235 /\u200B_greater_than_equal/]: r#129
[#235 /\u200B_less_than/]: r#129
[#235 /\u200B_less_than_equal/]: r#129
[#235 /\u200B_shift_left/]: r#129
[#235 /\u200B_shift_left_assign/]: r#129
[#235 /\u200B_shift_right/]: r#129
[#235 /\u200B_shift_right_assign/]: r#129
[#235 /\u200B_template_args_end/]: r#129
[#236 '!=']: r#130
[#236 '%']: r#130
[#236 '%=']: r#130
[#236 '&&']: r#130
[#236 '&']: r#130
[#236 '&=']: r#130
[#236 ')']: r#130
[#236 '*']: r#130
[#236 '*=']: r#130
[#236 '+']: r#130
[#236 '++']: r#130
[#236 '+=']: r#130
[#236 ',']: r#130
[#236 '-']: r#130
[#236 '--']: r#130
[#236 '-=']: r#130
[#236 '.']: r#130
[#236 '/']: r#130
[#236 '/=']: r#130
[#236 ':']: r#130
[#236 ';']: r#130
[#236 '=']: r#130
[#236 '==']: r#130
[#236 '@']: r#130
[#236 '[']: r#130
[#236 ']']: r#130
[#236 '^']: r#130
[#236 '^=']: r#130
[#236 '{']: r#130
[#236 '|']: r#130
[#236 '|=']: r#130
[#236 '||']: r#130
[#236 /\u200B_greater_than/]: r#130
[#236 /\u200B_greater_than_equal/]: r#130
[#236 /\u200B_less_than/]: r#130
[#236 /\u200B_less_than_equal/]: r#130
[#236 /\u200B_shift_left/]: r#130
[#236 /\u200B_shift_left_assign/]: r#130
[#236 /\u200B_shift_right/]: r#130
[#236 /\u200B_shift_right_assign/]: r#130
[#236 /\u200B_template_args_end/]: r#130
[#237 '!=']: r#131
[#237 '%']: r#131
[#237 '%=']: r#131
[#237 '&&']: r#131
[#237 '&']: r#131
[#237 '&=']: r#131
[#237 ')']: r#131
[#237 '*']: r#131
[#237 '*=']: r#131
[#237 '+']: r#131
[#237 '++']: r#131
[#237 '+=']: r#131
[#237 ',']: r#131
[#237 '-']: r#131
[#237 '--']: r#131
[#237 '-=']: r#131
[#237 '.']: r#131
[#237 '/']: r#131
[#237 '/=']: r#131
[#237 ':']: r#131
[#237 ';']: r#131
[#237 '=']: r#131
[#237 '==']: r#131
[#237 '@']: r#131
[#237 '[']: r#131
[#237 ']']: r#131
[#237 '^']: r#131
[#237 '^=']: r#131
[#237 '{']: r#131
[#237 '|']: r#131
[#237 '|=']: r#131
[#237 '||']: r#131
[#237 /\u200B_greater_than/]: r#131
[#237 /\u200B_greater_than_equal/]: r#131
[#237 /\u200B_less_than/]: r#131
[#237 /\u200B_less_than_equal/]: r#131
[#237 /\u200B_shift_left/]: r#131
[#237 /\u200B_shift_left_assign/]: r#131
[#237 /\u200B_shift_right/]: r#131
[#237 /\u200B_shift_right_assign/]: r#131
[#237 /\u200B_template_args_end/]: r#131
[#238 '!=']: r#132
[#238 '%']: r#132
[#238 '%=']: r#132
[#238 '&&']: r#132
[#238 '&']: r#132
[#238 '&=']: r#132
[#238 ')']: r#132
[#238 '*']: r#132
[#238 '*=']: r#132
[#238 '+']: r#132
[#238 '++']: r#132
[#238 '+=']: r#132
[#238 ',']: r#132
[#238 '-']: r#132
[#238 '--']: r#132
[#238 '-=']: r#132
[#238 '.']: r#132
[#238 '/']: r#132
[#238 '/=']: r#132
[#238 ':']: r#132
[#238 ';']: r#132
[#238 '=']: r#132
[#238 '==']: r#132
[#238 '@']: r#132
[#238 '[']: r#132
[#238 ']']: r#132
[#238 '^']: r#132
[#238 '^=']: r#132
[#238 '{']: r#132
[#238 '|']: r#132
[#238 '|=']: r#132
[#238 '||']: r#132
[#238 /\u200B_greater_than/]: r#132
[#238 /\u200B_greater_than_equal/]: r#132
[#238 /\u200B_less_than/]: r#132
[#238 /\u200B_less_than_equal/]: r#132
[#238 /\u200B_shift_left/]: r#132
[#238 /\u200B_shift_left_assign/]: r#132
[#238 /\u200B_shift_right/]: r#132
[#238 /\u200B_shift_right_assign/]: r#132
[#238 /\u200B_template_args_end/]: r#132
[#239 '!=']: r#133
[#239 '%']: r#133
[#239 '%=']: r#133
[#239 '&&']: r#133
[#239 '&']: r#133
[#239 '&=']: r#133
[#239 ')']: r#133
[#239 '*']: r#133
[#239 '*=']: r#133
[#239 '+']: r#133
[#239 '++']: r#133
[#239 '+=']: r#133
[#239 ',']: r#133
[#239 '-']: r#133
[#239 '--']: r#133
[#239 '-=']: r#133
[#239 '.']: r#133
[#239 '/']: r#133
[#239 '/=']: r#133
[#239 ':']: r#133
[#239 ';']: r#133
[#239 '=']: r#133
[#239 '==']: r#133
[#239 '@']: r#133
[#239 '[']: r#133
[#239 ']']: r#133
[#239 '^']: r#133
[#239 '^=']: r#133
[#239 '{']: r#133
[#239 '|']: r#133
[#239 '|=']: r#133
[#239 '||']: r#133
[#239 /\u200B_greater_than/]: r#133
[#239 /\u200B_greater_than_equal/]: r#133
[#239 /\u200B_less_than/]: r#133
[#239 /\u200B_less_than_equal/]: r#133
[#239 /\u200B_shift_left/]: r#133
[#239 /\u200B_shift_left_assign/]: r#133
[#239 /\u200B_shift_right/]: r#133
[#239 /\u200B_shift_right_assign/]: r#133
[#239 /\u200B_template_args_end/]: r#133
[#240 '!=']: r#134
[#240 '%']: r#134
[#240 '%=']: r#134
[#240 '&&']: r#134
[#240 '&']: r#134
[#240 '&=']: r#134
[#240 ')']: r#134
[#240 '*']: r#134
[#240 '*=']: r#134
[#240 '+']: r#134
[#240 '++']: r#134
[#240 '+=']: r#134
[#240 ',']: r#134
[#240 '-']: r#134
[#240 '--']: r#134
[#240 '-=']: r#134
[#240 '.']: r#134
[#240 '/']: r#134
[#240 '/=']: r#134
[#240 ':']: r#134
[#240 ';']: r#134
[#240 '=']: r#134
[#240 '==']: r#134
[#240 '@']: r#134
[#240 '[']: r#134
[#240 ']']: r#134
[#240 '^']: r#134
[#240 '^=']: r#134
[#240 '{']: r#134
[#240 '|']: r#134
[#240 '|=']: r#134
[#240 '||']: r#134
[#240 /\u200B_greater_than/]: r#134
[#240 /\u200B_greater_than_equal/]: r#134
[#240 /\u200B_less_than/]: r#134
[#240 /\u200B_less_than_equal/]: r#134
[#240 /\u200B_shift_left/]: r#134
[#240 /\u200B_shift_left_assign/]: r#134
[#240 /\u200B_shift_right/]: r#134
[#240 /\u200B_shift_right_assign/]: r#134
[#240 /\u200B_template_args_end/]: r#134
[#241 ']']: s#343
[#242 ')']: s#342
[#243 ')']: r#135
[#244 ',']: s#341
[#245 '!=']: r#136
[#245 '%']: r#136
[#245 '&&']: r#136
[#245 '&']: r#136
[#245 '(']: r#136
[#245 ')']: r#136
[#245 '*']: r#136
[#245 '+']: r#136
[#245 ',']: r#136
[#245 '-']: r#136
[#245 '.']: r#136
[#245 '/']: r#136
[#245 ':']: r#136
[#245 ';']: r#136
[#245 '==']: r#136
[#245 '@']: r#136
[#245 '[']: r#136
[#245 ']']: r#136
[#245 '^']: r#136
[#245 '{']: r#136
[#245 '|']: r#136
[#245 '||']: r#136
[#245 /\u200B_greater_than/]: r#136
[#245 /\u200B_greater_than_equal/]: r#136
[#245 /\u200B_less_than/]: r#136
[#245 /\u200B_less_than_equal/]: r#136
[#245 /\u200B_shift_left/]: r#136
[#245 /\u200B_shift_right/]: r#136
[#245 /\u200B_template_args_end/]: r#136
[#246 '!=']: r#137
[#246 '%']: r#137
[#246 '&&']: r#137
[#246 '&']: r#137
[#246 '(']: r#137
[#246 ')']: r#137
[#246 '*']: r#137
[#246 '+']: r#137
[#246 ',']: r#137
[#246 '-']: r#137
[#246 '.']: r#137
[#246 '/']: r#137
[#246 ':']: r#137
[#246 ';']: r#137
[#246 '=']: r#137
[#246 '==']: r#137
[#246 '@']: r#137
[#246 '[']: r#137
[#246 ']']: r#137
[#246 '^']: r#137
[#246 '{']: r#137
[#246 '|']: r#137
[#246 '||']: r#137
[#246 '}']: r#137
[#246 /\u200B_greater_than/]: r#137
[#246 /\u200B_greater_than_equal/]: r#137
[#246 /\u200B_less_than/]: r#137
[#246 /\u200B_less_than_equal/]: r#137
[#246 /\u200B_shift_left/]: r#137
[#246 /\u200B_shift_right/]: r#137
[#246 /\u200B_template_args_end/]: r#137
[#247 '!']: s#74
[#247 '&']: s#77
[#247 '(']: s#87
[#247 '*']: s#76
[#247 '-']: s#73
[#247 'false']: s#94
[#247 'true']: s#93
[#247 '~']: s#75
[#247 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#247 /0[fh]/]: s#99
[#247 /0[iu]?/]: s#96
[#247 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#247 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#247 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#247 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#247 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#247 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#247 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#247 /[1-9][0-9]*[fh]/]: s#100
[#247 /[1-9][0-9]*[iu]?/]: s#97
[#248 '!']: r#138
[#248 '&']: r#138
[#248 '(']: r#138
[#248 '*']: r#138
[#248 '-']: r#138
[#248 'false']: r#138
[#248 'true']: r#138
[#248 '~']: r#138
[#248 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#138
[#248 /0[fh]/]: r#138
[#248 /0[iu]?/]: r#138
[#248 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#138
[#248 /0[xX][0-9a-fA-F]+[iu]?/]: r#138
[#248 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#138
[#248 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#138
[#248 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#138
[#248 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#138
[#248 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#138
[#248 /[1-9][0-9]*[fh]/]: r#138
[#248 /[1-9][0-9]*[iu]?/]: r#138
[#249 '!=']: r#139
[#249 '%']: r#139
[#249 '&&']: r#139
[#249 '&']: r#139
[#249 ')']: r#139
[#249 '*']: r#139
[#249 '+']: r#139
[#249 ',']: r#139
[#249 '-']: r#139
[#249 '.']: r#139
[#249 '/']: r#139
[#249 ':']: r#139
[#249 ';']: r#139
[#249 '==']: r#139
[#249 '@']: r#139
[#249 '[']: r#139
[#249 ']']: r#139
[#249 '^']: r#139
[#249 '{']: r#139
[#249 '|']: r#139
[#249 '||']: r#139
[#249 /\u200B_greater_than/]: r#139
[#249 /\u200B_greater_than_equal/]: r#139
[#249 /\u200B_less_than/]: r#139
[#249 /\u200B_less_than_equal/]: r#139
[#249 /\u200B_shift_left/]: r#139
[#249 /\u200B_shift_right/]: r#139
[#249 /\u200B_template_args_end/]: r#139
[#250 '{']: r#140
[#251 '&']: s#330
[#251 '(']: s#331
[#251 '*']: s#329
[#251 ';']: s#289
[#251 '@']: s#40
[#251 '_']: s#326
[#251 'break']: s#314
[#251 'const']: s#313
[#251 'const_assert']: s#35
[#251 'continue']: s#315
[#251 'discard']: s#300
[#251 'let']: s#312
[#251 'return']: s#304
[#251 'var']: s#115
[#251 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#252 '@']: s#40
[#253 ',']: s#279
[#254 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#232
[#255 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#141
[#256 '@']: s#40
[#257 ';']: r#142
[#258 /\u200B_disambiguate_template/]: s#139
[#259 ';']: r#143
[#260 '!']: s#74
[#260 '&']: s#77
[#260 '(']: s#87
[#260 '*']: s#76
[#260 '-']: s#73
[#260 'false']: s#94
[#260 'true']: s#93
[#260 '~']: s#75
[#260 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#260 /0[fh]/]: s#99
[#260 /0[iu]?/]: s#96
[#260 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#260 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#260 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#260 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#260 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#260 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#260 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#260 /[1-9][0-9]*[fh]/]: s#100
[#260 /[1-9][0-9]*[iu]?/]: s#97
[#261 ';']: r#144
[#262 ';']: r#145
[#262 '=']: r#145
[#263 ';']: r#146
[#264 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#265 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#147
[#266 ',']: s#270
[#267 ')']: r#148
[#267 ',']: r#148
[#268 ';']: r#149
[#268 '@']: r#149
[#268 'fn']: r#149
[#268 'for']: r#149
[#268 'if']: r#149
[#268 'loop']: r#149
[#268 'override']: r#149
[#268 'switch']: r#149
[#268 'var']: r#149
[#268 'while']: r#149
[#268 '{']: r#149
[#268 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#149
[#269 ')']: s#440
[#270 ')']: r#150
[#271 ';']: r#151
[#271 '=']: r#151
[#272 ';']: r#152
[#273 /\u200B_template_args_start/]: s#248
[#274 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#153
[#275 ':']: s#438
[#276 ',']: s#437
[#277 ',']: r#154
[#277 '}']: r#154
[#278 ',']: s#279
[#279 '@']: s#40
[#280 ')']: s#433
[#281 ')']: r#155
[#282 ',']: s#432
[#283 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#284 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#156
[#285 '@']: s#40
[#286 '}']: s#426
[#287 '}']: r#157
[#288 '&']: s#330
[#288 '(']: s#331
[#288 '*']: s#329
[#288 ';']: s#289
[#288 '@']: s#40
[#288 '_']: s#326
[#288 'break']: s#314
[#288 'const']: s#313
[#288 'const_assert']: s#35
[#288 'continue']: s#315
[#288 'discard']: s#300
[#288 'let']: s#312
[#288 'return']: s#304
[#288 'var']: s#115
[#288 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#289 '&']: r#158
[#289 '(']: r#158
[#289 '*']: r#158
[#289 ';']: r#158
[#289 '@']: r#158
[#289 '_']: r#158
[#289 'break']: r#158
[#289 'const']: r#158
[#289 'const_assert']: r#158
[#289 'continue']: r#158
[#289 'continuing']: r#158
[#289 'discard']: r#158
[#289 'for']: r#158
[#289 'if']: r#158
[#289 'let']: r#158
[#289 'loop']: r#158
[#289 'return']: r#158
[#289 'switch']: r#158
[#289 'var']: r#158
[#289 'while']: r#158
[#289 '{']: r#158
[#289 '}']: r#158
[#289 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#158
[#290 ';']: s#424
[#291 '&']: r#159
[#291 '(']: r#159
[#291 '*']: r#159
[#291 ';']: r#159
[#291 '@']: r#159
[#291 '_']: r#159
[#291 'break']: r#159
[#291 'const']: r#159
[#291 'const_assert']: r#159
[#291 'continue']: r#159
[#291 'continuing']: r#159
[#291 'discard']: r#159
[#291 'for']: r#159
[#291 'if']: r#159
[#291 'let']: r#159
[#291 'loop']: r#159
[#291 'return']: r#159
[#291 'switch']: r#159
[#291 'var']: r#159
[#291 'while']: r#159
[#291 '{']: r#159
[#291 '}']: r#159
[#291 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#159
[#292 '&']: r#160
[#292 '(']: r#160
[#292 '*']: r#160
[#292 ';']: r#160
[#292 '@']: r#160
[#292 '_']: r#160
[#292 'break']: r#160
[#292 'const']: r#160
[#292 'const_assert']: r#160
[#292 'continue']: r#160
[#292 'continuing']: r#160
[#292 'discard']: r#160
[#292 'for']: r#160
[#292 'if']: r#160
[#292 'let']: r#160
[#292 'loop']: r#160
[#292 'return']: r#160
[#292 'switch']: r#160
[#292 'var']: r#160
[#292 'while']: r#160
[#292 '{']: r#160
[#292 '}']: r#160
[#292 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#160
[#293 '&']: r#161
[#293 '(']: r#161
[#293 '*']: r#161
[#293 ';']: r#161
[#293 '@']: r#161
[#293 '_']: r#161
[#293 'break']: r#161
[#293 'const']: r#161
[#293 'const_assert']: r#161
[#293 'continue']: r#161
[#293 'continuing']: r#161
[#293 'discard']: r#161
[#293 'for']: r#161
[#293 'if']: r#161
[#293 'let']: r#161
[#293 'loop']: r#161
[#293 'return']: r#161
[#293 'switch']: r#161
[#293 'var']: r#161
[#293 'while']: r#161
[#293 '{']: r#161
[#293 '}']: r#161
[#293 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#161
[#294 '&']: r#162
[#294 '(']: r#162
[#294 '*']: r#162
[#294 ';']: r#162
[#294 '@']: r#162
[#294 '_']: r#162
[#294 'break']: r#162
[#294 'const']: r#162
[#294 'const_assert']: r#162
[#294 'continue']: r#162
[#294 'continuing']: r#162
[#294 'discard']: r#162
[#294 'for']: r#162
[#294 'if']: r#162
[#294 'let']: r#162
[#294 'loop']: r#162
[#294 'return']: r#162
[#294 'switch']: r#162
[#294 'var']: r#162
[#294 'while']: r#162
[#294 '{']: r#162
[#294 '}']: r#162
[#294 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#162
[#295 '&']: r#163
[#295 '(']: r#163
[#295 '*']: r#163
[#295 ';']: r#163
[#295 '@']: r#163
[#295 '_']: r#163
[#295 'break']: r#163
[#295 'const']: r#163
[#295 'const_assert']: r#163
[#295 'continue']: r#163
[#295 'continuing']: r#163
[#295 'discard']: r#163
[#295 'for']: r#163
[#295 'if']: r#163
[#295 'let']: r#163
[#295 'loop']: r#163
[#295 'return']: r#163
[#295 'switch']: r#163
[#295 'var']: r#163
[#295 'while']: r#163
[#295 '{']: r#163
[#295 '}']: r#163
[#295 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#163
[#296 ';']: s#423
[#297 ';']: s#422
[#298 ';']: s#421
[#299 ';']: s#420
[#300 ';']: s#419
[#301 ';']: s#418
[#302 '&']: r#164
[#302 '(']: r#164
[#302 '*']: r#164
[#302 ';']: r#164
[#302 '@']: r#164
[#302 '_']: r#164
[#302 'break']: r#164
[#302 'const']: r#164
[#302 'const_assert']: r#164
[#302 'continue']: r#164
[#302 'continuing']: r#164
[#302 'discard']: r#164
[#302 'for']: r#164
[#302 'if']: r#164
[#302 'let']: r#164
[#302 'loop']: r#164
[#302 'return']: r#164
[#302 'switch']: r#164
[#302 'var']: r#164
[#302 'while']: r#164
[#302 '{']: r#164
[#302 '}']: r#164
[#302 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#164
[#303 ';']: s#417
[#304 '!']: s#74
[#304 '&']: s#77
[#304 '(']: s#87
[#304 '*']: s#76
[#304 '-']: s#73
[#304 'false']: s#94
[#304 'true']: s#93
[#304 '~']: s#75
[#304 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#304 /0[fh]/]: s#99
[#304 /0[iu]?/]: s#96
[#304 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#304 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#304 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#304 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#304 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#304 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#304 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#304 /[1-9][0-9]*[fh]/]: s#100
[#304 /[1-9][0-9]*[iu]?/]: s#97
[#305 'if']: s#414
[#306 'switch']: s#412
[#307 'loop']: s#411
[#308 'for']: s#410
[#309 'while']: s#409
[#310 '(']: s#158
[#311 ';']: r#165
[#311 '=']: s#407
[#312 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#313 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#314 ';']: r#166
[#315 ';']: r#167
[#316 ')']: r#168
[#316 ';']: r#168
[#317 ')']: r#169
[#317 ';']: r#169
[#318 ')']: r#170
[#318 ';']: r#170
[#319 'if']: r#171
[#320 'switch']: r#172
[#321 'loop']: r#173
[#322 'for']: r#174
[#323 'while']: r#175
[#324 /\u200B_disambiguate_template/]: s#139
[#325 '%=']: s#396
[#325 '&=']: s#397
[#325 '*=']: s#394
[#325 '++']: s#388
[#325 '+=']: s#392
[#325 '--']: s#389
[#325 '-=']: s#393
[#325 '/=']: s#395
[#325 '=']: s#390
[#325 '^=']: s#399
[#325 '|=']: s#398
[#325 /\u200B_shift_left_assign/]: s#403
[#325 /\u200B_shift_right_assign/]: s#402
[#326 '=']: s#386
[#327 '@']: s#40
[#328 '.']: s#162
[#328 '[']: s#161
[#329 '&']: s#330
[#329 '(']: s#331
[#329 '*']: s#329
[#329 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#330 '&']: s#330
[#330 '(']: s#331
[#330 '*']: s#329
[#330 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#331 '&']: s#330
[#331 '(']: s#331
[#331 '*']: s#329
[#331 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#332 /\u200B_template_args_end/]: s#374
[#333 ',']: s#372
[#334 '&&']: r#27
[#334 ',']: r#176
[#334 '||']: r#26
[#334 /\u200B_template_args_end/]: r#176
[#335 '||']: s#368
[#336 '&&']: s#367
[#337 ',']: r#177
[#337 /\u200B_template_args_end/]: r#177
[#338 ',']: s#366
[#339 ')']: r#178
[#339 ',']: r#178
[#340 ',']: s#341
[#341 '!']: s#74
[#341 '&']: s#77
[#341 '(']: s#87
[#341 '*']: s#76
[#341 '-']: s#73
[#341 'false']: s#94
[#341 'true']: s#93
[#341 '~']: s#75
[#341 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#341 /0[fh]/]: s#99
[#341 /0[iu]?/]: s#96
[#341 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#341 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#341 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#341 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#341 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#341 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#341 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#341 /[1-9][0-9]*[fh]/]: s#100
[#341 /[1-9][0-9]*[iu]?/]: s#97
[#342 '!=']: r#179
[#342 '%']: r#179
[#342 '&&']: r#179
[#342 '&']: r#179
[#342 ')']: r#179
[#342 '*']: r#179
[#342 '+']: r#179
[#342 ',']: r#179
[#342 '-']: r#179
[#342 '.']: r#179
[#342 '/']: r#179
[#342 ':']: r#179
[#342 ';']: r#179
[#342 '==']: r#179
[#342 '@']: r#179
[#342 '[']: r#179
[#342 ']']: r#179
[#342 '^']: r#179
[#342 '{']: r#179
[#342 '|']: r#179
[#342 '||']: r#179
[#342 /\u200B_greater_than/]: r#179
[#342 /\u200B_greater_than_equal/]: r#179
[#342 /\u200B_less_than/]: r#179
[#342 /\u200B_less_than_equal/]: r#179
[#342 /\u200B_shift_left/]: r#179
[#342 /\u200B_shift_right/]: r#179
[#342 /\u200B_template_args_end/]: r#179
[#343 '.']: s#162
[#343 '[']: s#161
[#344 '!=']: r#180
[#344 '%']: r#180
[#344 '%=']: r#180
[#344 '&&']: r#180
[#344 '&']: r#180
[#344 '&=']: r#180
[#344 ')']: r#180
[#344 '*']: r#180
[#344 '*=']: r#180
[#344 '+']: r#180
[#344 '++']: r#180
[#344 '+=']: r#180
[#344 ',']: r#180
[#344 '-']: r#180
[#344 '--']: r#180
[#344 '-=']: r#180
[#344 '/']: r#180
[#344 '/=']: r#180
[#344 ':']: r#180
[#344 ';']: r#180
[#344 '=']: r#180
[#344 '==']: r#180
[#344 '@']: r#180
[#344 ']']: r#180
[#344 '^']: r#180
[#344 '^=']: r#180
[#344 '{']: r#180
[#344 '|']: r#180
[#344 '|=']: r#180
[#344 '||']: r#180
[#344 /\u200B_greater_than/]: r#180
[#344 /\u200B_greater_than_equal/]: r#180
[#344 /\u200B_less_than/]: r#180
[#344 /\u200B_less_than_equal/]: r#180
[#344 /\u200B_shift_left/]: r#180
[#344 /\u200B_shift_left_assign/]: r#180
[#344 /\u200B_shift_right/]: r#180
[#344 /\u200B_shift_right_assign/]: r#180
[#344 /\u200B_template_args_end/]: r#180
[#345 '!=']: r#181
[#345 '%']: r#181
[#345 '%=']: r#181
[#345 '&&']: r#181
[#345 '&']: r#181
[#345 '&=']: r#181
[#345 ')']: r#181
[#345 '*']: r#181
[#345 '*=']: r#181
[#345 '+']: r#181
[#345 '++']: r#181
[#345 '+=']: r#181
[#345 ',']: r#181
[#345 '-']: r#181
[#345 '--']: r#181
[#345 '-=']: r#181
[#345 '/']: r#181
[#345 '/=']: r#181
[#345 ':']: r#181
[#345 ';']: r#181
[#345 '=']: r#181
[#345 '==']: r#181
[#345 '@']: r#181
[#345 ']']: r#181
[#345 '^']: r#181
[#345 '^=']: r#181
[#345 '{']: r#181
[#345 '|']: r#181
[#345 '|=']: r#181
[#345 '||']: r#181
[#345 /\u200B_greater_than/]: r#181
[#345 /\u200B_greater_than_equal/]: r#181
[#345 /\u200B_less_than/]: r#181
[#345 /\u200B_less_than_equal/]: r#181
[#345 /\u200B_shift_left/]: r#181
[#345 /\u200B_shift_left_assign/]: r#181
[#345 /\u200B_shift_right/]: r#181
[#345 /\u200B_shift_right_assign/]: r#181
[#345 /\u200B_template_args_end/]: r#181
[#346 '!=']: r#182
[#346 '%']: r#182
[#346 '%=']: r#182
[#346 '&&']: r#182
[#346 '&']: r#182
[#346 '&=']: r#182
[#346 ')']: r#182
[#346 '*']: r#182
[#346 '*=']: r#182
[#346 '+']: r#182
[#346 '++']: r#182
[#346 '+=']: r#182
[#346 ',']: r#182
[#346 '-']: r#182
[#346 '--']: r#182
[#346 '-=']: r#182
[#346 '/']: r#182
[#346 '/=']: r#182
[#346 ':']: r#182
[#346 ';']: r#182
[#346 '=']: r#182
[#346 '==']: r#182
[#346 '@']: r#182
[#346 ']']: r#182
[#346 '^']: r#182
[#346 '^=']: r#182
[#346 '{']: r#182
[#346 '|']: r#182
[#346 '|=']: r#182
[#346 '||']: r#182
[#346 /\u200B_greater_than/]: r#182
[#346 /\u200B_greater_than_equal/]: r#182
[#346 /\u200B_less_than/]: r#182
[#346 /\u200B_less_than_equal/]: r#182
[#346 /\u200B_shift_left/]: r#182
[#346 /\u200B_shift_left_assign/]: r#182
[#346 /\u200B_shift_right/]: r#182
[#346 /\u200B_shift_right_assign/]: r#182
[#346 /\u200B_template_args_end/]: r#182
[#347 '!=']: r#183
[#347 '%']: r#183
[#347 '%=']: r#183
[#347 '&&']: r#183
[#347 '&']: r#183
[#347 '&=']: r#183
[#347 ')']: r#183
[#347 '*']: r#183
[#347 '*=']: r#183
[#347 '+']: r#183
[#347 '++']: r#183
[#347 '+=']: r#183
[#347 ',']: r#183
[#347 '-']: r#183
[#347 '--']: r#183
[#347 '-=']: r#183
[#347 '/']: r#183
[#347 '/=']: r#183
[#347 ':']: r#183
[#347 ';']: r#183
[#347 '=']: r#183
[#347 '==']: r#183
[#347 '@']: r#183
[#347 ']']: r#183
[#347 '^']: r#183
[#347 '^=']: r#183
[#347 '{']: r#183
[#347 '|']: r#183
[#347 '|=']: r#183
[#347 '||']: r#183
[#347 /\u200B_greater_than/]: r#183
[#347 /\u200B_greater_than_equal/]: r#183
[#347 /\u200B_less_than/]: r#183
[#347 /\u200B_less_than_equal/]: r#183
[#347 /\u200B_shift_left/]: r#183
[#347 /\u200B_shift_left_assign/]: r#183
[#347 /\u200B_shift_right/]: r#183
[#347 /\u200B_shift_right_assign/]: r#183
[#347 /\u200B_template_args_end/]: r#183
[#348 '@']: r#184
[#348 'fn']: r#184
[#348 'for']: r#184
[#348 'if']: r#184
[#348 'loop']: r#184
[#348 'override']: r#184
[#348 'switch']: r#184
[#348 'var']: r#184
[#348 'while']: r#184
[#348 '{']: r#184
[#348 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#184
[#349 '!']: s#74
[#349 '&']: s#77
[#349 '(']: s#87
[#349 ')']: r#150
[#349 '*']: s#76
[#349 '-']: s#73
[#349 'false']: s#94
[#349 'true']: s#93
[#349 '~']: s#75
[#349 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#349 /0[fh]/]: s#99
[#349 /0[iu]?/]: s#96
[#349 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#349 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#349 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#349 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#349 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#349 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#349 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#349 /[1-9][0-9]*[fh]/]: s#100
[#349 /[1-9][0-9]*[iu]?/]: s#97
[#350 '@']: r#185
[#350 'fn']: r#185
[#350 'for']: r#185
[#350 'if']: r#185
[#350 'loop']: r#185
[#350 'override']: r#185
[#350 'switch']: r#185
[#350 'var']: r#185
[#350 'while']: r#185
[#350 '{']: r#185
[#350 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#185
[#351 '@']: r#186
[#351 'fn']: r#186
[#351 'for']: r#186
[#351 'if']: r#186
[#351 'loop']: r#186
[#351 'override']: r#186
[#351 'switch']: r#186
[#351 'var']: r#186
[#351 'while']: r#186
[#351 '{']: r#186
[#351 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#186
[#352 '@']: r#187
[#352 'fn']: r#187
[#352 'for']: r#187
[#352 'if']: r#187
[#352 'loop']: r#187
[#352 'override']: r#187
[#352 'switch']: r#187
[#352 'var']: r#187
[#352 'while']: r#187
[#352 '{']: r#187
[#352 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#187
[#353 '!']: s#74
[#353 '&']: s#77
[#353 '(']: s#87
[#353 ')']: r#150
[#353 '*']: s#76
[#353 '-']: s#73
[#353 'false']: s#94
[#353 'true']: s#93
[#353 '~']: s#75
[#353 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#353 /0[fh]/]: s#99
[#353 /0[iu]?/]: s#96
[#353 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#353 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#353 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#353 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#353 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#353 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#353 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#353 /[1-9][0-9]*[fh]/]: s#100
[#353 /[1-9][0-9]*[iu]?/]: s#97
[#354 '@']: r#188
[#354 'fn']: r#188
[#354 'for']: r#188
[#354 'if']: r#188
[#354 'loop']: r#188
[#354 'override']: r#188
[#354 'switch']: r#188
[#354 'var']: r#188
[#354 'while']: r#188
[#354 '{']: r#188
[#354 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#188
[#355 '@']: r#189
[#355 'fn']: r#189
[#355 'for']: r#189
[#355 'if']: r#189
[#355 'loop']: r#189
[#355 'override']: r#189
[#355 'switch']: r#189
[#355 'var']: r#189
[#355 'while']: r#189
[#355 '{']: r#189
[#355 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#189
[#356 '@']: r#190
[#356 'fn']: r#190
[#356 'for']: r#190
[#356 'if']: r#190
[#356 'loop']: r#190
[#356 'override']: r#190
[#356 'switch']: r#190
[#356 'var']: r#190
[#356 'while']: r#190
[#356 '{']: r#190
[#356 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#190
[#357 '@']: r#191
[#357 'fn']: r#191
[#357 'for']: r#191
[#357 'if']: r#191
[#357 'loop']: r#191
[#357 'override']: r#191
[#357 'switch']: r#191
[#357 'var']: r#191
[#357 'while']: r#191
[#357 '{']: r#191
[#357 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#191
[#358 '@']: r#192
[#358 'fn']: r#192
[#358 'for']: r#192
[#358 'if']: r#192
[#358 'loop']: r#192
[#358 'override']: r#192
[#358 'switch']: r#192
[#358 'var']: r#192
[#358 'while']: r#192
[#358 '{']: r#192
[#358 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#192
[#359 ',']: s#270
[#360 ',']: s#475
[#361 '!=']: r#193
[#361 '%']: r#193
[#361 '%=']: r#193
[#361 '&&']: r#193
[#361 '&']: r#193
[#361 '&=']: r#193
[#361 ')']: r#193
[#361 '*']: r#193
[#361 '*=']: r#193
[#361 '+']: r#193
[#361 '++']: r#193
[#361 '+=']: r#193
[#361 ',']: r#193
[#361 '-']: r#193
[#361 '--']: r#193
[#361 '-=']: r#193
[#361 '/']: r#193
[#361 '/=']: r#193
[#361 ':']: r#193
[#361 ';']: r#193
[#361 '=']: r#193
[#361 '==']: r#193
[#361 '@']: r#193
[#361 ']']: r#193
[#361 '^']: r#193
[#361 '^=']: r#193
[#361 '{']: r#193
[#361 '|']: r#193
[#361 '|=']: r#193
[#361 '||']: r#193
[#361 /\u200B_greater_than/]: r#193
[#361 /\u200B_greater_than_equal/]: r#193
[#361 /\u200B_less_than/]: r#193
[#361 /\u200B_less_than_equal/]: r#193
[#361 /\u200B_shift_left/]: r#193
[#361 /\u200B_shift_left_assign/]: r#193
[#361 /\u200B_shift_right/]: r#193
[#361 /\u200B_shift_right_assign/]: r#193
[#361 /\u200B_template_args_end/]: r#193
[#362 '!=']: r#194
[#362 '%']: r#194
[#362 '%=']: r#194
[#362 '&&']: r#194
[#362 '&']: r#194
[#362 '&=']: r#194
[#362 ')']: r#194
[#362 '*']: r#194
[#362 '*=']: r#194
[#362 '+']: r#194
[#362 '++']: r#194
[#362 '+=']: r#194
[#362 ',']: r#194
[#362 '-']: r#194
[#362 '--']: r#194
[#362 '-=']: r#194
[#362 '/']: r#194
[#362 '/=']: r#194
[#362 ':']: r#194
[#362 ';']: r#194
[#362 '=']: r#194
[#362 '==']: r#194
[#362 '@']: r#194
[#362 ']']: r#194
[#362 '^']: r#194
[#362 '^=']: r#194
[#362 '{']: r#194
[#362 '|']: r#194
[#362 '|=']: r#194
[#362 '||']: r#194
[#362 /\u200B_greater_than/]: r#194
[#362 /\u200B_greater_than_equal/]: r#194
[#362 /\u200B_less_than/]: r#194
[#362 /\u200B_less_than_equal/]: r#194
[#362 /\u200B_shift_left/]: r#194
[#362 /\u200B_shift_left_assign/]: r#194
[#362 /\u200B_shift_right/]: r#194
[#362 /\u200B_shift_right_assign/]: r#194
[#362 /\u200B_template_args_end/]: r#194
[#363 ')']: r#195
[#363 ',']: r#195
[#364 ')']: r#196
[#364 ',']: r#196
[#365 ')']: r#197
[#366 ')']: r#198
[#367 '!']: s#74
[#367 '&']: s#77
[#367 '(']: s#87
[#367 '*']: s#76
[#367 '-']: s#73
[#367 'false']: s#94
[#367 'true']: s#93
[#367 '~']: s#75
[#367 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#367 /0[fh]/]: s#99
[#367 /0[iu]?/]: s#96
[#367 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#367 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#367 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#367 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#367 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#367 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#367 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#367 /[1-9][0-9]*[fh]/]: s#100
[#367 /[1-9][0-9]*[iu]?/]: s#97
[#368 '!']: s#74
[#368 '&']: s#77
[#368 '(']: s#87
[#368 '*']: s#76
[#368 '-']: s#73
[#368 'false']: s#94
[#368 'true']: s#93
[#368 '~']: s#75
[#368 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#368 /0[fh]/]: s#99
[#368 /0[iu]?/]: s#96
[#368 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#368 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#368 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#368 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#368 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#368 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#368 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#368 /[1-9][0-9]*[fh]/]: s#100
[#368 /[1-9][0-9]*[iu]?/]: s#97
[#369 ',']: s#471
[#370 ',']: r#199
[#370 /\u200B_template_args_end/]: r#199
[#371 ',']: s#372
[#372 '!']: s#74
[#372 '&']: s#77
[#372 '(']: s#87
[#372 '*']: s#76
[#372 '-']: s#73
[#372 'false']: s#94
[#372 'true']: s#93
[#372 '~']: s#75
[#372 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#372 /0[fh]/]: s#99
[#372 /0[iu]?/]: s#96
[#372 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#372 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#372 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#372 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#372 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#372 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#372 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#372 /[1-9][0-9]*[fh]/]: s#100
[#372 /[1-9][0-9]*[iu]?/]: s#97
[#373 '!=']: r#200
[#373 '%']: r#200
[#373 '&&']: r#200
[#373 '&']: r#200
[#373 '(']: r#200
[#373 ')']: r#200
[#373 '*']: r#200
[#373 '+']: r#200
[#373 ',']: r#200
[#373 '-']: r#200
[#373 '.']: r#200
[#373 '/']: r#200
[#373 ':']: r#200
[#373 ';']: r#200
[#373 '=']: r#200
[#373 '==']: r#200
[#373 '@']: r#200
[#373 '[']: r#200
[#373 ']']: r#200
[#373 '^']: r#200
[#373 '{']: r#200
[#373 '|']: r#200
[#373 '||']: r#200
[#373 '}']: r#200
[#373 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#200
[#373 /\u200B_greater_than/]: r#200
[#373 /\u200B_greater_than_equal/]: r#200
[#373 /\u200B_less_than/]: r#200
[#373 /\u200B_less_than_equal/]: r#200
[#373 /\u200B_shift_left/]: r#200
[#373 /\u200B_shift_right/]: r#200
[#373 /\u200B_template_args_end/]: r#200
[#374 '!=']: r#201
[#374 '%']: r#201
[#374 '&&']: r#201
[#374 '&']: r#201
[#374 '(']: r#201
[#374 ')']: r#201
[#374 '*']: r#201
[#374 '+']: r#201
[#374 ',']: r#201
[#374 '-']: r#201
[#374 '.']: r#201
[#374 '/']: r#201
[#374 ':']: r#201
[#374 ';']: r#201
[#374 '=']: r#201
[#374 '==']: r#201
[#374 '@']: r#201
[#374 '[']: r#201
[#374 ']']: r#201
[#374 '^']: r#201
[#374 '{']: r#201
[#374 '|']: r#201
[#374 '||']: r#201
[#374 '}']: r#201
[#374 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#201
[#374 /\u200B_greater_than/]: r#201
[#374 /\u200B_greater_than_equal/]: r#201
[#374 /\u200B_less_than/]: r#201
[#374 /\u200B_less_than_equal/]: r#201
[#374 /\u200B_shift_left/]: r#201
[#374 /\u200B_shift_right/]: r#201
[#374 /\u200B_template_args_end/]: r#201
[#375 ')']: s#467
[#376 /\u200B_disambiguate_template/]: s#139
[#377 '%=']: r#202
[#377 '&=']: r#202
[#377 ')']: r#202
[#377 '*=']: r#202
[#377 '++']: r#202
[#377 '+=']: r#202
[#377 '--']: r#202
[#377 '-=']: r#202
[#377 '/=']: r#202
[#377 '=']: r#202
[#377 '^=']: r#202
[#377 '|=']: r#202
[#377 /\u200B_shift_left_assign/]: r#202
[#377 /\u200B_shift_right_assign/]: r#202
[#378 '%=']: r#203
[#378 '&=']: r#203
[#378 ')']: r#203
[#378 '*=']: r#203
[#378 '++']: r#203
[#378 '+=']: r#203
[#378 '--']: r#203
[#378 '-=']: r#203
[#378 '/=']: r#203
[#378 '=']: r#203
[#378 '^=']: r#203
[#378 '|=']: r#203
[#378 /\u200B_shift_left_assign/]: r#203
[#378 /\u200B_shift_right_assign/]: r#203
[#379 '%=']: r#204
[#379 '&=']: r#204
[#379 ')']: r#204
[#379 '*=']: r#204
[#379 '++']: r#204
[#379 '+=']: r#204
[#379 '--']: r#204
[#379 '-=']: r#204
[#379 '/=']: r#204
[#379 '=']: r#204
[#379 '^=']: r#204
[#379 '|=']: r#204
[#379 /\u200B_shift_left_assign/]: r#204
[#379 /\u200B_shift_right_assign/]: r#204
[#380 '%=']: r#205
[#380 '&=']: r#205
[#380 ')']: r#205
[#380 '*=']: r#205
[#380 '++']: r#205
[#380 '+=']: r#205
[#380 '--']: r#205
[#380 '-=']: r#205
[#380 '/=']: r#205
[#380 '=']: r#205
[#380 '^=']: r#205
[#380 '|=']: r#205
[#380 /\u200B_shift_left_assign/]: r#205
[#380 /\u200B_shift_right_assign/]: r#205
[#381 'if']: r#206
[#382 'switch']: r#207
[#383 'loop']: r#208
[#384 'for']: r#209
[#385 'while']: r#210
[#386 '!']: s#74
[#386 '&']: s#77
[#386 '(']: s#87
[#386 '*']: s#76
[#386 '-']: s#73
[#386 'false']: s#94
[#386 'true']: s#93
[#386 '~']: s#75
[#386 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#386 /0[fh]/]: s#99
[#386 /0[iu]?/]: s#96
[#386 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#386 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#386 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#386 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#386 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#386 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#386 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#386 /[1-9][0-9]*[fh]/]: s#100
[#386 /[1-9][0-9]*[iu]?/]: s#97
[#387 '!']: s#74
[#387 '&']: s#77
[#387 '(']: s#87
[#387 '*']: s#76
[#387 '-']: s#73
[#387 'false']: s#94
[#387 'true']: s#93
[#387 '~']: s#75
[#387 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#387 /0[fh]/]: s#99
[#387 /0[iu]?/]: s#96
[#387 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#387 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#387 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#387 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#387 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#387 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#387 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#387 /[1-9][0-9]*[fh]/]: s#100
[#387 /[1-9][0-9]*[iu]?/]: s#97
[#388 ')']: r#211
[#388 ';']: r#211
[#389 ')']: r#212
[#389 ';']: r#212
[#390 '!']: r#213
[#390 '&']: r#213
[#390 '(']: r#213
[#390 '*']: r#213
[#390 '-']: r#213
[#390 'false']: r#213
[#390 'true']: r#213
[#390 '~']: r#213
[#390 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#213
[#390 /0[fh]/]: r#213
[#390 /0[iu]?/]: r#213
[#390 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#213
[#390 /0[xX][0-9a-fA-F]+[iu]?/]: r#213
[#390 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#213
[#390 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#213
[#390 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#213
[#390 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#213
[#390 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#213
[#390 /[1-9][0-9]*[fh]/]: r#213
[#390 /[1-9][0-9]*[iu]?/]: r#213
[#391 '!']: r#214
[#391 '&']: r#214
[#391 '(']: r#214
[#391 '*']: r#214
[#391 '-']: r#214
[#391 'false']: r#214
[#391 'true']: r#214
[#391 '~']: r#214
[#391 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#214
[#391 /0[fh]/]: r#214
[#391 /0[iu]?/]: r#214
[#391 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#214
[#391 /0[xX][0-9a-fA-F]+[iu]?/]: r#214
[#391 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#214
[#391 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#214
[#391 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#214
[#391 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#214
[#391 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#214
[#391 /[1-9][0-9]*[fh]/]: r#214
[#391 /[1-9][0-9]*[iu]?/]: r#214
[#392 '!']: r#215
[#392 '&']: r#215
[#392 '(']: r#215
[#392 '*']: r#215
[#392 '-']: r#215
[#392 'false']: r#215
[#392 'true']: r#215
[#392 '~']: r#215
[#392 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#215
[#392 /0[fh]/]: r#215
[#392 /0[iu]?/]: r#215
[#392 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#215
[#392 /0[xX][0-9a-fA-F]+[iu]?/]: r#215
[#392 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#215
[#392 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#215
[#392 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#215
[#392 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#215
[#392 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#215
[#392 /[1-9][0-9]*[fh]/]: r#215
[#392 /[1-9][0-9]*[iu]?/]: r#215
[#393 '!']: r#216
[#393 '&']: r#216
[#393 '(']: r#216
[#393 '*']: r#216
[#393 '-']: r#216
[#393 'false']: r#216
[#393 'true']: r#216
[#393 '~']: r#216
[#393 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#216
[#393 /0[fh]/]: r#216
[#393 /0[iu]?/]: r#216
[#393 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#216
[#393 /0[xX][0-9a-fA-F]+[iu]?/]: r#216
[#393 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#216
[#393 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#216
[#393 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#216
[#393 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#216
[#393 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#216
[#393 /[1-9][0-9]*[fh]/]: r#216
[#393 /[1-9][0-9]*[iu]?/]: r#216
[#394 '!']: r#217
[#394 '&']: r#217
[#394 '(']: r#217
[#394 '*']: r#217
[#394 '-']: r#217
[#394 'false']: r#217
[#394 'true']: r#217
[#394 '~']: r#217
[#394 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#217
[#394 /0[fh]/]: r#217
[#394 /0[iu]?/]: r#217
[#394 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#217
[#394 /0[xX][0-9a-fA-F]+[iu]?/]: r#217
[#394 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#217
[#394 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#217
[#394 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#217
[#394 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#217
[#394 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#217
[#394 /[1-9][0-9]*[fh]/]: r#217
[#394 /[1-9][0-9]*[iu]?/]: r#217
[#395 '!']: r#218
[#395 '&']: r#218
[#395 '(']: r#218
[#395 '*']: r#218
[#395 '-']: r#218
[#395 'false']: r#218
[#395 'true']: r#218
[#395 '~']: r#218
[#395 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#218
[#395 /0[fh]/]: r#218
[#395 /0[iu]?/]: r#218
[#395 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#218
[#395 /0[xX][0-9a-fA-F]+[iu]?/]: r#218
[#395 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#218
[#395 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#218
[#395 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#218
[#395 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#218
[#395 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#218
[#395 /[1-9][0-9]*[fh]/]: r#218
[#395 /[1-9][0-9]*[iu]?/]: r#218
[#396 '!']: r#219
[#396 '&']: r#219
[#396 '(']: r#219
[#396 '*']: r#219
[#396 '-']: r#219
[#396 'false']: r#219
[#396 'true']: r#219
[#396 '~']: r#219
[#396 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#219
[#396 /0[fh]/]: r#219
[#396 /0[iu]?/]: r#219
[#396 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#219
[#396 /0[xX][0-9a-fA-F]+[iu]?/]: r#219
[#396 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#219
[#396 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#219
[#396 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#219
[#396 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#219
[#396 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#219
[#396 /[1-9][0-9]*[fh]/]: r#219
[#396 /[1-9][0-9]*[iu]?/]: r#219
[#397 '!']: r#220
[#397 '&']: r#220
[#397 '(']: r#220
[#397 '*']: r#220
[#397 '-']: r#220
[#397 'false']: r#220
[#397 'true']: r#220
[#397 '~']: r#220
[#397 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#220
[#397 /0[fh]/]: r#220
[#397 /0[iu]?/]: r#220
[#397 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#220
[#397 /0[xX][0-9a-fA-F]+[iu]?/]: r#220
[#397 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#220
[#397 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#220
[#397 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#220
[#397 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#220
[#397 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#220
[#397 /[1-9][0-9]*[fh]/]: r#220
[#397 /[1-9][0-9]*[iu]?/]: r#220
[#398 '!']: r#221
[#398 '&']: r#221
[#398 '(']: r#221
[#398 '*']: r#221
[#398 '-']: r#221
[#398 'false']: r#221
[#398 'true']: r#221
[#398 '~']: r#221
[#398 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#221
[#398 /0[fh]/]: r#221
[#398 /0[iu]?/]: r#221
[#398 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#221
[#398 /0[xX][0-9a-fA-F]+[iu]?/]: r#221
[#398 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#221
[#398 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#221
[#398 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#221
[#398 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#221
[#398 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#221
[#398 /[1-9][0-9]*[fh]/]: r#221
[#398 /[1-9][0-9]*[iu]?/]: r#221
[#399 '!']: r#222
[#399 '&']: r#222
[#399 '(']: r#222
[#399 '*']: r#222
[#399 '-']: r#222
[#399 'false']: r#222
[#399 'true']: r#222
[#399 '~']: r#222
[#399 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#222
[#399 /0[fh]/]: r#222
[#399 /0[iu]?/]: r#222
[#399 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#222
[#399 /0[xX][0-9a-fA-F]+[iu]?/]: r#222
[#399 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#222
[#399 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#222
[#399 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#222
[#399 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#222
[#399 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#222
[#399 /[1-9][0-9]*[fh]/]: r#222
[#399 /[1-9][0-9]*[iu]?/]: r#222
[#400 '!']: r#223
[#400 '&']: r#223
[#400 '(']: r#223
[#400 '*']: r#223
[#400 '-']: r#223
[#400 'false']: r#223
[#400 'true']: r#223
[#400 '~']: r#223
[#400 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#223
[#400 /0[fh]/]: r#223
[#400 /0[iu]?/]: r#223
[#400 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#223
[#400 /0[xX][0-9a-fA-F]+[iu]?/]: r#223
[#400 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#223
[#400 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#223
[#400 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#223
[#400 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#223
[#400 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#223
[#400 /[1-9][0-9]*[fh]/]: r#223
[#400 /[1-9][0-9]*[iu]?/]: r#223
[#401 '!']: r#224
[#401 '&']: r#224
[#401 '(']: r#224
[#401 '*']: r#224
[#401 '-']: r#224
[#401 'false']: r#224
[#401 'true']: r#224
[#401 '~']: r#224
[#401 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#224
[#401 /0[fh]/]: r#224
[#401 /0[iu]?/]: r#224
[#401 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#224
[#401 /0[xX][0-9a-fA-F]+[iu]?/]: r#224
[#401 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#224
[#401 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#224
[#401 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#224
[#401 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#224
[#401 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#224
[#401 /[1-9][0-9]*[fh]/]: r#224
[#401 /[1-9][0-9]*[iu]?/]: r#224
[#402 '!']: r#225
[#402 '&']: r#225
[#402 '(']: r#225
[#402 '*']: r#225
[#402 '-']: r#225
[#402 'false']: r#225
[#402 'true']: r#225
[#402 '~']: r#225
[#402 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#225
[#402 /0[fh]/]: r#225
[#402 /0[iu]?/]: r#225
[#402 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#225
[#402 /0[xX][0-9a-fA-F]+[iu]?/]: r#225
[#402 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#225
[#402 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#225
[#402 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#225
[#402 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#225
[#402 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#225
[#402 /[1-9][0-9]*[fh]/]: r#225
[#402 /[1-9][0-9]*[iu]?/]: r#225
[#403 '!']: r#226
[#403 '&']: r#226
[#403 '(']: r#226
[#403 '*']: r#226
[#403 '-']: r#226
[#403 'false']: r#226
[#403 'true']: r#226
[#403 '~']: r#226
[#403 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#226
[#403 /0[fh]/]: r#226
[#403 /0[iu]?/]: r#226
[#403 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#226
[#403 /0[xX][0-9a-fA-F]+[iu]?/]: r#226
[#403 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#226
[#403 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#226
[#403 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#226
[#403 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#226
[#403 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#226
[#403 /[1-9][0-9]*[fh]/]: r#226
[#403 /[1-9][0-9]*[iu]?/]: r#226
[#404 '%=']: r#227
[#404 '&=']: r#227
[#404 '*=']: r#227
[#404 '++']: r#227
[#404 '+=']: r#227
[#404 '--']: r#227
[#404 '-=']: r#227
[#404 '.']: r#227
[#404 '/=']: r#227
[#404 '=']: r#227
[#404 '[']: r#227
[#404 '^=']: r#227
[#404 '|=']: r#227
[#404 /\u200B_shift_left_assign/]: r#227
[#404 /\u200B_shift_right_assign/]: r#227
[#404 /\u200B_template_args_start/]: s#248
[#405 '=']: s#463
[#406 '=']: s#462
[#407 '!']: s#74
[#407 '&']: s#77
[#407 '(']: s#87
[#407 '*']: s#76
[#407 '-']: s#73
[#407 'false']: s#94
[#407 'true']: s#93
[#407 '~']: s#75
[#407 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#407 /0[fh]/]: s#99
[#407 /0[iu]?/]: s#96
[#407 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#407 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#407 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#407 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#407 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#407 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#407 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#407 /[1-9][0-9]*[fh]/]: s#100
[#407 /[1-9][0-9]*[iu]?/]: s#97
[#408 ')']: r#228
[#408 ';']: r#228
[#409 '!']: s#74
[#409 '&']: s#77
[#409 '(']: s#87
[#409 '*']: s#76
[#409 '-']: s#73
[#409 'false']: s#94
[#409 'true']: s#93
[#409 '~']: s#75
[#409 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#409 /0[fh]/]: s#99
[#409 /0[iu]?/]: s#96
[#409 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#409 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#409 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#409 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#409 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#409 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#409 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#409 /[1-9][0-9]*[fh]/]: s#100
[#409 /[1-9][0-9]*[iu]?/]: s#97
[#410 '(']: s#459
[#411 '@']: s#40
[#412 '!']: s#74
[#412 '&']: s#77
[#412 '(']: s#87
[#412 '*']: s#76
[#412 '-']: s#73
[#412 'false']: s#94
[#412 'true']: s#93
[#412 '~']: s#75
[#412 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#412 /0[fh]/]: s#99
[#412 /0[iu]?/]: s#96
[#412 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#412 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#412 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#412 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#412 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#412 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#412 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#412 /[1-9][0-9]*[fh]/]: s#100
[#412 /[1-9][0-9]*[iu]?/]: s#97
[#413 'else']: s#454
[#414 '!']: s#74
[#414 '&']: s#77
[#414 '(']: s#87
[#414 '*']: s#76
[#414 '-']: s#73
[#414 'false']: s#94
[#414 'true']: s#93
[#414 '~']: s#75
[#414 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#414 /0[fh]/]: s#99
[#414 /0[iu]?/]: s#96
[#414 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#414 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#414 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#414 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#414 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#414 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#414 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#414 /[1-9][0-9]*[fh]/]: s#100
[#414 /[1-9][0-9]*[iu]?/]: s#97
[#415 ';']: r#229
[#416 ';']: r#230
[#417 '&']: r#231
[#417 '(']: r#231
[#417 '*']: r#231
[#417 ';']: r#231
[#417 '@']: r#231
[#417 '_']: r#231
[#417 'break']: r#231
[#417 'const']: r#231
[#417 'const_assert']: r#231
[#417 'continue']: r#231
[#417 'continuing']: r#231
[#417 'discard']: r#231
[#417 'for']: r#231
[#417 'if']: r#231
[#417 'let']: r#231
[#417 'loop']: r#231
[#417 'return']: r#231
[#417 'switch']: r#231
[#417 'var']: r#231
[#417 'while']: r#231
[#417 '{']: r#231
[#417 '}']: r#231
[#417 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#231
[#418 '&']: r#232
[#418 '(']: r#232
[#418 '*']: r#232
[#418 ';']: r#232
[#418 '@']: r#232
[#418 '_']: r#232
[#418 'break']: r#232
[#418 'const']: r#232
[#418 'const_assert']: r#232
[#418 'continue']: r#232
[#418 'continuing']: r#232
[#418 'discard']: r#232
[#418 'for']: r#232
[#418 'if']: r#232
[#418 'let']: r#232
[#418 'loop']: r#232
[#418 'return']: r#232
[#418 'switch']: r#232
[#418 'var']: r#232
[#418 'while']: r#232
[#418 '{']: r#232
[#418 '}']: r#232
[#418 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#232
[#419 '&']: r#233
[#419 '(']: r#233
[#419 '*']: r#233
[#419 ';']: r#233
[#419 '@']: r#233
[#419 '_']: r#233
[#419 'break']: r#233
[#419 'const']: r#233
[#419 'const_assert']: r#233
[#419 'continue']: r#233
[#419 'continuing']: r#233
[#419 'discard']: r#233
[#419 'for']: r#233
[#419 'if']: r#233
[#419 'let']: r#233
[#419 'loop']: r#233
[#419 'return']: r#233
[#419 'switch']: r#233
[#419 'var']: r#233
[#419 'while']: r#233
[#419 '{']: r#233
[#419 '}']: r#233
[#419 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#233
[#420 '&']: r#234
[#420 '(']: r#234
[#420 '*']: r#234
[#420 ';']: r#234
[#420 '@']: r#234
[#420 '_']: r#234
[#420 'break']: r#234
[#420 'const']: r#234
[#420 'const_assert']: r#234
[#420 'continue']: r#234
[#420 'continuing']: r#234
[#420 'discard']: r#234
[#420 'for']: r#234
[#420 'if']: r#234
[#420 'let']: r#234
[#420 'loop']: r#234
[#420 'return']: r#234
[#420 'switch']: r#234
[#420 'var']: r#234
[#420 'while']: r#234
[#420 '{']: r#234
[#420 '}']: r#234
[#420 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#234
[#421 '&']: r#235
[#421 '(']: r#235
[#421 '*']: r#235
[#421 ';']: r#235
[#421 '@']: r#235
[#421 '_']: r#235
[#421 'break']: r#235
[#421 'const']: r#235
[#421 'const_assert']: r#235
[#421 'continue']: r#235
[#421 'continuing']: r#235
[#421 'discard']: r#235
[#421 'for']: r#235
[#421 'if']: r#235
[#421 'let']: r#235
[#421 'loop']: r#235
[#421 'return']: r#235
[#421 'switch']: r#235
[#421 'var']: r#235
[#421 'while']: r#235
[#421 '{']: r#235
[#421 '}']: r#235
[#421 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#235
[#422 '&']: r#236
[#422 '(']: r#236
[#422 '*']: r#236
[#422 ';']: r#236
[#422 '@']: r#236
[#422 '_']: r#236
[#422 'break']: r#236
[#422 'const']: r#236
[#422 'const_assert']: r#236
[#422 'continue']: r#236
[#422 'continuing']: r#236
[#422 'discard']: r#236
[#422 'for']: r#236
[#422 'if']: r#236
[#422 'let']: r#236
[#422 'loop']: r#236
[#422 'return']: r#236
[#422 'switch']: r#236
[#422 'var']: r#236
[#422 'while']: r#236
[#422 '{']: r#236
[#422 '}']: r#236
[#422 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#236
[#423 '&']: r#237
[#423 '(']: r#237
[#423 '*']: r#237
[#423 ';']: r#237
[#423 '@']: r#237
[#423 '_']: r#237
[#423 'break']: r#237
[#423 'const']: r#237
[#423 'const_assert']: r#237
[#423 'continue']: r#237
[#423 'continuing']: r#237
[#423 'discard']: r#237
[#423 'for']: r#237
[#423 'if']: r#237
[#423 'let']: r#237
[#423 'loop']: r#237
[#423 'return']: r#237
[#423 'switch']: r#237
[#423 'var']: r#237
[#423 'while']: r#237
[#423 '{']: r#237
[#423 '}']: r#237
[#423 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#237
[#424 '&']: r#238
[#424 '(']: r#238
[#424 '*']: r#238
[#424 ';']: r#238
[#424 '@']: r#238
[#424 '_']: r#238
[#424 'break']: r#238
[#424 'const']: r#238
[#424 'const_assert']: r#238
[#424 'continue']: r#238
[#424 'continuing']: r#238
[#424 'discard']: r#238
[#424 'for']: r#238
[#424 'if']: r#238
[#424 'let']: r#238
[#424 'loop']: r#238
[#424 'return']: r#238
[#424 'switch']: r#238
[#424 'var']: r#238
[#424 'while']: r#238
[#424 '{']: r#238
[#424 '}']: r#238
[#424 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#238
[#425 '}']: r#239
[#426 '&']: r#240
[#426 '(']: r#240
[#426 '*']: r#240
[#426 ';']: r#240
[#426 '@']: r#240
[#426 '_']: r#240
[#426 'alias']: r#240
[#426 'break']: r#240
[#426 'case']: r#240
[#426 'const']: r#240
[#426 'const_assert']: r#240
[#426 'continue']: r#240
[#426 'continuing']: r#240
[#426 'default']: r#240
[#426 'discard']: r#240
[#426 'else']: r#240
[#426 'fn']: r#240
[#426 'for']: r#240
[#426 'if']: r#240
[#426 'let']: r#240
[#426 'loop']: r#240
[#426 'override']: r#240
[#426 'return']: r#240
[#426 'struct']: r#240
[#426 'switch']: r#240
[#426 'var']: r#240
[#426 'while']: r#240
[#426 '{']: r#240
[#426 '}']: r#240
[#426 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#240
[#426 EndOfText]: r#240
[#427 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#241
[#428 ':']: s#449
[#429 ',']: s#448
[#430 ')']: r#242
[#430 ',']: r#242
[#431 ',']: s#432
[#432 '@']: s#40
[#433 '->']: s#444
[#434 ',']: r#243
[#434 '}']: r#243
[#435 ',']: r#244
[#435 '}']: r#244
[#436 '}']: s#442
[#437 '}']: r#245
[#438 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#439 ')']: r#246
[#439 ',']: r#246
[#439 ';']: r#246
[#439 '=']: r#246
[#439 '}']: r#246
[#440 ';']: r#247
[#440 '@']: r#247
[#440 'fn']: r#247
[#440 'for']: r#247
[#440 'if']: r#247
[#440 'loop']: r#247
[#440 'override']: r#247
[#440 'switch']: r#247
[#440 'var']: r#247
[#440 'while']: r#247
[#440 '{']: r#247
[#440 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#247
[#441 ',']: r#248
[#441 '}']: r#248
[#442 ';']: r#249
[#442 '@']: r#249
[#442 'alias']: r#249
[#442 'const']: r#249
[#442 'const_assert']: r#249
[#442 'fn']: r#249
[#442 'override']: r#249
[#442 'struct']: r#249
[#442 'var']: r#249
[#442 EndOfText]: r#249
[#443 '@']: r#250
[#443 '{']: r#250
[#444 '@']: s#40
[#445 ')']: r#251
[#445 ',']: r#251
[#446 ')']: r#252
[#446 ',']: r#252
[#447 ')']: r#253
[#448 ')']: r#254
[#449 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#450 '@']: s#40
[#451 'else']: s#497
[#452 '&']: r#255
[#452 '(']: r#255
[#452 '*']: r#255
[#452 ';']: r#255
[#452 '@']: r#255
[#452 '_']: r#255
[#452 'break']: r#255
[#452 'const']: r#255
[#452 'const_assert']: r#255
[#452 'continue']: r#255
[#452 'continuing']: r#255
[#452 'discard']: r#255
[#452 'else']: r#255
[#452 'for']: r#255
[#452 'if']: r#255
[#452 'let']: r#255
[#452 'loop']: r#255
[#452 'return']: r#255
[#452 'switch']: r#255
[#452 'var']: r#255
[#452 'while']: r#255
[#452 '{']: r#255
[#452 '}']: r#255
[#452 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#255
[#453 'else']: s#454
[#454 'if']: s#493
[#455 '@']: s#40
[#456 '{']: s#488
[#457 '{']: r#256
[#458 '@']: s#40
[#459 '&']: s#330
[#459 '(']: s#331
[#459 '*']: s#329
[#459 '_']: s#326
[#459 'const']: s#313
[#459 'let']: s#312
[#459 'var']: s#115
[#459 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#460 '@']: s#40
[#461 ';']: r#257
[#462 '!']: s#74
[#462 '&']: s#77
[#462 '(']: s#87
[#462 '*']: s#76
[#462 '-']: s#73
[#462 'false']: s#94
[#462 'true']: s#93
[#462 '~']: s#75
[#462 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#462 /0[fh]/]: s#99
[#462 /0[iu]?/]: s#96
[#462 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#462 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#462 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#462 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#462 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#462 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#462 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#462 /[1-9][0-9]*[fh]/]: s#100
[#462 /[1-9][0-9]*[iu]?/]: s#97
[#463 '!']: s#74
[#463 '&']: s#77
[#463 '(']: s#87
[#463 '*']: s#76
[#463 '-']: s#73
[#463 'false']: s#94
[#463 'true']: s#93
[#463 '~']: s#75
[#463 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#463 /0[fh]/]: s#99
[#463 /0[iu]?/]: s#96
[#463 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#463 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#463 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#463 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#463 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#463 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#463 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#463 /[1-9][0-9]*[fh]/]: s#100
[#463 /[1-9][0-9]*[iu]?/]: s#97
[#464 ')']: r#258
[#464 ';']: r#258
[#465 ')']: r#259
[#465 ';']: r#259
[#466 '%=']: r#227
[#466 '&=']: r#227
[#466 ')']: r#227
[#466 '*=']: r#227
[#466 '++']: r#227
[#466 '+=']: r#227
[#466 '--']: r#227
[#466 '-=']: r#227
[#466 '.']: r#227
[#466 '/=']: r#227
[#466 '=']: r#227
[#466 '[']: r#227
[#466 '^=']: r#227
[#466 '|=']: r#227
[#466 /\u200B_shift_left_assign/]: r#227
[#466 /\u200B_shift_right_assign/]: r#227
[#467 '%=']: r#260
[#467 '&=']: r#260
[#467 ')']: r#260
[#467 '*=']: r#260
[#467 '++']: r#260
[#467 '+=']: r#260
[#467 '--']: r#260
[#467 '-=']: r#260
[#467 '.']: r#260
[#467 '/=']: r#260
[#467 '=']: r#260
[#467 '[']: r#260
[#467 '^=']: r#260
[#467 '|=']: r#260
[#467 /\u200B_shift_left_assign/]: r#260
[#467 /\u200B_shift_right_assign/]: r#260
[#468 ',']: r#261
[#468 /\u200B_template_args_end/]: r#261
[#469 ',']: r#262
[#469 /\u200B_template_args_end/]: r#262
[#470 /\u200B_template_args_end/]: r#263
[#471 /\u200B_template_args_end/]: r#264
[#472 ',']: r#265
[#472 '||']: r#107
[#472 /\u200B_template_args_end/]: r#265
[#473 '&&']: r#109
[#473 ',']: r#266
[#473 /\u200B_template_args_end/]: r#266
[#474 '@']: r#267
[#474 'fn']: r#267
[#474 'for']: r#267
[#474 'if']: r#267
[#474 'loop']: r#267
[#474 'override']: r#267
[#474 'switch']: r#267
[#474 'var']: r#267
[#474 'while']: r#267
[#474 '{']: r#267
[#474 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#267
[#475 '!']: s#74
[#475 '&']: s#77
[#475 '(']: s#87
[#475 ')']: r#150
[#475 '*']: s#76
[#475 '-']: s#73
[#475 'false']: s#94
[#475 'true']: s#93
[#475 '~']: s#75
[#475 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#475 /0[fh]/]: s#99
[#475 /0[iu]?/]: s#96
[#475 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#475 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#475 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#475 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#475 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#475 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#475 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#475 /[1-9][0-9]*[fh]/]: s#100
[#475 /[1-9][0-9]*[iu]?/]: s#97
[#476 '@']: r#268
[#476 'fn']: r#268
[#476 'for']: r#268
[#476 'if']: r#268
[#476 'loop']: r#268
[#476 'override']: r#268
[#476 'switch']: r#268
[#476 'var']: r#268
[#476 'while']: r#268
[#476 '{']: r#268
[#476 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#268
[#477 ',']: s#270
[#478 ';']: r#269
[#479 ';']: r#270
[#480 '&']: r#271
[#480 '(']: r#271
[#480 '*']: r#271
[#480 ';']: r#271
[#480 '@']: r#271
[#480 '_']: r#271
[#480 'break']: r#271
[#480 'const']: r#271
[#480 'const_assert']: r#271
[#480 'continue']: r#271
[#480 'continuing']: r#271
[#480 'discard']: r#271
[#480 'for']: r#271
[#480 'if']: r#271
[#480 'let']: r#271
[#480 'loop']: r#271
[#480 'return']: r#271
[#480 'switch']: r#271
[#480 'var']: r#271
[#480 'while']: r#271
[#480 '{']: r#271
[#480 '}']: r#271
[#480 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#271
[#481 ')']: s#513
[#482 ';']: s#512
[#483 ';']: r#272
[#484 ';']: r#273
[#485 ';']: r#274
[#486 ';']: r#275
[#487 '{']: r#276
[#488 '&']: s#330
[#488 '(']: s#331
[#488 '*']: s#329
[#488 ';']: s#289
[#488 '@']: s#40
[#488 '_']: s#326
[#488 'break']: s#314
[#488 'const']: s#313
[#488 'const_assert']: s#35
[#488 'continue']: s#315
[#488 'discard']: s#300
[#488 'let']: s#312
[#488 'return']: s#304
[#488 'var']: s#115
[#488 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#489 '&']: r#277
[#489 '(']: r#277
[#489 '*']: r#277
[#489 ';']: r#277
[#489 '@']: r#277
[#489 '_']: r#277
[#489 'break']: r#277
[#489 'const']: r#277
[#489 'const_assert']: r#277
[#489 'continue']: r#277
[#489 'continuing']: r#277
[#489 'discard']: r#277
[#489 'for']: r#277
[#489 'if']: r#277
[#489 'let']: r#277
[#489 'loop']: r#277
[#489 'return']: r#277
[#489 'switch']: r#277
[#489 'var']: r#277
[#489 'while']: r#277
[#489 '{']: r#277
[#489 '}']: r#277
[#489 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#277
[#490 '{']: s#508
[#491 '{']: r#278
[#492 '@']: s#40
[#493 '!']: s#74
[#493 '&']: s#77
[#493 '(']: s#87
[#493 '*']: s#76
[#493 '-']: s#73
[#493 'false']: s#94
[#493 'true']: s#93
[#493 '~']: s#75
[#493 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#493 /0[fh]/]: s#99
[#493 /0[iu]?/]: s#96
[#493 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#493 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#493 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#493 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#493 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#493 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#493 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#493 /[1-9][0-9]*[fh]/]: s#100
[#493 /[1-9][0-9]*[iu]?/]: s#97
[#494 '&']: r#279
[#494 '(']: r#279
[#494 '*']: r#279
[#494 ';']: r#279
[#494 '@']: r#279
[#494 '_']: r#279
[#494 'break']: r#279
[#494 'const']: r#279
[#494 'const_assert']: r#279
[#494 'continue']: r#279
[#494 'continuing']: r#279
[#494 'discard']: r#279
[#494 'else']: r#279
[#494 'for']: r#279
[#494 'if']: r#279
[#494 'let']: r#279
[#494 'loop']: r#279
[#494 'return']: r#279
[#494 'switch']: r#279
[#494 'var']: r#279
[#494 'while']: r#279
[#494 '{']: r#279
[#494 '}']: r#279
[#494 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#279
[#495 '&']: r#280
[#495 '(']: r#280
[#495 '*']: r#280
[#495 ';']: r#280
[#495 '@']: r#280
[#495 '_']: r#280
[#495 'break']: r#280
[#495 'const']: r#280
[#495 'const_assert']: r#280
[#495 'continue']: r#280
[#495 'continuing']: r#280
[#495 'discard']: r#280
[#495 'for']: r#280
[#495 'if']: r#280
[#495 'let']: r#280
[#495 'loop']: r#280
[#495 'return']: r#280
[#495 'switch']: r#280
[#495 'var']: r#280
[#495 'while']: r#280
[#495 '{']: r#280
[#495 '}']: r#280
[#495 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#280
[#496 '&']: r#281
[#496 '(']: r#281
[#496 '*']: r#281
[#496 ';']: r#281
[#496 '@']: r#281
[#496 '_']: r#281
[#496 'break']: r#281
[#496 'const']: r#281
[#496 'const_assert']: r#281
[#496 'continue']: r#281
[#496 'continuing']: r#281
[#496 'discard']: r#281
[#496 'for']: r#281
[#496 'if']: r#281
[#496 'let']: r#281
[#496 'loop']: r#281
[#496 'return']: r#281
[#496 'switch']: r#281
[#496 'var']: r#281
[#496 'while']: r#281
[#496 '{']: r#281
[#496 '}']: r#281
[#496 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#281
[#497 '@']: s#40
[#498 '&']: r#282
[#498 '(']: r#282
[#498 '*']: r#282
[#498 ';']: r#282
[#498 '@']: r#282
[#498 '_']: r#282
[#498 'break']: r#282
[#498 'const']: r#282
[#498 'const_assert']: r#282
[#498 'continue']: r#282
[#498 'continuing']: r#282
[#498 'discard']: r#282
[#498 'else']: r#282
[#498 'for']: r#282
[#498 'if']: r#282
[#498 'let']: r#282
[#498 'loop']: r#282
[#498 'return']: r#282
[#498 'switch']: r#282
[#498 'var']: r#282
[#498 'while']: r#282
[#498 '{']: r#282
[#498 '}']: r#282
[#498 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#282
[#499 ')']: r#283
[#499 ',']: r#283
[#500 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#501 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#284
[#502 '@']: s#40
[#503 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#285
[#504 '@']: r#286
[#504 '{']: r#286
[#505 '&']: r#287
[#505 '(']: r#287
[#505 '*']: r#287
[#505 ';']: r#287
[#505 '@']: r#287
[#505 '_']: r#287
[#505 'break']: r#287
[#505 'const']: r#287
[#505 'const_assert']: r#287
[#505 'continue']: r#287
[#505 'continuing']: r#287
[#505 'discard']: r#287
[#505 'for']: r#287
[#505 'if']: r#287
[#505 'let']: r#287
[#505 'loop']: r#287
[#505 'return']: r#287
[#505 'switch']: r#287
[#505 'var']: r#287
[#505 'while']: r#287
[#505 '{']: r#287
[#505 '}']: r#287
[#505 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#287
[#506 '@']: s#40
[#507 '{']: r#288
[#508 'case']: s#527
[#508 'default']: s#528
[#509 'continuing']: s#521
[#510 'continuing']: r#289
[#510 '}']: r#289
[#511 '&']: s#330
[#511 '(']: s#331
[#511 '*']: s#329
[#511 ';']: s#289
[#511 '@']: s#40
[#511 '_']: s#326
[#511 'break']: s#314
[#511 'const']: s#313
[#511 'const_assert']: s#35
[#511 'continue']: s#315
[#511 'discard']: s#300
[#511 'let']: s#312
[#511 'return']: s#304
[#511 'var']: s#115
[#511 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#512 '!']: s#74
[#512 '&']: s#77
[#512 '(']: s#87
[#512 '*']: s#76
[#512 '-']: s#73
[#512 'false']: s#94
[#512 'true']: s#93
[#512 '~']: s#75
[#512 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#512 /0[fh]/]: s#99
[#512 /0[iu]?/]: s#96
[#512 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#512 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#512 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#512 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#512 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#512 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#512 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#512 /[1-9][0-9]*[fh]/]: s#100
[#512 /[1-9][0-9]*[iu]?/]: s#97
[#513 '@']: s#40
[#514 '@']: r#290
[#514 'fn']: r#290
[#514 'for']: r#290
[#514 'if']: r#290
[#514 'loop']: r#290
[#514 'override']: r#290
[#514 'switch']: r#290
[#514 'var']: r#290
[#514 'while']: r#290
[#514 '{']: r#290
[#514 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#290
[#515 '&']: r#291
[#515 '(']: r#291
[#515 '*']: r#291
[#515 ';']: r#291
[#515 '@']: r#291
[#515 '_']: r#291
[#515 'break']: r#291
[#515 'const']: r#291
[#515 'const_assert']: r#291
[#515 'continue']: r#291
[#515 'continuing']: r#291
[#515 'discard']: r#291
[#515 'for']: r#291
[#515 'if']: r#291
[#515 'let']: r#291
[#515 'loop']: r#291
[#515 'return']: r#291
[#515 'switch']: r#291
[#515 'var']: r#291
[#515 'while']: r#291
[#515 '{']: r#291
[#515 '}']: r#291
[#515 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#291
[#516 ';']: s#543
[#517 ';']: r#292
[#518 'continuing']: r#293
[#518 '}']: r#293
[#519 '}']: s#542
[#520 '}']: r#294
[#521 '@']: s#40
[#522 '}']: s#537
[#523 '}']: r#295
[#524 'case']: s#527
[#524 'default']: s#528
[#525 'case']: r#296
[#525 'default']: r#296
[#525 '}']: r#296
[#526 'case']: r#297
[#526 'default']: r#297
[#526 '}']: r#297
[#527 '!']: s#74
[#527 '&']: s#77
[#527 '(']: s#87
[#527 '*']: s#76
[#527 '-']: s#73
[#527 'default']: s#534
[#527 'false']: s#94
[#527 'true']: s#93
[#527 '~']: s#75
[#527 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#527 /0[fh]/]: s#99
[#527 /0[iu]?/]: s#96
[#527 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#527 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#527 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#527 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#527 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#527 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#527 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#527 /[1-9][0-9]*[fh]/]: s#100
[#527 /[1-9][0-9]*[iu]?/]: s#97
[#528 ':']: s#531
[#529 '&']: r#298
[#529 '(']: r#298
[#529 '*']: r#298
[#529 ';']: r#298
[#529 '@']: r#298
[#529 '_']: r#298
[#529 'break']: r#298
[#529 'const']: r#298
[#529 'const_assert']: r#298
[#529 'continue']: r#298
[#529 'continuing']: r#298
[#529 'discard']: r#298
[#529 'else']: r#298
[#529 'for']: r#298
[#529 'if']: r#298
[#529 'let']: r#298
[#529 'loop']: r#298
[#529 'return']: r#298
[#529 'switch']: r#298
[#529 'var']: r#298
[#529 'while']: r#298
[#529 '{']: r#298
[#529 '}']: r#298
[#529 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#298
[#530 '@']: s#40
[#531 '@']: r#299
[#531 '{']: r#299
[#532 ':']: s#555
[#533 ',']: s#553
[#534 ',']: r#300
[#534 ':']: r#300
[#534 '@']: r#300
[#534 '{']: r#300
[#535 ',']: r#301
[#535 ':']: r#301
[#535 '@']: r#301
[#535 '{']: r#301
[#536 '}']: r#302
[#537 '&']: r#303
[#537 '(']: r#303
[#537 '*']: r#303
[#537 ';']: r#303
[#537 '@']: r#303
[#537 '_']: r#303
[#537 'break']: r#303
[#537 'const']: r#303
[#537 'const_assert']: r#303
[#537 'continue']: r#303
[#537 'continuing']: r#303
[#537 'discard']: r#303
[#537 'for']: r#303
[#537 'if']: r#303
[#537 'let']: r#303
[#537 'loop']: r#303
[#537 'return']: r#303
[#537 'switch']: r#303
[#537 'var']: r#303
[#537 'while']: r#303
[#537 '{']: r#303
[#537 '}']: r#303
[#537 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#303
[#538 '}']: r#304
[#539 '{']: s#549
[#540 '{']: r#305
[#541 '@']: s#40
[#542 '&']: r#306
[#542 '(']: r#306
[#542 '*']: r#306
[#542 ';']: r#306
[#542 '@']: r#306
[#542 '_']: r#306
[#542 'break']: r#306
[#542 'const']: r#306
[#542 'const_assert']: r#306
[#542 'continue']: r#306
[#542 'continuing']: r#306
[#542 'discard']: r#306
[#542 'for']: r#306
[#542 'if']: r#306
[#542 'let']: r#306
[#542 'loop']: r#306
[#542 'return']: r#306
[#542 'switch']: r#306
[#542 'var']: r#306
[#542 'while']: r#306
[#542 '{']: r#306
[#542 '}']: r#306
[#542 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#306
[#543 '&']: s#330
[#543 '(']: s#331
[#543 '*']: s#329
[#543 '_']: s#326
[#543 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#544 ')']: r#307
[#545 ')']: r#308
[#546 ')']: r#309
[#547 ')']: r#310
[#548 '{']: r#311
[#549 '&']: s#330
[#549 '(']: s#331
[#549 '*']: s#329
[#549 ';']: s#289
[#549 '@']: s#40
[#549 '_']: s#326
[#549 'break']: s#314
[#549 'const']: s#313
[#549 'const_assert']: s#35
[#549 'continue']: s#315
[#549 'discard']: s#300
[#549 'let']: s#312
[#549 'return']: s#304
[#549 'var']: s#115
[#549 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#550 ',']: s#561
[#551 ',']: r#312
[#551 ':']: r#312
[#551 '@']: r#312
[#551 '{']: r#312
[#552 ',']: s#553
[#553 '!']: s#74
[#553 '&']: s#77
[#553 '(']: s#87
[#553 '*']: s#76
[#553 '-']: s#73
[#553 'default']: s#534
[#553 'false']: s#94
[#553 'true']: s#93
[#553 '~']: s#75
[#553 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#553 /0[fh]/]: s#99
[#553 /0[iu]?/]: s#96
[#553 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#553 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#553 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#553 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#553 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#553 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#553 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#553 /[1-9][0-9]*[fh]/]: s#100
[#553 /[1-9][0-9]*[iu]?/]: s#97
[#554 '@']: s#40
[#555 '@']: r#313
[#555 '{']: r#313
[#556 'case']: r#314
[#556 'default']: r#314
[#556 '}']: r#314
[#557 'case']: r#315
[#557 'default']: r#315
[#557 '}']: r#315
[#558 ',']: r#316
[#558 ':']: r#316
[#558 '@']: r#316
[#558 '{']: r#316
[#559 ',']: r#317
[#559 ':']: r#317
[#559 '@']: r#317
[#559 '{']: r#317
[#560 ':']: r#318
[#560 '@']: r#318
[#560 '{']: r#318
[#561 ':']: r#319
[#561 '@']: r#319
[#561 '{']: r#319
[#562 'break']: s#568
[#563 'break']: r#320
[#563 '}']: r#320
[#564 '&']: s#330
[#564 '(']: s#331
[#564 '*']: s#329
[#564 ';']: s#289
[#564 '@']: s#40
[#564 '_']: s#326
[#564 'break']: s#314
[#564 'const']: s#313
[#564 'const_assert']: s#35
[#564 'continue']: s#315
[#564 'discard']: s#300
[#564 'let']: s#312
[#564 'return']: s#304
[#564 'var']: s#115
[#564 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#565 'break']: r#321
[#565 '}']: r#321
[#566 '}']: s#570
[#567 '}']: r#322
[#568 'if']: s#569
[#569 '!']: s#74
[#569 '&']: s#77
[#569 '(']: s#87
[#569 '*']: s#76
[#569 '-']: s#73
[#569 'false']: s#94
[#569 'true']: s#93
[#569 '~']: s#75
[#569 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#95
[#569 /0[fh]/]: s#99
[#569 /0[iu]?/]: s#96
[#569 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#104
[#569 /0[xX][0-9a-fA-F]+[iu]?/]: s#98
[#569 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#106
[#569 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#105
[#569 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#101
[#569 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#103
[#569 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#102
[#569 /[1-9][0-9]*[fh]/]: s#100
[#569 /[1-9][0-9]*[iu]?/]: s#97
[#570 '}']: r#323
[#571 ';']: s#572
[#572 '}']: r#324

=Goto:
[#0 diagnostic_directive]: #5
[#0 enable_directive]: #6
[#0 global_directive]: #4
[#0 requires_directive]: #7
[#0 translation_unit]: #1
[#0 translation_unit/0.0]: #2
[#0 translation_unit/0.0/0]: #3
[#2 attribute]: #39
[#2 const_assert_statement]: #28
[#2 function_decl]: #27
[#2 function_decl/0.0]: #34
[#2 function_decl/0.0/0]: #38
[#2 global_decl]: #21
[#2 global_value_decl]: #24
[#2 global_value_decl/1.0]: #31
[#2 global_value_decl/1.0/0]: #37
[#2 global_variable_decl]: #23
[#2 global_variable_decl/0.0]: #29
[#2 global_variable_decl/0.0/0]: #36
[#2 struct_decl]: #26
[#2 translation_unit/0.1]: #19
[#2 translation_unit/0.1/0]: #20
[#2 type_alias_decl]: #25
[#4 diagnostic_directive]: #5
[#4 enable_directive]: #6
[#4 global_directive]: #4
[#4 requires_directive]: #7
[#4 translation_unit/0.0/0]: #18
[#8 diagnostic_control]: #16
[#9 enable_extension_name]: #14
[#10 software_extension_list]: #11
[#10 software_extension_name]: #12
[#12 software_extension_list/0.1]: #128
[#12 software_extension_list/0.1/0]: #129
[#12 software_extension_list/0.1/0/0.0]: #130
[#17 severity_control_name]: #121
[#21 attribute]: #39
[#21 const_assert_statement]: #28
[#21 function_decl]: #27
[#21 function_decl/0.0]: #34
[#21 function_decl/0.0/0]: #38
[#21 global_decl]: #21
[#21 global_value_decl]: #24
[#21 global_value_decl/1.0]: #31
[#21 global_value_decl/1.0/0]: #37
[#21 global_variable_decl]: #23
[#21 global_variable_decl/0.0]: #29
[#21 global_variable_decl/0.0/0]: #36
[#21 struct_decl]: #26
[#21 translation_unit/0.1/0]: #120
[#21 type_alias_decl]: #25
[#29 variable_decl]: #114
[#30 ident]: #113
[#30 ident_pattern_token]: #88
[#30 optionally_typed_ident]: #112
[#32 ident]: #110
[#32 ident_pattern_token]: #88
[#33 ident]: #109
[#33 ident_pattern_token]: #88
[#34 function_header]: #107
[#35 additive_expression]: #69
[#35 binary_and_expression]: #66
[#35 binary_or_expression]: #67
[#35 binary_xor_expression]: #68
[#35 bitwise_expression]: #64
[#35 bool_literal]: #86
[#35 call_expression]: #80
[#35 decimal_float_literal]: #91
[#35 decimal_int_literal]: #89
[#35 expression]: #60
[#35 float_literal]: #85
[#35 hex_float_literal]: #92
[#35 hex_int_literal]: #90
[#35 ident]: #83
[#35 ident_pattern_token]: #88
[#35 int_literal]: #84
[#35 literal]: #81
[#35 multiplicative_expression]: #71
[#35 paren_expression]: #82
[#35 primary_expression]: #78
[#35 relational_expression]: #61
[#35 shift_expression]: #65
[#35 short_circuit_and_expression]: #63
[#35 short_circuit_or_expression]: #62
[#35 singular_expression]: #72
[#35 template_elaborated_ident]: #79
[#35 unary_expression]: #70
[#39 attribute]: #39
[#39 function_decl/0.0/0]: #59
[#39 global_value_decl/1.0/0]: #58
[#39 global_variable_decl/0.0/0]: #57
[#45 diagnostic_control]: #200
[#65 _greater_than]: #183
[#65 _greater_than_equal]: #185
[#65 _less_than]: #182
[#65 _less_than_equal]: #184
[#69 additive_operator]: #176
[#70 _shift_left]: #172
[#70 _shift_right]: #173
[#71 multiplicative_operator]: #168
[#73 bool_literal]: #86
[#73 call_expression]: #80
[#73 decimal_float_literal]: #91
[#73 decimal_int_literal]: #89
[#73 float_literal]: #85
[#73 hex_float_literal]: #92
[#73 hex_int_literal]: #90
[#73 ident]: #83
[#73 ident_pattern_token]: #88
[#73 int_literal]: #84
[#73 literal]: #81
[#73 paren_expression]: #82
[#73 primary_expression]: #78
[#73 singular_expression]: #72
[#73 template_elaborated_ident]: #79
[#73 unary_expression]: #167
[#74 bool_literal]: #86
[#74 call_expression]: #80
[#74 decimal_float_literal]: #91
[#74 decimal_int_literal]: #89
[#74 float_literal]: #85
[#74 hex_float_literal]: #92
[#74 hex_int_literal]: #90
[#74 ident]: #83
[#74 ident_pattern_token]: #88
[#74 int_literal]: #84
[#74 literal]: #81
[#74 paren_expression]: #82
[#74 primary_expression]: #78
[#74 singular_expression]: #72
[#74 template_elaborated_ident]: #79
[#74 unary_expression]: #166
[#75 bool_literal]: #86
[#75 call_expression]: #80
[#75 decimal_float_literal]: #91
[#75 decimal_int_literal]: #89
[#75 float_literal]: #85
[#75 hex_float_literal]: #92
[#75 hex_int_literal]: #90
[#75 ident]: #83
[#75 ident_pattern_token]: #88
[#75 int_literal]: #84
[#75 literal]: #81
[#75 paren_expression]: #82
[#75 primary_expression]: #78
[#75 singular_expression]: #72
[#75 template_elaborated_ident]: #79
[#75 unary_expression]: #165
[#76 bool_literal]: #86
[#76 call_expression]: #80
[#76 decimal_float_literal]: #91
[#76 decimal_int_literal]: #89
[#76 float_literal]: #85
[#76 hex_float_literal]: #92
[#76 hex_int_literal]: #90
[#76 ident]: #83
[#76 ident_pattern_token]: #88
[#76 int_literal]: #84
[#76 literal]: #81
[#76 paren_expression]: #82
[#76 primary_expression]: #78
[#76 singular_expression]: #72
[#76 template_elaborated_ident]: #79
[#76 unary_expression]: #164
[#77 bool_literal]: #86
[#77 call_expression]: #80
[#77 decimal_float_literal]: #91
[#77 decimal_int_literal]: #89
[#77 float_literal]: #85
[#77 hex_float_literal]: #92
[#77 hex_int_literal]: #90
[#77 ident]: #83
[#77 ident_pattern_token]: #88
[#77 int_literal]: #84
[#77 literal]: #81
[#77 paren_expression]: #82
[#77 primary_expression]: #78
[#77 singular_expression]: #72
[#77 template_elaborated_ident]: #79
[#77 unary_expression]: #163
[#78 component_or_swizzle_specifier]: #160
[#78 singular_expression/0.1]: #159
[#79 argument_expression_list]: #157
[#83 _disambiguate_template]: #156
[#87 additive_expression]: #69
[#87 binary_and_expression]: #66
[#87 binary_or_expression]: #67
[#87 binary_xor_expression]: #68
[#87 bitwise_expression]: #64
[#87 bool_literal]: #86
[#87 call_expression]: #80
[#87 decimal_float_literal]: #91
[#87 decimal_int_literal]: #89
[#87 expression]: #155
[#87 float_literal]: #85
[#87 hex_float_literal]: #92
[#87 hex_int_literal]: #90
[#87 ident]: #83
[#87 ident_pattern_token]: #88
[#87 int_literal]: #84
[#87 literal]: #81
[#87 multiplicative_expression]: #71
[#87 paren_expression]: #82
[#87 primary_expression]: #78
[#87 relational_expression]: #61
[#87 shift_expression]: #65
[#87 short_circuit_and_expression]: #63
[#87 short_circuit_or_expression]: #62
[#87 singular_expression]: #72
[#87 template_elaborated_ident]: #79
[#87 unary_expression]: #70
[#88 _disambiguate_template]: #154
[#107 attribute]: #153
[#107 compound_statement]: #150
[#107 compound_statement/0.0]: #151
[#107 compound_statement/0.0/0]: #152
[#108 ident]: #149
[#108 ident_pattern_token]: #88
[#109 struct_body_decl]: #147
[#111 ident]: #113
[#111 ident_pattern_token]: #88
[#111 optionally_typed_ident]: #145
[#113 optionally_typed_ident/0.1]: #142
[#114 global_variable_decl/0.2]: #140
[#115 _disambiguate_template]: #138
[#128 software_extension_list/0.2]: #135
[#130 software_extension_list/0.1/0]: #134
[#130 software_extension_list/0.1/0/0.0]: #130
[#131 software_extension_name]: #133
[#137 diagnostic_rule_name]: #266
[#138 _template_args_start]: #247
[#138 template_list]: #265
[#138 variable_decl/0.2]: #264
[#141 additive_expression]: #69
[#141 binary_and_expression]: #66
[#141 binary_or_expression]: #67
[#141 binary_xor_expression]: #68
[#141 bitwise_expression]: #64
[#141 bool_literal]: #86
[#141 call_expression]: #80
[#141 decimal_float_literal]: #91
[#141 decimal_int_literal]: #89
[#141 expression]: #263
[#141 float_literal]: #85
[#141 hex_float_literal]: #92
[#141 hex_int_literal]: #90
[#141 ident]: #83
[#141 ident_pattern_token]: #88
[#141 int_literal]: #84
[#141 literal]: #81
[#141 multiplicative_expression]: #71
[#141 paren_expression]: #82
[#141 primary_expression]: #78
[#141 relational_expression]: #61
[#141 shift_expression]: #65
[#141 short_circuit_and_expression]: #63
[#141 short_circuit_or_expression]: #62
[#141 singular_expression]: #72
[#141 template_elaborated_ident]: #79
[#141 unary_expression]: #70
[#143 ident]: #258
[#143 ident_pattern_token]: #88
[#143 type_specifier]: #262
[#144 additive_expression]: #69
[#144 binary_and_expression]: #66
[#144 binary_or_expression]: #67
[#144 binary_xor_expression]: #68
[#144 bitwise_expression]: #64
[#144 bool_literal]: #86
[#144 call_expression]: #80
[#144 decimal_float_literal]: #91
[#144 decimal_int_literal]: #89
[#144 expression]: #261
[#144 float_literal]: #85
[#144 hex_float_literal]: #92
[#144 hex_int_literal]: #90
[#144 ident]: #83
[#144 ident_pattern_token]: #88
[#144 int_literal]: #84
[#144 literal]: #81
[#144 multiplicative_expression]: #71
[#144 paren_expression]: #82
[#144 primary_expression]: #78
[#144 relational_expression]: #61
[#144 shift_expression]: #65
[#144 short_circuit_and_expression]: #63
[#144 short_circuit_or_expression]: #62
[#144 singular_expression]: #72
[#144 template_elaborated_ident]: #79
[#144 unary_expression]: #70
[#145 global_value_decl/1.3]: #259
[#146 ident]: #258
[#146 ident_pattern_token]: #88
[#146 type_specifier]: #257
[#148 attribute]: #256
[#148 struct_member]: #253
[#148 struct_member/0.0]: #254
[#148 struct_member/0.0/0]: #255
[#153 attribute]: #153
[#153 compound_statement/0.0/0]: #250
[#156 _template_args_start]: #247
[#156 template_elaborated_ident/0.2]: #245
[#156 template_list]: #246
[#158 additive_expression]: #69
[#158 argument_expression_list/0.1]: #242
[#158 binary_and_expression]: #66
[#158 binary_or_expression]: #67
[#158 binary_xor_expression]: #68
[#158 bitwise_expression]: #64
[#158 bool_literal]: #86
[#158 call_expression]: #80
[#158 decimal_float_literal]: #91
[#158 decimal_int_literal]: #89
[#158 expression]: #244
[#158 expression_comma_list]: #243
[#158 float_literal]: #85
[#158 hex_float_literal]: #92
[#158 hex_int_literal]: #90
[#158 ident]: #83
[#158 ident_pattern_token]: #88
[#158 int_literal]: #84
[#158 literal]: #81
[#158 multiplicative_expression]: #71
[#158 paren_expression]: #82
[#158 primary_expression]: #78
[#158 relational_expression]: #61
[#158 shift_expression]: #65
[#158 short_circuit_and_expression]: #63
[#158 short_circuit_or_expression]: #62
[#158 singular_expression]: #72
[#158 template_elaborated_ident]: #79
[#158 unary_expression]: #70
[#161 additive_expression]: #69
[#161 binary_and_expression]: #66
[#161 binary_or_expression]: #67
[#161 binary_xor_expression]: #68
[#161 bitwise_expression]: #64
[#161 bool_literal]: #86
[#161 call_expression]: #80
[#161 decimal_float_literal]: #91
[#161 decimal_int_literal]: #89
[#161 expression]: #241
[#161 float_literal]: #85
[#161 hex_float_literal]: #92
[#161 hex_int_literal]: #90
[#161 ident]: #83
[#161 ident_pattern_token]: #88
[#161 int_literal]: #84
[#161 literal]: #81
[#161 multiplicative_expression]: #71
[#161 paren_expression]: #82
[#161 primary_expression]: #78
[#161 relational_expression]: #61
[#161 shift_expression]: #65
[#161 short_circuit_and_expression]: #63
[#161 short_circuit_or_expression]: #62
[#161 singular_expression]: #72
[#161 template_elaborated_ident]: #79
[#161 unary_expression]: #70
[#162 member_ident]: #230
[#162 swizzle_name]: #231
[#168 bool_literal]: #86
[#168 call_expression]: #80
[#168 decimal_float_literal]: #91
[#168 decimal_int_literal]: #89
[#168 float_literal]: #85
[#168 hex_float_literal]: #92
[#168 hex_int_literal]: #90
[#168 ident]: #83
[#168 ident_pattern_token]: #88
[#168 int_literal]: #84
[#168 literal]: #81
[#168 paren_expression]: #82
[#168 primary_expression]: #78
[#168 singular_expression]: #72
[#168 template_elaborated_ident]: #79
[#168 unary_expression]: #229
[#172 bool_literal]: #86
[#172 call_expression]: #80
[#172 decimal_float_literal]: #91
[#172 decimal_int_literal]: #89
[#172 float_literal]: #85
[#172 hex_float_literal]: #92
[#172 hex_int_literal]: #90
[#172 ident]: #83
[#172 ident_pattern_token]: #88
[#172 int_literal]: #84
[#172 literal]: #81
[#172 paren_expression]: #82
[#172 primary_expression]: #78
[#172 singular_expression]: #72
[#172 template_elaborated_ident]: #79
[#172 unary_expression]: #228
[#173 bool_literal]: #86
[#173 call_expression]: #80
[#173 decimal_float_literal]: #91
[#173 decimal_int_literal]: #89
[#173 float_literal]: #85
[#173 hex_float_literal]: #92
[#173 hex_int_literal]: #90
[#173 ident]: #83
[#173 ident_pattern_token]: #88
[#173 int_literal]: #84
[#173 literal]: #81
[#173 paren_expression]: #82
[#173 primary_expression]: #78
[#173 singular_expression]: #72
[#173 template_elaborated_ident]: #79
[#173 unary_expression]: #227
[#176 bool_literal]: #86
[#176 call_expression]: #80
[#176 decimal_float_literal]: #91
[#176 decimal_int_literal]: #89
[#176 float_literal]: #85
[#176 hex_float_literal]: #92
[#176 hex_int_literal]: #90
[#176 ident]: #83
[#176 ident_pattern_token]: #88
[#176 int_literal]: #84
[#176 literal]: #81
[#176 multiplicative_expression]: #225
[#176 paren_expression]: #82
[#176 primary_expression]: #78
[#176 singular_expression]: #72
[#176 template_elaborated_ident]: #79
[#176 unary_expression]: #226
[#179 bool_literal]: #86
[#179 call_expression]: #80
[#179 decimal_float_literal]: #91
[#179 decimal_int_literal]: #89
[#179 float_literal]: #85
[#179 hex_float_literal]: #92
[#179 hex_int_literal]: #90
[#179 ident]: #83
[#179 ident_pattern_token]: #88
[#179 int_literal]: #84
[#179 literal]: #81
[#179 paren_expression]: #82
[#179 primary_expression]: #78
[#179 singular_expression]: #72
[#179 template_elaborated_ident]: #79
[#179 unary_expression]: #224
[#180 bool_literal]: #86
[#180 call_expression]: #80
[#180 decimal_float_literal]: #91
[#180 decimal_int_literal]: #89
[#180 float_literal]: #85
[#180 hex_float_literal]: #92
[#180 hex_int_literal]: #90
[#180 ident]: #83
[#180 ident_pattern_token]: #88
[#180 int_literal]: #84
[#180 literal]: #81
[#180 paren_expression]: #82
[#180 primary_expression]: #78
[#180 singular_expression]: #72
[#180 template_elaborated_ident]: #79
[#180 unary_expression]: #223
[#181 bool_literal]: #86
[#181 call_expression]: #80
[#181 decimal_float_literal]: #91
[#181 decimal_int_literal]: #89
[#181 float_literal]: #85
[#181 hex_float_literal]: #92
[#181 hex_int_literal]: #90
[#181 ident]: #83
[#181 ident_pattern_token]: #88
[#181 int_literal]: #84
[#181 literal]: #81
[#181 paren_expression]: #82
[#181 primary_expression]: #78
[#181 singular_expression]: #72
[#181 template_elaborated_ident]: #79
[#181 unary_expression]: #222
[#182 additive_expression]: #69
[#182 bool_literal]: #86
[#182 call_expression]: #80
[#182 decimal_float_literal]: #91
[#182 decimal_int_literal]: #89
[#182 float_literal]: #85
[#182 hex_float_literal]: #92
[#182 hex_int_literal]: #90
[#182 ident]: #83
[#182 ident_pattern_token]: #88
[#182 int_literal]: #84
[#182 literal]: #81
[#182 multiplicative_expression]: #71
[#182 paren_expression]: #82
[#182 primary_expression]: #78
[#182 shift_expression]: #221
[#182 singular_expression]: #72
[#182 template_elaborated_ident]: #79
[#182 unary_expression]: #214
[#183 additive_expression]: #69
[#183 bool_literal]: #86
[#183 call_expression]: #80
[#183 decimal_float_literal]: #91
[#183 decimal_int_literal]: #89
[#183 float_literal]: #85
[#183 hex_float_literal]: #92
[#183 hex_int_literal]: #90
[#183 ident]: #83
[#183 ident_pattern_token]: #88
[#183 int_literal]: #84
[#183 literal]: #81
[#183 multiplicative_expression]: #71
[#183 paren_expression]: #82
[#183 primary_expression]: #78
[#183 shift_expression]: #220
[#183 singular_expression]: #72
[#183 template_elaborated_ident]: #79
[#183 unary_expression]: #214
[#184 additive_expression]: #69
[#184 bool_literal]: #86
[#184 call_expression]: #80
[#184 decimal_float_literal]: #91
[#184 decimal_int_literal]: #89
[#184 float_literal]: #85
[#184 hex_float_literal]: #92
[#184 hex_int_literal]: #90
[#184 ident]: #83
[#184 ident_pattern_token]: #88
[#184 int_literal]: #84
[#184 literal]: #81
[#184 multiplicative_expression]: #71
[#184 paren_expression]: #82
[#184 primary_expression]: #78
[#184 shift_expression]: #219
[#184 singular_expression]: #72
[#184 template_elaborated_ident]: #79
[#184 unary_expression]: #214
[#185 additive_expression]: #69
[#185 bool_literal]: #86
[#185 call_expression]: #80
[#185 decimal_float_literal]: #91
[#185 decimal_int_literal]: #89
[#185 float_literal]: #85
[#185 hex_float_literal]: #92
[#185 hex_int_literal]: #90
[#185 ident]: #83
[#185 ident_pattern_token]: #88
[#185 int_literal]: #84
[#185 literal]: #81
[#185 multiplicative_expression]: #71
[#185 paren_expression]: #82
[#185 primary_expression]: #78
[#185 shift_expression]: #218
[#185 singular_expression]: #72
[#185 template_elaborated_ident]: #79
[#185 unary_expression]: #214
[#186 additive_expression]: #69
[#186 bool_literal]: #86
[#186 call_expression]: #80
[#186 decimal_float_literal]: #91
[#186 decimal_int_literal]: #89
[#186 float_literal]: #85
[#186 hex_float_literal]: #92
[#186 hex_int_literal]: #90
[#186 ident]: #83
[#186 ident_pattern_token]: #88
[#186 int_literal]: #84
[#186 literal]: #81
[#186 multiplicative_expression]: #71
[#186 paren_expression]: #82
[#186 primary_expression]: #78
[#186 shift_expression]: #217
[#186 singular_expression]: #72
[#186 template_elaborated_ident]: #79
[#186 unary_expression]: #214
[#187 additive_expression]: #69
[#187 bool_literal]: #86
[#187 call_expression]: #80
[#187 decimal_float_literal]: #91
[#187 decimal_int_literal]: #89
[#187 float_literal]: #85
[#187 hex_float_literal]: #92
[#187 hex_int_literal]: #90
[#187 ident]: #83
[#187 ident_pattern_token]: #88
[#187 int_literal]: #84
[#187 literal]: #81
[#187 multiplicative_expression]: #71
[#187 paren_expression]: #82
[#187 primary_expression]: #78
[#187 shift_expression]: #216
[#187 singular_expression]: #72
[#187 template_elaborated_ident]: #79
[#187 unary_expression]: #214
[#192 additive_expression]: #69
[#192 bool_literal]: #86
[#192 call_expression]: #80
[#192 decimal_float_literal]: #91
[#192 decimal_int_literal]: #89
[#192 float_literal]: #85
[#192 hex_float_literal]: #92
[#192 hex_int_literal]: #90
[#192 ident]: #83
[#192 ident_pattern_token]: #88
[#192 int_literal]: #84
[#192 literal]: #81
[#192 multiplicative_expression]: #71
[#192 paren_expression]: #82
[#192 primary_expression]: #78
[#192 relational_expression]: #215
[#192 shift_expression]: #65
[#192 singular_expression]: #72
[#192 template_elaborated_ident]: #79
[#192 unary_expression]: #214
[#193 additive_expression]: #69
[#193 bool_literal]: #86
[#193 call_expression]: #80
[#193 decimal_float_literal]: #91
[#193 decimal_int_literal]: #89
[#193 float_literal]: #85
[#193 hex_float_literal]: #92
[#193 hex_int_literal]: #90
[#193 ident]: #83
[#193 ident_pattern_token]: #88
[#193 int_literal]: #84
[#193 literal]: #81
[#193 multiplicative_expression]: #71
[#193 paren_expression]: #82
[#193 primary_expression]: #78
[#193 relational_expression]: #213
[#193 shift_expression]: #65
[#193 singular_expression]: #72
[#193 template_elaborated_ident]: #79
[#193 unary_expression]: #214
[#194 additive_expression]: #69
[#194 binary_and_expression]: #66
[#194 binary_or_expression]: #67
[#194 binary_xor_expression]: #68
[#194 bitwise_expression]: #64
[#194 bool_literal]: #86
[#194 call_expression]: #80
[#194 decimal_float_literal]: #91
[#194 decimal_int_literal]: #89
[#194 expression]: #212
[#194 float_literal]: #85
[#194 hex_float_literal]: #92
[#194 hex_int_literal]: #90
[#194 ident]: #83
[#194 ident_pattern_token]: #88
[#194 int_literal]: #84
[#194 literal]: #81
[#194 multiplicative_expression]: #71
[#194 paren_expression]: #82
[#194 primary_expression]: #78
[#194 relational_expression]: #61
[#194 shift_expression]: #65
[#194 short_circuit_and_expression]: #63
[#194 short_circuit_or_expression]: #62
[#194 singular_expression]: #72
[#194 template_elaborated_ident]: #79
[#194 unary_expression]: #70
[#195 additive_expression]: #69
[#195 binary_and_expression]: #66
[#195 binary_or_expression]: #67
[#195 binary_xor_expression]: #68
[#195 bitwise_expression]: #64
[#195 bool_literal]: #86
[#195 call_expression]: #80
[#195 decimal_float_literal]: #91
[#195 decimal_int_literal]: #89
[#195 expression]: #211
[#195 float_literal]: #85
[#195 hex_float_literal]: #92
[#195 hex_int_literal]: #90
[#195 ident]: #83
[#195 ident_pattern_token]: #88
[#195 int_literal]: #84
[#195 literal]: #81
[#195 multiplicative_expression]: #71
[#195 paren_expression]: #82
[#195 primary_expression]: #78
[#195 relational_expression]: #61
[#195 shift_expression]: #65
[#195 short_circuit_and_expression]: #63
[#195 short_circuit_or_expression]: #62
[#195 singular_expression]: #72
[#195 template_elaborated_ident]: #79
[#195 unary_expression]: #70
[#196 additive_expression]: #69
[#196 binary_and_expression]: #66
[#196 binary_or_expression]: #67
[#196 binary_xor_expression]: #68
[#196 bitwise_expression]: #64
[#196 bool_literal]: #86
[#196 call_expression]: #80
[#196 decimal_float_literal]: #91
[#196 decimal_int_literal]: #89
[#196 expression]: #210
[#196 float_literal]: #85
[#196 hex_float_literal]: #92
[#196 hex_int_literal]: #90
[#196 ident]: #83
[#196 ident_pattern_token]: #88
[#196 int_literal]: #84
[#196 literal]: #81
[#196 multiplicative_expression]: #71
[#196 paren_expression]: #82
[#196 primary_expression]: #78
[#196 relational_expression]: #61
[#196 shift_expression]: #65
[#196 short_circuit_and_expression]: #63
[#196 short_circuit_or_expression]: #62
[#196 singular_expression]: #72
[#196 template_elaborated_ident]: #79
[#196 unary_expression]: #70
[#197 additive_expression]: #69
[#197 binary_and_expression]: #66
[#197 binary_or_expression]: #67
[#197 binary_xor_expression]: #68
[#197 bitwise_expression]: #64
[#197 bool_literal]: #86
[#197 call_expression]: #80
[#197 decimal_float_literal]: #91
[#197 decimal_int_literal]: #89
[#197 expression]: #209
[#197 float_literal]: #85
[#197 hex_float_literal]: #92
[#197 hex_int_literal]: #90
[#197 ident]: #83
[#197 ident_pattern_token]: #88
[#197 int_literal]: #84
[#197 literal]: #81
[#197 multiplicative_expression]: #71
[#197 paren_expression]: #82
[#197 primary_expression]: #78
[#197 relational_expression]: #61
[#197 shift_expression]: #65
[#197 short_circuit_and_expression]: #63
[#197 short_circuit_or_expression]: #62
[#197 singular_expression]: #72
[#197 template_elaborated_ident]: #79
[#197 unary_expression]: #70
[#198 additive_expression]: #69
[#198 binary_and_expression]: #66
[#198 binary_or_expression]: #67
[#198 binary_xor_expression]: #68
[#198 bitwise_expression]: #64
[#198 bool_literal]: #86
[#198 call_expression]: #80
[#198 decimal_float_literal]: #91
[#198 decimal_int_literal]: #89
[#198 expression]: #208
[#198 float_literal]: #85
[#198 hex_float_literal]: #92
[#198 hex_int_literal]: #90
[#198 ident]: #83
[#198 ident_pattern_token]: #88
[#198 int_literal]: #84
[#198 literal]: #81
[#198 multiplicative_expression]: #71
[#198 paren_expression]: #82
[#198 primary_expression]: #78
[#198 relational_expression]: #61
[#198 shift_expression]: #65
[#198 short_circuit_and_expression]: #63
[#198 short_circuit_or_expression]: #62
[#198 singular_expression]: #72
[#198 template_elaborated_ident]: #79
[#198 unary_expression]: #70
[#199 additive_expression]: #69
[#199 binary_and_expression]: #66
[#199 binary_or_expression]: #67
[#199 binary_xor_expression]: #68
[#199 bitwise_expression]: #64
[#199 bool_literal]: #86
[#199 call_expression]: #80
[#199 decimal_float_literal]: #91
[#199 decimal_int_literal]: #89
[#199 expression]: #207
[#199 float_literal]: #85
[#199 hex_float_literal]: #92
[#199 hex_int_literal]: #90
[#199 ident]: #83
[#199 ident_pattern_token]: #88
[#199 int_literal]: #84
[#199 literal]: #81
[#199 multiplicative_expression]: #71
[#199 paren_expression]: #82
[#199 primary_expression]: #78
[#199 relational_expression]: #61
[#199 shift_expression]: #65
[#199 short_circuit_and_expression]: #63
[#199 short_circuit_or_expression]: #62
[#199 singular_expression]: #72
[#199 template_elaborated_ident]: #79
[#199 unary_expression]: #70
[#201 additive_expression]: #69
[#201 binary_and_expression]: #66
[#201 binary_or_expression]: #67
[#201 binary_xor_expression]: #68
[#201 bitwise_expression]: #64
[#201 bool_literal]: #86
[#201 call_expression]: #80
[#201 decimal_float_literal]: #91
[#201 decimal_int_literal]: #89
[#201 expression]: #206
[#201 float_literal]: #85
[#201 hex_float_literal]: #92
[#201 hex_int_literal]: #90
[#201 ident]: #83
[#201 ident_pattern_token]: #88
[#201 int_literal]: #84
[#201 literal]: #81
[#201 multiplicative_expression]: #71
[#201 paren_expression]: #82
[#201 primary_expression]: #78
[#201 relational_expression]: #61
[#201 shift_expression]: #65
[#201 short_circuit_and_expression]: #63
[#201 short_circuit_or_expression]: #62
[#201 singular_expression]: #72
[#201 template_elaborated_ident]: #79
[#201 unary_expression]: #70
[#202 additive_expression]: #69
[#202 binary_and_expression]: #66
[#202 binary_or_expression]: #67
[#202 binary_xor_expression]: #68
[#202 bitwise_expression]: #64
[#202 bool_literal]: #86
[#202 call_expression]: #80
[#202 decimal_float_literal]: #91
[#202 decimal_int_literal]: #89
[#202 expression]: #205
[#202 float_literal]: #85
[#202 hex_float_literal]: #92
[#202 hex_int_literal]: #90
[#202 ident]: #83
[#202 ident_pattern_token]: #88
[#202 int_literal]: #84
[#202 literal]: #81
[#202 multiplicative_expression]: #71
[#202 paren_expression]: #82
[#202 primary_expression]: #78
[#202 relational_expression]: #61
[#202 shift_expression]: #65
[#202 short_circuit_and_expression]: #63
[#202 short_circuit_or_expression]: #62
[#202 singular_expression]: #72
[#202 template_elaborated_ident]: #79
[#202 unary_expression]: #70
[#203 additive_expression]: #69
[#203 binary_and_expression]: #66
[#203 binary_or_expression]: #67
[#203 binary_xor_expression]: #68
[#203 bitwise_expression]: #64
[#203 bool_literal]: #86
[#203 call_expression]: #80
[#203 decimal_float_literal]: #91
[#203 decimal_int_literal]: #89
[#203 expression]: #204
[#203 float_literal]: #85
[#203 hex_float_literal]: #92
[#203 hex_int_literal]: #90
[#203 ident]: #83
[#203 ident_pattern_token]: #88
[#203 int_literal]: #84
[#203 literal]: #81
[#203 multiplicative_expression]: #71
[#203 paren_expression]: #82
[#203 primary_expression]: #78
[#203 relational_expression]: #61
[#203 shift_expression]: #65
[#203 short_circuit_and_expression]: #63
[#203 short_circuit_or_expression]: #62
[#203 singular_expression]: #72
[#203 template_elaborated_ident]: #79
[#203 unary_expression]: #70
[#204 attrib_end]: #358
[#204 attrib_end/0.0]: #269
[#205 attrib_end]: #357
[#205 attrib_end/0.0]: #269
[#206 attrib_end]: #356
[#206 attrib_end/0.0]: #269
[#207 attrib_end]: #355
[#207 attrib_end/0.0]: #269
[#208 attrib_end]: #354
[#208 attrib_end/0.0]: #269
[#209 attrib_end]: #352
[#209 attrib_end/0.0]: #269
[#210 attrib_end]: #351
[#210 attrib_end/0.0]: #269
[#211 attrib_end]: #350
[#211 attrib_end/0.0]: #269
[#212 attrib_end]: #348
[#212 attrib_end/0.0]: #269
[#214 _shift_left]: #172
[#214 _shift_right]: #173
[#225 multiplicative_operator]: #168
[#230 component_or_swizzle_specifier]: #347
[#230 component_or_swizzle_specifier/1.2]: #346
[#231 component_or_swizzle_specifier]: #345
[#231 component_or_swizzle_specifier/2.2]: #344
[#244 expression_comma_list/0.1]: #338
[#244 expression_comma_list/0.1/0]: #339
[#244 expression_comma_list/0.1/0/0.0]: #340
[#247 additive_expression]: #69
[#247 binary_and_expression]: #66
[#247 binary_or_expression]: #67
[#247 binary_xor_expression]: #68
[#247 bitwise_expression]: #337
[#247 bool_literal]: #86
[#247 call_expression]: #80
[#247 decimal_float_literal]: #91
[#247 decimal_int_literal]: #89
[#247 float_literal]: #85
[#247 hex_float_literal]: #92
[#247 hex_int_literal]: #90
[#247 ident]: #83
[#247 ident_pattern_token]: #88
[#247 int_literal]: #84
[#247 literal]: #81
[#247 multiplicative_expression]: #71
[#247 paren_expression]: #82
[#247 primary_expression]: #78
[#247 relational_expression]: #334
[#247 shift_expression]: #65
[#247 short_circuit_and_expression]: #336
[#247 short_circuit_or_expression]: #335
[#247 singular_expression]: #72
[#247 template_arg_comma_list]: #332
[#247 template_arg_expression]: #333
[#247 template_elaborated_ident]: #79
[#247 unary_expression]: #70
[#251 assignment_statement]: #316
[#251 attribute]: #327
[#251 break_statement]: #298
[#251 compound_statement]: #302
[#251 compound_statement/0.0]: #151
[#251 compound_statement/0.0/0]: #152
[#251 compound_statement/0.2]: #286
[#251 compound_statement/0.2/0]: #287
[#251 const_assert_statement]: #303
[#251 continue_statement]: #299
[#251 core_lhs_expression]: #328
[#251 decrement_statement]: #318
[#251 for_statement]: #294
[#251 for_statement/0.0]: #308
[#251 for_statement/0.0/0]: #322
[#251 func_call_statement]: #296
[#251 ident]: #324
[#251 ident_pattern_token]: #88
[#251 if_statement]: #291
[#251 if_statement/0.0]: #305
[#251 if_statement/0.0/0]: #319
[#251 increment_statement]: #317
[#251 lhs_expression]: #325
[#251 loop_statement]: #293
[#251 loop_statement/0.0]: #307
[#251 loop_statement/0.0/0]: #321
[#251 return_statement]: #290
[#251 statement]: #288
[#251 switch_statement]: #292
[#251 switch_statement/0.0]: #306
[#251 switch_statement/0.0/0]: #320
[#251 template_elaborated_ident]: #310
[#251 variable_decl]: #311
[#251 variable_or_value_statement]: #297
[#251 variable_updating_statement]: #301
[#251 while_statement]: #295
[#251 while_statement/0.0]: #309
[#251 while_statement/0.0/0]: #323
[#252 attribute]: #285
[#252 function_header/0.3]: #280
[#252 param]: #282
[#252 param/0.0]: #283
[#252 param/0.0/0]: #284
[#252 param_list]: #281
[#253 struct_body_decl/0.2]: #276
[#253 struct_body_decl/0.2/0]: #277
[#253 struct_body_decl/0.2/0/0.0]: #278
[#254 member_ident]: #275
[#256 attribute]: #256
[#256 struct_member/0.0/0]: #274
[#258 _disambiguate_template]: #273
[#260 additive_expression]: #69
[#260 binary_and_expression]: #66
[#260 binary_or_expression]: #67
[#260 binary_xor_expression]: #68
[#260 bitwise_expression]: #64
[#260 bool_literal]: #86
[#260 call_expression]: #80
[#260 decimal_float_literal]: #91
[#260 decimal_int_literal]: #89
[#260 expression]: #272
[#260 float_literal]: #85
[#260 hex_float_literal]: #92
[#260 hex_int_literal]: #90
[#260 ident]: #83
[#260 ident_pattern_token]: #88
[#260 int_literal]: #84
[#260 literal]: #81
[#260 multiplicative_expression]: #71
[#260 paren_expression]: #82
[#260 primary_expression]: #78
[#260 relational_expression]: #61
[#260 shift_expression]: #65
[#260 short_circuit_and_expression]: #63
[#260 short_circuit_or_expression]: #62
[#260 singular_expression]: #72
[#260 template_elaborated_ident]: #79
[#260 unary_expression]: #70
[#264 ident]: #113
[#264 ident_pattern_token]: #88
[#264 optionally_typed_ident]: #271
[#266 attrib_end]: #268
[#266 attrib_end/0.0]: #269
[#273 _template_args_start]: #247
[#273 template_elaborated_ident/0.2]: #439
[#273 template_list]: #246
[#276 struct_body_decl/0.3]: #436
[#278 struct_body_decl/0.2/0]: #435
[#278 struct_body_decl/0.2/0/0.0]: #278
[#279 attribute]: #256
[#279 struct_member]: #434
[#279 struct_member/0.0]: #254
[#279 struct_member/0.0/0]: #255
[#282 param_list/0.1]: #429
[#282 param_list/0.1/0]: #430
[#282 param_list/0.1/0/0.0]: #431
[#283 ident]: #428
[#283 ident_pattern_token]: #88
[#285 attribute]: #285
[#285 param/0.0/0]: #427
[#288 assignment_statement]: #316
[#288 attribute]: #327
[#288 break_statement]: #298
[#288 compound_statement]: #302
[#288 compound_statement/0.0]: #151
[#288 compound_statement/0.0/0]: #152
[#288 compound_statement/0.2/0]: #425
[#288 const_assert_statement]: #303
[#288 continue_statement]: #299
[#288 core_lhs_expression]: #328
[#288 decrement_statement]: #318
[#288 for_statement]: #294
[#288 for_statement/0.0]: #308
[#288 for_statement/0.0/0]: #322
[#288 func_call_statement]: #296
[#288 ident]: #324
[#288 ident_pattern_token]: #88
[#288 if_statement]: #291
[#288 if_statement/0.0]: #305
[#288 if_statement/0.0/0]: #319
[#288 increment_statement]: #317
[#288 lhs_expression]: #325
[#288 loop_statement]: #293
[#288 loop_statement/0.0]: #307
[#288 loop_statement/0.0/0]: #321
[#288 return_statement]: #290
[#288 statement]: #288
[#288 switch_statement]: #292
[#288 switch_statement/0.0]: #306
[#288 switch_statement/0.0/0]: #320
[#288 template_elaborated_ident]: #310
[#288 variable_decl]: #311
[#288 variable_or_value_statement]: #297
[#288 variable_updating_statement]: #301
[#288 while_statement]: #295
[#288 while_statement/0.0]: #309
[#288 while_statement/0.0/0]: #323
[#304 additive_expression]: #69
[#304 binary_and_expression]: #66
[#304 binary_or_expression]: #67
[#304 binary_xor_expression]: #68
[#304 bitwise_expression]: #64
[#304 bool_literal]: #86
[#304 call_expression]: #80
[#304 decimal_float_literal]: #91
[#304 decimal_int_literal]: #89
[#304 expression]: #416
[#304 float_literal]: #85
[#304 hex_float_literal]: #92
[#304 hex_int_literal]: #90
[#304 ident]: #83
[#304 ident_pattern_token]: #88
[#304 int_literal]: #84
[#304 literal]: #81
[#304 multiplicative_expression]: #71
[#304 paren_expression]: #82
[#304 primary_expression]: #78
[#304 relational_expression]: #61
[#304 return_statement/0.1]: #415
[#304 shift_expression]: #65
[#304 short_circuit_and_expression]: #63
[#304 short_circuit_or_expression]: #62
[#304 singular_expression]: #72
[#304 template_elaborated_ident]: #79
[#304 unary_expression]: #70
[#305 if_clause]: #413
[#310 argument_expression_list]: #408
[#312 ident]: #113
[#312 ident_pattern_token]: #88
[#312 optionally_typed_ident]: #406
[#313 ident]: #113
[#313 ident_pattern_token]: #88
[#313 optionally_typed_ident]: #405
[#324 _disambiguate_template]: #404
[#325 _shift_left_assign]: #401
[#325 _shift_right_assign]: #400
[#325 assignment_statement/0.1]: #387
[#325 compound_assignment_operator]: #391
[#327 attribute]: #327
[#327 compound_statement/0.0/0]: #250
[#327 for_statement/0.0/0]: #384
[#327 if_statement/0.0/0]: #381
[#327 loop_statement/0.0/0]: #383
[#327 switch_statement/0.0/0]: #382
[#327 while_statement/0.0/0]: #385
[#328 component_or_swizzle_specifier]: #380
[#328 lhs_expression/0.1]: #379
[#329 core_lhs_expression]: #328
[#329 ident]: #376
[#329 ident_pattern_token]: #88
[#329 lhs_expression]: #378
[#330 core_lhs_expression]: #328
[#330 ident]: #376
[#330 ident_pattern_token]: #88
[#330 lhs_expression]: #377
[#331 core_lhs_expression]: #328
[#331 ident]: #376
[#331 ident_pattern_token]: #88
[#331 lhs_expression]: #375
[#332 _template_args_end]: #373
[#333 template_arg_comma_list/0.1]: #369
[#333 template_arg_comma_list/0.1/0]: #370
[#333 template_arg_comma_list/0.1/0/0.0]: #371
[#338 expression_comma_list/0.2]: #365
[#340 expression_comma_list/0.1/0]: #364
[#340 expression_comma_list/0.1/0/0.0]: #340
[#341 additive_expression]: #69
[#341 binary_and_expression]: #66
[#341 binary_or_expression]: #67
[#341 binary_xor_expression]: #68
[#341 bitwise_expression]: #64
[#341 bool_literal]: #86
[#341 call_expression]: #80
[#341 decimal_float_literal]: #91
[#341 decimal_int_literal]: #89
[#341 expression]: #363
[#341 float_literal]: #85
[#341 hex_float_literal]: #92
[#341 hex_int_literal]: #90
[#341 ident]: #83
[#341 ident_pattern_token]: #88
[#341 int_literal]: #84
[#341 literal]: #81
[#341 multiplicative_expression]: #71
[#341 paren_expression]: #82
[#341 primary_expression]: #78
[#341 relational_expression]: #61
[#341 shift_expression]: #65
[#341 short_circuit_and_expression]: #63
[#341 short_circuit_or_expression]: #62
[#341 singular_expression]: #72
[#341 template_elaborated_ident]: #79
[#341 unary_expression]: #70
[#343 component_or_swizzle_specifier]: #362
[#343 component_or_swizzle_specifier/0.3]: #361
[#349 additive_expression]: #69
[#349 binary_and_expression]: #66
[#349 binary_or_expression]: #67
[#349 binary_xor_expression]: #68
[#349 bitwise_expression]: #64
[#349 bool_literal]: #86
[#349 call_expression]: #80
[#349 decimal_float_literal]: #91
[#349 decimal_int_literal]: #89
[#349 expression]: #360
[#349 float_literal]: #85
[#349 hex_float_literal]: #92
[#349 hex_int_literal]: #90
[#349 ident]: #83
[#349 ident_pattern_token]: #88
[#349 int_literal]: #84
[#349 literal]: #81
[#349 multiplicative_expression]: #71
[#349 paren_expression]: #82
[#349 primary_expression]: #78
[#349 relational_expression]: #61
[#349 shift_expression]: #65
[#349 short_circuit_and_expression]: #63
[#349 short_circuit_or_expression]: #62
[#349 singular_expression]: #72
[#349 template_elaborated_ident]: #79
[#349 unary_expression]: #70
[#353 additive_expression]: #69
[#353 binary_and_expression]: #66
[#353 binary_or_expression]: #67
[#353 binary_xor_expression]: #68
[#353 bitwise_expression]: #64
[#353 bool_literal]: #86
[#353 call_expression]: #80
[#353 decimal_float_literal]: #91
[#353 decimal_int_literal]: #89
[#353 expression]: #359
[#353 float_literal]: #85
[#353 hex_float_literal]: #92
[#353 hex_int_literal]: #90
[#353 ident]: #83
[#353 ident_pattern_token]: #88
[#353 int_literal]: #84
[#353 literal]: #81
[#353 multiplicative_expression]: #71
[#353 paren_expression]: #82
[#353 primary_expression]: #78
[#353 relational_expression]: #61
[#353 shift_expression]: #65
[#353 short_circuit_and_expression]: #63
[#353 short_circuit_or_expression]: #62
[#353 singular_expression]: #72
[#353 template_elaborated_ident]: #79
[#353 unary_expression]: #70
[#359 attrib_end]: #476
[#359 attrib_end/0.0]: #269
[#360 attrib_end]: #474
[#360 attrib_end/0.0]: #269
[#367 additive_expression]: #69
[#367 bool_literal]: #86
[#367 call_expression]: #80
[#367 decimal_float_literal]: #91
[#367 decimal_int_literal]: #89
[#367 float_literal]: #85
[#367 hex_float_literal]: #92
[#367 hex_int_literal]: #90
[#367 ident]: #83
[#367 ident_pattern_token]: #88
[#367 int_literal]: #84
[#367 literal]: #81
[#367 multiplicative_expression]: #71
[#367 paren_expression]: #82
[#367 primary_expression]: #78
[#367 relational_expression]: #473
[#367 shift_expression]: #65
[#367 singular_expression]: #72
[#367 template_elaborated_ident]: #79
[#367 unary_expression]: #214
[#368 additive_expression]: #69
[#368 bool_literal]: #86
[#368 call_expression]: #80
[#368 decimal_float_literal]: #91
[#368 decimal_int_literal]: #89
[#368 float_literal]: #85
[#368 hex_float_literal]: #92
[#368 hex_int_literal]: #90
[#368 ident]: #83
[#368 ident_pattern_token]: #88
[#368 int_literal]: #84
[#368 literal]: #81
[#368 multiplicative_expression]: #71
[#368 paren_expression]: #82
[#368 primary_expression]: #78
[#368 relational_expression]: #472
[#368 shift_expression]: #65
[#368 singular_expression]: #72
[#368 template_elaborated_ident]: #79
[#368 unary_expression]: #214
[#369 template_arg_comma_list/0.2]: #470
[#371 template_arg_comma_list/0.1/0]: #469
[#371 template_arg_comma_list/0.1/0/0.0]: #371
[#372 additive_expression]: #69
[#372 binary_and_expression]: #66
[#372 binary_or_expression]: #67
[#372 binary_xor_expression]: #68
[#372 bitwise_expression]: #337
[#372 bool_literal]: #86
[#372 call_expression]: #80
[#372 decimal_float_literal]: #91
[#372 decimal_int_literal]: #89
[#372 float_literal]: #85
[#372 hex_float_literal]: #92
[#372 hex_int_literal]: #90
[#372 ident]: #83
[#372 ident_pattern_token]: #88
[#372 int_literal]: #84
[#372 literal]: #81
[#372 multiplicative_expression]: #71
[#372 paren_expression]: #82
[#372 primary_expression]: #78
[#372 relational_expression]: #334
[#372 shift_expression]: #65
[#372 short_circuit_and_expression]: #336
[#372 short_circuit_or_expression]: #335
[#372 singular_expression]: #72
[#372 template_arg_expression]: #468
[#372 template_elaborated_ident]: #79
[#372 unary_expression]: #70
[#376 _disambiguate_template]: #466
[#386 additive_expression]: #69
[#386 binary_and_expression]: #66
[#386 binary_or_expression]: #67
[#386 binary_xor_expression]: #68
[#386 bitwise_expression]: #64
[#386 bool_literal]: #86
[#386 call_expression]: #80
[#386 decimal_float_literal]: #91
[#386 decimal_int_literal]: #89
[#386 expression]: #465
[#386 float_literal]: #85
[#386 hex_float_literal]: #92
[#386 hex_int_literal]: #90
[#386 ident]: #83
[#386 ident_pattern_token]: #88
[#386 int_literal]: #84
[#386 literal]: #81
[#386 multiplicative_expression]: #71
[#386 paren_expression]: #82
[#386 primary_expression]: #78
[#386 relational_expression]: #61
[#386 shift_expression]: #65
[#386 short_circuit_and_expression]: #63
[#386 short_circuit_or_expression]: #62
[#386 singular_expression]: #72
[#386 template_elaborated_ident]: #79
[#386 unary_expression]: #70
[#387 additive_expression]: #69
[#387 binary_and_expression]: #66
[#387 binary_or_expression]: #67
[#387 binary_xor_expression]: #68
[#387 bitwise_expression]: #64
[#387 bool_literal]: #86
[#387 call_expression]: #80
[#387 decimal_float_literal]: #91
[#387 decimal_int_literal]: #89
[#387 expression]: #464
[#387 float_literal]: #85
[#387 hex_float_literal]: #92
[#387 hex_int_literal]: #90
[#387 ident]: #83
[#387 ident_pattern_token]: #88
[#387 int_literal]: #84
[#387 literal]: #81
[#387 multiplicative_expression]: #71
[#387 paren_expression]: #82
[#387 primary_expression]: #78
[#387 relational_expression]: #61
[#387 shift_expression]: #65
[#387 short_circuit_and_expression]: #63
[#387 short_circuit_or_expression]: #62
[#387 singular_expression]: #72
[#387 template_elaborated_ident]: #79
[#387 unary_expression]: #70
[#404 _template_args_start]: #247
[#404 template_elaborated_ident/0.2]: #245
[#404 template_list]: #246
[#407 additive_expression]: #69
[#407 binary_and_expression]: #66
[#407 binary_or_expression]: #67
[#407 binary_xor_expression]: #68
[#407 bitwise_expression]: #64
[#407 bool_literal]: #86
[#407 call_expression]: #80
[#407 decimal_float_literal]: #91
[#407 decimal_int_literal]: #89
[#407 expression]: #461
[#407 float_literal]: #85
[#407 hex_float_literal]: #92
[#407 hex_int_literal]: #90
[#407 ident]: #83
[#407 ident_pattern_token]: #88
[#407 int_literal]: #84
[#407 literal]: #81
[#407 multiplicative_expression]: #71
[#407 paren_expression]: #82
[#407 primary_expression]: #78
[#407 relational_expression]: #61
[#407 shift_expression]: #65
[#407 short_circuit_and_expression]: #63
[#407 short_circuit_or_expression]: #62
[#407 singular_expression]: #72
[#407 template_elaborated_ident]: #79
[#407 unary_expression]: #70
[#409 additive_expression]: #69
[#409 binary_and_expression]: #66
[#409 binary_or_expression]: #67
[#409 binary_xor_expression]: #68
[#409 bitwise_expression]: #64
[#409 bool_literal]: #86
[#409 call_expression]: #80
[#409 decimal_float_literal]: #91
[#409 decimal_int_literal]: #89
[#409 expression]: #460
[#409 float_literal]: #85
[#409 hex_float_literal]: #92
[#409 hex_int_literal]: #90
[#409 ident]: #83
[#409 ident_pattern_token]: #88
[#409 int_literal]: #84
[#409 literal]: #81
[#409 multiplicative_expression]: #71
[#409 paren_expression]: #82
[#409 primary_expression]: #78
[#409 relational_expression]: #61
[#409 shift_expression]: #65
[#409 short_circuit_and_expression]: #63
[#409 short_circuit_or_expression]: #62
[#409 singular_expression]: #72
[#409 template_elaborated_ident]: #79
[#409 unary_expression]: #70
[#411 attribute]: #458
[#411 loop_statement/0.2]: #456
[#411 loop_statement/0.2/0]: #457
[#412 additive_expression]: #69
[#412 binary_and_expression]: #66
[#412 binary_or_expression]: #67
[#412 binary_xor_expression]: #68
[#412 bitwise_expression]: #64
[#412 bool_literal]: #86
[#412 call_expression]: #80
[#412 decimal_float_literal]: #91
[#412 decimal_int_literal]: #89
[#412 expression]: #455
[#412 float_literal]: #85
[#412 hex_float_literal]: #92
[#412 hex_int_literal]: #90
[#412 ident]: #83
[#412 ident_pattern_token]: #88
[#412 int_literal]: #84
[#412 literal]: #81
[#412 multiplicative_expression]: #71
[#412 paren_expression]: #82
[#412 primary_expression]: #78
[#412 relational_expression]: #61
[#412 shift_expression]: #65
[#412 short_circuit_and_expression]: #63
[#412 short_circuit_or_expression]: #62
[#412 singular_expression]: #72
[#412 template_elaborated_ident]: #79
[#412 unary_expression]: #70
[#413 else_if_clause]: #453
[#413 if_statement/0.2]: #451
[#413 if_statement/0.2/0]: #452
[#414 additive_expression]: #69
[#414 binary_and_expression]: #66
[#414 binary_or_expression]: #67
[#414 binary_xor_expression]: #68
[#414 bitwise_expression]: #64
[#414 bool_literal]: #86
[#414 call_expression]: #80
[#414 decimal_float_literal]: #91
[#414 decimal_int_literal]: #89
[#414 expression]: #450
[#414 float_literal]: #85
[#414 hex_float_literal]: #92
[#414 hex_int_literal]: #90
[#414 ident]: #83
[#414 ident_pattern_token]: #88
[#414 int_literal]: #84
[#414 literal]: #81
[#414 multiplicative_expression]: #71
[#414 paren_expression]: #82
[#414 primary_expression]: #78
[#414 relational_expression]: #61
[#414 shift_expression]: #65
[#414 short_circuit_and_expression]: #63
[#414 short_circuit_or_expression]: #62
[#414 singular_expression]: #72
[#414 template_elaborated_ident]: #79
[#414 unary_expression]: #70
[#429 param_list/0.2]: #447
[#431 param_list/0.1/0]: #446
[#431 param_list/0.1/0/0.0]: #431
[#432 attribute]: #285
[#432 param]: #445
[#432 param/0.0]: #283
[#432 param/0.0/0]: #284
[#433 function_header/0.5]: #443
[#438 ident]: #258
[#438 ident_pattern_token]: #88
[#438 type_specifier]: #441
[#444 attribute]: #502
[#444 function_header/0.5/0.1]: #500
[#444 function_header/0.5/0.1/0]: #501
[#449 ident]: #258
[#449 ident_pattern_token]: #88
[#449 type_specifier]: #499
[#450 attribute]: #153
[#450 compound_statement]: #498
[#450 compound_statement/0.0]: #151
[#450 compound_statement/0.0/0]: #152
[#451 else_clause]: #496
[#451 if_statement/0.3]: #495
[#453 else_if_clause]: #453
[#453 if_statement/0.2/0]: #494
[#455 attribute]: #492
[#455 switch_body]: #489
[#455 switch_body/0.0]: #490
[#455 switch_body/0.0/0]: #491
[#458 attribute]: #458
[#458 loop_statement/0.2/0]: #487
[#459 assignment_statement]: #316
[#459 core_lhs_expression]: #328
[#459 decrement_statement]: #318
[#459 for_header]: #481
[#459 for_header/0.0]: #482
[#459 for_init]: #483
[#459 func_call_statement]: #486
[#459 ident]: #324
[#459 ident_pattern_token]: #88
[#459 increment_statement]: #317
[#459 lhs_expression]: #325
[#459 template_elaborated_ident]: #310
[#459 variable_decl]: #311
[#459 variable_or_value_statement]: #484
[#459 variable_updating_statement]: #485
[#460 attribute]: #153
[#460 compound_statement]: #480
[#460 compound_statement/0.0]: #151
[#460 compound_statement/0.0/0]: #152
[#462 additive_expression]: #69
[#462 binary_and_expression]: #66
[#462 binary_or_expression]: #67
[#462 binary_xor_expression]: #68
[#462 bitwise_expression]: #64
[#462 bool_literal]: #86
[#462 call_expression]: #80
[#462 decimal_float_literal]: #91
[#462 decimal_int_literal]: #89
[#462 expression]: #479
[#462 float_literal]: #85
[#462 hex_float_literal]: #92
[#462 hex_int_literal]: #90
[#462 ident]: #83
[#462 ident_pattern_token]: #88
[#462 int_literal]: #84
[#462 literal]: #81
[#462 multiplicative_expression]: #71
[#462 paren_expression]: #82
[#462 primary_expression]: #78
[#462 relational_expression]: #61
[#462 shift_expression]: #65
[#462 short_circuit_and_expression]: #63
[#462 short_circuit_or_expression]: #62
[#462 singular_expression]: #72
[#462 template_elaborated_ident]: #79
[#462 unary_expression]: #70
[#463 additive_expression]: #69
[#463 binary_and_expression]: #66
[#463 binary_or_expression]: #67
[#463 binary_xor_expression]: #68
[#463 bitwise_expression]: #64
[#463 bool_literal]: #86
[#463 call_expression]: #80
[#463 decimal_float_literal]: #91
[#463 decimal_int_literal]: #89
[#463 expression]: #478
[#463 float_literal]: #85
[#463 hex_float_literal]: #92
[#463 hex_int_literal]: #90
[#463 ident]: #83
[#463 ident_pattern_token]: #88
[#463 int_literal]: #84
[#463 literal]: #81
[#463 multiplicative_expression]: #71
[#463 paren_expression]: #82
[#463 primary_expression]: #78
[#463 relational_expression]: #61
[#463 shift_expression]: #65
[#463 short_circuit_and_expression]: #63
[#463 short_circuit_or_expression]: #62
[#463 singular_expression]: #72
[#463 template_elaborated_ident]: #79
[#463 unary_expression]: #70
[#475 additive_expression]: #69
[#475 binary_and_expression]: #66
[#475 binary_or_expression]: #67
[#475 binary_xor_expression]: #68
[#475 bitwise_expression]: #64
[#475 bool_literal]: #86
[#475 call_expression]: #80
[#475 decimal_float_literal]: #91
[#475 decimal_int_literal]: #89
[#475 expression]: #477
[#475 float_literal]: #85
[#475 hex_float_literal]: #92
[#475 hex_int_literal]: #90
[#475 ident]: #83
[#475 ident_pattern_token]: #88
[#475 int_literal]: #84
[#475 literal]: #81
[#475 multiplicative_expression]: #71
[#475 paren_expression]: #82
[#475 primary_expression]: #78
[#475 relational_expression]: #61
[#475 shift_expression]: #65
[#475 short_circuit_and_expression]: #63
[#475 short_circuit_or_expression]: #62
[#475 singular_expression]: #72
[#475 template_elaborated_ident]: #79
[#475 unary_expression]: #70
[#477 attrib_end]: #514
[#477 attrib_end/0.0]: #269
[#488 assignment_statement]: #316
[#488 attribute]: #327
[#488 break_statement]: #298
[#488 compound_statement]: #302
[#488 compound_statement/0.0]: #151
[#488 compound_statement/0.0/0]: #152
[#488 const_assert_statement]: #303
[#488 continue_statement]: #299
[#488 core_lhs_expression]: #328
[#488 decrement_statement]: #318
[#488 for_statement]: #294
[#488 for_statement/0.0]: #308
[#488 for_statement/0.0/0]: #322
[#488 func_call_statement]: #296
[#488 ident]: #324
[#488 ident_pattern_token]: #88
[#488 if_statement]: #291
[#488 if_statement/0.0]: #305
[#488 if_statement/0.0/0]: #319
[#488 increment_statement]: #317
[#488 lhs_expression]: #325
[#488 loop_statement]: #293
[#488 loop_statement/0.0]: #307
[#488 loop_statement/0.0/0]: #321
[#488 loop_statement/0.4]: #509
[#488 loop_statement/0.4/0]: #510
[#488 return_statement]: #290
[#488 statement]: #511
[#488 switch_statement]: #292
[#488 switch_statement/0.0]: #306
[#488 switch_statement/0.0/0]: #320
[#488 template_elaborated_ident]: #310
[#488 variable_decl]: #311
[#488 variable_or_value_statement]: #297
[#488 variable_updating_statement]: #301
[#488 while_statement]: #295
[#488 while_statement/0.0]: #309
[#488 while_statement/0.0/0]: #323
[#492 attribute]: #492
[#492 switch_body/0.0/0]: #507
[#493 additive_expression]: #69
[#493 binary_and_expression]: #66
[#493 binary_or_expression]: #67
[#493 binary_xor_expression]: #68
[#493 bitwise_expression]: #64
[#493 bool_literal]: #86
[#493 call_expression]: #80
[#493 decimal_float_literal]: #91
[#493 decimal_int_literal]: #89
[#493 expression]: #506
[#493 float_literal]: #85
[#493 hex_float_literal]: #92
[#493 hex_int_literal]: #90
[#493 ident]: #83
[#493 ident_pattern_token]: #88
[#493 int_literal]: #84
[#493 literal]: #81
[#493 multiplicative_expression]: #71
[#493 paren_expression]: #82
[#493 primary_expression]: #78
[#493 relational_expression]: #61
[#493 shift_expression]: #65
[#493 short_circuit_and_expression]: #63
[#493 short_circuit_or_expression]: #62
[#493 singular_expression]: #72
[#493 template_elaborated_ident]: #79
[#493 unary_expression]: #70
[#497 attribute]: #153
[#497 compound_statement]: #505
[#497 compound_statement/0.0]: #151
[#497 compound_statement/0.0/0]: #152
[#500 ident]: #83
[#500 ident_pattern_token]: #88
[#500 template_elaborated_ident]: #504
[#502 attribute]: #502
[#502 function_header/0.5/0.1/0]: #503
[#506 attribute]: #153
[#506 compound_statement]: #529
[#506 compound_statement/0.0]: #151
[#506 compound_statement/0.0/0]: #152
[#508 case_clause]: #525
[#508 default_alone_clause]: #526
[#508 switch_body/0.2]: #522
[#508 switch_body/0.2/0]: #523
[#508 switch_clause]: #524
[#509 continuing_statement]: #520
[#509 loop_statement/0.5]: #519
[#511 assignment_statement]: #316
[#511 attribute]: #327
[#511 break_statement]: #298
[#511 compound_statement]: #302
[#511 compound_statement/0.0]: #151
[#511 compound_statement/0.0/0]: #152
[#511 const_assert_statement]: #303
[#511 continue_statement]: #299
[#511 core_lhs_expression]: #328
[#511 decrement_statement]: #318
[#511 for_statement]: #294
[#511 for_statement/0.0]: #308
[#511 for_statement/0.0/0]: #322
[#511 func_call_statement]: #296
[#511 ident]: #324
[#511 ident_pattern_token]: #88
[#511 if_statement]: #291
[#511 if_statement/0.0]: #305
[#511 if_statement/0.0/0]: #319
[#511 increment_statement]: #317
[#511 lhs_expression]: #325
[#511 loop_statement]: #293
[#511 loop_statement/0.0]: #307
[#511 loop_statement/0.0/0]: #321
[#511 loop_statement/0.4/0]: #518
[#511 return_statement]: #290
[#511 statement]: #511
[#511 switch_statement]: #292
[#511 switch_statement/0.0]: #306
[#511 switch_statement/0.0/0]: #320
[#511 template_elaborated_ident]: #310
[#511 variable_decl]: #311
[#511 variable_or_value_statement]: #297
[#511 variable_updating_statement]: #301
[#511 while_statement]: #295
[#511 while_statement/0.0]: #309
[#511 while_statement/0.0/0]: #323
[#512 additive_expression]: #69
[#512 binary_and_expression]: #66
[#512 binary_or_expression]: #67
[#512 binary_xor_expression]: #68
[#512 bitwise_expression]: #64
[#512 bool_literal]: #86
[#512 call_expression]: #80
[#512 decimal_float_literal]: #91
[#512 decimal_int_literal]: #89
[#512 expression]: #517
[#512 float_literal]: #85
[#512 for_header/0.2]: #516
[#512 hex_float_literal]: #92
[#512 hex_int_literal]: #90
[#512 ident]: #83
[#512 ident_pattern_token]: #88
[#512 int_literal]: #84
[#512 literal]: #81
[#512 multiplicative_expression]: #71
[#512 paren_expression]: #82
[#512 primary_expression]: #78
[#512 relational_expression]: #61
[#512 shift_expression]: #65
[#512 short_circuit_and_expression]: #63
[#512 short_circuit_or_expression]: #62
[#512 singular_expression]: #72
[#512 template_elaborated_ident]: #79
[#512 unary_expression]: #70
[#513 attribute]: #153
[#513 compound_statement]: #515
[#513 compound_statement/0.0]: #151
[#513 compound_statement/0.0/0]: #152
[#521 attribute]: #541
[#521 continuing_compound_statement]: #538
[#521 continuing_compound_statement/0.0]: #539
[#521 continuing_compound_statement/0.0/0]: #540
[#524 case_clause]: #525
[#524 default_alone_clause]: #526
[#524 switch_body/0.2/0]: #536
[#524 switch_clause]: #524
[#527 additive_expression]: #69
[#527 binary_and_expression]: #66
[#527 binary_or_expression]: #67
[#527 binary_xor_expression]: #68
[#527 bitwise_expression]: #64
[#527 bool_literal]: #86
[#527 call_expression]: #80
[#527 case_selector]: #533
[#527 case_selectors]: #532
[#527 decimal_float_literal]: #91
[#527 decimal_int_literal]: #89
[#527 expression]: #535
[#527 float_literal]: #85
[#527 hex_float_literal]: #92
[#527 hex_int_literal]: #90
[#527 ident]: #83
[#527 ident_pattern_token]: #88
[#527 int_literal]: #84
[#527 literal]: #81
[#527 multiplicative_expression]: #71
[#527 paren_expression]: #82
[#527 primary_expression]: #78
[#527 relational_expression]: #61
[#527 shift_expression]: #65
[#527 short_circuit_and_expression]: #63
[#527 short_circuit_or_expression]: #62
[#527 singular_expression]: #72
[#527 template_elaborated_ident]: #79
[#527 unary_expression]: #70
[#528 default_alone_clause/0.1]: #530
[#530 attribute]: #153
[#530 compound_statement]: #556
[#530 compound_statement/0.0]: #151
[#530 compound_statement/0.0/0]: #152
[#532 case_clause/0.2]: #554
[#533 case_selectors/0.1]: #550
[#533 case_selectors/0.1/0]: #551
[#533 case_selectors/0.1/0/0.0]: #552
[#541 attribute]: #541
[#541 continuing_compound_statement/0.0/0]: #548
[#543 assignment_statement]: #316
[#543 core_lhs_expression]: #328
[#543 decrement_statement]: #318
[#543 for_header/0.4]: #544
[#543 for_update]: #545
[#543 func_call_statement]: #547
[#543 ident]: #324
[#543 ident_pattern_token]: #88
[#543 increment_statement]: #317
[#543 lhs_expression]: #325
[#543 template_elaborated_ident]: #310
[#543 variable_updating_statement]: #546
[#549 assignment_statement]: #316
[#549 attribute]: #327
[#549 break_statement]: #298
[#549 compound_statement]: #302
[#549 compound_statement/0.0]: #151
[#549 compound_statement/0.0/0]: #152
[#549 const_assert_statement]: #303
[#549 continue_statement]: #299
[#549 continuing_compound_statement/0.2]: #562
[#549 continuing_compound_statement/0.2/0]: #563
[#549 core_lhs_expression]: #328
[#549 decrement_statement]: #318
[#549 for_statement]: #294
[#549 for_statement/0.0]: #308
[#549 for_statement/0.0/0]: #322
[#549 func_call_statement]: #296
[#549 ident]: #324
[#549 ident_pattern_token]: #88
[#549 if_statement]: #291
[#549 if_statement/0.0]: #305
[#549 if_statement/0.0/0]: #319
[#549 increment_statement]: #317
[#549 lhs_expression]: #325
[#549 loop_statement]: #293
[#549 loop_statement/0.0]: #307
[#549 loop_statement/0.0/0]: #321
[#549 return_statement]: #290
[#549 statement]: #564
[#549 switch_statement]: #292
[#549 switch_statement/0.0]: #306
[#549 switch_statement/0.0/0]: #320
[#549 template_elaborated_ident]: #310
[#549 variable_decl]: #311
[#549 variable_or_value_statement]: #297
[#549 variable_updating_statement]: #301
[#549 while_statement]: #295
[#549 while_statement/0.0]: #309
[#549 while_statement/0.0/0]: #323
[#550 case_selectors/0.2]: #560
[#552 case_selectors/0.1/0]: #559
[#552 case_selectors/0.1/0/0.0]: #552
[#553 additive_expression]: #69
[#553 binary_and_expression]: #66
[#553 binary_or_expression]: #67
[#553 binary_xor_expression]: #68
[#553 bitwise_expression]: #64
[#553 bool_literal]: #86
[#553 call_expression]: #80
[#553 case_selector]: #558
[#553 decimal_float_literal]: #91
[#553 decimal_int_literal]: #89
[#553 expression]: #535
[#553 float_literal]: #85
[#553 hex_float_literal]: #92
[#553 hex_int_literal]: #90
[#553 ident]: #83
[#553 ident_pattern_token]: #88
[#553 int_literal]: #84
[#553 literal]: #81
[#553 multiplicative_expression]: #71
[#553 paren_expression]: #82
[#553 primary_expression]: #78
[#553 relational_expression]: #61
[#553 shift_expression]: #65
[#553 short_circuit_and_expression]: #63
[#553 short_circuit_or_expression]: #62
[#553 singular_expression]: #72
[#553 template_elaborated_ident]: #79
[#553 unary_expression]: #70
[#554 attribute]: #153
[#554 compound_statement]: #557
[#554 compound_statement/0.0]: #151
[#554 compound_statement/0.0/0]: #152
[#562 break_if_statement]: #567
[#562 continuing_compound_statement/0.3]: #566
[#564 assignment_statement]: #316
[#564 attribute]: #327
[#564 break_statement]: #298
[#564 compound_statement]: #302
[#564 compound_statement/0.0]: #151
[#564 compound_statement/0.0/0]: #152
[#564 const_assert_statement]: #303
[#564 continue_statement]: #299
[#564 continuing_compound_statement/0.2/0]: #565
[#564 core_lhs_expression]: #328
[#564 decrement_statement]: #318
[#564 for_statement]: #294
[#564 for_statement/0.0]: #308
[#564 for_statement/0.0/0]: #322
[#564 func_call_statement]: #296
[#564 ident]: #324
[#564 ident_pattern_token]: #88
[#564 if_statement]: #291
[#564 if_statement/0.0]: #305
[#564 if_statement/0.0/0]: #319
[#564 increment_statement]: #317
[#564 lhs_expression]: #325
[#564 loop_statement]: #293
[#564 loop_statement/0.0]: #307
[#564 loop_statement/0.0/0]: #321
[#564 return_statement]: #290
[#564 statement]: #564
[#564 switch_statement]: #292
[#564 switch_statement/0.0]: #306
[#564 switch_statement/0.0/0]: #320
[#564 template_elaborated_ident]: #310
[#564 variable_decl]: #311
[#564 variable_or_value_statement]: #297
[#564 variable_updating_statement]: #301
[#564 while_statement]: #295
[#564 while_statement/0.0]: #309
[#564 while_statement/0.0/0]: #323
[#569 additive_expression]: #69
[#569 binary_and_expression]: #66
[#569 binary_or_expression]: #67
[#569 binary_xor_expression]: #68
[#569 bitwise_expression]: #64
[#569 bool_literal]: #86
[#569 call_expression]: #80
[#569 decimal_float_literal]: #91
[#569 decimal_int_literal]: #89
[#569 expression]: #571
[#569 float_literal]: #85
[#569 hex_float_literal]: #92
[#569 hex_int_literal]: #90
[#569 ident]: #83
[#569 ident_pattern_token]: #88
[#569 int_literal]: #84
[#569 literal]: #81
[#569 multiplicative_expression]: #71
[#569 paren_expression]: #82
[#569 primary_expression]: #78
[#569 relational_expression]: #61
[#569 shift_expression]: #65
[#569 short_circuit_and_expression]: #63
[#569 short_circuit_or_expression]: #62
[#569 singular_expression]: #72
[#569 template_elaborated_ident]: #79
[#569 unary_expression]: #70
