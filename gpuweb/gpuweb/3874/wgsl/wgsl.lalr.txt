=Grammar:

_blankspace:/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_block_comment:/\u200B_block_comment/
_comment:/\/\/.*/
_disambiguate_template:/\u200B_disambiguate_template/
_error_sentinel:/\u200B_error_sentinel/
_greater_than:/\u200B_greater_than/
_greater_than_equal:/\u200B_greater_than_equal/
_less_than:/\u200B_less_than/
_less_than_equal:/\u200B_less_than_equal/
_shift_left:/\u200B_shift_left/
_shift_left_assign:/\u200B_shift_left_assign/
_shift_right:/\u200B_shift_right/
_shift_right_assign:/\u200B_shift_right_assign/
_template_args_end:/\u200B_template_args_end/
_template_args_start:/\u200B_template_args_start/
access_mode:
   'read'
 | 'read_write'
 | 'write'
additive_expression:
   additive_expression additive_operator multiplicative_expression
 | multiplicative_expression
additive_operator:
   '+'
 | '-'
address_space:
   'function'
 | 'private'
 | 'storage'
 | 'uniform'
 | 'workgroup'
argument_expression_list:
   '(' expression_comma_list ? ')'
array_type_specifier:
   'array' _disambiguate_template _template_args_start type_specifier ( ',' element_count_expression )? _template_args_end
assignment_statement:
   '_' '=' expression
 | lhs_expression ( '=' | compound_assignment_operator ) expression
assignment_statement/0.1:
   '='
 | compound_assignment_operator
attrib_end:
   ',' ? ')'
attribute:
   '@' 'align' '(' expression attrib_end
 | '@' 'binding' '(' expression attrib_end
 | '@' 'builtin' '(' builtin_value_name attrib_end
 | '@' 'compute'
 | '@' 'const'
 | '@' 'fragment'
 | '@' 'group' '(' expression attrib_end
 | '@' 'id' '(' expression attrib_end
 | '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end
 | '@' 'interpolate' '(' interpolation_type_name attrib_end
 | '@' 'invariant'
 | '@' 'location' '(' expression attrib_end
 | '@' 'must_use'
 | '@' 'size' '(' expression attrib_end
 | '@' 'vertex'
 | '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end
 | '@' 'workgroup_size' '(' expression ',' expression attrib_end
 | '@' 'workgroup_size' '(' expression attrib_end
binary_and_expression:
   binary_and_expression '&' unary_expression
 | unary_expression
binary_or_expression:
   binary_or_expression '|' unary_expression
 | unary_expression
binary_xor_expression:
   binary_xor_expression '^' unary_expression
 | unary_expression
bitwise_expression:
   binary_and_expression '&' unary_expression
 | binary_or_expression '|' unary_expression
 | binary_xor_expression '^' unary_expression
bool_literal:
   'false'
 | 'true'
break_if_statement:
   'break' 'if' expression ';'
break_statement:'break'
builtin_value_name:
   'frag_depth'
 | 'front_facing'
 | 'global_invocation_id'
 | 'instance_index'
 | 'local_invocation_id'
 | 'local_invocation_index'
 | 'num_workgroups'
 | 'position'
 | 'sample_index'
 | 'sample_mask'
 | 'vertex_index'
 | 'workgroup_id'
call_expression:call_phrase
call_phrase:
   callable argument_expression_list
callable:
   'array' _disambiguate_template
 | ident
 | mat_prefix _disambiguate_template
 | type_specifier_without_ident
 | vec_prefix _disambiguate_template
case_clause:
   'case' case_selectors ':' ? compound_statement
case_selector:
   'default'
 | expression
case_selectors:
   case_selector ( ',' case_selector ) * ? ',' ?
case_selectors/0.1/0/0.0:
   ',' case_selector
component_or_swizzle_specifier:
   '.' member_ident component_or_swizzle_specifier ?
 | '.' swizzle_name component_or_swizzle_specifier ?
 | '[' expression ']' component_or_swizzle_specifier ?
compound_assignment_operator:
   '%='
 | '&='
 | '*='
 | '+='
 | '-='
 | '/='
 | '^='
 | '|='
 | _shift_left_assign
 | _shift_right_assign
compound_statement:
   '{' statement * ? '}'
const_assert_statement:
   'const_assert' expression
continue_statement:'continue'
continuing_compound_statement:
   '{' statement * ? break_if_statement ? '}'
continuing_statement:
   'continuing' continuing_compound_statement
core_lhs_expression:
   '(' lhs_expression ')'
 | ident
decimal_float_literal:
   /0[fh]/
 | /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/
 | /[0-9]+[eE][+-]?[0-9]+[fh]?/
 | /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/
 | /[1-9][0-9]*[fh]/
decimal_int_literal:
   /0[iu]?/
 | /[1-9][0-9]*[iu]?/
decrement_statement:
   lhs_expression '--'
default_alone_clause:
   'default' ':' ? compound_statement
depth_texture_type:
   'texture_depth_2d'
 | 'texture_depth_2d_array'
 | 'texture_depth_cube'
 | 'texture_depth_cube_array'
 | 'texture_depth_multisampled_2d'
element_count_expression:
   additive_expression
 | bitwise_expression
else_clause:
   'else' compound_statement
else_if_clause:
   'else' 'if' expression compound_statement
enable_directive:
   'enable' enable_extension_name ';'
enable_extension_name:'f16'
expression:
   bitwise_expression
 | relational_expression
 | short_circuit_and_expression '&&' relational_expression
 | short_circuit_or_expression '||' relational_expression
expression_comma_list:
   expression ( ',' expression ) * ? ',' ?
expression_comma_list/0.1/0/0.0:
   ',' expression
float_literal:
   decimal_float_literal
 | hex_float_literal
for_header:
   for_init ? ';' expression ? ';' for_update ?
for_init:
   func_call_statement
 | variable_statement
 | variable_updating_statement
for_statement:
   'for' '(' for_header ')' compound_statement
for_update:
   func_call_statement
 | variable_updating_statement
func_call_statement:call_phrase
function_decl:
   attribute * ? function_header compound_statement
function_header:
   'fn' ident '(' param_list ? ')' ( '->' attribute * ? type_specifier )?
global_constant_decl:
   'const' optionally_typed_ident '=' expression
 | attribute * ? 'override' optionally_typed_ident ( '=' expression )?
global_decl:
   ';'
 | const_assert_statement ';'
 | function_decl
 | global_constant_decl ';'
 | global_variable_decl ';'
 | struct_decl
 | type_alias_decl ';'
global_directive:
   enable_directive
 | requires_directive
global_variable_decl:
   attribute * ? variable_decl ( '=' expression )?
hex_float_literal:
   /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/
 | /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/
 | /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/
hex_int_literal:/0[xX][0-9a-fA-F]+[iu]?/
ident:ident_pattern_token
ident_pattern_token:/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
if_clause:
   'if' expression compound_statement
if_statement:
   if_clause else_if_clause * ? else_clause ?
increment_statement:
   lhs_expression '++'
int_literal:
   decimal_int_literal
 | hex_int_literal
interpolation_sample_name:
   'center'
 | 'centroid'
 | 'sample'
interpolation_type_name:
   'flat'
 | 'linear'
 | 'perspective'
lhs_expression:
   '&' lhs_expression
 | '*' lhs_expression
 | core_lhs_expression component_or_swizzle_specifier ?
literal:
   bool_literal
 | float_literal
 | int_literal
loop_statement:
   'loop' '{' statement * ? continuing_statement ? '}'
mat_prefix:
   'mat2x2'
 | 'mat2x3'
 | 'mat2x4'
 | 'mat3x2'
 | 'mat3x3'
 | 'mat3x4'
 | 'mat4x2'
 | 'mat4x3'
 | 'mat4x4'
member_ident:ident_pattern_token
multiplicative_expression:
   multiplicative_expression multiplicative_operator unary_expression
 | unary_expression
multiplicative_operator:
   '%'
 | '*'
 | '/'
multisampled_texture_type:'texture_multisampled_2d'
optionally_typed_ident:
   ident ( ':' type_specifier )?
param:
   attribute * ? ident ':' type_specifier
param_list:
   param ( ',' param ) * ? ',' ?
param_list/0.1/0/0.0:
   ',' param
paren_expression:
   '(' expression ')'
primary_expression:
   'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression
 | call_expression
 | ident
 | literal
 | paren_expression
relational_expression:
   shift_expression
 | shift_expression '!=' shift_expression
 | shift_expression '==' shift_expression
 | shift_expression _greater_than shift_expression
 | shift_expression _greater_than_equal shift_expression
 | shift_expression _less_than shift_expression
 | shift_expression _less_than_equal shift_expression
requires_directive:
   'requires' software_extension_list ';'
return_statement:
   'return' expression ?
sampled_texture_type:
   'texture_1d'
 | 'texture_2d'
 | 'texture_2d_array'
 | 'texture_3d'
 | 'texture_cube'
 | 'texture_cube_array'
sampler_type:
   'sampler'
 | 'sampler_comparison'
shift_expression:
   additive_expression
 | unary_expression _shift_left unary_expression
 | unary_expression _shift_right unary_expression
short_circuit_and_expression:
   relational_expression
 | short_circuit_and_expression '&&' relational_expression
short_circuit_or_expression:
   relational_expression
 | short_circuit_or_expression '||' relational_expression
singular_expression:
   primary_expression component_or_swizzle_specifier ?
software_extension_list:
   software_extension_name ( ',' software_extension_name ) * ? ',' ?
software_extension_list/0.1/0/0.0:
   ',' software_extension_name
software_extension_name:ident_pattern_token
statement:
   ';'
 | 'discard' ';'
 | break_statement ';'
 | compound_statement
 | const_assert_statement ';'
 | continue_statement ';'
 | for_statement
 | func_call_statement ';'
 | if_statement
 | loop_statement
 | return_statement ';'
 | switch_statement
 | variable_statement ';'
 | variable_updating_statement ';'
 | while_statement
storage_texture_type:
   'texture_storage_1d'
 | 'texture_storage_2d'
 | 'texture_storage_2d_array'
 | 'texture_storage_3d'
struct_body_decl:
   '{' struct_member ( ',' struct_member ) * ? ',' ? '}'
struct_body_decl/0.2/0/0.0:
   ',' struct_member
struct_decl:
   'struct' ident struct_body_decl
struct_member:
   attribute * ? member_ident ':' type_specifier
switch_body:
   case_clause
 | default_alone_clause
switch_statement:
   'switch' expression '{' ( switch_body * ) '}'
switch_statement/0.3:
   switch_body *
swizzle_name:
   '/[rgba]/'
 | '/[rgba][rgba]/'
 | '/[rgba][rgba][rgba]/'
 | '/[rgba][rgba][rgba][rgba]/'
 | '/[xyzw]/'
 | '/[xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw][xyzw]/'
texel_format:
   'bgra8unorm'
 | 'r32float'
 | 'r32sint'
 | 'r32uint'
 | 'rg32float'
 | 'rg32sint'
 | 'rg32uint'
 | 'rgba16float'
 | 'rgba16sint'
 | 'rgba16uint'
 | 'rgba32float'
 | 'rgba32sint'
 | 'rgba32uint'
 | 'rgba8sint'
 | 'rgba8snorm'
 | 'rgba8uint'
 | 'rgba8unorm'
texture_and_sampler_types:
   depth_texture_type
 | multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end
 | sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end
 | sampler_type
 | storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end
translation_unit:
   global_directive * ? global_decl * ?
type_alias_decl:
   'alias' ident '=' type_specifier
type_specifier:
   ident
 | type_specifier_without_ident
type_specifier_without_ident:
   'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end
 | 'bool'
 | 'f16'
 | 'f32'
 | 'i32'
 | 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier ( ',' access_mode )? _template_args_end
 | 'u32'
 | array_type_specifier
 | mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end
 | texture_and_sampler_types
 | vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end
unary_expression:
   '!' unary_expression
 | '&' unary_expression
 | '*' unary_expression
 | '-' unary_expression
 | '~' unary_expression
 | singular_expression
variable_decl:
   'var' _disambiguate_template variable_qualifier ? optionally_typed_ident
variable_qualifier:
   _template_args_start address_space ( ',' access_mode )? _template_args_end
variable_statement:
   'const' optionally_typed_ident '=' expression
 | 'let' optionally_typed_ident '=' expression
 | variable_decl
 | variable_decl '=' expression
variable_updating_statement:
   assignment_statement
 | decrement_statement
 | increment_statement
vec_prefix:
   'vec2'
 | 'vec3'
 | 'vec4'
while_statement:
   'while' expression compound_statement

=Raw rules:
translation_unit  -> ( Choice ( Seq translation_unit/0.0 translation_unit/0.1 ) )
translation_unit .reg_info.index: 593
translation_unit .first: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' ε}
translation_unit .derives_empty: True
translation_unit .follow: {EndOfText}
global_directive  -> ( Choice enable_directive requires_directive )
global_directive .reg_info.index: 205
global_directive .first: {'enable' 'requires'}
global_directive .derives_empty: False
global_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_decl  -> ( Choice ';' ( Seq global_variable_decl ';' ) ( Seq global_constant_decl ';' ) ( Seq type_alias_decl ';' ) struct_decl function_decl ( Seq const_assert_statement ';' ) )
global_decl .reg_info.index: 216
global_decl .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var'}
global_decl .derives_empty: False
global_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
bool_literal  -> ( Choice 'true' 'false' )
bool_literal .reg_info.index: 217
bool_literal .first: {'false' 'true'}
bool_literal .derives_empty: False
bool_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal  -> ( Choice decimal_int_literal hex_int_literal )
int_literal .reg_info.index: 220
int_literal .first: {/0[iu]?/ /0[xX][0-9a-fA-F]+[iu]?/ /[1-9][0-9]*[iu]?/}
int_literal .derives_empty: False
int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal  -> ( Choice /0[iu]?/ /[1-9][0-9]*[iu]?/ )
decimal_int_literal .reg_info.index: 221
decimal_int_literal .first: {/0[iu]?/ /[1-9][0-9]*[iu]?/}
decimal_int_literal .derives_empty: False
decimal_int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal  -> /0[xX][0-9a-fA-F]+[iu]?/
hex_int_literal .reg_info.index: 7
hex_int_literal .first: {/0[xX][0-9a-fA-F]+[iu]?/}
hex_int_literal .derives_empty: False
hex_int_literal .follow: {}
float_literal  -> ( Choice decimal_float_literal hex_float_literal )
float_literal .reg_info.index: 224
float_literal .first: {/0[fh]/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
float_literal .derives_empty: False
float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal  -> ( Choice /0[fh]/ /[1-9][0-9]*[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ )
decimal_float_literal .reg_info.index: 225
decimal_float_literal .first: {/0[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
decimal_float_literal .derives_empty: False
decimal_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal  -> ( Choice /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ )
hex_float_literal .reg_info.index: 226
hex_float_literal .first: {/0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/}
hex_float_literal .derives_empty: False
hex_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal  -> ( Choice int_literal float_literal bool_literal )
literal .reg_info.index: 230
literal .first: {'false' 'true' /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
literal .derives_empty: False
literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident  -> ident_pattern_token
ident .reg_info.index: 231
ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident .derives_empty: False
ident .follow: {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
member_ident  -> ident_pattern_token
member_ident .reg_info.index: 231
member_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
member_ident .derives_empty: False
member_ident .follow: {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
attribute  -> ( Choice ( Seq '@' 'align' '(' expression attrib_end ) ( Seq '@' 'binding' '(' expression attrib_end ) ( Seq '@' 'builtin' '(' builtin_value_name attrib_end ) ( Seq '@' 'const' ) ( Seq '@' 'group' '(' expression attrib_end ) ( Seq '@' 'id' '(' expression attrib_end ) ( Seq '@' 'interpolate' '(' interpolation_type_name attrib_end ) ( Seq '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end ) ( Seq '@' 'invariant' ) ( Seq '@' 'location' '(' expression attrib_end ) ( Seq '@' 'must_use' ) ( Seq '@' 'size' '(' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression ',' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end ) ( Seq '@' 'vertex' ) ( Seq '@' 'fragment' ) ( Seq '@' 'compute' ) )
attribute .reg_info.index: 255
attribute .first: {'@'}
attribute .derives_empty: False
attribute .follow: {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end  -> ( Choice ( Seq attrib_end/0.0 ')' ) )
attrib_end .reg_info.index: 733
attrib_end .first: {')' ','}
attrib_end .derives_empty: False
attrib_end .follow: {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
array_type_specifier  -> ( Choice ( Seq 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end ) )
array_type_specifier .reg_info.index: 743
array_type_specifier .first: {'array'}
array_type_specifier .derives_empty: False
array_type_specifier .follow: {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
element_count_expression  -> ( Choice additive_expression bitwise_expression )
element_count_expression .reg_info.index: 268
element_count_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
element_count_expression .derives_empty: False
element_count_expression .follow: {/\u200B_template_args_end/}
struct_decl  -> ( Choice ( Seq 'struct' ident struct_body_decl ) )
struct_decl .reg_info.index: 546
struct_decl .first: {'struct'}
struct_decl .derives_empty: False
struct_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl  -> ( Choice ( Seq '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' ) )
struct_body_decl .reg_info.index: 758
struct_body_decl .first: {'{'}
struct_body_decl .derives_empty: False
struct_body_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_member  -> ( Choice ( Seq struct_member/0.0 member_ident ':' type_specifier ) )
struct_member .reg_info.index: 766
struct_member .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member .derives_empty: False
struct_member .follow: {',' '}'}
texture_and_sampler_types  -> ( Choice sampler_type depth_texture_type ( Seq sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end ) ( Seq multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end ) ( Seq storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end ) )
texture_and_sampler_types .reg_info.index: 292
texture_and_sampler_types .first: {'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d'}
texture_and_sampler_types .derives_empty: False
texture_and_sampler_types .follow: {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
sampler_type  -> ( Choice 'sampler' 'sampler_comparison' )
sampler_type .reg_info.index: 293
sampler_type .first: {'sampler' 'sampler_comparison'}
sampler_type .derives_empty: False
sampler_type .follow: {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
sampled_texture_type  -> ( Choice 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' )
sampled_texture_type .reg_info.index: 294
sampled_texture_type .first: {'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array'}
sampled_texture_type .derives_empty: False
sampled_texture_type .follow: {/\u200B_disambiguate_template/}
multisampled_texture_type  -> 'texture_multisampled_2d'
multisampled_texture_type .reg_info.index: 48
multisampled_texture_type .first: {'texture_multisampled_2d'}
multisampled_texture_type .derives_empty: False
multisampled_texture_type .follow: {}
storage_texture_type  -> ( Choice 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' )
storage_texture_type .reg_info.index: 295
storage_texture_type .first: {'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d'}
storage_texture_type .derives_empty: False
storage_texture_type .follow: {/\u200B_disambiguate_template/}
depth_texture_type  -> ( Choice 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' )
depth_texture_type .reg_info.index: 296
depth_texture_type .first: {'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d'}
depth_texture_type .derives_empty: False
depth_texture_type .follow: {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
type_alias_decl  -> ( Choice ( Seq 'alias' ident '=' type_specifier ) )
type_alias_decl .reg_info.index: 549
type_alias_decl .first: {'alias'}
type_alias_decl .derives_empty: False
type_alias_decl .follow: {';'}
type_specifier  -> ( Choice ident type_specifier_without_ident )
type_specifier .reg_info.index: 299
type_specifier .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
type_specifier .derives_empty: False
type_specifier .follow: {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
type_specifier_without_ident  -> ( Choice 'bool' 'f32' 'f16' 'i32' 'u32' ( Seq vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end ) ( Seq mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end ) ( Seq 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end ) array_type_specifier ( Seq 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end ) texture_and_sampler_types )
type_specifier_without_ident .reg_info.index: 849
type_specifier_without_ident .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
type_specifier_without_ident .derives_empty: False
type_specifier_without_ident .follow: {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
vec_prefix  -> ( Choice 'vec2' 'vec3' 'vec4' )
vec_prefix .reg_info.index: 312
vec_prefix .first: {'vec2' 'vec3' 'vec4'}
vec_prefix .derives_empty: False
vec_prefix .follow: {/\u200B_disambiguate_template/}
mat_prefix  -> ( Choice 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' )
mat_prefix .reg_info.index: 313
mat_prefix .first: {'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4'}
mat_prefix .derives_empty: False
mat_prefix .follow: {/\u200B_disambiguate_template/}
variable_statement  -> ( Choice variable_decl ( Seq variable_decl '=' expression ) ( Seq 'let' optionally_typed_ident '=' expression ) ( Seq 'const' optionally_typed_ident '=' expression ) )
variable_statement .reg_info.index: 319
variable_statement .first: {'const' 'let' 'var'}
variable_statement .derives_empty: False
variable_statement .follow: {';'}
variable_decl  -> ( Choice ( Seq 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident ) )
variable_decl .reg_info.index: 884
variable_decl .first: {'var'}
variable_decl .derives_empty: False
variable_decl .follow: {';' '='}
optionally_typed_ident  -> ( Choice ( Seq ident optionally_typed_ident/0.1 ) )
optionally_typed_ident .reg_info.index: 890
optionally_typed_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
optionally_typed_ident .derives_empty: False
optionally_typed_ident .follow: {';' '='}
variable_qualifier  -> ( Choice ( Seq _template_args_start address_space variable_qualifier/0.2 _template_args_end ) )
variable_qualifier .reg_info.index: 897
variable_qualifier .first: {/\u200B_template_args_start/}
variable_qualifier .derives_empty: False
variable_qualifier .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
global_variable_decl  -> ( Choice ( Seq global_variable_decl/0.0 variable_decl global_variable_decl/0.2 ) )
global_variable_decl .reg_info.index: 904
global_variable_decl .first: {'@' 'var'}
global_variable_decl .derives_empty: False
global_variable_decl .follow: {';'}
global_constant_decl  -> ( Choice ( Seq 'const' optionally_typed_ident '=' expression ) ( Seq global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 ) )
global_constant_decl .reg_info.index: 916
global_constant_decl .first: {'@' 'const' 'override'}
global_constant_decl .derives_empty: False
global_constant_decl .follow: {';'}
primary_expression  -> ( Choice ident call_expression literal paren_expression ( Seq 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression ) )
primary_expression .reg_info.index: 336
primary_expression .first: {'(' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
primary_expression .derives_empty: False
primary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression  -> call_phrase
call_expression .reg_info.index: 337
call_expression .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_expression .derives_empty: False
call_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_phrase  -> ( Choice ( Seq callable argument_expression_list ) )
call_phrase .reg_info.index: 554
call_phrase .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_phrase .derives_empty: False
call_phrase .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable  -> ( Choice ident type_specifier_without_ident ( Seq vec_prefix _disambiguate_template ) ( Seq mat_prefix _disambiguate_template ) ( Seq 'array' _disambiguate_template ) )
callable .reg_info.index: 344
callable .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
callable .derives_empty: False
callable .follow: {'('}
paren_expression  -> ( Choice ( Seq '(' expression ')' ) )
paren_expression .reg_info.index: 555
paren_expression .first: {'('}
paren_expression .derives_empty: False
paren_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list  -> ( Choice ( Seq '(' argument_expression_list/0.1 ')' ) )
argument_expression_list .reg_info.index: 952
argument_expression_list .first: {'('}
argument_expression_list .derives_empty: False
argument_expression_list .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
expression_comma_list  -> ( Choice ( Seq expression expression_comma_list/0.1 expression_comma_list/0.2 ) )
expression_comma_list .reg_info.index: 959
expression_comma_list .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression_comma_list .derives_empty: False
expression_comma_list .follow: {')'}
component_or_swizzle_specifier  -> ( Choice ( Seq '[' expression ']' component_or_swizzle_specifier/0.3 ) ( Seq '.' member_ident component_or_swizzle_specifier/1.2 ) ( Seq '.' swizzle_name component_or_swizzle_specifier/2.2 ) )
component_or_swizzle_specifier .reg_info.index: 977
component_or_swizzle_specifier .first: {'.' '['}
component_or_swizzle_specifier .derives_empty: False
component_or_swizzle_specifier .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
unary_expression  -> ( Choice singular_expression ( Seq '-' unary_expression ) ( Seq '!' unary_expression ) ( Seq '~' unary_expression ) ( Seq '*' unary_expression ) ( Seq '&' unary_expression ) )
unary_expression .reg_info.index: 367
unary_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
unary_expression .derives_empty: False
unary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression  -> ( Choice ( Seq primary_expression singular_expression/0.1 ) )
singular_expression .reg_info.index: 998
singular_expression .first: {'(' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
singular_expression .derives_empty: False
singular_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
lhs_expression  -> ( Choice ( Seq core_lhs_expression lhs_expression/0.1 ) ( Seq '*' lhs_expression ) ( Seq '&' lhs_expression ) )
lhs_expression .reg_info.index: 1009
lhs_expression .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
lhs_expression .derives_empty: False
lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression  -> ( Choice ident ( Seq '(' lhs_expression ')' ) )
core_lhs_expression .reg_info.index: 377
core_lhs_expression .first: {'(' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
core_lhs_expression .derives_empty: False
core_lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
multiplicative_expression  -> ( Choice unary_expression ( Seq multiplicative_expression multiplicative_operator unary_expression ) )
multiplicative_expression .reg_info.index: 381
multiplicative_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_expression .derives_empty: False
multiplicative_expression .follow: {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator  -> ( Choice '*' '/' '%' )
multiplicative_operator .reg_info.index: 382
multiplicative_operator .first: {'%' '*' '/'}
multiplicative_operator .derives_empty: False
multiplicative_operator .follow: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression  -> ( Choice multiplicative_expression ( Seq additive_expression additive_operator multiplicative_expression ) )
additive_expression .reg_info.index: 385
additive_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression .derives_empty: False
additive_expression .follow: {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_operator  -> ( Choice '+' '-' )
additive_operator .reg_info.index: 386
additive_operator .first: {'+' '-'}
additive_operator .derives_empty: False
additive_operator .follow: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression  -> ( Choice additive_expression ( Seq unary_expression _shift_left unary_expression ) ( Seq unary_expression _shift_right unary_expression ) )
shift_expression .reg_info.index: 391
shift_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression .derives_empty: False
shift_expression .follow: {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
relational_expression  -> ( Choice shift_expression ( Seq shift_expression _less_than shift_expression ) ( Seq shift_expression _greater_than shift_expression ) ( Seq shift_expression _less_than_equal shift_expression ) ( Seq shift_expression _greater_than_equal shift_expression ) ( Seq shift_expression '==' shift_expression ) ( Seq shift_expression '!=' shift_expression ) )
relational_expression .reg_info.index: 403
relational_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
relational_expression .derives_empty: False
relational_expression .follow: {'&&' ')' ',' ':' ';' ']' '{' '||'}
short_circuit_and_expression  -> ( Choice relational_expression ( Seq short_circuit_and_expression '&&' relational_expression ) )
short_circuit_and_expression .reg_info.index: 407
short_circuit_and_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_and_expression .derives_empty: False
short_circuit_and_expression .follow: {'&&'}
short_circuit_or_expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) )
short_circuit_or_expression .reg_info.index: 410
short_circuit_or_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_or_expression .derives_empty: False
short_circuit_or_expression .follow: {'||'}
binary_or_expression  -> ( Choice unary_expression ( Seq binary_or_expression '|' unary_expression ) )
binary_or_expression .reg_info.index: 413
binary_or_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_or_expression .derives_empty: False
binary_or_expression .follow: {'|'}
binary_and_expression  -> ( Choice unary_expression ( Seq binary_and_expression '&' unary_expression ) )
binary_and_expression .reg_info.index: 416
binary_and_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_and_expression .derives_empty: False
binary_and_expression .follow: {'&'}
binary_xor_expression  -> ( Choice unary_expression ( Seq binary_xor_expression '^' unary_expression ) )
binary_xor_expression .reg_info.index: 419
binary_xor_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_xor_expression .derives_empty: False
binary_xor_expression .follow: {'^'}
bitwise_expression  -> ( Choice ( Seq binary_and_expression '&' unary_expression ) ( Seq binary_or_expression '|' unary_expression ) ( Seq binary_xor_expression '^' unary_expression ) )
bitwise_expression .reg_info.index: 420
bitwise_expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
bitwise_expression .derives_empty: False
bitwise_expression .follow: {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) ( Seq short_circuit_and_expression '&&' relational_expression ) bitwise_expression )
expression .reg_info.index: 421
expression .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression .derives_empty: False
expression .follow: {')' ',' ':' ';' ']' '{'}
compound_statement  -> ( Choice ( Seq '{' compound_statement/0.1 '}' ) )
compound_statement .reg_info.index: 1117
compound_statement .first: {'{'}
compound_statement .derives_empty: False
compound_statement .follow: {'&' '(' '*' ';' '@' '_' 'alias' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
assignment_statement  -> ( Choice ( Seq lhs_expression assignment_statement/0.1 expression ) ( Seq '_' '=' expression ) )
assignment_statement .reg_info.index: 1128
assignment_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement .derives_empty: False
assignment_statement .follow: {')' ';'}
compound_assignment_operator  -> ( Choice '+=' '-=' '*=' '/=' '%=' '&=' '|=' '^=' _shift_right_assign _shift_left_assign )
compound_assignment_operator .reg_info.index: 433
compound_assignment_operator .first: {'%=' '&=' '*=' '+=' '-=' '/=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
compound_assignment_operator .derives_empty: False
compound_assignment_operator .follow: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
increment_statement  -> ( Choice ( Seq lhs_expression '++' ) )
increment_statement .reg_info.index: 560
increment_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement .derives_empty: False
increment_statement .follow: {')' ';'}
decrement_statement  -> ( Choice ( Seq lhs_expression '--' ) )
decrement_statement .reg_info.index: 561
decrement_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
decrement_statement .derives_empty: False
decrement_statement .follow: {')' ';'}
if_statement  -> ( Choice ( Seq if_clause if_statement/0.1 if_statement/0.2 ) )
if_statement .reg_info.index: 1152
if_statement .first: {'if'}
if_statement .derives_empty: False
if_statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_clause  -> ( Choice ( Seq 'if' expression compound_statement ) )
if_clause .reg_info.index: 563
if_clause .first: {'if'}
if_clause .derives_empty: False
if_clause .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause  -> ( Choice ( Seq 'else' 'if' expression compound_statement ) )
else_if_clause .reg_info.index: 564
else_if_clause .first: {'else'}
else_if_clause .derives_empty: False
else_if_clause .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause  -> ( Choice ( Seq 'else' compound_statement ) )
else_clause .reg_info.index: 565
else_clause .first: {'else'}
else_clause .derives_empty: False
else_clause .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement  -> ( Choice ( Seq 'switch' expression '{' switch_statement/0.3 '}' ) )
switch_statement .reg_info.index: 1173
switch_statement .first: {'switch'}
switch_statement .derives_empty: False
switch_statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_body  -> ( Choice case_clause default_alone_clause )
switch_body .reg_info.index: 452
switch_body .first: {'case' 'default'}
switch_body .derives_empty: False
switch_body .follow: {'case' 'default' '}'}
case_clause  -> ( Choice ( Seq 'case' case_selectors case_clause/0.2 compound_statement ) )
case_clause .reg_info.index: 1183
case_clause .first: {'case'}
case_clause .derives_empty: False
case_clause .follow: {'case' 'default' '}'}
default_alone_clause  -> ( Choice ( Seq 'default' default_alone_clause/0.1 compound_statement ) )
default_alone_clause .reg_info.index: 1189
default_alone_clause .first: {'default'}
default_alone_clause .derives_empty: False
default_alone_clause .follow: {'case' 'default' '}'}
case_selectors  -> ( Choice ( Seq case_selector case_selectors/0.1 case_selectors/0.2 ) )
case_selectors .reg_info.index: 1196
case_selectors .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'default' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selectors .derives_empty: False
case_selectors .follow: {':' '{'}
case_selector  -> ( Choice 'default' expression )
case_selector .reg_info.index: 462
case_selector .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'default' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selector .derives_empty: False
case_selector .follow: {',' ':' '{'}
loop_statement  -> ( Choice ( Seq 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' ) )
loop_statement .reg_info.index: 1207
loop_statement .first: {'loop'}
loop_statement .derives_empty: False
loop_statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement  -> ( Choice ( Seq 'for' '(' for_header ')' compound_statement ) )
for_statement .reg_info.index: 571
for_statement .first: {'for'}
for_statement .derives_empty: False
for_statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header  -> ( Choice ( Seq for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 ) )
for_header .reg_info.index: 1224
for_header .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'const' 'f16' 'f32' 'i32' 'let' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header .derives_empty: False
for_header .follow: {')'}
for_init  -> ( Choice variable_statement variable_updating_statement func_call_statement )
for_init .reg_info.index: 477
for_init .first: {'&' '(' '*' '_' 'array' 'atomic' 'bool' 'const' 'f16' 'f32' 'i32' 'let' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_init .derives_empty: False
for_init .follow: {';'}
for_update  -> ( Choice variable_updating_statement func_call_statement )
for_update .reg_info.index: 478
for_update .first: {'&' '(' '*' '_' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_update .derives_empty: False
for_update .follow: {')'}
while_statement  -> ( Choice ( Seq 'while' expression compound_statement ) )
while_statement .reg_info.index: 573
while_statement .first: {'while'}
while_statement .derives_empty: False
while_statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
break_statement  -> 'break'
break_statement .reg_info.index: 119
break_statement .first: {'break'}
break_statement .derives_empty: False
break_statement .follow: {}
break_if_statement  -> ( Choice ( Seq 'break' 'if' expression ';' ) )
break_if_statement .reg_info.index: 574
break_if_statement .first: {'break'}
break_if_statement .derives_empty: False
break_if_statement .follow: {'}'}
continue_statement  -> 'continue'
continue_statement .reg_info.index: 120
continue_statement .first: {'continue'}
continue_statement .derives_empty: False
continue_statement .follow: {}
continuing_statement  -> ( Choice ( Seq 'continuing' continuing_compound_statement ) )
continuing_statement .reg_info.index: 575
continuing_statement .first: {'continuing'}
continuing_statement .derives_empty: False
continuing_statement .follow: {'}'}
continuing_compound_statement  -> ( Choice ( Seq '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' ) )
continuing_compound_statement .reg_info.index: 1249
continuing_compound_statement .first: {'{'}
continuing_compound_statement .derives_empty: False
continuing_compound_statement .follow: {'}'}
return_statement  -> ( Choice ( Seq 'return' return_statement/0.1 ) )
return_statement .reg_info.index: 1254
return_statement .first: {'return'}
return_statement .derives_empty: False
return_statement .follow: {';'}
func_call_statement  -> call_phrase
func_call_statement .reg_info.index: 337
func_call_statement .first: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement .derives_empty: False
func_call_statement .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
const_assert_statement  -> ( Choice ( Seq 'const_assert' expression ) )
const_assert_statement .reg_info.index: 578
const_assert_statement .first: {'const_assert'}
const_assert_statement .derives_empty: False
const_assert_statement .follow: {';'}
statement  -> ( Choice ';' ( Seq return_statement ';' ) if_statement switch_statement loop_statement for_statement while_statement ( Seq func_call_statement ';' ) ( Seq variable_statement ';' ) ( Seq break_statement ';' ) ( Seq continue_statement ';' ) ( Seq 'discard' ';' ) ( Seq variable_updating_statement ';' ) compound_statement ( Seq const_assert_statement ';' ) )
statement .reg_info.index: 503
statement .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement .derives_empty: False
statement .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement  -> ( Choice assignment_statement increment_statement decrement_statement )
variable_updating_statement .reg_info.index: 507
variable_updating_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement .derives_empty: False
variable_updating_statement .follow: {')' ';'}
function_decl  -> ( Choice ( Seq function_decl/0.0 function_header compound_statement ) )
function_decl .reg_info.index: 1297
function_decl .first: {'@' 'fn'}
function_decl .derives_empty: False
function_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header  -> ( Choice ( Seq 'fn' ident '(' function_header/0.3 ')' function_header/0.5 ) )
function_header .reg_info.index: 1308
function_header .first: {'fn'}
function_header .derives_empty: False
function_header .follow: {'{'}
param_list  -> ( Choice ( Seq param param_list/0.1 param_list/0.2 ) )
param_list .reg_info.index: 1315
param_list .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list .derives_empty: False
param_list .follow: {')'}
param  -> ( Choice ( Seq param/0.0 ident ':' type_specifier ) )
param .reg_info.index: 1322
param .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param .derives_empty: False
param .follow: {')' ','}
enable_directive  -> ( Choice ( Seq 'enable' enable_extension_name ';' ) )
enable_directive .reg_info.index: 583
enable_directive .first: {'enable'}
enable_directive .derives_empty: False
enable_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive  -> ( Choice ( Seq 'requires' software_extension_list ';' ) )
requires_directive .reg_info.index: 584
requires_directive .first: {'requires'}
requires_directive .derives_empty: False
requires_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
software_extension_list  -> ( Choice ( Seq software_extension_name software_extension_list/0.1 software_extension_list/0.2 ) )
software_extension_list .reg_info.index: 1337
software_extension_list .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list .derives_empty: False
software_extension_list .follow: {';'}
software_extension_name  -> ident_pattern_token
software_extension_name .reg_info.index: 231
software_extension_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_name .derives_empty: False
software_extension_name .follow: {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
ident_pattern_token  -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
ident_pattern_token .reg_info.index: 129
ident_pattern_token .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident_pattern_token .derives_empty: False
ident_pattern_token .follow: {}
interpolation_type_name  -> ( Choice 'perspective' 'linear' 'flat' )
interpolation_type_name .reg_info.index: 530
interpolation_type_name .first: {'flat' 'linear' 'perspective'}
interpolation_type_name .derives_empty: False
interpolation_type_name .follow: {')' ','}
interpolation_sample_name  -> ( Choice 'center' 'centroid' 'sample' )
interpolation_sample_name .reg_info.index: 531
interpolation_sample_name .first: {'center' 'centroid' 'sample'}
interpolation_sample_name .derives_empty: False
interpolation_sample_name .follow: {')' ','}
builtin_value_name  -> ( Choice 'vertex_index' 'instance_index' 'position' 'front_facing' 'frag_depth' 'local_invocation_id' 'local_invocation_index' 'global_invocation_id' 'workgroup_id' 'num_workgroups' 'sample_index' 'sample_mask' )
builtin_value_name .reg_info.index: 532
builtin_value_name .first: {'frag_depth' 'front_facing' 'global_invocation_id' 'instance_index' 'local_invocation_id' 'local_invocation_index' 'num_workgroups' 'position' 'sample_index' 'sample_mask' 'vertex_index' 'workgroup_id'}
builtin_value_name .derives_empty: False
builtin_value_name .follow: {')' ','}
access_mode  -> ( Choice 'read' 'write' 'read_write' )
access_mode .reg_info.index: 533
access_mode .first: {'read' 'read_write' 'write'}
access_mode .derives_empty: False
access_mode .follow: {/\u200B_template_args_end/}
address_space  -> ( Choice 'function' 'private' 'workgroup' 'uniform' 'storage' )
address_space .reg_info.index: 534
address_space .first: {'function' 'private' 'storage' 'uniform' 'workgroup'}
address_space .derives_empty: False
address_space .follow: {',' /\u200B_template_args_end/}
texel_format  -> ( Choice 'rgba8unorm' 'rgba8snorm' 'rgba8uint' 'rgba8sint' 'rgba16uint' 'rgba16sint' 'rgba16float' 'r32uint' 'r32sint' 'r32float' 'rg32uint' 'rg32sint' 'rg32float' 'rgba32uint' 'rgba32sint' 'rgba32float' 'bgra8unorm' )
texel_format .reg_info.index: 535
texel_format .first: {'bgra8unorm' 'r32float' 'r32sint' 'r32uint' 'rg32float' 'rg32sint' 'rg32uint' 'rgba16float' 'rgba16sint' 'rgba16uint' 'rgba32float' 'rgba32sint' 'rgba32uint' 'rgba8sint' 'rgba8snorm' 'rgba8uint' 'rgba8unorm'}
texel_format .derives_empty: False
texel_format .follow: {','}
enable_extension_name  -> 'f16'
enable_extension_name .reg_info.index: 62
enable_extension_name .first: {'f16'}
enable_extension_name .derives_empty: False
enable_extension_name .follow: {}
swizzle_name  -> ( Choice '/[rgba]/' '/[rgba][rgba]/' '/[rgba][rgba][rgba]/' '/[rgba][rgba][rgba][rgba]/' '/[xyzw]/' '/[xyzw][xyzw]/' '/[xyzw][xyzw][xyzw]/' '/[xyzw][xyzw][xyzw][xyzw]/' )
swizzle_name .reg_info.index: 536
swizzle_name .first: {'/[rgba]/' '/[rgba][rgba]/' '/[rgba][rgba][rgba]/' '/[rgba][rgba][rgba][rgba]/' '/[xyzw]/' '/[xyzw][xyzw]/' '/[xyzw][xyzw][xyzw]/' '/[xyzw][xyzw][xyzw][xyzw]/'}
swizzle_name .derives_empty: False
swizzle_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
_comment  -> /\/\/.*/
_comment .reg_info.index: 181
_comment .first: {/\/\/.*/}
_comment .derives_empty: False
_comment .follow: {}
_blankspace  -> /[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_blankspace .reg_info.index: 182
_blankspace .first: {/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/}
_blankspace .derives_empty: False
_blankspace .follow: {}
_shift_left  -> /\u200B_shift_left/
_shift_left .reg_info.index: 183
_shift_left .first: {/\u200B_shift_left/}
_shift_left .derives_empty: False
_shift_left .follow: {}
_shift_right_assign  -> /\u200B_shift_right_assign/
_shift_right_assign .reg_info.index: 184
_shift_right_assign .first: {/\u200B_shift_right_assign/}
_shift_right_assign .derives_empty: False
_shift_right_assign .follow: {}
_shift_left_assign  -> /\u200B_shift_left_assign/
_shift_left_assign .reg_info.index: 185
_shift_left_assign .first: {/\u200B_shift_left_assign/}
_shift_left_assign .derives_empty: False
_shift_left_assign .follow: {}
_less_than  -> /\u200B_less_than/
_less_than .reg_info.index: 186
_less_than .first: {/\u200B_less_than/}
_less_than .derives_empty: False
_less_than .follow: {}
_template_args_end  -> /\u200B_template_args_end/
_template_args_end .reg_info.index: 187
_template_args_end .first: {/\u200B_template_args_end/}
_template_args_end .derives_empty: False
_template_args_end .follow: {}
_greater_than_equal  -> /\u200B_greater_than_equal/
_greater_than_equal .reg_info.index: 188
_greater_than_equal .first: {/\u200B_greater_than_equal/}
_greater_than_equal .derives_empty: False
_greater_than_equal .follow: {}
_disambiguate_template  -> /\u200B_disambiguate_template/
_disambiguate_template .reg_info.index: 189
_disambiguate_template .first: {/\u200B_disambiguate_template/}
_disambiguate_template .derives_empty: False
_disambiguate_template .follow: {}
_template_args_start  -> /\u200B_template_args_start/
_template_args_start .reg_info.index: 190
_template_args_start .first: {/\u200B_template_args_start/}
_template_args_start .derives_empty: False
_template_args_start .follow: {}
_error_sentinel  -> /\u200B_error_sentinel/
_error_sentinel .reg_info.index: 191
_error_sentinel .first: {/\u200B_error_sentinel/}
_error_sentinel .derives_empty: False
_error_sentinel .follow: {}
_block_comment  -> /\u200B_block_comment/
_block_comment .reg_info.index: 192
_block_comment .first: {/\u200B_block_comment/}
_block_comment .derives_empty: False
_block_comment .follow: {}
_shift_right  -> /\u200B_shift_right/
_shift_right .reg_info.index: 193
_shift_right .first: {/\u200B_shift_right/}
_shift_right .derives_empty: False
_shift_right .follow: {}
_less_than_equal  -> /\u200B_less_than_equal/
_less_than_equal .reg_info.index: 194
_less_than_equal .first: {/\u200B_less_than_equal/}
_less_than_equal .derives_empty: False
_less_than_equal .follow: {}
_greater_than  -> /\u200B_greater_than/
_greater_than .reg_info.index: 195
_greater_than .first: {/\u200B_greater_than/}
_greater_than .derives_empty: False
_greater_than .follow: {}
language  -> ( Choice ( Seq translation_unit EndOfText ) )
language .reg_info.index: 586
language .first: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
language .derives_empty: False
language .follow: {}
translation_unit/0.0  -> ( Choice translation_unit/0.0/0 ε )
translation_unit/0.0 .reg_info.index: 1446
translation_unit/0.0 .first: {'enable' 'requires' ε}
translation_unit/0.0 .derives_empty: True
translation_unit/0.0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1  -> ( Choice translation_unit/0.1/0 ε )
translation_unit/0.1 .reg_info.index: 1450
translation_unit/0.1 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' ε}
translation_unit/0.1 .derives_empty: True
translation_unit/0.1 .follow: {EndOfText}
attrib_end/0.0  -> ( Choice ',' ε )
attrib_end/0.0 .reg_info.index: 256
attrib_end/0.0 .first: {',' ε}
attrib_end/0.0 .derives_empty: True
attrib_end/0.0 .follow: {')' ':' ';' '{' '}'}
array_type_specifier/0.4  -> ( Choice ( Seq ',' element_count_expression ) ε )
array_type_specifier/0.4 .reg_info.index: 263
array_type_specifier/0.4 .first: {',' ε}
array_type_specifier/0.4 .derives_empty: True
array_type_specifier/0.4 .follow: {/\u200B_template_args_end/}
struct_body_decl/0.2  -> ( Choice struct_body_decl/0.2/0 ε )
struct_body_decl/0.2 .reg_info.index: 1458
struct_body_decl/0.2 .first: {',' ε}
struct_body_decl/0.2 .derives_empty: True
struct_body_decl/0.2 .follow: {',' '}'}
struct_body_decl/0.3  -> ( Choice ',' ε )
struct_body_decl/0.3 .reg_info.index: 256
struct_body_decl/0.3 .first: {',' ε}
struct_body_decl/0.3 .derives_empty: True
struct_body_decl/0.3 .follow: {')' ':' ';' '{' '}'}
struct_member/0.0  -> ( Choice struct_member/0.0/0 ε )
struct_member/0.0 .reg_info.index: 1463
struct_member/0.0 .first: {'@' ε}
struct_member/0.0 .derives_empty: True
struct_member/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
type_specifier_without_ident/7.6  -> ( Choice ( Seq ',' access_mode ) ε )
type_specifier_without_ident/7.6 .reg_info.index: 306
type_specifier_without_ident/7.6 .first: {',' ε}
type_specifier_without_ident/7.6 .derives_empty: True
type_specifier_without_ident/7.6 .follow: {/\u200B_template_args_end/}
variable_decl/0.2  -> ( Choice variable_qualifier ε )
variable_decl/0.2 .reg_info.index: 321
variable_decl/0.2 .first: {/\u200B_template_args_start/ ε}
variable_decl/0.2 .derives_empty: True
variable_decl/0.2 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
optionally_typed_ident/0.1  -> ( Choice ( Seq ':' type_specifier ) ε )
optionally_typed_ident/0.1 .reg_info.index: 324
optionally_typed_ident/0.1 .first: {':' ε}
optionally_typed_ident/0.1 .derives_empty: True
optionally_typed_ident/0.1 .follow: {';' '='}
variable_qualifier/0.2  -> ( Choice ( Seq ',' access_mode ) ε )
variable_qualifier/0.2 .reg_info.index: 306
variable_qualifier/0.2 .first: {',' ε}
variable_qualifier/0.2 .derives_empty: True
variable_qualifier/0.2 .follow: {/\u200B_template_args_end/}
global_variable_decl/0.0  -> ( Choice global_variable_decl/0.0/0 ε )
global_variable_decl/0.0 .reg_info.index: 1477
global_variable_decl/0.0 .first: {'@' ε}
global_variable_decl/0.0 .derives_empty: True
global_variable_decl/0.0 .follow: {'var'}
global_variable_decl/0.2  -> ( Choice ( Seq '=' expression ) ε )
global_variable_decl/0.2 .reg_info.index: 328
global_variable_decl/0.2 .first: {'=' ε}
global_variable_decl/0.2 .derives_empty: True
global_variable_decl/0.2 .follow: {';'}
global_constant_decl/1.0  -> ( Choice global_constant_decl/1.0/0 ε )
global_constant_decl/1.0 .reg_info.index: 1484
global_constant_decl/1.0 .first: {'@' ε}
global_constant_decl/1.0 .derives_empty: True
global_constant_decl/1.0 .follow: {'override'}
global_constant_decl/1.3  -> ( Choice ( Seq '=' expression ) ε )
global_constant_decl/1.3 .reg_info.index: 328
global_constant_decl/1.3 .first: {'=' ε}
global_constant_decl/1.3 .derives_empty: True
global_constant_decl/1.3 .follow: {';'}
argument_expression_list/0.1  -> ( Choice expression_comma_list ε )
argument_expression_list/0.1 .reg_info.index: 347
argument_expression_list/0.1 .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ ε}
argument_expression_list/0.1 .derives_empty: True
argument_expression_list/0.1 .follow: {')'}
expression_comma_list/0.1  -> ( Choice expression_comma_list/0.1/0 ε )
expression_comma_list/0.1 .reg_info.index: 1492
expression_comma_list/0.1 .first: {',' ε}
expression_comma_list/0.1 .derives_empty: True
expression_comma_list/0.1 .follow: {')' ','}
expression_comma_list/0.2  -> ( Choice ',' ε )
expression_comma_list/0.2 .reg_info.index: 256
expression_comma_list/0.2 .first: {',' ε}
expression_comma_list/0.2 .derives_empty: True
expression_comma_list/0.2 .follow: {')' ':' ';' '{' '}'}
component_or_swizzle_specifier/0.3  -> ( Choice component_or_swizzle_specifier ε )
component_or_swizzle_specifier/0.3 .reg_info.index: 354
component_or_swizzle_specifier/0.3 .first: {'.' '[' ε}
component_or_swizzle_specifier/0.3 .derives_empty: True
component_or_swizzle_specifier/0.3 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2  -> ( Choice component_or_swizzle_specifier ε )
component_or_swizzle_specifier/1.2 .reg_info.index: 354
component_or_swizzle_specifier/1.2 .first: {'.' '[' ε}
component_or_swizzle_specifier/1.2 .derives_empty: True
component_or_swizzle_specifier/1.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2  -> ( Choice component_or_swizzle_specifier ε )
component_or_swizzle_specifier/2.2 .reg_info.index: 354
component_or_swizzle_specifier/2.2 .first: {'.' '[' ε}
component_or_swizzle_specifier/2.2 .derives_empty: True
component_or_swizzle_specifier/2.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
singular_expression/0.1  -> ( Choice component_or_swizzle_specifier ε )
singular_expression/0.1 .reg_info.index: 354
singular_expression/0.1 .first: {'.' '[' ε}
singular_expression/0.1 .derives_empty: True
singular_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
lhs_expression/0.1  -> ( Choice component_or_swizzle_specifier ε )
lhs_expression/0.1 .reg_info.index: 354
lhs_expression/0.1 .first: {'.' '[' ε}
lhs_expression/0.1 .derives_empty: True
lhs_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
compound_statement/0.1  -> ( Choice compound_statement/0.1/0 ε )
compound_statement/0.1 .reg_info.index: 1502
compound_statement/0.1 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
compound_statement/0.1 .derives_empty: True
compound_statement/0.1 .follow: {'}'}
assignment_statement/0.1  -> ( Choice '=' compound_assignment_operator )
assignment_statement/0.1 .reg_info.index: 427
assignment_statement/0.1 .first: {'%=' '&=' '*=' '+=' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
assignment_statement/0.1 .derives_empty: False
assignment_statement/0.1 .follow: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
if_statement/0.1  -> ( Choice if_statement/0.1/0 ε )
if_statement/0.1 .reg_info.index: 1507
if_statement/0.1 .first: {'else' ε}
if_statement/0.1 .derives_empty: True
if_statement/0.1 .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2  -> ( Choice else_clause ε )
if_statement/0.2 .reg_info.index: 441
if_statement/0.2 .first: {'else' ε}
if_statement/0.2 .derives_empty: True
if_statement/0.2 .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.3  -> ( Choice switch_statement/0.3/0 )
switch_statement/0.3 .reg_info.index: 1422
switch_statement/0.3 .first: {'case' 'default' ε}
switch_statement/0.3 .derives_empty: True
switch_statement/0.3 .follow: {'}'}
case_clause/0.2  -> ( Choice ':' ε )
case_clause/0.2 .reg_info.index: 454
case_clause/0.2 .first: {':' ε}
case_clause/0.2 .derives_empty: True
case_clause/0.2 .follow: {'{'}
default_alone_clause/0.1  -> ( Choice ':' ε )
default_alone_clause/0.1 .reg_info.index: 454
default_alone_clause/0.1 .first: {':' ε}
default_alone_clause/0.1 .derives_empty: True
default_alone_clause/0.1 .follow: {'{'}
case_selectors/0.1  -> ( Choice case_selectors/0.1/0 ε )
case_selectors/0.1 .reg_info.index: 1514
case_selectors/0.1 .first: {',' ε}
case_selectors/0.1 .derives_empty: True
case_selectors/0.1 .follow: {',' ':' '{'}
case_selectors/0.2  -> ( Choice ',' ε )
case_selectors/0.2 .reg_info.index: 256
case_selectors/0.2 .first: {',' ε}
case_selectors/0.2 .derives_empty: True
case_selectors/0.2 .follow: {')' ':' ';' '{' '}'}
loop_statement/0.2  -> ( Choice loop_statement/0.2/0 ε )
loop_statement/0.2 .reg_info.index: 1519
loop_statement/0.2 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
loop_statement/0.2 .derives_empty: True
loop_statement/0.2 .follow: {'continuing' '}'}
loop_statement/0.3  -> ( Choice continuing_statement ε )
loop_statement/0.3 .reg_info.index: 464
loop_statement/0.3 .first: {'continuing' ε}
loop_statement/0.3 .derives_empty: True
loop_statement/0.3 .follow: {'}'}
for_header/0.0  -> ( Choice for_init ε )
for_header/0.0 .reg_info.index: 469
for_header/0.0 .first: {'&' '(' '*' '_' 'array' 'atomic' 'bool' 'const' 'f16' 'f32' 'i32' 'let' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
for_header/0.0 .derives_empty: True
for_header/0.0 .follow: {';'}
for_header/0.2  -> ( Choice expression ε )
for_header/0.2 .reg_info.index: 470
for_header/0.2 .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ ε}
for_header/0.2 .derives_empty: True
for_header/0.2 .follow: {';'}
for_header/0.4  -> ( Choice for_update ε )
for_header/0.4 .reg_info.index: 472
for_header/0.4 .first: {'&' '(' '*' '_' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
for_header/0.4 .derives_empty: True
for_header/0.4 .follow: {')'}
continuing_compound_statement/0.1  -> ( Choice continuing_compound_statement/0.1/0 ε )
continuing_compound_statement/0.1 .reg_info.index: 1527
continuing_compound_statement/0.1 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
continuing_compound_statement/0.1 .derives_empty: True
continuing_compound_statement/0.1 .follow: {'break' '}'}
continuing_compound_statement/0.2  -> ( Choice break_if_statement ε )
continuing_compound_statement/0.2 .reg_info.index: 484
continuing_compound_statement/0.2 .first: {'break' ε}
continuing_compound_statement/0.2 .derives_empty: True
continuing_compound_statement/0.2 .follow: {'}'}
return_statement/0.1  -> ( Choice expression ε )
return_statement/0.1 .reg_info.index: 470
return_statement/0.1 .first: {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ ε}
return_statement/0.1 .derives_empty: True
return_statement/0.1 .follow: {';'}
function_decl/0.0  -> ( Choice function_decl/0.0/0 ε )
function_decl/0.0 .reg_info.index: 1533
function_decl/0.0 .first: {'@' ε}
function_decl/0.0 .derives_empty: True
function_decl/0.0 .follow: {'fn'}
function_header/0.3  -> ( Choice param_list ε )
function_header/0.3 .reg_info.index: 511
function_header/0.3 .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
function_header/0.3 .derives_empty: True
function_header/0.3 .follow: {')'}
function_header/0.5  -> ( Choice ( Seq '->' function_header/0.5/0.1 type_specifier ) ε )
function_header/0.5 .reg_info.index: 1540
function_header/0.5 .first: {'->' ε}
function_header/0.5 .derives_empty: True
function_header/0.5 .follow: {'{'}
param_list/0.1  -> ( Choice param_list/0.1/0 ε )
param_list/0.1 .reg_info.index: 1544
param_list/0.1 .first: {',' ε}
param_list/0.1 .derives_empty: True
param_list/0.1 .follow: {')' ','}
param_list/0.2  -> ( Choice ',' ε )
param_list/0.2 .reg_info.index: 256
param_list/0.2 .first: {',' ε}
param_list/0.2 .derives_empty: True
param_list/0.2 .follow: {')' ':' ';' '{' '}'}
param/0.0  -> ( Choice param/0.0/0 ε )
param/0.0 .reg_info.index: 1549
param/0.0 .first: {'@' ε}
param/0.0 .derives_empty: True
param/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list/0.1  -> ( Choice software_extension_list/0.1/0 ε )
software_extension_list/0.1 .reg_info.index: 1553
software_extension_list/0.1 .first: {',' ε}
software_extension_list/0.1 .derives_empty: True
software_extension_list/0.1 .follow: {',' ';'}
software_extension_list/0.2  -> ( Choice ',' ε )
software_extension_list/0.2 .reg_info.index: 256
software_extension_list/0.2 .first: {',' ε}
software_extension_list/0.2 .derives_empty: True
software_extension_list/0.2 .follow: {')' ':' ';' '{' '}'}
switch_statement/0.3/0  -> ( Choice ( Seq switch_body switch_statement/0.3/0 ) ε )
switch_statement/0.3/0 .reg_info.index: 1421
switch_statement/0.3/0 .first: {'case' 'default' ε}
switch_statement/0.3/0 .derives_empty: True
switch_statement/0.3/0 .follow: {'}'}
translation_unit/0.0/0  -> ( Choice ( Seq global_directive translation_unit/0.0/0 ) ε )
translation_unit/0.0/0 .reg_info.index: 1444
translation_unit/0.0/0 .first: {'enable' 'requires' ε}
translation_unit/0.0/0 .derives_empty: True
translation_unit/0.0/0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0  -> ( Choice ( Seq global_decl translation_unit/0.1/0 ) ε )
translation_unit/0.1/0 .reg_info.index: 1448
translation_unit/0.1/0 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' ε}
translation_unit/0.1/0 .derives_empty: True
translation_unit/0.1/0 .follow: {EndOfText}
struct_body_decl/0.2/0  -> ( Choice ( Seq struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 ) ε )
struct_body_decl/0.2/0 .reg_info.index: 1573
struct_body_decl/0.2/0 .first: {',' ε}
struct_body_decl/0.2/0 .derives_empty: True
struct_body_decl/0.2/0 .follow: {',' '}'}
struct_member/0.0/0  -> ( Choice ( Seq attribute struct_member/0.0/0 ) ε )
struct_member/0.0/0 .reg_info.index: 1461
struct_member/0.0/0 .first: {'@' ε}
struct_member/0.0/0 .derives_empty: True
struct_member/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
global_variable_decl/0.0/0  -> ( Choice ( Seq attribute global_variable_decl/0.0/0 ) ε )
global_variable_decl/0.0/0 .reg_info.index: 1475
global_variable_decl/0.0/0 .first: {'@' ε}
global_variable_decl/0.0/0 .derives_empty: True
global_variable_decl/0.0/0 .follow: {'var'}
global_constant_decl/1.0/0  -> ( Choice ( Seq attribute global_constant_decl/1.0/0 ) ε )
global_constant_decl/1.0/0 .reg_info.index: 1482
global_constant_decl/1.0/0 .first: {'@' ε}
global_constant_decl/1.0/0 .derives_empty: True
global_constant_decl/1.0/0 .follow: {'override'}
expression_comma_list/0.1/0  -> ( Choice ( Seq expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 ) ε )
expression_comma_list/0.1/0 .reg_info.index: 1592
expression_comma_list/0.1/0 .first: {',' ε}
expression_comma_list/0.1/0 .derives_empty: True
expression_comma_list/0.1/0 .follow: {')' ','}
compound_statement/0.1/0  -> ( Choice ( Seq statement compound_statement/0.1/0 ) ε )
compound_statement/0.1/0 .reg_info.index: 1500
compound_statement/0.1/0 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
compound_statement/0.1/0 .derives_empty: True
compound_statement/0.1/0 .follow: {'}'}
if_statement/0.1/0  -> ( Choice ( Seq else_if_clause if_statement/0.1/0 ) ε )
if_statement/0.1/0 .reg_info.index: 1505
if_statement/0.1/0 .first: {'else' ε}
if_statement/0.1/0 .derives_empty: True
if_statement/0.1/0 .follow: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
case_selectors/0.1/0  -> ( Choice ( Seq case_selectors/0.1/0/0.0 case_selectors/0.1/0 ) ε )
case_selectors/0.1/0 .reg_info.index: 1607
case_selectors/0.1/0 .first: {',' ε}
case_selectors/0.1/0 .derives_empty: True
case_selectors/0.1/0 .follow: {',' ':' '{'}
loop_statement/0.2/0  -> ( Choice ( Seq statement loop_statement/0.2/0 ) ε )
loop_statement/0.2/0 .reg_info.index: 1517
loop_statement/0.2/0 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
loop_statement/0.2/0 .derives_empty: True
loop_statement/0.2/0 .follow: {'continuing' '}'}
continuing_compound_statement/0.1/0  -> ( Choice ( Seq statement continuing_compound_statement/0.1/0 ) ε )
continuing_compound_statement/0.1/0 .reg_info.index: 1525
continuing_compound_statement/0.1/0 .first: {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ε}
continuing_compound_statement/0.1/0 .derives_empty: True
continuing_compound_statement/0.1/0 .follow: {'break' '}'}
function_decl/0.0/0  -> ( Choice ( Seq attribute function_decl/0.0/0 ) ε )
function_decl/0.0/0 .reg_info.index: 1531
function_decl/0.0/0 .first: {'@' ε}
function_decl/0.0/0 .derives_empty: True
function_decl/0.0/0 .follow: {'fn'}
function_header/0.5/0.1  -> ( Choice function_header/0.5/0.1/0 ε )
function_header/0.5/0.1 .reg_info.index: 1642
function_header/0.5/0.1 .first: {'@' ε}
function_header/0.5/0.1 .derives_empty: True
function_header/0.5/0.1 .follow: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list/0.1/0  -> ( Choice ( Seq param_list/0.1/0/0.0 param_list/0.1/0 ) ε )
param_list/0.1/0 .reg_info.index: 1627
param_list/0.1/0 .first: {',' ε}
param_list/0.1/0 .derives_empty: True
param_list/0.1/0 .follow: {')' ','}
param/0.0/0  -> ( Choice ( Seq attribute param/0.0/0 ) ε )
param/0.0/0 .reg_info.index: 1547
param/0.0/0 .first: {'@' ε}
param/0.0/0 .derives_empty: True
param/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list/0.1/0  -> ( Choice ( Seq software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 ) ε )
software_extension_list/0.1/0 .reg_info.index: 1638
software_extension_list/0.1/0 .first: {',' ε}
software_extension_list/0.1/0 .derives_empty: True
software_extension_list/0.1/0 .follow: {',' ';'}
struct_body_decl/0.2/0/0.0  -> ( Choice ( Seq ',' struct_member ) )
struct_body_decl/0.2/0/0.0 .reg_info.index: 1569
struct_body_decl/0.2/0/0.0 .first: {','}
struct_body_decl/0.2/0/0.0 .derives_empty: False
struct_body_decl/0.2/0/0.0 .follow: {',' '}'}
expression_comma_list/0.1/0/0.0  -> ( Choice ( Seq ',' expression ) )
expression_comma_list/0.1/0/0.0 .reg_info.index: 1588
expression_comma_list/0.1/0/0.0 .first: {','}
expression_comma_list/0.1/0/0.0 .derives_empty: False
expression_comma_list/0.1/0/0.0 .follow: {')' ','}
case_selectors/0.1/0/0.0  -> ( Choice ( Seq ',' case_selector ) )
case_selectors/0.1/0/0.0 .reg_info.index: 1603
case_selectors/0.1/0/0.0 .first: {','}
case_selectors/0.1/0/0.0 .derives_empty: False
case_selectors/0.1/0/0.0 .follow: {',' ':' '{'}
param_list/0.1/0/0.0  -> ( Choice ( Seq ',' param ) )
param_list/0.1/0/0.0 .reg_info.index: 1623
param_list/0.1/0/0.0 .first: {','}
param_list/0.1/0/0.0 .derives_empty: False
param_list/0.1/0/0.0 .follow: {')' ','}
software_extension_list/0.1/0/0.0  -> ( Choice ( Seq ',' software_extension_name ) )
software_extension_list/0.1/0/0.0 .reg_info.index: 1634
software_extension_list/0.1/0/0.0 .first: {','}
software_extension_list/0.1/0/0.0 .derives_empty: False
software_extension_list/0.1/0/0.0 .follow: {',' ';'}
function_header/0.5/0.1/0  -> ( Choice ( Seq attribute function_header/0.5/0.1/0 ) ε )
function_header/0.5/0.1/0 .reg_info.index: 1640
function_header/0.5/0.1/0 .first: {'@' ε}
function_header/0.5/0.1/0 .derives_empty: True
function_header/0.5/0.1/0 .follow: {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

=LALR1 item sets:
#0
language -> · translation_unit EndOfText : {EndOfText}
enable_directive -> · 'enable' enable_extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · enable_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · requires_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive -> · 'requires' software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
translation_unit -> · translation_unit/0.0 translation_unit/0.1 : {EndOfText}
translation_unit/0.0 -> · translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> · global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#1
language -> translation_unit · EndOfText : {EndOfText}

#2
translation_unit -> translation_unit/0.0 · translation_unit/0.1 : {EndOfText}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'must_use' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
const_assert_statement -> · 'const_assert' expression : {';'}
function_decl -> · function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> · function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_constant_decl -> · 'const' optionally_typed_ident '=' expression : {';'}
global_constant_decl -> · global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}
global_constant_decl/1.0 -> · global_constant_decl/1.0/0 : {'override'}
global_constant_decl/1.0/0 -> · attribute global_constant_decl/1.0/0 : {'override'}
global_decl -> · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_constant_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_variable_decl -> · global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> · global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}
struct_decl -> · 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1 -> · translation_unit/0.1/0 : {EndOfText}
translation_unit/0.1/0 -> · global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> · 'alias' ident '=' type_specifier : {';'}

#3
translation_unit/0.0 -> translation_unit/0.0/0 · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#4
translation_unit/0.0/0 -> global_directive · translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
enable_directive -> · 'enable' enable_extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · enable_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> · requires_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive -> · 'requires' software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> · global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#5
global_directive -> enable_directive · : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#6
global_directive -> requires_directive · : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#7
enable_directive -> 'enable' · enable_extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
enable_extension_name -> · 'f16' : {';'}

#8
requires_directive -> 'requires' · software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
software_extension_list -> · software_extension_name software_extension_list/0.1 software_extension_list/0.2 : {';'}
software_extension_name -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' ';'}

#9
requires_directive -> 'requires' software_extension_list · ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#10
software_extension_list -> software_extension_name · software_extension_list/0.1 software_extension_list/0.2 : {';'}
software_extension_list/0.1 -> · software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0 -> · software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0/0.0 -> · ',' software_extension_name : {',' ';'}

#11
software_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {',' ';'}

#12
enable_directive -> 'enable' enable_extension_name · ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#13
enable_extension_name -> 'f16' · : {';'}

#14
translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#15
translation_unit -> translation_unit/0.0 translation_unit/0.1 · : {EndOfText}

#16
translation_unit/0.1 -> translation_unit/0.1/0 · : {EndOfText}

#17
translation_unit/0.1/0 -> global_decl · translation_unit/0.1/0 : {EndOfText}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'must_use' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
const_assert_statement -> · 'const_assert' expression : {';'}
function_decl -> · function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> · function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_constant_decl -> · 'const' optionally_typed_ident '=' expression : {';'}
global_constant_decl -> · global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}
global_constant_decl/1.0 -> · global_constant_decl/1.0/0 : {'override'}
global_constant_decl/1.0/0 -> · attribute global_constant_decl/1.0/0 : {'override'}
global_decl -> · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_constant_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> · type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_variable_decl -> · global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> · global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}
struct_decl -> · 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0 -> · global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> · 'alias' ident '=' type_specifier : {';'}

#18
global_decl -> ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#19
global_decl -> global_variable_decl · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#20
global_decl -> global_constant_decl · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#21
global_decl -> type_alias_decl · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#22
global_decl -> struct_decl · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#23
global_decl -> function_decl · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#24
global_decl -> const_assert_statement · ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#25
global_variable_decl -> global_variable_decl/0.0 · variable_decl global_variable_decl/0.2 : {';'}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}

#26
global_constant_decl -> 'const' · optionally_typed_ident '=' expression : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#27
global_constant_decl -> global_constant_decl/1.0 · 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}

#28
type_alias_decl -> 'alias' · ident '=' type_specifier : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'='}

#29
struct_decl -> 'struct' · ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'{'}

#30
function_decl -> function_decl/0.0 · function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header -> · 'fn' ident '(' function_header/0.3 ')' function_header/0.5 : {'{'}

#31
const_assert_statement -> 'const_assert' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#32
global_variable_decl/0.0 -> global_variable_decl/0.0/0 · : {'var'}

#33
global_constant_decl/1.0 -> global_constant_decl/1.0/0 · : {'override'}

#34
function_decl/0.0 -> function_decl/0.0/0 · : {'fn'}

#35
function_decl/0.0/0 -> attribute · function_decl/0.0/0 : {'fn'}
global_constant_decl/1.0/0 -> attribute · global_constant_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> attribute · global_variable_decl/0.0/0 : {'var'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'must_use' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_constant_decl/1.0/0 -> · attribute global_constant_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}

#36
attribute -> '@' · 'align' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'binding' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'builtin' '(' builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'group' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'id' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'location' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'must_use' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' · 'workgroup_size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#37
attribute -> '@' 'align' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#38
attribute -> '@' 'binding' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#39
attribute -> '@' 'builtin' · '(' builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#40
attribute -> '@' 'const' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#41
attribute -> '@' 'group' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#42
attribute -> '@' 'id' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#43
attribute -> '@' 'interpolate' · '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' · '(' interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#44
attribute -> '@' 'invariant' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#45
attribute -> '@' 'location' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#46
attribute -> '@' 'must_use' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#47
attribute -> '@' 'size' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#48
attribute -> '@' 'workgroup_size' · '(' expression ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' · '(' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' · '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#49
attribute -> '@' 'vertex' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#50
attribute -> '@' 'fragment' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#51
attribute -> '@' 'compute' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#52
global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 · : {'var'}

#53
global_constant_decl/1.0/0 -> attribute global_constant_decl/1.0/0 · : {'override'}

#54
function_decl/0.0/0 -> attribute function_decl/0.0/0 · : {'fn'}

#55
const_assert_statement -> 'const_assert' expression · : {';'}

#56
expression -> relational_expression · : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> relational_expression · : {'&&'}
short_circuit_or_expression -> relational_expression · : {'||'}

#57
expression -> short_circuit_or_expression · '||' relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression · '||' relational_expression : {'||'}

#58
expression -> short_circuit_and_expression · '&&' relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression · '&&' relational_expression : {'&&'}

#59
expression -> bitwise_expression · : {')' ',' ':' ';' ']' '{'}

#60
relational_expression -> shift_expression · '!=' shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · '==' shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · _greater_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · _less_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
_greater_than -> · /\u200B_greater_than/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_greater_than_equal -> · /\u200B_greater_than_equal/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than -> · /\u200B_less_than/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than_equal -> · /\u200B_less_than_equal/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#61
binary_and_expression -> binary_and_expression · '&' unary_expression : {'&'}
bitwise_expression -> binary_and_expression · '&' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#62
binary_or_expression -> binary_or_expression · '|' unary_expression : {'|'}
bitwise_expression -> binary_or_expression · '|' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#63
binary_xor_expression -> binary_xor_expression · '^' unary_expression : {'^'}
bitwise_expression -> binary_xor_expression · '^' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#64
additive_expression -> additive_expression · additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> additive_expression · : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_operator -> · '+' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_operator -> · '-' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#65
binary_and_expression -> unary_expression · : {'&'}
binary_or_expression -> unary_expression · : {'|'}
binary_xor_expression -> unary_expression · : {'^'}
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> unary_expression · _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> unary_expression · _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
_shift_left -> · /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> · /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#66
additive_expression -> multiplicative_expression · : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression · multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> · '%' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '*' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '/' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#67
unary_expression -> singular_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#68
unary_expression -> '-' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#69
unary_expression -> '!' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#70
unary_expression -> '~' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#71
unary_expression -> '*' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#72
unary_expression -> '&' · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#73
singular_expression -> primary_expression · singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression/0.1 -> · component_or_swizzle_specifier : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#74
callable -> ident · : {'('}
primary_expression -> ident · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#75
primary_expression -> call_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#76
primary_expression -> literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#77
primary_expression -> paren_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#78
primary_expression -> 'bitcast' · _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#79
ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#80
call_expression -> callable · argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list -> · '(' argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#81
literal -> int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#82
literal -> float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#83
literal -> bool_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#84
paren_expression -> '(' · expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')'}
expression -> · relational_expression : {')'}
expression -> · short_circuit_and_expression '&&' relational_expression : {')'}
expression -> · short_circuit_or_expression '||' relational_expression : {')'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#85
callable -> type_specifier_without_ident · : {'('}

#86
callable -> vec_prefix · _disambiguate_template : {'('}
type_specifier_without_ident -> vec_prefix · _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'(' /\u200B_template_args_start/}

#87
callable -> mat_prefix · _disambiguate_template : {'('}
type_specifier_without_ident -> mat_prefix · _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'(' /\u200B_template_args_start/}

#88
array_type_specifier -> 'array' · _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
callable -> 'array' · _disambiguate_template : {'('}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {'(' /\u200B_template_args_start/}

#89
int_literal -> decimal_int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#90
int_literal -> hex_int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#91
float_literal -> decimal_float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#92
float_literal -> hex_float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#93
bool_literal -> 'true' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#94
bool_literal -> 'false' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#95
type_specifier_without_ident -> 'bool' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#96
type_specifier_without_ident -> 'f32' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#97
type_specifier_without_ident -> 'f16' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#98
type_specifier_without_ident -> 'i32' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#99
type_specifier_without_ident -> 'u32' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#100
type_specifier_without_ident -> 'ptr' · _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#101
type_specifier_without_ident -> array_type_specifier · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#102
type_specifier_without_ident -> 'atomic' · _disambiguate_template _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#103
type_specifier_without_ident -> texture_and_sampler_types · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#104
vec_prefix -> 'vec2' · : {/\u200B_disambiguate_template/}

#105
vec_prefix -> 'vec3' · : {/\u200B_disambiguate_template/}

#106
vec_prefix -> 'vec4' · : {/\u200B_disambiguate_template/}

#107
mat_prefix -> 'mat2x2' · : {/\u200B_disambiguate_template/}

#108
mat_prefix -> 'mat2x3' · : {/\u200B_disambiguate_template/}

#109
mat_prefix -> 'mat2x4' · : {/\u200B_disambiguate_template/}

#110
mat_prefix -> 'mat3x2' · : {/\u200B_disambiguate_template/}

#111
mat_prefix -> 'mat3x3' · : {/\u200B_disambiguate_template/}

#112
mat_prefix -> 'mat3x4' · : {/\u200B_disambiguate_template/}

#113
mat_prefix -> 'mat4x2' · : {/\u200B_disambiguate_template/}

#114
mat_prefix -> 'mat4x3' · : {/\u200B_disambiguate_template/}

#115
mat_prefix -> 'mat4x4' · : {/\u200B_disambiguate_template/}

#116
decimal_int_literal -> /0[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#117
decimal_int_literal -> /[1-9][0-9]*[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#118
hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#119
decimal_float_literal -> /0[fh]/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#120
decimal_float_literal -> /[1-9][0-9]*[fh]/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#121
decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#122
decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#123
decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#124
hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#125
hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#126
hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#127
texture_and_sampler_types -> sampler_type · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#128
texture_and_sampler_types -> depth_texture_type · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#129
texture_and_sampler_types -> sampled_texture_type · _disambiguate_template _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#130
texture_and_sampler_types -> multisampled_texture_type · _disambiguate_template _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#131
texture_and_sampler_types -> storage_texture_type · _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#132
sampler_type -> 'sampler' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#133
sampler_type -> 'sampler_comparison' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#134
depth_texture_type -> 'texture_depth_2d' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#135
depth_texture_type -> 'texture_depth_2d_array' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#136
depth_texture_type -> 'texture_depth_cube' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#137
depth_texture_type -> 'texture_depth_cube_array' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#138
depth_texture_type -> 'texture_depth_multisampled_2d' · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#139
sampled_texture_type -> 'texture_1d' · : {/\u200B_disambiguate_template/}

#140
sampled_texture_type -> 'texture_2d' · : {/\u200B_disambiguate_template/}

#141
sampled_texture_type -> 'texture_2d_array' · : {/\u200B_disambiguate_template/}

#142
sampled_texture_type -> 'texture_3d' · : {/\u200B_disambiguate_template/}

#143
sampled_texture_type -> 'texture_cube' · : {/\u200B_disambiguate_template/}

#144
sampled_texture_type -> 'texture_cube_array' · : {/\u200B_disambiguate_template/}

#145
multisampled_texture_type -> 'texture_multisampled_2d' · : {/\u200B_disambiguate_template/}

#146
storage_texture_type -> 'texture_storage_1d' · : {/\u200B_disambiguate_template/}

#147
storage_texture_type -> 'texture_storage_2d' · : {/\u200B_disambiguate_template/}

#148
storage_texture_type -> 'texture_storage_2d_array' · : {/\u200B_disambiguate_template/}

#149
storage_texture_type -> 'texture_storage_3d' · : {/\u200B_disambiguate_template/}

#150
function_decl -> function_decl/0.0 function_header · compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
compound_statement -> · '{' compound_statement/0.1 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#151
function_header -> 'fn' · ident '(' function_header/0.3 ')' function_header/0.5 : {'{'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'('}

#152
struct_decl -> 'struct' ident · struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl -> · '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#153
type_alias_decl -> 'alias' ident · '=' type_specifier : {';'}

#154
global_constant_decl -> global_constant_decl/1.0 'override' · optionally_typed_ident global_constant_decl/1.3 : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' ';' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {';' '='}

#155
global_constant_decl -> 'const' optionally_typed_ident · '=' expression : {';'}

#156
optionally_typed_ident -> ident · optionally_typed_ident/0.1 : {';' '='}
optionally_typed_ident/0.1 -> · ':' type_specifier : {';' '='}

#157
global_variable_decl -> global_variable_decl/0.0 variable_decl · global_variable_decl/0.2 : {';'}
global_variable_decl/0.2 -> · '=' expression : {';'}

#158
variable_decl -> 'var' · _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_template_args_start/}

#159
global_decl -> const_assert_statement ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#160
global_decl -> type_alias_decl ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#161
global_decl -> global_constant_decl ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#162
global_decl -> global_variable_decl ';' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#163
translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 · : {EndOfText}

#164
enable_directive -> 'enable' enable_extension_name ';' · : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#165
software_extension_list -> software_extension_name software_extension_list/0.1 · software_extension_list/0.2 : {';'}
software_extension_list/0.2 -> · ',' : {';'}

#166
software_extension_list/0.1 -> software_extension_list/0.1/0 · : {',' ';'}

#167
software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 · software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0 -> · software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0/0.0 -> · ',' software_extension_name : {',' ';'}

#168
software_extension_list/0.1/0/0.0 -> ',' · software_extension_name : {',' ';'}
software_extension_name -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' ';'}

#169
requires_directive -> 'requires' software_extension_list ';' · : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#170
software_extension_list/0.1/0/0.0 -> ',' software_extension_name · : {',' ';'}

#171
software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 · : {',' ';'}

#172
software_extension_list -> software_extension_name software_extension_list/0.1 software_extension_list/0.2 · : {';'}

#173
software_extension_list/0.2 -> ',' · : {';'}

#174
variable_decl -> 'var' _disambiguate_template · variable_decl/0.2 optionally_typed_ident : {';' '='}
_template_args_start -> · /\u200B_template_args_start/ : {'function' 'private' 'storage' 'uniform' 'workgroup'}
variable_decl/0.2 -> · variable_qualifier : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_qualifier -> · _template_args_start address_space variable_qualifier/0.2 _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#175
_disambiguate_template -> /\u200B_disambiguate_template/ · : {'(' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_template_args_start/}

#176
global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 · : {';'}

#177
global_variable_decl/0.2 -> '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#178
optionally_typed_ident -> ident optionally_typed_ident/0.1 · : {';' '='}

#179
optionally_typed_ident/0.1 -> ':' · type_specifier : {';' '='}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {';' '='}
depth_texture_type -> · 'texture_depth_2d' : {';' '='}
depth_texture_type -> · 'texture_depth_2d_array' : {';' '='}
depth_texture_type -> · 'texture_depth_cube' : {';' '='}
depth_texture_type -> · 'texture_depth_cube_array' : {';' '='}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {';' '='}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {';' '='}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {';' '='}
sampler_type -> · 'sampler_comparison' : {';' '='}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {';' '='}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {';' '='}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {';' '='}
texture_and_sampler_types -> · sampler_type : {';' '='}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {';' '='}
type_specifier -> · ident : {';' '='}
type_specifier -> · type_specifier_without_ident : {';' '='}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {';' '='}
type_specifier_without_ident -> · 'bool' : {';' '='}
type_specifier_without_ident -> · 'f16' : {';' '='}
type_specifier_without_ident -> · 'f32' : {';' '='}
type_specifier_without_ident -> · 'i32' : {';' '='}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {';' '='}
type_specifier_without_ident -> · 'u32' : {';' '='}
type_specifier_without_ident -> · array_type_specifier : {';' '='}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {';' '='}
type_specifier_without_ident -> · texture_and_sampler_types : {';' '='}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {';' '='}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#180
global_constant_decl -> 'const' optionally_typed_ident '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#181
global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident · global_constant_decl/1.3 : {';'}
global_constant_decl/1.3 -> · '=' expression : {';'}

#182
type_alias_decl -> 'alias' ident '=' · type_specifier : {';'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {';'}
depth_texture_type -> · 'texture_depth_2d' : {';'}
depth_texture_type -> · 'texture_depth_2d_array' : {';'}
depth_texture_type -> · 'texture_depth_cube' : {';'}
depth_texture_type -> · 'texture_depth_cube_array' : {';'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {';'}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {';'}
sampler_type -> · 'sampler_comparison' : {';'}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {';'}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {';'}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {';'}
texture_and_sampler_types -> · sampler_type : {';'}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {';'}
type_specifier -> · ident : {';'}
type_specifier -> · type_specifier_without_ident : {';'}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {';'}
type_specifier_without_ident -> · 'bool' : {';'}
type_specifier_without_ident -> · 'f16' : {';'}
type_specifier_without_ident -> · 'f32' : {';'}
type_specifier_without_ident -> · 'i32' : {';'}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {';'}
type_specifier_without_ident -> · 'u32' : {';'}
type_specifier_without_ident -> · array_type_specifier : {';'}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {';'}
type_specifier_without_ident -> · texture_and_sampler_types : {';'}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#183
struct_decl -> 'struct' ident struct_body_decl · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#184
struct_body_decl -> '{' · struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> · struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> · struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#185
function_header -> 'fn' ident · '(' function_header/0.3 ')' function_header/0.5 : {'{'}

#186
function_decl -> function_decl/0.0 function_header compound_statement · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#187
compound_statement -> '{' · compound_statement/0.1 '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.1 -> · compound_statement/0.1/0 : {'}'}
compound_statement/0.1/0 -> · statement compound_statement/0.1/0 : {'}'}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#188
texture_and_sampler_types -> storage_texture_type _disambiguate_template · _template_args_start texel_format ',' access_mode _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'bgra8unorm' 'r32float' 'r32sint' 'r32uint' 'rg32float' 'rg32sint' 'rg32uint' 'rgba16float' 'rgba16sint' 'rgba16uint' 'rgba32float' 'rgba32sint' 'rgba32uint' 'rgba8sint' 'rgba8snorm' 'rgba8uint' 'rgba8unorm'}

#189
texture_and_sampler_types -> multisampled_texture_type _disambiguate_template · _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#190
texture_and_sampler_types -> sampled_texture_type _disambiguate_template · _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#191
type_specifier_without_ident -> 'atomic' _disambiguate_template · _template_args_start type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#192
type_specifier_without_ident -> 'ptr' _disambiguate_template · _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'function' 'private' 'storage' 'uniform' 'workgroup'}

#193
array_type_specifier -> 'array' _disambiguate_template · _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
callable -> 'array' _disambiguate_template · : {'('}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#194
callable -> mat_prefix _disambiguate_template · : {'('}
type_specifier_without_ident -> mat_prefix _disambiguate_template · _template_args_start type_specifier _template_args_end : {'('}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#195
callable -> vec_prefix _disambiguate_template · : {'('}
type_specifier_without_ident -> vec_prefix _disambiguate_template · _template_args_start type_specifier _template_args_end : {'('}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#196
paren_expression -> '(' expression · ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#197
call_expression -> callable argument_expression_list · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#198
argument_expression_list -> '(' · argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
argument_expression_list/0.1 -> · expression_comma_list : {')'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
expression_comma_list -> · expression expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#199
primary_expression -> 'bitcast' _disambiguate_template · _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#200
singular_expression -> primary_expression singular_expression/0.1 · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#201
singular_expression/0.1 -> component_or_swizzle_specifier · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#202
component_or_swizzle_specifier -> '[' · expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {']'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {']'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {']'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {']'}
expression -> · relational_expression : {']'}
expression -> · short_circuit_and_expression '&&' relational_expression : {']'}
expression -> · short_circuit_or_expression '||' relational_expression : {']'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ']' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#203
component_or_swizzle_specifier -> '.' · member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> '.' · swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
member_ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[rgba][rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> · '/[xyzw][xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#204
unary_expression -> '&' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#205
unary_expression -> '*' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#206
unary_expression -> '~' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#207
unary_expression -> '!' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#208
unary_expression -> '-' unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#209
multiplicative_expression -> multiplicative_expression multiplicative_operator · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#210
multiplicative_operator -> '*' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#211
multiplicative_operator -> '/' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#212
multiplicative_operator -> '%' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#213
shift_expression -> unary_expression _shift_left · unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> · 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
call_expression -> · callable argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
float_literal -> · hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
int_literal -> · decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
int_literal -> · hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#214
shift_expression -> unary_expression _shift_right · unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> · 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
call_expression -> · callable argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
float_literal -> · hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
int_literal -> · decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
int_literal -> · hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
literal -> · int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
primary_expression -> · paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
unary_expression -> · singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#215
_shift_left -> /\u200B_shift_left/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#216
_shift_right -> /\u200B_shift_right/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#217
additive_expression -> additive_expression additive_operator · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#218
additive_operator -> '+' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#219
additive_operator -> '-' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#220
binary_xor_expression -> binary_xor_expression '^' · unary_expression : {'^'}
bitwise_expression -> binary_xor_expression '^' · unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
bool_literal -> · 'true' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'(' ')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> · bool_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> · float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> · int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · call_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · ident : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#221
binary_or_expression -> binary_or_expression '|' · unary_expression : {'|'}
bitwise_expression -> binary_or_expression '|' · unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
bool_literal -> · 'true' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'(' ')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> · bool_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> · float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> · int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · call_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · ident : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#222
binary_and_expression -> binary_and_expression '&' · unary_expression : {'&'}
bitwise_expression -> binary_and_expression '&' · unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
bool_literal -> · 'true' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'&' '(' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> · bool_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> · float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> · int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · call_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · ident : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#223
relational_expression -> shift_expression _less_than · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#224
relational_expression -> shift_expression _greater_than · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#225
relational_expression -> shift_expression _less_than_equal · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#226
relational_expression -> shift_expression _greater_than_equal · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#227
relational_expression -> shift_expression '==' · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#228
relational_expression -> shift_expression '!=' · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#229
_less_than -> /\u200B_less_than/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#230
_greater_than -> /\u200B_greater_than/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#231
_less_than_equal -> /\u200B_less_than_equal/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#232
_greater_than_equal -> /\u200B_greater_than_equal/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#233
expression -> short_circuit_and_expression '&&' · relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' · relational_expression : {'&&'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#234
expression -> short_circuit_or_expression '||' · relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' · relational_expression : {'||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
bool_literal -> · 'false' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float_literal -> · decimal_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#235
attribute -> '@' 'workgroup_size' '(' · expression ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' · expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#236
attribute -> '@' 'size' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#237
attribute -> '@' 'location' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#238
attribute -> '@' 'interpolate' '(' · interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' '(' · interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolation_type_name -> · 'flat' : {')' ','}
interpolation_type_name -> · 'linear' : {')' ','}
interpolation_type_name -> · 'perspective' : {')' ','}

#239
attribute -> '@' 'id' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#240
attribute -> '@' 'group' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#241
attribute -> '@' 'builtin' '(' · builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
builtin_value_name -> · 'frag_depth' : {')' ','}
builtin_value_name -> · 'front_facing' : {')' ','}
builtin_value_name -> · 'global_invocation_id' : {')' ','}
builtin_value_name -> · 'instance_index' : {')' ','}
builtin_value_name -> · 'local_invocation_id' : {')' ','}
builtin_value_name -> · 'local_invocation_index' : {')' ','}
builtin_value_name -> · 'num_workgroups' : {')' ','}
builtin_value_name -> · 'position' : {')' ','}
builtin_value_name -> · 'sample_index' : {')' ','}
builtin_value_name -> · 'sample_mask' : {')' ','}
builtin_value_name -> · 'vertex_index' : {')' ','}
builtin_value_name -> · 'workgroup_id' : {')' ','}

#242
attribute -> '@' 'binding' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#243
attribute -> '@' 'align' '(' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#244
attribute -> '@' 'align' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#245
attribute -> '@' 'binding' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#246
attribute -> '@' 'builtin' '(' builtin_value_name · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#247
builtin_value_name -> 'vertex_index' · : {')' ','}

#248
builtin_value_name -> 'instance_index' · : {')' ','}

#249
builtin_value_name -> 'position' · : {')' ','}

#250
builtin_value_name -> 'front_facing' · : {')' ','}

#251
builtin_value_name -> 'frag_depth' · : {')' ','}

#252
builtin_value_name -> 'local_invocation_id' · : {')' ','}

#253
builtin_value_name -> 'local_invocation_index' · : {')' ','}

#254
builtin_value_name -> 'global_invocation_id' · : {')' ','}

#255
builtin_value_name -> 'workgroup_id' · : {')' ','}

#256
builtin_value_name -> 'num_workgroups' · : {')' ','}

#257
builtin_value_name -> 'sample_index' · : {')' ','}

#258
builtin_value_name -> 'sample_mask' · : {')' ','}

#259
attribute -> '@' 'group' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#260
attribute -> '@' 'id' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#261
attribute -> '@' 'interpolate' '(' interpolation_type_name · ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' '(' interpolation_type_name · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#262
interpolation_type_name -> 'perspective' · : {')' ','}

#263
interpolation_type_name -> 'linear' · : {')' ','}

#264
interpolation_type_name -> 'flat' · : {')' ','}

#265
attribute -> '@' 'location' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#266
attribute -> '@' 'size' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#267
attribute -> '@' 'workgroup_size' '(' expression · ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression · ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#268
expression -> short_circuit_or_expression '||' relational_expression · : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression · : {'||'}

#269
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> unary_expression · _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> unary_expression · _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
_shift_left -> · /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> · /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#270
expression -> short_circuit_and_expression '&&' relational_expression · : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression · : {'&&'}

#271
relational_expression -> shift_expression '!=' shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#272
relational_expression -> shift_expression '==' shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#273
relational_expression -> shift_expression _greater_than_equal shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#274
relational_expression -> shift_expression _less_than_equal shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#275
relational_expression -> shift_expression _greater_than shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#276
relational_expression -> shift_expression _less_than shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#277
binary_and_expression -> binary_and_expression '&' unary_expression · : {'&'}
bitwise_expression -> binary_and_expression '&' unary_expression · : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#278
binary_or_expression -> binary_or_expression '|' unary_expression · : {'|'}
bitwise_expression -> binary_or_expression '|' unary_expression · : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#279
binary_xor_expression -> binary_xor_expression '^' unary_expression · : {'^'}
bitwise_expression -> binary_xor_expression '^' unary_expression · : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#280
additive_expression -> additive_expression additive_operator multiplicative_expression · : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression · multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> · '%' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '*' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> · '/' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#281
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#282
shift_expression -> unary_expression _shift_right unary_expression · : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}

#283
shift_expression -> unary_expression _shift_left unary_expression · : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}

#284
multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#285
component_or_swizzle_specifier -> '.' member_ident · component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#286
component_or_swizzle_specifier -> '.' swizzle_name · component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#287
member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#288
swizzle_name -> '/[rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#289
swizzle_name -> '/[rgba][rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#290
swizzle_name -> '/[rgba][rgba][rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#291
swizzle_name -> '/[rgba][rgba][rgba][rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#292
swizzle_name -> '/[xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#293
swizzle_name -> '/[xyzw][xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#294
swizzle_name -> '/[xyzw][xyzw][xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#295
swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#296
component_or_swizzle_specifier -> '[' expression · ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#297
primary_expression -> 'bitcast' _disambiguate_template _template_args_start · type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#298
_template_args_start -> /\u200B_template_args_start/ · : {'array' 'atomic' 'bgra8unorm' 'bool' 'f16' 'f32' 'function' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'private' 'ptr' 'r32float' 'r32sint' 'r32uint' 'rg32float' 'rg32sint' 'rg32uint' 'rgba16float' 'rgba16sint' 'rgba16uint' 'rgba32float' 'rgba32sint' 'rgba32uint' 'rgba8sint' 'rgba8snorm' 'rgba8uint' 'rgba8unorm' 'sampler' 'sampler_comparison' 'storage' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'uniform' 'vec2' 'vec3' 'vec4' 'workgroup' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#299
argument_expression_list -> '(' argument_expression_list/0.1 · ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#300
argument_expression_list/0.1 -> expression_comma_list · : {')'}

#301
expression_comma_list -> expression · expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
expression_comma_list/0.1 -> · expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> · expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> · ',' expression : {')' ','}

#302
paren_expression -> '(' expression ')' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#303
type_specifier_without_ident -> vec_prefix _disambiguate_template _template_args_start · type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#304
type_specifier_without_ident -> mat_prefix _disambiguate_template _template_args_start · type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#305
array_type_specifier -> 'array' _disambiguate_template _template_args_start · type_specifier array_type_specifier/0.4 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {',' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {',' /\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {',' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {',' /\u200B_template_args_end/}
type_specifier -> · ident : {',' /\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#306
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start · address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
address_space -> · 'function' : {','}
address_space -> · 'private' : {','}
address_space -> · 'storage' : {','}
address_space -> · 'uniform' : {','}
address_space -> · 'workgroup' : {','}

#307
type_specifier_without_ident -> 'atomic' _disambiguate_template _template_args_start · type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#308
texture_and_sampler_types -> sampled_texture_type _disambiguate_template _template_args_start · type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#309
texture_and_sampler_types -> multisampled_texture_type _disambiguate_template _template_args_start · type_specifier _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {/\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {/\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {/\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {/\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {/\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {/\u200B_template_args_end/}
type_specifier -> · ident : {/\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {/\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {/\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {/\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {/\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#310
texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start · texel_format ',' access_mode _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
texel_format -> · 'bgra8unorm' : {','}
texel_format -> · 'r32float' : {','}
texel_format -> · 'r32sint' : {','}
texel_format -> · 'r32uint' : {','}
texel_format -> · 'rg32float' : {','}
texel_format -> · 'rg32sint' : {','}
texel_format -> · 'rg32uint' : {','}
texel_format -> · 'rgba16float' : {','}
texel_format -> · 'rgba16sint' : {','}
texel_format -> · 'rgba16uint' : {','}
texel_format -> · 'rgba32float' : {','}
texel_format -> · 'rgba32sint' : {','}
texel_format -> · 'rgba32uint' : {','}
texel_format -> · 'rgba8sint' : {','}
texel_format -> · 'rgba8snorm' : {','}
texel_format -> · 'rgba8uint' : {','}
texel_format -> · 'rgba8unorm' : {','}

#311
compound_statement -> '{' compound_statement/0.1 · '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#312
compound_statement/0.1 -> compound_statement/0.1/0 · : {'}'}

#313
compound_statement/0.1/0 -> statement · compound_statement/0.1/0 : {'}'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.1/0 -> · statement compound_statement/0.1/0 : {'}'}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#314
statement -> ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#315
statement -> return_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#316
statement -> if_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#317
statement -> switch_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#318
statement -> loop_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#319
statement -> for_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#320
statement -> while_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#321
statement -> func_call_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#322
statement -> variable_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#323
statement -> break_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#324
statement -> continue_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#325
statement -> 'discard' · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#326
statement -> variable_updating_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#327
statement -> compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#328
statement -> const_assert_statement · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#329
return_statement -> 'return' · return_statement/0.1 : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
return_statement/0.1 -> · expression : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#330
if_statement -> if_clause · if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> · 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1 -> · if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1/0 -> · else_if_clause if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#331
switch_statement -> 'switch' · expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#332
loop_statement -> 'loop' · '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#333
for_statement -> 'for' · '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#334
while_statement -> 'while' · expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#335
func_call_statement -> callable · argument_expression_list : {')' ';'}
argument_expression_list -> · '(' argument_expression_list/0.1 ')' : {')' ';'}

#336
variable_statement -> variable_decl · '=' expression : {';'}
variable_statement -> variable_decl · : {';'}

#337
variable_statement -> 'let' · optionally_typed_ident '=' expression : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#338
variable_statement -> 'const' · optionally_typed_ident '=' expression : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#339
break_statement -> 'break' · : {';'}

#340
continue_statement -> 'continue' · : {';'}

#341
variable_updating_statement -> assignment_statement · : {')' ';'}

#342
variable_updating_statement -> increment_statement · : {')' ';'}

#343
variable_updating_statement -> decrement_statement · : {')' ';'}

#344
if_clause -> 'if' · expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#345
callable -> ident · : {'('}
core_lhs_expression -> ident · : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#346
assignment_statement -> lhs_expression · assignment_statement/0.1 expression : {')' ';'}
decrement_statement -> lhs_expression · '--' : {')' ';'}
increment_statement -> lhs_expression · '++' : {')' ';'}
_shift_left_assign -> · /\u200B_shift_left_assign/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right_assign -> · /\u200B_shift_right_assign/ : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> · '=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> · compound_assignment_operator : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '%=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '&=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '*=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '+=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '-=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '/=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '^=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · '|=' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · _shift_left_assign : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> · _shift_right_assign : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#347
assignment_statement -> '_' · '=' expression : {')' ';'}

#348
lhs_expression -> core_lhs_expression · lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression/0.1 -> · component_or_swizzle_specifier : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#349
lhs_expression -> '*' · lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#350
lhs_expression -> '&' · lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#351
core_lhs_expression -> '(' · lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · '(' lhs_expression ')' : {')' '.' '['}
core_lhs_expression -> · ident : {')' '.' '['}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' '.' '['}
lhs_expression -> · '&' lhs_expression : {')'}
lhs_expression -> · '*' lhs_expression : {')'}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {')'}

#352
function_header -> 'fn' ident '(' · function_header/0.3 ')' function_header/0.5 : {'{'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.3 -> · param_list : {')'}
param -> · param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> · param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> · attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list -> · param param_list/0.1 param_list/0.2 : {')'}

#353
struct_body_decl -> '{' struct_member · struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.2 -> · struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> · struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> · ',' struct_member : {',' '}'}

#354
struct_member -> struct_member/0.0 · member_ident ':' type_specifier : {',' '}'}
member_ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':'}

#355
struct_member/0.0 -> struct_member/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#356
struct_member/0.0/0 -> attribute · struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#357
type_alias_decl -> 'alias' ident '=' type_specifier · : {';'}

#358
type_specifier -> ident · : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#359
type_specifier -> type_specifier_without_ident · : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#360
type_specifier_without_ident -> vec_prefix · _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#361
type_specifier_without_ident -> mat_prefix · _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#362
array_type_specifier -> 'array' · _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_disambiguate_template -> · /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#363
global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 · : {';'}

#364
global_constant_decl/1.3 -> '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#365
global_constant_decl -> 'const' optionally_typed_ident '=' expression · : {';'}

#366
optionally_typed_ident/0.1 -> ':' type_specifier · : {';' '='}

#367
global_variable_decl/0.2 -> '=' expression · : {';'}

#368
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 · optionally_typed_ident : {';' '='}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' ';' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {';' '='}

#369
variable_decl/0.2 -> variable_qualifier · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#370
variable_qualifier -> _template_args_start · address_space variable_qualifier/0.2 _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
address_space -> · 'function' : {',' /\u200B_template_args_end/}
address_space -> · 'private' : {',' /\u200B_template_args_end/}
address_space -> · 'storage' : {',' /\u200B_template_args_end/}
address_space -> · 'uniform' : {',' /\u200B_template_args_end/}
address_space -> · 'workgroup' : {',' /\u200B_template_args_end/}

#371
variable_qualifier -> _template_args_start address_space · variable_qualifier/0.2 _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_qualifier/0.2 -> · ',' access_mode : {/\u200B_template_args_end/}

#372
address_space -> 'function' · : {',' /\u200B_template_args_end/}

#373
address_space -> 'private' · : {',' /\u200B_template_args_end/}

#374
address_space -> 'workgroup' · : {',' /\u200B_template_args_end/}

#375
address_space -> 'uniform' · : {',' /\u200B_template_args_end/}

#376
address_space -> 'storage' · : {',' /\u200B_template_args_end/}

#377
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident · : {';' '='}

#378
global_constant_decl/1.3 -> '=' expression · : {';'}

#379
array_type_specifier -> 'array' _disambiguate_template · _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#380
type_specifier_without_ident -> mat_prefix _disambiguate_template · _template_args_start type_specifier _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#381
type_specifier_without_ident -> vec_prefix _disambiguate_template · _template_args_start type_specifier _template_args_end : {')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_start -> · /\u200B_template_args_start/ : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#382
struct_member/0.0/0 -> attribute struct_member/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#383
struct_member -> struct_member/0.0 member_ident · ':' type_specifier : {',' '}'}

#384
struct_body_decl -> '{' struct_member struct_body_decl/0.2 · struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.3 -> · ',' : {'}'}

#385
struct_body_decl/0.2 -> struct_body_decl/0.2/0 · : {',' '}'}

#386
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 · struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> · struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> · ',' struct_member : {',' '}'}

#387
struct_body_decl/0.2/0/0.0 -> ',' · struct_member : {',' '}'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> · struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> · struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#388
function_header -> 'fn' ident '(' function_header/0.3 · ')' function_header/0.5 : {'{'}

#389
function_header/0.3 -> param_list · : {')'}

#390
param_list -> param · param_list/0.1 param_list/0.2 : {')'}
param_list/0.1 -> · param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> · param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> · ',' param : {')' ','}

#391
param -> param/0.0 · ident ':' type_specifier : {')' ','}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':'}

#392
param/0.0 -> param/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#393
param/0.0/0 -> attribute · param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> · attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#394
core_lhs_expression -> '(' lhs_expression · ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#395
core_lhs_expression -> ident · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#396
lhs_expression -> '&' lhs_expression · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#397
lhs_expression -> '*' lhs_expression · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#398
lhs_expression -> core_lhs_expression lhs_expression/0.1 · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#399
lhs_expression/0.1 -> component_or_swizzle_specifier · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#400
assignment_statement -> '_' '=' · expression : {')' ';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ';'}
expression -> · relational_expression : {')' ';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#401
assignment_statement -> lhs_expression assignment_statement/0.1 · expression : {')' ';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ';'}
expression -> · relational_expression : {')' ';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#402
increment_statement -> lhs_expression '++' · : {')' ';'}

#403
decrement_statement -> lhs_expression '--' · : {')' ';'}

#404
assignment_statement/0.1 -> '=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#405
assignment_statement/0.1 -> compound_assignment_operator · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#406
compound_assignment_operator -> '+=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#407
compound_assignment_operator -> '-=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#408
compound_assignment_operator -> '*=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#409
compound_assignment_operator -> '/=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#410
compound_assignment_operator -> '%=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#411
compound_assignment_operator -> '&=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#412
compound_assignment_operator -> '|=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#413
compound_assignment_operator -> '^=' · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#414
compound_assignment_operator -> _shift_right_assign · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#415
compound_assignment_operator -> _shift_left_assign · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#416
_shift_right_assign -> /\u200B_shift_right_assign/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#417
_shift_left_assign -> /\u200B_shift_left_assign/ · : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#418
if_clause -> 'if' expression · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#419
variable_statement -> 'const' optionally_typed_ident · '=' expression : {';'}

#420
variable_statement -> 'let' optionally_typed_ident · '=' expression : {';'}

#421
variable_statement -> variable_decl '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#422
func_call_statement -> callable argument_expression_list · : {')' ';'}

#423
while_statement -> 'while' expression · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#424
for_statement -> 'for' '(' · for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_header -> · for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 : {')'}
for_header/0.0 -> · for_init : {';'}
for_init -> · func_call_statement : {';'}
for_init -> · variable_statement : {';'}
for_init -> · variable_updating_statement : {';'}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#425
loop_statement -> 'loop' '{' · loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.2 -> · loop_statement/0.2/0 : {'continuing' '}'}
loop_statement/0.2/0 -> · statement loop_statement/0.2/0 : {'continuing' '}'}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#426
switch_statement -> 'switch' expression · '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#427
if_statement -> if_clause if_statement/0.1 · if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause -> · 'else' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2 -> · else_clause : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#428
if_statement/0.1 -> if_statement/0.1/0 · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#429
if_statement/0.1/0 -> else_if_clause · if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> · 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1/0 -> · else_if_clause if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#430
else_if_clause -> 'else' · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#431
return_statement -> 'return' return_statement/0.1 · : {';'}

#432
return_statement/0.1 -> expression · : {';'}

#433
statement -> const_assert_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#434
statement -> variable_updating_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#435
statement -> 'discard' ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#436
statement -> continue_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#437
statement -> break_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#438
statement -> variable_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#439
statement -> func_call_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#440
statement -> return_statement ';' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#441
compound_statement/0.1/0 -> statement compound_statement/0.1/0 · : {'}'}

#442
compound_statement -> '{' compound_statement/0.1 '}' · : {'&' '(' '*' ';' '@' '_' 'alias' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#443
texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start texel_format · ',' access_mode _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#444
texel_format -> 'rgba8unorm' · : {','}

#445
texel_format -> 'rgba8snorm' · : {','}

#446
texel_format -> 'rgba8uint' · : {','}

#447
texel_format -> 'rgba8sint' · : {','}

#448
texel_format -> 'rgba16uint' · : {','}

#449
texel_format -> 'rgba16sint' · : {','}

#450
texel_format -> 'rgba16float' · : {','}

#451
texel_format -> 'r32uint' · : {','}

#452
texel_format -> 'r32sint' · : {','}

#453
texel_format -> 'r32float' · : {','}

#454
texel_format -> 'rg32uint' · : {','}

#455
texel_format -> 'rg32sint' · : {','}

#456
texel_format -> 'rg32float' · : {','}

#457
texel_format -> 'rgba32uint' · : {','}

#458
texel_format -> 'rgba32sint' · : {','}

#459
texel_format -> 'rgba32float' · : {','}

#460
texel_format -> 'bgra8unorm' · : {','}

#461
texture_and_sampler_types -> multisampled_texture_type _disambiguate_template _template_args_start type_specifier · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#462
texture_and_sampler_types -> sampled_texture_type _disambiguate_template _template_args_start type_specifier · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#463
type_specifier_without_ident -> 'atomic' _disambiguate_template _template_args_start type_specifier · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#464
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space · ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#465
array_type_specifier -> 'array' _disambiguate_template _template_args_start type_specifier · array_type_specifier/0.4 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier/0.4 -> · ',' element_count_expression : {/\u200B_template_args_end/}

#466
type_specifier_without_ident -> mat_prefix _disambiguate_template _template_args_start type_specifier · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#467
type_specifier_without_ident -> vec_prefix _disambiguate_template _template_args_start type_specifier · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#468
expression_comma_list -> expression expression_comma_list/0.1 · expression_comma_list/0.2 : {')'}
expression_comma_list/0.2 -> · ',' : {')'}

#469
expression_comma_list/0.1 -> expression_comma_list/0.1/0 · : {')' ','}

#470
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 · expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> · expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> · ',' expression : {')' ','}

#471
expression_comma_list/0.1/0/0.0 -> ',' · expression : {')' ','}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#472
argument_expression_list -> '(' argument_expression_list/0.1 ')' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#473
primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier · _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'('}

#474
component_or_swizzle_specifier -> '[' expression ']' · component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> · '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/0.3 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#475
component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#476
component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#477
component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#478
component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#479
attribute -> '@' 'workgroup_size' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#480
attrib_end/0.0 -> ',' · : {')'}
attribute -> '@' 'workgroup_size' '(' expression ',' · expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression ',' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#481
attrib_end -> attrib_end/0.0 · ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#482
attribute -> '@' 'size' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#483
attrib_end/0.0 -> ',' · : {')'}

#484
attribute -> '@' 'location' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#485
attribute -> '@' 'interpolate' '(' interpolation_type_name attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#486
attrib_end/0.0 -> ',' · : {')'}
attribute -> '@' 'interpolate' '(' interpolation_type_name ',' · interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
interpolation_sample_name -> · 'center' : {')' ','}
interpolation_sample_name -> · 'centroid' : {')' ','}
interpolation_sample_name -> · 'sample' : {')' ','}

#487
attribute -> '@' 'id' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#488
attribute -> '@' 'group' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#489
attribute -> '@' 'builtin' '(' builtin_value_name attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#490
attribute -> '@' 'binding' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#491
attribute -> '@' 'align' '(' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#492
attribute -> '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#493
interpolation_sample_name -> 'center' · : {')' ','}

#494
interpolation_sample_name -> 'centroid' · : {')' ','}

#495
interpolation_sample_name -> 'sample' · : {')' ','}

#496
attrib_end -> attrib_end/0.0 ')' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#497
attribute -> '@' 'workgroup_size' '(' expression ',' expression · ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression ',' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#498
component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#499
component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#500
primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#501
_template_args_end -> /\u200B_template_args_end/ · : {'(' ')' ',' ';' '=' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_template_args_end/}

#502
expression_comma_list/0.1/0/0.0 -> ',' expression · : {')' ','}

#503
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 · : {')' ','}

#504
expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 · : {')'}

#505
expression_comma_list/0.2 -> ',' · : {')'}

#506
type_specifier_without_ident -> vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#507
type_specifier_without_ident -> mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#508
array_type_specifier -> 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#509
array_type_specifier/0.4 -> ',' · element_count_expression : {/\u200B_template_args_end/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'+' '-' /\u200B_template_args_end/}
additive_expression -> · multiplicative_expression : {'+' '-' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {/\u200B_template_args_end/}
bitwise_expression -> · binary_or_expression '|' unary_expression : {/\u200B_template_args_end/}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {/\u200B_template_args_end/}
bool_literal -> · 'false' : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
bool_literal -> · 'true' : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
call_expression -> · callable argument_expression_list : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /0[iu]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
element_count_expression -> · additive_expression : {/\u200B_template_args_end/}
element_count_expression -> · bitwise_expression : {/\u200B_template_args_end/}
float_literal -> · decimal_float_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
float_literal -> · hex_float_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&' '(' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
int_literal -> · decimal_int_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
int_literal -> · hex_int_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
literal -> · bool_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
literal -> · float_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
literal -> · int_literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '*' '+' '-' '/' /\u200B_template_args_end/}
multiplicative_expression -> · unary_expression : {'%' '*' '+' '-' '/' /\u200B_template_args_end/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
primary_expression -> · call_expression : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
primary_expression -> · ident : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
primary_expression -> · literal : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
primary_expression -> · paren_expression : {'%' '&' '*' '+' '-' '.' '/' '[' '^' '|' /\u200B_template_args_end/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
unary_expression -> · '&' unary_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
unary_expression -> · '*' unary_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
unary_expression -> · '-' unary_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
unary_expression -> · '~' unary_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
unary_expression -> · singular_expression : {'%' '&' '*' '+' '-' '/' '^' '|' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#510
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space ',' · type_specifier type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_2d_array' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_cube_array' : {',' /\u200B_template_args_end/}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {',' /\u200B_template_args_end/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' /\u200B_template_args_end/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {',' /\u200B_template_args_end/}
sampler_type -> · 'sampler_comparison' : {',' /\u200B_template_args_end/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · sampler_type : {',' /\u200B_template_args_end/}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {',' /\u200B_template_args_end/}
type_specifier -> · ident : {',' /\u200B_template_args_end/}
type_specifier -> · type_specifier_without_ident : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'bool' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'f16' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'f32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'i32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · 'u32' : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · array_type_specifier : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · texture_and_sampler_types : {',' /\u200B_template_args_end/}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' /\u200B_template_args_end/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#511
type_specifier_without_ident -> 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#512
texture_and_sampler_types -> sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#513
texture_and_sampler_types -> multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#514
texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start texel_format ',' · access_mode _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
access_mode -> · 'read' : {/\u200B_template_args_end/}
access_mode -> · 'read_write' : {/\u200B_template_args_end/}
access_mode -> · 'write' : {/\u200B_template_args_end/}

#515
else_if_clause -> 'else' 'if' · expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> · short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#516
if_statement/0.1/0 -> else_if_clause if_statement/0.1/0 · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#517
if_statement -> if_clause if_statement/0.1 if_statement/0.2 · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#518
if_statement/0.2 -> else_clause · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#519
else_clause -> 'else' · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#520
switch_statement -> 'switch' expression '{' · switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
case_clause -> · 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> · 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body -> · case_clause : {'case' 'default' '}'}
switch_body -> · default_alone_clause : {'case' 'default' '}'}
switch_statement/0.3 -> · switch_statement/0.3/0 : {'}'}
switch_statement/0.3/0 -> · switch_body switch_statement/0.3/0 : {'}'}

#521
loop_statement -> 'loop' '{' loop_statement/0.2 · loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
continuing_statement -> · 'continuing' continuing_compound_statement : {'}'}
loop_statement/0.3 -> · continuing_statement : {'}'}

#522
loop_statement/0.2 -> loop_statement/0.2/0 · : {'continuing' '}'}

#523
loop_statement/0.2/0 -> statement · loop_statement/0.2/0 : {'continuing' '}'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.2/0 -> · statement loop_statement/0.2/0 : {'continuing' '}'}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#524
for_statement -> 'for' '(' for_header · ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#525
for_header -> for_header/0.0 · ';' for_header/0.2 ';' for_header/0.4 : {')'}

#526
for_header/0.0 -> for_init · : {';'}

#527
for_init -> variable_statement · : {';'}

#528
for_init -> variable_updating_statement · : {';'}

#529
for_init -> func_call_statement · : {';'}

#530
while_statement -> 'while' expression compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#531
variable_statement -> variable_decl '=' expression · : {';'}

#532
variable_statement -> 'let' optionally_typed_ident '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#533
variable_statement -> 'const' optionally_typed_ident '=' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#534
if_clause -> 'if' expression compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#535
assignment_statement -> lhs_expression assignment_statement/0.1 expression · : {')' ';'}

#536
assignment_statement -> '_' '=' expression · : {')' ';'}

#537
core_lhs_expression -> '(' lhs_expression ')' · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#538
param/0.0/0 -> attribute param/0.0/0 · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#539
param -> param/0.0 ident · ':' type_specifier : {')' ','}

#540
param_list -> param param_list/0.1 · param_list/0.2 : {')'}
param_list/0.2 -> · ',' : {')'}

#541
param_list/0.1 -> param_list/0.1/0 · : {')' ','}

#542
param_list/0.1/0 -> param_list/0.1/0/0.0 · param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> · param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> · ',' param : {')' ','}

#543
param_list/0.1/0/0.0 -> ',' · param : {')' ','}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param -> · param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> · param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> · attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#544
function_header -> 'fn' ident '(' function_header/0.3 ')' · function_header/0.5 : {'{'}
function_header/0.5 -> · '->' function_header/0.5/0.1 type_specifier : {'{'}

#545
struct_body_decl/0.2/0/0.0 -> ',' struct_member · : {',' '}'}

#546
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 · : {',' '}'}

#547
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 · '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#548
struct_body_decl/0.3 -> ',' · : {'}'}

#549
struct_member -> struct_member/0.0 member_ident ':' · type_specifier : {',' '}'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {',' '}'}
depth_texture_type -> · 'texture_depth_2d' : {',' '}'}
depth_texture_type -> · 'texture_depth_2d_array' : {',' '}'}
depth_texture_type -> · 'texture_depth_cube' : {',' '}'}
depth_texture_type -> · 'texture_depth_cube_array' : {',' '}'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {',' '}'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' '}'}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {',' '}'}
sampler_type -> · 'sampler_comparison' : {',' '}'}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {',' '}'}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' '}'}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {',' '}'}
texture_and_sampler_types -> · sampler_type : {',' '}'}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {',' '}'}
type_specifier -> · ident : {',' '}'}
type_specifier -> · type_specifier_without_ident : {',' '}'}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {',' '}'}
type_specifier_without_ident -> · 'bool' : {',' '}'}
type_specifier_without_ident -> · 'f16' : {',' '}'}
type_specifier_without_ident -> · 'f32' : {',' '}'}
type_specifier_without_ident -> · 'i32' : {',' '}'}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {',' '}'}
type_specifier_without_ident -> · 'u32' : {',' '}'}
type_specifier_without_ident -> · array_type_specifier : {',' '}'}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' '}'}
type_specifier_without_ident -> · texture_and_sampler_types : {',' '}'}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {',' '}'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#550
variable_qualifier -> _template_args_start address_space variable_qualifier/0.2 · _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
_template_args_end -> · /\u200B_template_args_end/ : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#551
variable_qualifier/0.2 -> ',' · access_mode : {/\u200B_template_args_end/}
access_mode -> · 'read' : {/\u200B_template_args_end/}
access_mode -> · 'read_write' : {/\u200B_template_args_end/}
access_mode -> · 'write' : {/\u200B_template_args_end/}

#552
variable_qualifier/0.2 -> ',' access_mode · : {/\u200B_template_args_end/}

#553
access_mode -> 'read' · : {/\u200B_template_args_end/}

#554
access_mode -> 'write' · : {/\u200B_template_args_end/}

#555
access_mode -> 'read_write' · : {/\u200B_template_args_end/}

#556
variable_qualifier -> _template_args_start address_space variable_qualifier/0.2 _template_args_end · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#557
struct_member -> struct_member/0.0 member_ident ':' type_specifier · : {',' '}'}

#558
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' · : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#559
function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 · : {'{'}

#560
function_header/0.5 -> '->' · function_header/0.5/0.1 type_specifier : {'{'}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1 -> · function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> · attribute function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#561
param_list/0.1/0/0.0 -> ',' param · : {')' ','}

#562
param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 · : {')' ','}

#563
param_list -> param param_list/0.1 param_list/0.2 · : {')'}

#564
param_list/0.2 -> ',' · : {')'}

#565
param -> param/0.0 ident ':' · type_specifier : {')' ','}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {')' ','}
depth_texture_type -> · 'texture_depth_2d' : {')' ','}
depth_texture_type -> · 'texture_depth_2d_array' : {')' ','}
depth_texture_type -> · 'texture_depth_cube' : {')' ','}
depth_texture_type -> · 'texture_depth_cube_array' : {')' ','}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {')' ','}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' ','}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {')' ','}
sampler_type -> · 'sampler_comparison' : {')' ','}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {')' ','}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ','}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ','}
texture_and_sampler_types -> · sampler_type : {')' ','}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {')' ','}
type_specifier -> · ident : {')' ','}
type_specifier -> · type_specifier_without_ident : {')' ','}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ','}
type_specifier_without_ident -> · 'bool' : {')' ','}
type_specifier_without_ident -> · 'f16' : {')' ','}
type_specifier_without_ident -> · 'f32' : {')' ','}
type_specifier_without_ident -> · 'i32' : {')' ','}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {')' ','}
type_specifier_without_ident -> · 'u32' : {')' ','}
type_specifier_without_ident -> · array_type_specifier : {')' ','}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ','}
type_specifier_without_ident -> · texture_and_sampler_types : {')' ','}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {')' ','}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#566
variable_statement -> 'const' optionally_typed_ident '=' expression · : {';'}

#567
variable_statement -> 'let' optionally_typed_ident '=' expression · : {';'}

#568
for_header -> for_header/0.0 ';' · for_header/0.2 ';' for_header/0.4 : {')'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
for_header/0.2 -> · expression : {';'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#569
for_statement -> 'for' '(' for_header ')' · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#570
loop_statement/0.2/0 -> statement loop_statement/0.2/0 · : {'continuing' '}'}

#571
loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 · '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#572
loop_statement/0.3 -> continuing_statement · : {'}'}

#573
continuing_statement -> 'continuing' · continuing_compound_statement : {'}'}
continuing_compound_statement -> · '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' : {'}'}

#574
switch_statement -> 'switch' expression '{' switch_statement/0.3 · '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#575
switch_statement/0.3 -> switch_statement/0.3/0 · : {'}'}

#576
switch_statement/0.3/0 -> switch_body · switch_statement/0.3/0 : {'}'}
case_clause -> · 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> · 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body -> · case_clause : {'case' 'default' '}'}
switch_body -> · default_alone_clause : {'case' 'default' '}'}
switch_statement/0.3/0 -> · switch_body switch_statement/0.3/0 : {'}'}

#577
switch_body -> case_clause · : {'case' 'default' '}'}

#578
switch_body -> default_alone_clause · : {'case' 'default' '}'}

#579
case_clause -> 'case' · case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {',' ':' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
case_selector -> · 'default' : {',' ':' '{'}
case_selector -> · expression : {',' ':' '{'}
case_selectors -> · case_selector case_selectors/0.1 case_selectors/0.2 : {':' '{'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {',' ':' '{'}
expression -> · relational_expression : {',' ':' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {',' ':' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {',' ':' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#580
default_alone_clause -> 'default' · default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
default_alone_clause/0.1 -> · ':' : {'{'}

#581
else_clause -> 'else' compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#582
else_if_clause -> 'else' 'if' expression · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#583
texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#584
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier · type_specifier_without_ident/7.6 _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
type_specifier_without_ident/7.6 -> · ',' access_mode : {/\u200B_template_args_end/}

#585
array_type_specifier/0.4 -> ',' element_count_expression · : {/\u200B_template_args_end/}

#586
additive_expression -> additive_expression · additive_operator multiplicative_expression : {'+' '-' /\u200B_template_args_end/}
element_count_expression -> additive_expression · : {/\u200B_template_args_end/}
additive_operator -> · '+' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_operator -> · '-' : {'!' '&' '(' '*' '-' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#587
element_count_expression -> bitwise_expression · : {/\u200B_template_args_end/}

#588
binary_and_expression -> unary_expression · : {'&'}
binary_or_expression -> unary_expression · : {'|'}
binary_xor_expression -> unary_expression · : {'^'}
multiplicative_expression -> unary_expression · : {'%' '*' '+' '-' '/' /\u200B_template_args_end/}

#589
array_type_specifier -> 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#590
primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#591
attribute -> '@' 'workgroup_size' '(' expression ',' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#592
attrib_end/0.0 -> ',' · : {')'}
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> · short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#593
attribute -> '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#594
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> · attrib_end/0.0 ')' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> · ',' : {')'}

#595
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 · _template_args_end : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}
_template_args_end -> · /\u200B_template_args_end/ : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#596
type_specifier_without_ident/7.6 -> ',' · access_mode : {/\u200B_template_args_end/}
access_mode -> · 'read' : {/\u200B_template_args_end/}
access_mode -> · 'read_write' : {/\u200B_template_args_end/}
access_mode -> · 'write' : {/\u200B_template_args_end/}

#597
texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#598
else_if_clause -> 'else' 'if' expression compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#599
default_alone_clause -> 'default' default_alone_clause/0.1 · compound_statement : {'case' 'default' '}'}
compound_statement -> · '{' compound_statement/0.1 '}' : {'case' 'default' '}'}

#600
default_alone_clause/0.1 -> ':' · : {'{'}

#601
case_clause -> 'case' case_selectors · case_clause/0.2 compound_statement : {'case' 'default' '}'}
case_clause/0.2 -> · ':' : {'{'}

#602
case_selectors -> case_selector · case_selectors/0.1 case_selectors/0.2 : {':' '{'}
case_selectors/0.1 -> · case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0 -> · case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0/0.0 -> · ',' case_selector : {',' ':' '{'}

#603
case_selector -> 'default' · : {',' ':' '{'}

#604
case_selector -> expression · : {',' ':' '{'}

#605
switch_statement/0.3/0 -> switch_body switch_statement/0.3/0 · : {'}'}

#606
switch_statement -> 'switch' expression '{' switch_statement/0.3 '}' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#607
continuing_statement -> 'continuing' continuing_compound_statement · : {'}'}

#608
continuing_compound_statement -> '{' · continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' : {'}'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
continuing_compound_statement/0.1 -> · continuing_compound_statement/0.1/0 : {'break' '}'}
continuing_compound_statement/0.1/0 -> · statement continuing_compound_statement/0.1/0 : {'break' '}'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#609
loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#610
for_statement -> 'for' '(' for_header ')' compound_statement · : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#611
for_header -> for_header/0.0 ';' for_header/0.2 · ';' for_header/0.4 : {')'}

#612
for_header/0.2 -> expression · : {';'}

#613
param -> param/0.0 ident ':' type_specifier · : {')' ','}

#614
function_header/0.5 -> '->' function_header/0.5/0.1 · type_specifier : {'{'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'{'}
depth_texture_type -> · 'texture_depth_2d' : {'{'}
depth_texture_type -> · 'texture_depth_2d_array' : {'{'}
depth_texture_type -> · 'texture_depth_cube' : {'{'}
depth_texture_type -> · 'texture_depth_cube_array' : {'{'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'{'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'{'}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'{'}
sampler_type -> · 'sampler_comparison' : {'{'}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'{'}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'{'}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'{'}
texture_and_sampler_types -> · sampler_type : {'{'}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'{'}
type_specifier -> · ident : {'{'}
type_specifier -> · type_specifier_without_ident : {'{'}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'{'}
type_specifier_without_ident -> · 'bool' : {'{'}
type_specifier_without_ident -> · 'f16' : {'{'}
type_specifier_without_ident -> · 'f32' : {'{'}
type_specifier_without_ident -> · 'i32' : {'{'}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'{'}
type_specifier_without_ident -> · 'u32' : {'{'}
type_specifier_without_ident -> · array_type_specifier : {'{'}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'{'}
type_specifier_without_ident -> · texture_and_sampler_types : {'{'}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'{'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#615
function_header/0.5/0.1 -> function_header/0.5/0.1/0 · : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#616
function_header/0.5/0.1/0 -> attribute · function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'align' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'binding' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'builtin' '(' builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'group' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'id' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'interpolate' '(' interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'location' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'must_use' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> · '@' 'workgroup_size' '(' expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> · attribute function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#617
function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 · : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#618
function_header/0.5 -> '->' function_header/0.5/0.1 type_specifier · : {'{'}

#619
for_header -> for_header/0.0 ';' for_header/0.2 ';' · for_header/0.4 : {')'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {')'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {')'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {')'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_header/0.4 -> · for_update : {')'}
for_update -> · func_call_statement : {')'}
for_update -> · variable_updating_statement : {')'}
func_call_statement -> · callable argument_expression_list : {')'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
increment_statement -> · lhs_expression '++' : {')'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_updating_statement -> · assignment_statement : {')'}
variable_updating_statement -> · decrement_statement : {')'}
variable_updating_statement -> · increment_statement : {')'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#620
continuing_compound_statement -> '{' continuing_compound_statement/0.1 · continuing_compound_statement/0.2 '}' : {'}'}
break_if_statement -> · 'break' 'if' expression ';' : {'}'}
continuing_compound_statement/0.2 -> · break_if_statement : {'}'}

#621
continuing_compound_statement/0.1 -> continuing_compound_statement/0.1/0 · : {'break' '}'}

#622
continuing_compound_statement/0.1/0 -> statement · continuing_compound_statement/0.1/0 : {'break' '}'}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
assignment_statement -> · '_' '=' expression : {';'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> · 'break' : {';'}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
compound_statement -> · '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> · 'const_assert' expression : {';'}
continue_statement -> · 'continue' : {';'}
continuing_compound_statement/0.1/0 -> · statement continuing_compound_statement/0.1/0 : {'break' '}'}
core_lhs_expression -> · '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> · lhs_expression '--' : {';'}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
for_statement -> · 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> · callable argument_expression_list : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> · lhs_expression '++' : {';'}
lhs_expression -> · '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> · 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
return_statement -> · 'return' return_statement/0.1 : {';'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
statement -> · ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · 'discard' ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · break_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · const_assert_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · continue_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · for_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · func_call_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · if_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · loop_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · return_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · switch_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> · while_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
switch_statement -> · 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
variable_decl -> · 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> · 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> · variable_decl '=' expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'array' 'atomic' 'bool' 'break' 'const' 'const_assert' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#623
case_selectors -> case_selector case_selectors/0.1 · case_selectors/0.2 : {':' '{'}
case_selectors/0.2 -> · ',' : {':' '{'}

#624
case_selectors/0.1 -> case_selectors/0.1/0 · : {',' ':' '{'}

#625
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 · case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0 -> · case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0/0.0 -> · ',' case_selector : {',' ':' '{'}

#626
case_selectors/0.1/0/0.0 -> ',' · case_selector : {',' ':' '{'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {',' ':' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
case_selector -> · 'default' : {',' ':' '{'}
case_selector -> · expression : {',' ':' '{'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {',' ':' '{'}
expression -> · relational_expression : {',' ':' '{'}
expression -> · short_circuit_and_expression '&&' relational_expression : {',' ':' '{'}
expression -> · short_circuit_or_expression '||' relational_expression : {',' ':' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#627
case_clause -> 'case' case_selectors case_clause/0.2 · compound_statement : {'case' 'default' '}'}
compound_statement -> · '{' compound_statement/0.1 '}' : {'case' 'default' '}'}

#628
case_clause/0.2 -> ':' · : {'{'}

#629
default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement · : {'case' 'default' '}'}

#630
type_specifier_without_ident/7.6 -> ',' access_mode · : {/\u200B_template_args_end/}

#631
type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end · : {'(' ')' ',' ';' '=' '{' '}' /\u200B_template_args_end/}

#632
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#633
case_clause -> 'case' case_selectors case_clause/0.2 compound_statement · : {'case' 'default' '}'}

#634
case_selectors/0.1/0/0.0 -> ',' case_selector · : {',' ':' '{'}

#635
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 · : {',' ':' '{'}

#636
case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 · : {':' '{'}

#637
case_selectors/0.2 -> ',' · : {':' '{'}

#638
continuing_compound_statement/0.1/0 -> statement continuing_compound_statement/0.1/0 · : {'break' '}'}

#639
continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 · '}' : {'}'}

#640
continuing_compound_statement/0.2 -> break_if_statement · : {'}'}

#641
break_if_statement -> 'break' · 'if' expression ';' : {'}'}

#642
for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 · : {')'}

#643
for_header/0.4 -> for_update · : {')'}

#644
for_update -> variable_updating_statement · : {')'}

#645
for_update -> func_call_statement · : {')'}

#646
break_if_statement -> 'break' 'if' · expression ';' : {'}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
array_type_specifier -> · 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end : {'('}
binary_and_expression -> · binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> · binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> · binary_xor_expression '^' unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> · callable argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
callable -> · 'array' _disambiguate_template : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix _disambiguate_template : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix _disambiguate_template : {'('}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression '&&' relational_expression : {';'}
expression -> · short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
mat_prefix -> · 'mat2x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat2x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat3x4' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x2' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x3' : {/\u200B_disambiguate_template/}
mat_prefix -> · 'mat4x4' : {/\u200B_disambiguate_template/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multisampled_texture_type -> · 'texture_multisampled_2d' : {/\u200B_disambiguate_template/}
paren_expression -> · '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> · shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
sampled_texture_type -> · 'texture_1d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_2d_array' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_3d' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube' : {/\u200B_disambiguate_template/}
sampled_texture_type -> · 'texture_cube_array' : {/\u200B_disambiguate_template/}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
shift_expression -> · additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> · unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
storage_texture_type -> · 'texture_storage_1d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_2d_array' : {/\u200B_disambiguate_template/}
storage_texture_type -> · 'texture_storage_3d' : {/\u200B_disambiguate_template/}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end : {'('}
type_specifier_without_ident -> · 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · 'f16' : {'('}
type_specifier_without_ident -> · 'f32' : {'('}
type_specifier_without_ident -> · 'i32' : {'('}
type_specifier_without_ident -> · 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end : {'('}
type_specifier_without_ident -> · 'u32' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end : {'('}
unary_expression -> · '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
vec_prefix -> · 'vec2' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec3' : {/\u200B_disambiguate_template/}
vec_prefix -> · 'vec4' : {/\u200B_disambiguate_template/}

#647
continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' · : {'}'}

#648
break_if_statement -> 'break' 'if' expression · ';' : {'}'}

#649
break_if_statement -> 'break' 'if' expression ';' · : {'}'}


=Reductions:
r#0 translation_unit/0.0 -> translation_unit/0.0/0 ·
r#1 global_directive -> enable_directive ·
r#2 global_directive -> requires_directive ·
r#3 software_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#4 enable_extension_name -> 'f16' ·
r#5 translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 ·
r#6 translation_unit -> translation_unit/0.0 translation_unit/0.1 ·
r#7 translation_unit/0.1 -> translation_unit/0.1/0 ·
r#8 global_decl -> ';' ·
r#9 global_decl -> struct_decl ·
r#10 global_decl -> function_decl ·
r#11 global_variable_decl/0.0 -> global_variable_decl/0.0/0 ·
r#12 global_constant_decl/1.0 -> global_constant_decl/1.0/0 ·
r#13 function_decl/0.0 -> function_decl/0.0/0 ·
r#14 attribute -> '@' 'const' ·
r#15 attribute -> '@' 'invariant' ·
r#16 attribute -> '@' 'must_use' ·
r#17 attribute -> '@' 'vertex' ·
r#18 attribute -> '@' 'fragment' ·
r#19 attribute -> '@' 'compute' ·
r#20 global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 ·
r#21 global_constant_decl/1.0/0 -> attribute global_constant_decl/1.0/0 ·
r#22 function_decl/0.0/0 -> attribute function_decl/0.0/0 ·
r#23 const_assert_statement -> 'const_assert' expression ·
r#24 expression -> relational_expression ·
r#25 short_circuit_or_expression -> relational_expression ·
r#26 short_circuit_and_expression -> relational_expression ·
r#27 expression -> bitwise_expression ·
r#28 relational_expression -> shift_expression ·
r#29 shift_expression -> additive_expression ·
r#30 binary_and_expression -> unary_expression ·
r#31 binary_or_expression -> unary_expression ·
r#32 binary_xor_expression -> unary_expression ·
r#33 multiplicative_expression -> unary_expression ·
r#34 additive_expression -> multiplicative_expression ·
r#35 unary_expression -> singular_expression ·
r#36 primary_expression -> ident ·
r#37 callable -> ident ·
r#38 primary_expression -> call_expression ·
r#39 primary_expression -> literal ·
r#40 primary_expression -> paren_expression ·
r#41 ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#42 literal -> int_literal ·
r#43 literal -> float_literal ·
r#44 literal -> bool_literal ·
r#45 callable -> type_specifier_without_ident ·
r#46 int_literal -> decimal_int_literal ·
r#47 int_literal -> hex_int_literal ·
r#48 float_literal -> decimal_float_literal ·
r#49 float_literal -> hex_float_literal ·
r#50 bool_literal -> 'true' ·
r#51 bool_literal -> 'false' ·
r#52 type_specifier_without_ident -> 'bool' ·
r#53 type_specifier_without_ident -> 'f32' ·
r#54 type_specifier_without_ident -> 'f16' ·
r#55 type_specifier_without_ident -> 'i32' ·
r#56 type_specifier_without_ident -> 'u32' ·
r#57 type_specifier_without_ident -> array_type_specifier ·
r#58 type_specifier_without_ident -> texture_and_sampler_types ·
r#59 vec_prefix -> 'vec2' ·
r#60 vec_prefix -> 'vec3' ·
r#61 vec_prefix -> 'vec4' ·
r#62 mat_prefix -> 'mat2x2' ·
r#63 mat_prefix -> 'mat2x3' ·
r#64 mat_prefix -> 'mat2x4' ·
r#65 mat_prefix -> 'mat3x2' ·
r#66 mat_prefix -> 'mat3x3' ·
r#67 mat_prefix -> 'mat3x4' ·
r#68 mat_prefix -> 'mat4x2' ·
r#69 mat_prefix -> 'mat4x3' ·
r#70 mat_prefix -> 'mat4x4' ·
r#71 decimal_int_literal -> /0[iu]?/ ·
r#72 decimal_int_literal -> /[1-9][0-9]*[iu]?/ ·
r#73 hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ ·
r#74 decimal_float_literal -> /0[fh]/ ·
r#75 decimal_float_literal -> /[1-9][0-9]*[fh]/ ·
r#76 decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ ·
r#77 decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ ·
r#78 decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ ·
r#79 hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ ·
r#80 hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ ·
r#81 hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ ·
r#82 texture_and_sampler_types -> sampler_type ·
r#83 texture_and_sampler_types -> depth_texture_type ·
r#84 sampler_type -> 'sampler' ·
r#85 sampler_type -> 'sampler_comparison' ·
r#86 depth_texture_type -> 'texture_depth_2d' ·
r#87 depth_texture_type -> 'texture_depth_2d_array' ·
r#88 depth_texture_type -> 'texture_depth_cube' ·
r#89 depth_texture_type -> 'texture_depth_cube_array' ·
r#90 depth_texture_type -> 'texture_depth_multisampled_2d' ·
r#91 sampled_texture_type -> 'texture_1d' ·
r#92 sampled_texture_type -> 'texture_2d' ·
r#93 sampled_texture_type -> 'texture_2d_array' ·
r#94 sampled_texture_type -> 'texture_3d' ·
r#95 sampled_texture_type -> 'texture_cube' ·
r#96 sampled_texture_type -> 'texture_cube_array' ·
r#97 multisampled_texture_type -> 'texture_multisampled_2d' ·
r#98 storage_texture_type -> 'texture_storage_1d' ·
r#99 storage_texture_type -> 'texture_storage_2d' ·
r#100 storage_texture_type -> 'texture_storage_2d_array' ·
r#101 storage_texture_type -> 'texture_storage_3d' ·
r#102 global_decl -> const_assert_statement ';' ·
r#103 global_decl -> type_alias_decl ';' ·
r#104 global_decl -> global_constant_decl ';' ·
r#105 global_decl -> global_variable_decl ';' ·
r#106 translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 ·
r#107 enable_directive -> 'enable' enable_extension_name ';' ·
r#108 software_extension_list/0.1 -> software_extension_list/0.1/0 ·
r#109 requires_directive -> 'requires' software_extension_list ';' ·
r#110 software_extension_list/0.1/0/0.0 -> ',' software_extension_name ·
r#111 software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 ·
r#112 software_extension_list -> software_extension_name software_extension_list/0.1 software_extension_list/0.2 ·
r#113 software_extension_list/0.2 -> ',' ·
r#114 _disambiguate_template -> /\u200B_disambiguate_template/ ·
r#115 global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 ·
r#116 optionally_typed_ident -> ident optionally_typed_ident/0.1 ·
r#117 struct_decl -> 'struct' ident struct_body_decl ·
r#118 function_decl -> function_decl/0.0 function_header compound_statement ·
r#119 callable -> 'array' _disambiguate_template ·
r#120 callable -> mat_prefix _disambiguate_template ·
r#121 callable -> vec_prefix _disambiguate_template ·
r#122 call_expression -> callable argument_expression_list ·
r#123 singular_expression -> primary_expression singular_expression/0.1 ·
r#124 singular_expression/0.1 -> component_or_swizzle_specifier ·
r#125 unary_expression -> '&' unary_expression ·
r#126 unary_expression -> '*' unary_expression ·
r#127 unary_expression -> '~' unary_expression ·
r#128 unary_expression -> '!' unary_expression ·
r#129 unary_expression -> '-' unary_expression ·
r#130 multiplicative_operator -> '*' ·
r#131 multiplicative_operator -> '/' ·
r#132 multiplicative_operator -> '%' ·
r#133 _shift_left -> /\u200B_shift_left/ ·
r#134 _shift_right -> /\u200B_shift_right/ ·
r#135 additive_operator -> '+' ·
r#136 additive_operator -> '-' ·
r#137 _less_than -> /\u200B_less_than/ ·
r#138 _greater_than -> /\u200B_greater_than/ ·
r#139 _less_than_equal -> /\u200B_less_than_equal/ ·
r#140 _greater_than_equal -> /\u200B_greater_than_equal/ ·
r#141 builtin_value_name -> 'vertex_index' ·
r#142 builtin_value_name -> 'instance_index' ·
r#143 builtin_value_name -> 'position' ·
r#144 builtin_value_name -> 'front_facing' ·
r#145 builtin_value_name -> 'frag_depth' ·
r#146 builtin_value_name -> 'local_invocation_id' ·
r#147 builtin_value_name -> 'local_invocation_index' ·
r#148 builtin_value_name -> 'global_invocation_id' ·
r#149 builtin_value_name -> 'workgroup_id' ·
r#150 builtin_value_name -> 'num_workgroups' ·
r#151 builtin_value_name -> 'sample_index' ·
r#152 builtin_value_name -> 'sample_mask' ·
r#153 interpolation_type_name -> 'perspective' ·
r#154 interpolation_type_name -> 'linear' ·
r#155 interpolation_type_name -> 'flat' ·
r#156 expression -> short_circuit_or_expression '||' relational_expression ·
r#157 short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression ·
r#158 expression -> short_circuit_and_expression '&&' relational_expression ·
r#159 short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression ·
r#160 relational_expression -> shift_expression '!=' shift_expression ·
r#161 relational_expression -> shift_expression '==' shift_expression ·
r#162 relational_expression -> shift_expression _greater_than_equal shift_expression ·
r#163 relational_expression -> shift_expression _less_than_equal shift_expression ·
r#164 relational_expression -> shift_expression _greater_than shift_expression ·
r#165 relational_expression -> shift_expression _less_than shift_expression ·
r#166 bitwise_expression -> binary_and_expression '&' unary_expression ·
r#167 binary_and_expression -> binary_and_expression '&' unary_expression ·
r#168 bitwise_expression -> binary_or_expression '|' unary_expression ·
r#169 binary_or_expression -> binary_or_expression '|' unary_expression ·
r#170 bitwise_expression -> binary_xor_expression '^' unary_expression ·
r#171 binary_xor_expression -> binary_xor_expression '^' unary_expression ·
r#172 additive_expression -> additive_expression additive_operator multiplicative_expression ·
r#173 shift_expression -> unary_expression _shift_right unary_expression ·
r#174 shift_expression -> unary_expression _shift_left unary_expression ·
r#175 multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression ·
r#176 member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#177 swizzle_name -> '/[rgba]/' ·
r#178 swizzle_name -> '/[rgba][rgba]/' ·
r#179 swizzle_name -> '/[rgba][rgba][rgba]/' ·
r#180 swizzle_name -> '/[rgba][rgba][rgba][rgba]/' ·
r#181 swizzle_name -> '/[xyzw]/' ·
r#182 swizzle_name -> '/[xyzw][xyzw]/' ·
r#183 swizzle_name -> '/[xyzw][xyzw][xyzw]/' ·
r#184 swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' ·
r#185 _template_args_start -> /\u200B_template_args_start/ ·
r#186 argument_expression_list/0.1 -> expression_comma_list ·
r#187 paren_expression -> '(' expression ')' ·
r#188 compound_statement/0.1 -> compound_statement/0.1/0 ·
r#189 statement -> ';' ·
r#190 statement -> if_statement ·
r#191 statement -> switch_statement ·
r#192 statement -> loop_statement ·
r#193 statement -> for_statement ·
r#194 statement -> while_statement ·
r#195 statement -> compound_statement ·
r#196 variable_statement -> variable_decl ·
r#197 break_statement -> 'break' ·
r#198 continue_statement -> 'continue' ·
r#199 variable_updating_statement -> assignment_statement ·
r#200 variable_updating_statement -> increment_statement ·
r#201 variable_updating_statement -> decrement_statement ·
r#202 core_lhs_expression -> ident ·
r#203 struct_member/0.0 -> struct_member/0.0/0 ·
r#204 type_alias_decl -> 'alias' ident '=' type_specifier ·
r#205 type_specifier -> ident ·
r#206 type_specifier -> type_specifier_without_ident ·
r#207 global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 ·
r#208 global_constant_decl -> 'const' optionally_typed_ident '=' expression ·
r#209 optionally_typed_ident/0.1 -> ':' type_specifier ·
r#210 global_variable_decl/0.2 -> '=' expression ·
r#211 variable_decl/0.2 -> variable_qualifier ·
r#212 address_space -> 'function' ·
r#213 address_space -> 'private' ·
r#214 address_space -> 'workgroup' ·
r#215 address_space -> 'uniform' ·
r#216 address_space -> 'storage' ·
r#217 variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident ·
r#218 global_constant_decl/1.3 -> '=' expression ·
r#219 struct_member/0.0/0 -> attribute struct_member/0.0/0 ·
r#220 struct_body_decl/0.2 -> struct_body_decl/0.2/0 ·
r#221 function_header/0.3 -> param_list ·
r#222 param/0.0 -> param/0.0/0 ·
r#223 lhs_expression -> '&' lhs_expression ·
r#224 lhs_expression -> '*' lhs_expression ·
r#225 lhs_expression -> core_lhs_expression lhs_expression/0.1 ·
r#226 lhs_expression/0.1 -> component_or_swizzle_specifier ·
r#227 increment_statement -> lhs_expression '++' ·
r#228 decrement_statement -> lhs_expression '--' ·
r#229 assignment_statement/0.1 -> '=' ·
r#230 assignment_statement/0.1 -> compound_assignment_operator ·
r#231 compound_assignment_operator -> '+=' ·
r#232 compound_assignment_operator -> '-=' ·
r#233 compound_assignment_operator -> '*=' ·
r#234 compound_assignment_operator -> '/=' ·
r#235 compound_assignment_operator -> '%=' ·
r#236 compound_assignment_operator -> '&=' ·
r#237 compound_assignment_operator -> '|=' ·
r#238 compound_assignment_operator -> '^=' ·
r#239 compound_assignment_operator -> _shift_right_assign ·
r#240 compound_assignment_operator -> _shift_left_assign ·
r#241 _shift_right_assign -> /\u200B_shift_right_assign/ ·
r#242 _shift_left_assign -> /\u200B_shift_left_assign/ ·
r#243 func_call_statement -> callable argument_expression_list ·
r#244 if_statement/0.1 -> if_statement/0.1/0 ·
r#245 return_statement -> 'return' return_statement/0.1 ·
r#246 return_statement/0.1 -> expression ·
r#247 statement -> const_assert_statement ';' ·
r#248 statement -> variable_updating_statement ';' ·
r#249 statement -> 'discard' ';' ·
r#250 statement -> continue_statement ';' ·
r#251 statement -> break_statement ';' ·
r#252 statement -> variable_statement ';' ·
r#253 statement -> func_call_statement ';' ·
r#254 statement -> return_statement ';' ·
r#255 compound_statement/0.1/0 -> statement compound_statement/0.1/0 ·
r#256 compound_statement -> '{' compound_statement/0.1 '}' ·
r#257 texel_format -> 'rgba8unorm' ·
r#258 texel_format -> 'rgba8snorm' ·
r#259 texel_format -> 'rgba8uint' ·
r#260 texel_format -> 'rgba8sint' ·
r#261 texel_format -> 'rgba16uint' ·
r#262 texel_format -> 'rgba16sint' ·
r#263 texel_format -> 'rgba16float' ·
r#264 texel_format -> 'r32uint' ·
r#265 texel_format -> 'r32sint' ·
r#266 texel_format -> 'r32float' ·
r#267 texel_format -> 'rg32uint' ·
r#268 texel_format -> 'rg32sint' ·
r#269 texel_format -> 'rg32float' ·
r#270 texel_format -> 'rgba32uint' ·
r#271 texel_format -> 'rgba32sint' ·
r#272 texel_format -> 'rgba32float' ·
r#273 texel_format -> 'bgra8unorm' ·
r#274 expression_comma_list/0.1 -> expression_comma_list/0.1/0 ·
r#275 argument_expression_list -> '(' argument_expression_list/0.1 ')' ·
r#276 component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 ·
r#277 component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier ·
r#278 component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 ·
r#279 component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier ·
r#280 attribute -> '@' 'workgroup_size' '(' expression attrib_end ·
r#281 attrib_end/0.0 -> ',' ·
r#282 attribute -> '@' 'size' '(' expression attrib_end ·
r#283 attribute -> '@' 'location' '(' expression attrib_end ·
r#284 attribute -> '@' 'interpolate' '(' interpolation_type_name attrib_end ·
r#285 attribute -> '@' 'id' '(' expression attrib_end ·
r#286 attribute -> '@' 'group' '(' expression attrib_end ·
r#287 attribute -> '@' 'builtin' '(' builtin_value_name attrib_end ·
r#288 attribute -> '@' 'binding' '(' expression attrib_end ·
r#289 attribute -> '@' 'align' '(' expression attrib_end ·
r#290 interpolation_sample_name -> 'center' ·
r#291 interpolation_sample_name -> 'centroid' ·
r#292 interpolation_sample_name -> 'sample' ·
r#293 attrib_end -> attrib_end/0.0 ')' ·
r#294 component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 ·
r#295 component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier ·
r#296 _template_args_end -> /\u200B_template_args_end/ ·
r#297 expression_comma_list/0.1/0/0.0 -> ',' expression ·
r#298 expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 ·
r#299 expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 ·
r#300 expression_comma_list/0.2 -> ',' ·
r#301 type_specifier_without_ident -> vec_prefix _disambiguate_template _template_args_start type_specifier _template_args_end ·
r#302 type_specifier_without_ident -> mat_prefix _disambiguate_template _template_args_start type_specifier _template_args_end ·
r#303 type_specifier_without_ident -> 'atomic' _disambiguate_template _template_args_start type_specifier _template_args_end ·
r#304 texture_and_sampler_types -> sampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end ·
r#305 texture_and_sampler_types -> multisampled_texture_type _disambiguate_template _template_args_start type_specifier _template_args_end ·
r#306 if_statement/0.1/0 -> else_if_clause if_statement/0.1/0 ·
r#307 if_statement -> if_clause if_statement/0.1 if_statement/0.2 ·
r#308 if_statement/0.2 -> else_clause ·
r#309 loop_statement/0.2 -> loop_statement/0.2/0 ·
r#310 for_header/0.0 -> for_init ·
r#311 for_init -> variable_statement ·
r#312 for_init -> variable_updating_statement ·
r#313 for_init -> func_call_statement ·
r#314 while_statement -> 'while' expression compound_statement ·
r#315 variable_statement -> variable_decl '=' expression ·
r#316 if_clause -> 'if' expression compound_statement ·
r#317 assignment_statement -> lhs_expression assignment_statement/0.1 expression ·
r#318 assignment_statement -> '_' '=' expression ·
r#319 core_lhs_expression -> '(' lhs_expression ')' ·
r#320 param/0.0/0 -> attribute param/0.0/0 ·
r#321 param_list/0.1 -> param_list/0.1/0 ·
r#322 struct_body_decl/0.2/0/0.0 -> ',' struct_member ·
r#323 struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 ·
r#324 struct_body_decl/0.3 -> ',' ·
r#325 variable_qualifier/0.2 -> ',' access_mode ·
r#326 access_mode -> 'read' ·
r#327 access_mode -> 'write' ·
r#328 access_mode -> 'read_write' ·
r#329 variable_qualifier -> _template_args_start address_space variable_qualifier/0.2 _template_args_end ·
r#330 struct_member -> struct_member/0.0 member_ident ':' type_specifier ·
r#331 struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' ·
r#332 function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 ·
r#333 param_list/0.1/0/0.0 -> ',' param ·
r#334 param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 ·
r#335 param_list -> param param_list/0.1 param_list/0.2 ·
r#336 param_list/0.2 -> ',' ·
r#337 variable_statement -> 'const' optionally_typed_ident '=' expression ·
r#338 variable_statement -> 'let' optionally_typed_ident '=' expression ·
r#339 loop_statement/0.2/0 -> statement loop_statement/0.2/0 ·
r#340 loop_statement/0.3 -> continuing_statement ·
r#341 switch_statement/0.3 -> switch_statement/0.3/0 ·
r#342 switch_body -> case_clause ·
r#343 switch_body -> default_alone_clause ·
r#344 else_clause -> 'else' compound_statement ·
r#345 array_type_specifier/0.4 -> ',' element_count_expression ·
r#346 element_count_expression -> additive_expression ·
r#347 element_count_expression -> bitwise_expression ·
r#348 array_type_specifier -> 'array' _disambiguate_template _template_args_start type_specifier array_type_specifier/0.4 _template_args_end ·
r#349 primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression ·
r#350 attribute -> '@' 'workgroup_size' '(' expression ',' expression attrib_end ·
r#351 attribute -> '@' 'interpolate' '(' interpolation_type_name ',' interpolation_sample_name attrib_end ·
r#352 texture_and_sampler_types -> storage_texture_type _disambiguate_template _template_args_start texel_format ',' access_mode _template_args_end ·
r#353 else_if_clause -> 'else' 'if' expression compound_statement ·
r#354 default_alone_clause/0.1 -> ':' ·
r#355 case_selector -> 'default' ·
r#356 case_selector -> expression ·
r#357 switch_statement/0.3/0 -> switch_body switch_statement/0.3/0 ·
r#358 switch_statement -> 'switch' expression '{' switch_statement/0.3 '}' ·
r#359 continuing_statement -> 'continuing' continuing_compound_statement ·
r#360 loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' ·
r#361 for_statement -> 'for' '(' for_header ')' compound_statement ·
r#362 for_header/0.2 -> expression ·
r#363 param -> param/0.0 ident ':' type_specifier ·
r#364 function_header/0.5/0.1 -> function_header/0.5/0.1/0 ·
r#365 function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 ·
r#366 function_header/0.5 -> '->' function_header/0.5/0.1 type_specifier ·
r#367 continuing_compound_statement/0.1 -> continuing_compound_statement/0.1/0 ·
r#368 case_selectors/0.1 -> case_selectors/0.1/0 ·
r#369 case_clause/0.2 -> ':' ·
r#370 default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement ·
r#371 type_specifier_without_ident/7.6 -> ',' access_mode ·
r#372 type_specifier_without_ident -> 'ptr' _disambiguate_template _template_args_start address_space ',' type_specifier type_specifier_without_ident/7.6 _template_args_end ·
r#373 attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end ·
r#374 case_clause -> 'case' case_selectors case_clause/0.2 compound_statement ·
r#375 case_selectors/0.1/0/0.0 -> ',' case_selector ·
r#376 case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 ·
r#377 case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 ·
r#378 case_selectors/0.2 -> ',' ·
r#379 continuing_compound_statement/0.1/0 -> statement continuing_compound_statement/0.1/0 ·
r#380 continuing_compound_statement/0.2 -> break_if_statement ·
r#381 for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 ·
r#382 for_header/0.4 -> for_update ·
r#383 for_update -> variable_updating_statement ·
r#384 for_update -> func_call_statement ·
r#385 continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' ·
r#386 break_if_statement -> 'break' 'if' expression ';' ·

=Action:
[#0 'enable']: s#7
[#0 'requires']: s#8
[#1 EndOfText]: acc
[#2 ';']: s#18
[#2 '@']: s#36
[#2 'alias']: s#28
[#2 'const']: s#26
[#2 'const_assert']: s#31
[#2 'struct']: s#29
[#3 ';']: r#0
[#3 '@']: r#0
[#3 'alias']: r#0
[#3 'const']: r#0
[#3 'const_assert']: r#0
[#3 'fn']: r#0
[#3 'override']: r#0
[#3 'struct']: r#0
[#3 'var']: r#0
[#3 EndOfText]: r#0
[#4 'enable']: s#7
[#4 'requires']: s#8
[#5 ';']: r#1
[#5 '@']: r#1
[#5 'alias']: r#1
[#5 'const']: r#1
[#5 'const_assert']: r#1
[#5 'enable']: r#1
[#5 'fn']: r#1
[#5 'override']: r#1
[#5 'requires']: r#1
[#5 'struct']: r#1
[#5 'var']: r#1
[#5 EndOfText]: r#1
[#6 ';']: r#2
[#6 '@']: r#2
[#6 'alias']: r#2
[#6 'const']: r#2
[#6 'const_assert']: r#2
[#6 'enable']: r#2
[#6 'fn']: r#2
[#6 'override']: r#2
[#6 'requires']: r#2
[#6 'struct']: r#2
[#6 'var']: r#2
[#6 EndOfText]: r#2
[#7 'f16']: s#13
[#8 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#11
[#9 ';']: s#169
[#10 ',']: s#168
[#11 ',']: r#3
[#11 ';']: r#3
[#12 ';']: s#164
[#13 ';']: r#4
[#14 ';']: r#5
[#14 '@']: r#5
[#14 'alias']: r#5
[#14 'const']: r#5
[#14 'const_assert']: r#5
[#14 'fn']: r#5
[#14 'override']: r#5
[#14 'struct']: r#5
[#14 'var']: r#5
[#14 EndOfText]: r#5
[#15 EndOfText]: r#6
[#16 EndOfText]: r#7
[#17 ';']: s#18
[#17 '@']: s#36
[#17 'alias']: s#28
[#17 'const']: s#26
[#17 'const_assert']: s#31
[#17 'struct']: s#29
[#18 ';']: r#8
[#18 '@']: r#8
[#18 'alias']: r#8
[#18 'const']: r#8
[#18 'const_assert']: r#8
[#18 'fn']: r#8
[#18 'override']: r#8
[#18 'struct']: r#8
[#18 'var']: r#8
[#18 EndOfText]: r#8
[#19 ';']: s#162
[#20 ';']: s#161
[#21 ';']: s#160
[#22 ';']: r#9
[#22 '@']: r#9
[#22 'alias']: r#9
[#22 'const']: r#9
[#22 'const_assert']: r#9
[#22 'fn']: r#9
[#22 'override']: r#9
[#22 'struct']: r#9
[#22 'var']: r#9
[#22 EndOfText]: r#9
[#23 ';']: r#10
[#23 '@']: r#10
[#23 'alias']: r#10
[#23 'const']: r#10
[#23 'const_assert']: r#10
[#23 'fn']: r#10
[#23 'override']: r#10
[#23 'struct']: r#10
[#23 'var']: r#10
[#23 EndOfText]: r#10
[#24 ';']: s#159
[#25 'var']: s#158
[#26 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#27 'override']: s#154
[#28 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#29 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#30 'fn']: s#151
[#31 '!']: s#69
[#31 '&']: s#72
[#31 '(']: s#84
[#31 '*']: s#71
[#31 '-']: s#68
[#31 'array']: s#88
[#31 'atomic']: s#102
[#31 'bitcast']: s#78
[#31 'bool']: s#95
[#31 'f16']: s#97
[#31 'f32']: s#96
[#31 'false']: s#94
[#31 'i32']: s#98
[#31 'mat2x2']: s#107
[#31 'mat2x3']: s#108
[#31 'mat2x4']: s#109
[#31 'mat3x2']: s#110
[#31 'mat3x3']: s#111
[#31 'mat3x4']: s#112
[#31 'mat4x2']: s#113
[#31 'mat4x3']: s#114
[#31 'mat4x4']: s#115
[#31 'ptr']: s#100
[#31 'sampler']: s#132
[#31 'sampler_comparison']: s#133
[#31 'texture_1d']: s#139
[#31 'texture_2d']: s#140
[#31 'texture_2d_array']: s#141
[#31 'texture_3d']: s#142
[#31 'texture_cube']: s#143
[#31 'texture_cube_array']: s#144
[#31 'texture_depth_2d']: s#134
[#31 'texture_depth_2d_array']: s#135
[#31 'texture_depth_cube']: s#136
[#31 'texture_depth_cube_array']: s#137
[#31 'texture_depth_multisampled_2d']: s#138
[#31 'texture_multisampled_2d']: s#145
[#31 'texture_storage_1d']: s#146
[#31 'texture_storage_2d']: s#147
[#31 'texture_storage_2d_array']: s#148
[#31 'texture_storage_3d']: s#149
[#31 'true']: s#93
[#31 'u32']: s#99
[#31 'vec2']: s#104
[#31 'vec3']: s#105
[#31 'vec4']: s#106
[#31 '~']: s#70
[#31 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#31 /0[fh]/]: s#119
[#31 /0[iu]?/]: s#116
[#31 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#31 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#31 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#31 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#31 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#31 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#31 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#31 /[1-9][0-9]*[fh]/]: s#120
[#31 /[1-9][0-9]*[iu]?/]: s#117
[#32 'var']: r#11
[#33 'override']: r#12
[#34 'fn']: r#13
[#35 '@']: s#36
[#36 'align']: s#37
[#36 'binding']: s#38
[#36 'builtin']: s#39
[#36 'compute']: s#51
[#36 'const']: s#40
[#36 'fragment']: s#50
[#36 'group']: s#41
[#36 'id']: s#42
[#36 'interpolate']: s#43
[#36 'invariant']: s#44
[#36 'location']: s#45
[#36 'must_use']: s#46
[#36 'size']: s#47
[#36 'vertex']: s#49
[#36 'workgroup_size']: s#48
[#37 '(']: s#243
[#38 '(']: s#242
[#39 '(']: s#241
[#40 '@']: r#14
[#40 'array']: r#14
[#40 'atomic']: r#14
[#40 'bool']: r#14
[#40 'f16']: r#14
[#40 'f32']: r#14
[#40 'fn']: r#14
[#40 'i32']: r#14
[#40 'mat2x2']: r#14
[#40 'mat2x3']: r#14
[#40 'mat2x4']: r#14
[#40 'mat3x2']: r#14
[#40 'mat3x3']: r#14
[#40 'mat3x4']: r#14
[#40 'mat4x2']: r#14
[#40 'mat4x3']: r#14
[#40 'mat4x4']: r#14
[#40 'override']: r#14
[#40 'ptr']: r#14
[#40 'sampler']: r#14
[#40 'sampler_comparison']: r#14
[#40 'texture_1d']: r#14
[#40 'texture_2d']: r#14
[#40 'texture_2d_array']: r#14
[#40 'texture_3d']: r#14
[#40 'texture_cube']: r#14
[#40 'texture_cube_array']: r#14
[#40 'texture_depth_2d']: r#14
[#40 'texture_depth_2d_array']: r#14
[#40 'texture_depth_cube']: r#14
[#40 'texture_depth_cube_array']: r#14
[#40 'texture_depth_multisampled_2d']: r#14
[#40 'texture_multisampled_2d']: r#14
[#40 'texture_storage_1d']: r#14
[#40 'texture_storage_2d']: r#14
[#40 'texture_storage_2d_array']: r#14
[#40 'texture_storage_3d']: r#14
[#40 'u32']: r#14
[#40 'var']: r#14
[#40 'vec2']: r#14
[#40 'vec3']: r#14
[#40 'vec4']: r#14
[#40 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#14
[#41 '(']: s#240
[#42 '(']: s#239
[#43 '(']: s#238
[#44 '@']: r#15
[#44 'array']: r#15
[#44 'atomic']: r#15
[#44 'bool']: r#15
[#44 'f16']: r#15
[#44 'f32']: r#15
[#44 'fn']: r#15
[#44 'i32']: r#15
[#44 'mat2x2']: r#15
[#44 'mat2x3']: r#15
[#44 'mat2x4']: r#15
[#44 'mat3x2']: r#15
[#44 'mat3x3']: r#15
[#44 'mat3x4']: r#15
[#44 'mat4x2']: r#15
[#44 'mat4x3']: r#15
[#44 'mat4x4']: r#15
[#44 'override']: r#15
[#44 'ptr']: r#15
[#44 'sampler']: r#15
[#44 'sampler_comparison']: r#15
[#44 'texture_1d']: r#15
[#44 'texture_2d']: r#15
[#44 'texture_2d_array']: r#15
[#44 'texture_3d']: r#15
[#44 'texture_cube']: r#15
[#44 'texture_cube_array']: r#15
[#44 'texture_depth_2d']: r#15
[#44 'texture_depth_2d_array']: r#15
[#44 'texture_depth_cube']: r#15
[#44 'texture_depth_cube_array']: r#15
[#44 'texture_depth_multisampled_2d']: r#15
[#44 'texture_multisampled_2d']: r#15
[#44 'texture_storage_1d']: r#15
[#44 'texture_storage_2d']: r#15
[#44 'texture_storage_2d_array']: r#15
[#44 'texture_storage_3d']: r#15
[#44 'u32']: r#15
[#44 'var']: r#15
[#44 'vec2']: r#15
[#44 'vec3']: r#15
[#44 'vec4']: r#15
[#44 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#15
[#45 '(']: s#237
[#46 '@']: r#16
[#46 'array']: r#16
[#46 'atomic']: r#16
[#46 'bool']: r#16
[#46 'f16']: r#16
[#46 'f32']: r#16
[#46 'fn']: r#16
[#46 'i32']: r#16
[#46 'mat2x2']: r#16
[#46 'mat2x3']: r#16
[#46 'mat2x4']: r#16
[#46 'mat3x2']: r#16
[#46 'mat3x3']: r#16
[#46 'mat3x4']: r#16
[#46 'mat4x2']: r#16
[#46 'mat4x3']: r#16
[#46 'mat4x4']: r#16
[#46 'override']: r#16
[#46 'ptr']: r#16
[#46 'sampler']: r#16
[#46 'sampler_comparison']: r#16
[#46 'texture_1d']: r#16
[#46 'texture_2d']: r#16
[#46 'texture_2d_array']: r#16
[#46 'texture_3d']: r#16
[#46 'texture_cube']: r#16
[#46 'texture_cube_array']: r#16
[#46 'texture_depth_2d']: r#16
[#46 'texture_depth_2d_array']: r#16
[#46 'texture_depth_cube']: r#16
[#46 'texture_depth_cube_array']: r#16
[#46 'texture_depth_multisampled_2d']: r#16
[#46 'texture_multisampled_2d']: r#16
[#46 'texture_storage_1d']: r#16
[#46 'texture_storage_2d']: r#16
[#46 'texture_storage_2d_array']: r#16
[#46 'texture_storage_3d']: r#16
[#46 'u32']: r#16
[#46 'var']: r#16
[#46 'vec2']: r#16
[#46 'vec3']: r#16
[#46 'vec4']: r#16
[#46 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#16
[#47 '(']: s#236
[#48 '(']: s#235
[#49 '@']: r#17
[#49 'array']: r#17
[#49 'atomic']: r#17
[#49 'bool']: r#17
[#49 'f16']: r#17
[#49 'f32']: r#17
[#49 'fn']: r#17
[#49 'i32']: r#17
[#49 'mat2x2']: r#17
[#49 'mat2x3']: r#17
[#49 'mat2x4']: r#17
[#49 'mat3x2']: r#17
[#49 'mat3x3']: r#17
[#49 'mat3x4']: r#17
[#49 'mat4x2']: r#17
[#49 'mat4x3']: r#17
[#49 'mat4x4']: r#17
[#49 'override']: r#17
[#49 'ptr']: r#17
[#49 'sampler']: r#17
[#49 'sampler_comparison']: r#17
[#49 'texture_1d']: r#17
[#49 'texture_2d']: r#17
[#49 'texture_2d_array']: r#17
[#49 'texture_3d']: r#17
[#49 'texture_cube']: r#17
[#49 'texture_cube_array']: r#17
[#49 'texture_depth_2d']: r#17
[#49 'texture_depth_2d_array']: r#17
[#49 'texture_depth_cube']: r#17
[#49 'texture_depth_cube_array']: r#17
[#49 'texture_depth_multisampled_2d']: r#17
[#49 'texture_multisampled_2d']: r#17
[#49 'texture_storage_1d']: r#17
[#49 'texture_storage_2d']: r#17
[#49 'texture_storage_2d_array']: r#17
[#49 'texture_storage_3d']: r#17
[#49 'u32']: r#17
[#49 'var']: r#17
[#49 'vec2']: r#17
[#49 'vec3']: r#17
[#49 'vec4']: r#17
[#49 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#17
[#50 '@']: r#18
[#50 'array']: r#18
[#50 'atomic']: r#18
[#50 'bool']: r#18
[#50 'f16']: r#18
[#50 'f32']: r#18
[#50 'fn']: r#18
[#50 'i32']: r#18
[#50 'mat2x2']: r#18
[#50 'mat2x3']: r#18
[#50 'mat2x4']: r#18
[#50 'mat3x2']: r#18
[#50 'mat3x3']: r#18
[#50 'mat3x4']: r#18
[#50 'mat4x2']: r#18
[#50 'mat4x3']: r#18
[#50 'mat4x4']: r#18
[#50 'override']: r#18
[#50 'ptr']: r#18
[#50 'sampler']: r#18
[#50 'sampler_comparison']: r#18
[#50 'texture_1d']: r#18
[#50 'texture_2d']: r#18
[#50 'texture_2d_array']: r#18
[#50 'texture_3d']: r#18
[#50 'texture_cube']: r#18
[#50 'texture_cube_array']: r#18
[#50 'texture_depth_2d']: r#18
[#50 'texture_depth_2d_array']: r#18
[#50 'texture_depth_cube']: r#18
[#50 'texture_depth_cube_array']: r#18
[#50 'texture_depth_multisampled_2d']: r#18
[#50 'texture_multisampled_2d']: r#18
[#50 'texture_storage_1d']: r#18
[#50 'texture_storage_2d']: r#18
[#50 'texture_storage_2d_array']: r#18
[#50 'texture_storage_3d']: r#18
[#50 'u32']: r#18
[#50 'var']: r#18
[#50 'vec2']: r#18
[#50 'vec3']: r#18
[#50 'vec4']: r#18
[#50 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#18
[#51 '@']: r#19
[#51 'array']: r#19
[#51 'atomic']: r#19
[#51 'bool']: r#19
[#51 'f16']: r#19
[#51 'f32']: r#19
[#51 'fn']: r#19
[#51 'i32']: r#19
[#51 'mat2x2']: r#19
[#51 'mat2x3']: r#19
[#51 'mat2x4']: r#19
[#51 'mat3x2']: r#19
[#51 'mat3x3']: r#19
[#51 'mat3x4']: r#19
[#51 'mat4x2']: r#19
[#51 'mat4x3']: r#19
[#51 'mat4x4']: r#19
[#51 'override']: r#19
[#51 'ptr']: r#19
[#51 'sampler']: r#19
[#51 'sampler_comparison']: r#19
[#51 'texture_1d']: r#19
[#51 'texture_2d']: r#19
[#51 'texture_2d_array']: r#19
[#51 'texture_3d']: r#19
[#51 'texture_cube']: r#19
[#51 'texture_cube_array']: r#19
[#51 'texture_depth_2d']: r#19
[#51 'texture_depth_2d_array']: r#19
[#51 'texture_depth_cube']: r#19
[#51 'texture_depth_cube_array']: r#19
[#51 'texture_depth_multisampled_2d']: r#19
[#51 'texture_multisampled_2d']: r#19
[#51 'texture_storage_1d']: r#19
[#51 'texture_storage_2d']: r#19
[#51 'texture_storage_2d_array']: r#19
[#51 'texture_storage_3d']: r#19
[#51 'u32']: r#19
[#51 'var']: r#19
[#51 'vec2']: r#19
[#51 'vec3']: r#19
[#51 'vec4']: r#19
[#51 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#19
[#52 'var']: r#20
[#53 'override']: r#21
[#54 'fn']: r#22
[#55 ';']: r#23
[#56 '&&']: r#26
[#56 ')']: r#24
[#56 ',']: r#24
[#56 ':']: r#24
[#56 ';']: r#24
[#56 ']']: r#24
[#56 '{']: r#24
[#56 '||']: r#25
[#57 '||']: s#234
[#58 '&&']: s#233
[#59 ')']: r#27
[#59 ',']: r#27
[#59 ':']: r#27
[#59 ';']: r#27
[#59 ']']: r#27
[#59 '{']: r#27
[#60 '!=']: s#228
[#60 '&&']: r#28
[#60 ')']: r#28
[#60 ',']: r#28
[#60 ':']: r#28
[#60 ';']: r#28
[#60 '==']: s#227
[#60 ']']: r#28
[#60 '{']: r#28
[#60 '||']: r#28
[#60 /\u200B_greater_than/]: s#230
[#60 /\u200B_greater_than_equal/]: s#232
[#60 /\u200B_less_than/]: s#229
[#60 /\u200B_less_than_equal/]: s#231
[#61 '&']: s#222
[#62 '|']: s#221
[#63 '^']: s#220
[#64 '!=']: r#29
[#64 '&&']: r#29
[#64 ')']: r#29
[#64 '+']: s#218
[#64 ',']: r#29
[#64 '-']: s#219
[#64 ':']: r#29
[#64 ';']: r#29
[#64 '==']: r#29
[#64 ']']: r#29
[#64 '{']: r#29
[#64 '||']: r#29
[#64 /\u200B_greater_than/]: r#29
[#64 /\u200B_greater_than_equal/]: r#29
[#64 /\u200B_less_than/]: r#29
[#64 /\u200B_less_than_equal/]: r#29
[#65 '!=']: r#33
[#65 '%']: r#33
[#65 '&&']: r#33
[#65 '&']: r#30
[#65 ')']: r#33
[#65 '*']: r#33
[#65 '+']: r#33
[#65 ',']: r#33
[#65 '-']: r#33
[#65 '/']: r#33
[#65 ':']: r#33
[#65 ';']: r#33
[#65 '==']: r#33
[#65 ']']: r#33
[#65 '^']: r#32
[#65 '{']: r#33
[#65 '|']: r#31
[#65 '||']: r#33
[#65 /\u200B_greater_than/]: r#33
[#65 /\u200B_greater_than_equal/]: r#33
[#65 /\u200B_less_than/]: r#33
[#65 /\u200B_less_than_equal/]: r#33
[#65 /\u200B_shift_left/]: s#215
[#65 /\u200B_shift_right/]: s#216
[#66 '!=']: r#34
[#66 '%']: s#212
[#66 '&&']: r#34
[#66 ')']: r#34
[#66 '*']: s#210
[#66 '+']: r#34
[#66 ',']: r#34
[#66 '-']: r#34
[#66 '/']: s#211
[#66 ':']: r#34
[#66 ';']: r#34
[#66 '==']: r#34
[#66 ']']: r#34
[#66 '{']: r#34
[#66 '||']: r#34
[#66 /\u200B_greater_than/]: r#34
[#66 /\u200B_greater_than_equal/]: r#34
[#66 /\u200B_less_than/]: r#34
[#66 /\u200B_less_than_equal/]: r#34
[#66 /\u200B_template_args_end/]: r#34
[#67 '!=']: r#35
[#67 '%']: r#35
[#67 '&&']: r#35
[#67 '&']: r#35
[#67 ')']: r#35
[#67 '*']: r#35
[#67 '+']: r#35
[#67 ',']: r#35
[#67 '-']: r#35
[#67 '/']: r#35
[#67 ':']: r#35
[#67 ';']: r#35
[#67 '==']: r#35
[#67 ']']: r#35
[#67 '^']: r#35
[#67 '{']: r#35
[#67 '|']: r#35
[#67 '||']: r#35
[#67 /\u200B_greater_than/]: r#35
[#67 /\u200B_greater_than_equal/]: r#35
[#67 /\u200B_less_than/]: r#35
[#67 /\u200B_less_than_equal/]: r#35
[#67 /\u200B_shift_left/]: r#35
[#67 /\u200B_shift_right/]: r#35
[#67 /\u200B_template_args_end/]: r#35
[#68 '!']: s#69
[#68 '&']: s#72
[#68 '(']: s#84
[#68 '*']: s#71
[#68 '-']: s#68
[#68 'array']: s#88
[#68 'atomic']: s#102
[#68 'bitcast']: s#78
[#68 'bool']: s#95
[#68 'f16']: s#97
[#68 'f32']: s#96
[#68 'false']: s#94
[#68 'i32']: s#98
[#68 'mat2x2']: s#107
[#68 'mat2x3']: s#108
[#68 'mat2x4']: s#109
[#68 'mat3x2']: s#110
[#68 'mat3x3']: s#111
[#68 'mat3x4']: s#112
[#68 'mat4x2']: s#113
[#68 'mat4x3']: s#114
[#68 'mat4x4']: s#115
[#68 'ptr']: s#100
[#68 'sampler']: s#132
[#68 'sampler_comparison']: s#133
[#68 'texture_1d']: s#139
[#68 'texture_2d']: s#140
[#68 'texture_2d_array']: s#141
[#68 'texture_3d']: s#142
[#68 'texture_cube']: s#143
[#68 'texture_cube_array']: s#144
[#68 'texture_depth_2d']: s#134
[#68 'texture_depth_2d_array']: s#135
[#68 'texture_depth_cube']: s#136
[#68 'texture_depth_cube_array']: s#137
[#68 'texture_depth_multisampled_2d']: s#138
[#68 'texture_multisampled_2d']: s#145
[#68 'texture_storage_1d']: s#146
[#68 'texture_storage_2d']: s#147
[#68 'texture_storage_2d_array']: s#148
[#68 'texture_storage_3d']: s#149
[#68 'true']: s#93
[#68 'u32']: s#99
[#68 'vec2']: s#104
[#68 'vec3']: s#105
[#68 'vec4']: s#106
[#68 '~']: s#70
[#68 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#68 /0[fh]/]: s#119
[#68 /0[iu]?/]: s#116
[#68 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#68 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#68 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#68 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#68 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#68 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#68 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#68 /[1-9][0-9]*[fh]/]: s#120
[#68 /[1-9][0-9]*[iu]?/]: s#117
[#69 '!']: s#69
[#69 '&']: s#72
[#69 '(']: s#84
[#69 '*']: s#71
[#69 '-']: s#68
[#69 'array']: s#88
[#69 'atomic']: s#102
[#69 'bitcast']: s#78
[#69 'bool']: s#95
[#69 'f16']: s#97
[#69 'f32']: s#96
[#69 'false']: s#94
[#69 'i32']: s#98
[#69 'mat2x2']: s#107
[#69 'mat2x3']: s#108
[#69 'mat2x4']: s#109
[#69 'mat3x2']: s#110
[#69 'mat3x3']: s#111
[#69 'mat3x4']: s#112
[#69 'mat4x2']: s#113
[#69 'mat4x3']: s#114
[#69 'mat4x4']: s#115
[#69 'ptr']: s#100
[#69 'sampler']: s#132
[#69 'sampler_comparison']: s#133
[#69 'texture_1d']: s#139
[#69 'texture_2d']: s#140
[#69 'texture_2d_array']: s#141
[#69 'texture_3d']: s#142
[#69 'texture_cube']: s#143
[#69 'texture_cube_array']: s#144
[#69 'texture_depth_2d']: s#134
[#69 'texture_depth_2d_array']: s#135
[#69 'texture_depth_cube']: s#136
[#69 'texture_depth_cube_array']: s#137
[#69 'texture_depth_multisampled_2d']: s#138
[#69 'texture_multisampled_2d']: s#145
[#69 'texture_storage_1d']: s#146
[#69 'texture_storage_2d']: s#147
[#69 'texture_storage_2d_array']: s#148
[#69 'texture_storage_3d']: s#149
[#69 'true']: s#93
[#69 'u32']: s#99
[#69 'vec2']: s#104
[#69 'vec3']: s#105
[#69 'vec4']: s#106
[#69 '~']: s#70
[#69 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#69 /0[fh]/]: s#119
[#69 /0[iu]?/]: s#116
[#69 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#69 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#69 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#69 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#69 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#69 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#69 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#69 /[1-9][0-9]*[fh]/]: s#120
[#69 /[1-9][0-9]*[iu]?/]: s#117
[#70 '!']: s#69
[#70 '&']: s#72
[#70 '(']: s#84
[#70 '*']: s#71
[#70 '-']: s#68
[#70 'array']: s#88
[#70 'atomic']: s#102
[#70 'bitcast']: s#78
[#70 'bool']: s#95
[#70 'f16']: s#97
[#70 'f32']: s#96
[#70 'false']: s#94
[#70 'i32']: s#98
[#70 'mat2x2']: s#107
[#70 'mat2x3']: s#108
[#70 'mat2x4']: s#109
[#70 'mat3x2']: s#110
[#70 'mat3x3']: s#111
[#70 'mat3x4']: s#112
[#70 'mat4x2']: s#113
[#70 'mat4x3']: s#114
[#70 'mat4x4']: s#115
[#70 'ptr']: s#100
[#70 'sampler']: s#132
[#70 'sampler_comparison']: s#133
[#70 'texture_1d']: s#139
[#70 'texture_2d']: s#140
[#70 'texture_2d_array']: s#141
[#70 'texture_3d']: s#142
[#70 'texture_cube']: s#143
[#70 'texture_cube_array']: s#144
[#70 'texture_depth_2d']: s#134
[#70 'texture_depth_2d_array']: s#135
[#70 'texture_depth_cube']: s#136
[#70 'texture_depth_cube_array']: s#137
[#70 'texture_depth_multisampled_2d']: s#138
[#70 'texture_multisampled_2d']: s#145
[#70 'texture_storage_1d']: s#146
[#70 'texture_storage_2d']: s#147
[#70 'texture_storage_2d_array']: s#148
[#70 'texture_storage_3d']: s#149
[#70 'true']: s#93
[#70 'u32']: s#99
[#70 'vec2']: s#104
[#70 'vec3']: s#105
[#70 'vec4']: s#106
[#70 '~']: s#70
[#70 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#70 /0[fh]/]: s#119
[#70 /0[iu]?/]: s#116
[#70 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#70 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#70 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#70 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#70 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#70 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#70 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#70 /[1-9][0-9]*[fh]/]: s#120
[#70 /[1-9][0-9]*[iu]?/]: s#117
[#71 '!']: s#69
[#71 '&']: s#72
[#71 '(']: s#84
[#71 '*']: s#71
[#71 '-']: s#68
[#71 'array']: s#88
[#71 'atomic']: s#102
[#71 'bitcast']: s#78
[#71 'bool']: s#95
[#71 'f16']: s#97
[#71 'f32']: s#96
[#71 'false']: s#94
[#71 'i32']: s#98
[#71 'mat2x2']: s#107
[#71 'mat2x3']: s#108
[#71 'mat2x4']: s#109
[#71 'mat3x2']: s#110
[#71 'mat3x3']: s#111
[#71 'mat3x4']: s#112
[#71 'mat4x2']: s#113
[#71 'mat4x3']: s#114
[#71 'mat4x4']: s#115
[#71 'ptr']: s#100
[#71 'sampler']: s#132
[#71 'sampler_comparison']: s#133
[#71 'texture_1d']: s#139
[#71 'texture_2d']: s#140
[#71 'texture_2d_array']: s#141
[#71 'texture_3d']: s#142
[#71 'texture_cube']: s#143
[#71 'texture_cube_array']: s#144
[#71 'texture_depth_2d']: s#134
[#71 'texture_depth_2d_array']: s#135
[#71 'texture_depth_cube']: s#136
[#71 'texture_depth_cube_array']: s#137
[#71 'texture_depth_multisampled_2d']: s#138
[#71 'texture_multisampled_2d']: s#145
[#71 'texture_storage_1d']: s#146
[#71 'texture_storage_2d']: s#147
[#71 'texture_storage_2d_array']: s#148
[#71 'texture_storage_3d']: s#149
[#71 'true']: s#93
[#71 'u32']: s#99
[#71 'vec2']: s#104
[#71 'vec3']: s#105
[#71 'vec4']: s#106
[#71 '~']: s#70
[#71 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#71 /0[fh]/]: s#119
[#71 /0[iu]?/]: s#116
[#71 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#71 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#71 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#71 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#71 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#71 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#71 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#71 /[1-9][0-9]*[fh]/]: s#120
[#71 /[1-9][0-9]*[iu]?/]: s#117
[#72 '!']: s#69
[#72 '&']: s#72
[#72 '(']: s#84
[#72 '*']: s#71
[#72 '-']: s#68
[#72 'array']: s#88
[#72 'atomic']: s#102
[#72 'bitcast']: s#78
[#72 'bool']: s#95
[#72 'f16']: s#97
[#72 'f32']: s#96
[#72 'false']: s#94
[#72 'i32']: s#98
[#72 'mat2x2']: s#107
[#72 'mat2x3']: s#108
[#72 'mat2x4']: s#109
[#72 'mat3x2']: s#110
[#72 'mat3x3']: s#111
[#72 'mat3x4']: s#112
[#72 'mat4x2']: s#113
[#72 'mat4x3']: s#114
[#72 'mat4x4']: s#115
[#72 'ptr']: s#100
[#72 'sampler']: s#132
[#72 'sampler_comparison']: s#133
[#72 'texture_1d']: s#139
[#72 'texture_2d']: s#140
[#72 'texture_2d_array']: s#141
[#72 'texture_3d']: s#142
[#72 'texture_cube']: s#143
[#72 'texture_cube_array']: s#144
[#72 'texture_depth_2d']: s#134
[#72 'texture_depth_2d_array']: s#135
[#72 'texture_depth_cube']: s#136
[#72 'texture_depth_cube_array']: s#137
[#72 'texture_depth_multisampled_2d']: s#138
[#72 'texture_multisampled_2d']: s#145
[#72 'texture_storage_1d']: s#146
[#72 'texture_storage_2d']: s#147
[#72 'texture_storage_2d_array']: s#148
[#72 'texture_storage_3d']: s#149
[#72 'true']: s#93
[#72 'u32']: s#99
[#72 'vec2']: s#104
[#72 'vec3']: s#105
[#72 'vec4']: s#106
[#72 '~']: s#70
[#72 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#72 /0[fh]/]: s#119
[#72 /0[iu]?/]: s#116
[#72 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#72 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#72 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#72 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#72 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#72 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#72 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#72 /[1-9][0-9]*[fh]/]: s#120
[#72 /[1-9][0-9]*[iu]?/]: s#117
[#73 '.']: s#203
[#73 '[']: s#202
[#74 '!=']: r#36
[#74 '%']: r#36
[#74 '&&']: r#36
[#74 '&']: r#36
[#74 '(']: r#37
[#74 ')']: r#36
[#74 '*']: r#36
[#74 '+']: r#36
[#74 ',']: r#36
[#74 '-']: r#36
[#74 '.']: r#36
[#74 '/']: r#36
[#74 ':']: r#36
[#74 ';']: r#36
[#74 '==']: r#36
[#74 '[']: r#36
[#74 ']']: r#36
[#74 '^']: r#36
[#74 '{']: r#36
[#74 '|']: r#36
[#74 '||']: r#36
[#74 /\u200B_greater_than/]: r#36
[#74 /\u200B_greater_than_equal/]: r#36
[#74 /\u200B_less_than/]: r#36
[#74 /\u200B_less_than_equal/]: r#36
[#74 /\u200B_shift_left/]: r#36
[#74 /\u200B_shift_right/]: r#36
[#74 /\u200B_template_args_end/]: r#36
[#75 '!=']: r#38
[#75 '%']: r#38
[#75 '&&']: r#38
[#75 '&']: r#38
[#75 ')']: r#38
[#75 '*']: r#38
[#75 '+']: r#38
[#75 ',']: r#38
[#75 '-']: r#38
[#75 '.']: r#38
[#75 '/']: r#38
[#75 ':']: r#38
[#75 ';']: r#38
[#75 '==']: r#38
[#75 '[']: r#38
[#75 ']']: r#38
[#75 '^']: r#38
[#75 '{']: r#38
[#75 '|']: r#38
[#75 '||']: r#38
[#75 /\u200B_greater_than/]: r#38
[#75 /\u200B_greater_than_equal/]: r#38
[#75 /\u200B_less_than/]: r#38
[#75 /\u200B_less_than_equal/]: r#38
[#75 /\u200B_shift_left/]: r#38
[#75 /\u200B_shift_right/]: r#38
[#75 /\u200B_template_args_end/]: r#38
[#76 '!=']: r#39
[#76 '%']: r#39
[#76 '&&']: r#39
[#76 '&']: r#39
[#76 ')']: r#39
[#76 '*']: r#39
[#76 '+']: r#39
[#76 ',']: r#39
[#76 '-']: r#39
[#76 '.']: r#39
[#76 '/']: r#39
[#76 ':']: r#39
[#76 ';']: r#39
[#76 '==']: r#39
[#76 '[']: r#39
[#76 ']']: r#39
[#76 '^']: r#39
[#76 '{']: r#39
[#76 '|']: r#39
[#76 '||']: r#39
[#76 /\u200B_greater_than/]: r#39
[#76 /\u200B_greater_than_equal/]: r#39
[#76 /\u200B_less_than/]: r#39
[#76 /\u200B_less_than_equal/]: r#39
[#76 /\u200B_shift_left/]: r#39
[#76 /\u200B_shift_right/]: r#39
[#76 /\u200B_template_args_end/]: r#39
[#77 '!=']: r#40
[#77 '%']: r#40
[#77 '&&']: r#40
[#77 '&']: r#40
[#77 ')']: r#40
[#77 '*']: r#40
[#77 '+']: r#40
[#77 ',']: r#40
[#77 '-']: r#40
[#77 '.']: r#40
[#77 '/']: r#40
[#77 ':']: r#40
[#77 ';']: r#40
[#77 '==']: r#40
[#77 '[']: r#40
[#77 ']']: r#40
[#77 '^']: r#40
[#77 '{']: r#40
[#77 '|']: r#40
[#77 '||']: r#40
[#77 /\u200B_greater_than/]: r#40
[#77 /\u200B_greater_than_equal/]: r#40
[#77 /\u200B_less_than/]: r#40
[#77 /\u200B_less_than_equal/]: r#40
[#77 /\u200B_shift_left/]: r#40
[#77 /\u200B_shift_right/]: r#40
[#77 /\u200B_template_args_end/]: r#40
[#78 /\u200B_disambiguate_template/]: s#175
[#79 '!=']: r#41
[#79 '%']: r#41
[#79 '%=']: r#41
[#79 '&&']: r#41
[#79 '&']: r#41
[#79 '&=']: r#41
[#79 '(']: r#41
[#79 ')']: r#41
[#79 '*']: r#41
[#79 '*=']: r#41
[#79 '+']: r#41
[#79 '++']: r#41
[#79 '+=']: r#41
[#79 ',']: r#41
[#79 '-']: r#41
[#79 '--']: r#41
[#79 '-=']: r#41
[#79 '.']: r#41
[#79 '/']: r#41
[#79 '/=']: r#41
[#79 ':']: r#41
[#79 ';']: r#41
[#79 '=']: r#41
[#79 '==']: r#41
[#79 '[']: r#41
[#79 ']']: r#41
[#79 '^']: r#41
[#79 '^=']: r#41
[#79 '{']: r#41
[#79 '|']: r#41
[#79 '|=']: r#41
[#79 '||']: r#41
[#79 '}']: r#41
[#79 /\u200B_greater_than/]: r#41
[#79 /\u200B_greater_than_equal/]: r#41
[#79 /\u200B_less_than/]: r#41
[#79 /\u200B_less_than_equal/]: r#41
[#79 /\u200B_shift_left/]: r#41
[#79 /\u200B_shift_left_assign/]: r#41
[#79 /\u200B_shift_right/]: r#41
[#79 /\u200B_shift_right_assign/]: r#41
[#79 /\u200B_template_args_end/]: r#41
[#80 '(']: s#198
[#81 '!=']: r#42
[#81 '%']: r#42
[#81 '&&']: r#42
[#81 '&']: r#42
[#81 ')']: r#42
[#81 '*']: r#42
[#81 '+']: r#42
[#81 ',']: r#42
[#81 '-']: r#42
[#81 '.']: r#42
[#81 '/']: r#42
[#81 ':']: r#42
[#81 ';']: r#42
[#81 '==']: r#42
[#81 '[']: r#42
[#81 ']']: r#42
[#81 '^']: r#42
[#81 '{']: r#42
[#81 '|']: r#42
[#81 '||']: r#42
[#81 /\u200B_greater_than/]: r#42
[#81 /\u200B_greater_than_equal/]: r#42
[#81 /\u200B_less_than/]: r#42
[#81 /\u200B_less_than_equal/]: r#42
[#81 /\u200B_shift_left/]: r#42
[#81 /\u200B_shift_right/]: r#42
[#81 /\u200B_template_args_end/]: r#42
[#82 '!=']: r#43
[#82 '%']: r#43
[#82 '&&']: r#43
[#82 '&']: r#43
[#82 ')']: r#43
[#82 '*']: r#43
[#82 '+']: r#43
[#82 ',']: r#43
[#82 '-']: r#43
[#82 '.']: r#43
[#82 '/']: r#43
[#82 ':']: r#43
[#82 ';']: r#43
[#82 '==']: r#43
[#82 '[']: r#43
[#82 ']']: r#43
[#82 '^']: r#43
[#82 '{']: r#43
[#82 '|']: r#43
[#82 '||']: r#43
[#82 /\u200B_greater_than/]: r#43
[#82 /\u200B_greater_than_equal/]: r#43
[#82 /\u200B_less_than/]: r#43
[#82 /\u200B_less_than_equal/]: r#43
[#82 /\u200B_shift_left/]: r#43
[#82 /\u200B_shift_right/]: r#43
[#82 /\u200B_template_args_end/]: r#43
[#83 '!=']: r#44
[#83 '%']: r#44
[#83 '&&']: r#44
[#83 '&']: r#44
[#83 ')']: r#44
[#83 '*']: r#44
[#83 '+']: r#44
[#83 ',']: r#44
[#83 '-']: r#44
[#83 '.']: r#44
[#83 '/']: r#44
[#83 ':']: r#44
[#83 ';']: r#44
[#83 '==']: r#44
[#83 '[']: r#44
[#83 ']']: r#44
[#83 '^']: r#44
[#83 '{']: r#44
[#83 '|']: r#44
[#83 '||']: r#44
[#83 /\u200B_greater_than/]: r#44
[#83 /\u200B_greater_than_equal/]: r#44
[#83 /\u200B_less_than/]: r#44
[#83 /\u200B_less_than_equal/]: r#44
[#83 /\u200B_shift_left/]: r#44
[#83 /\u200B_shift_right/]: r#44
[#83 /\u200B_template_args_end/]: r#44
[#84 '!']: s#69
[#84 '&']: s#72
[#84 '(']: s#84
[#84 '*']: s#71
[#84 '-']: s#68
[#84 'array']: s#88
[#84 'atomic']: s#102
[#84 'bitcast']: s#78
[#84 'bool']: s#95
[#84 'f16']: s#97
[#84 'f32']: s#96
[#84 'false']: s#94
[#84 'i32']: s#98
[#84 'mat2x2']: s#107
[#84 'mat2x3']: s#108
[#84 'mat2x4']: s#109
[#84 'mat3x2']: s#110
[#84 'mat3x3']: s#111
[#84 'mat3x4']: s#112
[#84 'mat4x2']: s#113
[#84 'mat4x3']: s#114
[#84 'mat4x4']: s#115
[#84 'ptr']: s#100
[#84 'sampler']: s#132
[#84 'sampler_comparison']: s#133
[#84 'texture_1d']: s#139
[#84 'texture_2d']: s#140
[#84 'texture_2d_array']: s#141
[#84 'texture_3d']: s#142
[#84 'texture_cube']: s#143
[#84 'texture_cube_array']: s#144
[#84 'texture_depth_2d']: s#134
[#84 'texture_depth_2d_array']: s#135
[#84 'texture_depth_cube']: s#136
[#84 'texture_depth_cube_array']: s#137
[#84 'texture_depth_multisampled_2d']: s#138
[#84 'texture_multisampled_2d']: s#145
[#84 'texture_storage_1d']: s#146
[#84 'texture_storage_2d']: s#147
[#84 'texture_storage_2d_array']: s#148
[#84 'texture_storage_3d']: s#149
[#84 'true']: s#93
[#84 'u32']: s#99
[#84 'vec2']: s#104
[#84 'vec3']: s#105
[#84 'vec4']: s#106
[#84 '~']: s#70
[#84 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#84 /0[fh]/]: s#119
[#84 /0[iu]?/]: s#116
[#84 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#84 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#84 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#84 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#84 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#84 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#84 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#84 /[1-9][0-9]*[fh]/]: s#120
[#84 /[1-9][0-9]*[iu]?/]: s#117
[#85 '(']: r#45
[#86 /\u200B_disambiguate_template/]: s#175
[#87 /\u200B_disambiguate_template/]: s#175
[#88 /\u200B_disambiguate_template/]: s#175
[#89 '!=']: r#46
[#89 '%']: r#46
[#89 '&&']: r#46
[#89 '&']: r#46
[#89 ')']: r#46
[#89 '*']: r#46
[#89 '+']: r#46
[#89 ',']: r#46
[#89 '-']: r#46
[#89 '.']: r#46
[#89 '/']: r#46
[#89 ':']: r#46
[#89 ';']: r#46
[#89 '==']: r#46
[#89 '[']: r#46
[#89 ']']: r#46
[#89 '^']: r#46
[#89 '{']: r#46
[#89 '|']: r#46
[#89 '||']: r#46
[#89 /\u200B_greater_than/]: r#46
[#89 /\u200B_greater_than_equal/]: r#46
[#89 /\u200B_less_than/]: r#46
[#89 /\u200B_less_than_equal/]: r#46
[#89 /\u200B_shift_left/]: r#46
[#89 /\u200B_shift_right/]: r#46
[#89 /\u200B_template_args_end/]: r#46
[#90 '!=']: r#47
[#90 '%']: r#47
[#90 '&&']: r#47
[#90 '&']: r#47
[#90 ')']: r#47
[#90 '*']: r#47
[#90 '+']: r#47
[#90 ',']: r#47
[#90 '-']: r#47
[#90 '.']: r#47
[#90 '/']: r#47
[#90 ':']: r#47
[#90 ';']: r#47
[#90 '==']: r#47
[#90 '[']: r#47
[#90 ']']: r#47
[#90 '^']: r#47
[#90 '{']: r#47
[#90 '|']: r#47
[#90 '||']: r#47
[#90 /\u200B_greater_than/]: r#47
[#90 /\u200B_greater_than_equal/]: r#47
[#90 /\u200B_less_than/]: r#47
[#90 /\u200B_less_than_equal/]: r#47
[#90 /\u200B_shift_left/]: r#47
[#90 /\u200B_shift_right/]: r#47
[#90 /\u200B_template_args_end/]: r#47
[#91 '!=']: r#48
[#91 '%']: r#48
[#91 '&&']: r#48
[#91 '&']: r#48
[#91 ')']: r#48
[#91 '*']: r#48
[#91 '+']: r#48
[#91 ',']: r#48
[#91 '-']: r#48
[#91 '.']: r#48
[#91 '/']: r#48
[#91 ':']: r#48
[#91 ';']: r#48
[#91 '==']: r#48
[#91 '[']: r#48
[#91 ']']: r#48
[#91 '^']: r#48
[#91 '{']: r#48
[#91 '|']: r#48
[#91 '||']: r#48
[#91 /\u200B_greater_than/]: r#48
[#91 /\u200B_greater_than_equal/]: r#48
[#91 /\u200B_less_than/]: r#48
[#91 /\u200B_less_than_equal/]: r#48
[#91 /\u200B_shift_left/]: r#48
[#91 /\u200B_shift_right/]: r#48
[#91 /\u200B_template_args_end/]: r#48
[#92 '!=']: r#49
[#92 '%']: r#49
[#92 '&&']: r#49
[#92 '&']: r#49
[#92 ')']: r#49
[#92 '*']: r#49
[#92 '+']: r#49
[#92 ',']: r#49
[#92 '-']: r#49
[#92 '.']: r#49
[#92 '/']: r#49
[#92 ':']: r#49
[#92 ';']: r#49
[#92 '==']: r#49
[#92 '[']: r#49
[#92 ']']: r#49
[#92 '^']: r#49
[#92 '{']: r#49
[#92 '|']: r#49
[#92 '||']: r#49
[#92 /\u200B_greater_than/]: r#49
[#92 /\u200B_greater_than_equal/]: r#49
[#92 /\u200B_less_than/]: r#49
[#92 /\u200B_less_than_equal/]: r#49
[#92 /\u200B_shift_left/]: r#49
[#92 /\u200B_shift_right/]: r#49
[#92 /\u200B_template_args_end/]: r#49
[#93 '!=']: r#50
[#93 '%']: r#50
[#93 '&&']: r#50
[#93 '&']: r#50
[#93 ')']: r#50
[#93 '*']: r#50
[#93 '+']: r#50
[#93 ',']: r#50
[#93 '-']: r#50
[#93 '.']: r#50
[#93 '/']: r#50
[#93 ':']: r#50
[#93 ';']: r#50
[#93 '==']: r#50
[#93 '[']: r#50
[#93 ']']: r#50
[#93 '^']: r#50
[#93 '{']: r#50
[#93 '|']: r#50
[#93 '||']: r#50
[#93 /\u200B_greater_than/]: r#50
[#93 /\u200B_greater_than_equal/]: r#50
[#93 /\u200B_less_than/]: r#50
[#93 /\u200B_less_than_equal/]: r#50
[#93 /\u200B_shift_left/]: r#50
[#93 /\u200B_shift_right/]: r#50
[#93 /\u200B_template_args_end/]: r#50
[#94 '!=']: r#51
[#94 '%']: r#51
[#94 '&&']: r#51
[#94 '&']: r#51
[#94 ')']: r#51
[#94 '*']: r#51
[#94 '+']: r#51
[#94 ',']: r#51
[#94 '-']: r#51
[#94 '.']: r#51
[#94 '/']: r#51
[#94 ':']: r#51
[#94 ';']: r#51
[#94 '==']: r#51
[#94 '[']: r#51
[#94 ']']: r#51
[#94 '^']: r#51
[#94 '{']: r#51
[#94 '|']: r#51
[#94 '||']: r#51
[#94 /\u200B_greater_than/]: r#51
[#94 /\u200B_greater_than_equal/]: r#51
[#94 /\u200B_less_than/]: r#51
[#94 /\u200B_less_than_equal/]: r#51
[#94 /\u200B_shift_left/]: r#51
[#94 /\u200B_shift_right/]: r#51
[#94 /\u200B_template_args_end/]: r#51
[#95 '(']: r#52
[#95 ')']: r#52
[#95 ',']: r#52
[#95 ';']: r#52
[#95 '=']: r#52
[#95 '{']: r#52
[#95 '}']: r#52
[#95 /\u200B_template_args_end/]: r#52
[#96 '(']: r#53
[#96 ')']: r#53
[#96 ',']: r#53
[#96 ';']: r#53
[#96 '=']: r#53
[#96 '{']: r#53
[#96 '}']: r#53
[#96 /\u200B_template_args_end/]: r#53
[#97 '(']: r#54
[#97 ')']: r#54
[#97 ',']: r#54
[#97 ';']: r#54
[#97 '=']: r#54
[#97 '{']: r#54
[#97 '}']: r#54
[#97 /\u200B_template_args_end/]: r#54
[#98 '(']: r#55
[#98 ')']: r#55
[#98 ',']: r#55
[#98 ';']: r#55
[#98 '=']: r#55
[#98 '{']: r#55
[#98 '}']: r#55
[#98 /\u200B_template_args_end/]: r#55
[#99 '(']: r#56
[#99 ')']: r#56
[#99 ',']: r#56
[#99 ';']: r#56
[#99 '=']: r#56
[#99 '{']: r#56
[#99 '}']: r#56
[#99 /\u200B_template_args_end/]: r#56
[#100 /\u200B_disambiguate_template/]: s#175
[#101 '(']: r#57
[#101 ')']: r#57
[#101 ',']: r#57
[#101 ';']: r#57
[#101 '=']: r#57
[#101 '{']: r#57
[#101 '}']: r#57
[#101 /\u200B_template_args_end/]: r#57
[#102 /\u200B_disambiguate_template/]: s#175
[#103 '(']: r#58
[#103 ')']: r#58
[#103 ',']: r#58
[#103 ';']: r#58
[#103 '=']: r#58
[#103 '{']: r#58
[#103 '}']: r#58
[#103 /\u200B_template_args_end/]: r#58
[#104 /\u200B_disambiguate_template/]: r#59
[#105 /\u200B_disambiguate_template/]: r#60
[#106 /\u200B_disambiguate_template/]: r#61
[#107 /\u200B_disambiguate_template/]: r#62
[#108 /\u200B_disambiguate_template/]: r#63
[#109 /\u200B_disambiguate_template/]: r#64
[#110 /\u200B_disambiguate_template/]: r#65
[#111 /\u200B_disambiguate_template/]: r#66
[#112 /\u200B_disambiguate_template/]: r#67
[#113 /\u200B_disambiguate_template/]: r#68
[#114 /\u200B_disambiguate_template/]: r#69
[#115 /\u200B_disambiguate_template/]: r#70
[#116 '!=']: r#71
[#116 '%']: r#71
[#116 '&&']: r#71
[#116 '&']: r#71
[#116 ')']: r#71
[#116 '*']: r#71
[#116 '+']: r#71
[#116 ',']: r#71
[#116 '-']: r#71
[#116 '.']: r#71
[#116 '/']: r#71
[#116 ':']: r#71
[#116 ';']: r#71
[#116 '==']: r#71
[#116 '[']: r#71
[#116 ']']: r#71
[#116 '^']: r#71
[#116 '{']: r#71
[#116 '|']: r#71
[#116 '||']: r#71
[#116 /\u200B_greater_than/]: r#71
[#116 /\u200B_greater_than_equal/]: r#71
[#116 /\u200B_less_than/]: r#71
[#116 /\u200B_less_than_equal/]: r#71
[#116 /\u200B_shift_left/]: r#71
[#116 /\u200B_shift_right/]: r#71
[#116 /\u200B_template_args_end/]: r#71
[#117 '!=']: r#72
[#117 '%']: r#72
[#117 '&&']: r#72
[#117 '&']: r#72
[#117 ')']: r#72
[#117 '*']: r#72
[#117 '+']: r#72
[#117 ',']: r#72
[#117 '-']: r#72
[#117 '.']: r#72
[#117 '/']: r#72
[#117 ':']: r#72
[#117 ';']: r#72
[#117 '==']: r#72
[#117 '[']: r#72
[#117 ']']: r#72
[#117 '^']: r#72
[#117 '{']: r#72
[#117 '|']: r#72
[#117 '||']: r#72
[#117 /\u200B_greater_than/]: r#72
[#117 /\u200B_greater_than_equal/]: r#72
[#117 /\u200B_less_than/]: r#72
[#117 /\u200B_less_than_equal/]: r#72
[#117 /\u200B_shift_left/]: r#72
[#117 /\u200B_shift_right/]: r#72
[#117 /\u200B_template_args_end/]: r#72
[#118 '!=']: r#73
[#118 '%']: r#73
[#118 '&&']: r#73
[#118 '&']: r#73
[#118 ')']: r#73
[#118 '*']: r#73
[#118 '+']: r#73
[#118 ',']: r#73
[#118 '-']: r#73
[#118 '.']: r#73
[#118 '/']: r#73
[#118 ':']: r#73
[#118 ';']: r#73
[#118 '==']: r#73
[#118 '[']: r#73
[#118 ']']: r#73
[#118 '^']: r#73
[#118 '{']: r#73
[#118 '|']: r#73
[#118 '||']: r#73
[#118 /\u200B_greater_than/]: r#73
[#118 /\u200B_greater_than_equal/]: r#73
[#118 /\u200B_less_than/]: r#73
[#118 /\u200B_less_than_equal/]: r#73
[#118 /\u200B_shift_left/]: r#73
[#118 /\u200B_shift_right/]: r#73
[#118 /\u200B_template_args_end/]: r#73
[#119 '!=']: r#74
[#119 '%']: r#74
[#119 '&&']: r#74
[#119 '&']: r#74
[#119 ')']: r#74
[#119 '*']: r#74
[#119 '+']: r#74
[#119 ',']: r#74
[#119 '-']: r#74
[#119 '.']: r#74
[#119 '/']: r#74
[#119 ':']: r#74
[#119 ';']: r#74
[#119 '==']: r#74
[#119 '[']: r#74
[#119 ']']: r#74
[#119 '^']: r#74
[#119 '{']: r#74
[#119 '|']: r#74
[#119 '||']: r#74
[#119 /\u200B_greater_than/]: r#74
[#119 /\u200B_greater_than_equal/]: r#74
[#119 /\u200B_less_than/]: r#74
[#119 /\u200B_less_than_equal/]: r#74
[#119 /\u200B_shift_left/]: r#74
[#119 /\u200B_shift_right/]: r#74
[#119 /\u200B_template_args_end/]: r#74
[#120 '!=']: r#75
[#120 '%']: r#75
[#120 '&&']: r#75
[#120 '&']: r#75
[#120 ')']: r#75
[#120 '*']: r#75
[#120 '+']: r#75
[#120 ',']: r#75
[#120 '-']: r#75
[#120 '.']: r#75
[#120 '/']: r#75
[#120 ':']: r#75
[#120 ';']: r#75
[#120 '==']: r#75
[#120 '[']: r#75
[#120 ']']: r#75
[#120 '^']: r#75
[#120 '{']: r#75
[#120 '|']: r#75
[#120 '||']: r#75
[#120 /\u200B_greater_than/]: r#75
[#120 /\u200B_greater_than_equal/]: r#75
[#120 /\u200B_less_than/]: r#75
[#120 /\u200B_less_than_equal/]: r#75
[#120 /\u200B_shift_left/]: r#75
[#120 /\u200B_shift_right/]: r#75
[#120 /\u200B_template_args_end/]: r#75
[#121 '!=']: r#76
[#121 '%']: r#76
[#121 '&&']: r#76
[#121 '&']: r#76
[#121 ')']: r#76
[#121 '*']: r#76
[#121 '+']: r#76
[#121 ',']: r#76
[#121 '-']: r#76
[#121 '.']: r#76
[#121 '/']: r#76
[#121 ':']: r#76
[#121 ';']: r#76
[#121 '==']: r#76
[#121 '[']: r#76
[#121 ']']: r#76
[#121 '^']: r#76
[#121 '{']: r#76
[#121 '|']: r#76
[#121 '||']: r#76
[#121 /\u200B_greater_than/]: r#76
[#121 /\u200B_greater_than_equal/]: r#76
[#121 /\u200B_less_than/]: r#76
[#121 /\u200B_less_than_equal/]: r#76
[#121 /\u200B_shift_left/]: r#76
[#121 /\u200B_shift_right/]: r#76
[#121 /\u200B_template_args_end/]: r#76
[#122 '!=']: r#77
[#122 '%']: r#77
[#122 '&&']: r#77
[#122 '&']: r#77
[#122 ')']: r#77
[#122 '*']: r#77
[#122 '+']: r#77
[#122 ',']: r#77
[#122 '-']: r#77
[#122 '.']: r#77
[#122 '/']: r#77
[#122 ':']: r#77
[#122 ';']: r#77
[#122 '==']: r#77
[#122 '[']: r#77
[#122 ']']: r#77
[#122 '^']: r#77
[#122 '{']: r#77
[#122 '|']: r#77
[#122 '||']: r#77
[#122 /\u200B_greater_than/]: r#77
[#122 /\u200B_greater_than_equal/]: r#77
[#122 /\u200B_less_than/]: r#77
[#122 /\u200B_less_than_equal/]: r#77
[#122 /\u200B_shift_left/]: r#77
[#122 /\u200B_shift_right/]: r#77
[#122 /\u200B_template_args_end/]: r#77
[#123 '!=']: r#78
[#123 '%']: r#78
[#123 '&&']: r#78
[#123 '&']: r#78
[#123 ')']: r#78
[#123 '*']: r#78
[#123 '+']: r#78
[#123 ',']: r#78
[#123 '-']: r#78
[#123 '.']: r#78
[#123 '/']: r#78
[#123 ':']: r#78
[#123 ';']: r#78
[#123 '==']: r#78
[#123 '[']: r#78
[#123 ']']: r#78
[#123 '^']: r#78
[#123 '{']: r#78
[#123 '|']: r#78
[#123 '||']: r#78
[#123 /\u200B_greater_than/]: r#78
[#123 /\u200B_greater_than_equal/]: r#78
[#123 /\u200B_less_than/]: r#78
[#123 /\u200B_less_than_equal/]: r#78
[#123 /\u200B_shift_left/]: r#78
[#123 /\u200B_shift_right/]: r#78
[#123 /\u200B_template_args_end/]: r#78
[#124 '!=']: r#79
[#124 '%']: r#79
[#124 '&&']: r#79
[#124 '&']: r#79
[#124 ')']: r#79
[#124 '*']: r#79
[#124 '+']: r#79
[#124 ',']: r#79
[#124 '-']: r#79
[#124 '.']: r#79
[#124 '/']: r#79
[#124 ':']: r#79
[#124 ';']: r#79
[#124 '==']: r#79
[#124 '[']: r#79
[#124 ']']: r#79
[#124 '^']: r#79
[#124 '{']: r#79
[#124 '|']: r#79
[#124 '||']: r#79
[#124 /\u200B_greater_than/]: r#79
[#124 /\u200B_greater_than_equal/]: r#79
[#124 /\u200B_less_than/]: r#79
[#124 /\u200B_less_than_equal/]: r#79
[#124 /\u200B_shift_left/]: r#79
[#124 /\u200B_shift_right/]: r#79
[#124 /\u200B_template_args_end/]: r#79
[#125 '!=']: r#80
[#125 '%']: r#80
[#125 '&&']: r#80
[#125 '&']: r#80
[#125 ')']: r#80
[#125 '*']: r#80
[#125 '+']: r#80
[#125 ',']: r#80
[#125 '-']: r#80
[#125 '.']: r#80
[#125 '/']: r#80
[#125 ':']: r#80
[#125 ';']: r#80
[#125 '==']: r#80
[#125 '[']: r#80
[#125 ']']: r#80
[#125 '^']: r#80
[#125 '{']: r#80
[#125 '|']: r#80
[#125 '||']: r#80
[#125 /\u200B_greater_than/]: r#80
[#125 /\u200B_greater_than_equal/]: r#80
[#125 /\u200B_less_than/]: r#80
[#125 /\u200B_less_than_equal/]: r#80
[#125 /\u200B_shift_left/]: r#80
[#125 /\u200B_shift_right/]: r#80
[#125 /\u200B_template_args_end/]: r#80
[#126 '!=']: r#81
[#126 '%']: r#81
[#126 '&&']: r#81
[#126 '&']: r#81
[#126 ')']: r#81
[#126 '*']: r#81
[#126 '+']: r#81
[#126 ',']: r#81
[#126 '-']: r#81
[#126 '.']: r#81
[#126 '/']: r#81
[#126 ':']: r#81
[#126 ';']: r#81
[#126 '==']: r#81
[#126 '[']: r#81
[#126 ']']: r#81
[#126 '^']: r#81
[#126 '{']: r#81
[#126 '|']: r#81
[#126 '||']: r#81
[#126 /\u200B_greater_than/]: r#81
[#126 /\u200B_greater_than_equal/]: r#81
[#126 /\u200B_less_than/]: r#81
[#126 /\u200B_less_than_equal/]: r#81
[#126 /\u200B_shift_left/]: r#81
[#126 /\u200B_shift_right/]: r#81
[#126 /\u200B_template_args_end/]: r#81
[#127 '(']: r#82
[#127 ')']: r#82
[#127 ',']: r#82
[#127 ';']: r#82
[#127 '=']: r#82
[#127 '{']: r#82
[#127 '}']: r#82
[#127 /\u200B_template_args_end/]: r#82
[#128 '(']: r#83
[#128 ')']: r#83
[#128 ',']: r#83
[#128 ';']: r#83
[#128 '=']: r#83
[#128 '{']: r#83
[#128 '}']: r#83
[#128 /\u200B_template_args_end/]: r#83
[#129 /\u200B_disambiguate_template/]: s#175
[#130 /\u200B_disambiguate_template/]: s#175
[#131 /\u200B_disambiguate_template/]: s#175
[#132 '(']: r#84
[#132 ')']: r#84
[#132 ',']: r#84
[#132 ';']: r#84
[#132 '=']: r#84
[#132 '{']: r#84
[#132 '}']: r#84
[#132 /\u200B_template_args_end/]: r#84
[#133 '(']: r#85
[#133 ')']: r#85
[#133 ',']: r#85
[#133 ';']: r#85
[#133 '=']: r#85
[#133 '{']: r#85
[#133 '}']: r#85
[#133 /\u200B_template_args_end/]: r#85
[#134 '(']: r#86
[#134 ')']: r#86
[#134 ',']: r#86
[#134 ';']: r#86
[#134 '=']: r#86
[#134 '{']: r#86
[#134 '}']: r#86
[#134 /\u200B_template_args_end/]: r#86
[#135 '(']: r#87
[#135 ')']: r#87
[#135 ',']: r#87
[#135 ';']: r#87
[#135 '=']: r#87
[#135 '{']: r#87
[#135 '}']: r#87
[#135 /\u200B_template_args_end/]: r#87
[#136 '(']: r#88
[#136 ')']: r#88
[#136 ',']: r#88
[#136 ';']: r#88
[#136 '=']: r#88
[#136 '{']: r#88
[#136 '}']: r#88
[#136 /\u200B_template_args_end/]: r#88
[#137 '(']: r#89
[#137 ')']: r#89
[#137 ',']: r#89
[#137 ';']: r#89
[#137 '=']: r#89
[#137 '{']: r#89
[#137 '}']: r#89
[#137 /\u200B_template_args_end/]: r#89
[#138 '(']: r#90
[#138 ')']: r#90
[#138 ',']: r#90
[#138 ';']: r#90
[#138 '=']: r#90
[#138 '{']: r#90
[#138 '}']: r#90
[#138 /\u200B_template_args_end/]: r#90
[#139 /\u200B_disambiguate_template/]: r#91
[#140 /\u200B_disambiguate_template/]: r#92
[#141 /\u200B_disambiguate_template/]: r#93
[#142 /\u200B_disambiguate_template/]: r#94
[#143 /\u200B_disambiguate_template/]: r#95
[#144 /\u200B_disambiguate_template/]: r#96
[#145 /\u200B_disambiguate_template/]: r#97
[#146 /\u200B_disambiguate_template/]: r#98
[#147 /\u200B_disambiguate_template/]: r#99
[#148 /\u200B_disambiguate_template/]: r#100
[#149 /\u200B_disambiguate_template/]: r#101
[#150 '{']: s#187
[#151 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#152 '{']: s#184
[#153 '=']: s#182
[#154 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#155 '=']: s#180
[#156 ':']: s#179
[#157 '=']: s#177
[#158 /\u200B_disambiguate_template/]: s#175
[#159 ';']: r#102
[#159 '@']: r#102
[#159 'alias']: r#102
[#159 'const']: r#102
[#159 'const_assert']: r#102
[#159 'fn']: r#102
[#159 'override']: r#102
[#159 'struct']: r#102
[#159 'var']: r#102
[#159 EndOfText]: r#102
[#160 ';']: r#103
[#160 '@']: r#103
[#160 'alias']: r#103
[#160 'const']: r#103
[#160 'const_assert']: r#103
[#160 'fn']: r#103
[#160 'override']: r#103
[#160 'struct']: r#103
[#160 'var']: r#103
[#160 EndOfText]: r#103
[#161 ';']: r#104
[#161 '@']: r#104
[#161 'alias']: r#104
[#161 'const']: r#104
[#161 'const_assert']: r#104
[#161 'fn']: r#104
[#161 'override']: r#104
[#161 'struct']: r#104
[#161 'var']: r#104
[#161 EndOfText]: r#104
[#162 ';']: r#105
[#162 '@']: r#105
[#162 'alias']: r#105
[#162 'const']: r#105
[#162 'const_assert']: r#105
[#162 'fn']: r#105
[#162 'override']: r#105
[#162 'struct']: r#105
[#162 'var']: r#105
[#162 EndOfText]: r#105
[#163 EndOfText]: r#106
[#164 ';']: r#107
[#164 '@']: r#107
[#164 'alias']: r#107
[#164 'const']: r#107
[#164 'const_assert']: r#107
[#164 'enable']: r#107
[#164 'fn']: r#107
[#164 'override']: r#107
[#164 'requires']: r#107
[#164 'struct']: r#107
[#164 'var']: r#107
[#164 EndOfText]: r#107
[#165 ',']: s#173
[#166 ',']: r#108
[#166 ';']: r#108
[#167 ',']: s#168
[#168 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#11
[#169 ';']: r#109
[#169 '@']: r#109
[#169 'alias']: r#109
[#169 'const']: r#109
[#169 'const_assert']: r#109
[#169 'enable']: r#109
[#169 'fn']: r#109
[#169 'override']: r#109
[#169 'requires']: r#109
[#169 'struct']: r#109
[#169 'var']: r#109
[#169 EndOfText]: r#109
[#170 ',']: r#110
[#170 ';']: r#110
[#171 ',']: r#111
[#171 ';']: r#111
[#172 ';']: r#112
[#173 ';']: r#113
[#174 /\u200B_template_args_start/]: s#298
[#175 '(']: r#114
[#175 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#114
[#175 /\u200B_template_args_start/]: r#114
[#176 ';']: r#115
[#177 '!']: s#69
[#177 '&']: s#72
[#177 '(']: s#84
[#177 '*']: s#71
[#177 '-']: s#68
[#177 'array']: s#88
[#177 'atomic']: s#102
[#177 'bitcast']: s#78
[#177 'bool']: s#95
[#177 'f16']: s#97
[#177 'f32']: s#96
[#177 'false']: s#94
[#177 'i32']: s#98
[#177 'mat2x2']: s#107
[#177 'mat2x3']: s#108
[#177 'mat2x4']: s#109
[#177 'mat3x2']: s#110
[#177 'mat3x3']: s#111
[#177 'mat3x4']: s#112
[#177 'mat4x2']: s#113
[#177 'mat4x3']: s#114
[#177 'mat4x4']: s#115
[#177 'ptr']: s#100
[#177 'sampler']: s#132
[#177 'sampler_comparison']: s#133
[#177 'texture_1d']: s#139
[#177 'texture_2d']: s#140
[#177 'texture_2d_array']: s#141
[#177 'texture_3d']: s#142
[#177 'texture_cube']: s#143
[#177 'texture_cube_array']: s#144
[#177 'texture_depth_2d']: s#134
[#177 'texture_depth_2d_array']: s#135
[#177 'texture_depth_cube']: s#136
[#177 'texture_depth_cube_array']: s#137
[#177 'texture_depth_multisampled_2d']: s#138
[#177 'texture_multisampled_2d']: s#145
[#177 'texture_storage_1d']: s#146
[#177 'texture_storage_2d']: s#147
[#177 'texture_storage_2d_array']: s#148
[#177 'texture_storage_3d']: s#149
[#177 'true']: s#93
[#177 'u32']: s#99
[#177 'vec2']: s#104
[#177 'vec3']: s#105
[#177 'vec4']: s#106
[#177 '~']: s#70
[#177 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#177 /0[fh]/]: s#119
[#177 /0[iu]?/]: s#116
[#177 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#177 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#177 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#177 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#177 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#177 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#177 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#177 /[1-9][0-9]*[fh]/]: s#120
[#177 /[1-9][0-9]*[iu]?/]: s#117
[#178 ';']: r#116
[#178 '=']: r#116
[#179 'array']: s#362
[#179 'atomic']: s#102
[#179 'bool']: s#95
[#179 'f16']: s#97
[#179 'f32']: s#96
[#179 'i32']: s#98
[#179 'mat2x2']: s#107
[#179 'mat2x3']: s#108
[#179 'mat2x4']: s#109
[#179 'mat3x2']: s#110
[#179 'mat3x3']: s#111
[#179 'mat3x4']: s#112
[#179 'mat4x2']: s#113
[#179 'mat4x3']: s#114
[#179 'mat4x4']: s#115
[#179 'ptr']: s#100
[#179 'sampler']: s#132
[#179 'sampler_comparison']: s#133
[#179 'texture_1d']: s#139
[#179 'texture_2d']: s#140
[#179 'texture_2d_array']: s#141
[#179 'texture_3d']: s#142
[#179 'texture_cube']: s#143
[#179 'texture_cube_array']: s#144
[#179 'texture_depth_2d']: s#134
[#179 'texture_depth_2d_array']: s#135
[#179 'texture_depth_cube']: s#136
[#179 'texture_depth_cube_array']: s#137
[#179 'texture_depth_multisampled_2d']: s#138
[#179 'texture_multisampled_2d']: s#145
[#179 'texture_storage_1d']: s#146
[#179 'texture_storage_2d']: s#147
[#179 'texture_storage_2d_array']: s#148
[#179 'texture_storage_3d']: s#149
[#179 'u32']: s#99
[#179 'vec2']: s#104
[#179 'vec3']: s#105
[#179 'vec4']: s#106
[#179 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#180 '!']: s#69
[#180 '&']: s#72
[#180 '(']: s#84
[#180 '*']: s#71
[#180 '-']: s#68
[#180 'array']: s#88
[#180 'atomic']: s#102
[#180 'bitcast']: s#78
[#180 'bool']: s#95
[#180 'f16']: s#97
[#180 'f32']: s#96
[#180 'false']: s#94
[#180 'i32']: s#98
[#180 'mat2x2']: s#107
[#180 'mat2x3']: s#108
[#180 'mat2x4']: s#109
[#180 'mat3x2']: s#110
[#180 'mat3x3']: s#111
[#180 'mat3x4']: s#112
[#180 'mat4x2']: s#113
[#180 'mat4x3']: s#114
[#180 'mat4x4']: s#115
[#180 'ptr']: s#100
[#180 'sampler']: s#132
[#180 'sampler_comparison']: s#133
[#180 'texture_1d']: s#139
[#180 'texture_2d']: s#140
[#180 'texture_2d_array']: s#141
[#180 'texture_3d']: s#142
[#180 'texture_cube']: s#143
[#180 'texture_cube_array']: s#144
[#180 'texture_depth_2d']: s#134
[#180 'texture_depth_2d_array']: s#135
[#180 'texture_depth_cube']: s#136
[#180 'texture_depth_cube_array']: s#137
[#180 'texture_depth_multisampled_2d']: s#138
[#180 'texture_multisampled_2d']: s#145
[#180 'texture_storage_1d']: s#146
[#180 'texture_storage_2d']: s#147
[#180 'texture_storage_2d_array']: s#148
[#180 'texture_storage_3d']: s#149
[#180 'true']: s#93
[#180 'u32']: s#99
[#180 'vec2']: s#104
[#180 'vec3']: s#105
[#180 'vec4']: s#106
[#180 '~']: s#70
[#180 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#180 /0[fh]/]: s#119
[#180 /0[iu]?/]: s#116
[#180 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#180 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#180 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#180 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#180 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#180 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#180 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#180 /[1-9][0-9]*[fh]/]: s#120
[#180 /[1-9][0-9]*[iu]?/]: s#117
[#181 '=']: s#364
[#182 'array']: s#362
[#182 'atomic']: s#102
[#182 'bool']: s#95
[#182 'f16']: s#97
[#182 'f32']: s#96
[#182 'i32']: s#98
[#182 'mat2x2']: s#107
[#182 'mat2x3']: s#108
[#182 'mat2x4']: s#109
[#182 'mat3x2']: s#110
[#182 'mat3x3']: s#111
[#182 'mat3x4']: s#112
[#182 'mat4x2']: s#113
[#182 'mat4x3']: s#114
[#182 'mat4x4']: s#115
[#182 'ptr']: s#100
[#182 'sampler']: s#132
[#182 'sampler_comparison']: s#133
[#182 'texture_1d']: s#139
[#182 'texture_2d']: s#140
[#182 'texture_2d_array']: s#141
[#182 'texture_3d']: s#142
[#182 'texture_cube']: s#143
[#182 'texture_cube_array']: s#144
[#182 'texture_depth_2d']: s#134
[#182 'texture_depth_2d_array']: s#135
[#182 'texture_depth_cube']: s#136
[#182 'texture_depth_cube_array']: s#137
[#182 'texture_depth_multisampled_2d']: s#138
[#182 'texture_multisampled_2d']: s#145
[#182 'texture_storage_1d']: s#146
[#182 'texture_storage_2d']: s#147
[#182 'texture_storage_2d_array']: s#148
[#182 'texture_storage_3d']: s#149
[#182 'u32']: s#99
[#182 'vec2']: s#104
[#182 'vec3']: s#105
[#182 'vec4']: s#106
[#182 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#183 ';']: r#117
[#183 '@']: r#117
[#183 'alias']: r#117
[#183 'const']: r#117
[#183 'const_assert']: r#117
[#183 'fn']: r#117
[#183 'override']: r#117
[#183 'struct']: r#117
[#183 'var']: r#117
[#183 EndOfText]: r#117
[#184 '@']: s#36
[#185 '(']: s#352
[#186 ';']: r#118
[#186 '@']: r#118
[#186 'alias']: r#118
[#186 'const']: r#118
[#186 'const_assert']: r#118
[#186 'fn']: r#118
[#186 'override']: r#118
[#186 'struct']: r#118
[#186 'var']: r#118
[#186 EndOfText]: r#118
[#187 '&']: s#350
[#187 '(']: s#351
[#187 '*']: s#349
[#187 ';']: s#314
[#187 '_']: s#347
[#187 'array']: s#88
[#187 'atomic']: s#102
[#187 'bool']: s#95
[#187 'break']: s#339
[#187 'const']: s#338
[#187 'const_assert']: s#31
[#187 'continue']: s#340
[#187 'discard']: s#325
[#187 'f16']: s#97
[#187 'f32']: s#96
[#187 'for']: s#333
[#187 'i32']: s#98
[#187 'if']: s#344
[#187 'let']: s#337
[#187 'loop']: s#332
[#187 'mat2x2']: s#107
[#187 'mat2x3']: s#108
[#187 'mat2x4']: s#109
[#187 'mat3x2']: s#110
[#187 'mat3x3']: s#111
[#187 'mat3x4']: s#112
[#187 'mat4x2']: s#113
[#187 'mat4x3']: s#114
[#187 'mat4x4']: s#115
[#187 'ptr']: s#100
[#187 'return']: s#329
[#187 'sampler']: s#132
[#187 'sampler_comparison']: s#133
[#187 'switch']: s#331
[#187 'texture_1d']: s#139
[#187 'texture_2d']: s#140
[#187 'texture_2d_array']: s#141
[#187 'texture_3d']: s#142
[#187 'texture_cube']: s#143
[#187 'texture_cube_array']: s#144
[#187 'texture_depth_2d']: s#134
[#187 'texture_depth_2d_array']: s#135
[#187 'texture_depth_cube']: s#136
[#187 'texture_depth_cube_array']: s#137
[#187 'texture_depth_multisampled_2d']: s#138
[#187 'texture_multisampled_2d']: s#145
[#187 'texture_storage_1d']: s#146
[#187 'texture_storage_2d']: s#147
[#187 'texture_storage_2d_array']: s#148
[#187 'texture_storage_3d']: s#149
[#187 'u32']: s#99
[#187 'var']: s#158
[#187 'vec2']: s#104
[#187 'vec3']: s#105
[#187 'vec4']: s#106
[#187 'while']: s#334
[#187 '{']: s#187
[#187 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#188 /\u200B_template_args_start/]: s#298
[#189 /\u200B_template_args_start/]: s#298
[#190 /\u200B_template_args_start/]: s#298
[#191 /\u200B_template_args_start/]: s#298
[#192 /\u200B_template_args_start/]: s#298
[#193 '(']: r#119
[#193 /\u200B_template_args_start/]: s#298
[#194 '(']: r#120
[#194 /\u200B_template_args_start/]: s#298
[#195 '(']: r#121
[#195 /\u200B_template_args_start/]: s#298
[#196 ')']: s#302
[#197 '!=']: r#122
[#197 '%']: r#122
[#197 '&&']: r#122
[#197 '&']: r#122
[#197 ')']: r#122
[#197 '*']: r#122
[#197 '+']: r#122
[#197 ',']: r#122
[#197 '-']: r#122
[#197 '.']: r#122
[#197 '/']: r#122
[#197 ':']: r#122
[#197 ';']: r#122
[#197 '==']: r#122
[#197 '[']: r#122
[#197 ']']: r#122
[#197 '^']: r#122
[#197 '{']: r#122
[#197 '|']: r#122
[#197 '||']: r#122
[#197 /\u200B_greater_than/]: r#122
[#197 /\u200B_greater_than_equal/]: r#122
[#197 /\u200B_less_than/]: r#122
[#197 /\u200B_less_than_equal/]: r#122
[#197 /\u200B_shift_left/]: r#122
[#197 /\u200B_shift_right/]: r#122
[#197 /\u200B_template_args_end/]: r#122
[#198 '!']: s#69
[#198 '&']: s#72
[#198 '(']: s#84
[#198 '*']: s#71
[#198 '-']: s#68
[#198 'array']: s#88
[#198 'atomic']: s#102
[#198 'bitcast']: s#78
[#198 'bool']: s#95
[#198 'f16']: s#97
[#198 'f32']: s#96
[#198 'false']: s#94
[#198 'i32']: s#98
[#198 'mat2x2']: s#107
[#198 'mat2x3']: s#108
[#198 'mat2x4']: s#109
[#198 'mat3x2']: s#110
[#198 'mat3x3']: s#111
[#198 'mat3x4']: s#112
[#198 'mat4x2']: s#113
[#198 'mat4x3']: s#114
[#198 'mat4x4']: s#115
[#198 'ptr']: s#100
[#198 'sampler']: s#132
[#198 'sampler_comparison']: s#133
[#198 'texture_1d']: s#139
[#198 'texture_2d']: s#140
[#198 'texture_2d_array']: s#141
[#198 'texture_3d']: s#142
[#198 'texture_cube']: s#143
[#198 'texture_cube_array']: s#144
[#198 'texture_depth_2d']: s#134
[#198 'texture_depth_2d_array']: s#135
[#198 'texture_depth_cube']: s#136
[#198 'texture_depth_cube_array']: s#137
[#198 'texture_depth_multisampled_2d']: s#138
[#198 'texture_multisampled_2d']: s#145
[#198 'texture_storage_1d']: s#146
[#198 'texture_storage_2d']: s#147
[#198 'texture_storage_2d_array']: s#148
[#198 'texture_storage_3d']: s#149
[#198 'true']: s#93
[#198 'u32']: s#99
[#198 'vec2']: s#104
[#198 'vec3']: s#105
[#198 'vec4']: s#106
[#198 '~']: s#70
[#198 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#198 /0[fh]/]: s#119
[#198 /0[iu]?/]: s#116
[#198 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#198 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#198 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#198 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#198 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#198 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#198 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#198 /[1-9][0-9]*[fh]/]: s#120
[#198 /[1-9][0-9]*[iu]?/]: s#117
[#199 /\u200B_template_args_start/]: s#298
[#200 '!=']: r#123
[#200 '%']: r#123
[#200 '&&']: r#123
[#200 '&']: r#123
[#200 ')']: r#123
[#200 '*']: r#123
[#200 '+']: r#123
[#200 ',']: r#123
[#200 '-']: r#123
[#200 '/']: r#123
[#200 ':']: r#123
[#200 ';']: r#123
[#200 '==']: r#123
[#200 ']']: r#123
[#200 '^']: r#123
[#200 '{']: r#123
[#200 '|']: r#123
[#200 '||']: r#123
[#200 /\u200B_greater_than/]: r#123
[#200 /\u200B_greater_than_equal/]: r#123
[#200 /\u200B_less_than/]: r#123
[#200 /\u200B_less_than_equal/]: r#123
[#200 /\u200B_shift_left/]: r#123
[#200 /\u200B_shift_right/]: r#123
[#200 /\u200B_template_args_end/]: r#123
[#201 '!=']: r#124
[#201 '%']: r#124
[#201 '&&']: r#124
[#201 '&']: r#124
[#201 ')']: r#124
[#201 '*']: r#124
[#201 '+']: r#124
[#201 ',']: r#124
[#201 '-']: r#124
[#201 '/']: r#124
[#201 ':']: r#124
[#201 ';']: r#124
[#201 '==']: r#124
[#201 ']']: r#124
[#201 '^']: r#124
[#201 '{']: r#124
[#201 '|']: r#124
[#201 '||']: r#124
[#201 /\u200B_greater_than/]: r#124
[#201 /\u200B_greater_than_equal/]: r#124
[#201 /\u200B_less_than/]: r#124
[#201 /\u200B_less_than_equal/]: r#124
[#201 /\u200B_shift_left/]: r#124
[#201 /\u200B_shift_right/]: r#124
[#201 /\u200B_template_args_end/]: r#124
[#202 '!']: s#69
[#202 '&']: s#72
[#202 '(']: s#84
[#202 '*']: s#71
[#202 '-']: s#68
[#202 'array']: s#88
[#202 'atomic']: s#102
[#202 'bitcast']: s#78
[#202 'bool']: s#95
[#202 'f16']: s#97
[#202 'f32']: s#96
[#202 'false']: s#94
[#202 'i32']: s#98
[#202 'mat2x2']: s#107
[#202 'mat2x3']: s#108
[#202 'mat2x4']: s#109
[#202 'mat3x2']: s#110
[#202 'mat3x3']: s#111
[#202 'mat3x4']: s#112
[#202 'mat4x2']: s#113
[#202 'mat4x3']: s#114
[#202 'mat4x4']: s#115
[#202 'ptr']: s#100
[#202 'sampler']: s#132
[#202 'sampler_comparison']: s#133
[#202 'texture_1d']: s#139
[#202 'texture_2d']: s#140
[#202 'texture_2d_array']: s#141
[#202 'texture_3d']: s#142
[#202 'texture_cube']: s#143
[#202 'texture_cube_array']: s#144
[#202 'texture_depth_2d']: s#134
[#202 'texture_depth_2d_array']: s#135
[#202 'texture_depth_cube']: s#136
[#202 'texture_depth_cube_array']: s#137
[#202 'texture_depth_multisampled_2d']: s#138
[#202 'texture_multisampled_2d']: s#145
[#202 'texture_storage_1d']: s#146
[#202 'texture_storage_2d']: s#147
[#202 'texture_storage_2d_array']: s#148
[#202 'texture_storage_3d']: s#149
[#202 'true']: s#93
[#202 'u32']: s#99
[#202 'vec2']: s#104
[#202 'vec3']: s#105
[#202 'vec4']: s#106
[#202 '~']: s#70
[#202 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#202 /0[fh]/]: s#119
[#202 /0[iu]?/]: s#116
[#202 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#202 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#202 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#202 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#202 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#202 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#202 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#202 /[1-9][0-9]*[fh]/]: s#120
[#202 /[1-9][0-9]*[iu]?/]: s#117
[#203 '/[rgba]/']: s#288
[#203 '/[rgba][rgba]/']: s#289
[#203 '/[rgba][rgba][rgba]/']: s#290
[#203 '/[rgba][rgba][rgba][rgba]/']: s#291
[#203 '/[xyzw]/']: s#292
[#203 '/[xyzw][xyzw]/']: s#293
[#203 '/[xyzw][xyzw][xyzw]/']: s#294
[#203 '/[xyzw][xyzw][xyzw][xyzw]/']: s#295
[#203 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#287
[#204 '!=']: r#125
[#204 '%']: r#125
[#204 '&&']: r#125
[#204 '&']: r#125
[#204 ')']: r#125
[#204 '*']: r#125
[#204 '+']: r#125
[#204 ',']: r#125
[#204 '-']: r#125
[#204 '/']: r#125
[#204 ':']: r#125
[#204 ';']: r#125
[#204 '==']: r#125
[#204 ']']: r#125
[#204 '^']: r#125
[#204 '{']: r#125
[#204 '|']: r#125
[#204 '||']: r#125
[#204 /\u200B_greater_than/]: r#125
[#204 /\u200B_greater_than_equal/]: r#125
[#204 /\u200B_less_than/]: r#125
[#204 /\u200B_less_than_equal/]: r#125
[#204 /\u200B_shift_left/]: r#125
[#204 /\u200B_shift_right/]: r#125
[#204 /\u200B_template_args_end/]: r#125
[#205 '!=']: r#126
[#205 '%']: r#126
[#205 '&&']: r#126
[#205 '&']: r#126
[#205 ')']: r#126
[#205 '*']: r#126
[#205 '+']: r#126
[#205 ',']: r#126
[#205 '-']: r#126
[#205 '/']: r#126
[#205 ':']: r#126
[#205 ';']: r#126
[#205 '==']: r#126
[#205 ']']: r#126
[#205 '^']: r#126
[#205 '{']: r#126
[#205 '|']: r#126
[#205 '||']: r#126
[#205 /\u200B_greater_than/]: r#126
[#205 /\u200B_greater_than_equal/]: r#126
[#205 /\u200B_less_than/]: r#126
[#205 /\u200B_less_than_equal/]: r#126
[#205 /\u200B_shift_left/]: r#126
[#205 /\u200B_shift_right/]: r#126
[#205 /\u200B_template_args_end/]: r#126
[#206 '!=']: r#127
[#206 '%']: r#127
[#206 '&&']: r#127
[#206 '&']: r#127
[#206 ')']: r#127
[#206 '*']: r#127
[#206 '+']: r#127
[#206 ',']: r#127
[#206 '-']: r#127
[#206 '/']: r#127
[#206 ':']: r#127
[#206 ';']: r#127
[#206 '==']: r#127
[#206 ']']: r#127
[#206 '^']: r#127
[#206 '{']: r#127
[#206 '|']: r#127
[#206 '||']: r#127
[#206 /\u200B_greater_than/]: r#127
[#206 /\u200B_greater_than_equal/]: r#127
[#206 /\u200B_less_than/]: r#127
[#206 /\u200B_less_than_equal/]: r#127
[#206 /\u200B_shift_left/]: r#127
[#206 /\u200B_shift_right/]: r#127
[#206 /\u200B_template_args_end/]: r#127
[#207 '!=']: r#128
[#207 '%']: r#128
[#207 '&&']: r#128
[#207 '&']: r#128
[#207 ')']: r#128
[#207 '*']: r#128
[#207 '+']: r#128
[#207 ',']: r#128
[#207 '-']: r#128
[#207 '/']: r#128
[#207 ':']: r#128
[#207 ';']: r#128
[#207 '==']: r#128
[#207 ']']: r#128
[#207 '^']: r#128
[#207 '{']: r#128
[#207 '|']: r#128
[#207 '||']: r#128
[#207 /\u200B_greater_than/]: r#128
[#207 /\u200B_greater_than_equal/]: r#128
[#207 /\u200B_less_than/]: r#128
[#207 /\u200B_less_than_equal/]: r#128
[#207 /\u200B_shift_left/]: r#128
[#207 /\u200B_shift_right/]: r#128
[#207 /\u200B_template_args_end/]: r#128
[#208 '!=']: r#129
[#208 '%']: r#129
[#208 '&&']: r#129
[#208 '&']: r#129
[#208 ')']: r#129
[#208 '*']: r#129
[#208 '+']: r#129
[#208 ',']: r#129
[#208 '-']: r#129
[#208 '/']: r#129
[#208 ':']: r#129
[#208 ';']: r#129
[#208 '==']: r#129
[#208 ']']: r#129
[#208 '^']: r#129
[#208 '{']: r#129
[#208 '|']: r#129
[#208 '||']: r#129
[#208 /\u200B_greater_than/]: r#129
[#208 /\u200B_greater_than_equal/]: r#129
[#208 /\u200B_less_than/]: r#129
[#208 /\u200B_less_than_equal/]: r#129
[#208 /\u200B_shift_left/]: r#129
[#208 /\u200B_shift_right/]: r#129
[#208 /\u200B_template_args_end/]: r#129
[#209 '!']: s#69
[#209 '&']: s#72
[#209 '(']: s#84
[#209 '*']: s#71
[#209 '-']: s#68
[#209 'array']: s#88
[#209 'atomic']: s#102
[#209 'bitcast']: s#78
[#209 'bool']: s#95
[#209 'f16']: s#97
[#209 'f32']: s#96
[#209 'false']: s#94
[#209 'i32']: s#98
[#209 'mat2x2']: s#107
[#209 'mat2x3']: s#108
[#209 'mat2x4']: s#109
[#209 'mat3x2']: s#110
[#209 'mat3x3']: s#111
[#209 'mat3x4']: s#112
[#209 'mat4x2']: s#113
[#209 'mat4x3']: s#114
[#209 'mat4x4']: s#115
[#209 'ptr']: s#100
[#209 'sampler']: s#132
[#209 'sampler_comparison']: s#133
[#209 'texture_1d']: s#139
[#209 'texture_2d']: s#140
[#209 'texture_2d_array']: s#141
[#209 'texture_3d']: s#142
[#209 'texture_cube']: s#143
[#209 'texture_cube_array']: s#144
[#209 'texture_depth_2d']: s#134
[#209 'texture_depth_2d_array']: s#135
[#209 'texture_depth_cube']: s#136
[#209 'texture_depth_cube_array']: s#137
[#209 'texture_depth_multisampled_2d']: s#138
[#209 'texture_multisampled_2d']: s#145
[#209 'texture_storage_1d']: s#146
[#209 'texture_storage_2d']: s#147
[#209 'texture_storage_2d_array']: s#148
[#209 'texture_storage_3d']: s#149
[#209 'true']: s#93
[#209 'u32']: s#99
[#209 'vec2']: s#104
[#209 'vec3']: s#105
[#209 'vec4']: s#106
[#209 '~']: s#70
[#209 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#209 /0[fh]/]: s#119
[#209 /0[iu]?/]: s#116
[#209 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#209 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#209 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#209 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#209 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#209 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#209 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#209 /[1-9][0-9]*[fh]/]: s#120
[#209 /[1-9][0-9]*[iu]?/]: s#117
[#210 '!']: r#130
[#210 '&']: r#130
[#210 '(']: r#130
[#210 '*']: r#130
[#210 '-']: r#130
[#210 'array']: r#130
[#210 'atomic']: r#130
[#210 'bitcast']: r#130
[#210 'bool']: r#130
[#210 'f16']: r#130
[#210 'f32']: r#130
[#210 'false']: r#130
[#210 'i32']: r#130
[#210 'mat2x2']: r#130
[#210 'mat2x3']: r#130
[#210 'mat2x4']: r#130
[#210 'mat3x2']: r#130
[#210 'mat3x3']: r#130
[#210 'mat3x4']: r#130
[#210 'mat4x2']: r#130
[#210 'mat4x3']: r#130
[#210 'mat4x4']: r#130
[#210 'ptr']: r#130
[#210 'sampler']: r#130
[#210 'sampler_comparison']: r#130
[#210 'texture_1d']: r#130
[#210 'texture_2d']: r#130
[#210 'texture_2d_array']: r#130
[#210 'texture_3d']: r#130
[#210 'texture_cube']: r#130
[#210 'texture_cube_array']: r#130
[#210 'texture_depth_2d']: r#130
[#210 'texture_depth_2d_array']: r#130
[#210 'texture_depth_cube']: r#130
[#210 'texture_depth_cube_array']: r#130
[#210 'texture_depth_multisampled_2d']: r#130
[#210 'texture_multisampled_2d']: r#130
[#210 'texture_storage_1d']: r#130
[#210 'texture_storage_2d']: r#130
[#210 'texture_storage_2d_array']: r#130
[#210 'texture_storage_3d']: r#130
[#210 'true']: r#130
[#210 'u32']: r#130
[#210 'vec2']: r#130
[#210 'vec3']: r#130
[#210 'vec4']: r#130
[#210 '~']: r#130
[#210 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#130
[#210 /0[fh]/]: r#130
[#210 /0[iu]?/]: r#130
[#210 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#130
[#210 /0[xX][0-9a-fA-F]+[iu]?/]: r#130
[#210 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#130
[#210 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#130
[#210 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#130
[#210 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#130
[#210 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#130
[#210 /[1-9][0-9]*[fh]/]: r#130
[#210 /[1-9][0-9]*[iu]?/]: r#130
[#211 '!']: r#131
[#211 '&']: r#131
[#211 '(']: r#131
[#211 '*']: r#131
[#211 '-']: r#131
[#211 'array']: r#131
[#211 'atomic']: r#131
[#211 'bitcast']: r#131
[#211 'bool']: r#131
[#211 'f16']: r#131
[#211 'f32']: r#131
[#211 'false']: r#131
[#211 'i32']: r#131
[#211 'mat2x2']: r#131
[#211 'mat2x3']: r#131
[#211 'mat2x4']: r#131
[#211 'mat3x2']: r#131
[#211 'mat3x3']: r#131
[#211 'mat3x4']: r#131
[#211 'mat4x2']: r#131
[#211 'mat4x3']: r#131
[#211 'mat4x4']: r#131
[#211 'ptr']: r#131
[#211 'sampler']: r#131
[#211 'sampler_comparison']: r#131
[#211 'texture_1d']: r#131
[#211 'texture_2d']: r#131
[#211 'texture_2d_array']: r#131
[#211 'texture_3d']: r#131
[#211 'texture_cube']: r#131
[#211 'texture_cube_array']: r#131
[#211 'texture_depth_2d']: r#131
[#211 'texture_depth_2d_array']: r#131
[#211 'texture_depth_cube']: r#131
[#211 'texture_depth_cube_array']: r#131
[#211 'texture_depth_multisampled_2d']: r#131
[#211 'texture_multisampled_2d']: r#131
[#211 'texture_storage_1d']: r#131
[#211 'texture_storage_2d']: r#131
[#211 'texture_storage_2d_array']: r#131
[#211 'texture_storage_3d']: r#131
[#211 'true']: r#131
[#211 'u32']: r#131
[#211 'vec2']: r#131
[#211 'vec3']: r#131
[#211 'vec4']: r#131
[#211 '~']: r#131
[#211 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#131
[#211 /0[fh]/]: r#131
[#211 /0[iu]?/]: r#131
[#211 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#131
[#211 /0[xX][0-9a-fA-F]+[iu]?/]: r#131
[#211 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#131
[#211 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#131
[#211 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#131
[#211 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#131
[#211 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#131
[#211 /[1-9][0-9]*[fh]/]: r#131
[#211 /[1-9][0-9]*[iu]?/]: r#131
[#212 '!']: r#132
[#212 '&']: r#132
[#212 '(']: r#132
[#212 '*']: r#132
[#212 '-']: r#132
[#212 'array']: r#132
[#212 'atomic']: r#132
[#212 'bitcast']: r#132
[#212 'bool']: r#132
[#212 'f16']: r#132
[#212 'f32']: r#132
[#212 'false']: r#132
[#212 'i32']: r#132
[#212 'mat2x2']: r#132
[#212 'mat2x3']: r#132
[#212 'mat2x4']: r#132
[#212 'mat3x2']: r#132
[#212 'mat3x3']: r#132
[#212 'mat3x4']: r#132
[#212 'mat4x2']: r#132
[#212 'mat4x3']: r#132
[#212 'mat4x4']: r#132
[#212 'ptr']: r#132
[#212 'sampler']: r#132
[#212 'sampler_comparison']: r#132
[#212 'texture_1d']: r#132
[#212 'texture_2d']: r#132
[#212 'texture_2d_array']: r#132
[#212 'texture_3d']: r#132
[#212 'texture_cube']: r#132
[#212 'texture_cube_array']: r#132
[#212 'texture_depth_2d']: r#132
[#212 'texture_depth_2d_array']: r#132
[#212 'texture_depth_cube']: r#132
[#212 'texture_depth_cube_array']: r#132
[#212 'texture_depth_multisampled_2d']: r#132
[#212 'texture_multisampled_2d']: r#132
[#212 'texture_storage_1d']: r#132
[#212 'texture_storage_2d']: r#132
[#212 'texture_storage_2d_array']: r#132
[#212 'texture_storage_3d']: r#132
[#212 'true']: r#132
[#212 'u32']: r#132
[#212 'vec2']: r#132
[#212 'vec3']: r#132
[#212 'vec4']: r#132
[#212 '~']: r#132
[#212 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#132
[#212 /0[fh]/]: r#132
[#212 /0[iu]?/]: r#132
[#212 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#132
[#212 /0[xX][0-9a-fA-F]+[iu]?/]: r#132
[#212 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#132
[#212 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#132
[#212 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#132
[#212 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#132
[#212 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#132
[#212 /[1-9][0-9]*[fh]/]: r#132
[#212 /[1-9][0-9]*[iu]?/]: r#132
[#213 '!']: s#69
[#213 '&']: s#72
[#213 '(']: s#84
[#213 '*']: s#71
[#213 '-']: s#68
[#213 'array']: s#88
[#213 'atomic']: s#102
[#213 'bitcast']: s#78
[#213 'bool']: s#95
[#213 'f16']: s#97
[#213 'f32']: s#96
[#213 'false']: s#94
[#213 'i32']: s#98
[#213 'mat2x2']: s#107
[#213 'mat2x3']: s#108
[#213 'mat2x4']: s#109
[#213 'mat3x2']: s#110
[#213 'mat3x3']: s#111
[#213 'mat3x4']: s#112
[#213 'mat4x2']: s#113
[#213 'mat4x3']: s#114
[#213 'mat4x4']: s#115
[#213 'ptr']: s#100
[#213 'sampler']: s#132
[#213 'sampler_comparison']: s#133
[#213 'texture_1d']: s#139
[#213 'texture_2d']: s#140
[#213 'texture_2d_array']: s#141
[#213 'texture_3d']: s#142
[#213 'texture_cube']: s#143
[#213 'texture_cube_array']: s#144
[#213 'texture_depth_2d']: s#134
[#213 'texture_depth_2d_array']: s#135
[#213 'texture_depth_cube']: s#136
[#213 'texture_depth_cube_array']: s#137
[#213 'texture_depth_multisampled_2d']: s#138
[#213 'texture_multisampled_2d']: s#145
[#213 'texture_storage_1d']: s#146
[#213 'texture_storage_2d']: s#147
[#213 'texture_storage_2d_array']: s#148
[#213 'texture_storage_3d']: s#149
[#213 'true']: s#93
[#213 'u32']: s#99
[#213 'vec2']: s#104
[#213 'vec3']: s#105
[#213 'vec4']: s#106
[#213 '~']: s#70
[#213 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#213 /0[fh]/]: s#119
[#213 /0[iu]?/]: s#116
[#213 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#213 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#213 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#213 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#213 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#213 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#213 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#213 /[1-9][0-9]*[fh]/]: s#120
[#213 /[1-9][0-9]*[iu]?/]: s#117
[#214 '!']: s#69
[#214 '&']: s#72
[#214 '(']: s#84
[#214 '*']: s#71
[#214 '-']: s#68
[#214 'array']: s#88
[#214 'atomic']: s#102
[#214 'bitcast']: s#78
[#214 'bool']: s#95
[#214 'f16']: s#97
[#214 'f32']: s#96
[#214 'false']: s#94
[#214 'i32']: s#98
[#214 'mat2x2']: s#107
[#214 'mat2x3']: s#108
[#214 'mat2x4']: s#109
[#214 'mat3x2']: s#110
[#214 'mat3x3']: s#111
[#214 'mat3x4']: s#112
[#214 'mat4x2']: s#113
[#214 'mat4x3']: s#114
[#214 'mat4x4']: s#115
[#214 'ptr']: s#100
[#214 'sampler']: s#132
[#214 'sampler_comparison']: s#133
[#214 'texture_1d']: s#139
[#214 'texture_2d']: s#140
[#214 'texture_2d_array']: s#141
[#214 'texture_3d']: s#142
[#214 'texture_cube']: s#143
[#214 'texture_cube_array']: s#144
[#214 'texture_depth_2d']: s#134
[#214 'texture_depth_2d_array']: s#135
[#214 'texture_depth_cube']: s#136
[#214 'texture_depth_cube_array']: s#137
[#214 'texture_depth_multisampled_2d']: s#138
[#214 'texture_multisampled_2d']: s#145
[#214 'texture_storage_1d']: s#146
[#214 'texture_storage_2d']: s#147
[#214 'texture_storage_2d_array']: s#148
[#214 'texture_storage_3d']: s#149
[#214 'true']: s#93
[#214 'u32']: s#99
[#214 'vec2']: s#104
[#214 'vec3']: s#105
[#214 'vec4']: s#106
[#214 '~']: s#70
[#214 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#214 /0[fh]/]: s#119
[#214 /0[iu]?/]: s#116
[#214 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#214 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#214 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#214 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#214 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#214 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#214 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#214 /[1-9][0-9]*[fh]/]: s#120
[#214 /[1-9][0-9]*[iu]?/]: s#117
[#215 '!']: r#133
[#215 '&']: r#133
[#215 '(']: r#133
[#215 '*']: r#133
[#215 '-']: r#133
[#215 'array']: r#133
[#215 'atomic']: r#133
[#215 'bitcast']: r#133
[#215 'bool']: r#133
[#215 'f16']: r#133
[#215 'f32']: r#133
[#215 'false']: r#133
[#215 'i32']: r#133
[#215 'mat2x2']: r#133
[#215 'mat2x3']: r#133
[#215 'mat2x4']: r#133
[#215 'mat3x2']: r#133
[#215 'mat3x3']: r#133
[#215 'mat3x4']: r#133
[#215 'mat4x2']: r#133
[#215 'mat4x3']: r#133
[#215 'mat4x4']: r#133
[#215 'ptr']: r#133
[#215 'sampler']: r#133
[#215 'sampler_comparison']: r#133
[#215 'texture_1d']: r#133
[#215 'texture_2d']: r#133
[#215 'texture_2d_array']: r#133
[#215 'texture_3d']: r#133
[#215 'texture_cube']: r#133
[#215 'texture_cube_array']: r#133
[#215 'texture_depth_2d']: r#133
[#215 'texture_depth_2d_array']: r#133
[#215 'texture_depth_cube']: r#133
[#215 'texture_depth_cube_array']: r#133
[#215 'texture_depth_multisampled_2d']: r#133
[#215 'texture_multisampled_2d']: r#133
[#215 'texture_storage_1d']: r#133
[#215 'texture_storage_2d']: r#133
[#215 'texture_storage_2d_array']: r#133
[#215 'texture_storage_3d']: r#133
[#215 'true']: r#133
[#215 'u32']: r#133
[#215 'vec2']: r#133
[#215 'vec3']: r#133
[#215 'vec4']: r#133
[#215 '~']: r#133
[#215 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#133
[#215 /0[fh]/]: r#133
[#215 /0[iu]?/]: r#133
[#215 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#133
[#215 /0[xX][0-9a-fA-F]+[iu]?/]: r#133
[#215 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#133
[#215 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#133
[#215 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#133
[#215 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#133
[#215 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#133
[#215 /[1-9][0-9]*[fh]/]: r#133
[#215 /[1-9][0-9]*[iu]?/]: r#133
[#216 '!']: r#134
[#216 '&']: r#134
[#216 '(']: r#134
[#216 '*']: r#134
[#216 '-']: r#134
[#216 'array']: r#134
[#216 'atomic']: r#134
[#216 'bitcast']: r#134
[#216 'bool']: r#134
[#216 'f16']: r#134
[#216 'f32']: r#134
[#216 'false']: r#134
[#216 'i32']: r#134
[#216 'mat2x2']: r#134
[#216 'mat2x3']: r#134
[#216 'mat2x4']: r#134
[#216 'mat3x2']: r#134
[#216 'mat3x3']: r#134
[#216 'mat3x4']: r#134
[#216 'mat4x2']: r#134
[#216 'mat4x3']: r#134
[#216 'mat4x4']: r#134
[#216 'ptr']: r#134
[#216 'sampler']: r#134
[#216 'sampler_comparison']: r#134
[#216 'texture_1d']: r#134
[#216 'texture_2d']: r#134
[#216 'texture_2d_array']: r#134
[#216 'texture_3d']: r#134
[#216 'texture_cube']: r#134
[#216 'texture_cube_array']: r#134
[#216 'texture_depth_2d']: r#134
[#216 'texture_depth_2d_array']: r#134
[#216 'texture_depth_cube']: r#134
[#216 'texture_depth_cube_array']: r#134
[#216 'texture_depth_multisampled_2d']: r#134
[#216 'texture_multisampled_2d']: r#134
[#216 'texture_storage_1d']: r#134
[#216 'texture_storage_2d']: r#134
[#216 'texture_storage_2d_array']: r#134
[#216 'texture_storage_3d']: r#134
[#216 'true']: r#134
[#216 'u32']: r#134
[#216 'vec2']: r#134
[#216 'vec3']: r#134
[#216 'vec4']: r#134
[#216 '~']: r#134
[#216 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#134
[#216 /0[fh]/]: r#134
[#216 /0[iu]?/]: r#134
[#216 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#134
[#216 /0[xX][0-9a-fA-F]+[iu]?/]: r#134
[#216 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#134
[#216 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#134
[#216 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#134
[#216 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#134
[#216 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#134
[#216 /[1-9][0-9]*[fh]/]: r#134
[#216 /[1-9][0-9]*[iu]?/]: r#134
[#217 '!']: s#69
[#217 '&']: s#72
[#217 '(']: s#84
[#217 '*']: s#71
[#217 '-']: s#68
[#217 'array']: s#88
[#217 'atomic']: s#102
[#217 'bitcast']: s#78
[#217 'bool']: s#95
[#217 'f16']: s#97
[#217 'f32']: s#96
[#217 'false']: s#94
[#217 'i32']: s#98
[#217 'mat2x2']: s#107
[#217 'mat2x3']: s#108
[#217 'mat2x4']: s#109
[#217 'mat3x2']: s#110
[#217 'mat3x3']: s#111
[#217 'mat3x4']: s#112
[#217 'mat4x2']: s#113
[#217 'mat4x3']: s#114
[#217 'mat4x4']: s#115
[#217 'ptr']: s#100
[#217 'sampler']: s#132
[#217 'sampler_comparison']: s#133
[#217 'texture_1d']: s#139
[#217 'texture_2d']: s#140
[#217 'texture_2d_array']: s#141
[#217 'texture_3d']: s#142
[#217 'texture_cube']: s#143
[#217 'texture_cube_array']: s#144
[#217 'texture_depth_2d']: s#134
[#217 'texture_depth_2d_array']: s#135
[#217 'texture_depth_cube']: s#136
[#217 'texture_depth_cube_array']: s#137
[#217 'texture_depth_multisampled_2d']: s#138
[#217 'texture_multisampled_2d']: s#145
[#217 'texture_storage_1d']: s#146
[#217 'texture_storage_2d']: s#147
[#217 'texture_storage_2d_array']: s#148
[#217 'texture_storage_3d']: s#149
[#217 'true']: s#93
[#217 'u32']: s#99
[#217 'vec2']: s#104
[#217 'vec3']: s#105
[#217 'vec4']: s#106
[#217 '~']: s#70
[#217 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#217 /0[fh]/]: s#119
[#217 /0[iu]?/]: s#116
[#217 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#217 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#217 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#217 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#217 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#217 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#217 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#217 /[1-9][0-9]*[fh]/]: s#120
[#217 /[1-9][0-9]*[iu]?/]: s#117
[#218 '!']: r#135
[#218 '&']: r#135
[#218 '(']: r#135
[#218 '*']: r#135
[#218 '-']: r#135
[#218 'array']: r#135
[#218 'atomic']: r#135
[#218 'bitcast']: r#135
[#218 'bool']: r#135
[#218 'f16']: r#135
[#218 'f32']: r#135
[#218 'false']: r#135
[#218 'i32']: r#135
[#218 'mat2x2']: r#135
[#218 'mat2x3']: r#135
[#218 'mat2x4']: r#135
[#218 'mat3x2']: r#135
[#218 'mat3x3']: r#135
[#218 'mat3x4']: r#135
[#218 'mat4x2']: r#135
[#218 'mat4x3']: r#135
[#218 'mat4x4']: r#135
[#218 'ptr']: r#135
[#218 'sampler']: r#135
[#218 'sampler_comparison']: r#135
[#218 'texture_1d']: r#135
[#218 'texture_2d']: r#135
[#218 'texture_2d_array']: r#135
[#218 'texture_3d']: r#135
[#218 'texture_cube']: r#135
[#218 'texture_cube_array']: r#135
[#218 'texture_depth_2d']: r#135
[#218 'texture_depth_2d_array']: r#135
[#218 'texture_depth_cube']: r#135
[#218 'texture_depth_cube_array']: r#135
[#218 'texture_depth_multisampled_2d']: r#135
[#218 'texture_multisampled_2d']: r#135
[#218 'texture_storage_1d']: r#135
[#218 'texture_storage_2d']: r#135
[#218 'texture_storage_2d_array']: r#135
[#218 'texture_storage_3d']: r#135
[#218 'true']: r#135
[#218 'u32']: r#135
[#218 'vec2']: r#135
[#218 'vec3']: r#135
[#218 'vec4']: r#135
[#218 '~']: r#135
[#218 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#135
[#218 /0[fh]/]: r#135
[#218 /0[iu]?/]: r#135
[#218 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#135
[#218 /0[xX][0-9a-fA-F]+[iu]?/]: r#135
[#218 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#135
[#218 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#135
[#218 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#135
[#218 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#135
[#218 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#135
[#218 /[1-9][0-9]*[fh]/]: r#135
[#218 /[1-9][0-9]*[iu]?/]: r#135
[#219 '!']: r#136
[#219 '&']: r#136
[#219 '(']: r#136
[#219 '*']: r#136
[#219 '-']: r#136
[#219 'array']: r#136
[#219 'atomic']: r#136
[#219 'bitcast']: r#136
[#219 'bool']: r#136
[#219 'f16']: r#136
[#219 'f32']: r#136
[#219 'false']: r#136
[#219 'i32']: r#136
[#219 'mat2x2']: r#136
[#219 'mat2x3']: r#136
[#219 'mat2x4']: r#136
[#219 'mat3x2']: r#136
[#219 'mat3x3']: r#136
[#219 'mat3x4']: r#136
[#219 'mat4x2']: r#136
[#219 'mat4x3']: r#136
[#219 'mat4x4']: r#136
[#219 'ptr']: r#136
[#219 'sampler']: r#136
[#219 'sampler_comparison']: r#136
[#219 'texture_1d']: r#136
[#219 'texture_2d']: r#136
[#219 'texture_2d_array']: r#136
[#219 'texture_3d']: r#136
[#219 'texture_cube']: r#136
[#219 'texture_cube_array']: r#136
[#219 'texture_depth_2d']: r#136
[#219 'texture_depth_2d_array']: r#136
[#219 'texture_depth_cube']: r#136
[#219 'texture_depth_cube_array']: r#136
[#219 'texture_depth_multisampled_2d']: r#136
[#219 'texture_multisampled_2d']: r#136
[#219 'texture_storage_1d']: r#136
[#219 'texture_storage_2d']: r#136
[#219 'texture_storage_2d_array']: r#136
[#219 'texture_storage_3d']: r#136
[#219 'true']: r#136
[#219 'u32']: r#136
[#219 'vec2']: r#136
[#219 'vec3']: r#136
[#219 'vec4']: r#136
[#219 '~']: r#136
[#219 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#136
[#219 /0[fh]/]: r#136
[#219 /0[iu]?/]: r#136
[#219 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#136
[#219 /0[xX][0-9a-fA-F]+[iu]?/]: r#136
[#219 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#136
[#219 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#136
[#219 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#136
[#219 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#136
[#219 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#136
[#219 /[1-9][0-9]*[fh]/]: r#136
[#219 /[1-9][0-9]*[iu]?/]: r#136
[#220 '!']: s#69
[#220 '&']: s#72
[#220 '(']: s#84
[#220 '*']: s#71
[#220 '-']: s#68
[#220 'array']: s#88
[#220 'atomic']: s#102
[#220 'bitcast']: s#78
[#220 'bool']: s#95
[#220 'f16']: s#97
[#220 'f32']: s#96
[#220 'false']: s#94
[#220 'i32']: s#98
[#220 'mat2x2']: s#107
[#220 'mat2x3']: s#108
[#220 'mat2x4']: s#109
[#220 'mat3x2']: s#110
[#220 'mat3x3']: s#111
[#220 'mat3x4']: s#112
[#220 'mat4x2']: s#113
[#220 'mat4x3']: s#114
[#220 'mat4x4']: s#115
[#220 'ptr']: s#100
[#220 'sampler']: s#132
[#220 'sampler_comparison']: s#133
[#220 'texture_1d']: s#139
[#220 'texture_2d']: s#140
[#220 'texture_2d_array']: s#141
[#220 'texture_3d']: s#142
[#220 'texture_cube']: s#143
[#220 'texture_cube_array']: s#144
[#220 'texture_depth_2d']: s#134
[#220 'texture_depth_2d_array']: s#135
[#220 'texture_depth_cube']: s#136
[#220 'texture_depth_cube_array']: s#137
[#220 'texture_depth_multisampled_2d']: s#138
[#220 'texture_multisampled_2d']: s#145
[#220 'texture_storage_1d']: s#146
[#220 'texture_storage_2d']: s#147
[#220 'texture_storage_2d_array']: s#148
[#220 'texture_storage_3d']: s#149
[#220 'true']: s#93
[#220 'u32']: s#99
[#220 'vec2']: s#104
[#220 'vec3']: s#105
[#220 'vec4']: s#106
[#220 '~']: s#70
[#220 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#220 /0[fh]/]: s#119
[#220 /0[iu]?/]: s#116
[#220 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#220 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#220 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#220 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#220 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#220 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#220 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#220 /[1-9][0-9]*[fh]/]: s#120
[#220 /[1-9][0-9]*[iu]?/]: s#117
[#221 '!']: s#69
[#221 '&']: s#72
[#221 '(']: s#84
[#221 '*']: s#71
[#221 '-']: s#68
[#221 'array']: s#88
[#221 'atomic']: s#102
[#221 'bitcast']: s#78
[#221 'bool']: s#95
[#221 'f16']: s#97
[#221 'f32']: s#96
[#221 'false']: s#94
[#221 'i32']: s#98
[#221 'mat2x2']: s#107
[#221 'mat2x3']: s#108
[#221 'mat2x4']: s#109
[#221 'mat3x2']: s#110
[#221 'mat3x3']: s#111
[#221 'mat3x4']: s#112
[#221 'mat4x2']: s#113
[#221 'mat4x3']: s#114
[#221 'mat4x4']: s#115
[#221 'ptr']: s#100
[#221 'sampler']: s#132
[#221 'sampler_comparison']: s#133
[#221 'texture_1d']: s#139
[#221 'texture_2d']: s#140
[#221 'texture_2d_array']: s#141
[#221 'texture_3d']: s#142
[#221 'texture_cube']: s#143
[#221 'texture_cube_array']: s#144
[#221 'texture_depth_2d']: s#134
[#221 'texture_depth_2d_array']: s#135
[#221 'texture_depth_cube']: s#136
[#221 'texture_depth_cube_array']: s#137
[#221 'texture_depth_multisampled_2d']: s#138
[#221 'texture_multisampled_2d']: s#145
[#221 'texture_storage_1d']: s#146
[#221 'texture_storage_2d']: s#147
[#221 'texture_storage_2d_array']: s#148
[#221 'texture_storage_3d']: s#149
[#221 'true']: s#93
[#221 'u32']: s#99
[#221 'vec2']: s#104
[#221 'vec3']: s#105
[#221 'vec4']: s#106
[#221 '~']: s#70
[#221 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#221 /0[fh]/]: s#119
[#221 /0[iu]?/]: s#116
[#221 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#221 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#221 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#221 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#221 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#221 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#221 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#221 /[1-9][0-9]*[fh]/]: s#120
[#221 /[1-9][0-9]*[iu]?/]: s#117
[#222 '!']: s#69
[#222 '&']: s#72
[#222 '(']: s#84
[#222 '*']: s#71
[#222 '-']: s#68
[#222 'array']: s#88
[#222 'atomic']: s#102
[#222 'bitcast']: s#78
[#222 'bool']: s#95
[#222 'f16']: s#97
[#222 'f32']: s#96
[#222 'false']: s#94
[#222 'i32']: s#98
[#222 'mat2x2']: s#107
[#222 'mat2x3']: s#108
[#222 'mat2x4']: s#109
[#222 'mat3x2']: s#110
[#222 'mat3x3']: s#111
[#222 'mat3x4']: s#112
[#222 'mat4x2']: s#113
[#222 'mat4x3']: s#114
[#222 'mat4x4']: s#115
[#222 'ptr']: s#100
[#222 'sampler']: s#132
[#222 'sampler_comparison']: s#133
[#222 'texture_1d']: s#139
[#222 'texture_2d']: s#140
[#222 'texture_2d_array']: s#141
[#222 'texture_3d']: s#142
[#222 'texture_cube']: s#143
[#222 'texture_cube_array']: s#144
[#222 'texture_depth_2d']: s#134
[#222 'texture_depth_2d_array']: s#135
[#222 'texture_depth_cube']: s#136
[#222 'texture_depth_cube_array']: s#137
[#222 'texture_depth_multisampled_2d']: s#138
[#222 'texture_multisampled_2d']: s#145
[#222 'texture_storage_1d']: s#146
[#222 'texture_storage_2d']: s#147
[#222 'texture_storage_2d_array']: s#148
[#222 'texture_storage_3d']: s#149
[#222 'true']: s#93
[#222 'u32']: s#99
[#222 'vec2']: s#104
[#222 'vec3']: s#105
[#222 'vec4']: s#106
[#222 '~']: s#70
[#222 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#222 /0[fh]/]: s#119
[#222 /0[iu]?/]: s#116
[#222 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#222 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#222 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#222 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#222 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#222 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#222 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#222 /[1-9][0-9]*[fh]/]: s#120
[#222 /[1-9][0-9]*[iu]?/]: s#117
[#223 '!']: s#69
[#223 '&']: s#72
[#223 '(']: s#84
[#223 '*']: s#71
[#223 '-']: s#68
[#223 'array']: s#88
[#223 'atomic']: s#102
[#223 'bitcast']: s#78
[#223 'bool']: s#95
[#223 'f16']: s#97
[#223 'f32']: s#96
[#223 'false']: s#94
[#223 'i32']: s#98
[#223 'mat2x2']: s#107
[#223 'mat2x3']: s#108
[#223 'mat2x4']: s#109
[#223 'mat3x2']: s#110
[#223 'mat3x3']: s#111
[#223 'mat3x4']: s#112
[#223 'mat4x2']: s#113
[#223 'mat4x3']: s#114
[#223 'mat4x4']: s#115
[#223 'ptr']: s#100
[#223 'sampler']: s#132
[#223 'sampler_comparison']: s#133
[#223 'texture_1d']: s#139
[#223 'texture_2d']: s#140
[#223 'texture_2d_array']: s#141
[#223 'texture_3d']: s#142
[#223 'texture_cube']: s#143
[#223 'texture_cube_array']: s#144
[#223 'texture_depth_2d']: s#134
[#223 'texture_depth_2d_array']: s#135
[#223 'texture_depth_cube']: s#136
[#223 'texture_depth_cube_array']: s#137
[#223 'texture_depth_multisampled_2d']: s#138
[#223 'texture_multisampled_2d']: s#145
[#223 'texture_storage_1d']: s#146
[#223 'texture_storage_2d']: s#147
[#223 'texture_storage_2d_array']: s#148
[#223 'texture_storage_3d']: s#149
[#223 'true']: s#93
[#223 'u32']: s#99
[#223 'vec2']: s#104
[#223 'vec3']: s#105
[#223 'vec4']: s#106
[#223 '~']: s#70
[#223 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#223 /0[fh]/]: s#119
[#223 /0[iu]?/]: s#116
[#223 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#223 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#223 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#223 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#223 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#223 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#223 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#223 /[1-9][0-9]*[fh]/]: s#120
[#223 /[1-9][0-9]*[iu]?/]: s#117
[#224 '!']: s#69
[#224 '&']: s#72
[#224 '(']: s#84
[#224 '*']: s#71
[#224 '-']: s#68
[#224 'array']: s#88
[#224 'atomic']: s#102
[#224 'bitcast']: s#78
[#224 'bool']: s#95
[#224 'f16']: s#97
[#224 'f32']: s#96
[#224 'false']: s#94
[#224 'i32']: s#98
[#224 'mat2x2']: s#107
[#224 'mat2x3']: s#108
[#224 'mat2x4']: s#109
[#224 'mat3x2']: s#110
[#224 'mat3x3']: s#111
[#224 'mat3x4']: s#112
[#224 'mat4x2']: s#113
[#224 'mat4x3']: s#114
[#224 'mat4x4']: s#115
[#224 'ptr']: s#100
[#224 'sampler']: s#132
[#224 'sampler_comparison']: s#133
[#224 'texture_1d']: s#139
[#224 'texture_2d']: s#140
[#224 'texture_2d_array']: s#141
[#224 'texture_3d']: s#142
[#224 'texture_cube']: s#143
[#224 'texture_cube_array']: s#144
[#224 'texture_depth_2d']: s#134
[#224 'texture_depth_2d_array']: s#135
[#224 'texture_depth_cube']: s#136
[#224 'texture_depth_cube_array']: s#137
[#224 'texture_depth_multisampled_2d']: s#138
[#224 'texture_multisampled_2d']: s#145
[#224 'texture_storage_1d']: s#146
[#224 'texture_storage_2d']: s#147
[#224 'texture_storage_2d_array']: s#148
[#224 'texture_storage_3d']: s#149
[#224 'true']: s#93
[#224 'u32']: s#99
[#224 'vec2']: s#104
[#224 'vec3']: s#105
[#224 'vec4']: s#106
[#224 '~']: s#70
[#224 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#224 /0[fh]/]: s#119
[#224 /0[iu]?/]: s#116
[#224 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#224 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#224 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#224 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#224 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#224 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#224 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#224 /[1-9][0-9]*[fh]/]: s#120
[#224 /[1-9][0-9]*[iu]?/]: s#117
[#225 '!']: s#69
[#225 '&']: s#72
[#225 '(']: s#84
[#225 '*']: s#71
[#225 '-']: s#68
[#225 'array']: s#88
[#225 'atomic']: s#102
[#225 'bitcast']: s#78
[#225 'bool']: s#95
[#225 'f16']: s#97
[#225 'f32']: s#96
[#225 'false']: s#94
[#225 'i32']: s#98
[#225 'mat2x2']: s#107
[#225 'mat2x3']: s#108
[#225 'mat2x4']: s#109
[#225 'mat3x2']: s#110
[#225 'mat3x3']: s#111
[#225 'mat3x4']: s#112
[#225 'mat4x2']: s#113
[#225 'mat4x3']: s#114
[#225 'mat4x4']: s#115
[#225 'ptr']: s#100
[#225 'sampler']: s#132
[#225 'sampler_comparison']: s#133
[#225 'texture_1d']: s#139
[#225 'texture_2d']: s#140
[#225 'texture_2d_array']: s#141
[#225 'texture_3d']: s#142
[#225 'texture_cube']: s#143
[#225 'texture_cube_array']: s#144
[#225 'texture_depth_2d']: s#134
[#225 'texture_depth_2d_array']: s#135
[#225 'texture_depth_cube']: s#136
[#225 'texture_depth_cube_array']: s#137
[#225 'texture_depth_multisampled_2d']: s#138
[#225 'texture_multisampled_2d']: s#145
[#225 'texture_storage_1d']: s#146
[#225 'texture_storage_2d']: s#147
[#225 'texture_storage_2d_array']: s#148
[#225 'texture_storage_3d']: s#149
[#225 'true']: s#93
[#225 'u32']: s#99
[#225 'vec2']: s#104
[#225 'vec3']: s#105
[#225 'vec4']: s#106
[#225 '~']: s#70
[#225 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#225 /0[fh]/]: s#119
[#225 /0[iu]?/]: s#116
[#225 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#225 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#225 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#225 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#225 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#225 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#225 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#225 /[1-9][0-9]*[fh]/]: s#120
[#225 /[1-9][0-9]*[iu]?/]: s#117
[#226 '!']: s#69
[#226 '&']: s#72
[#226 '(']: s#84
[#226 '*']: s#71
[#226 '-']: s#68
[#226 'array']: s#88
[#226 'atomic']: s#102
[#226 'bitcast']: s#78
[#226 'bool']: s#95
[#226 'f16']: s#97
[#226 'f32']: s#96
[#226 'false']: s#94
[#226 'i32']: s#98
[#226 'mat2x2']: s#107
[#226 'mat2x3']: s#108
[#226 'mat2x4']: s#109
[#226 'mat3x2']: s#110
[#226 'mat3x3']: s#111
[#226 'mat3x4']: s#112
[#226 'mat4x2']: s#113
[#226 'mat4x3']: s#114
[#226 'mat4x4']: s#115
[#226 'ptr']: s#100
[#226 'sampler']: s#132
[#226 'sampler_comparison']: s#133
[#226 'texture_1d']: s#139
[#226 'texture_2d']: s#140
[#226 'texture_2d_array']: s#141
[#226 'texture_3d']: s#142
[#226 'texture_cube']: s#143
[#226 'texture_cube_array']: s#144
[#226 'texture_depth_2d']: s#134
[#226 'texture_depth_2d_array']: s#135
[#226 'texture_depth_cube']: s#136
[#226 'texture_depth_cube_array']: s#137
[#226 'texture_depth_multisampled_2d']: s#138
[#226 'texture_multisampled_2d']: s#145
[#226 'texture_storage_1d']: s#146
[#226 'texture_storage_2d']: s#147
[#226 'texture_storage_2d_array']: s#148
[#226 'texture_storage_3d']: s#149
[#226 'true']: s#93
[#226 'u32']: s#99
[#226 'vec2']: s#104
[#226 'vec3']: s#105
[#226 'vec4']: s#106
[#226 '~']: s#70
[#226 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#226 /0[fh]/]: s#119
[#226 /0[iu]?/]: s#116
[#226 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#226 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#226 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#226 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#226 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#226 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#226 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#226 /[1-9][0-9]*[fh]/]: s#120
[#226 /[1-9][0-9]*[iu]?/]: s#117
[#227 '!']: s#69
[#227 '&']: s#72
[#227 '(']: s#84
[#227 '*']: s#71
[#227 '-']: s#68
[#227 'array']: s#88
[#227 'atomic']: s#102
[#227 'bitcast']: s#78
[#227 'bool']: s#95
[#227 'f16']: s#97
[#227 'f32']: s#96
[#227 'false']: s#94
[#227 'i32']: s#98
[#227 'mat2x2']: s#107
[#227 'mat2x3']: s#108
[#227 'mat2x4']: s#109
[#227 'mat3x2']: s#110
[#227 'mat3x3']: s#111
[#227 'mat3x4']: s#112
[#227 'mat4x2']: s#113
[#227 'mat4x3']: s#114
[#227 'mat4x4']: s#115
[#227 'ptr']: s#100
[#227 'sampler']: s#132
[#227 'sampler_comparison']: s#133
[#227 'texture_1d']: s#139
[#227 'texture_2d']: s#140
[#227 'texture_2d_array']: s#141
[#227 'texture_3d']: s#142
[#227 'texture_cube']: s#143
[#227 'texture_cube_array']: s#144
[#227 'texture_depth_2d']: s#134
[#227 'texture_depth_2d_array']: s#135
[#227 'texture_depth_cube']: s#136
[#227 'texture_depth_cube_array']: s#137
[#227 'texture_depth_multisampled_2d']: s#138
[#227 'texture_multisampled_2d']: s#145
[#227 'texture_storage_1d']: s#146
[#227 'texture_storage_2d']: s#147
[#227 'texture_storage_2d_array']: s#148
[#227 'texture_storage_3d']: s#149
[#227 'true']: s#93
[#227 'u32']: s#99
[#227 'vec2']: s#104
[#227 'vec3']: s#105
[#227 'vec4']: s#106
[#227 '~']: s#70
[#227 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#227 /0[fh]/]: s#119
[#227 /0[iu]?/]: s#116
[#227 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#227 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#227 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#227 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#227 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#227 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#227 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#227 /[1-9][0-9]*[fh]/]: s#120
[#227 /[1-9][0-9]*[iu]?/]: s#117
[#228 '!']: s#69
[#228 '&']: s#72
[#228 '(']: s#84
[#228 '*']: s#71
[#228 '-']: s#68
[#228 'array']: s#88
[#228 'atomic']: s#102
[#228 'bitcast']: s#78
[#228 'bool']: s#95
[#228 'f16']: s#97
[#228 'f32']: s#96
[#228 'false']: s#94
[#228 'i32']: s#98
[#228 'mat2x2']: s#107
[#228 'mat2x3']: s#108
[#228 'mat2x4']: s#109
[#228 'mat3x2']: s#110
[#228 'mat3x3']: s#111
[#228 'mat3x4']: s#112
[#228 'mat4x2']: s#113
[#228 'mat4x3']: s#114
[#228 'mat4x4']: s#115
[#228 'ptr']: s#100
[#228 'sampler']: s#132
[#228 'sampler_comparison']: s#133
[#228 'texture_1d']: s#139
[#228 'texture_2d']: s#140
[#228 'texture_2d_array']: s#141
[#228 'texture_3d']: s#142
[#228 'texture_cube']: s#143
[#228 'texture_cube_array']: s#144
[#228 'texture_depth_2d']: s#134
[#228 'texture_depth_2d_array']: s#135
[#228 'texture_depth_cube']: s#136
[#228 'texture_depth_cube_array']: s#137
[#228 'texture_depth_multisampled_2d']: s#138
[#228 'texture_multisampled_2d']: s#145
[#228 'texture_storage_1d']: s#146
[#228 'texture_storage_2d']: s#147
[#228 'texture_storage_2d_array']: s#148
[#228 'texture_storage_3d']: s#149
[#228 'true']: s#93
[#228 'u32']: s#99
[#228 'vec2']: s#104
[#228 'vec3']: s#105
[#228 'vec4']: s#106
[#228 '~']: s#70
[#228 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#228 /0[fh]/]: s#119
[#228 /0[iu]?/]: s#116
[#228 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#228 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#228 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#228 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#228 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#228 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#228 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#228 /[1-9][0-9]*[fh]/]: s#120
[#228 /[1-9][0-9]*[iu]?/]: s#117
[#229 '!']: r#137
[#229 '&']: r#137
[#229 '(']: r#137
[#229 '*']: r#137
[#229 '-']: r#137
[#229 'array']: r#137
[#229 'atomic']: r#137
[#229 'bitcast']: r#137
[#229 'bool']: r#137
[#229 'f16']: r#137
[#229 'f32']: r#137
[#229 'false']: r#137
[#229 'i32']: r#137
[#229 'mat2x2']: r#137
[#229 'mat2x3']: r#137
[#229 'mat2x4']: r#137
[#229 'mat3x2']: r#137
[#229 'mat3x3']: r#137
[#229 'mat3x4']: r#137
[#229 'mat4x2']: r#137
[#229 'mat4x3']: r#137
[#229 'mat4x4']: r#137
[#229 'ptr']: r#137
[#229 'sampler']: r#137
[#229 'sampler_comparison']: r#137
[#229 'texture_1d']: r#137
[#229 'texture_2d']: r#137
[#229 'texture_2d_array']: r#137
[#229 'texture_3d']: r#137
[#229 'texture_cube']: r#137
[#229 'texture_cube_array']: r#137
[#229 'texture_depth_2d']: r#137
[#229 'texture_depth_2d_array']: r#137
[#229 'texture_depth_cube']: r#137
[#229 'texture_depth_cube_array']: r#137
[#229 'texture_depth_multisampled_2d']: r#137
[#229 'texture_multisampled_2d']: r#137
[#229 'texture_storage_1d']: r#137
[#229 'texture_storage_2d']: r#137
[#229 'texture_storage_2d_array']: r#137
[#229 'texture_storage_3d']: r#137
[#229 'true']: r#137
[#229 'u32']: r#137
[#229 'vec2']: r#137
[#229 'vec3']: r#137
[#229 'vec4']: r#137
[#229 '~']: r#137
[#229 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#137
[#229 /0[fh]/]: r#137
[#229 /0[iu]?/]: r#137
[#229 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#137
[#229 /0[xX][0-9a-fA-F]+[iu]?/]: r#137
[#229 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#137
[#229 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#137
[#229 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#137
[#229 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#137
[#229 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#137
[#229 /[1-9][0-9]*[fh]/]: r#137
[#229 /[1-9][0-9]*[iu]?/]: r#137
[#230 '!']: r#138
[#230 '&']: r#138
[#230 '(']: r#138
[#230 '*']: r#138
[#230 '-']: r#138
[#230 'array']: r#138
[#230 'atomic']: r#138
[#230 'bitcast']: r#138
[#230 'bool']: r#138
[#230 'f16']: r#138
[#230 'f32']: r#138
[#230 'false']: r#138
[#230 'i32']: r#138
[#230 'mat2x2']: r#138
[#230 'mat2x3']: r#138
[#230 'mat2x4']: r#138
[#230 'mat3x2']: r#138
[#230 'mat3x3']: r#138
[#230 'mat3x4']: r#138
[#230 'mat4x2']: r#138
[#230 'mat4x3']: r#138
[#230 'mat4x4']: r#138
[#230 'ptr']: r#138
[#230 'sampler']: r#138
[#230 'sampler_comparison']: r#138
[#230 'texture_1d']: r#138
[#230 'texture_2d']: r#138
[#230 'texture_2d_array']: r#138
[#230 'texture_3d']: r#138
[#230 'texture_cube']: r#138
[#230 'texture_cube_array']: r#138
[#230 'texture_depth_2d']: r#138
[#230 'texture_depth_2d_array']: r#138
[#230 'texture_depth_cube']: r#138
[#230 'texture_depth_cube_array']: r#138
[#230 'texture_depth_multisampled_2d']: r#138
[#230 'texture_multisampled_2d']: r#138
[#230 'texture_storage_1d']: r#138
[#230 'texture_storage_2d']: r#138
[#230 'texture_storage_2d_array']: r#138
[#230 'texture_storage_3d']: r#138
[#230 'true']: r#138
[#230 'u32']: r#138
[#230 'vec2']: r#138
[#230 'vec3']: r#138
[#230 'vec4']: r#138
[#230 '~']: r#138
[#230 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#138
[#230 /0[fh]/]: r#138
[#230 /0[iu]?/]: r#138
[#230 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#138
[#230 /0[xX][0-9a-fA-F]+[iu]?/]: r#138
[#230 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#138
[#230 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#138
[#230 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#138
[#230 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#138
[#230 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#138
[#230 /[1-9][0-9]*[fh]/]: r#138
[#230 /[1-9][0-9]*[iu]?/]: r#138
[#231 '!']: r#139
[#231 '&']: r#139
[#231 '(']: r#139
[#231 '*']: r#139
[#231 '-']: r#139
[#231 'array']: r#139
[#231 'atomic']: r#139
[#231 'bitcast']: r#139
[#231 'bool']: r#139
[#231 'f16']: r#139
[#231 'f32']: r#139
[#231 'false']: r#139
[#231 'i32']: r#139
[#231 'mat2x2']: r#139
[#231 'mat2x3']: r#139
[#231 'mat2x4']: r#139
[#231 'mat3x2']: r#139
[#231 'mat3x3']: r#139
[#231 'mat3x4']: r#139
[#231 'mat4x2']: r#139
[#231 'mat4x3']: r#139
[#231 'mat4x4']: r#139
[#231 'ptr']: r#139
[#231 'sampler']: r#139
[#231 'sampler_comparison']: r#139
[#231 'texture_1d']: r#139
[#231 'texture_2d']: r#139
[#231 'texture_2d_array']: r#139
[#231 'texture_3d']: r#139
[#231 'texture_cube']: r#139
[#231 'texture_cube_array']: r#139
[#231 'texture_depth_2d']: r#139
[#231 'texture_depth_2d_array']: r#139
[#231 'texture_depth_cube']: r#139
[#231 'texture_depth_cube_array']: r#139
[#231 'texture_depth_multisampled_2d']: r#139
[#231 'texture_multisampled_2d']: r#139
[#231 'texture_storage_1d']: r#139
[#231 'texture_storage_2d']: r#139
[#231 'texture_storage_2d_array']: r#139
[#231 'texture_storage_3d']: r#139
[#231 'true']: r#139
[#231 'u32']: r#139
[#231 'vec2']: r#139
[#231 'vec3']: r#139
[#231 'vec4']: r#139
[#231 '~']: r#139
[#231 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#139
[#231 /0[fh]/]: r#139
[#231 /0[iu]?/]: r#139
[#231 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#139
[#231 /0[xX][0-9a-fA-F]+[iu]?/]: r#139
[#231 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#139
[#231 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#139
[#231 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#139
[#231 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#139
[#231 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#139
[#231 /[1-9][0-9]*[fh]/]: r#139
[#231 /[1-9][0-9]*[iu]?/]: r#139
[#232 '!']: r#140
[#232 '&']: r#140
[#232 '(']: r#140
[#232 '*']: r#140
[#232 '-']: r#140
[#232 'array']: r#140
[#232 'atomic']: r#140
[#232 'bitcast']: r#140
[#232 'bool']: r#140
[#232 'f16']: r#140
[#232 'f32']: r#140
[#232 'false']: r#140
[#232 'i32']: r#140
[#232 'mat2x2']: r#140
[#232 'mat2x3']: r#140
[#232 'mat2x4']: r#140
[#232 'mat3x2']: r#140
[#232 'mat3x3']: r#140
[#232 'mat3x4']: r#140
[#232 'mat4x2']: r#140
[#232 'mat4x3']: r#140
[#232 'mat4x4']: r#140
[#232 'ptr']: r#140
[#232 'sampler']: r#140
[#232 'sampler_comparison']: r#140
[#232 'texture_1d']: r#140
[#232 'texture_2d']: r#140
[#232 'texture_2d_array']: r#140
[#232 'texture_3d']: r#140
[#232 'texture_cube']: r#140
[#232 'texture_cube_array']: r#140
[#232 'texture_depth_2d']: r#140
[#232 'texture_depth_2d_array']: r#140
[#232 'texture_depth_cube']: r#140
[#232 'texture_depth_cube_array']: r#140
[#232 'texture_depth_multisampled_2d']: r#140
[#232 'texture_multisampled_2d']: r#140
[#232 'texture_storage_1d']: r#140
[#232 'texture_storage_2d']: r#140
[#232 'texture_storage_2d_array']: r#140
[#232 'texture_storage_3d']: r#140
[#232 'true']: r#140
[#232 'u32']: r#140
[#232 'vec2']: r#140
[#232 'vec3']: r#140
[#232 'vec4']: r#140
[#232 '~']: r#140
[#232 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#140
[#232 /0[fh]/]: r#140
[#232 /0[iu]?/]: r#140
[#232 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#140
[#232 /0[xX][0-9a-fA-F]+[iu]?/]: r#140
[#232 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#140
[#232 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#140
[#232 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#140
[#232 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#140
[#232 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#140
[#232 /[1-9][0-9]*[fh]/]: r#140
[#232 /[1-9][0-9]*[iu]?/]: r#140
[#233 '!']: s#69
[#233 '&']: s#72
[#233 '(']: s#84
[#233 '*']: s#71
[#233 '-']: s#68
[#233 'array']: s#88
[#233 'atomic']: s#102
[#233 'bitcast']: s#78
[#233 'bool']: s#95
[#233 'f16']: s#97
[#233 'f32']: s#96
[#233 'false']: s#94
[#233 'i32']: s#98
[#233 'mat2x2']: s#107
[#233 'mat2x3']: s#108
[#233 'mat2x4']: s#109
[#233 'mat3x2']: s#110
[#233 'mat3x3']: s#111
[#233 'mat3x4']: s#112
[#233 'mat4x2']: s#113
[#233 'mat4x3']: s#114
[#233 'mat4x4']: s#115
[#233 'ptr']: s#100
[#233 'sampler']: s#132
[#233 'sampler_comparison']: s#133
[#233 'texture_1d']: s#139
[#233 'texture_2d']: s#140
[#233 'texture_2d_array']: s#141
[#233 'texture_3d']: s#142
[#233 'texture_cube']: s#143
[#233 'texture_cube_array']: s#144
[#233 'texture_depth_2d']: s#134
[#233 'texture_depth_2d_array']: s#135
[#233 'texture_depth_cube']: s#136
[#233 'texture_depth_cube_array']: s#137
[#233 'texture_depth_multisampled_2d']: s#138
[#233 'texture_multisampled_2d']: s#145
[#233 'texture_storage_1d']: s#146
[#233 'texture_storage_2d']: s#147
[#233 'texture_storage_2d_array']: s#148
[#233 'texture_storage_3d']: s#149
[#233 'true']: s#93
[#233 'u32']: s#99
[#233 'vec2']: s#104
[#233 'vec3']: s#105
[#233 'vec4']: s#106
[#233 '~']: s#70
[#233 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#233 /0[fh]/]: s#119
[#233 /0[iu]?/]: s#116
[#233 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#233 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#233 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#233 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#233 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#233 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#233 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#233 /[1-9][0-9]*[fh]/]: s#120
[#233 /[1-9][0-9]*[iu]?/]: s#117
[#234 '!']: s#69
[#234 '&']: s#72
[#234 '(']: s#84
[#234 '*']: s#71
[#234 '-']: s#68
[#234 'array']: s#88
[#234 'atomic']: s#102
[#234 'bitcast']: s#78
[#234 'bool']: s#95
[#234 'f16']: s#97
[#234 'f32']: s#96
[#234 'false']: s#94
[#234 'i32']: s#98
[#234 'mat2x2']: s#107
[#234 'mat2x3']: s#108
[#234 'mat2x4']: s#109
[#234 'mat3x2']: s#110
[#234 'mat3x3']: s#111
[#234 'mat3x4']: s#112
[#234 'mat4x2']: s#113
[#234 'mat4x3']: s#114
[#234 'mat4x4']: s#115
[#234 'ptr']: s#100
[#234 'sampler']: s#132
[#234 'sampler_comparison']: s#133
[#234 'texture_1d']: s#139
[#234 'texture_2d']: s#140
[#234 'texture_2d_array']: s#141
[#234 'texture_3d']: s#142
[#234 'texture_cube']: s#143
[#234 'texture_cube_array']: s#144
[#234 'texture_depth_2d']: s#134
[#234 'texture_depth_2d_array']: s#135
[#234 'texture_depth_cube']: s#136
[#234 'texture_depth_cube_array']: s#137
[#234 'texture_depth_multisampled_2d']: s#138
[#234 'texture_multisampled_2d']: s#145
[#234 'texture_storage_1d']: s#146
[#234 'texture_storage_2d']: s#147
[#234 'texture_storage_2d_array']: s#148
[#234 'texture_storage_3d']: s#149
[#234 'true']: s#93
[#234 'u32']: s#99
[#234 'vec2']: s#104
[#234 'vec3']: s#105
[#234 'vec4']: s#106
[#234 '~']: s#70
[#234 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#234 /0[fh]/]: s#119
[#234 /0[iu]?/]: s#116
[#234 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#234 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#234 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#234 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#234 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#234 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#234 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#234 /[1-9][0-9]*[fh]/]: s#120
[#234 /[1-9][0-9]*[iu]?/]: s#117
[#235 '!']: s#69
[#235 '&']: s#72
[#235 '(']: s#84
[#235 '*']: s#71
[#235 '-']: s#68
[#235 'array']: s#88
[#235 'atomic']: s#102
[#235 'bitcast']: s#78
[#235 'bool']: s#95
[#235 'f16']: s#97
[#235 'f32']: s#96
[#235 'false']: s#94
[#235 'i32']: s#98
[#235 'mat2x2']: s#107
[#235 'mat2x3']: s#108
[#235 'mat2x4']: s#109
[#235 'mat3x2']: s#110
[#235 'mat3x3']: s#111
[#235 'mat3x4']: s#112
[#235 'mat4x2']: s#113
[#235 'mat4x3']: s#114
[#235 'mat4x4']: s#115
[#235 'ptr']: s#100
[#235 'sampler']: s#132
[#235 'sampler_comparison']: s#133
[#235 'texture_1d']: s#139
[#235 'texture_2d']: s#140
[#235 'texture_2d_array']: s#141
[#235 'texture_3d']: s#142
[#235 'texture_cube']: s#143
[#235 'texture_cube_array']: s#144
[#235 'texture_depth_2d']: s#134
[#235 'texture_depth_2d_array']: s#135
[#235 'texture_depth_cube']: s#136
[#235 'texture_depth_cube_array']: s#137
[#235 'texture_depth_multisampled_2d']: s#138
[#235 'texture_multisampled_2d']: s#145
[#235 'texture_storage_1d']: s#146
[#235 'texture_storage_2d']: s#147
[#235 'texture_storage_2d_array']: s#148
[#235 'texture_storage_3d']: s#149
[#235 'true']: s#93
[#235 'u32']: s#99
[#235 'vec2']: s#104
[#235 'vec3']: s#105
[#235 'vec4']: s#106
[#235 '~']: s#70
[#235 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#235 /0[fh]/]: s#119
[#235 /0[iu]?/]: s#116
[#235 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#235 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#235 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#235 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#235 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#235 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#235 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#235 /[1-9][0-9]*[fh]/]: s#120
[#235 /[1-9][0-9]*[iu]?/]: s#117
[#236 '!']: s#69
[#236 '&']: s#72
[#236 '(']: s#84
[#236 '*']: s#71
[#236 '-']: s#68
[#236 'array']: s#88
[#236 'atomic']: s#102
[#236 'bitcast']: s#78
[#236 'bool']: s#95
[#236 'f16']: s#97
[#236 'f32']: s#96
[#236 'false']: s#94
[#236 'i32']: s#98
[#236 'mat2x2']: s#107
[#236 'mat2x3']: s#108
[#236 'mat2x4']: s#109
[#236 'mat3x2']: s#110
[#236 'mat3x3']: s#111
[#236 'mat3x4']: s#112
[#236 'mat4x2']: s#113
[#236 'mat4x3']: s#114
[#236 'mat4x4']: s#115
[#236 'ptr']: s#100
[#236 'sampler']: s#132
[#236 'sampler_comparison']: s#133
[#236 'texture_1d']: s#139
[#236 'texture_2d']: s#140
[#236 'texture_2d_array']: s#141
[#236 'texture_3d']: s#142
[#236 'texture_cube']: s#143
[#236 'texture_cube_array']: s#144
[#236 'texture_depth_2d']: s#134
[#236 'texture_depth_2d_array']: s#135
[#236 'texture_depth_cube']: s#136
[#236 'texture_depth_cube_array']: s#137
[#236 'texture_depth_multisampled_2d']: s#138
[#236 'texture_multisampled_2d']: s#145
[#236 'texture_storage_1d']: s#146
[#236 'texture_storage_2d']: s#147
[#236 'texture_storage_2d_array']: s#148
[#236 'texture_storage_3d']: s#149
[#236 'true']: s#93
[#236 'u32']: s#99
[#236 'vec2']: s#104
[#236 'vec3']: s#105
[#236 'vec4']: s#106
[#236 '~']: s#70
[#236 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#236 /0[fh]/]: s#119
[#236 /0[iu]?/]: s#116
[#236 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#236 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#236 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#236 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#236 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#236 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#236 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#236 /[1-9][0-9]*[fh]/]: s#120
[#236 /[1-9][0-9]*[iu]?/]: s#117
[#237 '!']: s#69
[#237 '&']: s#72
[#237 '(']: s#84
[#237 '*']: s#71
[#237 '-']: s#68
[#237 'array']: s#88
[#237 'atomic']: s#102
[#237 'bitcast']: s#78
[#237 'bool']: s#95
[#237 'f16']: s#97
[#237 'f32']: s#96
[#237 'false']: s#94
[#237 'i32']: s#98
[#237 'mat2x2']: s#107
[#237 'mat2x3']: s#108
[#237 'mat2x4']: s#109
[#237 'mat3x2']: s#110
[#237 'mat3x3']: s#111
[#237 'mat3x4']: s#112
[#237 'mat4x2']: s#113
[#237 'mat4x3']: s#114
[#237 'mat4x4']: s#115
[#237 'ptr']: s#100
[#237 'sampler']: s#132
[#237 'sampler_comparison']: s#133
[#237 'texture_1d']: s#139
[#237 'texture_2d']: s#140
[#237 'texture_2d_array']: s#141
[#237 'texture_3d']: s#142
[#237 'texture_cube']: s#143
[#237 'texture_cube_array']: s#144
[#237 'texture_depth_2d']: s#134
[#237 'texture_depth_2d_array']: s#135
[#237 'texture_depth_cube']: s#136
[#237 'texture_depth_cube_array']: s#137
[#237 'texture_depth_multisampled_2d']: s#138
[#237 'texture_multisampled_2d']: s#145
[#237 'texture_storage_1d']: s#146
[#237 'texture_storage_2d']: s#147
[#237 'texture_storage_2d_array']: s#148
[#237 'texture_storage_3d']: s#149
[#237 'true']: s#93
[#237 'u32']: s#99
[#237 'vec2']: s#104
[#237 'vec3']: s#105
[#237 'vec4']: s#106
[#237 '~']: s#70
[#237 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#237 /0[fh]/]: s#119
[#237 /0[iu]?/]: s#116
[#237 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#237 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#237 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#237 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#237 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#237 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#237 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#237 /[1-9][0-9]*[fh]/]: s#120
[#237 /[1-9][0-9]*[iu]?/]: s#117
[#238 'flat']: s#264
[#238 'linear']: s#263
[#238 'perspective']: s#262
[#239 '!']: s#69
[#239 '&']: s#72
[#239 '(']: s#84
[#239 '*']: s#71
[#239 '-']: s#68
[#239 'array']: s#88
[#239 'atomic']: s#102
[#239 'bitcast']: s#78
[#239 'bool']: s#95
[#239 'f16']: s#97
[#239 'f32']: s#96
[#239 'false']: s#94
[#239 'i32']: s#98
[#239 'mat2x2']: s#107
[#239 'mat2x3']: s#108
[#239 'mat2x4']: s#109
[#239 'mat3x2']: s#110
[#239 'mat3x3']: s#111
[#239 'mat3x4']: s#112
[#239 'mat4x2']: s#113
[#239 'mat4x3']: s#114
[#239 'mat4x4']: s#115
[#239 'ptr']: s#100
[#239 'sampler']: s#132
[#239 'sampler_comparison']: s#133
[#239 'texture_1d']: s#139
[#239 'texture_2d']: s#140
[#239 'texture_2d_array']: s#141
[#239 'texture_3d']: s#142
[#239 'texture_cube']: s#143
[#239 'texture_cube_array']: s#144
[#239 'texture_depth_2d']: s#134
[#239 'texture_depth_2d_array']: s#135
[#239 'texture_depth_cube']: s#136
[#239 'texture_depth_cube_array']: s#137
[#239 'texture_depth_multisampled_2d']: s#138
[#239 'texture_multisampled_2d']: s#145
[#239 'texture_storage_1d']: s#146
[#239 'texture_storage_2d']: s#147
[#239 'texture_storage_2d_array']: s#148
[#239 'texture_storage_3d']: s#149
[#239 'true']: s#93
[#239 'u32']: s#99
[#239 'vec2']: s#104
[#239 'vec3']: s#105
[#239 'vec4']: s#106
[#239 '~']: s#70
[#239 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#239 /0[fh]/]: s#119
[#239 /0[iu]?/]: s#116
[#239 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#239 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#239 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#239 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#239 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#239 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#239 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#239 /[1-9][0-9]*[fh]/]: s#120
[#239 /[1-9][0-9]*[iu]?/]: s#117
[#240 '!']: s#69
[#240 '&']: s#72
[#240 '(']: s#84
[#240 '*']: s#71
[#240 '-']: s#68
[#240 'array']: s#88
[#240 'atomic']: s#102
[#240 'bitcast']: s#78
[#240 'bool']: s#95
[#240 'f16']: s#97
[#240 'f32']: s#96
[#240 'false']: s#94
[#240 'i32']: s#98
[#240 'mat2x2']: s#107
[#240 'mat2x3']: s#108
[#240 'mat2x4']: s#109
[#240 'mat3x2']: s#110
[#240 'mat3x3']: s#111
[#240 'mat3x4']: s#112
[#240 'mat4x2']: s#113
[#240 'mat4x3']: s#114
[#240 'mat4x4']: s#115
[#240 'ptr']: s#100
[#240 'sampler']: s#132
[#240 'sampler_comparison']: s#133
[#240 'texture_1d']: s#139
[#240 'texture_2d']: s#140
[#240 'texture_2d_array']: s#141
[#240 'texture_3d']: s#142
[#240 'texture_cube']: s#143
[#240 'texture_cube_array']: s#144
[#240 'texture_depth_2d']: s#134
[#240 'texture_depth_2d_array']: s#135
[#240 'texture_depth_cube']: s#136
[#240 'texture_depth_cube_array']: s#137
[#240 'texture_depth_multisampled_2d']: s#138
[#240 'texture_multisampled_2d']: s#145
[#240 'texture_storage_1d']: s#146
[#240 'texture_storage_2d']: s#147
[#240 'texture_storage_2d_array']: s#148
[#240 'texture_storage_3d']: s#149
[#240 'true']: s#93
[#240 'u32']: s#99
[#240 'vec2']: s#104
[#240 'vec3']: s#105
[#240 'vec4']: s#106
[#240 '~']: s#70
[#240 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#240 /0[fh]/]: s#119
[#240 /0[iu]?/]: s#116
[#240 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#240 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#240 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#240 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#240 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#240 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#240 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#240 /[1-9][0-9]*[fh]/]: s#120
[#240 /[1-9][0-9]*[iu]?/]: s#117
[#241 'frag_depth']: s#251
[#241 'front_facing']: s#250
[#241 'global_invocation_id']: s#254
[#241 'instance_index']: s#248
[#241 'local_invocation_id']: s#252
[#241 'local_invocation_index']: s#253
[#241 'num_workgroups']: s#256
[#241 'position']: s#249
[#241 'sample_index']: s#257
[#241 'sample_mask']: s#258
[#241 'vertex_index']: s#247
[#241 'workgroup_id']: s#255
[#242 '!']: s#69
[#242 '&']: s#72
[#242 '(']: s#84
[#242 '*']: s#71
[#242 '-']: s#68
[#242 'array']: s#88
[#242 'atomic']: s#102
[#242 'bitcast']: s#78
[#242 'bool']: s#95
[#242 'f16']: s#97
[#242 'f32']: s#96
[#242 'false']: s#94
[#242 'i32']: s#98
[#242 'mat2x2']: s#107
[#242 'mat2x3']: s#108
[#242 'mat2x4']: s#109
[#242 'mat3x2']: s#110
[#242 'mat3x3']: s#111
[#242 'mat3x4']: s#112
[#242 'mat4x2']: s#113
[#242 'mat4x3']: s#114
[#242 'mat4x4']: s#115
[#242 'ptr']: s#100
[#242 'sampler']: s#132
[#242 'sampler_comparison']: s#133
[#242 'texture_1d']: s#139
[#242 'texture_2d']: s#140
[#242 'texture_2d_array']: s#141
[#242 'texture_3d']: s#142
[#242 'texture_cube']: s#143
[#242 'texture_cube_array']: s#144
[#242 'texture_depth_2d']: s#134
[#242 'texture_depth_2d_array']: s#135
[#242 'texture_depth_cube']: s#136
[#242 'texture_depth_cube_array']: s#137
[#242 'texture_depth_multisampled_2d']: s#138
[#242 'texture_multisampled_2d']: s#145
[#242 'texture_storage_1d']: s#146
[#242 'texture_storage_2d']: s#147
[#242 'texture_storage_2d_array']: s#148
[#242 'texture_storage_3d']: s#149
[#242 'true']: s#93
[#242 'u32']: s#99
[#242 'vec2']: s#104
[#242 'vec3']: s#105
[#242 'vec4']: s#106
[#242 '~']: s#70
[#242 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#242 /0[fh]/]: s#119
[#242 /0[iu]?/]: s#116
[#242 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#242 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#242 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#242 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#242 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#242 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#242 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#242 /[1-9][0-9]*[fh]/]: s#120
[#242 /[1-9][0-9]*[iu]?/]: s#117
[#243 '!']: s#69
[#243 '&']: s#72
[#243 '(']: s#84
[#243 '*']: s#71
[#243 '-']: s#68
[#243 'array']: s#88
[#243 'atomic']: s#102
[#243 'bitcast']: s#78
[#243 'bool']: s#95
[#243 'f16']: s#97
[#243 'f32']: s#96
[#243 'false']: s#94
[#243 'i32']: s#98
[#243 'mat2x2']: s#107
[#243 'mat2x3']: s#108
[#243 'mat2x4']: s#109
[#243 'mat3x2']: s#110
[#243 'mat3x3']: s#111
[#243 'mat3x4']: s#112
[#243 'mat4x2']: s#113
[#243 'mat4x3']: s#114
[#243 'mat4x4']: s#115
[#243 'ptr']: s#100
[#243 'sampler']: s#132
[#243 'sampler_comparison']: s#133
[#243 'texture_1d']: s#139
[#243 'texture_2d']: s#140
[#243 'texture_2d_array']: s#141
[#243 'texture_3d']: s#142
[#243 'texture_cube']: s#143
[#243 'texture_cube_array']: s#144
[#243 'texture_depth_2d']: s#134
[#243 'texture_depth_2d_array']: s#135
[#243 'texture_depth_cube']: s#136
[#243 'texture_depth_cube_array']: s#137
[#243 'texture_depth_multisampled_2d']: s#138
[#243 'texture_multisampled_2d']: s#145
[#243 'texture_storage_1d']: s#146
[#243 'texture_storage_2d']: s#147
[#243 'texture_storage_2d_array']: s#148
[#243 'texture_storage_3d']: s#149
[#243 'true']: s#93
[#243 'u32']: s#99
[#243 'vec2']: s#104
[#243 'vec3']: s#105
[#243 'vec4']: s#106
[#243 '~']: s#70
[#243 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#243 /0[fh]/]: s#119
[#243 /0[iu]?/]: s#116
[#243 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#243 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#243 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#243 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#243 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#243 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#243 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#243 /[1-9][0-9]*[fh]/]: s#120
[#243 /[1-9][0-9]*[iu]?/]: s#117
[#244 ',']: s#483
[#245 ',']: s#483
[#246 ',']: s#483
[#247 ')']: r#141
[#247 ',']: r#141
[#248 ')']: r#142
[#248 ',']: r#142
[#249 ')']: r#143
[#249 ',']: r#143
[#250 ')']: r#144
[#250 ',']: r#144
[#251 ')']: r#145
[#251 ',']: r#145
[#252 ')']: r#146
[#252 ',']: r#146
[#253 ')']: r#147
[#253 ',']: r#147
[#254 ')']: r#148
[#254 ',']: r#148
[#255 ')']: r#149
[#255 ',']: r#149
[#256 ')']: r#150
[#256 ',']: r#150
[#257 ')']: r#151
[#257 ',']: r#151
[#258 ')']: r#152
[#258 ',']: r#152
[#259 ',']: s#483
[#260 ',']: s#483
[#261 ',']: s#486
[#262 ')']: r#153
[#262 ',']: r#153
[#263 ')']: r#154
[#263 ',']: r#154
[#264 ')']: r#155
[#264 ',']: r#155
[#265 ',']: s#483
[#266 ',']: s#483
[#267 ',']: s#480
[#268 ')']: r#156
[#268 ',']: r#156
[#268 ':']: r#156
[#268 ';']: r#156
[#268 ']']: r#156
[#268 '{']: r#156
[#268 '||']: r#157
[#269 '!=']: r#33
[#269 '%']: r#33
[#269 '&&']: r#33
[#269 ')']: r#33
[#269 '*']: r#33
[#269 '+']: r#33
[#269 ',']: r#33
[#269 '-']: r#33
[#269 '/']: r#33
[#269 ':']: r#33
[#269 ';']: r#33
[#269 '==']: r#33
[#269 ']']: r#33
[#269 '{']: r#33
[#269 '||']: r#33
[#269 /\u200B_greater_than/]: r#33
[#269 /\u200B_greater_than_equal/]: r#33
[#269 /\u200B_less_than/]: r#33
[#269 /\u200B_less_than_equal/]: r#33
[#269 /\u200B_shift_left/]: s#215
[#269 /\u200B_shift_right/]: s#216
[#270 '&&']: r#159
[#270 ')']: r#158
[#270 ',']: r#158
[#270 ':']: r#158
[#270 ';']: r#158
[#270 ']']: r#158
[#270 '{']: r#158
[#271 '&&']: r#160
[#271 ')']: r#160
[#271 ',']: r#160
[#271 ':']: r#160
[#271 ';']: r#160
[#271 ']']: r#160
[#271 '{']: r#160
[#271 '||']: r#160
[#272 '&&']: r#161
[#272 ')']: r#161
[#272 ',']: r#161
[#272 ':']: r#161
[#272 ';']: r#161
[#272 ']']: r#161
[#272 '{']: r#161
[#272 '||']: r#161
[#273 '&&']: r#162
[#273 ')']: r#162
[#273 ',']: r#162
[#273 ':']: r#162
[#273 ';']: r#162
[#273 ']']: r#162
[#273 '{']: r#162
[#273 '||']: r#162
[#274 '&&']: r#163
[#274 ')']: r#163
[#274 ',']: r#163
[#274 ':']: r#163
[#274 ';']: r#163
[#274 ']']: r#163
[#274 '{']: r#163
[#274 '||']: r#163
[#275 '&&']: r#164
[#275 ')']: r#164
[#275 ',']: r#164
[#275 ':']: r#164
[#275 ';']: r#164
[#275 ']']: r#164
[#275 '{']: r#164
[#275 '||']: r#164
[#276 '&&']: r#165
[#276 ')']: r#165
[#276 ',']: r#165
[#276 ':']: r#165
[#276 ';']: r#165
[#276 ']']: r#165
[#276 '{']: r#165
[#276 '||']: r#165
[#277 '&']: r#167
[#277 ')']: r#166
[#277 ',']: r#166
[#277 ':']: r#166
[#277 ';']: r#166
[#277 ']']: r#166
[#277 '{']: r#166
[#277 /\u200B_template_args_end/]: r#166
[#278 ')']: r#168
[#278 ',']: r#168
[#278 ':']: r#168
[#278 ';']: r#168
[#278 ']']: r#168
[#278 '{']: r#168
[#278 '|']: r#169
[#278 /\u200B_template_args_end/]: r#168
[#279 ')']: r#170
[#279 ',']: r#170
[#279 ':']: r#170
[#279 ';']: r#170
[#279 ']']: r#170
[#279 '^']: r#171
[#279 '{']: r#170
[#279 /\u200B_template_args_end/]: r#170
[#280 '!=']: r#172
[#280 '%']: s#212
[#280 '&&']: r#172
[#280 ')']: r#172
[#280 '*']: s#210
[#280 '+']: r#172
[#280 ',']: r#172
[#280 '-']: r#172
[#280 '/']: s#211
[#280 ':']: r#172
[#280 ';']: r#172
[#280 '==']: r#172
[#280 ']']: r#172
[#280 '{']: r#172
[#280 '||']: r#172
[#280 /\u200B_greater_than/]: r#172
[#280 /\u200B_greater_than_equal/]: r#172
[#280 /\u200B_less_than/]: r#172
[#280 /\u200B_less_than_equal/]: r#172
[#280 /\u200B_template_args_end/]: r#172
[#281 '!=']: r#33
[#281 '%']: r#33
[#281 '&&']: r#33
[#281 ')']: r#33
[#281 '*']: r#33
[#281 '+']: r#33
[#281 ',']: r#33
[#281 '-']: r#33
[#281 '/']: r#33
[#281 ':']: r#33
[#281 ';']: r#33
[#281 '==']: r#33
[#281 ']']: r#33
[#281 '{']: r#33
[#281 '||']: r#33
[#281 /\u200B_greater_than/]: r#33
[#281 /\u200B_greater_than_equal/]: r#33
[#281 /\u200B_less_than/]: r#33
[#281 /\u200B_less_than_equal/]: r#33
[#281 /\u200B_template_args_end/]: r#33
[#282 '!=']: r#173
[#282 '&&']: r#173
[#282 ')']: r#173
[#282 ',']: r#173
[#282 ':']: r#173
[#282 ';']: r#173
[#282 '==']: r#173
[#282 ']']: r#173
[#282 '{']: r#173
[#282 '||']: r#173
[#282 /\u200B_greater_than/]: r#173
[#282 /\u200B_greater_than_equal/]: r#173
[#282 /\u200B_less_than/]: r#173
[#282 /\u200B_less_than_equal/]: r#173
[#283 '!=']: r#174
[#283 '&&']: r#174
[#283 ')']: r#174
[#283 ',']: r#174
[#283 ':']: r#174
[#283 ';']: r#174
[#283 '==']: r#174
[#283 ']']: r#174
[#283 '{']: r#174
[#283 '||']: r#174
[#283 /\u200B_greater_than/]: r#174
[#283 /\u200B_greater_than_equal/]: r#174
[#283 /\u200B_less_than/]: r#174
[#283 /\u200B_less_than_equal/]: r#174
[#284 '!=']: r#175
[#284 '%']: r#175
[#284 '&&']: r#175
[#284 ')']: r#175
[#284 '*']: r#175
[#284 '+']: r#175
[#284 ',']: r#175
[#284 '-']: r#175
[#284 '/']: r#175
[#284 ':']: r#175
[#284 ';']: r#175
[#284 '==']: r#175
[#284 ']']: r#175
[#284 '{']: r#175
[#284 '||']: r#175
[#284 /\u200B_greater_than/]: r#175
[#284 /\u200B_greater_than_equal/]: r#175
[#284 /\u200B_less_than/]: r#175
[#284 /\u200B_less_than_equal/]: r#175
[#284 /\u200B_template_args_end/]: r#175
[#285 '.']: s#203
[#285 '[']: s#202
[#286 '.']: s#203
[#286 '[']: s#202
[#287 '!=']: r#176
[#287 '%']: r#176
[#287 '%=']: r#176
[#287 '&&']: r#176
[#287 '&']: r#176
[#287 '&=']: r#176
[#287 ')']: r#176
[#287 '*']: r#176
[#287 '*=']: r#176
[#287 '+']: r#176
[#287 '++']: r#176
[#287 '+=']: r#176
[#287 ',']: r#176
[#287 '-']: r#176
[#287 '--']: r#176
[#287 '-=']: r#176
[#287 '.']: r#176
[#287 '/']: r#176
[#287 '/=']: r#176
[#287 ':']: r#176
[#287 ';']: r#176
[#287 '=']: r#176
[#287 '==']: r#176
[#287 '[']: r#176
[#287 ']']: r#176
[#287 '^']: r#176
[#287 '^=']: r#176
[#287 '{']: r#176
[#287 '|']: r#176
[#287 '|=']: r#176
[#287 '||']: r#176
[#287 /\u200B_greater_than/]: r#176
[#287 /\u200B_greater_than_equal/]: r#176
[#287 /\u200B_less_than/]: r#176
[#287 /\u200B_less_than_equal/]: r#176
[#287 /\u200B_shift_left/]: r#176
[#287 /\u200B_shift_left_assign/]: r#176
[#287 /\u200B_shift_right/]: r#176
[#287 /\u200B_shift_right_assign/]: r#176
[#287 /\u200B_template_args_end/]: r#176
[#288 '!=']: r#177
[#288 '%']: r#177
[#288 '%=']: r#177
[#288 '&&']: r#177
[#288 '&']: r#177
[#288 '&=']: r#177
[#288 ')']: r#177
[#288 '*']: r#177
[#288 '*=']: r#177
[#288 '+']: r#177
[#288 '++']: r#177
[#288 '+=']: r#177
[#288 ',']: r#177
[#288 '-']: r#177
[#288 '--']: r#177
[#288 '-=']: r#177
[#288 '.']: r#177
[#288 '/']: r#177
[#288 '/=']: r#177
[#288 ':']: r#177
[#288 ';']: r#177
[#288 '=']: r#177
[#288 '==']: r#177
[#288 '[']: r#177
[#288 ']']: r#177
[#288 '^']: r#177
[#288 '^=']: r#177
[#288 '{']: r#177
[#288 '|']: r#177
[#288 '|=']: r#177
[#288 '||']: r#177
[#288 /\u200B_greater_than/]: r#177
[#288 /\u200B_greater_than_equal/]: r#177
[#288 /\u200B_less_than/]: r#177
[#288 /\u200B_less_than_equal/]: r#177
[#288 /\u200B_shift_left/]: r#177
[#288 /\u200B_shift_left_assign/]: r#177
[#288 /\u200B_shift_right/]: r#177
[#288 /\u200B_shift_right_assign/]: r#177
[#288 /\u200B_template_args_end/]: r#177
[#289 '!=']: r#178
[#289 '%']: r#178
[#289 '%=']: r#178
[#289 '&&']: r#178
[#289 '&']: r#178
[#289 '&=']: r#178
[#289 ')']: r#178
[#289 '*']: r#178
[#289 '*=']: r#178
[#289 '+']: r#178
[#289 '++']: r#178
[#289 '+=']: r#178
[#289 ',']: r#178
[#289 '-']: r#178
[#289 '--']: r#178
[#289 '-=']: r#178
[#289 '.']: r#178
[#289 '/']: r#178
[#289 '/=']: r#178
[#289 ':']: r#178
[#289 ';']: r#178
[#289 '=']: r#178
[#289 '==']: r#178
[#289 '[']: r#178
[#289 ']']: r#178
[#289 '^']: r#178
[#289 '^=']: r#178
[#289 '{']: r#178
[#289 '|']: r#178
[#289 '|=']: r#178
[#289 '||']: r#178
[#289 /\u200B_greater_than/]: r#178
[#289 /\u200B_greater_than_equal/]: r#178
[#289 /\u200B_less_than/]: r#178
[#289 /\u200B_less_than_equal/]: r#178
[#289 /\u200B_shift_left/]: r#178
[#289 /\u200B_shift_left_assign/]: r#178
[#289 /\u200B_shift_right/]: r#178
[#289 /\u200B_shift_right_assign/]: r#178
[#289 /\u200B_template_args_end/]: r#178
[#290 '!=']: r#179
[#290 '%']: r#179
[#290 '%=']: r#179
[#290 '&&']: r#179
[#290 '&']: r#179
[#290 '&=']: r#179
[#290 ')']: r#179
[#290 '*']: r#179
[#290 '*=']: r#179
[#290 '+']: r#179
[#290 '++']: r#179
[#290 '+=']: r#179
[#290 ',']: r#179
[#290 '-']: r#179
[#290 '--']: r#179
[#290 '-=']: r#179
[#290 '.']: r#179
[#290 '/']: r#179
[#290 '/=']: r#179
[#290 ':']: r#179
[#290 ';']: r#179
[#290 '=']: r#179
[#290 '==']: r#179
[#290 '[']: r#179
[#290 ']']: r#179
[#290 '^']: r#179
[#290 '^=']: r#179
[#290 '{']: r#179
[#290 '|']: r#179
[#290 '|=']: r#179
[#290 '||']: r#179
[#290 /\u200B_greater_than/]: r#179
[#290 /\u200B_greater_than_equal/]: r#179
[#290 /\u200B_less_than/]: r#179
[#290 /\u200B_less_than_equal/]: r#179
[#290 /\u200B_shift_left/]: r#179
[#290 /\u200B_shift_left_assign/]: r#179
[#290 /\u200B_shift_right/]: r#179
[#290 /\u200B_shift_right_assign/]: r#179
[#290 /\u200B_template_args_end/]: r#179
[#291 '!=']: r#180
[#291 '%']: r#180
[#291 '%=']: r#180
[#291 '&&']: r#180
[#291 '&']: r#180
[#291 '&=']: r#180
[#291 ')']: r#180
[#291 '*']: r#180
[#291 '*=']: r#180
[#291 '+']: r#180
[#291 '++']: r#180
[#291 '+=']: r#180
[#291 ',']: r#180
[#291 '-']: r#180
[#291 '--']: r#180
[#291 '-=']: r#180
[#291 '.']: r#180
[#291 '/']: r#180
[#291 '/=']: r#180
[#291 ':']: r#180
[#291 ';']: r#180
[#291 '=']: r#180
[#291 '==']: r#180
[#291 '[']: r#180
[#291 ']']: r#180
[#291 '^']: r#180
[#291 '^=']: r#180
[#291 '{']: r#180
[#291 '|']: r#180
[#291 '|=']: r#180
[#291 '||']: r#180
[#291 /\u200B_greater_than/]: r#180
[#291 /\u200B_greater_than_equal/]: r#180
[#291 /\u200B_less_than/]: r#180
[#291 /\u200B_less_than_equal/]: r#180
[#291 /\u200B_shift_left/]: r#180
[#291 /\u200B_shift_left_assign/]: r#180
[#291 /\u200B_shift_right/]: r#180
[#291 /\u200B_shift_right_assign/]: r#180
[#291 /\u200B_template_args_end/]: r#180
[#292 '!=']: r#181
[#292 '%']: r#181
[#292 '%=']: r#181
[#292 '&&']: r#181
[#292 '&']: r#181
[#292 '&=']: r#181
[#292 ')']: r#181
[#292 '*']: r#181
[#292 '*=']: r#181
[#292 '+']: r#181
[#292 '++']: r#181
[#292 '+=']: r#181
[#292 ',']: r#181
[#292 '-']: r#181
[#292 '--']: r#181
[#292 '-=']: r#181
[#292 '.']: r#181
[#292 '/']: r#181
[#292 '/=']: r#181
[#292 ':']: r#181
[#292 ';']: r#181
[#292 '=']: r#181
[#292 '==']: r#181
[#292 '[']: r#181
[#292 ']']: r#181
[#292 '^']: r#181
[#292 '^=']: r#181
[#292 '{']: r#181
[#292 '|']: r#181
[#292 '|=']: r#181
[#292 '||']: r#181
[#292 /\u200B_greater_than/]: r#181
[#292 /\u200B_greater_than_equal/]: r#181
[#292 /\u200B_less_than/]: r#181
[#292 /\u200B_less_than_equal/]: r#181
[#292 /\u200B_shift_left/]: r#181
[#292 /\u200B_shift_left_assign/]: r#181
[#292 /\u200B_shift_right/]: r#181
[#292 /\u200B_shift_right_assign/]: r#181
[#292 /\u200B_template_args_end/]: r#181
[#293 '!=']: r#182
[#293 '%']: r#182
[#293 '%=']: r#182
[#293 '&&']: r#182
[#293 '&']: r#182
[#293 '&=']: r#182
[#293 ')']: r#182
[#293 '*']: r#182
[#293 '*=']: r#182
[#293 '+']: r#182
[#293 '++']: r#182
[#293 '+=']: r#182
[#293 ',']: r#182
[#293 '-']: r#182
[#293 '--']: r#182
[#293 '-=']: r#182
[#293 '.']: r#182
[#293 '/']: r#182
[#293 '/=']: r#182
[#293 ':']: r#182
[#293 ';']: r#182
[#293 '=']: r#182
[#293 '==']: r#182
[#293 '[']: r#182
[#293 ']']: r#182
[#293 '^']: r#182
[#293 '^=']: r#182
[#293 '{']: r#182
[#293 '|']: r#182
[#293 '|=']: r#182
[#293 '||']: r#182
[#293 /\u200B_greater_than/]: r#182
[#293 /\u200B_greater_than_equal/]: r#182
[#293 /\u200B_less_than/]: r#182
[#293 /\u200B_less_than_equal/]: r#182
[#293 /\u200B_shift_left/]: r#182
[#293 /\u200B_shift_left_assign/]: r#182
[#293 /\u200B_shift_right/]: r#182
[#293 /\u200B_shift_right_assign/]: r#182
[#293 /\u200B_template_args_end/]: r#182
[#294 '!=']: r#183
[#294 '%']: r#183
[#294 '%=']: r#183
[#294 '&&']: r#183
[#294 '&']: r#183
[#294 '&=']: r#183
[#294 ')']: r#183
[#294 '*']: r#183
[#294 '*=']: r#183
[#294 '+']: r#183
[#294 '++']: r#183
[#294 '+=']: r#183
[#294 ',']: r#183
[#294 '-']: r#183
[#294 '--']: r#183
[#294 '-=']: r#183
[#294 '.']: r#183
[#294 '/']: r#183
[#294 '/=']: r#183
[#294 ':']: r#183
[#294 ';']: r#183
[#294 '=']: r#183
[#294 '==']: r#183
[#294 '[']: r#183
[#294 ']']: r#183
[#294 '^']: r#183
[#294 '^=']: r#183
[#294 '{']: r#183
[#294 '|']: r#183
[#294 '|=']: r#183
[#294 '||']: r#183
[#294 /\u200B_greater_than/]: r#183
[#294 /\u200B_greater_than_equal/]: r#183
[#294 /\u200B_less_than/]: r#183
[#294 /\u200B_less_than_equal/]: r#183
[#294 /\u200B_shift_left/]: r#183
[#294 /\u200B_shift_left_assign/]: r#183
[#294 /\u200B_shift_right/]: r#183
[#294 /\u200B_shift_right_assign/]: r#183
[#294 /\u200B_template_args_end/]: r#183
[#295 '!=']: r#184
[#295 '%']: r#184
[#295 '%=']: r#184
[#295 '&&']: r#184
[#295 '&']: r#184
[#295 '&=']: r#184
[#295 ')']: r#184
[#295 '*']: r#184
[#295 '*=']: r#184
[#295 '+']: r#184
[#295 '++']: r#184
[#295 '+=']: r#184
[#295 ',']: r#184
[#295 '-']: r#184
[#295 '--']: r#184
[#295 '-=']: r#184
[#295 '.']: r#184
[#295 '/']: r#184
[#295 '/=']: r#184
[#295 ':']: r#184
[#295 ';']: r#184
[#295 '=']: r#184
[#295 '==']: r#184
[#295 '[']: r#184
[#295 ']']: r#184
[#295 '^']: r#184
[#295 '^=']: r#184
[#295 '{']: r#184
[#295 '|']: r#184
[#295 '|=']: r#184
[#295 '||']: r#184
[#295 /\u200B_greater_than/]: r#184
[#295 /\u200B_greater_than_equal/]: r#184
[#295 /\u200B_less_than/]: r#184
[#295 /\u200B_less_than_equal/]: r#184
[#295 /\u200B_shift_left/]: r#184
[#295 /\u200B_shift_left_assign/]: r#184
[#295 /\u200B_shift_right/]: r#184
[#295 /\u200B_shift_right_assign/]: r#184
[#295 /\u200B_template_args_end/]: r#184
[#296 ']']: s#474
[#297 'array']: s#362
[#297 'atomic']: s#102
[#297 'bool']: s#95
[#297 'f16']: s#97
[#297 'f32']: s#96
[#297 'i32']: s#98
[#297 'mat2x2']: s#107
[#297 'mat2x3']: s#108
[#297 'mat2x4']: s#109
[#297 'mat3x2']: s#110
[#297 'mat3x3']: s#111
[#297 'mat3x4']: s#112
[#297 'mat4x2']: s#113
[#297 'mat4x3']: s#114
[#297 'mat4x4']: s#115
[#297 'ptr']: s#100
[#297 'sampler']: s#132
[#297 'sampler_comparison']: s#133
[#297 'texture_1d']: s#139
[#297 'texture_2d']: s#140
[#297 'texture_2d_array']: s#141
[#297 'texture_3d']: s#142
[#297 'texture_cube']: s#143
[#297 'texture_cube_array']: s#144
[#297 'texture_depth_2d']: s#134
[#297 'texture_depth_2d_array']: s#135
[#297 'texture_depth_cube']: s#136
[#297 'texture_depth_cube_array']: s#137
[#297 'texture_depth_multisampled_2d']: s#138
[#297 'texture_multisampled_2d']: s#145
[#297 'texture_storage_1d']: s#146
[#297 'texture_storage_2d']: s#147
[#297 'texture_storage_2d_array']: s#148
[#297 'texture_storage_3d']: s#149
[#297 'u32']: s#99
[#297 'vec2']: s#104
[#297 'vec3']: s#105
[#297 'vec4']: s#106
[#297 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#298 'array']: r#185
[#298 'atomic']: r#185
[#298 'bgra8unorm']: r#185
[#298 'bool']: r#185
[#298 'f16']: r#185
[#298 'f32']: r#185
[#298 'function']: r#185
[#298 'i32']: r#185
[#298 'mat2x2']: r#185
[#298 'mat2x3']: r#185
[#298 'mat2x4']: r#185
[#298 'mat3x2']: r#185
[#298 'mat3x3']: r#185
[#298 'mat3x4']: r#185
[#298 'mat4x2']: r#185
[#298 'mat4x3']: r#185
[#298 'mat4x4']: r#185
[#298 'private']: r#185
[#298 'ptr']: r#185
[#298 'r32float']: r#185
[#298 'r32sint']: r#185
[#298 'r32uint']: r#185
[#298 'rg32float']: r#185
[#298 'rg32sint']: r#185
[#298 'rg32uint']: r#185
[#298 'rgba16float']: r#185
[#298 'rgba16sint']: r#185
[#298 'rgba16uint']: r#185
[#298 'rgba32float']: r#185
[#298 'rgba32sint']: r#185
[#298 'rgba32uint']: r#185
[#298 'rgba8sint']: r#185
[#298 'rgba8snorm']: r#185
[#298 'rgba8uint']: r#185
[#298 'rgba8unorm']: r#185
[#298 'sampler']: r#185
[#298 'sampler_comparison']: r#185
[#298 'storage']: r#185
[#298 'texture_1d']: r#185
[#298 'texture_2d']: r#185
[#298 'texture_2d_array']: r#185
[#298 'texture_3d']: r#185
[#298 'texture_cube']: r#185
[#298 'texture_cube_array']: r#185
[#298 'texture_depth_2d']: r#185
[#298 'texture_depth_2d_array']: r#185
[#298 'texture_depth_cube']: r#185
[#298 'texture_depth_cube_array']: r#185
[#298 'texture_depth_multisampled_2d']: r#185
[#298 'texture_multisampled_2d']: r#185
[#298 'texture_storage_1d']: r#185
[#298 'texture_storage_2d']: r#185
[#298 'texture_storage_2d_array']: r#185
[#298 'texture_storage_3d']: r#185
[#298 'u32']: r#185
[#298 'uniform']: r#185
[#298 'vec2']: r#185
[#298 'vec3']: r#185
[#298 'vec4']: r#185
[#298 'workgroup']: r#185
[#298 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#185
[#299 ')']: s#472
[#300 ')']: r#186
[#301 ',']: s#471
[#302 '!=']: r#187
[#302 '%']: r#187
[#302 '&&']: r#187
[#302 '&']: r#187
[#302 ')']: r#187
[#302 '*']: r#187
[#302 '+']: r#187
[#302 ',']: r#187
[#302 '-']: r#187
[#302 '.']: r#187
[#302 '/']: r#187
[#302 ':']: r#187
[#302 ';']: r#187
[#302 '==']: r#187
[#302 '[']: r#187
[#302 ']']: r#187
[#302 '^']: r#187
[#302 '{']: r#187
[#302 '|']: r#187
[#302 '||']: r#187
[#302 /\u200B_greater_than/]: r#187
[#302 /\u200B_greater_than_equal/]: r#187
[#302 /\u200B_less_than/]: r#187
[#302 /\u200B_less_than_equal/]: r#187
[#302 /\u200B_shift_left/]: r#187
[#302 /\u200B_shift_right/]: r#187
[#302 /\u200B_template_args_end/]: r#187
[#303 'array']: s#362
[#303 'atomic']: s#102
[#303 'bool']: s#95
[#303 'f16']: s#97
[#303 'f32']: s#96
[#303 'i32']: s#98
[#303 'mat2x2']: s#107
[#303 'mat2x3']: s#108
[#303 'mat2x4']: s#109
[#303 'mat3x2']: s#110
[#303 'mat3x3']: s#111
[#303 'mat3x4']: s#112
[#303 'mat4x2']: s#113
[#303 'mat4x3']: s#114
[#303 'mat4x4']: s#115
[#303 'ptr']: s#100
[#303 'sampler']: s#132
[#303 'sampler_comparison']: s#133
[#303 'texture_1d']: s#139
[#303 'texture_2d']: s#140
[#303 'texture_2d_array']: s#141
[#303 'texture_3d']: s#142
[#303 'texture_cube']: s#143
[#303 'texture_cube_array']: s#144
[#303 'texture_depth_2d']: s#134
[#303 'texture_depth_2d_array']: s#135
[#303 'texture_depth_cube']: s#136
[#303 'texture_depth_cube_array']: s#137
[#303 'texture_depth_multisampled_2d']: s#138
[#303 'texture_multisampled_2d']: s#145
[#303 'texture_storage_1d']: s#146
[#303 'texture_storage_2d']: s#147
[#303 'texture_storage_2d_array']: s#148
[#303 'texture_storage_3d']: s#149
[#303 'u32']: s#99
[#303 'vec2']: s#104
[#303 'vec3']: s#105
[#303 'vec4']: s#106
[#303 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#304 'array']: s#362
[#304 'atomic']: s#102
[#304 'bool']: s#95
[#304 'f16']: s#97
[#304 'f32']: s#96
[#304 'i32']: s#98
[#304 'mat2x2']: s#107
[#304 'mat2x3']: s#108
[#304 'mat2x4']: s#109
[#304 'mat3x2']: s#110
[#304 'mat3x3']: s#111
[#304 'mat3x4']: s#112
[#304 'mat4x2']: s#113
[#304 'mat4x3']: s#114
[#304 'mat4x4']: s#115
[#304 'ptr']: s#100
[#304 'sampler']: s#132
[#304 'sampler_comparison']: s#133
[#304 'texture_1d']: s#139
[#304 'texture_2d']: s#140
[#304 'texture_2d_array']: s#141
[#304 'texture_3d']: s#142
[#304 'texture_cube']: s#143
[#304 'texture_cube_array']: s#144
[#304 'texture_depth_2d']: s#134
[#304 'texture_depth_2d_array']: s#135
[#304 'texture_depth_cube']: s#136
[#304 'texture_depth_cube_array']: s#137
[#304 'texture_depth_multisampled_2d']: s#138
[#304 'texture_multisampled_2d']: s#145
[#304 'texture_storage_1d']: s#146
[#304 'texture_storage_2d']: s#147
[#304 'texture_storage_2d_array']: s#148
[#304 'texture_storage_3d']: s#149
[#304 'u32']: s#99
[#304 'vec2']: s#104
[#304 'vec3']: s#105
[#304 'vec4']: s#106
[#304 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#305 'array']: s#362
[#305 'atomic']: s#102
[#305 'bool']: s#95
[#305 'f16']: s#97
[#305 'f32']: s#96
[#305 'i32']: s#98
[#305 'mat2x2']: s#107
[#305 'mat2x3']: s#108
[#305 'mat2x4']: s#109
[#305 'mat3x2']: s#110
[#305 'mat3x3']: s#111
[#305 'mat3x4']: s#112
[#305 'mat4x2']: s#113
[#305 'mat4x3']: s#114
[#305 'mat4x4']: s#115
[#305 'ptr']: s#100
[#305 'sampler']: s#132
[#305 'sampler_comparison']: s#133
[#305 'texture_1d']: s#139
[#305 'texture_2d']: s#140
[#305 'texture_2d_array']: s#141
[#305 'texture_3d']: s#142
[#305 'texture_cube']: s#143
[#305 'texture_cube_array']: s#144
[#305 'texture_depth_2d']: s#134
[#305 'texture_depth_2d_array']: s#135
[#305 'texture_depth_cube']: s#136
[#305 'texture_depth_cube_array']: s#137
[#305 'texture_depth_multisampled_2d']: s#138
[#305 'texture_multisampled_2d']: s#145
[#305 'texture_storage_1d']: s#146
[#305 'texture_storage_2d']: s#147
[#305 'texture_storage_2d_array']: s#148
[#305 'texture_storage_3d']: s#149
[#305 'u32']: s#99
[#305 'vec2']: s#104
[#305 'vec3']: s#105
[#305 'vec4']: s#106
[#305 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#306 'function']: s#372
[#306 'private']: s#373
[#306 'storage']: s#376
[#306 'uniform']: s#375
[#306 'workgroup']: s#374
[#307 'array']: s#362
[#307 'atomic']: s#102
[#307 'bool']: s#95
[#307 'f16']: s#97
[#307 'f32']: s#96
[#307 'i32']: s#98
[#307 'mat2x2']: s#107
[#307 'mat2x3']: s#108
[#307 'mat2x4']: s#109
[#307 'mat3x2']: s#110
[#307 'mat3x3']: s#111
[#307 'mat3x4']: s#112
[#307 'mat4x2']: s#113
[#307 'mat4x3']: s#114
[#307 'mat4x4']: s#115
[#307 'ptr']: s#100
[#307 'sampler']: s#132
[#307 'sampler_comparison']: s#133
[#307 'texture_1d']: s#139
[#307 'texture_2d']: s#140
[#307 'texture_2d_array']: s#141
[#307 'texture_3d']: s#142
[#307 'texture_cube']: s#143
[#307 'texture_cube_array']: s#144
[#307 'texture_depth_2d']: s#134
[#307 'texture_depth_2d_array']: s#135
[#307 'texture_depth_cube']: s#136
[#307 'texture_depth_cube_array']: s#137
[#307 'texture_depth_multisampled_2d']: s#138
[#307 'texture_multisampled_2d']: s#145
[#307 'texture_storage_1d']: s#146
[#307 'texture_storage_2d']: s#147
[#307 'texture_storage_2d_array']: s#148
[#307 'texture_storage_3d']: s#149
[#307 'u32']: s#99
[#307 'vec2']: s#104
[#307 'vec3']: s#105
[#307 'vec4']: s#106
[#307 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#308 'array']: s#362
[#308 'atomic']: s#102
[#308 'bool']: s#95
[#308 'f16']: s#97
[#308 'f32']: s#96
[#308 'i32']: s#98
[#308 'mat2x2']: s#107
[#308 'mat2x3']: s#108
[#308 'mat2x4']: s#109
[#308 'mat3x2']: s#110
[#308 'mat3x3']: s#111
[#308 'mat3x4']: s#112
[#308 'mat4x2']: s#113
[#308 'mat4x3']: s#114
[#308 'mat4x4']: s#115
[#308 'ptr']: s#100
[#308 'sampler']: s#132
[#308 'sampler_comparison']: s#133
[#308 'texture_1d']: s#139
[#308 'texture_2d']: s#140
[#308 'texture_2d_array']: s#141
[#308 'texture_3d']: s#142
[#308 'texture_cube']: s#143
[#308 'texture_cube_array']: s#144
[#308 'texture_depth_2d']: s#134
[#308 'texture_depth_2d_array']: s#135
[#308 'texture_depth_cube']: s#136
[#308 'texture_depth_cube_array']: s#137
[#308 'texture_depth_multisampled_2d']: s#138
[#308 'texture_multisampled_2d']: s#145
[#308 'texture_storage_1d']: s#146
[#308 'texture_storage_2d']: s#147
[#308 'texture_storage_2d_array']: s#148
[#308 'texture_storage_3d']: s#149
[#308 'u32']: s#99
[#308 'vec2']: s#104
[#308 'vec3']: s#105
[#308 'vec4']: s#106
[#308 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#309 'array']: s#362
[#309 'atomic']: s#102
[#309 'bool']: s#95
[#309 'f16']: s#97
[#309 'f32']: s#96
[#309 'i32']: s#98
[#309 'mat2x2']: s#107
[#309 'mat2x3']: s#108
[#309 'mat2x4']: s#109
[#309 'mat3x2']: s#110
[#309 'mat3x3']: s#111
[#309 'mat3x4']: s#112
[#309 'mat4x2']: s#113
[#309 'mat4x3']: s#114
[#309 'mat4x4']: s#115
[#309 'ptr']: s#100
[#309 'sampler']: s#132
[#309 'sampler_comparison']: s#133
[#309 'texture_1d']: s#139
[#309 'texture_2d']: s#140
[#309 'texture_2d_array']: s#141
[#309 'texture_3d']: s#142
[#309 'texture_cube']: s#143
[#309 'texture_cube_array']: s#144
[#309 'texture_depth_2d']: s#134
[#309 'texture_depth_2d_array']: s#135
[#309 'texture_depth_cube']: s#136
[#309 'texture_depth_cube_array']: s#137
[#309 'texture_depth_multisampled_2d']: s#138
[#309 'texture_multisampled_2d']: s#145
[#309 'texture_storage_1d']: s#146
[#309 'texture_storage_2d']: s#147
[#309 'texture_storage_2d_array']: s#148
[#309 'texture_storage_3d']: s#149
[#309 'u32']: s#99
[#309 'vec2']: s#104
[#309 'vec3']: s#105
[#309 'vec4']: s#106
[#309 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#310 'bgra8unorm']: s#460
[#310 'r32float']: s#453
[#310 'r32sint']: s#452
[#310 'r32uint']: s#451
[#310 'rg32float']: s#456
[#310 'rg32sint']: s#455
[#310 'rg32uint']: s#454
[#310 'rgba16float']: s#450
[#310 'rgba16sint']: s#449
[#310 'rgba16uint']: s#448
[#310 'rgba32float']: s#459
[#310 'rgba32sint']: s#458
[#310 'rgba32uint']: s#457
[#310 'rgba8sint']: s#447
[#310 'rgba8snorm']: s#445
[#310 'rgba8uint']: s#446
[#310 'rgba8unorm']: s#444
[#311 '}']: s#442
[#312 '}']: r#188
[#313 '&']: s#350
[#313 '(']: s#351
[#313 '*']: s#349
[#313 ';']: s#314
[#313 '_']: s#347
[#313 'array']: s#88
[#313 'atomic']: s#102
[#313 'bool']: s#95
[#313 'break']: s#339
[#313 'const']: s#338
[#313 'const_assert']: s#31
[#313 'continue']: s#340
[#313 'discard']: s#325
[#313 'f16']: s#97
[#313 'f32']: s#96
[#313 'for']: s#333
[#313 'i32']: s#98
[#313 'if']: s#344
[#313 'let']: s#337
[#313 'loop']: s#332
[#313 'mat2x2']: s#107
[#313 'mat2x3']: s#108
[#313 'mat2x4']: s#109
[#313 'mat3x2']: s#110
[#313 'mat3x3']: s#111
[#313 'mat3x4']: s#112
[#313 'mat4x2']: s#113
[#313 'mat4x3']: s#114
[#313 'mat4x4']: s#115
[#313 'ptr']: s#100
[#313 'return']: s#329
[#313 'sampler']: s#132
[#313 'sampler_comparison']: s#133
[#313 'switch']: s#331
[#313 'texture_1d']: s#139
[#313 'texture_2d']: s#140
[#313 'texture_2d_array']: s#141
[#313 'texture_3d']: s#142
[#313 'texture_cube']: s#143
[#313 'texture_cube_array']: s#144
[#313 'texture_depth_2d']: s#134
[#313 'texture_depth_2d_array']: s#135
[#313 'texture_depth_cube']: s#136
[#313 'texture_depth_cube_array']: s#137
[#313 'texture_depth_multisampled_2d']: s#138
[#313 'texture_multisampled_2d']: s#145
[#313 'texture_storage_1d']: s#146
[#313 'texture_storage_2d']: s#147
[#313 'texture_storage_2d_array']: s#148
[#313 'texture_storage_3d']: s#149
[#313 'u32']: s#99
[#313 'var']: s#158
[#313 'vec2']: s#104
[#313 'vec3']: s#105
[#313 'vec4']: s#106
[#313 'while']: s#334
[#313 '{']: s#187
[#313 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#314 '&']: r#189
[#314 '(']: r#189
[#314 '*']: r#189
[#314 ';']: r#189
[#314 '_']: r#189
[#314 'array']: r#189
[#314 'atomic']: r#189
[#314 'bool']: r#189
[#314 'break']: r#189
[#314 'const']: r#189
[#314 'const_assert']: r#189
[#314 'continue']: r#189
[#314 'continuing']: r#189
[#314 'discard']: r#189
[#314 'f16']: r#189
[#314 'f32']: r#189
[#314 'for']: r#189
[#314 'i32']: r#189
[#314 'if']: r#189
[#314 'let']: r#189
[#314 'loop']: r#189
[#314 'mat2x2']: r#189
[#314 'mat2x3']: r#189
[#314 'mat2x4']: r#189
[#314 'mat3x2']: r#189
[#314 'mat3x3']: r#189
[#314 'mat3x4']: r#189
[#314 'mat4x2']: r#189
[#314 'mat4x3']: r#189
[#314 'mat4x4']: r#189
[#314 'ptr']: r#189
[#314 'return']: r#189
[#314 'sampler']: r#189
[#314 'sampler_comparison']: r#189
[#314 'switch']: r#189
[#314 'texture_1d']: r#189
[#314 'texture_2d']: r#189
[#314 'texture_2d_array']: r#189
[#314 'texture_3d']: r#189
[#314 'texture_cube']: r#189
[#314 'texture_cube_array']: r#189
[#314 'texture_depth_2d']: r#189
[#314 'texture_depth_2d_array']: r#189
[#314 'texture_depth_cube']: r#189
[#314 'texture_depth_cube_array']: r#189
[#314 'texture_depth_multisampled_2d']: r#189
[#314 'texture_multisampled_2d']: r#189
[#314 'texture_storage_1d']: r#189
[#314 'texture_storage_2d']: r#189
[#314 'texture_storage_2d_array']: r#189
[#314 'texture_storage_3d']: r#189
[#314 'u32']: r#189
[#314 'var']: r#189
[#314 'vec2']: r#189
[#314 'vec3']: r#189
[#314 'vec4']: r#189
[#314 'while']: r#189
[#314 '{']: r#189
[#314 '}']: r#189
[#314 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#189
[#315 ';']: s#440
[#316 '&']: r#190
[#316 '(']: r#190
[#316 '*']: r#190
[#316 ';']: r#190
[#316 '_']: r#190
[#316 'array']: r#190
[#316 'atomic']: r#190
[#316 'bool']: r#190
[#316 'break']: r#190
[#316 'const']: r#190
[#316 'const_assert']: r#190
[#316 'continue']: r#190
[#316 'continuing']: r#190
[#316 'discard']: r#190
[#316 'f16']: r#190
[#316 'f32']: r#190
[#316 'for']: r#190
[#316 'i32']: r#190
[#316 'if']: r#190
[#316 'let']: r#190
[#316 'loop']: r#190
[#316 'mat2x2']: r#190
[#316 'mat2x3']: r#190
[#316 'mat2x4']: r#190
[#316 'mat3x2']: r#190
[#316 'mat3x3']: r#190
[#316 'mat3x4']: r#190
[#316 'mat4x2']: r#190
[#316 'mat4x3']: r#190
[#316 'mat4x4']: r#190
[#316 'ptr']: r#190
[#316 'return']: r#190
[#316 'sampler']: r#190
[#316 'sampler_comparison']: r#190
[#316 'switch']: r#190
[#316 'texture_1d']: r#190
[#316 'texture_2d']: r#190
[#316 'texture_2d_array']: r#190
[#316 'texture_3d']: r#190
[#316 'texture_cube']: r#190
[#316 'texture_cube_array']: r#190
[#316 'texture_depth_2d']: r#190
[#316 'texture_depth_2d_array']: r#190
[#316 'texture_depth_cube']: r#190
[#316 'texture_depth_cube_array']: r#190
[#316 'texture_depth_multisampled_2d']: r#190
[#316 'texture_multisampled_2d']: r#190
[#316 'texture_storage_1d']: r#190
[#316 'texture_storage_2d']: r#190
[#316 'texture_storage_2d_array']: r#190
[#316 'texture_storage_3d']: r#190
[#316 'u32']: r#190
[#316 'var']: r#190
[#316 'vec2']: r#190
[#316 'vec3']: r#190
[#316 'vec4']: r#190
[#316 'while']: r#190
[#316 '{']: r#190
[#316 '}']: r#190
[#316 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#190
[#317 '&']: r#191
[#317 '(']: r#191
[#317 '*']: r#191
[#317 ';']: r#191
[#317 '_']: r#191
[#317 'array']: r#191
[#317 'atomic']: r#191
[#317 'bool']: r#191
[#317 'break']: r#191
[#317 'const']: r#191
[#317 'const_assert']: r#191
[#317 'continue']: r#191
[#317 'continuing']: r#191
[#317 'discard']: r#191
[#317 'f16']: r#191
[#317 'f32']: r#191
[#317 'for']: r#191
[#317 'i32']: r#191
[#317 'if']: r#191
[#317 'let']: r#191
[#317 'loop']: r#191
[#317 'mat2x2']: r#191
[#317 'mat2x3']: r#191
[#317 'mat2x4']: r#191
[#317 'mat3x2']: r#191
[#317 'mat3x3']: r#191
[#317 'mat3x4']: r#191
[#317 'mat4x2']: r#191
[#317 'mat4x3']: r#191
[#317 'mat4x4']: r#191
[#317 'ptr']: r#191
[#317 'return']: r#191
[#317 'sampler']: r#191
[#317 'sampler_comparison']: r#191
[#317 'switch']: r#191
[#317 'texture_1d']: r#191
[#317 'texture_2d']: r#191
[#317 'texture_2d_array']: r#191
[#317 'texture_3d']: r#191
[#317 'texture_cube']: r#191
[#317 'texture_cube_array']: r#191
[#317 'texture_depth_2d']: r#191
[#317 'texture_depth_2d_array']: r#191
[#317 'texture_depth_cube']: r#191
[#317 'texture_depth_cube_array']: r#191
[#317 'texture_depth_multisampled_2d']: r#191
[#317 'texture_multisampled_2d']: r#191
[#317 'texture_storage_1d']: r#191
[#317 'texture_storage_2d']: r#191
[#317 'texture_storage_2d_array']: r#191
[#317 'texture_storage_3d']: r#191
[#317 'u32']: r#191
[#317 'var']: r#191
[#317 'vec2']: r#191
[#317 'vec3']: r#191
[#317 'vec4']: r#191
[#317 'while']: r#191
[#317 '{']: r#191
[#317 '}']: r#191
[#317 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#191
[#318 '&']: r#192
[#318 '(']: r#192
[#318 '*']: r#192
[#318 ';']: r#192
[#318 '_']: r#192
[#318 'array']: r#192
[#318 'atomic']: r#192
[#318 'bool']: r#192
[#318 'break']: r#192
[#318 'const']: r#192
[#318 'const_assert']: r#192
[#318 'continue']: r#192
[#318 'continuing']: r#192
[#318 'discard']: r#192
[#318 'f16']: r#192
[#318 'f32']: r#192
[#318 'for']: r#192
[#318 'i32']: r#192
[#318 'if']: r#192
[#318 'let']: r#192
[#318 'loop']: r#192
[#318 'mat2x2']: r#192
[#318 'mat2x3']: r#192
[#318 'mat2x4']: r#192
[#318 'mat3x2']: r#192
[#318 'mat3x3']: r#192
[#318 'mat3x4']: r#192
[#318 'mat4x2']: r#192
[#318 'mat4x3']: r#192
[#318 'mat4x4']: r#192
[#318 'ptr']: r#192
[#318 'return']: r#192
[#318 'sampler']: r#192
[#318 'sampler_comparison']: r#192
[#318 'switch']: r#192
[#318 'texture_1d']: r#192
[#318 'texture_2d']: r#192
[#318 'texture_2d_array']: r#192
[#318 'texture_3d']: r#192
[#318 'texture_cube']: r#192
[#318 'texture_cube_array']: r#192
[#318 'texture_depth_2d']: r#192
[#318 'texture_depth_2d_array']: r#192
[#318 'texture_depth_cube']: r#192
[#318 'texture_depth_cube_array']: r#192
[#318 'texture_depth_multisampled_2d']: r#192
[#318 'texture_multisampled_2d']: r#192
[#318 'texture_storage_1d']: r#192
[#318 'texture_storage_2d']: r#192
[#318 'texture_storage_2d_array']: r#192
[#318 'texture_storage_3d']: r#192
[#318 'u32']: r#192
[#318 'var']: r#192
[#318 'vec2']: r#192
[#318 'vec3']: r#192
[#318 'vec4']: r#192
[#318 'while']: r#192
[#318 '{']: r#192
[#318 '}']: r#192
[#318 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#192
[#319 '&']: r#193
[#319 '(']: r#193
[#319 '*']: r#193
[#319 ';']: r#193
[#319 '_']: r#193
[#319 'array']: r#193
[#319 'atomic']: r#193
[#319 'bool']: r#193
[#319 'break']: r#193
[#319 'const']: r#193
[#319 'const_assert']: r#193
[#319 'continue']: r#193
[#319 'continuing']: r#193
[#319 'discard']: r#193
[#319 'f16']: r#193
[#319 'f32']: r#193
[#319 'for']: r#193
[#319 'i32']: r#193
[#319 'if']: r#193
[#319 'let']: r#193
[#319 'loop']: r#193
[#319 'mat2x2']: r#193
[#319 'mat2x3']: r#193
[#319 'mat2x4']: r#193
[#319 'mat3x2']: r#193
[#319 'mat3x3']: r#193
[#319 'mat3x4']: r#193
[#319 'mat4x2']: r#193
[#319 'mat4x3']: r#193
[#319 'mat4x4']: r#193
[#319 'ptr']: r#193
[#319 'return']: r#193
[#319 'sampler']: r#193
[#319 'sampler_comparison']: r#193
[#319 'switch']: r#193
[#319 'texture_1d']: r#193
[#319 'texture_2d']: r#193
[#319 'texture_2d_array']: r#193
[#319 'texture_3d']: r#193
[#319 'texture_cube']: r#193
[#319 'texture_cube_array']: r#193
[#319 'texture_depth_2d']: r#193
[#319 'texture_depth_2d_array']: r#193
[#319 'texture_depth_cube']: r#193
[#319 'texture_depth_cube_array']: r#193
[#319 'texture_depth_multisampled_2d']: r#193
[#319 'texture_multisampled_2d']: r#193
[#319 'texture_storage_1d']: r#193
[#319 'texture_storage_2d']: r#193
[#319 'texture_storage_2d_array']: r#193
[#319 'texture_storage_3d']: r#193
[#319 'u32']: r#193
[#319 'var']: r#193
[#319 'vec2']: r#193
[#319 'vec3']: r#193
[#319 'vec4']: r#193
[#319 'while']: r#193
[#319 '{']: r#193
[#319 '}']: r#193
[#319 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#193
[#320 '&']: r#194
[#320 '(']: r#194
[#320 '*']: r#194
[#320 ';']: r#194
[#320 '_']: r#194
[#320 'array']: r#194
[#320 'atomic']: r#194
[#320 'bool']: r#194
[#320 'break']: r#194
[#320 'const']: r#194
[#320 'const_assert']: r#194
[#320 'continue']: r#194
[#320 'continuing']: r#194
[#320 'discard']: r#194
[#320 'f16']: r#194
[#320 'f32']: r#194
[#320 'for']: r#194
[#320 'i32']: r#194
[#320 'if']: r#194
[#320 'let']: r#194
[#320 'loop']: r#194
[#320 'mat2x2']: r#194
[#320 'mat2x3']: r#194
[#320 'mat2x4']: r#194
[#320 'mat3x2']: r#194
[#320 'mat3x3']: r#194
[#320 'mat3x4']: r#194
[#320 'mat4x2']: r#194
[#320 'mat4x3']: r#194
[#320 'mat4x4']: r#194
[#320 'ptr']: r#194
[#320 'return']: r#194
[#320 'sampler']: r#194
[#320 'sampler_comparison']: r#194
[#320 'switch']: r#194
[#320 'texture_1d']: r#194
[#320 'texture_2d']: r#194
[#320 'texture_2d_array']: r#194
[#320 'texture_3d']: r#194
[#320 'texture_cube']: r#194
[#320 'texture_cube_array']: r#194
[#320 'texture_depth_2d']: r#194
[#320 'texture_depth_2d_array']: r#194
[#320 'texture_depth_cube']: r#194
[#320 'texture_depth_cube_array']: r#194
[#320 'texture_depth_multisampled_2d']: r#194
[#320 'texture_multisampled_2d']: r#194
[#320 'texture_storage_1d']: r#194
[#320 'texture_storage_2d']: r#194
[#320 'texture_storage_2d_array']: r#194
[#320 'texture_storage_3d']: r#194
[#320 'u32']: r#194
[#320 'var']: r#194
[#320 'vec2']: r#194
[#320 'vec3']: r#194
[#320 'vec4']: r#194
[#320 'while']: r#194
[#320 '{']: r#194
[#320 '}']: r#194
[#320 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#194
[#321 ';']: s#439
[#322 ';']: s#438
[#323 ';']: s#437
[#324 ';']: s#436
[#325 ';']: s#435
[#326 ';']: s#434
[#327 '&']: r#195
[#327 '(']: r#195
[#327 '*']: r#195
[#327 ';']: r#195
[#327 '_']: r#195
[#327 'array']: r#195
[#327 'atomic']: r#195
[#327 'bool']: r#195
[#327 'break']: r#195
[#327 'const']: r#195
[#327 'const_assert']: r#195
[#327 'continue']: r#195
[#327 'continuing']: r#195
[#327 'discard']: r#195
[#327 'f16']: r#195
[#327 'f32']: r#195
[#327 'for']: r#195
[#327 'i32']: r#195
[#327 'if']: r#195
[#327 'let']: r#195
[#327 'loop']: r#195
[#327 'mat2x2']: r#195
[#327 'mat2x3']: r#195
[#327 'mat2x4']: r#195
[#327 'mat3x2']: r#195
[#327 'mat3x3']: r#195
[#327 'mat3x4']: r#195
[#327 'mat4x2']: r#195
[#327 'mat4x3']: r#195
[#327 'mat4x4']: r#195
[#327 'ptr']: r#195
[#327 'return']: r#195
[#327 'sampler']: r#195
[#327 'sampler_comparison']: r#195
[#327 'switch']: r#195
[#327 'texture_1d']: r#195
[#327 'texture_2d']: r#195
[#327 'texture_2d_array']: r#195
[#327 'texture_3d']: r#195
[#327 'texture_cube']: r#195
[#327 'texture_cube_array']: r#195
[#327 'texture_depth_2d']: r#195
[#327 'texture_depth_2d_array']: r#195
[#327 'texture_depth_cube']: r#195
[#327 'texture_depth_cube_array']: r#195
[#327 'texture_depth_multisampled_2d']: r#195
[#327 'texture_multisampled_2d']: r#195
[#327 'texture_storage_1d']: r#195
[#327 'texture_storage_2d']: r#195
[#327 'texture_storage_2d_array']: r#195
[#327 'texture_storage_3d']: r#195
[#327 'u32']: r#195
[#327 'var']: r#195
[#327 'vec2']: r#195
[#327 'vec3']: r#195
[#327 'vec4']: r#195
[#327 'while']: r#195
[#327 '{']: r#195
[#327 '}']: r#195
[#327 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#195
[#328 ';']: s#433
[#329 '!']: s#69
[#329 '&']: s#72
[#329 '(']: s#84
[#329 '*']: s#71
[#329 '-']: s#68
[#329 'array']: s#88
[#329 'atomic']: s#102
[#329 'bitcast']: s#78
[#329 'bool']: s#95
[#329 'f16']: s#97
[#329 'f32']: s#96
[#329 'false']: s#94
[#329 'i32']: s#98
[#329 'mat2x2']: s#107
[#329 'mat2x3']: s#108
[#329 'mat2x4']: s#109
[#329 'mat3x2']: s#110
[#329 'mat3x3']: s#111
[#329 'mat3x4']: s#112
[#329 'mat4x2']: s#113
[#329 'mat4x3']: s#114
[#329 'mat4x4']: s#115
[#329 'ptr']: s#100
[#329 'sampler']: s#132
[#329 'sampler_comparison']: s#133
[#329 'texture_1d']: s#139
[#329 'texture_2d']: s#140
[#329 'texture_2d_array']: s#141
[#329 'texture_3d']: s#142
[#329 'texture_cube']: s#143
[#329 'texture_cube_array']: s#144
[#329 'texture_depth_2d']: s#134
[#329 'texture_depth_2d_array']: s#135
[#329 'texture_depth_cube']: s#136
[#329 'texture_depth_cube_array']: s#137
[#329 'texture_depth_multisampled_2d']: s#138
[#329 'texture_multisampled_2d']: s#145
[#329 'texture_storage_1d']: s#146
[#329 'texture_storage_2d']: s#147
[#329 'texture_storage_2d_array']: s#148
[#329 'texture_storage_3d']: s#149
[#329 'true']: s#93
[#329 'u32']: s#99
[#329 'vec2']: s#104
[#329 'vec3']: s#105
[#329 'vec4']: s#106
[#329 '~']: s#70
[#329 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#329 /0[fh]/]: s#119
[#329 /0[iu]?/]: s#116
[#329 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#329 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#329 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#329 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#329 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#329 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#329 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#329 /[1-9][0-9]*[fh]/]: s#120
[#329 /[1-9][0-9]*[iu]?/]: s#117
[#330 'else']: s#430
[#331 '!']: s#69
[#331 '&']: s#72
[#331 '(']: s#84
[#331 '*']: s#71
[#331 '-']: s#68
[#331 'array']: s#88
[#331 'atomic']: s#102
[#331 'bitcast']: s#78
[#331 'bool']: s#95
[#331 'f16']: s#97
[#331 'f32']: s#96
[#331 'false']: s#94
[#331 'i32']: s#98
[#331 'mat2x2']: s#107
[#331 'mat2x3']: s#108
[#331 'mat2x4']: s#109
[#331 'mat3x2']: s#110
[#331 'mat3x3']: s#111
[#331 'mat3x4']: s#112
[#331 'mat4x2']: s#113
[#331 'mat4x3']: s#114
[#331 'mat4x4']: s#115
[#331 'ptr']: s#100
[#331 'sampler']: s#132
[#331 'sampler_comparison']: s#133
[#331 'texture_1d']: s#139
[#331 'texture_2d']: s#140
[#331 'texture_2d_array']: s#141
[#331 'texture_3d']: s#142
[#331 'texture_cube']: s#143
[#331 'texture_cube_array']: s#144
[#331 'texture_depth_2d']: s#134
[#331 'texture_depth_2d_array']: s#135
[#331 'texture_depth_cube']: s#136
[#331 'texture_depth_cube_array']: s#137
[#331 'texture_depth_multisampled_2d']: s#138
[#331 'texture_multisampled_2d']: s#145
[#331 'texture_storage_1d']: s#146
[#331 'texture_storage_2d']: s#147
[#331 'texture_storage_2d_array']: s#148
[#331 'texture_storage_3d']: s#149
[#331 'true']: s#93
[#331 'u32']: s#99
[#331 'vec2']: s#104
[#331 'vec3']: s#105
[#331 'vec4']: s#106
[#331 '~']: s#70
[#331 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#331 /0[fh]/]: s#119
[#331 /0[iu]?/]: s#116
[#331 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#331 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#331 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#331 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#331 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#331 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#331 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#331 /[1-9][0-9]*[fh]/]: s#120
[#331 /[1-9][0-9]*[iu]?/]: s#117
[#332 '{']: s#425
[#333 '(']: s#424
[#334 '!']: s#69
[#334 '&']: s#72
[#334 '(']: s#84
[#334 '*']: s#71
[#334 '-']: s#68
[#334 'array']: s#88
[#334 'atomic']: s#102
[#334 'bitcast']: s#78
[#334 'bool']: s#95
[#334 'f16']: s#97
[#334 'f32']: s#96
[#334 'false']: s#94
[#334 'i32']: s#98
[#334 'mat2x2']: s#107
[#334 'mat2x3']: s#108
[#334 'mat2x4']: s#109
[#334 'mat3x2']: s#110
[#334 'mat3x3']: s#111
[#334 'mat3x4']: s#112
[#334 'mat4x2']: s#113
[#334 'mat4x3']: s#114
[#334 'mat4x4']: s#115
[#334 'ptr']: s#100
[#334 'sampler']: s#132
[#334 'sampler_comparison']: s#133
[#334 'texture_1d']: s#139
[#334 'texture_2d']: s#140
[#334 'texture_2d_array']: s#141
[#334 'texture_3d']: s#142
[#334 'texture_cube']: s#143
[#334 'texture_cube_array']: s#144
[#334 'texture_depth_2d']: s#134
[#334 'texture_depth_2d_array']: s#135
[#334 'texture_depth_cube']: s#136
[#334 'texture_depth_cube_array']: s#137
[#334 'texture_depth_multisampled_2d']: s#138
[#334 'texture_multisampled_2d']: s#145
[#334 'texture_storage_1d']: s#146
[#334 'texture_storage_2d']: s#147
[#334 'texture_storage_2d_array']: s#148
[#334 'texture_storage_3d']: s#149
[#334 'true']: s#93
[#334 'u32']: s#99
[#334 'vec2']: s#104
[#334 'vec3']: s#105
[#334 'vec4']: s#106
[#334 '~']: s#70
[#334 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#334 /0[fh]/]: s#119
[#334 /0[iu]?/]: s#116
[#334 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#334 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#334 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#334 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#334 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#334 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#334 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#334 /[1-9][0-9]*[fh]/]: s#120
[#334 /[1-9][0-9]*[iu]?/]: s#117
[#335 '(']: s#198
[#336 ';']: r#196
[#336 '=']: s#421
[#337 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#338 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#339 ';']: r#197
[#340 ';']: r#198
[#341 ')']: r#199
[#341 ';']: r#199
[#342 ')']: r#200
[#342 ';']: r#200
[#343 ')']: r#201
[#343 ';']: r#201
[#344 '!']: s#69
[#344 '&']: s#72
[#344 '(']: s#84
[#344 '*']: s#71
[#344 '-']: s#68
[#344 'array']: s#88
[#344 'atomic']: s#102
[#344 'bitcast']: s#78
[#344 'bool']: s#95
[#344 'f16']: s#97
[#344 'f32']: s#96
[#344 'false']: s#94
[#344 'i32']: s#98
[#344 'mat2x2']: s#107
[#344 'mat2x3']: s#108
[#344 'mat2x4']: s#109
[#344 'mat3x2']: s#110
[#344 'mat3x3']: s#111
[#344 'mat3x4']: s#112
[#344 'mat4x2']: s#113
[#344 'mat4x3']: s#114
[#344 'mat4x4']: s#115
[#344 'ptr']: s#100
[#344 'sampler']: s#132
[#344 'sampler_comparison']: s#133
[#344 'texture_1d']: s#139
[#344 'texture_2d']: s#140
[#344 'texture_2d_array']: s#141
[#344 'texture_3d']: s#142
[#344 'texture_cube']: s#143
[#344 'texture_cube_array']: s#144
[#344 'texture_depth_2d']: s#134
[#344 'texture_depth_2d_array']: s#135
[#344 'texture_depth_cube']: s#136
[#344 'texture_depth_cube_array']: s#137
[#344 'texture_depth_multisampled_2d']: s#138
[#344 'texture_multisampled_2d']: s#145
[#344 'texture_storage_1d']: s#146
[#344 'texture_storage_2d']: s#147
[#344 'texture_storage_2d_array']: s#148
[#344 'texture_storage_3d']: s#149
[#344 'true']: s#93
[#344 'u32']: s#99
[#344 'vec2']: s#104
[#344 'vec3']: s#105
[#344 'vec4']: s#106
[#344 '~']: s#70
[#344 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#344 /0[fh]/]: s#119
[#344 /0[iu]?/]: s#116
[#344 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#344 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#344 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#344 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#344 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#344 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#344 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#344 /[1-9][0-9]*[fh]/]: s#120
[#344 /[1-9][0-9]*[iu]?/]: s#117
[#345 '%=']: r#202
[#345 '&=']: r#202
[#345 '(']: r#37
[#345 '*=']: r#202
[#345 '++']: r#202
[#345 '+=']: r#202
[#345 '--']: r#202
[#345 '-=']: r#202
[#345 '.']: r#202
[#345 '/=']: r#202
[#345 '=']: r#202
[#345 '[']: r#202
[#345 '^=']: r#202
[#345 '|=']: r#202
[#345 /\u200B_shift_left_assign/]: r#202
[#345 /\u200B_shift_right_assign/]: r#202
[#346 '%=']: s#410
[#346 '&=']: s#411
[#346 '*=']: s#408
[#346 '++']: s#402
[#346 '+=']: s#406
[#346 '--']: s#403
[#346 '-=']: s#407
[#346 '/=']: s#409
[#346 '=']: s#404
[#346 '^=']: s#413
[#346 '|=']: s#412
[#346 /\u200B_shift_left_assign/]: s#417
[#346 /\u200B_shift_right_assign/]: s#416
[#347 '=']: s#400
[#348 '.']: s#203
[#348 '[']: s#202
[#349 '&']: s#350
[#349 '(']: s#351
[#349 '*']: s#349
[#349 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#350 '&']: s#350
[#350 '(']: s#351
[#350 '*']: s#349
[#350 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#351 '&']: s#350
[#351 '(']: s#351
[#351 '*']: s#349
[#351 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#352 '@']: s#36
[#353 ',']: s#387
[#354 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#287
[#355 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#203
[#356 '@']: s#36
[#357 ';']: r#204
[#358 ')']: r#205
[#358 ',']: r#205
[#358 ';']: r#205
[#358 '=']: r#205
[#358 '{']: r#205
[#358 '}']: r#205
[#358 /\u200B_template_args_end/]: r#205
[#359 ')']: r#206
[#359 ',']: r#206
[#359 ';']: r#206
[#359 '=']: r#206
[#359 '{']: r#206
[#359 '}']: r#206
[#359 /\u200B_template_args_end/]: r#206
[#360 /\u200B_disambiguate_template/]: s#175
[#361 /\u200B_disambiguate_template/]: s#175
[#362 /\u200B_disambiguate_template/]: s#175
[#363 ';']: r#207
[#364 '!']: s#69
[#364 '&']: s#72
[#364 '(']: s#84
[#364 '*']: s#71
[#364 '-']: s#68
[#364 'array']: s#88
[#364 'atomic']: s#102
[#364 'bitcast']: s#78
[#364 'bool']: s#95
[#364 'f16']: s#97
[#364 'f32']: s#96
[#364 'false']: s#94
[#364 'i32']: s#98
[#364 'mat2x2']: s#107
[#364 'mat2x3']: s#108
[#364 'mat2x4']: s#109
[#364 'mat3x2']: s#110
[#364 'mat3x3']: s#111
[#364 'mat3x4']: s#112
[#364 'mat4x2']: s#113
[#364 'mat4x3']: s#114
[#364 'mat4x4']: s#115
[#364 'ptr']: s#100
[#364 'sampler']: s#132
[#364 'sampler_comparison']: s#133
[#364 'texture_1d']: s#139
[#364 'texture_2d']: s#140
[#364 'texture_2d_array']: s#141
[#364 'texture_3d']: s#142
[#364 'texture_cube']: s#143
[#364 'texture_cube_array']: s#144
[#364 'texture_depth_2d']: s#134
[#364 'texture_depth_2d_array']: s#135
[#364 'texture_depth_cube']: s#136
[#364 'texture_depth_cube_array']: s#137
[#364 'texture_depth_multisampled_2d']: s#138
[#364 'texture_multisampled_2d']: s#145
[#364 'texture_storage_1d']: s#146
[#364 'texture_storage_2d']: s#147
[#364 'texture_storage_2d_array']: s#148
[#364 'texture_storage_3d']: s#149
[#364 'true']: s#93
[#364 'u32']: s#99
[#364 'vec2']: s#104
[#364 'vec3']: s#105
[#364 'vec4']: s#106
[#364 '~']: s#70
[#364 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#364 /0[fh]/]: s#119
[#364 /0[iu]?/]: s#116
[#364 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#364 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#364 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#364 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#364 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#364 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#364 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#364 /[1-9][0-9]*[fh]/]: s#120
[#364 /[1-9][0-9]*[iu]?/]: s#117
[#365 ';']: r#208
[#366 ';']: r#209
[#366 '=']: r#209
[#367 ';']: r#210
[#368 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#369 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#211
[#370 'function']: s#372
[#370 'private']: s#373
[#370 'storage']: s#376
[#370 'uniform']: s#375
[#370 'workgroup']: s#374
[#371 ',']: s#551
[#372 ',']: r#212
[#372 /\u200B_template_args_end/]: r#212
[#373 ',']: r#213
[#373 /\u200B_template_args_end/]: r#213
[#374 ',']: r#214
[#374 /\u200B_template_args_end/]: r#214
[#375 ',']: r#215
[#375 /\u200B_template_args_end/]: r#215
[#376 ',']: r#216
[#376 /\u200B_template_args_end/]: r#216
[#377 ';']: r#217
[#377 '=']: r#217
[#378 ';']: r#218
[#379 /\u200B_template_args_start/]: s#298
[#380 /\u200B_template_args_start/]: s#298
[#381 /\u200B_template_args_start/]: s#298
[#382 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#219
[#383 ':']: s#549
[#384 ',']: s#548
[#385 ',']: r#220
[#385 '}']: r#220
[#386 ',']: s#387
[#387 '@']: s#36
[#388 ')']: s#544
[#389 ')']: r#221
[#390 ',']: s#543
[#391 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#392 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#222
[#393 '@']: s#36
[#394 ')']: s#537
[#395 '%=']: r#202
[#395 '&=']: r#202
[#395 ')']: r#202
[#395 '*=']: r#202
[#395 '++']: r#202
[#395 '+=']: r#202
[#395 '--']: r#202
[#395 '-=']: r#202
[#395 '.']: r#202
[#395 '/=']: r#202
[#395 '=']: r#202
[#395 '[']: r#202
[#395 '^=']: r#202
[#395 '|=']: r#202
[#395 /\u200B_shift_left_assign/]: r#202
[#395 /\u200B_shift_right_assign/]: r#202
[#396 '%=']: r#223
[#396 '&=']: r#223
[#396 ')']: r#223
[#396 '*=']: r#223
[#396 '++']: r#223
[#396 '+=']: r#223
[#396 '--']: r#223
[#396 '-=']: r#223
[#396 '/=']: r#223
[#396 '=']: r#223
[#396 '^=']: r#223
[#396 '|=']: r#223
[#396 /\u200B_shift_left_assign/]: r#223
[#396 /\u200B_shift_right_assign/]: r#223
[#397 '%=']: r#224
[#397 '&=']: r#224
[#397 ')']: r#224
[#397 '*=']: r#224
[#397 '++']: r#224
[#397 '+=']: r#224
[#397 '--']: r#224
[#397 '-=']: r#224
[#397 '/=']: r#224
[#397 '=']: r#224
[#397 '^=']: r#224
[#397 '|=']: r#224
[#397 /\u200B_shift_left_assign/]: r#224
[#397 /\u200B_shift_right_assign/]: r#224
[#398 '%=']: r#225
[#398 '&=']: r#225
[#398 ')']: r#225
[#398 '*=']: r#225
[#398 '++']: r#225
[#398 '+=']: r#225
[#398 '--']: r#225
[#398 '-=']: r#225
[#398 '/=']: r#225
[#398 '=']: r#225
[#398 '^=']: r#225
[#398 '|=']: r#225
[#398 /\u200B_shift_left_assign/]: r#225
[#398 /\u200B_shift_right_assign/]: r#225
[#399 '%=']: r#226
[#399 '&=']: r#226
[#399 ')']: r#226
[#399 '*=']: r#226
[#399 '++']: r#226
[#399 '+=']: r#226
[#399 '--']: r#226
[#399 '-=']: r#226
[#399 '/=']: r#226
[#399 '=']: r#226
[#399 '^=']: r#226
[#399 '|=']: r#226
[#399 /\u200B_shift_left_assign/]: r#226
[#399 /\u200B_shift_right_assign/]: r#226
[#400 '!']: s#69
[#400 '&']: s#72
[#400 '(']: s#84
[#400 '*']: s#71
[#400 '-']: s#68
[#400 'array']: s#88
[#400 'atomic']: s#102
[#400 'bitcast']: s#78
[#400 'bool']: s#95
[#400 'f16']: s#97
[#400 'f32']: s#96
[#400 'false']: s#94
[#400 'i32']: s#98
[#400 'mat2x2']: s#107
[#400 'mat2x3']: s#108
[#400 'mat2x4']: s#109
[#400 'mat3x2']: s#110
[#400 'mat3x3']: s#111
[#400 'mat3x4']: s#112
[#400 'mat4x2']: s#113
[#400 'mat4x3']: s#114
[#400 'mat4x4']: s#115
[#400 'ptr']: s#100
[#400 'sampler']: s#132
[#400 'sampler_comparison']: s#133
[#400 'texture_1d']: s#139
[#400 'texture_2d']: s#140
[#400 'texture_2d_array']: s#141
[#400 'texture_3d']: s#142
[#400 'texture_cube']: s#143
[#400 'texture_cube_array']: s#144
[#400 'texture_depth_2d']: s#134
[#400 'texture_depth_2d_array']: s#135
[#400 'texture_depth_cube']: s#136
[#400 'texture_depth_cube_array']: s#137
[#400 'texture_depth_multisampled_2d']: s#138
[#400 'texture_multisampled_2d']: s#145
[#400 'texture_storage_1d']: s#146
[#400 'texture_storage_2d']: s#147
[#400 'texture_storage_2d_array']: s#148
[#400 'texture_storage_3d']: s#149
[#400 'true']: s#93
[#400 'u32']: s#99
[#400 'vec2']: s#104
[#400 'vec3']: s#105
[#400 'vec4']: s#106
[#400 '~']: s#70
[#400 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#400 /0[fh]/]: s#119
[#400 /0[iu]?/]: s#116
[#400 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#400 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#400 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#400 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#400 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#400 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#400 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#400 /[1-9][0-9]*[fh]/]: s#120
[#400 /[1-9][0-9]*[iu]?/]: s#117
[#401 '!']: s#69
[#401 '&']: s#72
[#401 '(']: s#84
[#401 '*']: s#71
[#401 '-']: s#68
[#401 'array']: s#88
[#401 'atomic']: s#102
[#401 'bitcast']: s#78
[#401 'bool']: s#95
[#401 'f16']: s#97
[#401 'f32']: s#96
[#401 'false']: s#94
[#401 'i32']: s#98
[#401 'mat2x2']: s#107
[#401 'mat2x3']: s#108
[#401 'mat2x4']: s#109
[#401 'mat3x2']: s#110
[#401 'mat3x3']: s#111
[#401 'mat3x4']: s#112
[#401 'mat4x2']: s#113
[#401 'mat4x3']: s#114
[#401 'mat4x4']: s#115
[#401 'ptr']: s#100
[#401 'sampler']: s#132
[#401 'sampler_comparison']: s#133
[#401 'texture_1d']: s#139
[#401 'texture_2d']: s#140
[#401 'texture_2d_array']: s#141
[#401 'texture_3d']: s#142
[#401 'texture_cube']: s#143
[#401 'texture_cube_array']: s#144
[#401 'texture_depth_2d']: s#134
[#401 'texture_depth_2d_array']: s#135
[#401 'texture_depth_cube']: s#136
[#401 'texture_depth_cube_array']: s#137
[#401 'texture_depth_multisampled_2d']: s#138
[#401 'texture_multisampled_2d']: s#145
[#401 'texture_storage_1d']: s#146
[#401 'texture_storage_2d']: s#147
[#401 'texture_storage_2d_array']: s#148
[#401 'texture_storage_3d']: s#149
[#401 'true']: s#93
[#401 'u32']: s#99
[#401 'vec2']: s#104
[#401 'vec3']: s#105
[#401 'vec4']: s#106
[#401 '~']: s#70
[#401 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#401 /0[fh]/]: s#119
[#401 /0[iu]?/]: s#116
[#401 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#401 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#401 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#401 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#401 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#401 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#401 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#401 /[1-9][0-9]*[fh]/]: s#120
[#401 /[1-9][0-9]*[iu]?/]: s#117
[#402 ')']: r#227
[#402 ';']: r#227
[#403 ')']: r#228
[#403 ';']: r#228
[#404 '!']: r#229
[#404 '&']: r#229
[#404 '(']: r#229
[#404 '*']: r#229
[#404 '-']: r#229
[#404 'array']: r#229
[#404 'atomic']: r#229
[#404 'bitcast']: r#229
[#404 'bool']: r#229
[#404 'f16']: r#229
[#404 'f32']: r#229
[#404 'false']: r#229
[#404 'i32']: r#229
[#404 'mat2x2']: r#229
[#404 'mat2x3']: r#229
[#404 'mat2x4']: r#229
[#404 'mat3x2']: r#229
[#404 'mat3x3']: r#229
[#404 'mat3x4']: r#229
[#404 'mat4x2']: r#229
[#404 'mat4x3']: r#229
[#404 'mat4x4']: r#229
[#404 'ptr']: r#229
[#404 'sampler']: r#229
[#404 'sampler_comparison']: r#229
[#404 'texture_1d']: r#229
[#404 'texture_2d']: r#229
[#404 'texture_2d_array']: r#229
[#404 'texture_3d']: r#229
[#404 'texture_cube']: r#229
[#404 'texture_cube_array']: r#229
[#404 'texture_depth_2d']: r#229
[#404 'texture_depth_2d_array']: r#229
[#404 'texture_depth_cube']: r#229
[#404 'texture_depth_cube_array']: r#229
[#404 'texture_depth_multisampled_2d']: r#229
[#404 'texture_multisampled_2d']: r#229
[#404 'texture_storage_1d']: r#229
[#404 'texture_storage_2d']: r#229
[#404 'texture_storage_2d_array']: r#229
[#404 'texture_storage_3d']: r#229
[#404 'true']: r#229
[#404 'u32']: r#229
[#404 'vec2']: r#229
[#404 'vec3']: r#229
[#404 'vec4']: r#229
[#404 '~']: r#229
[#404 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#229
[#404 /0[fh]/]: r#229
[#404 /0[iu]?/]: r#229
[#404 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#229
[#404 /0[xX][0-9a-fA-F]+[iu]?/]: r#229
[#404 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#229
[#404 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#229
[#404 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#229
[#404 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#229
[#404 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#229
[#404 /[1-9][0-9]*[fh]/]: r#229
[#404 /[1-9][0-9]*[iu]?/]: r#229
[#405 '!']: r#230
[#405 '&']: r#230
[#405 '(']: r#230
[#405 '*']: r#230
[#405 '-']: r#230
[#405 'array']: r#230
[#405 'atomic']: r#230
[#405 'bitcast']: r#230
[#405 'bool']: r#230
[#405 'f16']: r#230
[#405 'f32']: r#230
[#405 'false']: r#230
[#405 'i32']: r#230
[#405 'mat2x2']: r#230
[#405 'mat2x3']: r#230
[#405 'mat2x4']: r#230
[#405 'mat3x2']: r#230
[#405 'mat3x3']: r#230
[#405 'mat3x4']: r#230
[#405 'mat4x2']: r#230
[#405 'mat4x3']: r#230
[#405 'mat4x4']: r#230
[#405 'ptr']: r#230
[#405 'sampler']: r#230
[#405 'sampler_comparison']: r#230
[#405 'texture_1d']: r#230
[#405 'texture_2d']: r#230
[#405 'texture_2d_array']: r#230
[#405 'texture_3d']: r#230
[#405 'texture_cube']: r#230
[#405 'texture_cube_array']: r#230
[#405 'texture_depth_2d']: r#230
[#405 'texture_depth_2d_array']: r#230
[#405 'texture_depth_cube']: r#230
[#405 'texture_depth_cube_array']: r#230
[#405 'texture_depth_multisampled_2d']: r#230
[#405 'texture_multisampled_2d']: r#230
[#405 'texture_storage_1d']: r#230
[#405 'texture_storage_2d']: r#230
[#405 'texture_storage_2d_array']: r#230
[#405 'texture_storage_3d']: r#230
[#405 'true']: r#230
[#405 'u32']: r#230
[#405 'vec2']: r#230
[#405 'vec3']: r#230
[#405 'vec4']: r#230
[#405 '~']: r#230
[#405 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#230
[#405 /0[fh]/]: r#230
[#405 /0[iu]?/]: r#230
[#405 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#230
[#405 /0[xX][0-9a-fA-F]+[iu]?/]: r#230
[#405 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#230
[#405 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#230
[#405 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#230
[#405 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#230
[#405 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#230
[#405 /[1-9][0-9]*[fh]/]: r#230
[#405 /[1-9][0-9]*[iu]?/]: r#230
[#406 '!']: r#231
[#406 '&']: r#231
[#406 '(']: r#231
[#406 '*']: r#231
[#406 '-']: r#231
[#406 'array']: r#231
[#406 'atomic']: r#231
[#406 'bitcast']: r#231
[#406 'bool']: r#231
[#406 'f16']: r#231
[#406 'f32']: r#231
[#406 'false']: r#231
[#406 'i32']: r#231
[#406 'mat2x2']: r#231
[#406 'mat2x3']: r#231
[#406 'mat2x4']: r#231
[#406 'mat3x2']: r#231
[#406 'mat3x3']: r#231
[#406 'mat3x4']: r#231
[#406 'mat4x2']: r#231
[#406 'mat4x3']: r#231
[#406 'mat4x4']: r#231
[#406 'ptr']: r#231
[#406 'sampler']: r#231
[#406 'sampler_comparison']: r#231
[#406 'texture_1d']: r#231
[#406 'texture_2d']: r#231
[#406 'texture_2d_array']: r#231
[#406 'texture_3d']: r#231
[#406 'texture_cube']: r#231
[#406 'texture_cube_array']: r#231
[#406 'texture_depth_2d']: r#231
[#406 'texture_depth_2d_array']: r#231
[#406 'texture_depth_cube']: r#231
[#406 'texture_depth_cube_array']: r#231
[#406 'texture_depth_multisampled_2d']: r#231
[#406 'texture_multisampled_2d']: r#231
[#406 'texture_storage_1d']: r#231
[#406 'texture_storage_2d']: r#231
[#406 'texture_storage_2d_array']: r#231
[#406 'texture_storage_3d']: r#231
[#406 'true']: r#231
[#406 'u32']: r#231
[#406 'vec2']: r#231
[#406 'vec3']: r#231
[#406 'vec4']: r#231
[#406 '~']: r#231
[#406 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#231
[#406 /0[fh]/]: r#231
[#406 /0[iu]?/]: r#231
[#406 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#231
[#406 /0[xX][0-9a-fA-F]+[iu]?/]: r#231
[#406 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#231
[#406 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#231
[#406 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#231
[#406 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#231
[#406 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#231
[#406 /[1-9][0-9]*[fh]/]: r#231
[#406 /[1-9][0-9]*[iu]?/]: r#231
[#407 '!']: r#232
[#407 '&']: r#232
[#407 '(']: r#232
[#407 '*']: r#232
[#407 '-']: r#232
[#407 'array']: r#232
[#407 'atomic']: r#232
[#407 'bitcast']: r#232
[#407 'bool']: r#232
[#407 'f16']: r#232
[#407 'f32']: r#232
[#407 'false']: r#232
[#407 'i32']: r#232
[#407 'mat2x2']: r#232
[#407 'mat2x3']: r#232
[#407 'mat2x4']: r#232
[#407 'mat3x2']: r#232
[#407 'mat3x3']: r#232
[#407 'mat3x4']: r#232
[#407 'mat4x2']: r#232
[#407 'mat4x3']: r#232
[#407 'mat4x4']: r#232
[#407 'ptr']: r#232
[#407 'sampler']: r#232
[#407 'sampler_comparison']: r#232
[#407 'texture_1d']: r#232
[#407 'texture_2d']: r#232
[#407 'texture_2d_array']: r#232
[#407 'texture_3d']: r#232
[#407 'texture_cube']: r#232
[#407 'texture_cube_array']: r#232
[#407 'texture_depth_2d']: r#232
[#407 'texture_depth_2d_array']: r#232
[#407 'texture_depth_cube']: r#232
[#407 'texture_depth_cube_array']: r#232
[#407 'texture_depth_multisampled_2d']: r#232
[#407 'texture_multisampled_2d']: r#232
[#407 'texture_storage_1d']: r#232
[#407 'texture_storage_2d']: r#232
[#407 'texture_storage_2d_array']: r#232
[#407 'texture_storage_3d']: r#232
[#407 'true']: r#232
[#407 'u32']: r#232
[#407 'vec2']: r#232
[#407 'vec3']: r#232
[#407 'vec4']: r#232
[#407 '~']: r#232
[#407 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#232
[#407 /0[fh]/]: r#232
[#407 /0[iu]?/]: r#232
[#407 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#232
[#407 /0[xX][0-9a-fA-F]+[iu]?/]: r#232
[#407 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#232
[#407 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#232
[#407 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#232
[#407 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#232
[#407 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#232
[#407 /[1-9][0-9]*[fh]/]: r#232
[#407 /[1-9][0-9]*[iu]?/]: r#232
[#408 '!']: r#233
[#408 '&']: r#233
[#408 '(']: r#233
[#408 '*']: r#233
[#408 '-']: r#233
[#408 'array']: r#233
[#408 'atomic']: r#233
[#408 'bitcast']: r#233
[#408 'bool']: r#233
[#408 'f16']: r#233
[#408 'f32']: r#233
[#408 'false']: r#233
[#408 'i32']: r#233
[#408 'mat2x2']: r#233
[#408 'mat2x3']: r#233
[#408 'mat2x4']: r#233
[#408 'mat3x2']: r#233
[#408 'mat3x3']: r#233
[#408 'mat3x4']: r#233
[#408 'mat4x2']: r#233
[#408 'mat4x3']: r#233
[#408 'mat4x4']: r#233
[#408 'ptr']: r#233
[#408 'sampler']: r#233
[#408 'sampler_comparison']: r#233
[#408 'texture_1d']: r#233
[#408 'texture_2d']: r#233
[#408 'texture_2d_array']: r#233
[#408 'texture_3d']: r#233
[#408 'texture_cube']: r#233
[#408 'texture_cube_array']: r#233
[#408 'texture_depth_2d']: r#233
[#408 'texture_depth_2d_array']: r#233
[#408 'texture_depth_cube']: r#233
[#408 'texture_depth_cube_array']: r#233
[#408 'texture_depth_multisampled_2d']: r#233
[#408 'texture_multisampled_2d']: r#233
[#408 'texture_storage_1d']: r#233
[#408 'texture_storage_2d']: r#233
[#408 'texture_storage_2d_array']: r#233
[#408 'texture_storage_3d']: r#233
[#408 'true']: r#233
[#408 'u32']: r#233
[#408 'vec2']: r#233
[#408 'vec3']: r#233
[#408 'vec4']: r#233
[#408 '~']: r#233
[#408 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#233
[#408 /0[fh]/]: r#233
[#408 /0[iu]?/]: r#233
[#408 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#233
[#408 /0[xX][0-9a-fA-F]+[iu]?/]: r#233
[#408 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#233
[#408 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#233
[#408 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#233
[#408 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#233
[#408 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#233
[#408 /[1-9][0-9]*[fh]/]: r#233
[#408 /[1-9][0-9]*[iu]?/]: r#233
[#409 '!']: r#234
[#409 '&']: r#234
[#409 '(']: r#234
[#409 '*']: r#234
[#409 '-']: r#234
[#409 'array']: r#234
[#409 'atomic']: r#234
[#409 'bitcast']: r#234
[#409 'bool']: r#234
[#409 'f16']: r#234
[#409 'f32']: r#234
[#409 'false']: r#234
[#409 'i32']: r#234
[#409 'mat2x2']: r#234
[#409 'mat2x3']: r#234
[#409 'mat2x4']: r#234
[#409 'mat3x2']: r#234
[#409 'mat3x3']: r#234
[#409 'mat3x4']: r#234
[#409 'mat4x2']: r#234
[#409 'mat4x3']: r#234
[#409 'mat4x4']: r#234
[#409 'ptr']: r#234
[#409 'sampler']: r#234
[#409 'sampler_comparison']: r#234
[#409 'texture_1d']: r#234
[#409 'texture_2d']: r#234
[#409 'texture_2d_array']: r#234
[#409 'texture_3d']: r#234
[#409 'texture_cube']: r#234
[#409 'texture_cube_array']: r#234
[#409 'texture_depth_2d']: r#234
[#409 'texture_depth_2d_array']: r#234
[#409 'texture_depth_cube']: r#234
[#409 'texture_depth_cube_array']: r#234
[#409 'texture_depth_multisampled_2d']: r#234
[#409 'texture_multisampled_2d']: r#234
[#409 'texture_storage_1d']: r#234
[#409 'texture_storage_2d']: r#234
[#409 'texture_storage_2d_array']: r#234
[#409 'texture_storage_3d']: r#234
[#409 'true']: r#234
[#409 'u32']: r#234
[#409 'vec2']: r#234
[#409 'vec3']: r#234
[#409 'vec4']: r#234
[#409 '~']: r#234
[#409 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#234
[#409 /0[fh]/]: r#234
[#409 /0[iu]?/]: r#234
[#409 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#234
[#409 /0[xX][0-9a-fA-F]+[iu]?/]: r#234
[#409 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#234
[#409 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#234
[#409 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#234
[#409 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#234
[#409 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#234
[#409 /[1-9][0-9]*[fh]/]: r#234
[#409 /[1-9][0-9]*[iu]?/]: r#234
[#410 '!']: r#235
[#410 '&']: r#235
[#410 '(']: r#235
[#410 '*']: r#235
[#410 '-']: r#235
[#410 'array']: r#235
[#410 'atomic']: r#235
[#410 'bitcast']: r#235
[#410 'bool']: r#235
[#410 'f16']: r#235
[#410 'f32']: r#235
[#410 'false']: r#235
[#410 'i32']: r#235
[#410 'mat2x2']: r#235
[#410 'mat2x3']: r#235
[#410 'mat2x4']: r#235
[#410 'mat3x2']: r#235
[#410 'mat3x3']: r#235
[#410 'mat3x4']: r#235
[#410 'mat4x2']: r#235
[#410 'mat4x3']: r#235
[#410 'mat4x4']: r#235
[#410 'ptr']: r#235
[#410 'sampler']: r#235
[#410 'sampler_comparison']: r#235
[#410 'texture_1d']: r#235
[#410 'texture_2d']: r#235
[#410 'texture_2d_array']: r#235
[#410 'texture_3d']: r#235
[#410 'texture_cube']: r#235
[#410 'texture_cube_array']: r#235
[#410 'texture_depth_2d']: r#235
[#410 'texture_depth_2d_array']: r#235
[#410 'texture_depth_cube']: r#235
[#410 'texture_depth_cube_array']: r#235
[#410 'texture_depth_multisampled_2d']: r#235
[#410 'texture_multisampled_2d']: r#235
[#410 'texture_storage_1d']: r#235
[#410 'texture_storage_2d']: r#235
[#410 'texture_storage_2d_array']: r#235
[#410 'texture_storage_3d']: r#235
[#410 'true']: r#235
[#410 'u32']: r#235
[#410 'vec2']: r#235
[#410 'vec3']: r#235
[#410 'vec4']: r#235
[#410 '~']: r#235
[#410 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#235
[#410 /0[fh]/]: r#235
[#410 /0[iu]?/]: r#235
[#410 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#235
[#410 /0[xX][0-9a-fA-F]+[iu]?/]: r#235
[#410 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#235
[#410 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#235
[#410 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#235
[#410 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#235
[#410 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#235
[#410 /[1-9][0-9]*[fh]/]: r#235
[#410 /[1-9][0-9]*[iu]?/]: r#235
[#411 '!']: r#236
[#411 '&']: r#236
[#411 '(']: r#236
[#411 '*']: r#236
[#411 '-']: r#236
[#411 'array']: r#236
[#411 'atomic']: r#236
[#411 'bitcast']: r#236
[#411 'bool']: r#236
[#411 'f16']: r#236
[#411 'f32']: r#236
[#411 'false']: r#236
[#411 'i32']: r#236
[#411 'mat2x2']: r#236
[#411 'mat2x3']: r#236
[#411 'mat2x4']: r#236
[#411 'mat3x2']: r#236
[#411 'mat3x3']: r#236
[#411 'mat3x4']: r#236
[#411 'mat4x2']: r#236
[#411 'mat4x3']: r#236
[#411 'mat4x4']: r#236
[#411 'ptr']: r#236
[#411 'sampler']: r#236
[#411 'sampler_comparison']: r#236
[#411 'texture_1d']: r#236
[#411 'texture_2d']: r#236
[#411 'texture_2d_array']: r#236
[#411 'texture_3d']: r#236
[#411 'texture_cube']: r#236
[#411 'texture_cube_array']: r#236
[#411 'texture_depth_2d']: r#236
[#411 'texture_depth_2d_array']: r#236
[#411 'texture_depth_cube']: r#236
[#411 'texture_depth_cube_array']: r#236
[#411 'texture_depth_multisampled_2d']: r#236
[#411 'texture_multisampled_2d']: r#236
[#411 'texture_storage_1d']: r#236
[#411 'texture_storage_2d']: r#236
[#411 'texture_storage_2d_array']: r#236
[#411 'texture_storage_3d']: r#236
[#411 'true']: r#236
[#411 'u32']: r#236
[#411 'vec2']: r#236
[#411 'vec3']: r#236
[#411 'vec4']: r#236
[#411 '~']: r#236
[#411 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#236
[#411 /0[fh]/]: r#236
[#411 /0[iu]?/]: r#236
[#411 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#236
[#411 /0[xX][0-9a-fA-F]+[iu]?/]: r#236
[#411 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#236
[#411 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#236
[#411 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#236
[#411 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#236
[#411 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#236
[#411 /[1-9][0-9]*[fh]/]: r#236
[#411 /[1-9][0-9]*[iu]?/]: r#236
[#412 '!']: r#237
[#412 '&']: r#237
[#412 '(']: r#237
[#412 '*']: r#237
[#412 '-']: r#237
[#412 'array']: r#237
[#412 'atomic']: r#237
[#412 'bitcast']: r#237
[#412 'bool']: r#237
[#412 'f16']: r#237
[#412 'f32']: r#237
[#412 'false']: r#237
[#412 'i32']: r#237
[#412 'mat2x2']: r#237
[#412 'mat2x3']: r#237
[#412 'mat2x4']: r#237
[#412 'mat3x2']: r#237
[#412 'mat3x3']: r#237
[#412 'mat3x4']: r#237
[#412 'mat4x2']: r#237
[#412 'mat4x3']: r#237
[#412 'mat4x4']: r#237
[#412 'ptr']: r#237
[#412 'sampler']: r#237
[#412 'sampler_comparison']: r#237
[#412 'texture_1d']: r#237
[#412 'texture_2d']: r#237
[#412 'texture_2d_array']: r#237
[#412 'texture_3d']: r#237
[#412 'texture_cube']: r#237
[#412 'texture_cube_array']: r#237
[#412 'texture_depth_2d']: r#237
[#412 'texture_depth_2d_array']: r#237
[#412 'texture_depth_cube']: r#237
[#412 'texture_depth_cube_array']: r#237
[#412 'texture_depth_multisampled_2d']: r#237
[#412 'texture_multisampled_2d']: r#237
[#412 'texture_storage_1d']: r#237
[#412 'texture_storage_2d']: r#237
[#412 'texture_storage_2d_array']: r#237
[#412 'texture_storage_3d']: r#237
[#412 'true']: r#237
[#412 'u32']: r#237
[#412 'vec2']: r#237
[#412 'vec3']: r#237
[#412 'vec4']: r#237
[#412 '~']: r#237
[#412 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#237
[#412 /0[fh]/]: r#237
[#412 /0[iu]?/]: r#237
[#412 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#237
[#412 /0[xX][0-9a-fA-F]+[iu]?/]: r#237
[#412 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#237
[#412 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#237
[#412 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#237
[#412 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#237
[#412 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#237
[#412 /[1-9][0-9]*[fh]/]: r#237
[#412 /[1-9][0-9]*[iu]?/]: r#237
[#413 '!']: r#238
[#413 '&']: r#238
[#413 '(']: r#238
[#413 '*']: r#238
[#413 '-']: r#238
[#413 'array']: r#238
[#413 'atomic']: r#238
[#413 'bitcast']: r#238
[#413 'bool']: r#238
[#413 'f16']: r#238
[#413 'f32']: r#238
[#413 'false']: r#238
[#413 'i32']: r#238
[#413 'mat2x2']: r#238
[#413 'mat2x3']: r#238
[#413 'mat2x4']: r#238
[#413 'mat3x2']: r#238
[#413 'mat3x3']: r#238
[#413 'mat3x4']: r#238
[#413 'mat4x2']: r#238
[#413 'mat4x3']: r#238
[#413 'mat4x4']: r#238
[#413 'ptr']: r#238
[#413 'sampler']: r#238
[#413 'sampler_comparison']: r#238
[#413 'texture_1d']: r#238
[#413 'texture_2d']: r#238
[#413 'texture_2d_array']: r#238
[#413 'texture_3d']: r#238
[#413 'texture_cube']: r#238
[#413 'texture_cube_array']: r#238
[#413 'texture_depth_2d']: r#238
[#413 'texture_depth_2d_array']: r#238
[#413 'texture_depth_cube']: r#238
[#413 'texture_depth_cube_array']: r#238
[#413 'texture_depth_multisampled_2d']: r#238
[#413 'texture_multisampled_2d']: r#238
[#413 'texture_storage_1d']: r#238
[#413 'texture_storage_2d']: r#238
[#413 'texture_storage_2d_array']: r#238
[#413 'texture_storage_3d']: r#238
[#413 'true']: r#238
[#413 'u32']: r#238
[#413 'vec2']: r#238
[#413 'vec3']: r#238
[#413 'vec4']: r#238
[#413 '~']: r#238
[#413 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#238
[#413 /0[fh]/]: r#238
[#413 /0[iu]?/]: r#238
[#413 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#238
[#413 /0[xX][0-9a-fA-F]+[iu]?/]: r#238
[#413 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#238
[#413 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#238
[#413 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#238
[#413 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#238
[#413 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#238
[#413 /[1-9][0-9]*[fh]/]: r#238
[#413 /[1-9][0-9]*[iu]?/]: r#238
[#414 '!']: r#239
[#414 '&']: r#239
[#414 '(']: r#239
[#414 '*']: r#239
[#414 '-']: r#239
[#414 'array']: r#239
[#414 'atomic']: r#239
[#414 'bitcast']: r#239
[#414 'bool']: r#239
[#414 'f16']: r#239
[#414 'f32']: r#239
[#414 'false']: r#239
[#414 'i32']: r#239
[#414 'mat2x2']: r#239
[#414 'mat2x3']: r#239
[#414 'mat2x4']: r#239
[#414 'mat3x2']: r#239
[#414 'mat3x3']: r#239
[#414 'mat3x4']: r#239
[#414 'mat4x2']: r#239
[#414 'mat4x3']: r#239
[#414 'mat4x4']: r#239
[#414 'ptr']: r#239
[#414 'sampler']: r#239
[#414 'sampler_comparison']: r#239
[#414 'texture_1d']: r#239
[#414 'texture_2d']: r#239
[#414 'texture_2d_array']: r#239
[#414 'texture_3d']: r#239
[#414 'texture_cube']: r#239
[#414 'texture_cube_array']: r#239
[#414 'texture_depth_2d']: r#239
[#414 'texture_depth_2d_array']: r#239
[#414 'texture_depth_cube']: r#239
[#414 'texture_depth_cube_array']: r#239
[#414 'texture_depth_multisampled_2d']: r#239
[#414 'texture_multisampled_2d']: r#239
[#414 'texture_storage_1d']: r#239
[#414 'texture_storage_2d']: r#239
[#414 'texture_storage_2d_array']: r#239
[#414 'texture_storage_3d']: r#239
[#414 'true']: r#239
[#414 'u32']: r#239
[#414 'vec2']: r#239
[#414 'vec3']: r#239
[#414 'vec4']: r#239
[#414 '~']: r#239
[#414 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#239
[#414 /0[fh]/]: r#239
[#414 /0[iu]?/]: r#239
[#414 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#239
[#414 /0[xX][0-9a-fA-F]+[iu]?/]: r#239
[#414 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#239
[#414 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#239
[#414 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#239
[#414 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#239
[#414 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#239
[#414 /[1-9][0-9]*[fh]/]: r#239
[#414 /[1-9][0-9]*[iu]?/]: r#239
[#415 '!']: r#240
[#415 '&']: r#240
[#415 '(']: r#240
[#415 '*']: r#240
[#415 '-']: r#240
[#415 'array']: r#240
[#415 'atomic']: r#240
[#415 'bitcast']: r#240
[#415 'bool']: r#240
[#415 'f16']: r#240
[#415 'f32']: r#240
[#415 'false']: r#240
[#415 'i32']: r#240
[#415 'mat2x2']: r#240
[#415 'mat2x3']: r#240
[#415 'mat2x4']: r#240
[#415 'mat3x2']: r#240
[#415 'mat3x3']: r#240
[#415 'mat3x4']: r#240
[#415 'mat4x2']: r#240
[#415 'mat4x3']: r#240
[#415 'mat4x4']: r#240
[#415 'ptr']: r#240
[#415 'sampler']: r#240
[#415 'sampler_comparison']: r#240
[#415 'texture_1d']: r#240
[#415 'texture_2d']: r#240
[#415 'texture_2d_array']: r#240
[#415 'texture_3d']: r#240
[#415 'texture_cube']: r#240
[#415 'texture_cube_array']: r#240
[#415 'texture_depth_2d']: r#240
[#415 'texture_depth_2d_array']: r#240
[#415 'texture_depth_cube']: r#240
[#415 'texture_depth_cube_array']: r#240
[#415 'texture_depth_multisampled_2d']: r#240
[#415 'texture_multisampled_2d']: r#240
[#415 'texture_storage_1d']: r#240
[#415 'texture_storage_2d']: r#240
[#415 'texture_storage_2d_array']: r#240
[#415 'texture_storage_3d']: r#240
[#415 'true']: r#240
[#415 'u32']: r#240
[#415 'vec2']: r#240
[#415 'vec3']: r#240
[#415 'vec4']: r#240
[#415 '~']: r#240
[#415 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#240
[#415 /0[fh]/]: r#240
[#415 /0[iu]?/]: r#240
[#415 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#240
[#415 /0[xX][0-9a-fA-F]+[iu]?/]: r#240
[#415 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#240
[#415 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#240
[#415 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#240
[#415 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#240
[#415 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#240
[#415 /[1-9][0-9]*[fh]/]: r#240
[#415 /[1-9][0-9]*[iu]?/]: r#240
[#416 '!']: r#241
[#416 '&']: r#241
[#416 '(']: r#241
[#416 '*']: r#241
[#416 '-']: r#241
[#416 'array']: r#241
[#416 'atomic']: r#241
[#416 'bitcast']: r#241
[#416 'bool']: r#241
[#416 'f16']: r#241
[#416 'f32']: r#241
[#416 'false']: r#241
[#416 'i32']: r#241
[#416 'mat2x2']: r#241
[#416 'mat2x3']: r#241
[#416 'mat2x4']: r#241
[#416 'mat3x2']: r#241
[#416 'mat3x3']: r#241
[#416 'mat3x4']: r#241
[#416 'mat4x2']: r#241
[#416 'mat4x3']: r#241
[#416 'mat4x4']: r#241
[#416 'ptr']: r#241
[#416 'sampler']: r#241
[#416 'sampler_comparison']: r#241
[#416 'texture_1d']: r#241
[#416 'texture_2d']: r#241
[#416 'texture_2d_array']: r#241
[#416 'texture_3d']: r#241
[#416 'texture_cube']: r#241
[#416 'texture_cube_array']: r#241
[#416 'texture_depth_2d']: r#241
[#416 'texture_depth_2d_array']: r#241
[#416 'texture_depth_cube']: r#241
[#416 'texture_depth_cube_array']: r#241
[#416 'texture_depth_multisampled_2d']: r#241
[#416 'texture_multisampled_2d']: r#241
[#416 'texture_storage_1d']: r#241
[#416 'texture_storage_2d']: r#241
[#416 'texture_storage_2d_array']: r#241
[#416 'texture_storage_3d']: r#241
[#416 'true']: r#241
[#416 'u32']: r#241
[#416 'vec2']: r#241
[#416 'vec3']: r#241
[#416 'vec4']: r#241
[#416 '~']: r#241
[#416 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#241
[#416 /0[fh]/]: r#241
[#416 /0[iu]?/]: r#241
[#416 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#241
[#416 /0[xX][0-9a-fA-F]+[iu]?/]: r#241
[#416 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#241
[#416 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#241
[#416 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#241
[#416 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#241
[#416 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#241
[#416 /[1-9][0-9]*[fh]/]: r#241
[#416 /[1-9][0-9]*[iu]?/]: r#241
[#417 '!']: r#242
[#417 '&']: r#242
[#417 '(']: r#242
[#417 '*']: r#242
[#417 '-']: r#242
[#417 'array']: r#242
[#417 'atomic']: r#242
[#417 'bitcast']: r#242
[#417 'bool']: r#242
[#417 'f16']: r#242
[#417 'f32']: r#242
[#417 'false']: r#242
[#417 'i32']: r#242
[#417 'mat2x2']: r#242
[#417 'mat2x3']: r#242
[#417 'mat2x4']: r#242
[#417 'mat3x2']: r#242
[#417 'mat3x3']: r#242
[#417 'mat3x4']: r#242
[#417 'mat4x2']: r#242
[#417 'mat4x3']: r#242
[#417 'mat4x4']: r#242
[#417 'ptr']: r#242
[#417 'sampler']: r#242
[#417 'sampler_comparison']: r#242
[#417 'texture_1d']: r#242
[#417 'texture_2d']: r#242
[#417 'texture_2d_array']: r#242
[#417 'texture_3d']: r#242
[#417 'texture_cube']: r#242
[#417 'texture_cube_array']: r#242
[#417 'texture_depth_2d']: r#242
[#417 'texture_depth_2d_array']: r#242
[#417 'texture_depth_cube']: r#242
[#417 'texture_depth_cube_array']: r#242
[#417 'texture_depth_multisampled_2d']: r#242
[#417 'texture_multisampled_2d']: r#242
[#417 'texture_storage_1d']: r#242
[#417 'texture_storage_2d']: r#242
[#417 'texture_storage_2d_array']: r#242
[#417 'texture_storage_3d']: r#242
[#417 'true']: r#242
[#417 'u32']: r#242
[#417 'vec2']: r#242
[#417 'vec3']: r#242
[#417 'vec4']: r#242
[#417 '~']: r#242
[#417 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#242
[#417 /0[fh]/]: r#242
[#417 /0[iu]?/]: r#242
[#417 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#242
[#417 /0[xX][0-9a-fA-F]+[iu]?/]: r#242
[#417 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#242
[#417 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#242
[#417 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#242
[#417 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#242
[#417 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#242
[#417 /[1-9][0-9]*[fh]/]: r#242
[#417 /[1-9][0-9]*[iu]?/]: r#242
[#418 '{']: s#187
[#419 '=']: s#533
[#420 '=']: s#532
[#421 '!']: s#69
[#421 '&']: s#72
[#421 '(']: s#84
[#421 '*']: s#71
[#421 '-']: s#68
[#421 'array']: s#88
[#421 'atomic']: s#102
[#421 'bitcast']: s#78
[#421 'bool']: s#95
[#421 'f16']: s#97
[#421 'f32']: s#96
[#421 'false']: s#94
[#421 'i32']: s#98
[#421 'mat2x2']: s#107
[#421 'mat2x3']: s#108
[#421 'mat2x4']: s#109
[#421 'mat3x2']: s#110
[#421 'mat3x3']: s#111
[#421 'mat3x4']: s#112
[#421 'mat4x2']: s#113
[#421 'mat4x3']: s#114
[#421 'mat4x4']: s#115
[#421 'ptr']: s#100
[#421 'sampler']: s#132
[#421 'sampler_comparison']: s#133
[#421 'texture_1d']: s#139
[#421 'texture_2d']: s#140
[#421 'texture_2d_array']: s#141
[#421 'texture_3d']: s#142
[#421 'texture_cube']: s#143
[#421 'texture_cube_array']: s#144
[#421 'texture_depth_2d']: s#134
[#421 'texture_depth_2d_array']: s#135
[#421 'texture_depth_cube']: s#136
[#421 'texture_depth_cube_array']: s#137
[#421 'texture_depth_multisampled_2d']: s#138
[#421 'texture_multisampled_2d']: s#145
[#421 'texture_storage_1d']: s#146
[#421 'texture_storage_2d']: s#147
[#421 'texture_storage_2d_array']: s#148
[#421 'texture_storage_3d']: s#149
[#421 'true']: s#93
[#421 'u32']: s#99
[#421 'vec2']: s#104
[#421 'vec3']: s#105
[#421 'vec4']: s#106
[#421 '~']: s#70
[#421 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#421 /0[fh]/]: s#119
[#421 /0[iu]?/]: s#116
[#421 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#421 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#421 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#421 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#421 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#421 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#421 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#421 /[1-9][0-9]*[fh]/]: s#120
[#421 /[1-9][0-9]*[iu]?/]: s#117
[#422 ')']: r#243
[#422 ';']: r#243
[#423 '{']: s#187
[#424 '&']: s#350
[#424 '(']: s#351
[#424 '*']: s#349
[#424 '_']: s#347
[#424 'array']: s#88
[#424 'atomic']: s#102
[#424 'bool']: s#95
[#424 'const']: s#338
[#424 'f16']: s#97
[#424 'f32']: s#96
[#424 'i32']: s#98
[#424 'let']: s#337
[#424 'mat2x2']: s#107
[#424 'mat2x3']: s#108
[#424 'mat2x4']: s#109
[#424 'mat3x2']: s#110
[#424 'mat3x3']: s#111
[#424 'mat3x4']: s#112
[#424 'mat4x2']: s#113
[#424 'mat4x3']: s#114
[#424 'mat4x4']: s#115
[#424 'ptr']: s#100
[#424 'sampler']: s#132
[#424 'sampler_comparison']: s#133
[#424 'texture_1d']: s#139
[#424 'texture_2d']: s#140
[#424 'texture_2d_array']: s#141
[#424 'texture_3d']: s#142
[#424 'texture_cube']: s#143
[#424 'texture_cube_array']: s#144
[#424 'texture_depth_2d']: s#134
[#424 'texture_depth_2d_array']: s#135
[#424 'texture_depth_cube']: s#136
[#424 'texture_depth_cube_array']: s#137
[#424 'texture_depth_multisampled_2d']: s#138
[#424 'texture_multisampled_2d']: s#145
[#424 'texture_storage_1d']: s#146
[#424 'texture_storage_2d']: s#147
[#424 'texture_storage_2d_array']: s#148
[#424 'texture_storage_3d']: s#149
[#424 'u32']: s#99
[#424 'var']: s#158
[#424 'vec2']: s#104
[#424 'vec3']: s#105
[#424 'vec4']: s#106
[#424 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#425 '&']: s#350
[#425 '(']: s#351
[#425 '*']: s#349
[#425 ';']: s#314
[#425 '_']: s#347
[#425 'array']: s#88
[#425 'atomic']: s#102
[#425 'bool']: s#95
[#425 'break']: s#339
[#425 'const']: s#338
[#425 'const_assert']: s#31
[#425 'continue']: s#340
[#425 'discard']: s#325
[#425 'f16']: s#97
[#425 'f32']: s#96
[#425 'for']: s#333
[#425 'i32']: s#98
[#425 'if']: s#344
[#425 'let']: s#337
[#425 'loop']: s#332
[#425 'mat2x2']: s#107
[#425 'mat2x3']: s#108
[#425 'mat2x4']: s#109
[#425 'mat3x2']: s#110
[#425 'mat3x3']: s#111
[#425 'mat3x4']: s#112
[#425 'mat4x2']: s#113
[#425 'mat4x3']: s#114
[#425 'mat4x4']: s#115
[#425 'ptr']: s#100
[#425 'return']: s#329
[#425 'sampler']: s#132
[#425 'sampler_comparison']: s#133
[#425 'switch']: s#331
[#425 'texture_1d']: s#139
[#425 'texture_2d']: s#140
[#425 'texture_2d_array']: s#141
[#425 'texture_3d']: s#142
[#425 'texture_cube']: s#143
[#425 'texture_cube_array']: s#144
[#425 'texture_depth_2d']: s#134
[#425 'texture_depth_2d_array']: s#135
[#425 'texture_depth_cube']: s#136
[#425 'texture_depth_cube_array']: s#137
[#425 'texture_depth_multisampled_2d']: s#138
[#425 'texture_multisampled_2d']: s#145
[#425 'texture_storage_1d']: s#146
[#425 'texture_storage_2d']: s#147
[#425 'texture_storage_2d_array']: s#148
[#425 'texture_storage_3d']: s#149
[#425 'u32']: s#99
[#425 'var']: s#158
[#425 'vec2']: s#104
[#425 'vec3']: s#105
[#425 'vec4']: s#106
[#425 'while']: s#334
[#425 '{']: s#187
[#425 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#426 '{']: s#520
[#427 'else']: s#519
[#428 '&']: r#244
[#428 '(']: r#244
[#428 '*']: r#244
[#428 ';']: r#244
[#428 '_']: r#244
[#428 'array']: r#244
[#428 'atomic']: r#244
[#428 'bool']: r#244
[#428 'break']: r#244
[#428 'const']: r#244
[#428 'const_assert']: r#244
[#428 'continue']: r#244
[#428 'continuing']: r#244
[#428 'discard']: r#244
[#428 'else']: r#244
[#428 'f16']: r#244
[#428 'f32']: r#244
[#428 'for']: r#244
[#428 'i32']: r#244
[#428 'if']: r#244
[#428 'let']: r#244
[#428 'loop']: r#244
[#428 'mat2x2']: r#244
[#428 'mat2x3']: r#244
[#428 'mat2x4']: r#244
[#428 'mat3x2']: r#244
[#428 'mat3x3']: r#244
[#428 'mat3x4']: r#244
[#428 'mat4x2']: r#244
[#428 'mat4x3']: r#244
[#428 'mat4x4']: r#244
[#428 'ptr']: r#244
[#428 'return']: r#244
[#428 'sampler']: r#244
[#428 'sampler_comparison']: r#244
[#428 'switch']: r#244
[#428 'texture_1d']: r#244
[#428 'texture_2d']: r#244
[#428 'texture_2d_array']: r#244
[#428 'texture_3d']: r#244
[#428 'texture_cube']: r#244
[#428 'texture_cube_array']: r#244
[#428 'texture_depth_2d']: r#244
[#428 'texture_depth_2d_array']: r#244
[#428 'texture_depth_cube']: r#244
[#428 'texture_depth_cube_array']: r#244
[#428 'texture_depth_multisampled_2d']: r#244
[#428 'texture_multisampled_2d']: r#244
[#428 'texture_storage_1d']: r#244
[#428 'texture_storage_2d']: r#244
[#428 'texture_storage_2d_array']: r#244
[#428 'texture_storage_3d']: r#244
[#428 'u32']: r#244
[#428 'var']: r#244
[#428 'vec2']: r#244
[#428 'vec3']: r#244
[#428 'vec4']: r#244
[#428 'while']: r#244
[#428 '{']: r#244
[#428 '}']: r#244
[#428 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#244
[#429 'else']: s#430
[#430 'if']: s#515
[#431 ';']: r#245
[#432 ';']: r#246
[#433 '&']: r#247
[#433 '(']: r#247
[#433 '*']: r#247
[#433 ';']: r#247
[#433 '_']: r#247
[#433 'array']: r#247
[#433 'atomic']: r#247
[#433 'bool']: r#247
[#433 'break']: r#247
[#433 'const']: r#247
[#433 'const_assert']: r#247
[#433 'continue']: r#247
[#433 'continuing']: r#247
[#433 'discard']: r#247
[#433 'f16']: r#247
[#433 'f32']: r#247
[#433 'for']: r#247
[#433 'i32']: r#247
[#433 'if']: r#247
[#433 'let']: r#247
[#433 'loop']: r#247
[#433 'mat2x2']: r#247
[#433 'mat2x3']: r#247
[#433 'mat2x4']: r#247
[#433 'mat3x2']: r#247
[#433 'mat3x3']: r#247
[#433 'mat3x4']: r#247
[#433 'mat4x2']: r#247
[#433 'mat4x3']: r#247
[#433 'mat4x4']: r#247
[#433 'ptr']: r#247
[#433 'return']: r#247
[#433 'sampler']: r#247
[#433 'sampler_comparison']: r#247
[#433 'switch']: r#247
[#433 'texture_1d']: r#247
[#433 'texture_2d']: r#247
[#433 'texture_2d_array']: r#247
[#433 'texture_3d']: r#247
[#433 'texture_cube']: r#247
[#433 'texture_cube_array']: r#247
[#433 'texture_depth_2d']: r#247
[#433 'texture_depth_2d_array']: r#247
[#433 'texture_depth_cube']: r#247
[#433 'texture_depth_cube_array']: r#247
[#433 'texture_depth_multisampled_2d']: r#247
[#433 'texture_multisampled_2d']: r#247
[#433 'texture_storage_1d']: r#247
[#433 'texture_storage_2d']: r#247
[#433 'texture_storage_2d_array']: r#247
[#433 'texture_storage_3d']: r#247
[#433 'u32']: r#247
[#433 'var']: r#247
[#433 'vec2']: r#247
[#433 'vec3']: r#247
[#433 'vec4']: r#247
[#433 'while']: r#247
[#433 '{']: r#247
[#433 '}']: r#247
[#433 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#247
[#434 '&']: r#248
[#434 '(']: r#248
[#434 '*']: r#248
[#434 ';']: r#248
[#434 '_']: r#248
[#434 'array']: r#248
[#434 'atomic']: r#248
[#434 'bool']: r#248
[#434 'break']: r#248
[#434 'const']: r#248
[#434 'const_assert']: r#248
[#434 'continue']: r#248
[#434 'continuing']: r#248
[#434 'discard']: r#248
[#434 'f16']: r#248
[#434 'f32']: r#248
[#434 'for']: r#248
[#434 'i32']: r#248
[#434 'if']: r#248
[#434 'let']: r#248
[#434 'loop']: r#248
[#434 'mat2x2']: r#248
[#434 'mat2x3']: r#248
[#434 'mat2x4']: r#248
[#434 'mat3x2']: r#248
[#434 'mat3x3']: r#248
[#434 'mat3x4']: r#248
[#434 'mat4x2']: r#248
[#434 'mat4x3']: r#248
[#434 'mat4x4']: r#248
[#434 'ptr']: r#248
[#434 'return']: r#248
[#434 'sampler']: r#248
[#434 'sampler_comparison']: r#248
[#434 'switch']: r#248
[#434 'texture_1d']: r#248
[#434 'texture_2d']: r#248
[#434 'texture_2d_array']: r#248
[#434 'texture_3d']: r#248
[#434 'texture_cube']: r#248
[#434 'texture_cube_array']: r#248
[#434 'texture_depth_2d']: r#248
[#434 'texture_depth_2d_array']: r#248
[#434 'texture_depth_cube']: r#248
[#434 'texture_depth_cube_array']: r#248
[#434 'texture_depth_multisampled_2d']: r#248
[#434 'texture_multisampled_2d']: r#248
[#434 'texture_storage_1d']: r#248
[#434 'texture_storage_2d']: r#248
[#434 'texture_storage_2d_array']: r#248
[#434 'texture_storage_3d']: r#248
[#434 'u32']: r#248
[#434 'var']: r#248
[#434 'vec2']: r#248
[#434 'vec3']: r#248
[#434 'vec4']: r#248
[#434 'while']: r#248
[#434 '{']: r#248
[#434 '}']: r#248
[#434 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#248
[#435 '&']: r#249
[#435 '(']: r#249
[#435 '*']: r#249
[#435 ';']: r#249
[#435 '_']: r#249
[#435 'array']: r#249
[#435 'atomic']: r#249
[#435 'bool']: r#249
[#435 'break']: r#249
[#435 'const']: r#249
[#435 'const_assert']: r#249
[#435 'continue']: r#249
[#435 'continuing']: r#249
[#435 'discard']: r#249
[#435 'f16']: r#249
[#435 'f32']: r#249
[#435 'for']: r#249
[#435 'i32']: r#249
[#435 'if']: r#249
[#435 'let']: r#249
[#435 'loop']: r#249
[#435 'mat2x2']: r#249
[#435 'mat2x3']: r#249
[#435 'mat2x4']: r#249
[#435 'mat3x2']: r#249
[#435 'mat3x3']: r#249
[#435 'mat3x4']: r#249
[#435 'mat4x2']: r#249
[#435 'mat4x3']: r#249
[#435 'mat4x4']: r#249
[#435 'ptr']: r#249
[#435 'return']: r#249
[#435 'sampler']: r#249
[#435 'sampler_comparison']: r#249
[#435 'switch']: r#249
[#435 'texture_1d']: r#249
[#435 'texture_2d']: r#249
[#435 'texture_2d_array']: r#249
[#435 'texture_3d']: r#249
[#435 'texture_cube']: r#249
[#435 'texture_cube_array']: r#249
[#435 'texture_depth_2d']: r#249
[#435 'texture_depth_2d_array']: r#249
[#435 'texture_depth_cube']: r#249
[#435 'texture_depth_cube_array']: r#249
[#435 'texture_depth_multisampled_2d']: r#249
[#435 'texture_multisampled_2d']: r#249
[#435 'texture_storage_1d']: r#249
[#435 'texture_storage_2d']: r#249
[#435 'texture_storage_2d_array']: r#249
[#435 'texture_storage_3d']: r#249
[#435 'u32']: r#249
[#435 'var']: r#249
[#435 'vec2']: r#249
[#435 'vec3']: r#249
[#435 'vec4']: r#249
[#435 'while']: r#249
[#435 '{']: r#249
[#435 '}']: r#249
[#435 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#249
[#436 '&']: r#250
[#436 '(']: r#250
[#436 '*']: r#250
[#436 ';']: r#250
[#436 '_']: r#250
[#436 'array']: r#250
[#436 'atomic']: r#250
[#436 'bool']: r#250
[#436 'break']: r#250
[#436 'const']: r#250
[#436 'const_assert']: r#250
[#436 'continue']: r#250
[#436 'continuing']: r#250
[#436 'discard']: r#250
[#436 'f16']: r#250
[#436 'f32']: r#250
[#436 'for']: r#250
[#436 'i32']: r#250
[#436 'if']: r#250
[#436 'let']: r#250
[#436 'loop']: r#250
[#436 'mat2x2']: r#250
[#436 'mat2x3']: r#250
[#436 'mat2x4']: r#250
[#436 'mat3x2']: r#250
[#436 'mat3x3']: r#250
[#436 'mat3x4']: r#250
[#436 'mat4x2']: r#250
[#436 'mat4x3']: r#250
[#436 'mat4x4']: r#250
[#436 'ptr']: r#250
[#436 'return']: r#250
[#436 'sampler']: r#250
[#436 'sampler_comparison']: r#250
[#436 'switch']: r#250
[#436 'texture_1d']: r#250
[#436 'texture_2d']: r#250
[#436 'texture_2d_array']: r#250
[#436 'texture_3d']: r#250
[#436 'texture_cube']: r#250
[#436 'texture_cube_array']: r#250
[#436 'texture_depth_2d']: r#250
[#436 'texture_depth_2d_array']: r#250
[#436 'texture_depth_cube']: r#250
[#436 'texture_depth_cube_array']: r#250
[#436 'texture_depth_multisampled_2d']: r#250
[#436 'texture_multisampled_2d']: r#250
[#436 'texture_storage_1d']: r#250
[#436 'texture_storage_2d']: r#250
[#436 'texture_storage_2d_array']: r#250
[#436 'texture_storage_3d']: r#250
[#436 'u32']: r#250
[#436 'var']: r#250
[#436 'vec2']: r#250
[#436 'vec3']: r#250
[#436 'vec4']: r#250
[#436 'while']: r#250
[#436 '{']: r#250
[#436 '}']: r#250
[#436 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#250
[#437 '&']: r#251
[#437 '(']: r#251
[#437 '*']: r#251
[#437 ';']: r#251
[#437 '_']: r#251
[#437 'array']: r#251
[#437 'atomic']: r#251
[#437 'bool']: r#251
[#437 'break']: r#251
[#437 'const']: r#251
[#437 'const_assert']: r#251
[#437 'continue']: r#251
[#437 'continuing']: r#251
[#437 'discard']: r#251
[#437 'f16']: r#251
[#437 'f32']: r#251
[#437 'for']: r#251
[#437 'i32']: r#251
[#437 'if']: r#251
[#437 'let']: r#251
[#437 'loop']: r#251
[#437 'mat2x2']: r#251
[#437 'mat2x3']: r#251
[#437 'mat2x4']: r#251
[#437 'mat3x2']: r#251
[#437 'mat3x3']: r#251
[#437 'mat3x4']: r#251
[#437 'mat4x2']: r#251
[#437 'mat4x3']: r#251
[#437 'mat4x4']: r#251
[#437 'ptr']: r#251
[#437 'return']: r#251
[#437 'sampler']: r#251
[#437 'sampler_comparison']: r#251
[#437 'switch']: r#251
[#437 'texture_1d']: r#251
[#437 'texture_2d']: r#251
[#437 'texture_2d_array']: r#251
[#437 'texture_3d']: r#251
[#437 'texture_cube']: r#251
[#437 'texture_cube_array']: r#251
[#437 'texture_depth_2d']: r#251
[#437 'texture_depth_2d_array']: r#251
[#437 'texture_depth_cube']: r#251
[#437 'texture_depth_cube_array']: r#251
[#437 'texture_depth_multisampled_2d']: r#251
[#437 'texture_multisampled_2d']: r#251
[#437 'texture_storage_1d']: r#251
[#437 'texture_storage_2d']: r#251
[#437 'texture_storage_2d_array']: r#251
[#437 'texture_storage_3d']: r#251
[#437 'u32']: r#251
[#437 'var']: r#251
[#437 'vec2']: r#251
[#437 'vec3']: r#251
[#437 'vec4']: r#251
[#437 'while']: r#251
[#437 '{']: r#251
[#437 '}']: r#251
[#437 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#251
[#438 '&']: r#252
[#438 '(']: r#252
[#438 '*']: r#252
[#438 ';']: r#252
[#438 '_']: r#252
[#438 'array']: r#252
[#438 'atomic']: r#252
[#438 'bool']: r#252
[#438 'break']: r#252
[#438 'const']: r#252
[#438 'const_assert']: r#252
[#438 'continue']: r#252
[#438 'continuing']: r#252
[#438 'discard']: r#252
[#438 'f16']: r#252
[#438 'f32']: r#252
[#438 'for']: r#252
[#438 'i32']: r#252
[#438 'if']: r#252
[#438 'let']: r#252
[#438 'loop']: r#252
[#438 'mat2x2']: r#252
[#438 'mat2x3']: r#252
[#438 'mat2x4']: r#252
[#438 'mat3x2']: r#252
[#438 'mat3x3']: r#252
[#438 'mat3x4']: r#252
[#438 'mat4x2']: r#252
[#438 'mat4x3']: r#252
[#438 'mat4x4']: r#252
[#438 'ptr']: r#252
[#438 'return']: r#252
[#438 'sampler']: r#252
[#438 'sampler_comparison']: r#252
[#438 'switch']: r#252
[#438 'texture_1d']: r#252
[#438 'texture_2d']: r#252
[#438 'texture_2d_array']: r#252
[#438 'texture_3d']: r#252
[#438 'texture_cube']: r#252
[#438 'texture_cube_array']: r#252
[#438 'texture_depth_2d']: r#252
[#438 'texture_depth_2d_array']: r#252
[#438 'texture_depth_cube']: r#252
[#438 'texture_depth_cube_array']: r#252
[#438 'texture_depth_multisampled_2d']: r#252
[#438 'texture_multisampled_2d']: r#252
[#438 'texture_storage_1d']: r#252
[#438 'texture_storage_2d']: r#252
[#438 'texture_storage_2d_array']: r#252
[#438 'texture_storage_3d']: r#252
[#438 'u32']: r#252
[#438 'var']: r#252
[#438 'vec2']: r#252
[#438 'vec3']: r#252
[#438 'vec4']: r#252
[#438 'while']: r#252
[#438 '{']: r#252
[#438 '}']: r#252
[#438 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#252
[#439 '&']: r#253
[#439 '(']: r#253
[#439 '*']: r#253
[#439 ';']: r#253
[#439 '_']: r#253
[#439 'array']: r#253
[#439 'atomic']: r#253
[#439 'bool']: r#253
[#439 'break']: r#253
[#439 'const']: r#253
[#439 'const_assert']: r#253
[#439 'continue']: r#253
[#439 'continuing']: r#253
[#439 'discard']: r#253
[#439 'f16']: r#253
[#439 'f32']: r#253
[#439 'for']: r#253
[#439 'i32']: r#253
[#439 'if']: r#253
[#439 'let']: r#253
[#439 'loop']: r#253
[#439 'mat2x2']: r#253
[#439 'mat2x3']: r#253
[#439 'mat2x4']: r#253
[#439 'mat3x2']: r#253
[#439 'mat3x3']: r#253
[#439 'mat3x4']: r#253
[#439 'mat4x2']: r#253
[#439 'mat4x3']: r#253
[#439 'mat4x4']: r#253
[#439 'ptr']: r#253
[#439 'return']: r#253
[#439 'sampler']: r#253
[#439 'sampler_comparison']: r#253
[#439 'switch']: r#253
[#439 'texture_1d']: r#253
[#439 'texture_2d']: r#253
[#439 'texture_2d_array']: r#253
[#439 'texture_3d']: r#253
[#439 'texture_cube']: r#253
[#439 'texture_cube_array']: r#253
[#439 'texture_depth_2d']: r#253
[#439 'texture_depth_2d_array']: r#253
[#439 'texture_depth_cube']: r#253
[#439 'texture_depth_cube_array']: r#253
[#439 'texture_depth_multisampled_2d']: r#253
[#439 'texture_multisampled_2d']: r#253
[#439 'texture_storage_1d']: r#253
[#439 'texture_storage_2d']: r#253
[#439 'texture_storage_2d_array']: r#253
[#439 'texture_storage_3d']: r#253
[#439 'u32']: r#253
[#439 'var']: r#253
[#439 'vec2']: r#253
[#439 'vec3']: r#253
[#439 'vec4']: r#253
[#439 'while']: r#253
[#439 '{']: r#253
[#439 '}']: r#253
[#439 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#253
[#440 '&']: r#254
[#440 '(']: r#254
[#440 '*']: r#254
[#440 ';']: r#254
[#440 '_']: r#254
[#440 'array']: r#254
[#440 'atomic']: r#254
[#440 'bool']: r#254
[#440 'break']: r#254
[#440 'const']: r#254
[#440 'const_assert']: r#254
[#440 'continue']: r#254
[#440 'continuing']: r#254
[#440 'discard']: r#254
[#440 'f16']: r#254
[#440 'f32']: r#254
[#440 'for']: r#254
[#440 'i32']: r#254
[#440 'if']: r#254
[#440 'let']: r#254
[#440 'loop']: r#254
[#440 'mat2x2']: r#254
[#440 'mat2x3']: r#254
[#440 'mat2x4']: r#254
[#440 'mat3x2']: r#254
[#440 'mat3x3']: r#254
[#440 'mat3x4']: r#254
[#440 'mat4x2']: r#254
[#440 'mat4x3']: r#254
[#440 'mat4x4']: r#254
[#440 'ptr']: r#254
[#440 'return']: r#254
[#440 'sampler']: r#254
[#440 'sampler_comparison']: r#254
[#440 'switch']: r#254
[#440 'texture_1d']: r#254
[#440 'texture_2d']: r#254
[#440 'texture_2d_array']: r#254
[#440 'texture_3d']: r#254
[#440 'texture_cube']: r#254
[#440 'texture_cube_array']: r#254
[#440 'texture_depth_2d']: r#254
[#440 'texture_depth_2d_array']: r#254
[#440 'texture_depth_cube']: r#254
[#440 'texture_depth_cube_array']: r#254
[#440 'texture_depth_multisampled_2d']: r#254
[#440 'texture_multisampled_2d']: r#254
[#440 'texture_storage_1d']: r#254
[#440 'texture_storage_2d']: r#254
[#440 'texture_storage_2d_array']: r#254
[#440 'texture_storage_3d']: r#254
[#440 'u32']: r#254
[#440 'var']: r#254
[#440 'vec2']: r#254
[#440 'vec3']: r#254
[#440 'vec4']: r#254
[#440 'while']: r#254
[#440 '{']: r#254
[#440 '}']: r#254
[#440 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#254
[#441 '}']: r#255
[#442 '&']: r#256
[#442 '(']: r#256
[#442 '*']: r#256
[#442 ';']: r#256
[#442 '@']: r#256
[#442 '_']: r#256
[#442 'alias']: r#256
[#442 'array']: r#256
[#442 'atomic']: r#256
[#442 'bool']: r#256
[#442 'break']: r#256
[#442 'case']: r#256
[#442 'const']: r#256
[#442 'const_assert']: r#256
[#442 'continue']: r#256
[#442 'continuing']: r#256
[#442 'default']: r#256
[#442 'discard']: r#256
[#442 'else']: r#256
[#442 'f16']: r#256
[#442 'f32']: r#256
[#442 'fn']: r#256
[#442 'for']: r#256
[#442 'i32']: r#256
[#442 'if']: r#256
[#442 'let']: r#256
[#442 'loop']: r#256
[#442 'mat2x2']: r#256
[#442 'mat2x3']: r#256
[#442 'mat2x4']: r#256
[#442 'mat3x2']: r#256
[#442 'mat3x3']: r#256
[#442 'mat3x4']: r#256
[#442 'mat4x2']: r#256
[#442 'mat4x3']: r#256
[#442 'mat4x4']: r#256
[#442 'override']: r#256
[#442 'ptr']: r#256
[#442 'return']: r#256
[#442 'sampler']: r#256
[#442 'sampler_comparison']: r#256
[#442 'struct']: r#256
[#442 'switch']: r#256
[#442 'texture_1d']: r#256
[#442 'texture_2d']: r#256
[#442 'texture_2d_array']: r#256
[#442 'texture_3d']: r#256
[#442 'texture_cube']: r#256
[#442 'texture_cube_array']: r#256
[#442 'texture_depth_2d']: r#256
[#442 'texture_depth_2d_array']: r#256
[#442 'texture_depth_cube']: r#256
[#442 'texture_depth_cube_array']: r#256
[#442 'texture_depth_multisampled_2d']: r#256
[#442 'texture_multisampled_2d']: r#256
[#442 'texture_storage_1d']: r#256
[#442 'texture_storage_2d']: r#256
[#442 'texture_storage_2d_array']: r#256
[#442 'texture_storage_3d']: r#256
[#442 'u32']: r#256
[#442 'var']: r#256
[#442 'vec2']: r#256
[#442 'vec3']: r#256
[#442 'vec4']: r#256
[#442 'while']: r#256
[#442 '{']: r#256
[#442 '}']: r#256
[#442 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#256
[#442 EndOfText]: r#256
[#443 ',']: s#514
[#444 ',']: r#257
[#445 ',']: r#258
[#446 ',']: r#259
[#447 ',']: r#260
[#448 ',']: r#261
[#449 ',']: r#262
[#450 ',']: r#263
[#451 ',']: r#264
[#452 ',']: r#265
[#453 ',']: r#266
[#454 ',']: r#267
[#455 ',']: r#268
[#456 ',']: r#269
[#457 ',']: r#270
[#458 ',']: r#271
[#459 ',']: r#272
[#460 ',']: r#273
[#461 /\u200B_template_args_end/]: s#501
[#462 /\u200B_template_args_end/]: s#501
[#463 /\u200B_template_args_end/]: s#501
[#464 ',']: s#510
[#465 ',']: s#509
[#466 /\u200B_template_args_end/]: s#501
[#467 /\u200B_template_args_end/]: s#501
[#468 ',']: s#505
[#469 ')']: r#274
[#469 ',']: r#274
[#470 ',']: s#471
[#471 '!']: s#69
[#471 '&']: s#72
[#471 '(']: s#84
[#471 '*']: s#71
[#471 '-']: s#68
[#471 'array']: s#88
[#471 'atomic']: s#102
[#471 'bitcast']: s#78
[#471 'bool']: s#95
[#471 'f16']: s#97
[#471 'f32']: s#96
[#471 'false']: s#94
[#471 'i32']: s#98
[#471 'mat2x2']: s#107
[#471 'mat2x3']: s#108
[#471 'mat2x4']: s#109
[#471 'mat3x2']: s#110
[#471 'mat3x3']: s#111
[#471 'mat3x4']: s#112
[#471 'mat4x2']: s#113
[#471 'mat4x3']: s#114
[#471 'mat4x4']: s#115
[#471 'ptr']: s#100
[#471 'sampler']: s#132
[#471 'sampler_comparison']: s#133
[#471 'texture_1d']: s#139
[#471 'texture_2d']: s#140
[#471 'texture_2d_array']: s#141
[#471 'texture_3d']: s#142
[#471 'texture_cube']: s#143
[#471 'texture_cube_array']: s#144
[#471 'texture_depth_2d']: s#134
[#471 'texture_depth_2d_array']: s#135
[#471 'texture_depth_cube']: s#136
[#471 'texture_depth_cube_array']: s#137
[#471 'texture_depth_multisampled_2d']: s#138
[#471 'texture_multisampled_2d']: s#145
[#471 'texture_storage_1d']: s#146
[#471 'texture_storage_2d']: s#147
[#471 'texture_storage_2d_array']: s#148
[#471 'texture_storage_3d']: s#149
[#471 'true']: s#93
[#471 'u32']: s#99
[#471 'vec2']: s#104
[#471 'vec3']: s#105
[#471 'vec4']: s#106
[#471 '~']: s#70
[#471 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#471 /0[fh]/]: s#119
[#471 /0[iu]?/]: s#116
[#471 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#471 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#471 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#471 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#471 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#471 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#471 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#471 /[1-9][0-9]*[fh]/]: s#120
[#471 /[1-9][0-9]*[iu]?/]: s#117
[#472 '!=']: r#275
[#472 '%']: r#275
[#472 '&&']: r#275
[#472 '&']: r#275
[#472 ')']: r#275
[#472 '*']: r#275
[#472 '+']: r#275
[#472 ',']: r#275
[#472 '-']: r#275
[#472 '.']: r#275
[#472 '/']: r#275
[#472 ':']: r#275
[#472 ';']: r#275
[#472 '==']: r#275
[#472 '[']: r#275
[#472 ']']: r#275
[#472 '^']: r#275
[#472 '{']: r#275
[#472 '|']: r#275
[#472 '||']: r#275
[#472 /\u200B_greater_than/]: r#275
[#472 /\u200B_greater_than_equal/]: r#275
[#472 /\u200B_less_than/]: r#275
[#472 /\u200B_less_than_equal/]: r#275
[#472 /\u200B_shift_left/]: r#275
[#472 /\u200B_shift_right/]: r#275
[#472 /\u200B_template_args_end/]: r#275
[#473 /\u200B_template_args_end/]: s#501
[#474 '.']: s#203
[#474 '[']: s#202
[#475 '!=']: r#276
[#475 '%']: r#276
[#475 '%=']: r#276
[#475 '&&']: r#276
[#475 '&']: r#276
[#475 '&=']: r#276
[#475 ')']: r#276
[#475 '*']: r#276
[#475 '*=']: r#276
[#475 '+']: r#276
[#475 '++']: r#276
[#475 '+=']: r#276
[#475 ',']: r#276
[#475 '-']: r#276
[#475 '--']: r#276
[#475 '-=']: r#276
[#475 '/']: r#276
[#475 '/=']: r#276
[#475 ':']: r#276
[#475 ';']: r#276
[#475 '=']: r#276
[#475 '==']: r#276
[#475 ']']: r#276
[#475 '^']: r#276
[#475 '^=']: r#276
[#475 '{']: r#276
[#475 '|']: r#276
[#475 '|=']: r#276
[#475 '||']: r#276
[#475 /\u200B_greater_than/]: r#276
[#475 /\u200B_greater_than_equal/]: r#276
[#475 /\u200B_less_than/]: r#276
[#475 /\u200B_less_than_equal/]: r#276
[#475 /\u200B_shift_left/]: r#276
[#475 /\u200B_shift_left_assign/]: r#276
[#475 /\u200B_shift_right/]: r#276
[#475 /\u200B_shift_right_assign/]: r#276
[#475 /\u200B_template_args_end/]: r#276
[#476 '!=']: r#277
[#476 '%']: r#277
[#476 '%=']: r#277
[#476 '&&']: r#277
[#476 '&']: r#277
[#476 '&=']: r#277
[#476 ')']: r#277
[#476 '*']: r#277
[#476 '*=']: r#277
[#476 '+']: r#277
[#476 '++']: r#277
[#476 '+=']: r#277
[#476 ',']: r#277
[#476 '-']: r#277
[#476 '--']: r#277
[#476 '-=']: r#277
[#476 '/']: r#277
[#476 '/=']: r#277
[#476 ':']: r#277
[#476 ';']: r#277
[#476 '=']: r#277
[#476 '==']: r#277
[#476 ']']: r#277
[#476 '^']: r#277
[#476 '^=']: r#277
[#476 '{']: r#277
[#476 '|']: r#277
[#476 '|=']: r#277
[#476 '||']: r#277
[#476 /\u200B_greater_than/]: r#277
[#476 /\u200B_greater_than_equal/]: r#277
[#476 /\u200B_less_than/]: r#277
[#476 /\u200B_less_than_equal/]: r#277
[#476 /\u200B_shift_left/]: r#277
[#476 /\u200B_shift_left_assign/]: r#277
[#476 /\u200B_shift_right/]: r#277
[#476 /\u200B_shift_right_assign/]: r#277
[#476 /\u200B_template_args_end/]: r#277
[#477 '!=']: r#278
[#477 '%']: r#278
[#477 '%=']: r#278
[#477 '&&']: r#278
[#477 '&']: r#278
[#477 '&=']: r#278
[#477 ')']: r#278
[#477 '*']: r#278
[#477 '*=']: r#278
[#477 '+']: r#278
[#477 '++']: r#278
[#477 '+=']: r#278
[#477 ',']: r#278
[#477 '-']: r#278
[#477 '--']: r#278
[#477 '-=']: r#278
[#477 '/']: r#278
[#477 '/=']: r#278
[#477 ':']: r#278
[#477 ';']: r#278
[#477 '=']: r#278
[#477 '==']: r#278
[#477 ']']: r#278
[#477 '^']: r#278
[#477 '^=']: r#278
[#477 '{']: r#278
[#477 '|']: r#278
[#477 '|=']: r#278
[#477 '||']: r#278
[#477 /\u200B_greater_than/]: r#278
[#477 /\u200B_greater_than_equal/]: r#278
[#477 /\u200B_less_than/]: r#278
[#477 /\u200B_less_than_equal/]: r#278
[#477 /\u200B_shift_left/]: r#278
[#477 /\u200B_shift_left_assign/]: r#278
[#477 /\u200B_shift_right/]: r#278
[#477 /\u200B_shift_right_assign/]: r#278
[#477 /\u200B_template_args_end/]: r#278
[#478 '!=']: r#279
[#478 '%']: r#279
[#478 '%=']: r#279
[#478 '&&']: r#279
[#478 '&']: r#279
[#478 '&=']: r#279
[#478 ')']: r#279
[#478 '*']: r#279
[#478 '*=']: r#279
[#478 '+']: r#279
[#478 '++']: r#279
[#478 '+=']: r#279
[#478 ',']: r#279
[#478 '-']: r#279
[#478 '--']: r#279
[#478 '-=']: r#279
[#478 '/']: r#279
[#478 '/=']: r#279
[#478 ':']: r#279
[#478 ';']: r#279
[#478 '=']: r#279
[#478 '==']: r#279
[#478 ']']: r#279
[#478 '^']: r#279
[#478 '^=']: r#279
[#478 '{']: r#279
[#478 '|']: r#279
[#478 '|=']: r#279
[#478 '||']: r#279
[#478 /\u200B_greater_than/]: r#279
[#478 /\u200B_greater_than_equal/]: r#279
[#478 /\u200B_less_than/]: r#279
[#478 /\u200B_less_than_equal/]: r#279
[#478 /\u200B_shift_left/]: r#279
[#478 /\u200B_shift_left_assign/]: r#279
[#478 /\u200B_shift_right/]: r#279
[#478 /\u200B_shift_right_assign/]: r#279
[#478 /\u200B_template_args_end/]: r#279
[#479 '@']: r#280
[#479 'array']: r#280
[#479 'atomic']: r#280
[#479 'bool']: r#280
[#479 'f16']: r#280
[#479 'f32']: r#280
[#479 'fn']: r#280
[#479 'i32']: r#280
[#479 'mat2x2']: r#280
[#479 'mat2x3']: r#280
[#479 'mat2x4']: r#280
[#479 'mat3x2']: r#280
[#479 'mat3x3']: r#280
[#479 'mat3x4']: r#280
[#479 'mat4x2']: r#280
[#479 'mat4x3']: r#280
[#479 'mat4x4']: r#280
[#479 'override']: r#280
[#479 'ptr']: r#280
[#479 'sampler']: r#280
[#479 'sampler_comparison']: r#280
[#479 'texture_1d']: r#280
[#479 'texture_2d']: r#280
[#479 'texture_2d_array']: r#280
[#479 'texture_3d']: r#280
[#479 'texture_cube']: r#280
[#479 'texture_cube_array']: r#280
[#479 'texture_depth_2d']: r#280
[#479 'texture_depth_2d_array']: r#280
[#479 'texture_depth_cube']: r#280
[#479 'texture_depth_cube_array']: r#280
[#479 'texture_depth_multisampled_2d']: r#280
[#479 'texture_multisampled_2d']: r#280
[#479 'texture_storage_1d']: r#280
[#479 'texture_storage_2d']: r#280
[#479 'texture_storage_2d_array']: r#280
[#479 'texture_storage_3d']: r#280
[#479 'u32']: r#280
[#479 'var']: r#280
[#479 'vec2']: r#280
[#479 'vec3']: r#280
[#479 'vec4']: r#280
[#479 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#280
[#480 '!']: s#69
[#480 '&']: s#72
[#480 '(']: s#84
[#480 ')']: r#281
[#480 '*']: s#71
[#480 '-']: s#68
[#480 'array']: s#88
[#480 'atomic']: s#102
[#480 'bitcast']: s#78
[#480 'bool']: s#95
[#480 'f16']: s#97
[#480 'f32']: s#96
[#480 'false']: s#94
[#480 'i32']: s#98
[#480 'mat2x2']: s#107
[#480 'mat2x3']: s#108
[#480 'mat2x4']: s#109
[#480 'mat3x2']: s#110
[#480 'mat3x3']: s#111
[#480 'mat3x4']: s#112
[#480 'mat4x2']: s#113
[#480 'mat4x3']: s#114
[#480 'mat4x4']: s#115
[#480 'ptr']: s#100
[#480 'sampler']: s#132
[#480 'sampler_comparison']: s#133
[#480 'texture_1d']: s#139
[#480 'texture_2d']: s#140
[#480 'texture_2d_array']: s#141
[#480 'texture_3d']: s#142
[#480 'texture_cube']: s#143
[#480 'texture_cube_array']: s#144
[#480 'texture_depth_2d']: s#134
[#480 'texture_depth_2d_array']: s#135
[#480 'texture_depth_cube']: s#136
[#480 'texture_depth_cube_array']: s#137
[#480 'texture_depth_multisampled_2d']: s#138
[#480 'texture_multisampled_2d']: s#145
[#480 'texture_storage_1d']: s#146
[#480 'texture_storage_2d']: s#147
[#480 'texture_storage_2d_array']: s#148
[#480 'texture_storage_3d']: s#149
[#480 'true']: s#93
[#480 'u32']: s#99
[#480 'vec2']: s#104
[#480 'vec3']: s#105
[#480 'vec4']: s#106
[#480 '~']: s#70
[#480 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#480 /0[fh]/]: s#119
[#480 /0[iu]?/]: s#116
[#480 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#480 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#480 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#480 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#480 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#480 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#480 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#480 /[1-9][0-9]*[fh]/]: s#120
[#480 /[1-9][0-9]*[iu]?/]: s#117
[#481 ')']: s#496
[#482 '@']: r#282
[#482 'array']: r#282
[#482 'atomic']: r#282
[#482 'bool']: r#282
[#482 'f16']: r#282
[#482 'f32']: r#282
[#482 'fn']: r#282
[#482 'i32']: r#282
[#482 'mat2x2']: r#282
[#482 'mat2x3']: r#282
[#482 'mat2x4']: r#282
[#482 'mat3x2']: r#282
[#482 'mat3x3']: r#282
[#482 'mat3x4']: r#282
[#482 'mat4x2']: r#282
[#482 'mat4x3']: r#282
[#482 'mat4x4']: r#282
[#482 'override']: r#282
[#482 'ptr']: r#282
[#482 'sampler']: r#282
[#482 'sampler_comparison']: r#282
[#482 'texture_1d']: r#282
[#482 'texture_2d']: r#282
[#482 'texture_2d_array']: r#282
[#482 'texture_3d']: r#282
[#482 'texture_cube']: r#282
[#482 'texture_cube_array']: r#282
[#482 'texture_depth_2d']: r#282
[#482 'texture_depth_2d_array']: r#282
[#482 'texture_depth_cube']: r#282
[#482 'texture_depth_cube_array']: r#282
[#482 'texture_depth_multisampled_2d']: r#282
[#482 'texture_multisampled_2d']: r#282
[#482 'texture_storage_1d']: r#282
[#482 'texture_storage_2d']: r#282
[#482 'texture_storage_2d_array']: r#282
[#482 'texture_storage_3d']: r#282
[#482 'u32']: r#282
[#482 'var']: r#282
[#482 'vec2']: r#282
[#482 'vec3']: r#282
[#482 'vec4']: r#282
[#482 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#282
[#483 ')']: r#281
[#484 '@']: r#283
[#484 'array']: r#283
[#484 'atomic']: r#283
[#484 'bool']: r#283
[#484 'f16']: r#283
[#484 'f32']: r#283
[#484 'fn']: r#283
[#484 'i32']: r#283
[#484 'mat2x2']: r#283
[#484 'mat2x3']: r#283
[#484 'mat2x4']: r#283
[#484 'mat3x2']: r#283
[#484 'mat3x3']: r#283
[#484 'mat3x4']: r#283
[#484 'mat4x2']: r#283
[#484 'mat4x3']: r#283
[#484 'mat4x4']: r#283
[#484 'override']: r#283
[#484 'ptr']: r#283
[#484 'sampler']: r#283
[#484 'sampler_comparison']: r#283
[#484 'texture_1d']: r#283
[#484 'texture_2d']: r#283
[#484 'texture_2d_array']: r#283
[#484 'texture_3d']: r#283
[#484 'texture_cube']: r#283
[#484 'texture_cube_array']: r#283
[#484 'texture_depth_2d']: r#283
[#484 'texture_depth_2d_array']: r#283
[#484 'texture_depth_cube']: r#283
[#484 'texture_depth_cube_array']: r#283
[#484 'texture_depth_multisampled_2d']: r#283
[#484 'texture_multisampled_2d']: r#283
[#484 'texture_storage_1d']: r#283
[#484 'texture_storage_2d']: r#283
[#484 'texture_storage_2d_array']: r#283
[#484 'texture_storage_3d']: r#283
[#484 'u32']: r#283
[#484 'var']: r#283
[#484 'vec2']: r#283
[#484 'vec3']: r#283
[#484 'vec4']: r#283
[#484 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#283
[#485 '@']: r#284
[#485 'array']: r#284
[#485 'atomic']: r#284
[#485 'bool']: r#284
[#485 'f16']: r#284
[#485 'f32']: r#284
[#485 'fn']: r#284
[#485 'i32']: r#284
[#485 'mat2x2']: r#284
[#485 'mat2x3']: r#284
[#485 'mat2x4']: r#284
[#485 'mat3x2']: r#284
[#485 'mat3x3']: r#284
[#485 'mat3x4']: r#284
[#485 'mat4x2']: r#284
[#485 'mat4x3']: r#284
[#485 'mat4x4']: r#284
[#485 'override']: r#284
[#485 'ptr']: r#284
[#485 'sampler']: r#284
[#485 'sampler_comparison']: r#284
[#485 'texture_1d']: r#284
[#485 'texture_2d']: r#284
[#485 'texture_2d_array']: r#284
[#485 'texture_3d']: r#284
[#485 'texture_cube']: r#284
[#485 'texture_cube_array']: r#284
[#485 'texture_depth_2d']: r#284
[#485 'texture_depth_2d_array']: r#284
[#485 'texture_depth_cube']: r#284
[#485 'texture_depth_cube_array']: r#284
[#485 'texture_depth_multisampled_2d']: r#284
[#485 'texture_multisampled_2d']: r#284
[#485 'texture_storage_1d']: r#284
[#485 'texture_storage_2d']: r#284
[#485 'texture_storage_2d_array']: r#284
[#485 'texture_storage_3d']: r#284
[#485 'u32']: r#284
[#485 'var']: r#284
[#485 'vec2']: r#284
[#485 'vec3']: r#284
[#485 'vec4']: r#284
[#485 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#284
[#486 ')']: r#281
[#486 'center']: s#493
[#486 'centroid']: s#494
[#486 'sample']: s#495
[#487 '@']: r#285
[#487 'array']: r#285
[#487 'atomic']: r#285
[#487 'bool']: r#285
[#487 'f16']: r#285
[#487 'f32']: r#285
[#487 'fn']: r#285
[#487 'i32']: r#285
[#487 'mat2x2']: r#285
[#487 'mat2x3']: r#285
[#487 'mat2x4']: r#285
[#487 'mat3x2']: r#285
[#487 'mat3x3']: r#285
[#487 'mat3x4']: r#285
[#487 'mat4x2']: r#285
[#487 'mat4x3']: r#285
[#487 'mat4x4']: r#285
[#487 'override']: r#285
[#487 'ptr']: r#285
[#487 'sampler']: r#285
[#487 'sampler_comparison']: r#285
[#487 'texture_1d']: r#285
[#487 'texture_2d']: r#285
[#487 'texture_2d_array']: r#285
[#487 'texture_3d']: r#285
[#487 'texture_cube']: r#285
[#487 'texture_cube_array']: r#285
[#487 'texture_depth_2d']: r#285
[#487 'texture_depth_2d_array']: r#285
[#487 'texture_depth_cube']: r#285
[#487 'texture_depth_cube_array']: r#285
[#487 'texture_depth_multisampled_2d']: r#285
[#487 'texture_multisampled_2d']: r#285
[#487 'texture_storage_1d']: r#285
[#487 'texture_storage_2d']: r#285
[#487 'texture_storage_2d_array']: r#285
[#487 'texture_storage_3d']: r#285
[#487 'u32']: r#285
[#487 'var']: r#285
[#487 'vec2']: r#285
[#487 'vec3']: r#285
[#487 'vec4']: r#285
[#487 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#285
[#488 '@']: r#286
[#488 'array']: r#286
[#488 'atomic']: r#286
[#488 'bool']: r#286
[#488 'f16']: r#286
[#488 'f32']: r#286
[#488 'fn']: r#286
[#488 'i32']: r#286
[#488 'mat2x2']: r#286
[#488 'mat2x3']: r#286
[#488 'mat2x4']: r#286
[#488 'mat3x2']: r#286
[#488 'mat3x3']: r#286
[#488 'mat3x4']: r#286
[#488 'mat4x2']: r#286
[#488 'mat4x3']: r#286
[#488 'mat4x4']: r#286
[#488 'override']: r#286
[#488 'ptr']: r#286
[#488 'sampler']: r#286
[#488 'sampler_comparison']: r#286
[#488 'texture_1d']: r#286
[#488 'texture_2d']: r#286
[#488 'texture_2d_array']: r#286
[#488 'texture_3d']: r#286
[#488 'texture_cube']: r#286
[#488 'texture_cube_array']: r#286
[#488 'texture_depth_2d']: r#286
[#488 'texture_depth_2d_array']: r#286
[#488 'texture_depth_cube']: r#286
[#488 'texture_depth_cube_array']: r#286
[#488 'texture_depth_multisampled_2d']: r#286
[#488 'texture_multisampled_2d']: r#286
[#488 'texture_storage_1d']: r#286
[#488 'texture_storage_2d']: r#286
[#488 'texture_storage_2d_array']: r#286
[#488 'texture_storage_3d']: r#286
[#488 'u32']: r#286
[#488 'var']: r#286
[#488 'vec2']: r#286
[#488 'vec3']: r#286
[#488 'vec4']: r#286
[#488 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#286
[#489 '@']: r#287
[#489 'array']: r#287
[#489 'atomic']: r#287
[#489 'bool']: r#287
[#489 'f16']: r#287
[#489 'f32']: r#287
[#489 'fn']: r#287
[#489 'i32']: r#287
[#489 'mat2x2']: r#287
[#489 'mat2x3']: r#287
[#489 'mat2x4']: r#287
[#489 'mat3x2']: r#287
[#489 'mat3x3']: r#287
[#489 'mat3x4']: r#287
[#489 'mat4x2']: r#287
[#489 'mat4x3']: r#287
[#489 'mat4x4']: r#287
[#489 'override']: r#287
[#489 'ptr']: r#287
[#489 'sampler']: r#287
[#489 'sampler_comparison']: r#287
[#489 'texture_1d']: r#287
[#489 'texture_2d']: r#287
[#489 'texture_2d_array']: r#287
[#489 'texture_3d']: r#287
[#489 'texture_cube']: r#287
[#489 'texture_cube_array']: r#287
[#489 'texture_depth_2d']: r#287
[#489 'texture_depth_2d_array']: r#287
[#489 'texture_depth_cube']: r#287
[#489 'texture_depth_cube_array']: r#287
[#489 'texture_depth_multisampled_2d']: r#287
[#489 'texture_multisampled_2d']: r#287
[#489 'texture_storage_1d']: r#287
[#489 'texture_storage_2d']: r#287
[#489 'texture_storage_2d_array']: r#287
[#489 'texture_storage_3d']: r#287
[#489 'u32']: r#287
[#489 'var']: r#287
[#489 'vec2']: r#287
[#489 'vec3']: r#287
[#489 'vec4']: r#287
[#489 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#287
[#490 '@']: r#288
[#490 'array']: r#288
[#490 'atomic']: r#288
[#490 'bool']: r#288
[#490 'f16']: r#288
[#490 'f32']: r#288
[#490 'fn']: r#288
[#490 'i32']: r#288
[#490 'mat2x2']: r#288
[#490 'mat2x3']: r#288
[#490 'mat2x4']: r#288
[#490 'mat3x2']: r#288
[#490 'mat3x3']: r#288
[#490 'mat3x4']: r#288
[#490 'mat4x2']: r#288
[#490 'mat4x3']: r#288
[#490 'mat4x4']: r#288
[#490 'override']: r#288
[#490 'ptr']: r#288
[#490 'sampler']: r#288
[#490 'sampler_comparison']: r#288
[#490 'texture_1d']: r#288
[#490 'texture_2d']: r#288
[#490 'texture_2d_array']: r#288
[#490 'texture_3d']: r#288
[#490 'texture_cube']: r#288
[#490 'texture_cube_array']: r#288
[#490 'texture_depth_2d']: r#288
[#490 'texture_depth_2d_array']: r#288
[#490 'texture_depth_cube']: r#288
[#490 'texture_depth_cube_array']: r#288
[#490 'texture_depth_multisampled_2d']: r#288
[#490 'texture_multisampled_2d']: r#288
[#490 'texture_storage_1d']: r#288
[#490 'texture_storage_2d']: r#288
[#490 'texture_storage_2d_array']: r#288
[#490 'texture_storage_3d']: r#288
[#490 'u32']: r#288
[#490 'var']: r#288
[#490 'vec2']: r#288
[#490 'vec3']: r#288
[#490 'vec4']: r#288
[#490 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#288
[#491 '@']: r#289
[#491 'array']: r#289
[#491 'atomic']: r#289
[#491 'bool']: r#289
[#491 'f16']: r#289
[#491 'f32']: r#289
[#491 'fn']: r#289
[#491 'i32']: r#289
[#491 'mat2x2']: r#289
[#491 'mat2x3']: r#289
[#491 'mat2x4']: r#289
[#491 'mat3x2']: r#289
[#491 'mat3x3']: r#289
[#491 'mat3x4']: r#289
[#491 'mat4x2']: r#289
[#491 'mat4x3']: r#289
[#491 'mat4x4']: r#289
[#491 'override']: r#289
[#491 'ptr']: r#289
[#491 'sampler']: r#289
[#491 'sampler_comparison']: r#289
[#491 'texture_1d']: r#289
[#491 'texture_2d']: r#289
[#491 'texture_2d_array']: r#289
[#491 'texture_3d']: r#289
[#491 'texture_cube']: r#289
[#491 'texture_cube_array']: r#289
[#491 'texture_depth_2d']: r#289
[#491 'texture_depth_2d_array']: r#289
[#491 'texture_depth_cube']: r#289
[#491 'texture_depth_cube_array']: r#289
[#491 'texture_depth_multisampled_2d']: r#289
[#491 'texture_multisampled_2d']: r#289
[#491 'texture_storage_1d']: r#289
[#491 'texture_storage_2d']: r#289
[#491 'texture_storage_2d_array']: r#289
[#491 'texture_storage_3d']: r#289
[#491 'u32']: r#289
[#491 'var']: r#289
[#491 'vec2']: r#289
[#491 'vec3']: r#289
[#491 'vec4']: r#289
[#491 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#289
[#492 ',']: s#483
[#493 ')']: r#290
[#493 ',']: r#290
[#494 ')']: r#291
[#494 ',']: r#291
[#495 ')']: r#292
[#495 ',']: r#292
[#496 '@']: r#293
[#496 'array']: r#293
[#496 'atomic']: r#293
[#496 'bool']: r#293
[#496 'f16']: r#293
[#496 'f32']: r#293
[#496 'fn']: r#293
[#496 'i32']: r#293
[#496 'mat2x2']: r#293
[#496 'mat2x3']: r#293
[#496 'mat2x4']: r#293
[#496 'mat3x2']: r#293
[#496 'mat3x3']: r#293
[#496 'mat3x4']: r#293
[#496 'mat4x2']: r#293
[#496 'mat4x3']: r#293
[#496 'mat4x4']: r#293
[#496 'override']: r#293
[#496 'ptr']: r#293
[#496 'sampler']: r#293
[#496 'sampler_comparison']: r#293
[#496 'texture_1d']: r#293
[#496 'texture_2d']: r#293
[#496 'texture_2d_array']: r#293
[#496 'texture_3d']: r#293
[#496 'texture_cube']: r#293
[#496 'texture_cube_array']: r#293
[#496 'texture_depth_2d']: r#293
[#496 'texture_depth_2d_array']: r#293
[#496 'texture_depth_cube']: r#293
[#496 'texture_depth_cube_array']: r#293
[#496 'texture_depth_multisampled_2d']: r#293
[#496 'texture_multisampled_2d']: r#293
[#496 'texture_storage_1d']: r#293
[#496 'texture_storage_2d']: r#293
[#496 'texture_storage_2d_array']: r#293
[#496 'texture_storage_3d']: r#293
[#496 'u32']: r#293
[#496 'var']: r#293
[#496 'vec2']: r#293
[#496 'vec3']: r#293
[#496 'vec4']: r#293
[#496 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#293
[#497 ',']: s#592
[#498 '!=']: r#294
[#498 '%']: r#294
[#498 '%=']: r#294
[#498 '&&']: r#294
[#498 '&']: r#294
[#498 '&=']: r#294
[#498 ')']: r#294
[#498 '*']: r#294
[#498 '*=']: r#294
[#498 '+']: r#294
[#498 '++']: r#294
[#498 '+=']: r#294
[#498 ',']: r#294
[#498 '-']: r#294
[#498 '--']: r#294
[#498 '-=']: r#294
[#498 '/']: r#294
[#498 '/=']: r#294
[#498 ':']: r#294
[#498 ';']: r#294
[#498 '=']: r#294
[#498 '==']: r#294
[#498 ']']: r#294
[#498 '^']: r#294
[#498 '^=']: r#294
[#498 '{']: r#294
[#498 '|']: r#294
[#498 '|=']: r#294
[#498 '||']: r#294
[#498 /\u200B_greater_than/]: r#294
[#498 /\u200B_greater_than_equal/]: r#294
[#498 /\u200B_less_than/]: r#294
[#498 /\u200B_less_than_equal/]: r#294
[#498 /\u200B_shift_left/]: r#294
[#498 /\u200B_shift_left_assign/]: r#294
[#498 /\u200B_shift_right/]: r#294
[#498 /\u200B_shift_right_assign/]: r#294
[#498 /\u200B_template_args_end/]: r#294
[#499 '!=']: r#295
[#499 '%']: r#295
[#499 '%=']: r#295
[#499 '&&']: r#295
[#499 '&']: r#295
[#499 '&=']: r#295
[#499 ')']: r#295
[#499 '*']: r#295
[#499 '*=']: r#295
[#499 '+']: r#295
[#499 '++']: r#295
[#499 '+=']: r#295
[#499 ',']: r#295
[#499 '-']: r#295
[#499 '--']: r#295
[#499 '-=']: r#295
[#499 '/']: r#295
[#499 '/=']: r#295
[#499 ':']: r#295
[#499 ';']: r#295
[#499 '=']: r#295
[#499 '==']: r#295
[#499 ']']: r#295
[#499 '^']: r#295
[#499 '^=']: r#295
[#499 '{']: r#295
[#499 '|']: r#295
[#499 '|=']: r#295
[#499 '||']: r#295
[#499 /\u200B_greater_than/]: r#295
[#499 /\u200B_greater_than_equal/]: r#295
[#499 /\u200B_less_than/]: r#295
[#499 /\u200B_less_than_equal/]: r#295
[#499 /\u200B_shift_left/]: r#295
[#499 /\u200B_shift_left_assign/]: r#295
[#499 /\u200B_shift_right/]: r#295
[#499 /\u200B_shift_right_assign/]: r#295
[#499 /\u200B_template_args_end/]: r#295
[#500 '(']: s#84
[#501 '(']: r#296
[#501 ')']: r#296
[#501 ',']: r#296
[#501 ';']: r#296
[#501 '=']: r#296
[#501 '{']: r#296
[#501 '}']: r#296
[#501 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#296
[#501 /\u200B_template_args_end/]: r#296
[#502 ')']: r#297
[#502 ',']: r#297
[#503 ')']: r#298
[#503 ',']: r#298
[#504 ')']: r#299
[#505 ')']: r#300
[#506 '(']: r#301
[#506 ')']: r#301
[#506 ',']: r#301
[#506 ';']: r#301
[#506 '=']: r#301
[#506 '{']: r#301
[#506 '}']: r#301
[#506 /\u200B_template_args_end/]: r#301
[#507 '(']: r#302
[#507 ')']: r#302
[#507 ',']: r#302
[#507 ';']: r#302
[#507 '=']: r#302
[#507 '{']: r#302
[#507 '}']: r#302
[#507 /\u200B_template_args_end/]: r#302
[#508 /\u200B_template_args_end/]: s#501
[#509 '!']: s#69
[#509 '&']: s#72
[#509 '(']: s#84
[#509 '*']: s#71
[#509 '-']: s#68
[#509 'array']: s#88
[#509 'atomic']: s#102
[#509 'bitcast']: s#78
[#509 'bool']: s#95
[#509 'f16']: s#97
[#509 'f32']: s#96
[#509 'false']: s#94
[#509 'i32']: s#98
[#509 'mat2x2']: s#107
[#509 'mat2x3']: s#108
[#509 'mat2x4']: s#109
[#509 'mat3x2']: s#110
[#509 'mat3x3']: s#111
[#509 'mat3x4']: s#112
[#509 'mat4x2']: s#113
[#509 'mat4x3']: s#114
[#509 'mat4x4']: s#115
[#509 'ptr']: s#100
[#509 'sampler']: s#132
[#509 'sampler_comparison']: s#133
[#509 'texture_1d']: s#139
[#509 'texture_2d']: s#140
[#509 'texture_2d_array']: s#141
[#509 'texture_3d']: s#142
[#509 'texture_cube']: s#143
[#509 'texture_cube_array']: s#144
[#509 'texture_depth_2d']: s#134
[#509 'texture_depth_2d_array']: s#135
[#509 'texture_depth_cube']: s#136
[#509 'texture_depth_cube_array']: s#137
[#509 'texture_depth_multisampled_2d']: s#138
[#509 'texture_multisampled_2d']: s#145
[#509 'texture_storage_1d']: s#146
[#509 'texture_storage_2d']: s#147
[#509 'texture_storage_2d_array']: s#148
[#509 'texture_storage_3d']: s#149
[#509 'true']: s#93
[#509 'u32']: s#99
[#509 'vec2']: s#104
[#509 'vec3']: s#105
[#509 'vec4']: s#106
[#509 '~']: s#70
[#509 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#509 /0[fh]/]: s#119
[#509 /0[iu]?/]: s#116
[#509 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#509 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#509 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#509 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#509 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#509 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#509 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#509 /[1-9][0-9]*[fh]/]: s#120
[#509 /[1-9][0-9]*[iu]?/]: s#117
[#510 'array']: s#362
[#510 'atomic']: s#102
[#510 'bool']: s#95
[#510 'f16']: s#97
[#510 'f32']: s#96
[#510 'i32']: s#98
[#510 'mat2x2']: s#107
[#510 'mat2x3']: s#108
[#510 'mat2x4']: s#109
[#510 'mat3x2']: s#110
[#510 'mat3x3']: s#111
[#510 'mat3x4']: s#112
[#510 'mat4x2']: s#113
[#510 'mat4x3']: s#114
[#510 'mat4x4']: s#115
[#510 'ptr']: s#100
[#510 'sampler']: s#132
[#510 'sampler_comparison']: s#133
[#510 'texture_1d']: s#139
[#510 'texture_2d']: s#140
[#510 'texture_2d_array']: s#141
[#510 'texture_3d']: s#142
[#510 'texture_cube']: s#143
[#510 'texture_cube_array']: s#144
[#510 'texture_depth_2d']: s#134
[#510 'texture_depth_2d_array']: s#135
[#510 'texture_depth_cube']: s#136
[#510 'texture_depth_cube_array']: s#137
[#510 'texture_depth_multisampled_2d']: s#138
[#510 'texture_multisampled_2d']: s#145
[#510 'texture_storage_1d']: s#146
[#510 'texture_storage_2d']: s#147
[#510 'texture_storage_2d_array']: s#148
[#510 'texture_storage_3d']: s#149
[#510 'u32']: s#99
[#510 'vec2']: s#104
[#510 'vec3']: s#105
[#510 'vec4']: s#106
[#510 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#511 '(']: r#303
[#511 ')']: r#303
[#511 ',']: r#303
[#511 ';']: r#303
[#511 '=']: r#303
[#511 '{']: r#303
[#511 '}']: r#303
[#511 /\u200B_template_args_end/]: r#303
[#512 '(']: r#304
[#512 ')']: r#304
[#512 ',']: r#304
[#512 ';']: r#304
[#512 '=']: r#304
[#512 '{']: r#304
[#512 '}']: r#304
[#512 /\u200B_template_args_end/]: r#304
[#513 '(']: r#305
[#513 ')']: r#305
[#513 ',']: r#305
[#513 ';']: r#305
[#513 '=']: r#305
[#513 '{']: r#305
[#513 '}']: r#305
[#513 /\u200B_template_args_end/]: r#305
[#514 'read']: s#553
[#514 'read_write']: s#555
[#514 'write']: s#554
[#515 '!']: s#69
[#515 '&']: s#72
[#515 '(']: s#84
[#515 '*']: s#71
[#515 '-']: s#68
[#515 'array']: s#88
[#515 'atomic']: s#102
[#515 'bitcast']: s#78
[#515 'bool']: s#95
[#515 'f16']: s#97
[#515 'f32']: s#96
[#515 'false']: s#94
[#515 'i32']: s#98
[#515 'mat2x2']: s#107
[#515 'mat2x3']: s#108
[#515 'mat2x4']: s#109
[#515 'mat3x2']: s#110
[#515 'mat3x3']: s#111
[#515 'mat3x4']: s#112
[#515 'mat4x2']: s#113
[#515 'mat4x3']: s#114
[#515 'mat4x4']: s#115
[#515 'ptr']: s#100
[#515 'sampler']: s#132
[#515 'sampler_comparison']: s#133
[#515 'texture_1d']: s#139
[#515 'texture_2d']: s#140
[#515 'texture_2d_array']: s#141
[#515 'texture_3d']: s#142
[#515 'texture_cube']: s#143
[#515 'texture_cube_array']: s#144
[#515 'texture_depth_2d']: s#134
[#515 'texture_depth_2d_array']: s#135
[#515 'texture_depth_cube']: s#136
[#515 'texture_depth_cube_array']: s#137
[#515 'texture_depth_multisampled_2d']: s#138
[#515 'texture_multisampled_2d']: s#145
[#515 'texture_storage_1d']: s#146
[#515 'texture_storage_2d']: s#147
[#515 'texture_storage_2d_array']: s#148
[#515 'texture_storage_3d']: s#149
[#515 'true']: s#93
[#515 'u32']: s#99
[#515 'vec2']: s#104
[#515 'vec3']: s#105
[#515 'vec4']: s#106
[#515 '~']: s#70
[#515 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#515 /0[fh]/]: s#119
[#515 /0[iu]?/]: s#116
[#515 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#515 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#515 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#515 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#515 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#515 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#515 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#515 /[1-9][0-9]*[fh]/]: s#120
[#515 /[1-9][0-9]*[iu]?/]: s#117
[#516 '&']: r#306
[#516 '(']: r#306
[#516 '*']: r#306
[#516 ';']: r#306
[#516 '_']: r#306
[#516 'array']: r#306
[#516 'atomic']: r#306
[#516 'bool']: r#306
[#516 'break']: r#306
[#516 'const']: r#306
[#516 'const_assert']: r#306
[#516 'continue']: r#306
[#516 'continuing']: r#306
[#516 'discard']: r#306
[#516 'else']: r#306
[#516 'f16']: r#306
[#516 'f32']: r#306
[#516 'for']: r#306
[#516 'i32']: r#306
[#516 'if']: r#306
[#516 'let']: r#306
[#516 'loop']: r#306
[#516 'mat2x2']: r#306
[#516 'mat2x3']: r#306
[#516 'mat2x4']: r#306
[#516 'mat3x2']: r#306
[#516 'mat3x3']: r#306
[#516 'mat3x4']: r#306
[#516 'mat4x2']: r#306
[#516 'mat4x3']: r#306
[#516 'mat4x4']: r#306
[#516 'ptr']: r#306
[#516 'return']: r#306
[#516 'sampler']: r#306
[#516 'sampler_comparison']: r#306
[#516 'switch']: r#306
[#516 'texture_1d']: r#306
[#516 'texture_2d']: r#306
[#516 'texture_2d_array']: r#306
[#516 'texture_3d']: r#306
[#516 'texture_cube']: r#306
[#516 'texture_cube_array']: r#306
[#516 'texture_depth_2d']: r#306
[#516 'texture_depth_2d_array']: r#306
[#516 'texture_depth_cube']: r#306
[#516 'texture_depth_cube_array']: r#306
[#516 'texture_depth_multisampled_2d']: r#306
[#516 'texture_multisampled_2d']: r#306
[#516 'texture_storage_1d']: r#306
[#516 'texture_storage_2d']: r#306
[#516 'texture_storage_2d_array']: r#306
[#516 'texture_storage_3d']: r#306
[#516 'u32']: r#306
[#516 'var']: r#306
[#516 'vec2']: r#306
[#516 'vec3']: r#306
[#516 'vec4']: r#306
[#516 'while']: r#306
[#516 '{']: r#306
[#516 '}']: r#306
[#516 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#306
[#517 '&']: r#307
[#517 '(']: r#307
[#517 '*']: r#307
[#517 ';']: r#307
[#517 '_']: r#307
[#517 'array']: r#307
[#517 'atomic']: r#307
[#517 'bool']: r#307
[#517 'break']: r#307
[#517 'const']: r#307
[#517 'const_assert']: r#307
[#517 'continue']: r#307
[#517 'continuing']: r#307
[#517 'discard']: r#307
[#517 'f16']: r#307
[#517 'f32']: r#307
[#517 'for']: r#307
[#517 'i32']: r#307
[#517 'if']: r#307
[#517 'let']: r#307
[#517 'loop']: r#307
[#517 'mat2x2']: r#307
[#517 'mat2x3']: r#307
[#517 'mat2x4']: r#307
[#517 'mat3x2']: r#307
[#517 'mat3x3']: r#307
[#517 'mat3x4']: r#307
[#517 'mat4x2']: r#307
[#517 'mat4x3']: r#307
[#517 'mat4x4']: r#307
[#517 'ptr']: r#307
[#517 'return']: r#307
[#517 'sampler']: r#307
[#517 'sampler_comparison']: r#307
[#517 'switch']: r#307
[#517 'texture_1d']: r#307
[#517 'texture_2d']: r#307
[#517 'texture_2d_array']: r#307
[#517 'texture_3d']: r#307
[#517 'texture_cube']: r#307
[#517 'texture_cube_array']: r#307
[#517 'texture_depth_2d']: r#307
[#517 'texture_depth_2d_array']: r#307
[#517 'texture_depth_cube']: r#307
[#517 'texture_depth_cube_array']: r#307
[#517 'texture_depth_multisampled_2d']: r#307
[#517 'texture_multisampled_2d']: r#307
[#517 'texture_storage_1d']: r#307
[#517 'texture_storage_2d']: r#307
[#517 'texture_storage_2d_array']: r#307
[#517 'texture_storage_3d']: r#307
[#517 'u32']: r#307
[#517 'var']: r#307
[#517 'vec2']: r#307
[#517 'vec3']: r#307
[#517 'vec4']: r#307
[#517 'while']: r#307
[#517 '{']: r#307
[#517 '}']: r#307
[#517 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#307
[#518 '&']: r#308
[#518 '(']: r#308
[#518 '*']: r#308
[#518 ';']: r#308
[#518 '_']: r#308
[#518 'array']: r#308
[#518 'atomic']: r#308
[#518 'bool']: r#308
[#518 'break']: r#308
[#518 'const']: r#308
[#518 'const_assert']: r#308
[#518 'continue']: r#308
[#518 'continuing']: r#308
[#518 'discard']: r#308
[#518 'f16']: r#308
[#518 'f32']: r#308
[#518 'for']: r#308
[#518 'i32']: r#308
[#518 'if']: r#308
[#518 'let']: r#308
[#518 'loop']: r#308
[#518 'mat2x2']: r#308
[#518 'mat2x3']: r#308
[#518 'mat2x4']: r#308
[#518 'mat3x2']: r#308
[#518 'mat3x3']: r#308
[#518 'mat3x4']: r#308
[#518 'mat4x2']: r#308
[#518 'mat4x3']: r#308
[#518 'mat4x4']: r#308
[#518 'ptr']: r#308
[#518 'return']: r#308
[#518 'sampler']: r#308
[#518 'sampler_comparison']: r#308
[#518 'switch']: r#308
[#518 'texture_1d']: r#308
[#518 'texture_2d']: r#308
[#518 'texture_2d_array']: r#308
[#518 'texture_3d']: r#308
[#518 'texture_cube']: r#308
[#518 'texture_cube_array']: r#308
[#518 'texture_depth_2d']: r#308
[#518 'texture_depth_2d_array']: r#308
[#518 'texture_depth_cube']: r#308
[#518 'texture_depth_cube_array']: r#308
[#518 'texture_depth_multisampled_2d']: r#308
[#518 'texture_multisampled_2d']: r#308
[#518 'texture_storage_1d']: r#308
[#518 'texture_storage_2d']: r#308
[#518 'texture_storage_2d_array']: r#308
[#518 'texture_storage_3d']: r#308
[#518 'u32']: r#308
[#518 'var']: r#308
[#518 'vec2']: r#308
[#518 'vec3']: r#308
[#518 'vec4']: r#308
[#518 'while']: r#308
[#518 '{']: r#308
[#518 '}']: r#308
[#518 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#308
[#519 '{']: s#187
[#520 'case']: s#579
[#520 'default']: s#580
[#521 'continuing']: s#573
[#522 'continuing']: r#309
[#522 '}']: r#309
[#523 '&']: s#350
[#523 '(']: s#351
[#523 '*']: s#349
[#523 ';']: s#314
[#523 '_']: s#347
[#523 'array']: s#88
[#523 'atomic']: s#102
[#523 'bool']: s#95
[#523 'break']: s#339
[#523 'const']: s#338
[#523 'const_assert']: s#31
[#523 'continue']: s#340
[#523 'discard']: s#325
[#523 'f16']: s#97
[#523 'f32']: s#96
[#523 'for']: s#333
[#523 'i32']: s#98
[#523 'if']: s#344
[#523 'let']: s#337
[#523 'loop']: s#332
[#523 'mat2x2']: s#107
[#523 'mat2x3']: s#108
[#523 'mat2x4']: s#109
[#523 'mat3x2']: s#110
[#523 'mat3x3']: s#111
[#523 'mat3x4']: s#112
[#523 'mat4x2']: s#113
[#523 'mat4x3']: s#114
[#523 'mat4x4']: s#115
[#523 'ptr']: s#100
[#523 'return']: s#329
[#523 'sampler']: s#132
[#523 'sampler_comparison']: s#133
[#523 'switch']: s#331
[#523 'texture_1d']: s#139
[#523 'texture_2d']: s#140
[#523 'texture_2d_array']: s#141
[#523 'texture_3d']: s#142
[#523 'texture_cube']: s#143
[#523 'texture_cube_array']: s#144
[#523 'texture_depth_2d']: s#134
[#523 'texture_depth_2d_array']: s#135
[#523 'texture_depth_cube']: s#136
[#523 'texture_depth_cube_array']: s#137
[#523 'texture_depth_multisampled_2d']: s#138
[#523 'texture_multisampled_2d']: s#145
[#523 'texture_storage_1d']: s#146
[#523 'texture_storage_2d']: s#147
[#523 'texture_storage_2d_array']: s#148
[#523 'texture_storage_3d']: s#149
[#523 'u32']: s#99
[#523 'var']: s#158
[#523 'vec2']: s#104
[#523 'vec3']: s#105
[#523 'vec4']: s#106
[#523 'while']: s#334
[#523 '{']: s#187
[#523 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#524 ')']: s#569
[#525 ';']: s#568
[#526 ';']: r#310
[#527 ';']: r#311
[#528 ';']: r#312
[#529 ';']: r#313
[#530 '&']: r#314
[#530 '(']: r#314
[#530 '*']: r#314
[#530 ';']: r#314
[#530 '_']: r#314
[#530 'array']: r#314
[#530 'atomic']: r#314
[#530 'bool']: r#314
[#530 'break']: r#314
[#530 'const']: r#314
[#530 'const_assert']: r#314
[#530 'continue']: r#314
[#530 'continuing']: r#314
[#530 'discard']: r#314
[#530 'f16']: r#314
[#530 'f32']: r#314
[#530 'for']: r#314
[#530 'i32']: r#314
[#530 'if']: r#314
[#530 'let']: r#314
[#530 'loop']: r#314
[#530 'mat2x2']: r#314
[#530 'mat2x3']: r#314
[#530 'mat2x4']: r#314
[#530 'mat3x2']: r#314
[#530 'mat3x3']: r#314
[#530 'mat3x4']: r#314
[#530 'mat4x2']: r#314
[#530 'mat4x3']: r#314
[#530 'mat4x4']: r#314
[#530 'ptr']: r#314
[#530 'return']: r#314
[#530 'sampler']: r#314
[#530 'sampler_comparison']: r#314
[#530 'switch']: r#314
[#530 'texture_1d']: r#314
[#530 'texture_2d']: r#314
[#530 'texture_2d_array']: r#314
[#530 'texture_3d']: r#314
[#530 'texture_cube']: r#314
[#530 'texture_cube_array']: r#314
[#530 'texture_depth_2d']: r#314
[#530 'texture_depth_2d_array']: r#314
[#530 'texture_depth_cube']: r#314
[#530 'texture_depth_cube_array']: r#314
[#530 'texture_depth_multisampled_2d']: r#314
[#530 'texture_multisampled_2d']: r#314
[#530 'texture_storage_1d']: r#314
[#530 'texture_storage_2d']: r#314
[#530 'texture_storage_2d_array']: r#314
[#530 'texture_storage_3d']: r#314
[#530 'u32']: r#314
[#530 'var']: r#314
[#530 'vec2']: r#314
[#530 'vec3']: r#314
[#530 'vec4']: r#314
[#530 'while']: r#314
[#530 '{']: r#314
[#530 '}']: r#314
[#530 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#314
[#531 ';']: r#315
[#532 '!']: s#69
[#532 '&']: s#72
[#532 '(']: s#84
[#532 '*']: s#71
[#532 '-']: s#68
[#532 'array']: s#88
[#532 'atomic']: s#102
[#532 'bitcast']: s#78
[#532 'bool']: s#95
[#532 'f16']: s#97
[#532 'f32']: s#96
[#532 'false']: s#94
[#532 'i32']: s#98
[#532 'mat2x2']: s#107
[#532 'mat2x3']: s#108
[#532 'mat2x4']: s#109
[#532 'mat3x2']: s#110
[#532 'mat3x3']: s#111
[#532 'mat3x4']: s#112
[#532 'mat4x2']: s#113
[#532 'mat4x3']: s#114
[#532 'mat4x4']: s#115
[#532 'ptr']: s#100
[#532 'sampler']: s#132
[#532 'sampler_comparison']: s#133
[#532 'texture_1d']: s#139
[#532 'texture_2d']: s#140
[#532 'texture_2d_array']: s#141
[#532 'texture_3d']: s#142
[#532 'texture_cube']: s#143
[#532 'texture_cube_array']: s#144
[#532 'texture_depth_2d']: s#134
[#532 'texture_depth_2d_array']: s#135
[#532 'texture_depth_cube']: s#136
[#532 'texture_depth_cube_array']: s#137
[#532 'texture_depth_multisampled_2d']: s#138
[#532 'texture_multisampled_2d']: s#145
[#532 'texture_storage_1d']: s#146
[#532 'texture_storage_2d']: s#147
[#532 'texture_storage_2d_array']: s#148
[#532 'texture_storage_3d']: s#149
[#532 'true']: s#93
[#532 'u32']: s#99
[#532 'vec2']: s#104
[#532 'vec3']: s#105
[#532 'vec4']: s#106
[#532 '~']: s#70
[#532 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#532 /0[fh]/]: s#119
[#532 /0[iu]?/]: s#116
[#532 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#532 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#532 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#532 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#532 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#532 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#532 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#532 /[1-9][0-9]*[fh]/]: s#120
[#532 /[1-9][0-9]*[iu]?/]: s#117
[#533 '!']: s#69
[#533 '&']: s#72
[#533 '(']: s#84
[#533 '*']: s#71
[#533 '-']: s#68
[#533 'array']: s#88
[#533 'atomic']: s#102
[#533 'bitcast']: s#78
[#533 'bool']: s#95
[#533 'f16']: s#97
[#533 'f32']: s#96
[#533 'false']: s#94
[#533 'i32']: s#98
[#533 'mat2x2']: s#107
[#533 'mat2x3']: s#108
[#533 'mat2x4']: s#109
[#533 'mat3x2']: s#110
[#533 'mat3x3']: s#111
[#533 'mat3x4']: s#112
[#533 'mat4x2']: s#113
[#533 'mat4x3']: s#114
[#533 'mat4x4']: s#115
[#533 'ptr']: s#100
[#533 'sampler']: s#132
[#533 'sampler_comparison']: s#133
[#533 'texture_1d']: s#139
[#533 'texture_2d']: s#140
[#533 'texture_2d_array']: s#141
[#533 'texture_3d']: s#142
[#533 'texture_cube']: s#143
[#533 'texture_cube_array']: s#144
[#533 'texture_depth_2d']: s#134
[#533 'texture_depth_2d_array']: s#135
[#533 'texture_depth_cube']: s#136
[#533 'texture_depth_cube_array']: s#137
[#533 'texture_depth_multisampled_2d']: s#138
[#533 'texture_multisampled_2d']: s#145
[#533 'texture_storage_1d']: s#146
[#533 'texture_storage_2d']: s#147
[#533 'texture_storage_2d_array']: s#148
[#533 'texture_storage_3d']: s#149
[#533 'true']: s#93
[#533 'u32']: s#99
[#533 'vec2']: s#104
[#533 'vec3']: s#105
[#533 'vec4']: s#106
[#533 '~']: s#70
[#533 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#533 /0[fh]/]: s#119
[#533 /0[iu]?/]: s#116
[#533 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#533 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#533 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#533 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#533 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#533 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#533 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#533 /[1-9][0-9]*[fh]/]: s#120
[#533 /[1-9][0-9]*[iu]?/]: s#117
[#534 '&']: r#316
[#534 '(']: r#316
[#534 '*']: r#316
[#534 ';']: r#316
[#534 '_']: r#316
[#534 'array']: r#316
[#534 'atomic']: r#316
[#534 'bool']: r#316
[#534 'break']: r#316
[#534 'const']: r#316
[#534 'const_assert']: r#316
[#534 'continue']: r#316
[#534 'continuing']: r#316
[#534 'discard']: r#316
[#534 'else']: r#316
[#534 'f16']: r#316
[#534 'f32']: r#316
[#534 'for']: r#316
[#534 'i32']: r#316
[#534 'if']: r#316
[#534 'let']: r#316
[#534 'loop']: r#316
[#534 'mat2x2']: r#316
[#534 'mat2x3']: r#316
[#534 'mat2x4']: r#316
[#534 'mat3x2']: r#316
[#534 'mat3x3']: r#316
[#534 'mat3x4']: r#316
[#534 'mat4x2']: r#316
[#534 'mat4x3']: r#316
[#534 'mat4x4']: r#316
[#534 'ptr']: r#316
[#534 'return']: r#316
[#534 'sampler']: r#316
[#534 'sampler_comparison']: r#316
[#534 'switch']: r#316
[#534 'texture_1d']: r#316
[#534 'texture_2d']: r#316
[#534 'texture_2d_array']: r#316
[#534 'texture_3d']: r#316
[#534 'texture_cube']: r#316
[#534 'texture_cube_array']: r#316
[#534 'texture_depth_2d']: r#316
[#534 'texture_depth_2d_array']: r#316
[#534 'texture_depth_cube']: r#316
[#534 'texture_depth_cube_array']: r#316
[#534 'texture_depth_multisampled_2d']: r#316
[#534 'texture_multisampled_2d']: r#316
[#534 'texture_storage_1d']: r#316
[#534 'texture_storage_2d']: r#316
[#534 'texture_storage_2d_array']: r#316
[#534 'texture_storage_3d']: r#316
[#534 'u32']: r#316
[#534 'var']: r#316
[#534 'vec2']: r#316
[#534 'vec3']: r#316
[#534 'vec4']: r#316
[#534 'while']: r#316
[#534 '{']: r#316
[#534 '}']: r#316
[#534 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#316
[#535 ')']: r#317
[#535 ';']: r#317
[#536 ')']: r#318
[#536 ';']: r#318
[#537 '%=']: r#319
[#537 '&=']: r#319
[#537 ')']: r#319
[#537 '*=']: r#319
[#537 '++']: r#319
[#537 '+=']: r#319
[#537 '--']: r#319
[#537 '-=']: r#319
[#537 '.']: r#319
[#537 '/=']: r#319
[#537 '=']: r#319
[#537 '[']: r#319
[#537 '^=']: r#319
[#537 '|=']: r#319
[#537 /\u200B_shift_left_assign/]: r#319
[#537 /\u200B_shift_right_assign/]: r#319
[#538 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#320
[#539 ':']: s#565
[#540 ',']: s#564
[#541 ')']: r#321
[#541 ',']: r#321
[#542 ',']: s#543
[#543 '@']: s#36
[#544 '->']: s#560
[#545 ',']: r#322
[#545 '}']: r#322
[#546 ',']: r#323
[#546 '}']: r#323
[#547 '}']: s#558
[#548 '}']: r#324
[#549 'array']: s#362
[#549 'atomic']: s#102
[#549 'bool']: s#95
[#549 'f16']: s#97
[#549 'f32']: s#96
[#549 'i32']: s#98
[#549 'mat2x2']: s#107
[#549 'mat2x3']: s#108
[#549 'mat2x4']: s#109
[#549 'mat3x2']: s#110
[#549 'mat3x3']: s#111
[#549 'mat3x4']: s#112
[#549 'mat4x2']: s#113
[#549 'mat4x3']: s#114
[#549 'mat4x4']: s#115
[#549 'ptr']: s#100
[#549 'sampler']: s#132
[#549 'sampler_comparison']: s#133
[#549 'texture_1d']: s#139
[#549 'texture_2d']: s#140
[#549 'texture_2d_array']: s#141
[#549 'texture_3d']: s#142
[#549 'texture_cube']: s#143
[#549 'texture_cube_array']: s#144
[#549 'texture_depth_2d']: s#134
[#549 'texture_depth_2d_array']: s#135
[#549 'texture_depth_cube']: s#136
[#549 'texture_depth_cube_array']: s#137
[#549 'texture_depth_multisampled_2d']: s#138
[#549 'texture_multisampled_2d']: s#145
[#549 'texture_storage_1d']: s#146
[#549 'texture_storage_2d']: s#147
[#549 'texture_storage_2d_array']: s#148
[#549 'texture_storage_3d']: s#149
[#549 'u32']: s#99
[#549 'vec2']: s#104
[#549 'vec3']: s#105
[#549 'vec4']: s#106
[#549 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#550 /\u200B_template_args_end/]: s#501
[#551 'read']: s#553
[#551 'read_write']: s#555
[#551 'write']: s#554
[#552 /\u200B_template_args_end/]: r#325
[#553 /\u200B_template_args_end/]: r#326
[#554 /\u200B_template_args_end/]: r#327
[#555 /\u200B_template_args_end/]: r#328
[#556 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#329
[#557 ',']: r#330
[#557 '}']: r#330
[#558 ';']: r#331
[#558 '@']: r#331
[#558 'alias']: r#331
[#558 'const']: r#331
[#558 'const_assert']: r#331
[#558 'fn']: r#331
[#558 'override']: r#331
[#558 'struct']: r#331
[#558 'var']: r#331
[#558 EndOfText]: r#331
[#559 '{']: r#332
[#560 '@']: s#36
[#561 ')']: r#333
[#561 ',']: r#333
[#562 ')']: r#334
[#562 ',']: r#334
[#563 ')']: r#335
[#564 ')']: r#336
[#565 'array']: s#362
[#565 'atomic']: s#102
[#565 'bool']: s#95
[#565 'f16']: s#97
[#565 'f32']: s#96
[#565 'i32']: s#98
[#565 'mat2x2']: s#107
[#565 'mat2x3']: s#108
[#565 'mat2x4']: s#109
[#565 'mat3x2']: s#110
[#565 'mat3x3']: s#111
[#565 'mat3x4']: s#112
[#565 'mat4x2']: s#113
[#565 'mat4x3']: s#114
[#565 'mat4x4']: s#115
[#565 'ptr']: s#100
[#565 'sampler']: s#132
[#565 'sampler_comparison']: s#133
[#565 'texture_1d']: s#139
[#565 'texture_2d']: s#140
[#565 'texture_2d_array']: s#141
[#565 'texture_3d']: s#142
[#565 'texture_cube']: s#143
[#565 'texture_cube_array']: s#144
[#565 'texture_depth_2d']: s#134
[#565 'texture_depth_2d_array']: s#135
[#565 'texture_depth_cube']: s#136
[#565 'texture_depth_cube_array']: s#137
[#565 'texture_depth_multisampled_2d']: s#138
[#565 'texture_multisampled_2d']: s#145
[#565 'texture_storage_1d']: s#146
[#565 'texture_storage_2d']: s#147
[#565 'texture_storage_2d_array']: s#148
[#565 'texture_storage_3d']: s#149
[#565 'u32']: s#99
[#565 'vec2']: s#104
[#565 'vec3']: s#105
[#565 'vec4']: s#106
[#565 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#566 ';']: r#337
[#567 ';']: r#338
[#568 '!']: s#69
[#568 '&']: s#72
[#568 '(']: s#84
[#568 '*']: s#71
[#568 '-']: s#68
[#568 'array']: s#88
[#568 'atomic']: s#102
[#568 'bitcast']: s#78
[#568 'bool']: s#95
[#568 'f16']: s#97
[#568 'f32']: s#96
[#568 'false']: s#94
[#568 'i32']: s#98
[#568 'mat2x2']: s#107
[#568 'mat2x3']: s#108
[#568 'mat2x4']: s#109
[#568 'mat3x2']: s#110
[#568 'mat3x3']: s#111
[#568 'mat3x4']: s#112
[#568 'mat4x2']: s#113
[#568 'mat4x3']: s#114
[#568 'mat4x4']: s#115
[#568 'ptr']: s#100
[#568 'sampler']: s#132
[#568 'sampler_comparison']: s#133
[#568 'texture_1d']: s#139
[#568 'texture_2d']: s#140
[#568 'texture_2d_array']: s#141
[#568 'texture_3d']: s#142
[#568 'texture_cube']: s#143
[#568 'texture_cube_array']: s#144
[#568 'texture_depth_2d']: s#134
[#568 'texture_depth_2d_array']: s#135
[#568 'texture_depth_cube']: s#136
[#568 'texture_depth_cube_array']: s#137
[#568 'texture_depth_multisampled_2d']: s#138
[#568 'texture_multisampled_2d']: s#145
[#568 'texture_storage_1d']: s#146
[#568 'texture_storage_2d']: s#147
[#568 'texture_storage_2d_array']: s#148
[#568 'texture_storage_3d']: s#149
[#568 'true']: s#93
[#568 'u32']: s#99
[#568 'vec2']: s#104
[#568 'vec3']: s#105
[#568 'vec4']: s#106
[#568 '~']: s#70
[#568 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#568 /0[fh]/]: s#119
[#568 /0[iu]?/]: s#116
[#568 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#568 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#568 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#568 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#568 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#568 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#568 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#568 /[1-9][0-9]*[fh]/]: s#120
[#568 /[1-9][0-9]*[iu]?/]: s#117
[#569 '{']: s#187
[#570 'continuing']: r#339
[#570 '}']: r#339
[#571 '}']: s#609
[#572 '}']: r#340
[#573 '{']: s#608
[#574 '}']: s#606
[#575 '}']: r#341
[#576 'case']: s#579
[#576 'default']: s#580
[#577 'case']: r#342
[#577 'default']: r#342
[#577 '}']: r#342
[#578 'case']: r#343
[#578 'default']: r#343
[#578 '}']: r#343
[#579 '!']: s#69
[#579 '&']: s#72
[#579 '(']: s#84
[#579 '*']: s#71
[#579 '-']: s#68
[#579 'array']: s#88
[#579 'atomic']: s#102
[#579 'bitcast']: s#78
[#579 'bool']: s#95
[#579 'default']: s#603
[#579 'f16']: s#97
[#579 'f32']: s#96
[#579 'false']: s#94
[#579 'i32']: s#98
[#579 'mat2x2']: s#107
[#579 'mat2x3']: s#108
[#579 'mat2x4']: s#109
[#579 'mat3x2']: s#110
[#579 'mat3x3']: s#111
[#579 'mat3x4']: s#112
[#579 'mat4x2']: s#113
[#579 'mat4x3']: s#114
[#579 'mat4x4']: s#115
[#579 'ptr']: s#100
[#579 'sampler']: s#132
[#579 'sampler_comparison']: s#133
[#579 'texture_1d']: s#139
[#579 'texture_2d']: s#140
[#579 'texture_2d_array']: s#141
[#579 'texture_3d']: s#142
[#579 'texture_cube']: s#143
[#579 'texture_cube_array']: s#144
[#579 'texture_depth_2d']: s#134
[#579 'texture_depth_2d_array']: s#135
[#579 'texture_depth_cube']: s#136
[#579 'texture_depth_cube_array']: s#137
[#579 'texture_depth_multisampled_2d']: s#138
[#579 'texture_multisampled_2d']: s#145
[#579 'texture_storage_1d']: s#146
[#579 'texture_storage_2d']: s#147
[#579 'texture_storage_2d_array']: s#148
[#579 'texture_storage_3d']: s#149
[#579 'true']: s#93
[#579 'u32']: s#99
[#579 'vec2']: s#104
[#579 'vec3']: s#105
[#579 'vec4']: s#106
[#579 '~']: s#70
[#579 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#579 /0[fh]/]: s#119
[#579 /0[iu]?/]: s#116
[#579 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#579 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#579 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#579 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#579 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#579 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#579 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#579 /[1-9][0-9]*[fh]/]: s#120
[#579 /[1-9][0-9]*[iu]?/]: s#117
[#580 ':']: s#600
[#581 '&']: r#344
[#581 '(']: r#344
[#581 '*']: r#344
[#581 ';']: r#344
[#581 '_']: r#344
[#581 'array']: r#344
[#581 'atomic']: r#344
[#581 'bool']: r#344
[#581 'break']: r#344
[#581 'const']: r#344
[#581 'const_assert']: r#344
[#581 'continue']: r#344
[#581 'continuing']: r#344
[#581 'discard']: r#344
[#581 'f16']: r#344
[#581 'f32']: r#344
[#581 'for']: r#344
[#581 'i32']: r#344
[#581 'if']: r#344
[#581 'let']: r#344
[#581 'loop']: r#344
[#581 'mat2x2']: r#344
[#581 'mat2x3']: r#344
[#581 'mat2x4']: r#344
[#581 'mat3x2']: r#344
[#581 'mat3x3']: r#344
[#581 'mat3x4']: r#344
[#581 'mat4x2']: r#344
[#581 'mat4x3']: r#344
[#581 'mat4x4']: r#344
[#581 'ptr']: r#344
[#581 'return']: r#344
[#581 'sampler']: r#344
[#581 'sampler_comparison']: r#344
[#581 'switch']: r#344
[#581 'texture_1d']: r#344
[#581 'texture_2d']: r#344
[#581 'texture_2d_array']: r#344
[#581 'texture_3d']: r#344
[#581 'texture_cube']: r#344
[#581 'texture_cube_array']: r#344
[#581 'texture_depth_2d']: r#344
[#581 'texture_depth_2d_array']: r#344
[#581 'texture_depth_cube']: r#344
[#581 'texture_depth_cube_array']: r#344
[#581 'texture_depth_multisampled_2d']: r#344
[#581 'texture_multisampled_2d']: r#344
[#581 'texture_storage_1d']: r#344
[#581 'texture_storage_2d']: r#344
[#581 'texture_storage_2d_array']: r#344
[#581 'texture_storage_3d']: r#344
[#581 'u32']: r#344
[#581 'var']: r#344
[#581 'vec2']: r#344
[#581 'vec3']: r#344
[#581 'vec4']: r#344
[#581 'while']: r#344
[#581 '{']: r#344
[#581 '}']: r#344
[#581 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#344
[#582 '{']: s#187
[#583 /\u200B_template_args_end/]: s#501
[#584 ',']: s#596
[#585 /\u200B_template_args_end/]: r#345
[#586 '+']: s#218
[#586 '-']: s#219
[#586 /\u200B_template_args_end/]: r#346
[#587 /\u200B_template_args_end/]: r#347
[#588 '%']: r#33
[#588 '&']: r#30
[#588 '*']: r#33
[#588 '+']: r#33
[#588 '-']: r#33
[#588 '/']: r#33
[#588 '^']: r#32
[#588 '|']: r#31
[#588 /\u200B_template_args_end/]: r#33
[#589 '(']: r#348
[#589 ')']: r#348
[#589 ',']: r#348
[#589 ';']: r#348
[#589 '=']: r#348
[#589 '{']: r#348
[#589 '}']: r#348
[#589 /\u200B_template_args_end/]: r#348
[#590 '!=']: r#349
[#590 '%']: r#349
[#590 '&&']: r#349
[#590 '&']: r#349
[#590 ')']: r#349
[#590 '*']: r#349
[#590 '+']: r#349
[#590 ',']: r#349
[#590 '-']: r#349
[#590 '.']: r#349
[#590 '/']: r#349
[#590 ':']: r#349
[#590 ';']: r#349
[#590 '==']: r#349
[#590 '[']: r#349
[#590 ']']: r#349
[#590 '^']: r#349
[#590 '{']: r#349
[#590 '|']: r#349
[#590 '||']: r#349
[#590 /\u200B_greater_than/]: r#349
[#590 /\u200B_greater_than_equal/]: r#349
[#590 /\u200B_less_than/]: r#349
[#590 /\u200B_less_than_equal/]: r#349
[#590 /\u200B_shift_left/]: r#349
[#590 /\u200B_shift_right/]: r#349
[#590 /\u200B_template_args_end/]: r#349
[#591 '@']: r#350
[#591 'array']: r#350
[#591 'atomic']: r#350
[#591 'bool']: r#350
[#591 'f16']: r#350
[#591 'f32']: r#350
[#591 'fn']: r#350
[#591 'i32']: r#350
[#591 'mat2x2']: r#350
[#591 'mat2x3']: r#350
[#591 'mat2x4']: r#350
[#591 'mat3x2']: r#350
[#591 'mat3x3']: r#350
[#591 'mat3x4']: r#350
[#591 'mat4x2']: r#350
[#591 'mat4x3']: r#350
[#591 'mat4x4']: r#350
[#591 'override']: r#350
[#591 'ptr']: r#350
[#591 'sampler']: r#350
[#591 'sampler_comparison']: r#350
[#591 'texture_1d']: r#350
[#591 'texture_2d']: r#350
[#591 'texture_2d_array']: r#350
[#591 'texture_3d']: r#350
[#591 'texture_cube']: r#350
[#591 'texture_cube_array']: r#350
[#591 'texture_depth_2d']: r#350
[#591 'texture_depth_2d_array']: r#350
[#591 'texture_depth_cube']: r#350
[#591 'texture_depth_cube_array']: r#350
[#591 'texture_depth_multisampled_2d']: r#350
[#591 'texture_multisampled_2d']: r#350
[#591 'texture_storage_1d']: r#350
[#591 'texture_storage_2d']: r#350
[#591 'texture_storage_2d_array']: r#350
[#591 'texture_storage_3d']: r#350
[#591 'u32']: r#350
[#591 'var']: r#350
[#591 'vec2']: r#350
[#591 'vec3']: r#350
[#591 'vec4']: r#350
[#591 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#350
[#592 '!']: s#69
[#592 '&']: s#72
[#592 '(']: s#84
[#592 ')']: r#281
[#592 '*']: s#71
[#592 '-']: s#68
[#592 'array']: s#88
[#592 'atomic']: s#102
[#592 'bitcast']: s#78
[#592 'bool']: s#95
[#592 'f16']: s#97
[#592 'f32']: s#96
[#592 'false']: s#94
[#592 'i32']: s#98
[#592 'mat2x2']: s#107
[#592 'mat2x3']: s#108
[#592 'mat2x4']: s#109
[#592 'mat3x2']: s#110
[#592 'mat3x3']: s#111
[#592 'mat3x4']: s#112
[#592 'mat4x2']: s#113
[#592 'mat4x3']: s#114
[#592 'mat4x4']: s#115
[#592 'ptr']: s#100
[#592 'sampler']: s#132
[#592 'sampler_comparison']: s#133
[#592 'texture_1d']: s#139
[#592 'texture_2d']: s#140
[#592 'texture_2d_array']: s#141
[#592 'texture_3d']: s#142
[#592 'texture_cube']: s#143
[#592 'texture_cube_array']: s#144
[#592 'texture_depth_2d']: s#134
[#592 'texture_depth_2d_array']: s#135
[#592 'texture_depth_cube']: s#136
[#592 'texture_depth_cube_array']: s#137
[#592 'texture_depth_multisampled_2d']: s#138
[#592 'texture_multisampled_2d']: s#145
[#592 'texture_storage_1d']: s#146
[#592 'texture_storage_2d']: s#147
[#592 'texture_storage_2d_array']: s#148
[#592 'texture_storage_3d']: s#149
[#592 'true']: s#93
[#592 'u32']: s#99
[#592 'vec2']: s#104
[#592 'vec3']: s#105
[#592 'vec4']: s#106
[#592 '~']: s#70
[#592 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#592 /0[fh]/]: s#119
[#592 /0[iu]?/]: s#116
[#592 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#592 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#592 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#592 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#592 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#592 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#592 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#592 /[1-9][0-9]*[fh]/]: s#120
[#592 /[1-9][0-9]*[iu]?/]: s#117
[#593 '@']: r#351
[#593 'array']: r#351
[#593 'atomic']: r#351
[#593 'bool']: r#351
[#593 'f16']: r#351
[#593 'f32']: r#351
[#593 'fn']: r#351
[#593 'i32']: r#351
[#593 'mat2x2']: r#351
[#593 'mat2x3']: r#351
[#593 'mat2x4']: r#351
[#593 'mat3x2']: r#351
[#593 'mat3x3']: r#351
[#593 'mat3x4']: r#351
[#593 'mat4x2']: r#351
[#593 'mat4x3']: r#351
[#593 'mat4x4']: r#351
[#593 'override']: r#351
[#593 'ptr']: r#351
[#593 'sampler']: r#351
[#593 'sampler_comparison']: r#351
[#593 'texture_1d']: r#351
[#593 'texture_2d']: r#351
[#593 'texture_2d_array']: r#351
[#593 'texture_3d']: r#351
[#593 'texture_cube']: r#351
[#593 'texture_cube_array']: r#351
[#593 'texture_depth_2d']: r#351
[#593 'texture_depth_2d_array']: r#351
[#593 'texture_depth_cube']: r#351
[#593 'texture_depth_cube_array']: r#351
[#593 'texture_depth_multisampled_2d']: r#351
[#593 'texture_multisampled_2d']: r#351
[#593 'texture_storage_1d']: r#351
[#593 'texture_storage_2d']: r#351
[#593 'texture_storage_2d_array']: r#351
[#593 'texture_storage_3d']: r#351
[#593 'u32']: r#351
[#593 'var']: r#351
[#593 'vec2']: r#351
[#593 'vec3']: r#351
[#593 'vec4']: r#351
[#593 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#351
[#594 ',']: s#483
[#595 /\u200B_template_args_end/]: s#501
[#596 'read']: s#553
[#596 'read_write']: s#555
[#596 'write']: s#554
[#597 '(']: r#352
[#597 ')']: r#352
[#597 ',']: r#352
[#597 ';']: r#352
[#597 '=']: r#352
[#597 '{']: r#352
[#597 '}']: r#352
[#597 /\u200B_template_args_end/]: r#352
[#598 '&']: r#353
[#598 '(']: r#353
[#598 '*']: r#353
[#598 ';']: r#353
[#598 '_']: r#353
[#598 'array']: r#353
[#598 'atomic']: r#353
[#598 'bool']: r#353
[#598 'break']: r#353
[#598 'const']: r#353
[#598 'const_assert']: r#353
[#598 'continue']: r#353
[#598 'continuing']: r#353
[#598 'discard']: r#353
[#598 'else']: r#353
[#598 'f16']: r#353
[#598 'f32']: r#353
[#598 'for']: r#353
[#598 'i32']: r#353
[#598 'if']: r#353
[#598 'let']: r#353
[#598 'loop']: r#353
[#598 'mat2x2']: r#353
[#598 'mat2x3']: r#353
[#598 'mat2x4']: r#353
[#598 'mat3x2']: r#353
[#598 'mat3x3']: r#353
[#598 'mat3x4']: r#353
[#598 'mat4x2']: r#353
[#598 'mat4x3']: r#353
[#598 'mat4x4']: r#353
[#598 'ptr']: r#353
[#598 'return']: r#353
[#598 'sampler']: r#353
[#598 'sampler_comparison']: r#353
[#598 'switch']: r#353
[#598 'texture_1d']: r#353
[#598 'texture_2d']: r#353
[#598 'texture_2d_array']: r#353
[#598 'texture_3d']: r#353
[#598 'texture_cube']: r#353
[#598 'texture_cube_array']: r#353
[#598 'texture_depth_2d']: r#353
[#598 'texture_depth_2d_array']: r#353
[#598 'texture_depth_cube']: r#353
[#598 'texture_depth_cube_array']: r#353
[#598 'texture_depth_multisampled_2d']: r#353
[#598 'texture_multisampled_2d']: r#353
[#598 'texture_storage_1d']: r#353
[#598 'texture_storage_2d']: r#353
[#598 'texture_storage_2d_array']: r#353
[#598 'texture_storage_3d']: r#353
[#598 'u32']: r#353
[#598 'var']: r#353
[#598 'vec2']: r#353
[#598 'vec3']: r#353
[#598 'vec4']: r#353
[#598 'while']: r#353
[#598 '{']: r#353
[#598 '}']: r#353
[#598 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#353
[#599 '{']: s#187
[#600 '{']: r#354
[#601 ':']: s#628
[#602 ',']: s#626
[#603 ',']: r#355
[#603 ':']: r#355
[#603 '{']: r#355
[#604 ',']: r#356
[#604 ':']: r#356
[#604 '{']: r#356
[#605 '}']: r#357
[#606 '&']: r#358
[#606 '(']: r#358
[#606 '*']: r#358
[#606 ';']: r#358
[#606 '_']: r#358
[#606 'array']: r#358
[#606 'atomic']: r#358
[#606 'bool']: r#358
[#606 'break']: r#358
[#606 'const']: r#358
[#606 'const_assert']: r#358
[#606 'continue']: r#358
[#606 'continuing']: r#358
[#606 'discard']: r#358
[#606 'f16']: r#358
[#606 'f32']: r#358
[#606 'for']: r#358
[#606 'i32']: r#358
[#606 'if']: r#358
[#606 'let']: r#358
[#606 'loop']: r#358
[#606 'mat2x2']: r#358
[#606 'mat2x3']: r#358
[#606 'mat2x4']: r#358
[#606 'mat3x2']: r#358
[#606 'mat3x3']: r#358
[#606 'mat3x4']: r#358
[#606 'mat4x2']: r#358
[#606 'mat4x3']: r#358
[#606 'mat4x4']: r#358
[#606 'ptr']: r#358
[#606 'return']: r#358
[#606 'sampler']: r#358
[#606 'sampler_comparison']: r#358
[#606 'switch']: r#358
[#606 'texture_1d']: r#358
[#606 'texture_2d']: r#358
[#606 'texture_2d_array']: r#358
[#606 'texture_3d']: r#358
[#606 'texture_cube']: r#358
[#606 'texture_cube_array']: r#358
[#606 'texture_depth_2d']: r#358
[#606 'texture_depth_2d_array']: r#358
[#606 'texture_depth_cube']: r#358
[#606 'texture_depth_cube_array']: r#358
[#606 'texture_depth_multisampled_2d']: r#358
[#606 'texture_multisampled_2d']: r#358
[#606 'texture_storage_1d']: r#358
[#606 'texture_storage_2d']: r#358
[#606 'texture_storage_2d_array']: r#358
[#606 'texture_storage_3d']: r#358
[#606 'u32']: r#358
[#606 'var']: r#358
[#606 'vec2']: r#358
[#606 'vec3']: r#358
[#606 'vec4']: r#358
[#606 'while']: r#358
[#606 '{']: r#358
[#606 '}']: r#358
[#606 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#358
[#607 '}']: r#359
[#608 '&']: s#350
[#608 '(']: s#351
[#608 '*']: s#349
[#608 ';']: s#314
[#608 '_']: s#347
[#608 'array']: s#88
[#608 'atomic']: s#102
[#608 'bool']: s#95
[#608 'break']: s#339
[#608 'const']: s#338
[#608 'const_assert']: s#31
[#608 'continue']: s#340
[#608 'discard']: s#325
[#608 'f16']: s#97
[#608 'f32']: s#96
[#608 'for']: s#333
[#608 'i32']: s#98
[#608 'if']: s#344
[#608 'let']: s#337
[#608 'loop']: s#332
[#608 'mat2x2']: s#107
[#608 'mat2x3']: s#108
[#608 'mat2x4']: s#109
[#608 'mat3x2']: s#110
[#608 'mat3x3']: s#111
[#608 'mat3x4']: s#112
[#608 'mat4x2']: s#113
[#608 'mat4x3']: s#114
[#608 'mat4x4']: s#115
[#608 'ptr']: s#100
[#608 'return']: s#329
[#608 'sampler']: s#132
[#608 'sampler_comparison']: s#133
[#608 'switch']: s#331
[#608 'texture_1d']: s#139
[#608 'texture_2d']: s#140
[#608 'texture_2d_array']: s#141
[#608 'texture_3d']: s#142
[#608 'texture_cube']: s#143
[#608 'texture_cube_array']: s#144
[#608 'texture_depth_2d']: s#134
[#608 'texture_depth_2d_array']: s#135
[#608 'texture_depth_cube']: s#136
[#608 'texture_depth_cube_array']: s#137
[#608 'texture_depth_multisampled_2d']: s#138
[#608 'texture_multisampled_2d']: s#145
[#608 'texture_storage_1d']: s#146
[#608 'texture_storage_2d']: s#147
[#608 'texture_storage_2d_array']: s#148
[#608 'texture_storage_3d']: s#149
[#608 'u32']: s#99
[#608 'var']: s#158
[#608 'vec2']: s#104
[#608 'vec3']: s#105
[#608 'vec4']: s#106
[#608 'while']: s#334
[#608 '{']: s#187
[#608 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#609 '&']: r#360
[#609 '(']: r#360
[#609 '*']: r#360
[#609 ';']: r#360
[#609 '_']: r#360
[#609 'array']: r#360
[#609 'atomic']: r#360
[#609 'bool']: r#360
[#609 'break']: r#360
[#609 'const']: r#360
[#609 'const_assert']: r#360
[#609 'continue']: r#360
[#609 'continuing']: r#360
[#609 'discard']: r#360
[#609 'f16']: r#360
[#609 'f32']: r#360
[#609 'for']: r#360
[#609 'i32']: r#360
[#609 'if']: r#360
[#609 'let']: r#360
[#609 'loop']: r#360
[#609 'mat2x2']: r#360
[#609 'mat2x3']: r#360
[#609 'mat2x4']: r#360
[#609 'mat3x2']: r#360
[#609 'mat3x3']: r#360
[#609 'mat3x4']: r#360
[#609 'mat4x2']: r#360
[#609 'mat4x3']: r#360
[#609 'mat4x4']: r#360
[#609 'ptr']: r#360
[#609 'return']: r#360
[#609 'sampler']: r#360
[#609 'sampler_comparison']: r#360
[#609 'switch']: r#360
[#609 'texture_1d']: r#360
[#609 'texture_2d']: r#360
[#609 'texture_2d_array']: r#360
[#609 'texture_3d']: r#360
[#609 'texture_cube']: r#360
[#609 'texture_cube_array']: r#360
[#609 'texture_depth_2d']: r#360
[#609 'texture_depth_2d_array']: r#360
[#609 'texture_depth_cube']: r#360
[#609 'texture_depth_cube_array']: r#360
[#609 'texture_depth_multisampled_2d']: r#360
[#609 'texture_multisampled_2d']: r#360
[#609 'texture_storage_1d']: r#360
[#609 'texture_storage_2d']: r#360
[#609 'texture_storage_2d_array']: r#360
[#609 'texture_storage_3d']: r#360
[#609 'u32']: r#360
[#609 'var']: r#360
[#609 'vec2']: r#360
[#609 'vec3']: r#360
[#609 'vec4']: r#360
[#609 'while']: r#360
[#609 '{']: r#360
[#609 '}']: r#360
[#609 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#360
[#610 '&']: r#361
[#610 '(']: r#361
[#610 '*']: r#361
[#610 ';']: r#361
[#610 '_']: r#361
[#610 'array']: r#361
[#610 'atomic']: r#361
[#610 'bool']: r#361
[#610 'break']: r#361
[#610 'const']: r#361
[#610 'const_assert']: r#361
[#610 'continue']: r#361
[#610 'continuing']: r#361
[#610 'discard']: r#361
[#610 'f16']: r#361
[#610 'f32']: r#361
[#610 'for']: r#361
[#610 'i32']: r#361
[#610 'if']: r#361
[#610 'let']: r#361
[#610 'loop']: r#361
[#610 'mat2x2']: r#361
[#610 'mat2x3']: r#361
[#610 'mat2x4']: r#361
[#610 'mat3x2']: r#361
[#610 'mat3x3']: r#361
[#610 'mat3x4']: r#361
[#610 'mat4x2']: r#361
[#610 'mat4x3']: r#361
[#610 'mat4x4']: r#361
[#610 'ptr']: r#361
[#610 'return']: r#361
[#610 'sampler']: r#361
[#610 'sampler_comparison']: r#361
[#610 'switch']: r#361
[#610 'texture_1d']: r#361
[#610 'texture_2d']: r#361
[#610 'texture_2d_array']: r#361
[#610 'texture_3d']: r#361
[#610 'texture_cube']: r#361
[#610 'texture_cube_array']: r#361
[#610 'texture_depth_2d']: r#361
[#610 'texture_depth_2d_array']: r#361
[#610 'texture_depth_cube']: r#361
[#610 'texture_depth_cube_array']: r#361
[#610 'texture_depth_multisampled_2d']: r#361
[#610 'texture_multisampled_2d']: r#361
[#610 'texture_storage_1d']: r#361
[#610 'texture_storage_2d']: r#361
[#610 'texture_storage_2d_array']: r#361
[#610 'texture_storage_3d']: r#361
[#610 'u32']: r#361
[#610 'var']: r#361
[#610 'vec2']: r#361
[#610 'vec3']: r#361
[#610 'vec4']: r#361
[#610 'while']: r#361
[#610 '{']: r#361
[#610 '}']: r#361
[#610 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#361
[#611 ';']: s#619
[#612 ';']: r#362
[#613 ')']: r#363
[#613 ',']: r#363
[#614 'array']: s#362
[#614 'atomic']: s#102
[#614 'bool']: s#95
[#614 'f16']: s#97
[#614 'f32']: s#96
[#614 'i32']: s#98
[#614 'mat2x2']: s#107
[#614 'mat2x3']: s#108
[#614 'mat2x4']: s#109
[#614 'mat3x2']: s#110
[#614 'mat3x3']: s#111
[#614 'mat3x4']: s#112
[#614 'mat4x2']: s#113
[#614 'mat4x3']: s#114
[#614 'mat4x4']: s#115
[#614 'ptr']: s#100
[#614 'sampler']: s#132
[#614 'sampler_comparison']: s#133
[#614 'texture_1d']: s#139
[#614 'texture_2d']: s#140
[#614 'texture_2d_array']: s#141
[#614 'texture_3d']: s#142
[#614 'texture_cube']: s#143
[#614 'texture_cube_array']: s#144
[#614 'texture_depth_2d']: s#134
[#614 'texture_depth_2d_array']: s#135
[#614 'texture_depth_cube']: s#136
[#614 'texture_depth_cube_array']: s#137
[#614 'texture_depth_multisampled_2d']: s#138
[#614 'texture_multisampled_2d']: s#145
[#614 'texture_storage_1d']: s#146
[#614 'texture_storage_2d']: s#147
[#614 'texture_storage_2d_array']: s#148
[#614 'texture_storage_3d']: s#149
[#614 'u32']: s#99
[#614 'vec2']: s#104
[#614 'vec3']: s#105
[#614 'vec4']: s#106
[#614 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#615 'array']: r#364
[#615 'atomic']: r#364
[#615 'bool']: r#364
[#615 'f16']: r#364
[#615 'f32']: r#364
[#615 'i32']: r#364
[#615 'mat2x2']: r#364
[#615 'mat2x3']: r#364
[#615 'mat2x4']: r#364
[#615 'mat3x2']: r#364
[#615 'mat3x3']: r#364
[#615 'mat3x4']: r#364
[#615 'mat4x2']: r#364
[#615 'mat4x3']: r#364
[#615 'mat4x4']: r#364
[#615 'ptr']: r#364
[#615 'sampler']: r#364
[#615 'sampler_comparison']: r#364
[#615 'texture_1d']: r#364
[#615 'texture_2d']: r#364
[#615 'texture_2d_array']: r#364
[#615 'texture_3d']: r#364
[#615 'texture_cube']: r#364
[#615 'texture_cube_array']: r#364
[#615 'texture_depth_2d']: r#364
[#615 'texture_depth_2d_array']: r#364
[#615 'texture_depth_cube']: r#364
[#615 'texture_depth_cube_array']: r#364
[#615 'texture_depth_multisampled_2d']: r#364
[#615 'texture_multisampled_2d']: r#364
[#615 'texture_storage_1d']: r#364
[#615 'texture_storage_2d']: r#364
[#615 'texture_storage_2d_array']: r#364
[#615 'texture_storage_3d']: r#364
[#615 'u32']: r#364
[#615 'vec2']: r#364
[#615 'vec3']: r#364
[#615 'vec4']: r#364
[#615 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#364
[#616 '@']: s#36
[#617 'array']: r#365
[#617 'atomic']: r#365
[#617 'bool']: r#365
[#617 'f16']: r#365
[#617 'f32']: r#365
[#617 'i32']: r#365
[#617 'mat2x2']: r#365
[#617 'mat2x3']: r#365
[#617 'mat2x4']: r#365
[#617 'mat3x2']: r#365
[#617 'mat3x3']: r#365
[#617 'mat3x4']: r#365
[#617 'mat4x2']: r#365
[#617 'mat4x3']: r#365
[#617 'mat4x4']: r#365
[#617 'ptr']: r#365
[#617 'sampler']: r#365
[#617 'sampler_comparison']: r#365
[#617 'texture_1d']: r#365
[#617 'texture_2d']: r#365
[#617 'texture_2d_array']: r#365
[#617 'texture_3d']: r#365
[#617 'texture_cube']: r#365
[#617 'texture_cube_array']: r#365
[#617 'texture_depth_2d']: r#365
[#617 'texture_depth_2d_array']: r#365
[#617 'texture_depth_cube']: r#365
[#617 'texture_depth_cube_array']: r#365
[#617 'texture_depth_multisampled_2d']: r#365
[#617 'texture_multisampled_2d']: r#365
[#617 'texture_storage_1d']: r#365
[#617 'texture_storage_2d']: r#365
[#617 'texture_storage_2d_array']: r#365
[#617 'texture_storage_3d']: r#365
[#617 'u32']: r#365
[#617 'vec2']: r#365
[#617 'vec3']: r#365
[#617 'vec4']: r#365
[#617 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#365
[#618 '{']: r#366
[#619 '&']: s#350
[#619 '(']: s#351
[#619 '*']: s#349
[#619 '_']: s#347
[#619 'array']: s#88
[#619 'atomic']: s#102
[#619 'bool']: s#95
[#619 'f16']: s#97
[#619 'f32']: s#96
[#619 'i32']: s#98
[#619 'mat2x2']: s#107
[#619 'mat2x3']: s#108
[#619 'mat2x4']: s#109
[#619 'mat3x2']: s#110
[#619 'mat3x3']: s#111
[#619 'mat3x4']: s#112
[#619 'mat4x2']: s#113
[#619 'mat4x3']: s#114
[#619 'mat4x4']: s#115
[#619 'ptr']: s#100
[#619 'sampler']: s#132
[#619 'sampler_comparison']: s#133
[#619 'texture_1d']: s#139
[#619 'texture_2d']: s#140
[#619 'texture_2d_array']: s#141
[#619 'texture_3d']: s#142
[#619 'texture_cube']: s#143
[#619 'texture_cube_array']: s#144
[#619 'texture_depth_2d']: s#134
[#619 'texture_depth_2d_array']: s#135
[#619 'texture_depth_cube']: s#136
[#619 'texture_depth_cube_array']: s#137
[#619 'texture_depth_multisampled_2d']: s#138
[#619 'texture_multisampled_2d']: s#145
[#619 'texture_storage_1d']: s#146
[#619 'texture_storage_2d']: s#147
[#619 'texture_storage_2d_array']: s#148
[#619 'texture_storage_3d']: s#149
[#619 'u32']: s#99
[#619 'vec2']: s#104
[#619 'vec3']: s#105
[#619 'vec4']: s#106
[#619 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#620 'break']: s#641
[#621 'break']: r#367
[#621 '}']: r#367
[#622 '&']: s#350
[#622 '(']: s#351
[#622 '*']: s#349
[#622 ';']: s#314
[#622 '_']: s#347
[#622 'array']: s#88
[#622 'atomic']: s#102
[#622 'bool']: s#95
[#622 'break']: s#339
[#622 'const']: s#338
[#622 'const_assert']: s#31
[#622 'continue']: s#340
[#622 'discard']: s#325
[#622 'f16']: s#97
[#622 'f32']: s#96
[#622 'for']: s#333
[#622 'i32']: s#98
[#622 'if']: s#344
[#622 'let']: s#337
[#622 'loop']: s#332
[#622 'mat2x2']: s#107
[#622 'mat2x3']: s#108
[#622 'mat2x4']: s#109
[#622 'mat3x2']: s#110
[#622 'mat3x3']: s#111
[#622 'mat3x4']: s#112
[#622 'mat4x2']: s#113
[#622 'mat4x3']: s#114
[#622 'mat4x4']: s#115
[#622 'ptr']: s#100
[#622 'return']: s#329
[#622 'sampler']: s#132
[#622 'sampler_comparison']: s#133
[#622 'switch']: s#331
[#622 'texture_1d']: s#139
[#622 'texture_2d']: s#140
[#622 'texture_2d_array']: s#141
[#622 'texture_3d']: s#142
[#622 'texture_cube']: s#143
[#622 'texture_cube_array']: s#144
[#622 'texture_depth_2d']: s#134
[#622 'texture_depth_2d_array']: s#135
[#622 'texture_depth_cube']: s#136
[#622 'texture_depth_cube_array']: s#137
[#622 'texture_depth_multisampled_2d']: s#138
[#622 'texture_multisampled_2d']: s#145
[#622 'texture_storage_1d']: s#146
[#622 'texture_storage_2d']: s#147
[#622 'texture_storage_2d_array']: s#148
[#622 'texture_storage_3d']: s#149
[#622 'u32']: s#99
[#622 'var']: s#158
[#622 'vec2']: s#104
[#622 'vec3']: s#105
[#622 'vec4']: s#106
[#622 'while']: s#334
[#622 '{']: s#187
[#622 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#623 ',']: s#637
[#624 ',']: r#368
[#624 ':']: r#368
[#624 '{']: r#368
[#625 ',']: s#626
[#626 '!']: s#69
[#626 '&']: s#72
[#626 '(']: s#84
[#626 '*']: s#71
[#626 '-']: s#68
[#626 'array']: s#88
[#626 'atomic']: s#102
[#626 'bitcast']: s#78
[#626 'bool']: s#95
[#626 'default']: s#603
[#626 'f16']: s#97
[#626 'f32']: s#96
[#626 'false']: s#94
[#626 'i32']: s#98
[#626 'mat2x2']: s#107
[#626 'mat2x3']: s#108
[#626 'mat2x4']: s#109
[#626 'mat3x2']: s#110
[#626 'mat3x3']: s#111
[#626 'mat3x4']: s#112
[#626 'mat4x2']: s#113
[#626 'mat4x3']: s#114
[#626 'mat4x4']: s#115
[#626 'ptr']: s#100
[#626 'sampler']: s#132
[#626 'sampler_comparison']: s#133
[#626 'texture_1d']: s#139
[#626 'texture_2d']: s#140
[#626 'texture_2d_array']: s#141
[#626 'texture_3d']: s#142
[#626 'texture_cube']: s#143
[#626 'texture_cube_array']: s#144
[#626 'texture_depth_2d']: s#134
[#626 'texture_depth_2d_array']: s#135
[#626 'texture_depth_cube']: s#136
[#626 'texture_depth_cube_array']: s#137
[#626 'texture_depth_multisampled_2d']: s#138
[#626 'texture_multisampled_2d']: s#145
[#626 'texture_storage_1d']: s#146
[#626 'texture_storage_2d']: s#147
[#626 'texture_storage_2d_array']: s#148
[#626 'texture_storage_3d']: s#149
[#626 'true']: s#93
[#626 'u32']: s#99
[#626 'vec2']: s#104
[#626 'vec3']: s#105
[#626 'vec4']: s#106
[#626 '~']: s#70
[#626 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#626 /0[fh]/]: s#119
[#626 /0[iu]?/]: s#116
[#626 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#626 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#626 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#626 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#626 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#626 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#626 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#626 /[1-9][0-9]*[fh]/]: s#120
[#626 /[1-9][0-9]*[iu]?/]: s#117
[#627 '{']: s#187
[#628 '{']: r#369
[#629 'case']: r#370
[#629 'default']: r#370
[#629 '}']: r#370
[#630 /\u200B_template_args_end/]: r#371
[#631 '(']: r#372
[#631 ')']: r#372
[#631 ',']: r#372
[#631 ';']: r#372
[#631 '=']: r#372
[#631 '{']: r#372
[#631 '}']: r#372
[#631 /\u200B_template_args_end/]: r#372
[#632 '@']: r#373
[#632 'array']: r#373
[#632 'atomic']: r#373
[#632 'bool']: r#373
[#632 'f16']: r#373
[#632 'f32']: r#373
[#632 'fn']: r#373
[#632 'i32']: r#373
[#632 'mat2x2']: r#373
[#632 'mat2x3']: r#373
[#632 'mat2x4']: r#373
[#632 'mat3x2']: r#373
[#632 'mat3x3']: r#373
[#632 'mat3x4']: r#373
[#632 'mat4x2']: r#373
[#632 'mat4x3']: r#373
[#632 'mat4x4']: r#373
[#632 'override']: r#373
[#632 'ptr']: r#373
[#632 'sampler']: r#373
[#632 'sampler_comparison']: r#373
[#632 'texture_1d']: r#373
[#632 'texture_2d']: r#373
[#632 'texture_2d_array']: r#373
[#632 'texture_3d']: r#373
[#632 'texture_cube']: r#373
[#632 'texture_cube_array']: r#373
[#632 'texture_depth_2d']: r#373
[#632 'texture_depth_2d_array']: r#373
[#632 'texture_depth_cube']: r#373
[#632 'texture_depth_cube_array']: r#373
[#632 'texture_depth_multisampled_2d']: r#373
[#632 'texture_multisampled_2d']: r#373
[#632 'texture_storage_1d']: r#373
[#632 'texture_storage_2d']: r#373
[#632 'texture_storage_2d_array']: r#373
[#632 'texture_storage_3d']: r#373
[#632 'u32']: r#373
[#632 'var']: r#373
[#632 'vec2']: r#373
[#632 'vec3']: r#373
[#632 'vec4']: r#373
[#632 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#373
[#633 'case']: r#374
[#633 'default']: r#374
[#633 '}']: r#374
[#634 ',']: r#375
[#634 ':']: r#375
[#634 '{']: r#375
[#635 ',']: r#376
[#635 ':']: r#376
[#635 '{']: r#376
[#636 ':']: r#377
[#636 '{']: r#377
[#637 ':']: r#378
[#637 '{']: r#378
[#638 'break']: r#379
[#638 '}']: r#379
[#639 '}']: s#647
[#640 '}']: r#380
[#641 'if']: s#646
[#642 ')']: r#381
[#643 ')']: r#382
[#644 ')']: r#383
[#645 ')']: r#384
[#646 '!']: s#69
[#646 '&']: s#72
[#646 '(']: s#84
[#646 '*']: s#71
[#646 '-']: s#68
[#646 'array']: s#88
[#646 'atomic']: s#102
[#646 'bitcast']: s#78
[#646 'bool']: s#95
[#646 'f16']: s#97
[#646 'f32']: s#96
[#646 'false']: s#94
[#646 'i32']: s#98
[#646 'mat2x2']: s#107
[#646 'mat2x3']: s#108
[#646 'mat2x4']: s#109
[#646 'mat3x2']: s#110
[#646 'mat3x3']: s#111
[#646 'mat3x4']: s#112
[#646 'mat4x2']: s#113
[#646 'mat4x3']: s#114
[#646 'mat4x4']: s#115
[#646 'ptr']: s#100
[#646 'sampler']: s#132
[#646 'sampler_comparison']: s#133
[#646 'texture_1d']: s#139
[#646 'texture_2d']: s#140
[#646 'texture_2d_array']: s#141
[#646 'texture_3d']: s#142
[#646 'texture_cube']: s#143
[#646 'texture_cube_array']: s#144
[#646 'texture_depth_2d']: s#134
[#646 'texture_depth_2d_array']: s#135
[#646 'texture_depth_cube']: s#136
[#646 'texture_depth_cube_array']: s#137
[#646 'texture_depth_multisampled_2d']: s#138
[#646 'texture_multisampled_2d']: s#145
[#646 'texture_storage_1d']: s#146
[#646 'texture_storage_2d']: s#147
[#646 'texture_storage_2d_array']: s#148
[#646 'texture_storage_3d']: s#149
[#646 'true']: s#93
[#646 'u32']: s#99
[#646 'vec2']: s#104
[#646 'vec3']: s#105
[#646 'vec4']: s#106
[#646 '~']: s#70
[#646 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#79
[#646 /0[fh]/]: s#119
[#646 /0[iu]?/]: s#116
[#646 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#124
[#646 /0[xX][0-9a-fA-F]+[iu]?/]: s#118
[#646 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#126
[#646 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#125
[#646 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#121
[#646 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#123
[#646 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#122
[#646 /[1-9][0-9]*[fh]/]: s#120
[#646 /[1-9][0-9]*[iu]?/]: s#117
[#647 '}']: r#385
[#648 ';']: s#649
[#649 '}']: r#386

=Goto:
[#0 enable_directive]: #5
[#0 global_directive]: #4
[#0 requires_directive]: #6
[#0 translation_unit]: #1
[#0 translation_unit/0.0]: #2
[#0 translation_unit/0.0/0]: #3
[#2 attribute]: #35
[#2 const_assert_statement]: #24
[#2 function_decl]: #23
[#2 function_decl/0.0]: #30
[#2 function_decl/0.0/0]: #34
[#2 global_constant_decl]: #20
[#2 global_constant_decl/1.0]: #27
[#2 global_constant_decl/1.0/0]: #33
[#2 global_decl]: #17
[#2 global_variable_decl]: #19
[#2 global_variable_decl/0.0]: #25
[#2 global_variable_decl/0.0/0]: #32
[#2 struct_decl]: #22
[#2 translation_unit/0.1]: #15
[#2 translation_unit/0.1/0]: #16
[#2 type_alias_decl]: #21
[#4 enable_directive]: #5
[#4 global_directive]: #4
[#4 requires_directive]: #6
[#4 translation_unit/0.0/0]: #14
[#7 enable_extension_name]: #12
[#8 software_extension_list]: #9
[#8 software_extension_name]: #10
[#10 software_extension_list/0.1]: #165
[#10 software_extension_list/0.1/0]: #166
[#10 software_extension_list/0.1/0/0.0]: #167
[#17 attribute]: #35
[#17 const_assert_statement]: #24
[#17 function_decl]: #23
[#17 function_decl/0.0]: #30
[#17 function_decl/0.0/0]: #34
[#17 global_constant_decl]: #20
[#17 global_constant_decl/1.0]: #27
[#17 global_constant_decl/1.0/0]: #33
[#17 global_decl]: #17
[#17 global_variable_decl]: #19
[#17 global_variable_decl/0.0]: #25
[#17 global_variable_decl/0.0/0]: #32
[#17 struct_decl]: #22
[#17 translation_unit/0.1/0]: #163
[#17 type_alias_decl]: #21
[#25 variable_decl]: #157
[#26 ident]: #156
[#26 optionally_typed_ident]: #155
[#28 ident]: #153
[#29 ident]: #152
[#30 function_header]: #150
[#31 additive_expression]: #64
[#31 array_type_specifier]: #101
[#31 binary_and_expression]: #61
[#31 binary_or_expression]: #62
[#31 binary_xor_expression]: #63
[#31 bitwise_expression]: #59
[#31 bool_literal]: #83
[#31 call_expression]: #75
[#31 callable]: #80
[#31 decimal_float_literal]: #91
[#31 decimal_int_literal]: #89
[#31 depth_texture_type]: #128
[#31 expression]: #55
[#31 float_literal]: #82
[#31 hex_float_literal]: #92
[#31 hex_int_literal]: #90
[#31 ident]: #74
[#31 int_literal]: #81
[#31 literal]: #76
[#31 mat_prefix]: #87
[#31 multiplicative_expression]: #66
[#31 multisampled_texture_type]: #130
[#31 paren_expression]: #77
[#31 primary_expression]: #73
[#31 relational_expression]: #56
[#31 sampled_texture_type]: #129
[#31 sampler_type]: #127
[#31 shift_expression]: #60
[#31 short_circuit_and_expression]: #58
[#31 short_circuit_or_expression]: #57
[#31 singular_expression]: #67
[#31 storage_texture_type]: #131
[#31 texture_and_sampler_types]: #103
[#31 type_specifier_without_ident]: #85
[#31 unary_expression]: #65
[#31 vec_prefix]: #86
[#35 attribute]: #35
[#35 function_decl/0.0/0]: #54
[#35 global_constant_decl/1.0/0]: #53
[#35 global_variable_decl/0.0/0]: #52
[#60 _greater_than]: #224
[#60 _greater_than_equal]: #226
[#60 _less_than]: #223
[#60 _less_than_equal]: #225
[#64 additive_operator]: #217
[#65 _shift_left]: #213
[#65 _shift_right]: #214
[#66 multiplicative_operator]: #209
[#68 array_type_specifier]: #101
[#68 bool_literal]: #83
[#68 call_expression]: #75
[#68 callable]: #80
[#68 decimal_float_literal]: #91
[#68 decimal_int_literal]: #89
[#68 depth_texture_type]: #128
[#68 float_literal]: #82
[#68 hex_float_literal]: #92
[#68 hex_int_literal]: #90
[#68 ident]: #74
[#68 int_literal]: #81
[#68 literal]: #76
[#68 mat_prefix]: #87
[#68 multisampled_texture_type]: #130
[#68 paren_expression]: #77
[#68 primary_expression]: #73
[#68 sampled_texture_type]: #129
[#68 sampler_type]: #127
[#68 singular_expression]: #67
[#68 storage_texture_type]: #131
[#68 texture_and_sampler_types]: #103
[#68 type_specifier_without_ident]: #85
[#68 unary_expression]: #208
[#68 vec_prefix]: #86
[#69 array_type_specifier]: #101
[#69 bool_literal]: #83
[#69 call_expression]: #75
[#69 callable]: #80
[#69 decimal_float_literal]: #91
[#69 decimal_int_literal]: #89
[#69 depth_texture_type]: #128
[#69 float_literal]: #82
[#69 hex_float_literal]: #92
[#69 hex_int_literal]: #90
[#69 ident]: #74
[#69 int_literal]: #81
[#69 literal]: #76
[#69 mat_prefix]: #87
[#69 multisampled_texture_type]: #130
[#69 paren_expression]: #77
[#69 primary_expression]: #73
[#69 sampled_texture_type]: #129
[#69 sampler_type]: #127
[#69 singular_expression]: #67
[#69 storage_texture_type]: #131
[#69 texture_and_sampler_types]: #103
[#69 type_specifier_without_ident]: #85
[#69 unary_expression]: #207
[#69 vec_prefix]: #86
[#70 array_type_specifier]: #101
[#70 bool_literal]: #83
[#70 call_expression]: #75
[#70 callable]: #80
[#70 decimal_float_literal]: #91
[#70 decimal_int_literal]: #89
[#70 depth_texture_type]: #128
[#70 float_literal]: #82
[#70 hex_float_literal]: #92
[#70 hex_int_literal]: #90
[#70 ident]: #74
[#70 int_literal]: #81
[#70 literal]: #76
[#70 mat_prefix]: #87
[#70 multisampled_texture_type]: #130
[#70 paren_expression]: #77
[#70 primary_expression]: #73
[#70 sampled_texture_type]: #129
[#70 sampler_type]: #127
[#70 singular_expression]: #67
[#70 storage_texture_type]: #131
[#70 texture_and_sampler_types]: #103
[#70 type_specifier_without_ident]: #85
[#70 unary_expression]: #206
[#70 vec_prefix]: #86
[#71 array_type_specifier]: #101
[#71 bool_literal]: #83
[#71 call_expression]: #75
[#71 callable]: #80
[#71 decimal_float_literal]: #91
[#71 decimal_int_literal]: #89
[#71 depth_texture_type]: #128
[#71 float_literal]: #82
[#71 hex_float_literal]: #92
[#71 hex_int_literal]: #90
[#71 ident]: #74
[#71 int_literal]: #81
[#71 literal]: #76
[#71 mat_prefix]: #87
[#71 multisampled_texture_type]: #130
[#71 paren_expression]: #77
[#71 primary_expression]: #73
[#71 sampled_texture_type]: #129
[#71 sampler_type]: #127
[#71 singular_expression]: #67
[#71 storage_texture_type]: #131
[#71 texture_and_sampler_types]: #103
[#71 type_specifier_without_ident]: #85
[#71 unary_expression]: #205
[#71 vec_prefix]: #86
[#72 array_type_specifier]: #101
[#72 bool_literal]: #83
[#72 call_expression]: #75
[#72 callable]: #80
[#72 decimal_float_literal]: #91
[#72 decimal_int_literal]: #89
[#72 depth_texture_type]: #128
[#72 float_literal]: #82
[#72 hex_float_literal]: #92
[#72 hex_int_literal]: #90
[#72 ident]: #74
[#72 int_literal]: #81
[#72 literal]: #76
[#72 mat_prefix]: #87
[#72 multisampled_texture_type]: #130
[#72 paren_expression]: #77
[#72 primary_expression]: #73
[#72 sampled_texture_type]: #129
[#72 sampler_type]: #127
[#72 singular_expression]: #67
[#72 storage_texture_type]: #131
[#72 texture_and_sampler_types]: #103
[#72 type_specifier_without_ident]: #85
[#72 unary_expression]: #204
[#72 vec_prefix]: #86
[#73 component_or_swizzle_specifier]: #201
[#73 singular_expression/0.1]: #200
[#78 _disambiguate_template]: #199
[#80 argument_expression_list]: #197
[#84 additive_expression]: #64
[#84 array_type_specifier]: #101
[#84 binary_and_expression]: #61
[#84 binary_or_expression]: #62
[#84 binary_xor_expression]: #63
[#84 bitwise_expression]: #59
[#84 bool_literal]: #83
[#84 call_expression]: #75
[#84 callable]: #80
[#84 decimal_float_literal]: #91
[#84 decimal_int_literal]: #89
[#84 depth_texture_type]: #128
[#84 expression]: #196
[#84 float_literal]: #82
[#84 hex_float_literal]: #92
[#84 hex_int_literal]: #90
[#84 ident]: #74
[#84 int_literal]: #81
[#84 literal]: #76
[#84 mat_prefix]: #87
[#84 multiplicative_expression]: #66
[#84 multisampled_texture_type]: #130
[#84 paren_expression]: #77
[#84 primary_expression]: #73
[#84 relational_expression]: #56
[#84 sampled_texture_type]: #129
[#84 sampler_type]: #127
[#84 shift_expression]: #60
[#84 short_circuit_and_expression]: #58
[#84 short_circuit_or_expression]: #57
[#84 singular_expression]: #67
[#84 storage_texture_type]: #131
[#84 texture_and_sampler_types]: #103
[#84 type_specifier_without_ident]: #85
[#84 unary_expression]: #65
[#84 vec_prefix]: #86
[#86 _disambiguate_template]: #195
[#87 _disambiguate_template]: #194
[#88 _disambiguate_template]: #193
[#100 _disambiguate_template]: #192
[#102 _disambiguate_template]: #191
[#129 _disambiguate_template]: #190
[#130 _disambiguate_template]: #189
[#131 _disambiguate_template]: #188
[#150 compound_statement]: #186
[#151 ident]: #185
[#152 struct_body_decl]: #183
[#154 ident]: #156
[#154 optionally_typed_ident]: #181
[#156 optionally_typed_ident/0.1]: #178
[#157 global_variable_decl/0.2]: #176
[#158 _disambiguate_template]: #174
[#165 software_extension_list/0.2]: #172
[#167 software_extension_list/0.1/0]: #171
[#167 software_extension_list/0.1/0/0.0]: #167
[#168 software_extension_name]: #170
[#174 _template_args_start]: #370
[#174 variable_decl/0.2]: #368
[#174 variable_qualifier]: #369
[#177 additive_expression]: #64
[#177 array_type_specifier]: #101
[#177 binary_and_expression]: #61
[#177 binary_or_expression]: #62
[#177 binary_xor_expression]: #63
[#177 bitwise_expression]: #59
[#177 bool_literal]: #83
[#177 call_expression]: #75
[#177 callable]: #80
[#177 decimal_float_literal]: #91
[#177 decimal_int_literal]: #89
[#177 depth_texture_type]: #128
[#177 expression]: #367
[#177 float_literal]: #82
[#177 hex_float_literal]: #92
[#177 hex_int_literal]: #90
[#177 ident]: #74
[#177 int_literal]: #81
[#177 literal]: #76
[#177 mat_prefix]: #87
[#177 multiplicative_expression]: #66
[#177 multisampled_texture_type]: #130
[#177 paren_expression]: #77
[#177 primary_expression]: #73
[#177 relational_expression]: #56
[#177 sampled_texture_type]: #129
[#177 sampler_type]: #127
[#177 shift_expression]: #60
[#177 short_circuit_and_expression]: #58
[#177 short_circuit_or_expression]: #57
[#177 singular_expression]: #67
[#177 storage_texture_type]: #131
[#177 texture_and_sampler_types]: #103
[#177 type_specifier_without_ident]: #85
[#177 unary_expression]: #65
[#177 vec_prefix]: #86
[#179 array_type_specifier]: #101
[#179 depth_texture_type]: #128
[#179 ident]: #358
[#179 mat_prefix]: #361
[#179 multisampled_texture_type]: #130
[#179 sampled_texture_type]: #129
[#179 sampler_type]: #127
[#179 storage_texture_type]: #131
[#179 texture_and_sampler_types]: #103
[#179 type_specifier]: #366
[#179 type_specifier_without_ident]: #359
[#179 vec_prefix]: #360
[#180 additive_expression]: #64
[#180 array_type_specifier]: #101
[#180 binary_and_expression]: #61
[#180 binary_or_expression]: #62
[#180 binary_xor_expression]: #63
[#180 bitwise_expression]: #59
[#180 bool_literal]: #83
[#180 call_expression]: #75
[#180 callable]: #80
[#180 decimal_float_literal]: #91
[#180 decimal_int_literal]: #89
[#180 depth_texture_type]: #128
[#180 expression]: #365
[#180 float_literal]: #82
[#180 hex_float_literal]: #92
[#180 hex_int_literal]: #90
[#180 ident]: #74
[#180 int_literal]: #81
[#180 literal]: #76
[#180 mat_prefix]: #87
[#180 multiplicative_expression]: #66
[#180 multisampled_texture_type]: #130
[#180 paren_expression]: #77
[#180 primary_expression]: #73
[#180 relational_expression]: #56
[#180 sampled_texture_type]: #129
[#180 sampler_type]: #127
[#180 shift_expression]: #60
[#180 short_circuit_and_expression]: #58
[#180 short_circuit_or_expression]: #57
[#180 singular_expression]: #67
[#180 storage_texture_type]: #131
[#180 texture_and_sampler_types]: #103
[#180 type_specifier_without_ident]: #85
[#180 unary_expression]: #65
[#180 vec_prefix]: #86
[#181 global_constant_decl/1.3]: #363
[#182 array_type_specifier]: #101
[#182 depth_texture_type]: #128
[#182 ident]: #358
[#182 mat_prefix]: #361
[#182 multisampled_texture_type]: #130
[#182 sampled_texture_type]: #129
[#182 sampler_type]: #127
[#182 storage_texture_type]: #131
[#182 texture_and_sampler_types]: #103
[#182 type_specifier]: #357
[#182 type_specifier_without_ident]: #359
[#182 vec_prefix]: #360
[#184 attribute]: #356
[#184 struct_member]: #353
[#184 struct_member/0.0]: #354
[#184 struct_member/0.0/0]: #355
[#187 array_type_specifier]: #101
[#187 assignment_statement]: #341
[#187 break_statement]: #323
[#187 callable]: #335
[#187 compound_statement]: #327
[#187 compound_statement/0.1]: #311
[#187 compound_statement/0.1/0]: #312
[#187 const_assert_statement]: #328
[#187 continue_statement]: #324
[#187 core_lhs_expression]: #348
[#187 decrement_statement]: #343
[#187 depth_texture_type]: #128
[#187 for_statement]: #319
[#187 func_call_statement]: #321
[#187 ident]: #345
[#187 if_clause]: #330
[#187 if_statement]: #316
[#187 increment_statement]: #342
[#187 lhs_expression]: #346
[#187 loop_statement]: #318
[#187 mat_prefix]: #87
[#187 multisampled_texture_type]: #130
[#187 return_statement]: #315
[#187 sampled_texture_type]: #129
[#187 sampler_type]: #127
[#187 statement]: #313
[#187 storage_texture_type]: #131
[#187 switch_statement]: #317
[#187 texture_and_sampler_types]: #103
[#187 type_specifier_without_ident]: #85
[#187 variable_decl]: #336
[#187 variable_statement]: #322
[#187 variable_updating_statement]: #326
[#187 vec_prefix]: #86
[#187 while_statement]: #320
[#188 _template_args_start]: #310
[#189 _template_args_start]: #309
[#190 _template_args_start]: #308
[#191 _template_args_start]: #307
[#192 _template_args_start]: #306
[#193 _template_args_start]: #305
[#194 _template_args_start]: #304
[#195 _template_args_start]: #303
[#198 additive_expression]: #64
[#198 argument_expression_list/0.1]: #299
[#198 array_type_specifier]: #101
[#198 binary_and_expression]: #61
[#198 binary_or_expression]: #62
[#198 binary_xor_expression]: #63
[#198 bitwise_expression]: #59
[#198 bool_literal]: #83
[#198 call_expression]: #75
[#198 callable]: #80
[#198 decimal_float_literal]: #91
[#198 decimal_int_literal]: #89
[#198 depth_texture_type]: #128
[#198 expression]: #301
[#198 expression_comma_list]: #300
[#198 float_literal]: #82
[#198 hex_float_literal]: #92
[#198 hex_int_literal]: #90
[#198 ident]: #74
[#198 int_literal]: #81
[#198 literal]: #76
[#198 mat_prefix]: #87
[#198 multiplicative_expression]: #66
[#198 multisampled_texture_type]: #130
[#198 paren_expression]: #77
[#198 primary_expression]: #73
[#198 relational_expression]: #56
[#198 sampled_texture_type]: #129
[#198 sampler_type]: #127
[#198 shift_expression]: #60
[#198 short_circuit_and_expression]: #58
[#198 short_circuit_or_expression]: #57
[#198 singular_expression]: #67
[#198 storage_texture_type]: #131
[#198 texture_and_sampler_types]: #103
[#198 type_specifier_without_ident]: #85
[#198 unary_expression]: #65
[#198 vec_prefix]: #86
[#199 _template_args_start]: #297
[#202 additive_expression]: #64
[#202 array_type_specifier]: #101
[#202 binary_and_expression]: #61
[#202 binary_or_expression]: #62
[#202 binary_xor_expression]: #63
[#202 bitwise_expression]: #59
[#202 bool_literal]: #83
[#202 call_expression]: #75
[#202 callable]: #80
[#202 decimal_float_literal]: #91
[#202 decimal_int_literal]: #89
[#202 depth_texture_type]: #128
[#202 expression]: #296
[#202 float_literal]: #82
[#202 hex_float_literal]: #92
[#202 hex_int_literal]: #90
[#202 ident]: #74
[#202 int_literal]: #81
[#202 literal]: #76
[#202 mat_prefix]: #87
[#202 multiplicative_expression]: #66
[#202 multisampled_texture_type]: #130
[#202 paren_expression]: #77
[#202 primary_expression]: #73
[#202 relational_expression]: #56
[#202 sampled_texture_type]: #129
[#202 sampler_type]: #127
[#202 shift_expression]: #60
[#202 short_circuit_and_expression]: #58
[#202 short_circuit_or_expression]: #57
[#202 singular_expression]: #67
[#202 storage_texture_type]: #131
[#202 texture_and_sampler_types]: #103
[#202 type_specifier_without_ident]: #85
[#202 unary_expression]: #65
[#202 vec_prefix]: #86
[#203 member_ident]: #285
[#203 swizzle_name]: #286
[#209 array_type_specifier]: #101
[#209 bool_literal]: #83
[#209 call_expression]: #75
[#209 callable]: #80
[#209 decimal_float_literal]: #91
[#209 decimal_int_literal]: #89
[#209 depth_texture_type]: #128
[#209 float_literal]: #82
[#209 hex_float_literal]: #92
[#209 hex_int_literal]: #90
[#209 ident]: #74
[#209 int_literal]: #81
[#209 literal]: #76
[#209 mat_prefix]: #87
[#209 multisampled_texture_type]: #130
[#209 paren_expression]: #77
[#209 primary_expression]: #73
[#209 sampled_texture_type]: #129
[#209 sampler_type]: #127
[#209 singular_expression]: #67
[#209 storage_texture_type]: #131
[#209 texture_and_sampler_types]: #103
[#209 type_specifier_without_ident]: #85
[#209 unary_expression]: #284
[#209 vec_prefix]: #86
[#213 array_type_specifier]: #101
[#213 bool_literal]: #83
[#213 call_expression]: #75
[#213 callable]: #80
[#213 decimal_float_literal]: #91
[#213 decimal_int_literal]: #89
[#213 depth_texture_type]: #128
[#213 float_literal]: #82
[#213 hex_float_literal]: #92
[#213 hex_int_literal]: #90
[#213 ident]: #74
[#213 int_literal]: #81
[#213 literal]: #76
[#213 mat_prefix]: #87
[#213 multisampled_texture_type]: #130
[#213 paren_expression]: #77
[#213 primary_expression]: #73
[#213 sampled_texture_type]: #129
[#213 sampler_type]: #127
[#213 singular_expression]: #67
[#213 storage_texture_type]: #131
[#213 texture_and_sampler_types]: #103
[#213 type_specifier_without_ident]: #85
[#213 unary_expression]: #283
[#213 vec_prefix]: #86
[#214 array_type_specifier]: #101
[#214 bool_literal]: #83
[#214 call_expression]: #75
[#214 callable]: #80
[#214 decimal_float_literal]: #91
[#214 decimal_int_literal]: #89
[#214 depth_texture_type]: #128
[#214 float_literal]: #82
[#214 hex_float_literal]: #92
[#214 hex_int_literal]: #90
[#214 ident]: #74
[#214 int_literal]: #81
[#214 literal]: #76
[#214 mat_prefix]: #87
[#214 multisampled_texture_type]: #130
[#214 paren_expression]: #77
[#214 primary_expression]: #73
[#214 sampled_texture_type]: #129
[#214 sampler_type]: #127
[#214 singular_expression]: #67
[#214 storage_texture_type]: #131
[#214 texture_and_sampler_types]: #103
[#214 type_specifier_without_ident]: #85
[#214 unary_expression]: #282
[#214 vec_prefix]: #86
[#217 array_type_specifier]: #101
[#217 bool_literal]: #83
[#217 call_expression]: #75
[#217 callable]: #80
[#217 decimal_float_literal]: #91
[#217 decimal_int_literal]: #89
[#217 depth_texture_type]: #128
[#217 float_literal]: #82
[#217 hex_float_literal]: #92
[#217 hex_int_literal]: #90
[#217 ident]: #74
[#217 int_literal]: #81
[#217 literal]: #76
[#217 mat_prefix]: #87
[#217 multiplicative_expression]: #280
[#217 multisampled_texture_type]: #130
[#217 paren_expression]: #77
[#217 primary_expression]: #73
[#217 sampled_texture_type]: #129
[#217 sampler_type]: #127
[#217 singular_expression]: #67
[#217 storage_texture_type]: #131
[#217 texture_and_sampler_types]: #103
[#217 type_specifier_without_ident]: #85
[#217 unary_expression]: #281
[#217 vec_prefix]: #86
[#220 array_type_specifier]: #101
[#220 bool_literal]: #83
[#220 call_expression]: #75
[#220 callable]: #80
[#220 decimal_float_literal]: #91
[#220 decimal_int_literal]: #89
[#220 depth_texture_type]: #128
[#220 float_literal]: #82
[#220 hex_float_literal]: #92
[#220 hex_int_literal]: #90
[#220 ident]: #74
[#220 int_literal]: #81
[#220 literal]: #76
[#220 mat_prefix]: #87
[#220 multisampled_texture_type]: #130
[#220 paren_expression]: #77
[#220 primary_expression]: #73
[#220 sampled_texture_type]: #129
[#220 sampler_type]: #127
[#220 singular_expression]: #67
[#220 storage_texture_type]: #131
[#220 texture_and_sampler_types]: #103
[#220 type_specifier_without_ident]: #85
[#220 unary_expression]: #279
[#220 vec_prefix]: #86
[#221 array_type_specifier]: #101
[#221 bool_literal]: #83
[#221 call_expression]: #75
[#221 callable]: #80
[#221 decimal_float_literal]: #91
[#221 decimal_int_literal]: #89
[#221 depth_texture_type]: #128
[#221 float_literal]: #82
[#221 hex_float_literal]: #92
[#221 hex_int_literal]: #90
[#221 ident]: #74
[#221 int_literal]: #81
[#221 literal]: #76
[#221 mat_prefix]: #87
[#221 multisampled_texture_type]: #130
[#221 paren_expression]: #77
[#221 primary_expression]: #73
[#221 sampled_texture_type]: #129
[#221 sampler_type]: #127
[#221 singular_expression]: #67
[#221 storage_texture_type]: #131
[#221 texture_and_sampler_types]: #103
[#221 type_specifier_without_ident]: #85
[#221 unary_expression]: #278
[#221 vec_prefix]: #86
[#222 array_type_specifier]: #101
[#222 bool_literal]: #83
[#222 call_expression]: #75
[#222 callable]: #80
[#222 decimal_float_literal]: #91
[#222 decimal_int_literal]: #89
[#222 depth_texture_type]: #128
[#222 float_literal]: #82
[#222 hex_float_literal]: #92
[#222 hex_int_literal]: #90
[#222 ident]: #74
[#222 int_literal]: #81
[#222 literal]: #76
[#222 mat_prefix]: #87
[#222 multisampled_texture_type]: #130
[#222 paren_expression]: #77
[#222 primary_expression]: #73
[#222 sampled_texture_type]: #129
[#222 sampler_type]: #127
[#222 singular_expression]: #67
[#222 storage_texture_type]: #131
[#222 texture_and_sampler_types]: #103
[#222 type_specifier_without_ident]: #85
[#222 unary_expression]: #277
[#222 vec_prefix]: #86
[#223 additive_expression]: #64
[#223 array_type_specifier]: #101
[#223 bool_literal]: #83
[#223 call_expression]: #75
[#223 callable]: #80
[#223 decimal_float_literal]: #91
[#223 decimal_int_literal]: #89
[#223 depth_texture_type]: #128
[#223 float_literal]: #82
[#223 hex_float_literal]: #92
[#223 hex_int_literal]: #90
[#223 ident]: #74
[#223 int_literal]: #81
[#223 literal]: #76
[#223 mat_prefix]: #87
[#223 multiplicative_expression]: #66
[#223 multisampled_texture_type]: #130
[#223 paren_expression]: #77
[#223 primary_expression]: #73
[#223 sampled_texture_type]: #129
[#223 sampler_type]: #127
[#223 shift_expression]: #276
[#223 singular_expression]: #67
[#223 storage_texture_type]: #131
[#223 texture_and_sampler_types]: #103
[#223 type_specifier_without_ident]: #85
[#223 unary_expression]: #269
[#223 vec_prefix]: #86
[#224 additive_expression]: #64
[#224 array_type_specifier]: #101
[#224 bool_literal]: #83
[#224 call_expression]: #75
[#224 callable]: #80
[#224 decimal_float_literal]: #91
[#224 decimal_int_literal]: #89
[#224 depth_texture_type]: #128
[#224 float_literal]: #82
[#224 hex_float_literal]: #92
[#224 hex_int_literal]: #90
[#224 ident]: #74
[#224 int_literal]: #81
[#224 literal]: #76
[#224 mat_prefix]: #87
[#224 multiplicative_expression]: #66
[#224 multisampled_texture_type]: #130
[#224 paren_expression]: #77
[#224 primary_expression]: #73
[#224 sampled_texture_type]: #129
[#224 sampler_type]: #127
[#224 shift_expression]: #275
[#224 singular_expression]: #67
[#224 storage_texture_type]: #131
[#224 texture_and_sampler_types]: #103
[#224 type_specifier_without_ident]: #85
[#224 unary_expression]: #269
[#224 vec_prefix]: #86
[#225 additive_expression]: #64
[#225 array_type_specifier]: #101
[#225 bool_literal]: #83
[#225 call_expression]: #75
[#225 callable]: #80
[#225 decimal_float_literal]: #91
[#225 decimal_int_literal]: #89
[#225 depth_texture_type]: #128
[#225 float_literal]: #82
[#225 hex_float_literal]: #92
[#225 hex_int_literal]: #90
[#225 ident]: #74
[#225 int_literal]: #81
[#225 literal]: #76
[#225 mat_prefix]: #87
[#225 multiplicative_expression]: #66
[#225 multisampled_texture_type]: #130
[#225 paren_expression]: #77
[#225 primary_expression]: #73
[#225 sampled_texture_type]: #129
[#225 sampler_type]: #127
[#225 shift_expression]: #274
[#225 singular_expression]: #67
[#225 storage_texture_type]: #131
[#225 texture_and_sampler_types]: #103
[#225 type_specifier_without_ident]: #85
[#225 unary_expression]: #269
[#225 vec_prefix]: #86
[#226 additive_expression]: #64
[#226 array_type_specifier]: #101
[#226 bool_literal]: #83
[#226 call_expression]: #75
[#226 callable]: #80
[#226 decimal_float_literal]: #91
[#226 decimal_int_literal]: #89
[#226 depth_texture_type]: #128
[#226 float_literal]: #82
[#226 hex_float_literal]: #92
[#226 hex_int_literal]: #90
[#226 ident]: #74
[#226 int_literal]: #81
[#226 literal]: #76
[#226 mat_prefix]: #87
[#226 multiplicative_expression]: #66
[#226 multisampled_texture_type]: #130
[#226 paren_expression]: #77
[#226 primary_expression]: #73
[#226 sampled_texture_type]: #129
[#226 sampler_type]: #127
[#226 shift_expression]: #273
[#226 singular_expression]: #67
[#226 storage_texture_type]: #131
[#226 texture_and_sampler_types]: #103
[#226 type_specifier_without_ident]: #85
[#226 unary_expression]: #269
[#226 vec_prefix]: #86
[#227 additive_expression]: #64
[#227 array_type_specifier]: #101
[#227 bool_literal]: #83
[#227 call_expression]: #75
[#227 callable]: #80
[#227 decimal_float_literal]: #91
[#227 decimal_int_literal]: #89
[#227 depth_texture_type]: #128
[#227 float_literal]: #82
[#227 hex_float_literal]: #92
[#227 hex_int_literal]: #90
[#227 ident]: #74
[#227 int_literal]: #81
[#227 literal]: #76
[#227 mat_prefix]: #87
[#227 multiplicative_expression]: #66
[#227 multisampled_texture_type]: #130
[#227 paren_expression]: #77
[#227 primary_expression]: #73
[#227 sampled_texture_type]: #129
[#227 sampler_type]: #127
[#227 shift_expression]: #272
[#227 singular_expression]: #67
[#227 storage_texture_type]: #131
[#227 texture_and_sampler_types]: #103
[#227 type_specifier_without_ident]: #85
[#227 unary_expression]: #269
[#227 vec_prefix]: #86
[#228 additive_expression]: #64
[#228 array_type_specifier]: #101
[#228 bool_literal]: #83
[#228 call_expression]: #75
[#228 callable]: #80
[#228 decimal_float_literal]: #91
[#228 decimal_int_literal]: #89
[#228 depth_texture_type]: #128
[#228 float_literal]: #82
[#228 hex_float_literal]: #92
[#228 hex_int_literal]: #90
[#228 ident]: #74
[#228 int_literal]: #81
[#228 literal]: #76
[#228 mat_prefix]: #87
[#228 multiplicative_expression]: #66
[#228 multisampled_texture_type]: #130
[#228 paren_expression]: #77
[#228 primary_expression]: #73
[#228 sampled_texture_type]: #129
[#228 sampler_type]: #127
[#228 shift_expression]: #271
[#228 singular_expression]: #67
[#228 storage_texture_type]: #131
[#228 texture_and_sampler_types]: #103
[#228 type_specifier_without_ident]: #85
[#228 unary_expression]: #269
[#228 vec_prefix]: #86
[#233 additive_expression]: #64
[#233 array_type_specifier]: #101
[#233 bool_literal]: #83
[#233 call_expression]: #75
[#233 callable]: #80
[#233 decimal_float_literal]: #91
[#233 decimal_int_literal]: #89
[#233 depth_texture_type]: #128
[#233 float_literal]: #82
[#233 hex_float_literal]: #92
[#233 hex_int_literal]: #90
[#233 ident]: #74
[#233 int_literal]: #81
[#233 literal]: #76
[#233 mat_prefix]: #87
[#233 multiplicative_expression]: #66
[#233 multisampled_texture_type]: #130
[#233 paren_expression]: #77
[#233 primary_expression]: #73
[#233 relational_expression]: #270
[#233 sampled_texture_type]: #129
[#233 sampler_type]: #127
[#233 shift_expression]: #60
[#233 singular_expression]: #67
[#233 storage_texture_type]: #131
[#233 texture_and_sampler_types]: #103
[#233 type_specifier_without_ident]: #85
[#233 unary_expression]: #269
[#233 vec_prefix]: #86
[#234 additive_expression]: #64
[#234 array_type_specifier]: #101
[#234 bool_literal]: #83
[#234 call_expression]: #75
[#234 callable]: #80
[#234 decimal_float_literal]: #91
[#234 decimal_int_literal]: #89
[#234 depth_texture_type]: #128
[#234 float_literal]: #82
[#234 hex_float_literal]: #92
[#234 hex_int_literal]: #90
[#234 ident]: #74
[#234 int_literal]: #81
[#234 literal]: #76
[#234 mat_prefix]: #87
[#234 multiplicative_expression]: #66
[#234 multisampled_texture_type]: #130
[#234 paren_expression]: #77
[#234 primary_expression]: #73
[#234 relational_expression]: #268
[#234 sampled_texture_type]: #129
[#234 sampler_type]: #127
[#234 shift_expression]: #60
[#234 singular_expression]: #67
[#234 storage_texture_type]: #131
[#234 texture_and_sampler_types]: #103
[#234 type_specifier_without_ident]: #85
[#234 unary_expression]: #269
[#234 vec_prefix]: #86
[#235 additive_expression]: #64
[#235 array_type_specifier]: #101
[#235 binary_and_expression]: #61
[#235 binary_or_expression]: #62
[#235 binary_xor_expression]: #63
[#235 bitwise_expression]: #59
[#235 bool_literal]: #83
[#235 call_expression]: #75
[#235 callable]: #80
[#235 decimal_float_literal]: #91
[#235 decimal_int_literal]: #89
[#235 depth_texture_type]: #128
[#235 expression]: #267
[#235 float_literal]: #82
[#235 hex_float_literal]: #92
[#235 hex_int_literal]: #90
[#235 ident]: #74
[#235 int_literal]: #81
[#235 literal]: #76
[#235 mat_prefix]: #87
[#235 multiplicative_expression]: #66
[#235 multisampled_texture_type]: #130
[#235 paren_expression]: #77
[#235 primary_expression]: #73
[#235 relational_expression]: #56
[#235 sampled_texture_type]: #129
[#235 sampler_type]: #127
[#235 shift_expression]: #60
[#235 short_circuit_and_expression]: #58
[#235 short_circuit_or_expression]: #57
[#235 singular_expression]: #67
[#235 storage_texture_type]: #131
[#235 texture_and_sampler_types]: #103
[#235 type_specifier_without_ident]: #85
[#235 unary_expression]: #65
[#235 vec_prefix]: #86
[#236 additive_expression]: #64
[#236 array_type_specifier]: #101
[#236 binary_and_expression]: #61
[#236 binary_or_expression]: #62
[#236 binary_xor_expression]: #63
[#236 bitwise_expression]: #59
[#236 bool_literal]: #83
[#236 call_expression]: #75
[#236 callable]: #80
[#236 decimal_float_literal]: #91
[#236 decimal_int_literal]: #89
[#236 depth_texture_type]: #128
[#236 expression]: #266
[#236 float_literal]: #82
[#236 hex_float_literal]: #92
[#236 hex_int_literal]: #90
[#236 ident]: #74
[#236 int_literal]: #81
[#236 literal]: #76
[#236 mat_prefix]: #87
[#236 multiplicative_expression]: #66
[#236 multisampled_texture_type]: #130
[#236 paren_expression]: #77
[#236 primary_expression]: #73
[#236 relational_expression]: #56
[#236 sampled_texture_type]: #129
[#236 sampler_type]: #127
[#236 shift_expression]: #60
[#236 short_circuit_and_expression]: #58
[#236 short_circuit_or_expression]: #57
[#236 singular_expression]: #67
[#236 storage_texture_type]: #131
[#236 texture_and_sampler_types]: #103
[#236 type_specifier_without_ident]: #85
[#236 unary_expression]: #65
[#236 vec_prefix]: #86
[#237 additive_expression]: #64
[#237 array_type_specifier]: #101
[#237 binary_and_expression]: #61
[#237 binary_or_expression]: #62
[#237 binary_xor_expression]: #63
[#237 bitwise_expression]: #59
[#237 bool_literal]: #83
[#237 call_expression]: #75
[#237 callable]: #80
[#237 decimal_float_literal]: #91
[#237 decimal_int_literal]: #89
[#237 depth_texture_type]: #128
[#237 expression]: #265
[#237 float_literal]: #82
[#237 hex_float_literal]: #92
[#237 hex_int_literal]: #90
[#237 ident]: #74
[#237 int_literal]: #81
[#237 literal]: #76
[#237 mat_prefix]: #87
[#237 multiplicative_expression]: #66
[#237 multisampled_texture_type]: #130
[#237 paren_expression]: #77
[#237 primary_expression]: #73
[#237 relational_expression]: #56
[#237 sampled_texture_type]: #129
[#237 sampler_type]: #127
[#237 shift_expression]: #60
[#237 short_circuit_and_expression]: #58
[#237 short_circuit_or_expression]: #57
[#237 singular_expression]: #67
[#237 storage_texture_type]: #131
[#237 texture_and_sampler_types]: #103
[#237 type_specifier_without_ident]: #85
[#237 unary_expression]: #65
[#237 vec_prefix]: #86
[#238 interpolation_type_name]: #261
[#239 additive_expression]: #64
[#239 array_type_specifier]: #101
[#239 binary_and_expression]: #61
[#239 binary_or_expression]: #62
[#239 binary_xor_expression]: #63
[#239 bitwise_expression]: #59
[#239 bool_literal]: #83
[#239 call_expression]: #75
[#239 callable]: #80
[#239 decimal_float_literal]: #91
[#239 decimal_int_literal]: #89
[#239 depth_texture_type]: #128
[#239 expression]: #260
[#239 float_literal]: #82
[#239 hex_float_literal]: #92
[#239 hex_int_literal]: #90
[#239 ident]: #74
[#239 int_literal]: #81
[#239 literal]: #76
[#239 mat_prefix]: #87
[#239 multiplicative_expression]: #66
[#239 multisampled_texture_type]: #130
[#239 paren_expression]: #77
[#239 primary_expression]: #73
[#239 relational_expression]: #56
[#239 sampled_texture_type]: #129
[#239 sampler_type]: #127
[#239 shift_expression]: #60
[#239 short_circuit_and_expression]: #58
[#239 short_circuit_or_expression]: #57
[#239 singular_expression]: #67
[#239 storage_texture_type]: #131
[#239 texture_and_sampler_types]: #103
[#239 type_specifier_without_ident]: #85
[#239 unary_expression]: #65
[#239 vec_prefix]: #86
[#240 additive_expression]: #64
[#240 array_type_specifier]: #101
[#240 binary_and_expression]: #61
[#240 binary_or_expression]: #62
[#240 binary_xor_expression]: #63
[#240 bitwise_expression]: #59
[#240 bool_literal]: #83
[#240 call_expression]: #75
[#240 callable]: #80
[#240 decimal_float_literal]: #91
[#240 decimal_int_literal]: #89
[#240 depth_texture_type]: #128
[#240 expression]: #259
[#240 float_literal]: #82
[#240 hex_float_literal]: #92
[#240 hex_int_literal]: #90
[#240 ident]: #74
[#240 int_literal]: #81
[#240 literal]: #76
[#240 mat_prefix]: #87
[#240 multiplicative_expression]: #66
[#240 multisampled_texture_type]: #130
[#240 paren_expression]: #77
[#240 primary_expression]: #73
[#240 relational_expression]: #56
[#240 sampled_texture_type]: #129
[#240 sampler_type]: #127
[#240 shift_expression]: #60
[#240 short_circuit_and_expression]: #58
[#240 short_circuit_or_expression]: #57
[#240 singular_expression]: #67
[#240 storage_texture_type]: #131
[#240 texture_and_sampler_types]: #103
[#240 type_specifier_without_ident]: #85
[#240 unary_expression]: #65
[#240 vec_prefix]: #86
[#241 builtin_value_name]: #246
[#242 additive_expression]: #64
[#242 array_type_specifier]: #101
[#242 binary_and_expression]: #61
[#242 binary_or_expression]: #62
[#242 binary_xor_expression]: #63
[#242 bitwise_expression]: #59
[#242 bool_literal]: #83
[#242 call_expression]: #75
[#242 callable]: #80
[#242 decimal_float_literal]: #91
[#242 decimal_int_literal]: #89
[#242 depth_texture_type]: #128
[#242 expression]: #245
[#242 float_literal]: #82
[#242 hex_float_literal]: #92
[#242 hex_int_literal]: #90
[#242 ident]: #74
[#242 int_literal]: #81
[#242 literal]: #76
[#242 mat_prefix]: #87
[#242 multiplicative_expression]: #66
[#242 multisampled_texture_type]: #130
[#242 paren_expression]: #77
[#242 primary_expression]: #73
[#242 relational_expression]: #56
[#242 sampled_texture_type]: #129
[#242 sampler_type]: #127
[#242 shift_expression]: #60
[#242 short_circuit_and_expression]: #58
[#242 short_circuit_or_expression]: #57
[#242 singular_expression]: #67
[#242 storage_texture_type]: #131
[#242 texture_and_sampler_types]: #103
[#242 type_specifier_without_ident]: #85
[#242 unary_expression]: #65
[#242 vec_prefix]: #86
[#243 additive_expression]: #64
[#243 array_type_specifier]: #101
[#243 binary_and_expression]: #61
[#243 binary_or_expression]: #62
[#243 binary_xor_expression]: #63
[#243 bitwise_expression]: #59
[#243 bool_literal]: #83
[#243 call_expression]: #75
[#243 callable]: #80
[#243 decimal_float_literal]: #91
[#243 decimal_int_literal]: #89
[#243 depth_texture_type]: #128
[#243 expression]: #244
[#243 float_literal]: #82
[#243 hex_float_literal]: #92
[#243 hex_int_literal]: #90
[#243 ident]: #74
[#243 int_literal]: #81
[#243 literal]: #76
[#243 mat_prefix]: #87
[#243 multiplicative_expression]: #66
[#243 multisampled_texture_type]: #130
[#243 paren_expression]: #77
[#243 primary_expression]: #73
[#243 relational_expression]: #56
[#243 sampled_texture_type]: #129
[#243 sampler_type]: #127
[#243 shift_expression]: #60
[#243 short_circuit_and_expression]: #58
[#243 short_circuit_or_expression]: #57
[#243 singular_expression]: #67
[#243 storage_texture_type]: #131
[#243 texture_and_sampler_types]: #103
[#243 type_specifier_without_ident]: #85
[#243 unary_expression]: #65
[#243 vec_prefix]: #86
[#244 attrib_end]: #491
[#244 attrib_end/0.0]: #481
[#245 attrib_end]: #490
[#245 attrib_end/0.0]: #481
[#246 attrib_end]: #489
[#246 attrib_end/0.0]: #481
[#259 attrib_end]: #488
[#259 attrib_end/0.0]: #481
[#260 attrib_end]: #487
[#260 attrib_end/0.0]: #481
[#261 attrib_end]: #485
[#261 attrib_end/0.0]: #481
[#265 attrib_end]: #484
[#265 attrib_end/0.0]: #481
[#266 attrib_end]: #482
[#266 attrib_end/0.0]: #481
[#267 attrib_end]: #479
[#267 attrib_end/0.0]: #481
[#269 _shift_left]: #213
[#269 _shift_right]: #214
[#280 multiplicative_operator]: #209
[#285 component_or_swizzle_specifier]: #478
[#285 component_or_swizzle_specifier/1.2]: #477
[#286 component_or_swizzle_specifier]: #476
[#286 component_or_swizzle_specifier/2.2]: #475
[#297 array_type_specifier]: #101
[#297 depth_texture_type]: #128
[#297 ident]: #358
[#297 mat_prefix]: #361
[#297 multisampled_texture_type]: #130
[#297 sampled_texture_type]: #129
[#297 sampler_type]: #127
[#297 storage_texture_type]: #131
[#297 texture_and_sampler_types]: #103
[#297 type_specifier]: #473
[#297 type_specifier_without_ident]: #359
[#297 vec_prefix]: #360
[#301 expression_comma_list/0.1]: #468
[#301 expression_comma_list/0.1/0]: #469
[#301 expression_comma_list/0.1/0/0.0]: #470
[#303 array_type_specifier]: #101
[#303 depth_texture_type]: #128
[#303 ident]: #358
[#303 mat_prefix]: #361
[#303 multisampled_texture_type]: #130
[#303 sampled_texture_type]: #129
[#303 sampler_type]: #127
[#303 storage_texture_type]: #131
[#303 texture_and_sampler_types]: #103
[#303 type_specifier]: #467
[#303 type_specifier_without_ident]: #359
[#303 vec_prefix]: #360
[#304 array_type_specifier]: #101
[#304 depth_texture_type]: #128
[#304 ident]: #358
[#304 mat_prefix]: #361
[#304 multisampled_texture_type]: #130
[#304 sampled_texture_type]: #129
[#304 sampler_type]: #127
[#304 storage_texture_type]: #131
[#304 texture_and_sampler_types]: #103
[#304 type_specifier]: #466
[#304 type_specifier_without_ident]: #359
[#304 vec_prefix]: #360
[#305 array_type_specifier]: #101
[#305 depth_texture_type]: #128
[#305 ident]: #358
[#305 mat_prefix]: #361
[#305 multisampled_texture_type]: #130
[#305 sampled_texture_type]: #129
[#305 sampler_type]: #127
[#305 storage_texture_type]: #131
[#305 texture_and_sampler_types]: #103
[#305 type_specifier]: #465
[#305 type_specifier_without_ident]: #359
[#305 vec_prefix]: #360
[#306 address_space]: #464
[#307 array_type_specifier]: #101
[#307 depth_texture_type]: #128
[#307 ident]: #358
[#307 mat_prefix]: #361
[#307 multisampled_texture_type]: #130
[#307 sampled_texture_type]: #129
[#307 sampler_type]: #127
[#307 storage_texture_type]: #131
[#307 texture_and_sampler_types]: #103
[#307 type_specifier]: #463
[#307 type_specifier_without_ident]: #359
[#307 vec_prefix]: #360
[#308 array_type_specifier]: #101
[#308 depth_texture_type]: #128
[#308 ident]: #358
[#308 mat_prefix]: #361
[#308 multisampled_texture_type]: #130
[#308 sampled_texture_type]: #129
[#308 sampler_type]: #127
[#308 storage_texture_type]: #131
[#308 texture_and_sampler_types]: #103
[#308 type_specifier]: #462
[#308 type_specifier_without_ident]: #359
[#308 vec_prefix]: #360
[#309 array_type_specifier]: #101
[#309 depth_texture_type]: #128
[#309 ident]: #358
[#309 mat_prefix]: #361
[#309 multisampled_texture_type]: #130
[#309 sampled_texture_type]: #129
[#309 sampler_type]: #127
[#309 storage_texture_type]: #131
[#309 texture_and_sampler_types]: #103
[#309 type_specifier]: #461
[#309 type_specifier_without_ident]: #359
[#309 vec_prefix]: #360
[#310 texel_format]: #443
[#313 array_type_specifier]: #101
[#313 assignment_statement]: #341
[#313 break_statement]: #323
[#313 callable]: #335
[#313 compound_statement]: #327
[#313 compound_statement/0.1/0]: #441
[#313 const_assert_statement]: #328
[#313 continue_statement]: #324
[#313 core_lhs_expression]: #348
[#313 decrement_statement]: #343
[#313 depth_texture_type]: #128
[#313 for_statement]: #319
[#313 func_call_statement]: #321
[#313 ident]: #345
[#313 if_clause]: #330
[#313 if_statement]: #316
[#313 increment_statement]: #342
[#313 lhs_expression]: #346
[#313 loop_statement]: #318
[#313 mat_prefix]: #87
[#313 multisampled_texture_type]: #130
[#313 return_statement]: #315
[#313 sampled_texture_type]: #129
[#313 sampler_type]: #127
[#313 statement]: #313
[#313 storage_texture_type]: #131
[#313 switch_statement]: #317
[#313 texture_and_sampler_types]: #103
[#313 type_specifier_without_ident]: #85
[#313 variable_decl]: #336
[#313 variable_statement]: #322
[#313 variable_updating_statement]: #326
[#313 vec_prefix]: #86
[#313 while_statement]: #320
[#329 additive_expression]: #64
[#329 array_type_specifier]: #101
[#329 binary_and_expression]: #61
[#329 binary_or_expression]: #62
[#329 binary_xor_expression]: #63
[#329 bitwise_expression]: #59
[#329 bool_literal]: #83
[#329 call_expression]: #75
[#329 callable]: #80
[#329 decimal_float_literal]: #91
[#329 decimal_int_literal]: #89
[#329 depth_texture_type]: #128
[#329 expression]: #432
[#329 float_literal]: #82
[#329 hex_float_literal]: #92
[#329 hex_int_literal]: #90
[#329 ident]: #74
[#329 int_literal]: #81
[#329 literal]: #76
[#329 mat_prefix]: #87
[#329 multiplicative_expression]: #66
[#329 multisampled_texture_type]: #130
[#329 paren_expression]: #77
[#329 primary_expression]: #73
[#329 relational_expression]: #56
[#329 return_statement/0.1]: #431
[#329 sampled_texture_type]: #129
[#329 sampler_type]: #127
[#329 shift_expression]: #60
[#329 short_circuit_and_expression]: #58
[#329 short_circuit_or_expression]: #57
[#329 singular_expression]: #67
[#329 storage_texture_type]: #131
[#329 texture_and_sampler_types]: #103
[#329 type_specifier_without_ident]: #85
[#329 unary_expression]: #65
[#329 vec_prefix]: #86
[#330 else_if_clause]: #429
[#330 if_statement/0.1]: #427
[#330 if_statement/0.1/0]: #428
[#331 additive_expression]: #64
[#331 array_type_specifier]: #101
[#331 binary_and_expression]: #61
[#331 binary_or_expression]: #62
[#331 binary_xor_expression]: #63
[#331 bitwise_expression]: #59
[#331 bool_literal]: #83
[#331 call_expression]: #75
[#331 callable]: #80
[#331 decimal_float_literal]: #91
[#331 decimal_int_literal]: #89
[#331 depth_texture_type]: #128
[#331 expression]: #426
[#331 float_literal]: #82
[#331 hex_float_literal]: #92
[#331 hex_int_literal]: #90
[#331 ident]: #74
[#331 int_literal]: #81
[#331 literal]: #76
[#331 mat_prefix]: #87
[#331 multiplicative_expression]: #66
[#331 multisampled_texture_type]: #130
[#331 paren_expression]: #77
[#331 primary_expression]: #73
[#331 relational_expression]: #56
[#331 sampled_texture_type]: #129
[#331 sampler_type]: #127
[#331 shift_expression]: #60
[#331 short_circuit_and_expression]: #58
[#331 short_circuit_or_expression]: #57
[#331 singular_expression]: #67
[#331 storage_texture_type]: #131
[#331 texture_and_sampler_types]: #103
[#331 type_specifier_without_ident]: #85
[#331 unary_expression]: #65
[#331 vec_prefix]: #86
[#334 additive_expression]: #64
[#334 array_type_specifier]: #101
[#334 binary_and_expression]: #61
[#334 binary_or_expression]: #62
[#334 binary_xor_expression]: #63
[#334 bitwise_expression]: #59
[#334 bool_literal]: #83
[#334 call_expression]: #75
[#334 callable]: #80
[#334 decimal_float_literal]: #91
[#334 decimal_int_literal]: #89
[#334 depth_texture_type]: #128
[#334 expression]: #423
[#334 float_literal]: #82
[#334 hex_float_literal]: #92
[#334 hex_int_literal]: #90
[#334 ident]: #74
[#334 int_literal]: #81
[#334 literal]: #76
[#334 mat_prefix]: #87
[#334 multiplicative_expression]: #66
[#334 multisampled_texture_type]: #130
[#334 paren_expression]: #77
[#334 primary_expression]: #73
[#334 relational_expression]: #56
[#334 sampled_texture_type]: #129
[#334 sampler_type]: #127
[#334 shift_expression]: #60
[#334 short_circuit_and_expression]: #58
[#334 short_circuit_or_expression]: #57
[#334 singular_expression]: #67
[#334 storage_texture_type]: #131
[#334 texture_and_sampler_types]: #103
[#334 type_specifier_without_ident]: #85
[#334 unary_expression]: #65
[#334 vec_prefix]: #86
[#335 argument_expression_list]: #422
[#337 ident]: #156
[#337 optionally_typed_ident]: #420
[#338 ident]: #156
[#338 optionally_typed_ident]: #419
[#344 additive_expression]: #64
[#344 array_type_specifier]: #101
[#344 binary_and_expression]: #61
[#344 binary_or_expression]: #62
[#344 binary_xor_expression]: #63
[#344 bitwise_expression]: #59
[#344 bool_literal]: #83
[#344 call_expression]: #75
[#344 callable]: #80
[#344 decimal_float_literal]: #91
[#344 decimal_int_literal]: #89
[#344 depth_texture_type]: #128
[#344 expression]: #418
[#344 float_literal]: #82
[#344 hex_float_literal]: #92
[#344 hex_int_literal]: #90
[#344 ident]: #74
[#344 int_literal]: #81
[#344 literal]: #76
[#344 mat_prefix]: #87
[#344 multiplicative_expression]: #66
[#344 multisampled_texture_type]: #130
[#344 paren_expression]: #77
[#344 primary_expression]: #73
[#344 relational_expression]: #56
[#344 sampled_texture_type]: #129
[#344 sampler_type]: #127
[#344 shift_expression]: #60
[#344 short_circuit_and_expression]: #58
[#344 short_circuit_or_expression]: #57
[#344 singular_expression]: #67
[#344 storage_texture_type]: #131
[#344 texture_and_sampler_types]: #103
[#344 type_specifier_without_ident]: #85
[#344 unary_expression]: #65
[#344 vec_prefix]: #86
[#346 _shift_left_assign]: #415
[#346 _shift_right_assign]: #414
[#346 assignment_statement/0.1]: #401
[#346 compound_assignment_operator]: #405
[#348 component_or_swizzle_specifier]: #399
[#348 lhs_expression/0.1]: #398
[#349 core_lhs_expression]: #348
[#349 ident]: #395
[#349 lhs_expression]: #397
[#350 core_lhs_expression]: #348
[#350 ident]: #395
[#350 lhs_expression]: #396
[#351 core_lhs_expression]: #348
[#351 ident]: #395
[#351 lhs_expression]: #394
[#352 attribute]: #393
[#352 function_header/0.3]: #388
[#352 param]: #390
[#352 param/0.0]: #391
[#352 param/0.0/0]: #392
[#352 param_list]: #389
[#353 struct_body_decl/0.2]: #384
[#353 struct_body_decl/0.2/0]: #385
[#353 struct_body_decl/0.2/0/0.0]: #386
[#354 member_ident]: #383
[#356 attribute]: #356
[#356 struct_member/0.0/0]: #382
[#360 _disambiguate_template]: #381
[#361 _disambiguate_template]: #380
[#362 _disambiguate_template]: #379
[#364 additive_expression]: #64
[#364 array_type_specifier]: #101
[#364 binary_and_expression]: #61
[#364 binary_or_expression]: #62
[#364 binary_xor_expression]: #63
[#364 bitwise_expression]: #59
[#364 bool_literal]: #83
[#364 call_expression]: #75
[#364 callable]: #80
[#364 decimal_float_literal]: #91
[#364 decimal_int_literal]: #89
[#364 depth_texture_type]: #128
[#364 expression]: #378
[#364 float_literal]: #82
[#364 hex_float_literal]: #92
[#364 hex_int_literal]: #90
[#364 ident]: #74
[#364 int_literal]: #81
[#364 literal]: #76
[#364 mat_prefix]: #87
[#364 multiplicative_expression]: #66
[#364 multisampled_texture_type]: #130
[#364 paren_expression]: #77
[#364 primary_expression]: #73
[#364 relational_expression]: #56
[#364 sampled_texture_type]: #129
[#364 sampler_type]: #127
[#364 shift_expression]: #60
[#364 short_circuit_and_expression]: #58
[#364 short_circuit_or_expression]: #57
[#364 singular_expression]: #67
[#364 storage_texture_type]: #131
[#364 texture_and_sampler_types]: #103
[#364 type_specifier_without_ident]: #85
[#364 unary_expression]: #65
[#364 vec_prefix]: #86
[#368 ident]: #156
[#368 optionally_typed_ident]: #377
[#370 address_space]: #371
[#371 variable_qualifier/0.2]: #550
[#379 _template_args_start]: #305
[#380 _template_args_start]: #304
[#381 _template_args_start]: #303
[#384 struct_body_decl/0.3]: #547
[#386 struct_body_decl/0.2/0]: #546
[#386 struct_body_decl/0.2/0/0.0]: #386
[#387 attribute]: #356
[#387 struct_member]: #545
[#387 struct_member/0.0]: #354
[#387 struct_member/0.0/0]: #355
[#390 param_list/0.1]: #540
[#390 param_list/0.1/0]: #541
[#390 param_list/0.1/0/0.0]: #542
[#391 ident]: #539
[#393 attribute]: #393
[#393 param/0.0/0]: #538
[#400 additive_expression]: #64
[#400 array_type_specifier]: #101
[#400 binary_and_expression]: #61
[#400 binary_or_expression]: #62
[#400 binary_xor_expression]: #63
[#400 bitwise_expression]: #59
[#400 bool_literal]: #83
[#400 call_expression]: #75
[#400 callable]: #80
[#400 decimal_float_literal]: #91
[#400 decimal_int_literal]: #89
[#400 depth_texture_type]: #128
[#400 expression]: #536
[#400 float_literal]: #82
[#400 hex_float_literal]: #92
[#400 hex_int_literal]: #90
[#400 ident]: #74
[#400 int_literal]: #81
[#400 literal]: #76
[#400 mat_prefix]: #87
[#400 multiplicative_expression]: #66
[#400 multisampled_texture_type]: #130
[#400 paren_expression]: #77
[#400 primary_expression]: #73
[#400 relational_expression]: #56
[#400 sampled_texture_type]: #129
[#400 sampler_type]: #127
[#400 shift_expression]: #60
[#400 short_circuit_and_expression]: #58
[#400 short_circuit_or_expression]: #57
[#400 singular_expression]: #67
[#400 storage_texture_type]: #131
[#400 texture_and_sampler_types]: #103
[#400 type_specifier_without_ident]: #85
[#400 unary_expression]: #65
[#400 vec_prefix]: #86
[#401 additive_expression]: #64
[#401 array_type_specifier]: #101
[#401 binary_and_expression]: #61
[#401 binary_or_expression]: #62
[#401 binary_xor_expression]: #63
[#401 bitwise_expression]: #59
[#401 bool_literal]: #83
[#401 call_expression]: #75
[#401 callable]: #80
[#401 decimal_float_literal]: #91
[#401 decimal_int_literal]: #89
[#401 depth_texture_type]: #128
[#401 expression]: #535
[#401 float_literal]: #82
[#401 hex_float_literal]: #92
[#401 hex_int_literal]: #90
[#401 ident]: #74
[#401 int_literal]: #81
[#401 literal]: #76
[#401 mat_prefix]: #87
[#401 multiplicative_expression]: #66
[#401 multisampled_texture_type]: #130
[#401 paren_expression]: #77
[#401 primary_expression]: #73
[#401 relational_expression]: #56
[#401 sampled_texture_type]: #129
[#401 sampler_type]: #127
[#401 shift_expression]: #60
[#401 short_circuit_and_expression]: #58
[#401 short_circuit_or_expression]: #57
[#401 singular_expression]: #67
[#401 storage_texture_type]: #131
[#401 texture_and_sampler_types]: #103
[#401 type_specifier_without_ident]: #85
[#401 unary_expression]: #65
[#401 vec_prefix]: #86
[#418 compound_statement]: #534
[#421 additive_expression]: #64
[#421 array_type_specifier]: #101
[#421 binary_and_expression]: #61
[#421 binary_or_expression]: #62
[#421 binary_xor_expression]: #63
[#421 bitwise_expression]: #59
[#421 bool_literal]: #83
[#421 call_expression]: #75
[#421 callable]: #80
[#421 decimal_float_literal]: #91
[#421 decimal_int_literal]: #89
[#421 depth_texture_type]: #128
[#421 expression]: #531
[#421 float_literal]: #82
[#421 hex_float_literal]: #92
[#421 hex_int_literal]: #90
[#421 ident]: #74
[#421 int_literal]: #81
[#421 literal]: #76
[#421 mat_prefix]: #87
[#421 multiplicative_expression]: #66
[#421 multisampled_texture_type]: #130
[#421 paren_expression]: #77
[#421 primary_expression]: #73
[#421 relational_expression]: #56
[#421 sampled_texture_type]: #129
[#421 sampler_type]: #127
[#421 shift_expression]: #60
[#421 short_circuit_and_expression]: #58
[#421 short_circuit_or_expression]: #57
[#421 singular_expression]: #67
[#421 storage_texture_type]: #131
[#421 texture_and_sampler_types]: #103
[#421 type_specifier_without_ident]: #85
[#421 unary_expression]: #65
[#421 vec_prefix]: #86
[#423 compound_statement]: #530
[#424 array_type_specifier]: #101
[#424 assignment_statement]: #341
[#424 callable]: #335
[#424 core_lhs_expression]: #348
[#424 decrement_statement]: #343
[#424 depth_texture_type]: #128
[#424 for_header]: #524
[#424 for_header/0.0]: #525
[#424 for_init]: #526
[#424 func_call_statement]: #529
[#424 ident]: #345
[#424 increment_statement]: #342
[#424 lhs_expression]: #346
[#424 mat_prefix]: #87
[#424 multisampled_texture_type]: #130
[#424 sampled_texture_type]: #129
[#424 sampler_type]: #127
[#424 storage_texture_type]: #131
[#424 texture_and_sampler_types]: #103
[#424 type_specifier_without_ident]: #85
[#424 variable_decl]: #336
[#424 variable_statement]: #527
[#424 variable_updating_statement]: #528
[#424 vec_prefix]: #86
[#425 array_type_specifier]: #101
[#425 assignment_statement]: #341
[#425 break_statement]: #323
[#425 callable]: #335
[#425 compound_statement]: #327
[#425 const_assert_statement]: #328
[#425 continue_statement]: #324
[#425 core_lhs_expression]: #348
[#425 decrement_statement]: #343
[#425 depth_texture_type]: #128
[#425 for_statement]: #319
[#425 func_call_statement]: #321
[#425 ident]: #345
[#425 if_clause]: #330
[#425 if_statement]: #316
[#425 increment_statement]: #342
[#425 lhs_expression]: #346
[#425 loop_statement]: #318
[#425 loop_statement/0.2]: #521
[#425 loop_statement/0.2/0]: #522
[#425 mat_prefix]: #87
[#425 multisampled_texture_type]: #130
[#425 return_statement]: #315
[#425 sampled_texture_type]: #129
[#425 sampler_type]: #127
[#425 statement]: #523
[#425 storage_texture_type]: #131
[#425 switch_statement]: #317
[#425 texture_and_sampler_types]: #103
[#425 type_specifier_without_ident]: #85
[#425 variable_decl]: #336
[#425 variable_statement]: #322
[#425 variable_updating_statement]: #326
[#425 vec_prefix]: #86
[#425 while_statement]: #320
[#427 else_clause]: #518
[#427 if_statement/0.2]: #517
[#429 else_if_clause]: #429
[#429 if_statement/0.1/0]: #516
[#461 _template_args_end]: #513
[#462 _template_args_end]: #512
[#463 _template_args_end]: #511
[#465 array_type_specifier/0.4]: #508
[#466 _template_args_end]: #507
[#467 _template_args_end]: #506
[#468 expression_comma_list/0.2]: #504
[#470 expression_comma_list/0.1/0]: #503
[#470 expression_comma_list/0.1/0/0.0]: #470
[#471 additive_expression]: #64
[#471 array_type_specifier]: #101
[#471 binary_and_expression]: #61
[#471 binary_or_expression]: #62
[#471 binary_xor_expression]: #63
[#471 bitwise_expression]: #59
[#471 bool_literal]: #83
[#471 call_expression]: #75
[#471 callable]: #80
[#471 decimal_float_literal]: #91
[#471 decimal_int_literal]: #89
[#471 depth_texture_type]: #128
[#471 expression]: #502
[#471 float_literal]: #82
[#471 hex_float_literal]: #92
[#471 hex_int_literal]: #90
[#471 ident]: #74
[#471 int_literal]: #81
[#471 literal]: #76
[#471 mat_prefix]: #87
[#471 multiplicative_expression]: #66
[#471 multisampled_texture_type]: #130
[#471 paren_expression]: #77
[#471 primary_expression]: #73
[#471 relational_expression]: #56
[#471 sampled_texture_type]: #129
[#471 sampler_type]: #127
[#471 shift_expression]: #60
[#471 short_circuit_and_expression]: #58
[#471 short_circuit_or_expression]: #57
[#471 singular_expression]: #67
[#471 storage_texture_type]: #131
[#471 texture_and_sampler_types]: #103
[#471 type_specifier_without_ident]: #85
[#471 unary_expression]: #65
[#471 vec_prefix]: #86
[#473 _template_args_end]: #500
[#474 component_or_swizzle_specifier]: #499
[#474 component_or_swizzle_specifier/0.3]: #498
[#480 additive_expression]: #64
[#480 array_type_specifier]: #101
[#480 binary_and_expression]: #61
[#480 binary_or_expression]: #62
[#480 binary_xor_expression]: #63
[#480 bitwise_expression]: #59
[#480 bool_literal]: #83
[#480 call_expression]: #75
[#480 callable]: #80
[#480 decimal_float_literal]: #91
[#480 decimal_int_literal]: #89
[#480 depth_texture_type]: #128
[#480 expression]: #497
[#480 float_literal]: #82
[#480 hex_float_literal]: #92
[#480 hex_int_literal]: #90
[#480 ident]: #74
[#480 int_literal]: #81
[#480 literal]: #76
[#480 mat_prefix]: #87
[#480 multiplicative_expression]: #66
[#480 multisampled_texture_type]: #130
[#480 paren_expression]: #77
[#480 primary_expression]: #73
[#480 relational_expression]: #56
[#480 sampled_texture_type]: #129
[#480 sampler_type]: #127
[#480 shift_expression]: #60
[#480 short_circuit_and_expression]: #58
[#480 short_circuit_or_expression]: #57
[#480 singular_expression]: #67
[#480 storage_texture_type]: #131
[#480 texture_and_sampler_types]: #103
[#480 type_specifier_without_ident]: #85
[#480 unary_expression]: #65
[#480 vec_prefix]: #86
[#486 interpolation_sample_name]: #492
[#492 attrib_end]: #593
[#492 attrib_end/0.0]: #481
[#497 attrib_end]: #591
[#497 attrib_end/0.0]: #481
[#500 paren_expression]: #590
[#508 _template_args_end]: #589
[#509 additive_expression]: #586
[#509 array_type_specifier]: #101
[#509 binary_and_expression]: #61
[#509 binary_or_expression]: #62
[#509 binary_xor_expression]: #63
[#509 bitwise_expression]: #587
[#509 bool_literal]: #83
[#509 call_expression]: #75
[#509 callable]: #80
[#509 decimal_float_literal]: #91
[#509 decimal_int_literal]: #89
[#509 depth_texture_type]: #128
[#509 element_count_expression]: #585
[#509 float_literal]: #82
[#509 hex_float_literal]: #92
[#509 hex_int_literal]: #90
[#509 ident]: #74
[#509 int_literal]: #81
[#509 literal]: #76
[#509 mat_prefix]: #87
[#509 multiplicative_expression]: #66
[#509 multisampled_texture_type]: #130
[#509 paren_expression]: #77
[#509 primary_expression]: #73
[#509 sampled_texture_type]: #129
[#509 sampler_type]: #127
[#509 singular_expression]: #67
[#509 storage_texture_type]: #131
[#509 texture_and_sampler_types]: #103
[#509 type_specifier_without_ident]: #85
[#509 unary_expression]: #588
[#509 vec_prefix]: #86
[#510 array_type_specifier]: #101
[#510 depth_texture_type]: #128
[#510 ident]: #358
[#510 mat_prefix]: #361
[#510 multisampled_texture_type]: #130
[#510 sampled_texture_type]: #129
[#510 sampler_type]: #127
[#510 storage_texture_type]: #131
[#510 texture_and_sampler_types]: #103
[#510 type_specifier]: #584
[#510 type_specifier_without_ident]: #359
[#510 vec_prefix]: #360
[#514 access_mode]: #583
[#515 additive_expression]: #64
[#515 array_type_specifier]: #101
[#515 binary_and_expression]: #61
[#515 binary_or_expression]: #62
[#515 binary_xor_expression]: #63
[#515 bitwise_expression]: #59
[#515 bool_literal]: #83
[#515 call_expression]: #75
[#515 callable]: #80
[#515 decimal_float_literal]: #91
[#515 decimal_int_literal]: #89
[#515 depth_texture_type]: #128
[#515 expression]: #582
[#515 float_literal]: #82
[#515 hex_float_literal]: #92
[#515 hex_int_literal]: #90
[#515 ident]: #74
[#515 int_literal]: #81
[#515 literal]: #76
[#515 mat_prefix]: #87
[#515 multiplicative_expression]: #66
[#515 multisampled_texture_type]: #130
[#515 paren_expression]: #77
[#515 primary_expression]: #73
[#515 relational_expression]: #56
[#515 sampled_texture_type]: #129
[#515 sampler_type]: #127
[#515 shift_expression]: #60
[#515 short_circuit_and_expression]: #58
[#515 short_circuit_or_expression]: #57
[#515 singular_expression]: #67
[#515 storage_texture_type]: #131
[#515 texture_and_sampler_types]: #103
[#515 type_specifier_without_ident]: #85
[#515 unary_expression]: #65
[#515 vec_prefix]: #86
[#519 compound_statement]: #581
[#520 case_clause]: #577
[#520 default_alone_clause]: #578
[#520 switch_body]: #576
[#520 switch_statement/0.3]: #574
[#520 switch_statement/0.3/0]: #575
[#521 continuing_statement]: #572
[#521 loop_statement/0.3]: #571
[#523 array_type_specifier]: #101
[#523 assignment_statement]: #341
[#523 break_statement]: #323
[#523 callable]: #335
[#523 compound_statement]: #327
[#523 const_assert_statement]: #328
[#523 continue_statement]: #324
[#523 core_lhs_expression]: #348
[#523 decrement_statement]: #343
[#523 depth_texture_type]: #128
[#523 for_statement]: #319
[#523 func_call_statement]: #321
[#523 ident]: #345
[#523 if_clause]: #330
[#523 if_statement]: #316
[#523 increment_statement]: #342
[#523 lhs_expression]: #346
[#523 loop_statement]: #318
[#523 loop_statement/0.2/0]: #570
[#523 mat_prefix]: #87
[#523 multisampled_texture_type]: #130
[#523 return_statement]: #315
[#523 sampled_texture_type]: #129
[#523 sampler_type]: #127
[#523 statement]: #523
[#523 storage_texture_type]: #131
[#523 switch_statement]: #317
[#523 texture_and_sampler_types]: #103
[#523 type_specifier_without_ident]: #85
[#523 variable_decl]: #336
[#523 variable_statement]: #322
[#523 variable_updating_statement]: #326
[#523 vec_prefix]: #86
[#523 while_statement]: #320
[#532 additive_expression]: #64
[#532 array_type_specifier]: #101
[#532 binary_and_expression]: #61
[#532 binary_or_expression]: #62
[#532 binary_xor_expression]: #63
[#532 bitwise_expression]: #59
[#532 bool_literal]: #83
[#532 call_expression]: #75
[#532 callable]: #80
[#532 decimal_float_literal]: #91
[#532 decimal_int_literal]: #89
[#532 depth_texture_type]: #128
[#532 expression]: #567
[#532 float_literal]: #82
[#532 hex_float_literal]: #92
[#532 hex_int_literal]: #90
[#532 ident]: #74
[#532 int_literal]: #81
[#532 literal]: #76
[#532 mat_prefix]: #87
[#532 multiplicative_expression]: #66
[#532 multisampled_texture_type]: #130
[#532 paren_expression]: #77
[#532 primary_expression]: #73
[#532 relational_expression]: #56
[#532 sampled_texture_type]: #129
[#532 sampler_type]: #127
[#532 shift_expression]: #60
[#532 short_circuit_and_expression]: #58
[#532 short_circuit_or_expression]: #57
[#532 singular_expression]: #67
[#532 storage_texture_type]: #131
[#532 texture_and_sampler_types]: #103
[#532 type_specifier_without_ident]: #85
[#532 unary_expression]: #65
[#532 vec_prefix]: #86
[#533 additive_expression]: #64
[#533 array_type_specifier]: #101
[#533 binary_and_expression]: #61
[#533 binary_or_expression]: #62
[#533 binary_xor_expression]: #63
[#533 bitwise_expression]: #59
[#533 bool_literal]: #83
[#533 call_expression]: #75
[#533 callable]: #80
[#533 decimal_float_literal]: #91
[#533 decimal_int_literal]: #89
[#533 depth_texture_type]: #128
[#533 expression]: #566
[#533 float_literal]: #82
[#533 hex_float_literal]: #92
[#533 hex_int_literal]: #90
[#533 ident]: #74
[#533 int_literal]: #81
[#533 literal]: #76
[#533 mat_prefix]: #87
[#533 multiplicative_expression]: #66
[#533 multisampled_texture_type]: #130
[#533 paren_expression]: #77
[#533 primary_expression]: #73
[#533 relational_expression]: #56
[#533 sampled_texture_type]: #129
[#533 sampler_type]: #127
[#533 shift_expression]: #60
[#533 short_circuit_and_expression]: #58
[#533 short_circuit_or_expression]: #57
[#533 singular_expression]: #67
[#533 storage_texture_type]: #131
[#533 texture_and_sampler_types]: #103
[#533 type_specifier_without_ident]: #85
[#533 unary_expression]: #65
[#533 vec_prefix]: #86
[#540 param_list/0.2]: #563
[#542 param_list/0.1/0]: #562
[#542 param_list/0.1/0/0.0]: #542
[#543 attribute]: #393
[#543 param]: #561
[#543 param/0.0]: #391
[#543 param/0.0/0]: #392
[#544 function_header/0.5]: #559
[#549 array_type_specifier]: #101
[#549 depth_texture_type]: #128
[#549 ident]: #358
[#549 mat_prefix]: #361
[#549 multisampled_texture_type]: #130
[#549 sampled_texture_type]: #129
[#549 sampler_type]: #127
[#549 storage_texture_type]: #131
[#549 texture_and_sampler_types]: #103
[#549 type_specifier]: #557
[#549 type_specifier_without_ident]: #359
[#549 vec_prefix]: #360
[#550 _template_args_end]: #556
[#551 access_mode]: #552
[#560 attribute]: #616
[#560 function_header/0.5/0.1]: #614
[#560 function_header/0.5/0.1/0]: #615
[#565 array_type_specifier]: #101
[#565 depth_texture_type]: #128
[#565 ident]: #358
[#565 mat_prefix]: #361
[#565 multisampled_texture_type]: #130
[#565 sampled_texture_type]: #129
[#565 sampler_type]: #127
[#565 storage_texture_type]: #131
[#565 texture_and_sampler_types]: #103
[#565 type_specifier]: #613
[#565 type_specifier_without_ident]: #359
[#565 vec_prefix]: #360
[#568 additive_expression]: #64
[#568 array_type_specifier]: #101
[#568 binary_and_expression]: #61
[#568 binary_or_expression]: #62
[#568 binary_xor_expression]: #63
[#568 bitwise_expression]: #59
[#568 bool_literal]: #83
[#568 call_expression]: #75
[#568 callable]: #80
[#568 decimal_float_literal]: #91
[#568 decimal_int_literal]: #89
[#568 depth_texture_type]: #128
[#568 expression]: #612
[#568 float_literal]: #82
[#568 for_header/0.2]: #611
[#568 hex_float_literal]: #92
[#568 hex_int_literal]: #90
[#568 ident]: #74
[#568 int_literal]: #81
[#568 literal]: #76
[#568 mat_prefix]: #87
[#568 multiplicative_expression]: #66
[#568 multisampled_texture_type]: #130
[#568 paren_expression]: #77
[#568 primary_expression]: #73
[#568 relational_expression]: #56
[#568 sampled_texture_type]: #129
[#568 sampler_type]: #127
[#568 shift_expression]: #60
[#568 short_circuit_and_expression]: #58
[#568 short_circuit_or_expression]: #57
[#568 singular_expression]: #67
[#568 storage_texture_type]: #131
[#568 texture_and_sampler_types]: #103
[#568 type_specifier_without_ident]: #85
[#568 unary_expression]: #65
[#568 vec_prefix]: #86
[#569 compound_statement]: #610
[#573 continuing_compound_statement]: #607
[#576 case_clause]: #577
[#576 default_alone_clause]: #578
[#576 switch_body]: #576
[#576 switch_statement/0.3/0]: #605
[#579 additive_expression]: #64
[#579 array_type_specifier]: #101
[#579 binary_and_expression]: #61
[#579 binary_or_expression]: #62
[#579 binary_xor_expression]: #63
[#579 bitwise_expression]: #59
[#579 bool_literal]: #83
[#579 call_expression]: #75
[#579 callable]: #80
[#579 case_selector]: #602
[#579 case_selectors]: #601
[#579 decimal_float_literal]: #91
[#579 decimal_int_literal]: #89
[#579 depth_texture_type]: #128
[#579 expression]: #604
[#579 float_literal]: #82
[#579 hex_float_literal]: #92
[#579 hex_int_literal]: #90
[#579 ident]: #74
[#579 int_literal]: #81
[#579 literal]: #76
[#579 mat_prefix]: #87
[#579 multiplicative_expression]: #66
[#579 multisampled_texture_type]: #130
[#579 paren_expression]: #77
[#579 primary_expression]: #73
[#579 relational_expression]: #56
[#579 sampled_texture_type]: #129
[#579 sampler_type]: #127
[#579 shift_expression]: #60
[#579 short_circuit_and_expression]: #58
[#579 short_circuit_or_expression]: #57
[#579 singular_expression]: #67
[#579 storage_texture_type]: #131
[#579 texture_and_sampler_types]: #103
[#579 type_specifier_without_ident]: #85
[#579 unary_expression]: #65
[#579 vec_prefix]: #86
[#580 default_alone_clause/0.1]: #599
[#582 compound_statement]: #598
[#583 _template_args_end]: #597
[#584 type_specifier_without_ident/7.6]: #595
[#586 additive_operator]: #217
[#592 additive_expression]: #64
[#592 array_type_specifier]: #101
[#592 binary_and_expression]: #61
[#592 binary_or_expression]: #62
[#592 binary_xor_expression]: #63
[#592 bitwise_expression]: #59
[#592 bool_literal]: #83
[#592 call_expression]: #75
[#592 callable]: #80
[#592 decimal_float_literal]: #91
[#592 decimal_int_literal]: #89
[#592 depth_texture_type]: #128
[#592 expression]: #594
[#592 float_literal]: #82
[#592 hex_float_literal]: #92
[#592 hex_int_literal]: #90
[#592 ident]: #74
[#592 int_literal]: #81
[#592 literal]: #76
[#592 mat_prefix]: #87
[#592 multiplicative_expression]: #66
[#592 multisampled_texture_type]: #130
[#592 paren_expression]: #77
[#592 primary_expression]: #73
[#592 relational_expression]: #56
[#592 sampled_texture_type]: #129
[#592 sampler_type]: #127
[#592 shift_expression]: #60
[#592 short_circuit_and_expression]: #58
[#592 short_circuit_or_expression]: #57
[#592 singular_expression]: #67
[#592 storage_texture_type]: #131
[#592 texture_and_sampler_types]: #103
[#592 type_specifier_without_ident]: #85
[#592 unary_expression]: #65
[#592 vec_prefix]: #86
[#594 attrib_end]: #632
[#594 attrib_end/0.0]: #481
[#595 _template_args_end]: #631
[#596 access_mode]: #630
[#599 compound_statement]: #629
[#601 case_clause/0.2]: #627
[#602 case_selectors/0.1]: #623
[#602 case_selectors/0.1/0]: #624
[#602 case_selectors/0.1/0/0.0]: #625
[#608 array_type_specifier]: #101
[#608 assignment_statement]: #341
[#608 break_statement]: #323
[#608 callable]: #335
[#608 compound_statement]: #327
[#608 const_assert_statement]: #328
[#608 continue_statement]: #324
[#608 continuing_compound_statement/0.1]: #620
[#608 continuing_compound_statement/0.1/0]: #621
[#608 core_lhs_expression]: #348
[#608 decrement_statement]: #343
[#608 depth_texture_type]: #128
[#608 for_statement]: #319
[#608 func_call_statement]: #321
[#608 ident]: #345
[#608 if_clause]: #330
[#608 if_statement]: #316
[#608 increment_statement]: #342
[#608 lhs_expression]: #346
[#608 loop_statement]: #318
[#608 mat_prefix]: #87
[#608 multisampled_texture_type]: #130
[#608 return_statement]: #315
[#608 sampled_texture_type]: #129
[#608 sampler_type]: #127
[#608 statement]: #622
[#608 storage_texture_type]: #131
[#608 switch_statement]: #317
[#608 texture_and_sampler_types]: #103
[#608 type_specifier_without_ident]: #85
[#608 variable_decl]: #336
[#608 variable_statement]: #322
[#608 variable_updating_statement]: #326
[#608 vec_prefix]: #86
[#608 while_statement]: #320
[#614 array_type_specifier]: #101
[#614 depth_texture_type]: #128
[#614 ident]: #358
[#614 mat_prefix]: #361
[#614 multisampled_texture_type]: #130
[#614 sampled_texture_type]: #129
[#614 sampler_type]: #127
[#614 storage_texture_type]: #131
[#614 texture_and_sampler_types]: #103
[#614 type_specifier]: #618
[#614 type_specifier_without_ident]: #359
[#614 vec_prefix]: #360
[#616 attribute]: #616
[#616 function_header/0.5/0.1/0]: #617
[#619 array_type_specifier]: #101
[#619 assignment_statement]: #341
[#619 callable]: #335
[#619 core_lhs_expression]: #348
[#619 decrement_statement]: #343
[#619 depth_texture_type]: #128
[#619 for_header/0.4]: #642
[#619 for_update]: #643
[#619 func_call_statement]: #645
[#619 ident]: #345
[#619 increment_statement]: #342
[#619 lhs_expression]: #346
[#619 mat_prefix]: #87
[#619 multisampled_texture_type]: #130
[#619 sampled_texture_type]: #129
[#619 sampler_type]: #127
[#619 storage_texture_type]: #131
[#619 texture_and_sampler_types]: #103
[#619 type_specifier_without_ident]: #85
[#619 variable_updating_statement]: #644
[#619 vec_prefix]: #86
[#620 break_if_statement]: #640
[#620 continuing_compound_statement/0.2]: #639
[#622 array_type_specifier]: #101
[#622 assignment_statement]: #341
[#622 break_statement]: #323
[#622 callable]: #335
[#622 compound_statement]: #327
[#622 const_assert_statement]: #328
[#622 continue_statement]: #324
[#622 continuing_compound_statement/0.1/0]: #638
[#622 core_lhs_expression]: #348
[#622 decrement_statement]: #343
[#622 depth_texture_type]: #128
[#622 for_statement]: #319
[#622 func_call_statement]: #321
[#622 ident]: #345
[#622 if_clause]: #330
[#622 if_statement]: #316
[#622 increment_statement]: #342
[#622 lhs_expression]: #346
[#622 loop_statement]: #318
[#622 mat_prefix]: #87
[#622 multisampled_texture_type]: #130
[#622 return_statement]: #315
[#622 sampled_texture_type]: #129
[#622 sampler_type]: #127
[#622 statement]: #622
[#622 storage_texture_type]: #131
[#622 switch_statement]: #317
[#622 texture_and_sampler_types]: #103
[#622 type_specifier_without_ident]: #85
[#622 variable_decl]: #336
[#622 variable_statement]: #322
[#622 variable_updating_statement]: #326
[#622 vec_prefix]: #86
[#622 while_statement]: #320
[#623 case_selectors/0.2]: #636
[#625 case_selectors/0.1/0]: #635
[#625 case_selectors/0.1/0/0.0]: #625
[#626 additive_expression]: #64
[#626 array_type_specifier]: #101
[#626 binary_and_expression]: #61
[#626 binary_or_expression]: #62
[#626 binary_xor_expression]: #63
[#626 bitwise_expression]: #59
[#626 bool_literal]: #83
[#626 call_expression]: #75
[#626 callable]: #80
[#626 case_selector]: #634
[#626 decimal_float_literal]: #91
[#626 decimal_int_literal]: #89
[#626 depth_texture_type]: #128
[#626 expression]: #604
[#626 float_literal]: #82
[#626 hex_float_literal]: #92
[#626 hex_int_literal]: #90
[#626 ident]: #74
[#626 int_literal]: #81
[#626 literal]: #76
[#626 mat_prefix]: #87
[#626 multiplicative_expression]: #66
[#626 multisampled_texture_type]: #130
[#626 paren_expression]: #77
[#626 primary_expression]: #73
[#626 relational_expression]: #56
[#626 sampled_texture_type]: #129
[#626 sampler_type]: #127
[#626 shift_expression]: #60
[#626 short_circuit_and_expression]: #58
[#626 short_circuit_or_expression]: #57
[#626 singular_expression]: #67
[#626 storage_texture_type]: #131
[#626 texture_and_sampler_types]: #103
[#626 type_specifier_without_ident]: #85
[#626 unary_expression]: #65
[#626 vec_prefix]: #86
[#627 compound_statement]: #633
[#646 additive_expression]: #64
[#646 array_type_specifier]: #101
[#646 binary_and_expression]: #61
[#646 binary_or_expression]: #62
[#646 binary_xor_expression]: #63
[#646 bitwise_expression]: #59
[#646 bool_literal]: #83
[#646 call_expression]: #75
[#646 callable]: #80
[#646 decimal_float_literal]: #91
[#646 decimal_int_literal]: #89
[#646 depth_texture_type]: #128
[#646 expression]: #648
[#646 float_literal]: #82
[#646 hex_float_literal]: #92
[#646 hex_int_literal]: #90
[#646 ident]: #74
[#646 int_literal]: #81
[#646 literal]: #76
[#646 mat_prefix]: #87
[#646 multiplicative_expression]: #66
[#646 multisampled_texture_type]: #130
[#646 paren_expression]: #77
[#646 primary_expression]: #73
[#646 relational_expression]: #56
[#646 sampled_texture_type]: #129
[#646 sampler_type]: #127
[#646 shift_expression]: #60
[#646 short_circuit_and_expression]: #58
[#646 short_circuit_or_expression]: #57
[#646 singular_expression]: #67
[#646 storage_texture_type]: #131
[#646 texture_and_sampler_types]: #103
[#646 type_specifier_without_ident]: #85
[#646 unary_expression]: #65
[#646 vec_prefix]: #86
