=Grammar:

_blankspace:/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_block_comment:/\u200B_block_comment/
_comment:/\/\/.*/
_disambiguate_template:/\u200B_disambiguate_template/
_error_sentinel:/\u200B_error_sentinel/
_greater_than:/\u200B_greater_than/
_greater_than_equal:/\u200B_greater_than_equal/
_less_than:/\u200B_less_than/
_less_than_equal:/\u200B_less_than_equal/
_shift_left:/\u200B_shift_left/
_shift_left_assign:/\u200B_shift_left_assign/
_shift_right:/\u200B_shift_right/
_shift_right_assign:/\u200B_shift_right_assign/
_template_args_end:/\u200B_template_args_end/
_template_args_start:/\u200B_template_args_start/
additive_expression:
   additive_expression additive_operator multiplicative_expression
 | multiplicative_expression
additive_operator:
   '+'
 | '-'
argument_expression_list:
   '(' expression_comma_list ? ')'
assignment_statement:
   '_' '=' expression
 | lhs_expression ( '=' | compound_assignment_operator ) expression
assignment_statement/0.1:
   '='
 | compound_assignment_operator
attrib_end:
   ',' ? ')'
attribute:
   '@' 'align' '(' expression attrib_end
 | '@' 'binding' '(' expression attrib_end
 | '@' 'builtin' '(' expression attrib_end
 | '@' 'compute'
 | '@' 'const'
 | '@' 'fragment'
 | '@' 'group' '(' expression attrib_end
 | '@' 'id' '(' expression attrib_end
 | '@' 'interpolate' '(' expression ',' expression attrib_end
 | '@' 'interpolate' '(' expression attrib_end
 | '@' 'invariant'
 | '@' 'location' '(' expression attrib_end
 | '@' 'must_use'
 | '@' 'size' '(' expression attrib_end
 | '@' 'vertex'
 | '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end
 | '@' 'workgroup_size' '(' expression ',' expression attrib_end
 | '@' 'workgroup_size' '(' expression attrib_end
binary_and_expression:
   binary_and_expression '&' unary_expression
 | unary_expression
binary_or_expression:
   binary_or_expression '|' unary_expression
 | unary_expression
binary_xor_expression:
   binary_xor_expression '^' unary_expression
 | unary_expression
bitwise_expression:
   binary_and_expression '&' unary_expression
 | binary_or_expression '|' unary_expression
 | binary_xor_expression '^' unary_expression
bool_literal:
   'false'
 | 'true'
break_if_statement:
   'break' 'if' expression ';'
break_statement:'break'
call_expression:call_phrase
call_phrase:
   template_elaborated_ident argument_expression_list
case_clause:
   'case' case_selectors ':' ? compound_statement
case_selector:
   'default'
 | expression
case_selectors:
   case_selector ( ',' case_selector ) * ? ',' ?
case_selectors/0.1/0/0.0:
   ',' case_selector
component_or_swizzle_specifier:
   '.' member_ident component_or_swizzle_specifier ?
 | '.' swizzle_name component_or_swizzle_specifier ?
 | '[' expression ']' component_or_swizzle_specifier ?
compound_assignment_operator:
   '%='
 | '&='
 | '*='
 | '+='
 | '-='
 | '/='
 | '^='
 | '|='
 | _shift_left_assign
 | _shift_right_assign
compound_statement:
   '{' statement * ? '}'
const_assert_statement:
   'const_assert' expression
continue_statement:'continue'
continuing_compound_statement:
   '{' statement * ? break_if_statement ? '}'
continuing_statement:
   'continuing' continuing_compound_statement
core_lhs_expression:
   '(' lhs_expression ')'
 | ident _disambiguate_template
decimal_float_literal:
   /0[fh]/
 | /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/
 | /[0-9]+[eE][+-]?[0-9]+[fh]?/
 | /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/
 | /[1-9][0-9]*[fh]/
decimal_int_literal:
   /0[iu]?/
 | /[1-9][0-9]*[iu]?/
decrement_statement:
   lhs_expression '--'
default_alone_clause:
   'default' ':' ? compound_statement
else_clause:
   'else' compound_statement
else_if_clause:
   'else' 'if' expression compound_statement
enable_directive:
   'enable' enable_extension_name ';'
enable_extension_name:'f16'
expression:
   bitwise_expression
 | relational_expression
 | short_circuit_and_expression '&&' relational_expression
 | short_circuit_or_expression '||' relational_expression
expression_comma_list:
   expression ( ',' expression ) * ? ',' ?
expression_comma_list/0.1/0/0.0:
   ',' expression
float_literal:
   decimal_float_literal
 | hex_float_literal
for_header:
   for_init ? ';' expression ? ';' for_update ?
for_init:
   func_call_statement
 | variable_statement
 | variable_updating_statement
for_statement:
   'for' '(' for_header ')' compound_statement
for_update:
   func_call_statement
 | variable_updating_statement
func_call_statement:call_phrase
function_decl:
   attribute * ? function_header compound_statement
function_header:
   'fn' ident '(' param_list ? ')' ( '->' attribute * ? template_elaborated_ident )?
global_constant_decl:
   'const' optionally_typed_ident '=' expression
 | attribute * ? 'override' optionally_typed_ident ( '=' expression )?
global_decl:
   ';'
 | const_assert_statement ';'
 | function_decl
 | global_constant_decl ';'
 | global_variable_decl ';'
 | struct_decl
 | type_alias_decl ';'
global_directive:
   enable_directive
 | requires_directive
global_variable_decl:
   attribute * ? variable_decl ( '=' expression )?
hex_float_literal:
   /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/
 | /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/
 | /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/
hex_int_literal:/0[xX][0-9a-fA-F]+[iu]?/
ident:
   ident_pattern_token _disambiguate_template
ident_pattern_token:/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
if_clause:
   'if' expression compound_statement
if_statement:
   if_clause else_if_clause * ? else_clause ?
increment_statement:
   lhs_expression '++'
int_literal:
   decimal_int_literal
 | hex_int_literal
lhs_expression:
   '&' lhs_expression
 | '*' lhs_expression
 | core_lhs_expression component_or_swizzle_specifier ?
literal:
   bool_literal
 | float_literal
 | int_literal
loop_statement:
   'loop' '{' statement * ? continuing_statement ? '}'
member_ident:ident_pattern_token
multiplicative_expression:
   multiplicative_expression multiplicative_operator unary_expression
 | unary_expression
multiplicative_operator:
   '%'
 | '*'
 | '/'
optionally_typed_ident:
   ident ( ':' type_specifier )?
param:
   attribute * ? ident ':' type_specifier
param_list:
   param ( ',' param ) * ? ',' ?
param_list/0.1/0/0.0:
   ',' param
paren_expression:
   '(' expression ')'
primary_expression:
   'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression
 | call_expression
 | literal
 | paren_expression
 | template_elaborated_ident
relational_expression:
   shift_expression
 | shift_expression '!=' shift_expression
 | shift_expression '==' shift_expression
 | shift_expression _greater_than shift_expression
 | shift_expression _greater_than_equal shift_expression
 | shift_expression _less_than shift_expression
 | shift_expression _less_than_equal shift_expression
requires_directive:
   'requires' software_extension_list ';'
return_statement:
   'return' expression ?
shift_expression:
   additive_expression
 | unary_expression _shift_left unary_expression
 | unary_expression _shift_right unary_expression
short_circuit_and_expression:
   relational_expression
 | short_circuit_and_expression '&&' relational_expression
short_circuit_or_expression:
   relational_expression
 | short_circuit_or_expression '||' relational_expression
singular_expression:
   primary_expression component_or_swizzle_specifier ?
software_extension_list:
   software_extension_name ( ',' software_extension_name ) * ? ',' ?
software_extension_list/0.1/0/0.0:
   ',' software_extension_name
software_extension_name:ident_pattern_token
statement:
   ';'
 | 'discard' ';'
 | break_statement ';'
 | compound_statement
 | const_assert_statement ';'
 | continue_statement ';'
 | for_statement
 | func_call_statement ';'
 | if_statement
 | loop_statement
 | return_statement ';'
 | switch_statement
 | variable_statement ';'
 | variable_updating_statement ';'
 | while_statement
struct_body_decl:
   '{' struct_member ( ',' struct_member ) * ? ',' ? '}'
struct_body_decl/0.2/0/0.0:
   ',' struct_member
struct_decl:
   'struct' ident struct_body_decl
struct_member:
   attribute * ? member_ident ':' type_specifier
switch_body:
   case_clause
 | default_alone_clause
switch_statement:
   'switch' expression '{' ( switch_body * ) '}'
switch_statement/0.3:
   switch_body *
swizzle_name:
   '/[rgba]/'
 | '/[rgba][rgba]/'
 | '/[rgba][rgba][rgba]/'
 | '/[rgba][rgba][rgba][rgba]/'
 | '/[xyzw]/'
 | '/[xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw][xyzw]/'
template_arg_comma_list:
   template_arg_expression ( ',' template_arg_expression ) * ? ',' ?
template_arg_comma_list/0.1/0/0.0:
   ',' template_arg_expression
template_arg_expression:expression
template_elaborated_ident:
   ident _disambiguate_template template_list ?
template_list:
   _template_args_start template_arg_comma_list _template_args_end
translation_unit:
   global_directive * ? global_decl * ?
type_alias_decl:
   'alias' ident '=' type_specifier
type_specifier:template_elaborated_ident
unary_expression:
   '!' unary_expression
 | '&' unary_expression
 | '*' unary_expression
 | '-' unary_expression
 | '~' unary_expression
 | singular_expression
variable_decl:
   'var' _disambiguate_template template_list ? optionally_typed_ident
variable_statement:
   'const' optionally_typed_ident '=' expression
 | 'let' optionally_typed_ident '=' expression
 | variable_decl
 | variable_decl '=' expression
variable_updating_statement:
   assignment_statement
 | decrement_statement
 | increment_statement
while_statement:
   'while' expression compound_statement

=Raw rules:
translation_unit  -> ( Choice ( Seq translation_unit/0.0 translation_unit/0.1 ) )
translation_unit .reg_info.index: 475
translation_unit .first: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' Îµ}
translation_unit .derives_empty: True
translation_unit .follow: {EndOfText}
global_directive  -> ( Choice enable_directive requires_directive )
global_directive .reg_info.index: 125
global_directive .first: {'enable' 'requires'}
global_directive .derives_empty: False
global_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_decl  -> ( Choice ';' ( Seq global_variable_decl ';' ) ( Seq global_constant_decl ';' ) ( Seq type_alias_decl ';' ) struct_decl function_decl ( Seq const_assert_statement ';' ) )
global_decl .reg_info.index: 136
global_decl .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var'}
global_decl .derives_empty: False
global_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
bool_literal  -> ( Choice 'true' 'false' )
bool_literal .reg_info.index: 137
bool_literal .first: {'false' 'true'}
bool_literal .derives_empty: False
bool_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal  -> ( Choice decimal_int_literal hex_int_literal )
int_literal .reg_info.index: 140
int_literal .first: {/0[iu]?/ /0[xX][0-9a-fA-F]+[iu]?/ /[1-9][0-9]*[iu]?/}
int_literal .derives_empty: False
int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal  -> ( Choice /0[iu]?/ /[1-9][0-9]*[iu]?/ )
decimal_int_literal .reg_info.index: 141
decimal_int_literal .first: {/0[iu]?/ /[1-9][0-9]*[iu]?/}
decimal_int_literal .derives_empty: False
decimal_int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal  -> /0[xX][0-9a-fA-F]+[iu]?/
hex_int_literal .reg_info.index: 7
hex_int_literal .first: {/0[xX][0-9a-fA-F]+[iu]?/}
hex_int_literal .derives_empty: False
hex_int_literal .follow: {}
float_literal  -> ( Choice decimal_float_literal hex_float_literal )
float_literal .reg_info.index: 144
float_literal .first: {/0[fh]/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
float_literal .derives_empty: False
float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal  -> ( Choice /0[fh]/ /[1-9][0-9]*[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ )
decimal_float_literal .reg_info.index: 145
decimal_float_literal .first: {/0[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
decimal_float_literal .derives_empty: False
decimal_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal  -> ( Choice /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ )
hex_float_literal .reg_info.index: 146
hex_float_literal .first: {/0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/}
hex_float_literal .derives_empty: False
hex_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal  -> ( Choice int_literal float_literal bool_literal )
literal .reg_info.index: 150
literal .first: {'false' 'true' /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
literal .derives_empty: False
literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident  -> ( Choice ( Seq ident_pattern_token _disambiguate_template ) )
ident .reg_info.index: 424
ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident .derives_empty: False
ident .follow: {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}
member_ident  -> ident_pattern_token
member_ident .reg_info.index: 151
member_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
member_ident .derives_empty: False
member_ident .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
template_list  -> ( Choice ( Seq _template_args_start template_arg_comma_list _template_args_end ) )
template_list .reg_info.index: 425
template_list .first: {/\u200B_template_args_start/}
template_list .derives_empty: False
template_list .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_arg_comma_list  -> ( Choice ( Seq template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 ) )
template_arg_comma_list .reg_info.index: 526
template_arg_comma_list .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_arg_comma_list .derives_empty: False
template_arg_comma_list .follow: {/\u200B_template_args_end/}
template_arg_expression  -> expression
template_arg_expression .reg_info.index: 164
template_arg_expression .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_arg_expression .derives_empty: False
template_arg_expression .follow: {',' /\u200B_template_args_end/}
attribute  -> ( Choice ( Seq '@' 'align' '(' expression attrib_end ) ( Seq '@' 'binding' '(' expression attrib_end ) ( Seq '@' 'builtin' '(' expression attrib_end ) ( Seq '@' 'const' ) ( Seq '@' 'group' '(' expression attrib_end ) ( Seq '@' 'id' '(' expression attrib_end ) ( Seq '@' 'interpolate' '(' expression attrib_end ) ( Seq '@' 'interpolate' '(' expression ',' expression attrib_end ) ( Seq '@' 'invariant' ) ( Seq '@' 'location' '(' expression attrib_end ) ( Seq '@' 'must_use' ) ( Seq '@' 'size' '(' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression ',' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end ) ( Seq '@' 'vertex' ) ( Seq '@' 'fragment' ) ( Seq '@' 'compute' ) )
attribute .reg_info.index: 184
attribute .first: {'@'}
attribute .derives_empty: False
attribute .follow: {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end  -> ( Choice ( Seq attrib_end/0.0 ')' ) )
attrib_end .reg_info.index: 629
attrib_end .first: {')' ','}
attrib_end .derives_empty: False
attrib_end .follow: {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_decl  -> ( Choice ( Seq 'struct' ident struct_body_decl ) )
struct_decl .reg_info.index: 428
struct_decl .first: {'struct'}
struct_decl .derives_empty: False
struct_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl  -> ( Choice ( Seq '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' ) )
struct_body_decl .reg_info.index: 642
struct_body_decl .first: {'{'}
struct_body_decl .derives_empty: False
struct_body_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_member  -> ( Choice ( Seq struct_member/0.0 member_ident ':' type_specifier ) )
struct_member .reg_info.index: 650
struct_member .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member .derives_empty: False
struct_member .follow: {',' '}'}
type_alias_decl  -> ( Choice ( Seq 'alias' ident '=' type_specifier ) )
type_alias_decl .reg_info.index: 431
type_alias_decl .first: {'alias'}
type_alias_decl .derives_empty: False
type_alias_decl .follow: {';'}
type_specifier  -> template_elaborated_ident
type_specifier .reg_info.index: 201
type_specifier .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
type_specifier .derives_empty: False
type_specifier .follow: {')' ',' ';' '=' '}' /\u200B_template_args_end/}
template_elaborated_ident  -> ( Choice ( Seq ident _disambiguate_template template_elaborated_ident/0.2 ) )
template_elaborated_ident .reg_info.index: 662
template_elaborated_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident .derives_empty: False
template_elaborated_ident .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
variable_statement  -> ( Choice variable_decl ( Seq variable_decl '=' expression ) ( Seq 'let' optionally_typed_ident '=' expression ) ( Seq 'const' optionally_typed_ident '=' expression ) )
variable_statement .reg_info.index: 210
variable_statement .first: {'const' 'let' 'var'}
variable_statement .derives_empty: False
variable_statement .follow: {';'}
variable_decl  -> ( Choice ( Seq 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident ) )
variable_decl .reg_info.index: 684
variable_decl .first: {'var'}
variable_decl .derives_empty: False
variable_decl .follow: {';' '='}
optionally_typed_ident  -> ( Choice ( Seq ident optionally_typed_ident/0.1 ) )
optionally_typed_ident .reg_info.index: 690
optionally_typed_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
optionally_typed_ident .derives_empty: False
optionally_typed_ident .follow: {';' '='}
global_variable_decl  -> ( Choice ( Seq global_variable_decl/0.0 variable_decl global_variable_decl/0.2 ) )
global_variable_decl .reg_info.index: 697
global_variable_decl .first: {'@' 'var'}
global_variable_decl .derives_empty: False
global_variable_decl .follow: {';'}
global_constant_decl  -> ( Choice ( Seq 'const' optionally_typed_ident '=' expression ) ( Seq global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 ) )
global_constant_decl .reg_info.index: 709
global_constant_decl .first: {'@' 'const' 'override'}
global_constant_decl .derives_empty: False
global_constant_decl .follow: {';'}
primary_expression  -> ( Choice template_elaborated_ident call_expression literal paren_expression ( Seq 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression ) )
primary_expression .reg_info.index: 224
primary_expression .first: {'(' 'bitcast' 'false' 'true' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
primary_expression .derives_empty: False
primary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression  -> call_phrase
call_expression .reg_info.index: 225
call_expression .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_expression .derives_empty: False
call_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_phrase  -> ( Choice ( Seq template_elaborated_ident argument_expression_list ) )
call_phrase .reg_info.index: 436
call_phrase .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_phrase .derives_empty: False
call_phrase .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression  -> ( Choice ( Seq '(' expression ')' ) )
paren_expression .reg_info.index: 437
paren_expression .first: {'('}
paren_expression .derives_empty: False
paren_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list  -> ( Choice ( Seq '(' argument_expression_list/0.1 ')' ) )
argument_expression_list .reg_info.index: 734
argument_expression_list .first: {'('}
argument_expression_list .derives_empty: False
argument_expression_list .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
expression_comma_list  -> ( Choice ( Seq expression expression_comma_list/0.1 expression_comma_list/0.2 ) )
expression_comma_list .reg_info.index: 741
expression_comma_list .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression_comma_list .derives_empty: False
expression_comma_list .follow: {')'}
component_or_swizzle_specifier  -> ( Choice ( Seq '[' expression ']' component_or_swizzle_specifier/0.3 ) ( Seq '.' member_ident component_or_swizzle_specifier/1.2 ) ( Seq '.' swizzle_name component_or_swizzle_specifier/2.2 ) )
component_or_swizzle_specifier .reg_info.index: 759
component_or_swizzle_specifier .first: {'.' '['}
component_or_swizzle_specifier .derives_empty: False
component_or_swizzle_specifier .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
unary_expression  -> ( Choice singular_expression ( Seq '-' unary_expression ) ( Seq '!' unary_expression ) ( Seq '~' unary_expression ) ( Seq '*' unary_expression ) ( Seq '&' unary_expression ) )
unary_expression .reg_info.index: 250
unary_expression .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
unary_expression .derives_empty: False
unary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression  -> ( Choice ( Seq primary_expression singular_expression/0.1 ) )
singular_expression .reg_info.index: 780
singular_expression .first: {'(' 'bitcast' 'false' 'true' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
singular_expression .derives_empty: False
singular_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
lhs_expression  -> ( Choice ( Seq core_lhs_expression lhs_expression/0.1 ) ( Seq '*' lhs_expression ) ( Seq '&' lhs_expression ) )
lhs_expression .reg_info.index: 791
lhs_expression .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
lhs_expression .derives_empty: False
lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression  -> ( Choice ( Seq ident _disambiguate_template ) ( Seq '(' lhs_expression ')' ) )
core_lhs_expression .reg_info.index: 261
core_lhs_expression .first: {'(' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
core_lhs_expression .derives_empty: False
core_lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
multiplicative_expression  -> ( Choice unary_expression ( Seq multiplicative_expression multiplicative_operator unary_expression ) )
multiplicative_expression .reg_info.index: 265
multiplicative_expression .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_expression .derives_empty: False
multiplicative_expression .follow: {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator  -> ( Choice '*' '/' '%' )
multiplicative_operator .reg_info.index: 266
multiplicative_operator .first: {'%' '*' '/'}
multiplicative_operator .derives_empty: False
multiplicative_operator .follow: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression  -> ( Choice multiplicative_expression ( Seq additive_expression additive_operator multiplicative_expression ) )
additive_expression .reg_info.index: 270
additive_expression .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression .derives_empty: False
additive_expression .follow: {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_operator  -> ( Choice '+' '-' )
additive_operator .reg_info.index: 271
additive_operator .first: {'+' '-'}
additive_operator .derives_empty: False
additive_operator .follow: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression  -> ( Choice additive_expression ( Seq unary_expression _shift_left unary_expression ) ( Seq unary_expression _shift_right unary_expression ) )
shift_expression .reg_info.index: 276
shift_expression .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression .derives_empty: False
shift_expression .follow: {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
relational_expression  -> ( Choice shift_expression ( Seq shift_expression _less_than shift_expression ) ( Seq shift_expression _greater_than shift_expression ) ( Seq shift_expression _less_than_equal shift_expression ) ( Seq shift_expression _greater_than_equal shift_expression ) ( Seq shift_expression '==' shift_expression ) ( Seq shift_expression '!=' shift_expression ) )
relational_expression .reg_info.index: 288
relational_expression .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
relational_expression .derives_empty: False
relational_expression .follow: {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
short_circuit_and_expression  -> ( Choice relational_expression ( Seq short_circuit_and_expression '&&' relational_expression ) )
short_circuit_and_expression .reg_info.index: 292
short_circuit_and_expression .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_and_expression .derives_empty: False
short_circuit_and_expression .follow: {'&&'}
short_circuit_or_expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) )
short_circuit_or_expression .reg_info.index: 295
short_circuit_or_expression .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_or_expression .derives_empty: False
short_circuit_or_expression .follow: {'||'}
binary_or_expression  -> ( Choice unary_expression ( Seq binary_or_expression '|' unary_expression ) )
binary_or_expression .reg_info.index: 298
binary_or_expression .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_or_expression .derives_empty: False
binary_or_expression .follow: {'|'}
binary_and_expression  -> ( Choice unary_expression ( Seq binary_and_expression '&' unary_expression ) )
binary_and_expression .reg_info.index: 301
binary_and_expression .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_and_expression .derives_empty: False
binary_and_expression .follow: {'&'}
binary_xor_expression  -> ( Choice unary_expression ( Seq binary_xor_expression '^' unary_expression ) )
binary_xor_expression .reg_info.index: 304
binary_xor_expression .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_xor_expression .derives_empty: False
binary_xor_expression .follow: {'^'}
bitwise_expression  -> ( Choice ( Seq binary_and_expression '&' unary_expression ) ( Seq binary_or_expression '|' unary_expression ) ( Seq binary_xor_expression '^' unary_expression ) )
bitwise_expression .reg_info.index: 305
bitwise_expression .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
bitwise_expression .derives_empty: False
bitwise_expression .follow: {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) ( Seq short_circuit_and_expression '&&' relational_expression ) bitwise_expression )
expression .reg_info.index: 307
expression .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression .derives_empty: False
expression .follow: {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
compound_statement  -> ( Choice ( Seq '{' compound_statement/0.1 '}' ) )
compound_statement .reg_info.index: 901
compound_statement .first: {'{'}
compound_statement .derives_empty: False
compound_statement .follow: {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
assignment_statement  -> ( Choice ( Seq lhs_expression assignment_statement/0.1 expression ) ( Seq '_' '=' expression ) )
assignment_statement .reg_info.index: 912
assignment_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement .derives_empty: False
assignment_statement .follow: {')' ';'}
compound_assignment_operator  -> ( Choice '+=' '-=' '*=' '/=' '%=' '&=' '|=' '^=' _shift_right_assign _shift_left_assign )
compound_assignment_operator .reg_info.index: 319
compound_assignment_operator .first: {'%=' '&=' '*=' '+=' '-=' '/=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
compound_assignment_operator .derives_empty: False
compound_assignment_operator .follow: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
increment_statement  -> ( Choice ( Seq lhs_expression '++' ) )
increment_statement .reg_info.index: 442
increment_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement .derives_empty: False
increment_statement .follow: {')' ';'}
decrement_statement  -> ( Choice ( Seq lhs_expression '--' ) )
decrement_statement .reg_info.index: 443
decrement_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
decrement_statement .derives_empty: False
decrement_statement .follow: {')' ';'}
if_statement  -> ( Choice ( Seq if_clause if_statement/0.1 if_statement/0.2 ) )
if_statement .reg_info.index: 936
if_statement .first: {'if'}
if_statement .derives_empty: False
if_statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_clause  -> ( Choice ( Seq 'if' expression compound_statement ) )
if_clause .reg_info.index: 445
if_clause .first: {'if'}
if_clause .derives_empty: False
if_clause .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause  -> ( Choice ( Seq 'else' 'if' expression compound_statement ) )
else_if_clause .reg_info.index: 446
else_if_clause .first: {'else'}
else_if_clause .derives_empty: False
else_if_clause .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause  -> ( Choice ( Seq 'else' compound_statement ) )
else_clause .reg_info.index: 447
else_clause .first: {'else'}
else_clause .derives_empty: False
else_clause .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement  -> ( Choice ( Seq 'switch' expression '{' switch_statement/0.3 '}' ) )
switch_statement .reg_info.index: 957
switch_statement .first: {'switch'}
switch_statement .derives_empty: False
switch_statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_body  -> ( Choice case_clause default_alone_clause )
switch_body .reg_info.index: 338
switch_body .first: {'case' 'default'}
switch_body .derives_empty: False
switch_body .follow: {'case' 'default' '}'}
case_clause  -> ( Choice ( Seq 'case' case_selectors case_clause/0.2 compound_statement ) )
case_clause .reg_info.index: 967
case_clause .first: {'case'}
case_clause .derives_empty: False
case_clause .follow: {'case' 'default' '}'}
default_alone_clause  -> ( Choice ( Seq 'default' default_alone_clause/0.1 compound_statement ) )
default_alone_clause .reg_info.index: 973
default_alone_clause .first: {'default'}
default_alone_clause .derives_empty: False
default_alone_clause .follow: {'case' 'default' '}'}
case_selectors  -> ( Choice ( Seq case_selector case_selectors/0.1 case_selectors/0.2 ) )
case_selectors .reg_info.index: 980
case_selectors .first: {'!' '&' '(' '*' '-' 'bitcast' 'default' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selectors .derives_empty: False
case_selectors .follow: {':' '{'}
case_selector  -> ( Choice 'default' expression )
case_selector .reg_info.index: 348
case_selector .first: {'!' '&' '(' '*' '-' 'bitcast' 'default' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selector .derives_empty: False
case_selector .follow: {',' ':' '{'}
loop_statement  -> ( Choice ( Seq 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' ) )
loop_statement .reg_info.index: 991
loop_statement .first: {'loop'}
loop_statement .derives_empty: False
loop_statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement  -> ( Choice ( Seq 'for' '(' for_header ')' compound_statement ) )
for_statement .reg_info.index: 453
for_statement .first: {'for'}
for_statement .derives_empty: False
for_statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header  -> ( Choice ( Seq for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 ) )
for_header .reg_info.index: 1008
for_header .first: {'&' '(' '*' ';' '_' 'const' 'let' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header .derives_empty: False
for_header .follow: {')'}
for_init  -> ( Choice variable_statement variable_updating_statement func_call_statement )
for_init .reg_info.index: 363
for_init .first: {'&' '(' '*' '_' 'const' 'let' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_init .derives_empty: False
for_init .follow: {';'}
for_update  -> ( Choice variable_updating_statement func_call_statement )
for_update .reg_info.index: 364
for_update .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_update .derives_empty: False
for_update .follow: {')'}
while_statement  -> ( Choice ( Seq 'while' expression compound_statement ) )
while_statement .reg_info.index: 455
while_statement .first: {'while'}
while_statement .derives_empty: False
while_statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
break_statement  -> 'break'
break_statement .reg_info.index: 81
break_statement .first: {'break'}
break_statement .derives_empty: False
break_statement .follow: {}
break_if_statement  -> ( Choice ( Seq 'break' 'if' expression ';' ) )
break_if_statement .reg_info.index: 456
break_if_statement .first: {'break'}
break_if_statement .derives_empty: False
break_if_statement .follow: {'}'}
continue_statement  -> 'continue'
continue_statement .reg_info.index: 82
continue_statement .first: {'continue'}
continue_statement .derives_empty: False
continue_statement .follow: {}
continuing_statement  -> ( Choice ( Seq 'continuing' continuing_compound_statement ) )
continuing_statement .reg_info.index: 457
continuing_statement .first: {'continuing'}
continuing_statement .derives_empty: False
continuing_statement .follow: {'}'}
continuing_compound_statement  -> ( Choice ( Seq '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' ) )
continuing_compound_statement .reg_info.index: 1033
continuing_compound_statement .first: {'{'}
continuing_compound_statement .derives_empty: False
continuing_compound_statement .follow: {'}'}
return_statement  -> ( Choice ( Seq 'return' return_statement/0.1 ) )
return_statement .reg_info.index: 1038
return_statement .first: {'return'}
return_statement .derives_empty: False
return_statement .follow: {';'}
func_call_statement  -> call_phrase
func_call_statement .reg_info.index: 225
func_call_statement .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement .derives_empty: False
func_call_statement .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
const_assert_statement  -> ( Choice ( Seq 'const_assert' expression ) )
const_assert_statement .reg_info.index: 460
const_assert_statement .first: {'const_assert'}
const_assert_statement .derives_empty: False
const_assert_statement .follow: {';'}
statement  -> ( Choice ';' ( Seq return_statement ';' ) if_statement switch_statement loop_statement for_statement while_statement ( Seq func_call_statement ';' ) ( Seq variable_statement ';' ) ( Seq break_statement ';' ) ( Seq continue_statement ';' ) ( Seq 'discard' ';' ) ( Seq variable_updating_statement ';' ) compound_statement ( Seq const_assert_statement ';' ) )
statement .reg_info.index: 389
statement .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement .derives_empty: False
statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement  -> ( Choice assignment_statement increment_statement decrement_statement )
variable_updating_statement .reg_info.index: 393
variable_updating_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement .derives_empty: False
variable_updating_statement .follow: {')' ';'}
function_decl  -> ( Choice ( Seq function_decl/0.0 function_header compound_statement ) )
function_decl .reg_info.index: 1081
function_decl .first: {'@' 'fn'}
function_decl .derives_empty: False
function_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header  -> ( Choice ( Seq 'fn' ident '(' function_header/0.3 ')' function_header/0.5 ) )
function_header .reg_info.index: 1092
function_header .first: {'fn'}
function_header .derives_empty: False
function_header .follow: {'{'}
param_list  -> ( Choice ( Seq param param_list/0.1 param_list/0.2 ) )
param_list .reg_info.index: 1099
param_list .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list .derives_empty: False
param_list .follow: {')'}
param  -> ( Choice ( Seq param/0.0 ident ':' type_specifier ) )
param .reg_info.index: 1106
param .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param .derives_empty: False
param .follow: {')' ','}
enable_directive  -> ( Choice ( Seq 'enable' enable_extension_name ';' ) )
enable_directive .reg_info.index: 465
enable_directive .first: {'enable'}
enable_directive .derives_empty: False
enable_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive  -> ( Choice ( Seq 'requires' software_extension_list ';' ) )
requires_directive .reg_info.index: 466
requires_directive .first: {'requires'}
requires_directive .derives_empty: False
requires_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
software_extension_list  -> ( Choice ( Seq software_extension_name software_extension_list/0.1 software_extension_list/0.2 ) )
software_extension_list .reg_info.index: 1121
software_extension_list .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list .derives_empty: False
software_extension_list .follow: {';'}
software_extension_name  -> ident_pattern_token
software_extension_name .reg_info.index: 151
software_extension_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_name .derives_empty: False
software_extension_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
ident_pattern_token  -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
ident_pattern_token .reg_info.index: 91
ident_pattern_token .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident_pattern_token .derives_empty: False
ident_pattern_token .follow: {}
enable_extension_name  -> 'f16'
enable_extension_name .reg_info.index: 92
enable_extension_name .first: {'f16'}
enable_extension_name .derives_empty: False
enable_extension_name .follow: {}
swizzle_name  -> ( Choice '/[rgba]/' '/[rgba][rgba]/' '/[rgba][rgba][rgba]/' '/[rgba][rgba][rgba][rgba]/' '/[xyzw]/' '/[xyzw][xyzw]/' '/[xyzw][xyzw][xyzw]/' '/[xyzw][xyzw][xyzw][xyzw]/' )
swizzle_name .reg_info.index: 416
swizzle_name .first: {'/[rgba]/' '/[rgba][rgba]/' '/[rgba][rgba][rgba]/' '/[rgba][rgba][rgba][rgba]/' '/[xyzw]/' '/[xyzw][xyzw]/' '/[xyzw][xyzw][xyzw]/' '/[xyzw][xyzw][xyzw][xyzw]/'}
swizzle_name .derives_empty: False
swizzle_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
_comment  -> /\/\/.*/
_comment .reg_info.index: 101
_comment .first: {/\/\/.*/}
_comment .derives_empty: False
_comment .follow: {}
_blankspace  -> /[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_blankspace .reg_info.index: 102
_blankspace .first: {/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/}
_blankspace .derives_empty: False
_blankspace .follow: {}
_less_than_equal  -> /\u200B_less_than_equal/
_less_than_equal .reg_info.index: 103
_less_than_equal .first: {/\u200B_less_than_equal/}
_less_than_equal .derives_empty: False
_less_than_equal .follow: {}
_error_sentinel  -> /\u200B_error_sentinel/
_error_sentinel .reg_info.index: 104
_error_sentinel .first: {/\u200B_error_sentinel/}
_error_sentinel .derives_empty: False
_error_sentinel .follow: {}
_shift_left_assign  -> /\u200B_shift_left_assign/
_shift_left_assign .reg_info.index: 105
_shift_left_assign .first: {/\u200B_shift_left_assign/}
_shift_left_assign .derives_empty: False
_shift_left_assign .follow: {}
_template_args_start  -> /\u200B_template_args_start/
_template_args_start .reg_info.index: 106
_template_args_start .first: {/\u200B_template_args_start/}
_template_args_start .derives_empty: False
_template_args_start .follow: {}
_template_args_end  -> /\u200B_template_args_end/
_template_args_end .reg_info.index: 107
_template_args_end .first: {/\u200B_template_args_end/}
_template_args_end .derives_empty: False
_template_args_end .follow: {}
_greater_than_equal  -> /\u200B_greater_than_equal/
_greater_than_equal .reg_info.index: 108
_greater_than_equal .first: {/\u200B_greater_than_equal/}
_greater_than_equal .derives_empty: False
_greater_than_equal .follow: {}
_shift_left  -> /\u200B_shift_left/
_shift_left .reg_info.index: 109
_shift_left .first: {/\u200B_shift_left/}
_shift_left .derives_empty: False
_shift_left .follow: {}
_greater_than  -> /\u200B_greater_than/
_greater_than .reg_info.index: 110
_greater_than .first: {/\u200B_greater_than/}
_greater_than .derives_empty: False
_greater_than .follow: {}
_less_than  -> /\u200B_less_than/
_less_than .reg_info.index: 111
_less_than .first: {/\u200B_less_than/}
_less_than .derives_empty: False
_less_than .follow: {}
_shift_right_assign  -> /\u200B_shift_right_assign/
_shift_right_assign .reg_info.index: 112
_shift_right_assign .first: {/\u200B_shift_right_assign/}
_shift_right_assign .derives_empty: False
_shift_right_assign .follow: {}
_block_comment  -> /\u200B_block_comment/
_block_comment .reg_info.index: 113
_block_comment .first: {/\u200B_block_comment/}
_block_comment .derives_empty: False
_block_comment .follow: {}
_shift_right  -> /\u200B_shift_right/
_shift_right .reg_info.index: 114
_shift_right .first: {/\u200B_shift_right/}
_shift_right .derives_empty: False
_shift_right .follow: {}
_disambiguate_template  -> /\u200B_disambiguate_template/
_disambiguate_template .reg_info.index: 115
_disambiguate_template .first: {/\u200B_disambiguate_template/}
_disambiguate_template .derives_empty: False
_disambiguate_template .follow: {}
language  -> ( Choice ( Seq translation_unit EndOfText ) )
language .reg_info.index: 468
language .first: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
language .derives_empty: False
language .follow: {}
translation_unit/0.0  -> ( Choice translation_unit/0.0/0 Îµ )
translation_unit/0.0 .reg_info.index: 1187
translation_unit/0.0 .first: {'enable' 'requires' Îµ}
translation_unit/0.0 .derives_empty: True
translation_unit/0.0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1  -> ( Choice translation_unit/0.1/0 Îµ )
translation_unit/0.1 .reg_info.index: 1191
translation_unit/0.1 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' Îµ}
translation_unit/0.1 .derives_empty: True
translation_unit/0.1 .follow: {EndOfText}
template_arg_comma_list/0.1  -> ( Choice template_arg_comma_list/0.1/0 Îµ )
template_arg_comma_list/0.1 .reg_info.index: 1195
template_arg_comma_list/0.1 .first: {',' Îµ}
template_arg_comma_list/0.1 .derives_empty: True
template_arg_comma_list/0.1 .follow: {',' /\u200B_template_args_end/}
template_arg_comma_list/0.2  -> ( Choice ',' Îµ )
template_arg_comma_list/0.2 .reg_info.index: 162
template_arg_comma_list/0.2 .first: {',' Îµ}
template_arg_comma_list/0.2 .derives_empty: True
template_arg_comma_list/0.2 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
attrib_end/0.0  -> ( Choice ',' Îµ )
attrib_end/0.0 .reg_info.index: 162
attrib_end/0.0 .first: {',' Îµ}
attrib_end/0.0 .derives_empty: True
attrib_end/0.0 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
struct_body_decl/0.2  -> ( Choice struct_body_decl/0.2/0 Îµ )
struct_body_decl/0.2 .reg_info.index: 1201
struct_body_decl/0.2 .first: {',' Îµ}
struct_body_decl/0.2 .derives_empty: True
struct_body_decl/0.2 .follow: {',' '}'}
struct_body_decl/0.3  -> ( Choice ',' Îµ )
struct_body_decl/0.3 .reg_info.index: 162
struct_body_decl/0.3 .first: {',' Îµ}
struct_body_decl/0.3 .derives_empty: True
struct_body_decl/0.3 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
struct_member/0.0  -> ( Choice struct_member/0.0/0 Îµ )
struct_member/0.0 .reg_info.index: 1206
struct_member/0.0 .first: {'@' Îµ}
struct_member/0.0 .derives_empty: True
struct_member/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident/0.2  -> ( Choice template_list Îµ )
template_elaborated_ident/0.2 .reg_info.index: 203
template_elaborated_ident/0.2 .first: {/\u200B_template_args_start/ Îµ}
template_elaborated_ident/0.2 .derives_empty: True
template_elaborated_ident/0.2 .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
variable_decl/0.2  -> ( Choice template_list Îµ )
variable_decl/0.2 .reg_info.index: 203
variable_decl/0.2 .first: {/\u200B_template_args_start/ Îµ}
variable_decl/0.2 .derives_empty: True
variable_decl/0.2 .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
optionally_typed_ident/0.1  -> ( Choice ( Seq ':' type_specifier ) Îµ )
optionally_typed_ident/0.1 .reg_info.index: 213
optionally_typed_ident/0.1 .first: {':' Îµ}
optionally_typed_ident/0.1 .derives_empty: True
optionally_typed_ident/0.1 .follow: {';' '='}
global_variable_decl/0.0  -> ( Choice global_variable_decl/0.0/0 Îµ )
global_variable_decl/0.0 .reg_info.index: 1215
global_variable_decl/0.0 .first: {'@' Îµ}
global_variable_decl/0.0 .derives_empty: True
global_variable_decl/0.0 .follow: {'var'}
global_variable_decl/0.2  -> ( Choice ( Seq '=' expression ) Îµ )
global_variable_decl/0.2 .reg_info.index: 216
global_variable_decl/0.2 .first: {'=' Îµ}
global_variable_decl/0.2 .derives_empty: True
global_variable_decl/0.2 .follow: {';'}
global_constant_decl/1.0  -> ( Choice global_constant_decl/1.0/0 Îµ )
global_constant_decl/1.0 .reg_info.index: 1222
global_constant_decl/1.0 .first: {'@' Îµ}
global_constant_decl/1.0 .derives_empty: True
global_constant_decl/1.0 .follow: {'override'}
global_constant_decl/1.3  -> ( Choice ( Seq '=' expression ) Îµ )
global_constant_decl/1.3 .reg_info.index: 216
global_constant_decl/1.3 .first: {'=' Îµ}
global_constant_decl/1.3 .derives_empty: True
global_constant_decl/1.3 .follow: {';'}
argument_expression_list/0.1  -> ( Choice expression_comma_list Îµ )
argument_expression_list/0.1 .reg_info.index: 230
argument_expression_list/0.1 .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ Îµ}
argument_expression_list/0.1 .derives_empty: True
argument_expression_list/0.1 .follow: {')'}
expression_comma_list/0.1  -> ( Choice expression_comma_list/0.1/0 Îµ )
expression_comma_list/0.1 .reg_info.index: 1230
expression_comma_list/0.1 .first: {',' Îµ}
expression_comma_list/0.1 .derives_empty: True
expression_comma_list/0.1 .follow: {')' ','}
expression_comma_list/0.2  -> ( Choice ',' Îµ )
expression_comma_list/0.2 .reg_info.index: 162
expression_comma_list/0.2 .first: {',' Îµ}
expression_comma_list/0.2 .derives_empty: True
expression_comma_list/0.2 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
component_or_swizzle_specifier/0.3  -> ( Choice component_or_swizzle_specifier Îµ )
component_or_swizzle_specifier/0.3 .reg_info.index: 237
component_or_swizzle_specifier/0.3 .first: {'.' '[' Îµ}
component_or_swizzle_specifier/0.3 .derives_empty: True
component_or_swizzle_specifier/0.3 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2  -> ( Choice component_or_swizzle_specifier Îµ )
component_or_swizzle_specifier/1.2 .reg_info.index: 237
component_or_swizzle_specifier/1.2 .first: {'.' '[' Îµ}
component_or_swizzle_specifier/1.2 .derives_empty: True
component_or_swizzle_specifier/1.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2  -> ( Choice component_or_swizzle_specifier Îµ )
component_or_swizzle_specifier/2.2 .reg_info.index: 237
component_or_swizzle_specifier/2.2 .first: {'.' '[' Îµ}
component_or_swizzle_specifier/2.2 .derives_empty: True
component_or_swizzle_specifier/2.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
singular_expression/0.1  -> ( Choice component_or_swizzle_specifier Îµ )
singular_expression/0.1 .reg_info.index: 237
singular_expression/0.1 .first: {'.' '[' Îµ}
singular_expression/0.1 .derives_empty: True
singular_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
lhs_expression/0.1  -> ( Choice component_or_swizzle_specifier Îµ )
lhs_expression/0.1 .reg_info.index: 237
lhs_expression/0.1 .first: {'.' '[' Îµ}
lhs_expression/0.1 .derives_empty: True
lhs_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
compound_statement/0.1  -> ( Choice compound_statement/0.1/0 Îµ )
compound_statement/0.1 .reg_info.index: 1240
compound_statement/0.1 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
compound_statement/0.1 .derives_empty: True
compound_statement/0.1 .follow: {'}'}
assignment_statement/0.1  -> ( Choice '=' compound_assignment_operator )
assignment_statement/0.1 .reg_info.index: 313
assignment_statement/0.1 .first: {'%=' '&=' '*=' '+=' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
assignment_statement/0.1 .derives_empty: False
assignment_statement/0.1 .follow: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
if_statement/0.1  -> ( Choice if_statement/0.1/0 Îµ )
if_statement/0.1 .reg_info.index: 1245
if_statement/0.1 .first: {'else' Îµ}
if_statement/0.1 .derives_empty: True
if_statement/0.1 .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2  -> ( Choice else_clause Îµ )
if_statement/0.2 .reg_info.index: 327
if_statement/0.2 .first: {'else' Îµ}
if_statement/0.2 .derives_empty: True
if_statement/0.2 .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.3  -> ( Choice switch_statement/0.3/0 )
switch_statement/0.3 .reg_info.index: 1163
switch_statement/0.3 .first: {'case' 'default' Îµ}
switch_statement/0.3 .derives_empty: True
switch_statement/0.3 .follow: {'}'}
case_clause/0.2  -> ( Choice ':' Îµ )
case_clause/0.2 .reg_info.index: 340
case_clause/0.2 .first: {':' Îµ}
case_clause/0.2 .derives_empty: True
case_clause/0.2 .follow: {'{'}
default_alone_clause/0.1  -> ( Choice ':' Îµ )
default_alone_clause/0.1 .reg_info.index: 340
default_alone_clause/0.1 .first: {':' Îµ}
default_alone_clause/0.1 .derives_empty: True
default_alone_clause/0.1 .follow: {'{'}
case_selectors/0.1  -> ( Choice case_selectors/0.1/0 Îµ )
case_selectors/0.1 .reg_info.index: 1252
case_selectors/0.1 .first: {',' Îµ}
case_selectors/0.1 .derives_empty: True
case_selectors/0.1 .follow: {',' ':' '{'}
case_selectors/0.2  -> ( Choice ',' Îµ )
case_selectors/0.2 .reg_info.index: 162
case_selectors/0.2 .first: {',' Îµ}
case_selectors/0.2 .derives_empty: True
case_selectors/0.2 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
loop_statement/0.2  -> ( Choice loop_statement/0.2/0 Îµ )
loop_statement/0.2 .reg_info.index: 1257
loop_statement/0.2 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
loop_statement/0.2 .derives_empty: True
loop_statement/0.2 .follow: {'continuing' '}'}
loop_statement/0.3  -> ( Choice continuing_statement Îµ )
loop_statement/0.3 .reg_info.index: 350
loop_statement/0.3 .first: {'continuing' Îµ}
loop_statement/0.3 .derives_empty: True
loop_statement/0.3 .follow: {'}'}
for_header/0.0  -> ( Choice for_init Îµ )
for_header/0.0 .reg_info.index: 355
for_header/0.0 .first: {'&' '(' '*' '_' 'const' 'let' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
for_header/0.0 .derives_empty: True
for_header/0.0 .follow: {';'}
for_header/0.2  -> ( Choice expression Îµ )
for_header/0.2 .reg_info.index: 356
for_header/0.2 .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ Îµ}
for_header/0.2 .derives_empty: True
for_header/0.2 .follow: {';'}
for_header/0.4  -> ( Choice for_update Îµ )
for_header/0.4 .reg_info.index: 358
for_header/0.4 .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
for_header/0.4 .derives_empty: True
for_header/0.4 .follow: {')'}
continuing_compound_statement/0.1  -> ( Choice continuing_compound_statement/0.1/0 Îµ )
continuing_compound_statement/0.1 .reg_info.index: 1265
continuing_compound_statement/0.1 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
continuing_compound_statement/0.1 .derives_empty: True
continuing_compound_statement/0.1 .follow: {'break' '}'}
continuing_compound_statement/0.2  -> ( Choice break_if_statement Îµ )
continuing_compound_statement/0.2 .reg_info.index: 370
continuing_compound_statement/0.2 .first: {'break' Îµ}
continuing_compound_statement/0.2 .derives_empty: True
continuing_compound_statement/0.2 .follow: {'}'}
return_statement/0.1  -> ( Choice expression Îµ )
return_statement/0.1 .reg_info.index: 356
return_statement/0.1 .first: {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ Îµ}
return_statement/0.1 .derives_empty: True
return_statement/0.1 .follow: {';'}
function_decl/0.0  -> ( Choice function_decl/0.0/0 Îµ )
function_decl/0.0 .reg_info.index: 1271
function_decl/0.0 .first: {'@' Îµ}
function_decl/0.0 .derives_empty: True
function_decl/0.0 .follow: {'fn'}
function_header/0.3  -> ( Choice param_list Îµ )
function_header/0.3 .reg_info.index: 397
function_header/0.3 .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
function_header/0.3 .derives_empty: True
function_header/0.3 .follow: {')'}
function_header/0.5  -> ( Choice ( Seq '->' function_header/0.5/0.1 template_elaborated_ident ) Îµ )
function_header/0.5 .reg_info.index: 1278
function_header/0.5 .first: {'->' Îµ}
function_header/0.5 .derives_empty: True
function_header/0.5 .follow: {'{'}
param_list/0.1  -> ( Choice param_list/0.1/0 Îµ )
param_list/0.1 .reg_info.index: 1282
param_list/0.1 .first: {',' Îµ}
param_list/0.1 .derives_empty: True
param_list/0.1 .follow: {')' ','}
param_list/0.2  -> ( Choice ',' Îµ )
param_list/0.2 .reg_info.index: 162
param_list/0.2 .first: {',' Îµ}
param_list/0.2 .derives_empty: True
param_list/0.2 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
param/0.0  -> ( Choice param/0.0/0 Îµ )
param/0.0 .reg_info.index: 1287
param/0.0 .first: {'@' Îµ}
param/0.0 .derives_empty: True
param/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list/0.1  -> ( Choice software_extension_list/0.1/0 Îµ )
software_extension_list/0.1 .reg_info.index: 1291
software_extension_list/0.1 .first: {',' Îµ}
software_extension_list/0.1 .derives_empty: True
software_extension_list/0.1 .follow: {',' ';'}
software_extension_list/0.2  -> ( Choice ',' Îµ )
software_extension_list/0.2 .reg_info.index: 162
software_extension_list/0.2 .first: {',' Îµ}
software_extension_list/0.2 .derives_empty: True
software_extension_list/0.2 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
switch_statement/0.3/0  -> ( Choice ( Seq switch_body switch_statement/0.3/0 ) Îµ )
switch_statement/0.3/0 .reg_info.index: 1162
switch_statement/0.3/0 .first: {'case' 'default' Îµ}
switch_statement/0.3/0 .derives_empty: True
switch_statement/0.3/0 .follow: {'}'}
translation_unit/0.0/0  -> ( Choice ( Seq global_directive translation_unit/0.0/0 ) Îµ )
translation_unit/0.0/0 .reg_info.index: 1185
translation_unit/0.0/0 .first: {'enable' 'requires' Îµ}
translation_unit/0.0/0 .derives_empty: True
translation_unit/0.0/0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0  -> ( Choice ( Seq global_decl translation_unit/0.1/0 ) Îµ )
translation_unit/0.1/0 .reg_info.index: 1189
translation_unit/0.1/0 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' Îµ}
translation_unit/0.1/0 .derives_empty: True
translation_unit/0.1/0 .follow: {EndOfText}
template_arg_comma_list/0.1/0  -> ( Choice ( Seq template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 ) Îµ )
template_arg_comma_list/0.1/0 .reg_info.index: 1311
template_arg_comma_list/0.1/0 .first: {',' Îµ}
template_arg_comma_list/0.1/0 .derives_empty: True
template_arg_comma_list/0.1/0 .follow: {',' /\u200B_template_args_end/}
struct_body_decl/0.2/0  -> ( Choice ( Seq struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 ) Îµ )
struct_body_decl/0.2/0 .reg_info.index: 1318
struct_body_decl/0.2/0 .first: {',' Îµ}
struct_body_decl/0.2/0 .derives_empty: True
struct_body_decl/0.2/0 .follow: {',' '}'}
struct_member/0.0/0  -> ( Choice ( Seq attribute struct_member/0.0/0 ) Îµ )
struct_member/0.0/0 .reg_info.index: 1204
struct_member/0.0/0 .first: {'@' Îµ}
struct_member/0.0/0 .derives_empty: True
struct_member/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
global_variable_decl/0.0/0  -> ( Choice ( Seq attribute global_variable_decl/0.0/0 ) Îµ )
global_variable_decl/0.0/0 .reg_info.index: 1213
global_variable_decl/0.0/0 .first: {'@' Îµ}
global_variable_decl/0.0/0 .derives_empty: True
global_variable_decl/0.0/0 .follow: {'var'}
global_constant_decl/1.0/0  -> ( Choice ( Seq attribute global_constant_decl/1.0/0 ) Îµ )
global_constant_decl/1.0/0 .reg_info.index: 1220
global_constant_decl/1.0/0 .first: {'@' Îµ}
global_constant_decl/1.0/0 .derives_empty: True
global_constant_decl/1.0/0 .follow: {'override'}
expression_comma_list/0.1/0  -> ( Choice ( Seq expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 ) Îµ )
expression_comma_list/0.1/0 .reg_info.index: 1337
expression_comma_list/0.1/0 .first: {',' Îµ}
expression_comma_list/0.1/0 .derives_empty: True
expression_comma_list/0.1/0 .follow: {')' ','}
compound_statement/0.1/0  -> ( Choice ( Seq statement compound_statement/0.1/0 ) Îµ )
compound_statement/0.1/0 .reg_info.index: 1238
compound_statement/0.1/0 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
compound_statement/0.1/0 .derives_empty: True
compound_statement/0.1/0 .follow: {'}'}
if_statement/0.1/0  -> ( Choice ( Seq else_if_clause if_statement/0.1/0 ) Îµ )
if_statement/0.1/0 .reg_info.index: 1243
if_statement/0.1/0 .first: {'else' Îµ}
if_statement/0.1/0 .derives_empty: True
if_statement/0.1/0 .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
case_selectors/0.1/0  -> ( Choice ( Seq case_selectors/0.1/0/0.0 case_selectors/0.1/0 ) Îµ )
case_selectors/0.1/0 .reg_info.index: 1352
case_selectors/0.1/0 .first: {',' Îµ}
case_selectors/0.1/0 .derives_empty: True
case_selectors/0.1/0 .follow: {',' ':' '{'}
loop_statement/0.2/0  -> ( Choice ( Seq statement loop_statement/0.2/0 ) Îµ )
loop_statement/0.2/0 .reg_info.index: 1255
loop_statement/0.2/0 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
loop_statement/0.2/0 .derives_empty: True
loop_statement/0.2/0 .follow: {'continuing' '}'}
continuing_compound_statement/0.1/0  -> ( Choice ( Seq statement continuing_compound_statement/0.1/0 ) Îµ )
continuing_compound_statement/0.1/0 .reg_info.index: 1263
continuing_compound_statement/0.1/0 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
continuing_compound_statement/0.1/0 .derives_empty: True
continuing_compound_statement/0.1/0 .follow: {'break' '}'}
function_decl/0.0/0  -> ( Choice ( Seq attribute function_decl/0.0/0 ) Îµ )
function_decl/0.0/0 .reg_info.index: 1269
function_decl/0.0/0 .first: {'@' Îµ}
function_decl/0.0/0 .derives_empty: True
function_decl/0.0/0 .follow: {'fn'}
function_header/0.5/0.1  -> ( Choice function_header/0.5/0.1/0 Îµ )
function_header/0.5/0.1 .reg_info.index: 1387
function_header/0.5/0.1 .first: {'@' Îµ}
function_header/0.5/0.1 .derives_empty: True
function_header/0.5/0.1 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list/0.1/0  -> ( Choice ( Seq param_list/0.1/0/0.0 param_list/0.1/0 ) Îµ )
param_list/0.1/0 .reg_info.index: 1372
param_list/0.1/0 .first: {',' Îµ}
param_list/0.1/0 .derives_empty: True
param_list/0.1/0 .follow: {')' ','}
param/0.0/0  -> ( Choice ( Seq attribute param/0.0/0 ) Îµ )
param/0.0/0 .reg_info.index: 1285
param/0.0/0 .first: {'@' Îµ}
param/0.0/0 .derives_empty: True
param/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list/0.1/0  -> ( Choice ( Seq software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 ) Îµ )
software_extension_list/0.1/0 .reg_info.index: 1383
software_extension_list/0.1/0 .first: {',' Îµ}
software_extension_list/0.1/0 .derives_empty: True
software_extension_list/0.1/0 .follow: {',' ';'}
template_arg_comma_list/0.1/0/0.0  -> ( Choice ( Seq ',' template_arg_expression ) )
template_arg_comma_list/0.1/0/0.0 .reg_info.index: 1307
template_arg_comma_list/0.1/0/0.0 .first: {','}
template_arg_comma_list/0.1/0/0.0 .derives_empty: False
template_arg_comma_list/0.1/0/0.0 .follow: {',' /\u200B_template_args_end/}
struct_body_decl/0.2/0/0.0  -> ( Choice ( Seq ',' struct_member ) )
struct_body_decl/0.2/0/0.0 .reg_info.index: 1314
struct_body_decl/0.2/0/0.0 .first: {','}
struct_body_decl/0.2/0/0.0 .derives_empty: False
struct_body_decl/0.2/0/0.0 .follow: {',' '}'}
expression_comma_list/0.1/0/0.0  -> ( Choice ( Seq ',' expression ) )
expression_comma_list/0.1/0/0.0 .reg_info.index: 1333
expression_comma_list/0.1/0/0.0 .first: {','}
expression_comma_list/0.1/0/0.0 .derives_empty: False
expression_comma_list/0.1/0/0.0 .follow: {')' ','}
case_selectors/0.1/0/0.0  -> ( Choice ( Seq ',' case_selector ) )
case_selectors/0.1/0/0.0 .reg_info.index: 1348
case_selectors/0.1/0/0.0 .first: {','}
case_selectors/0.1/0/0.0 .derives_empty: False
case_selectors/0.1/0/0.0 .follow: {',' ':' '{'}
param_list/0.1/0/0.0  -> ( Choice ( Seq ',' param ) )
param_list/0.1/0/0.0 .reg_info.index: 1368
param_list/0.1/0/0.0 .first: {','}
param_list/0.1/0/0.0 .derives_empty: False
param_list/0.1/0/0.0 .follow: {')' ','}
software_extension_list/0.1/0/0.0  -> ( Choice ( Seq ',' software_extension_name ) )
software_extension_list/0.1/0/0.0 .reg_info.index: 1379
software_extension_list/0.1/0/0.0 .first: {','}
software_extension_list/0.1/0/0.0 .derives_empty: False
software_extension_list/0.1/0/0.0 .follow: {',' ';'}
function_header/0.5/0.1/0  -> ( Choice ( Seq attribute function_header/0.5/0.1/0 ) Îµ )
function_header/0.5/0.1/0 .reg_info.index: 1385
function_header/0.5/0.1/0 .first: {'@' Îµ}
function_header/0.5/0.1/0 .derives_empty: True
function_header/0.5/0.1/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

=LALR1 item sets:
#0
language -> Â· translation_unit EndOfText : {EndOfText}
enable_directive -> Â· 'enable' enable_extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> Â· enable_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> Â· requires_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive -> Â· 'requires' software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
translation_unit -> Â· translation_unit/0.0 translation_unit/0.1 : {EndOfText}
translation_unit/0.0 -> Â· translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> Â· global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#1
language -> translation_unit Â· EndOfText : {EndOfText}

#2
translation_unit -> translation_unit/0.0 Â· translation_unit/0.1 : {EndOfText}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'must_use' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
const_assert_statement -> Â· 'const_assert' expression : {';'}
function_decl -> Â· function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> Â· function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> Â· attribute function_decl/0.0/0 : {'fn'}
global_constant_decl -> Â· 'const' optionally_typed_ident '=' expression : {';'}
global_constant_decl -> Â· global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}
global_constant_decl/1.0 -> Â· global_constant_decl/1.0/0 : {'override'}
global_constant_decl/1.0/0 -> Â· attribute global_constant_decl/1.0/0 : {'override'}
global_decl -> Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· global_constant_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_variable_decl -> Â· global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> Â· global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> Â· attribute global_variable_decl/0.0/0 : {'var'}
struct_decl -> Â· 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1 -> Â· translation_unit/0.1/0 : {EndOfText}
translation_unit/0.1/0 -> Â· global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> Â· 'alias' ident '=' type_specifier : {';'}

#3
translation_unit/0.0 -> translation_unit/0.0/0 Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#4
translation_unit/0.0/0 -> global_directive Â· translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
enable_directive -> Â· 'enable' enable_extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> Â· enable_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> Â· requires_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive -> Â· 'requires' software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> Â· global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#5
global_directive -> enable_directive Â· : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#6
global_directive -> requires_directive Â· : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#7
enable_directive -> 'enable' Â· enable_extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
enable_extension_name -> Â· 'f16' : {';'}

#8
requires_directive -> 'requires' Â· software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
software_extension_list -> Â· software_extension_name software_extension_list/0.1 software_extension_list/0.2 : {';'}
software_extension_name -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' ';'}

#9
requires_directive -> 'requires' software_extension_list Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#10
software_extension_list -> software_extension_name Â· software_extension_list/0.1 software_extension_list/0.2 : {';'}
software_extension_list/0.1 -> Â· software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0 -> Â· software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0/0.0 -> Â· ',' software_extension_name : {',' ';'}

#11
software_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â· : {',' ';'}

#12
enable_directive -> 'enable' enable_extension_name Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#13
enable_extension_name -> 'f16' Â· : {';'}

#14
translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#15
translation_unit -> translation_unit/0.0 translation_unit/0.1 Â· : {EndOfText}

#16
translation_unit/0.1 -> translation_unit/0.1/0 Â· : {EndOfText}

#17
translation_unit/0.1/0 -> global_decl Â· translation_unit/0.1/0 : {EndOfText}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'must_use' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
const_assert_statement -> Â· 'const_assert' expression : {';'}
function_decl -> Â· function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> Â· function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> Â· attribute function_decl/0.0/0 : {'fn'}
global_constant_decl -> Â· 'const' optionally_typed_ident '=' expression : {';'}
global_constant_decl -> Â· global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}
global_constant_decl/1.0 -> Â· global_constant_decl/1.0/0 : {'override'}
global_constant_decl/1.0/0 -> Â· attribute global_constant_decl/1.0/0 : {'override'}
global_decl -> Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· global_constant_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_variable_decl -> Â· global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> Â· global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> Â· attribute global_variable_decl/0.0/0 : {'var'}
struct_decl -> Â· 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0 -> Â· global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> Â· 'alias' ident '=' type_specifier : {';'}

#18
global_decl -> ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#19
global_decl -> global_variable_decl Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#20
global_decl -> global_constant_decl Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#21
global_decl -> type_alias_decl Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#22
global_decl -> struct_decl Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#23
global_decl -> function_decl Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#24
global_decl -> const_assert_statement Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#25
global_variable_decl -> global_variable_decl/0.0 Â· variable_decl global_variable_decl/0.2 : {';'}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}

#26
global_constant_decl -> 'const' Â· optionally_typed_ident '=' expression : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {':' '='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> Â· ident optionally_typed_ident/0.1 : {'='}

#27
global_constant_decl -> global_constant_decl/1.0 Â· 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}

#28
type_alias_decl -> 'alias' Â· ident '=' type_specifier : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {'='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#29
struct_decl -> 'struct' Â· ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
ident -> Â· ident_pattern_token _disambiguate_template : {'{'}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#30
function_decl -> function_decl/0.0 Â· function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header -> Â· 'fn' ident '(' function_header/0.3 ')' function_header/0.5 : {'{'}

#31
const_assert_statement -> 'const_assert' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#32
global_variable_decl/0.0 -> global_variable_decl/0.0/0 Â· : {'var'}

#33
global_constant_decl/1.0 -> global_constant_decl/1.0/0 Â· : {'override'}

#34
function_decl/0.0 -> function_decl/0.0/0 Â· : {'fn'}

#35
function_decl/0.0/0 -> attribute Â· function_decl/0.0/0 : {'fn'}
global_constant_decl/1.0/0 -> attribute Â· global_constant_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> attribute Â· global_variable_decl/0.0/0 : {'var'}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'must_use' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
function_decl/0.0/0 -> Â· attribute function_decl/0.0/0 : {'fn'}
global_constant_decl/1.0/0 -> Â· attribute global_constant_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> Â· attribute global_variable_decl/0.0/0 : {'var'}

#36
attribute -> '@' Â· 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'builtin' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'compute' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'const' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'fragment' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'interpolate' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'interpolate' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'invariant' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'must_use' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'vertex' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#37
attribute -> '@' 'align' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#38
attribute -> '@' 'binding' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#39
attribute -> '@' 'builtin' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#40
attribute -> '@' 'const' Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#41
attribute -> '@' 'group' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#42
attribute -> '@' 'id' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#43
attribute -> '@' 'interpolate' Â· '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#44
attribute -> '@' 'invariant' Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#45
attribute -> '@' 'location' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#46
attribute -> '@' 'must_use' Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#47
attribute -> '@' 'size' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#48
attribute -> '@' 'workgroup_size' Â· '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' Â· '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#49
attribute -> '@' 'vertex' Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#50
attribute -> '@' 'fragment' Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#51
attribute -> '@' 'compute' Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#52
global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 Â· : {'var'}

#53
global_constant_decl/1.0/0 -> attribute global_constant_decl/1.0/0 Â· : {'override'}

#54
function_decl/0.0/0 -> attribute function_decl/0.0/0 Â· : {'fn'}

#55
const_assert_statement -> 'const_assert' expression Â· : {';'}

#56
expression -> relational_expression Â· : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> relational_expression Â· : {'&&'}
short_circuit_or_expression -> relational_expression Â· : {'||'}

#57
expression -> short_circuit_or_expression Â· '||' relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression Â· '||' relational_expression : {'||'}

#58
expression -> short_circuit_and_expression Â· '&&' relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression Â· '&&' relational_expression : {'&&'}

#59
expression -> bitwise_expression Â· : {')' ',' ':' ';' ']' '{'}

#60
relational_expression -> shift_expression Â· '!=' shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· '==' shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· _greater_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· _less_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
_greater_than -> Â· /\u200B_greater_than/ : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_greater_than_equal -> Â· /\u200B_greater_than_equal/ : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than -> Â· /\u200B_less_than/ : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than_equal -> Â· /\u200B_less_than_equal/ : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#61
binary_and_expression -> binary_and_expression Â· '&' unary_expression : {'&'}
bitwise_expression -> binary_and_expression Â· '&' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#62
binary_or_expression -> binary_or_expression Â· '|' unary_expression : {'|'}
bitwise_expression -> binary_or_expression Â· '|' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#63
binary_xor_expression -> binary_xor_expression Â· '^' unary_expression : {'^'}
bitwise_expression -> binary_xor_expression Â· '^' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#64
additive_expression -> additive_expression Â· additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> additive_expression Â· : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_operator -> Â· '+' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_operator -> Â· '-' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#65
binary_and_expression -> unary_expression Â· : {'&'}
binary_or_expression -> unary_expression Â· : {'|'}
binary_xor_expression -> unary_expression Â· : {'^'}
multiplicative_expression -> unary_expression Â· : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression Â· _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression Â· _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
_shift_left -> Â· /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> Â· /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#66
additive_expression -> multiplicative_expression Â· : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression Â· multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> Â· '%' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> Â· '*' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> Â· '/' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#67
unary_expression -> singular_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#68
unary_expression -> '-' Â· unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#69
unary_expression -> '!' Â· unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#70
unary_expression -> '~' Â· unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#71
unary_expression -> '*' Â· unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#72
unary_expression -> '&' Â· unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#73
singular_expression -> primary_expression Â· singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression/0.1 -> Â· component_or_swizzle_specifier : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#74
call_expression -> template_elaborated_ident Â· argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> template_elaborated_ident Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list -> Â· '(' argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#75
primary_expression -> call_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#76
primary_expression -> literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#77
primary_expression -> paren_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#78
primary_expression -> 'bitcast' Â· _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {/\u200B_template_args_start/}

#79
template_elaborated_ident -> ident Â· _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/ /\u200B_template_args_start/}

#80
literal -> int_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#81
literal -> float_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#82
literal -> bool_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#83
paren_expression -> '(' Â· expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')'}
expression -> Â· relational_expression : {')'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#84
ident -> ident_pattern_token Â· _disambiguate_template : {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}

#85
int_literal -> decimal_int_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#86
int_literal -> hex_int_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#87
float_literal -> decimal_float_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#88
float_literal -> hex_float_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#89
bool_literal -> 'true' Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#90
bool_literal -> 'false' Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#91
ident_pattern_token -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â· : {/\u200B_disambiguate_template/}

#92
decimal_int_literal -> /0[iu]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#93
decimal_int_literal -> /[1-9][0-9]*[iu]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#94
hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#95
decimal_float_literal -> /0[fh]/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#96
decimal_float_literal -> /[1-9][0-9]*[fh]/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#97
decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#98
decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#99
decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#100
hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#101
hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#102
hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#103
function_decl -> function_decl/0.0 function_header Â· compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#104
function_header -> 'fn' Â· ident '(' function_header/0.3 ')' function_header/0.5 : {'{'}
ident -> Â· ident_pattern_token _disambiguate_template : {'('}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#105
struct_decl -> 'struct' ident Â· struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl -> Â· '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#106
type_alias_decl -> 'alias' ident Â· '=' type_specifier : {';'}

#107
global_constant_decl -> global_constant_decl/1.0 'override' Â· optionally_typed_ident global_constant_decl/1.3 : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {':' ';' '='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> Â· ident optionally_typed_ident/0.1 : {';' '='}

#108
global_constant_decl -> 'const' optionally_typed_ident Â· '=' expression : {';'}

#109
optionally_typed_ident -> ident Â· optionally_typed_ident/0.1 : {';' '='}
optionally_typed_ident/0.1 -> Â· ':' type_specifier : {';' '='}

#110
global_variable_decl -> global_variable_decl/0.0 variable_decl Â· global_variable_decl/0.2 : {';'}
global_variable_decl/0.2 -> Â· '=' expression : {';'}

#111
variable_decl -> 'var' Â· _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_template_args_start/}

#112
global_decl -> const_assert_statement ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#113
global_decl -> type_alias_decl ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#114
global_decl -> global_constant_decl ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#115
global_decl -> global_variable_decl ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#116
translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 Â· : {EndOfText}

#117
enable_directive -> 'enable' enable_extension_name ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#118
software_extension_list -> software_extension_name software_extension_list/0.1 Â· software_extension_list/0.2 : {';'}
software_extension_list/0.2 -> Â· ',' : {';'}

#119
software_extension_list/0.1 -> software_extension_list/0.1/0 Â· : {',' ';'}

#120
software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 Â· software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0 -> Â· software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0/0.0 -> Â· ',' software_extension_name : {',' ';'}

#121
software_extension_list/0.1/0/0.0 -> ',' Â· software_extension_name : {',' ';'}
software_extension_name -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' ';'}

#122
requires_directive -> 'requires' software_extension_list ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#123
software_extension_list/0.1/0/0.0 -> ',' software_extension_name Â· : {',' ';'}

#124
software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 Â· : {',' ';'}

#125
software_extension_list -> software_extension_name software_extension_list/0.1 software_extension_list/0.2 Â· : {';'}

#126
software_extension_list/0.2 -> ',' Â· : {';'}

#127
variable_decl -> 'var' _disambiguate_template Â· variable_decl/0.2 optionally_typed_ident : {';' '='}
_template_args_start -> Â· /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_list -> Â· _template_args_start template_arg_comma_list _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_decl/0.2 -> Â· template_list : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#128
_disambiguate_template -> /\u200B_disambiguate_template/ Â· : {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_disambiguate_template/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/ /\u200B_template_args_start/}

#129
global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 Â· : {';'}

#130
global_variable_decl/0.2 -> '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#131
optionally_typed_ident -> ident optionally_typed_ident/0.1 Â· : {';' '='}

#132
optionally_typed_ident/0.1 -> ':' Â· type_specifier : {';' '='}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {';' '='}

#133
global_constant_decl -> 'const' optionally_typed_ident '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#134
global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident Â· global_constant_decl/1.3 : {';'}
global_constant_decl/1.3 -> Â· '=' expression : {';'}

#135
type_alias_decl -> 'alias' ident '=' Â· type_specifier : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {';'}

#136
struct_decl -> 'struct' ident struct_body_decl Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#137
struct_body_decl -> '{' Â· struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> Â· struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> Â· struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> Â· attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#138
function_header -> 'fn' ident Â· '(' function_header/0.3 ')' function_header/0.5 : {'{'}

#139
function_decl -> function_decl/0.0 function_header compound_statement Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#140
compound_statement -> '{' Â· compound_statement/0.1 '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.1 -> Â· compound_statement/0.1/0 : {'}'}
compound_statement/0.1/0 -> Â· statement compound_statement/0.1/0 : {'}'}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#141
ident -> ident_pattern_token _disambiguate_template Â· : {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}

#142
paren_expression -> '(' expression Â· ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#143
template_elaborated_ident -> ident _disambiguate_template Â· template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_start -> Â· /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_elaborated_ident/0.2 -> Â· template_list : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_list -> Â· _template_args_start template_arg_comma_list _template_args_end : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#144
primary_expression -> 'bitcast' _disambiguate_template Â· _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_start -> Â· /\u200B_template_args_start/ : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#145
call_expression -> template_elaborated_ident argument_expression_list Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#146
argument_expression_list -> '(' Â· argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
argument_expression_list/0.1 -> Â· expression_comma_list : {')'}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
expression_comma_list -> Â· expression expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#147
singular_expression -> primary_expression singular_expression/0.1 Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#148
singular_expression/0.1 -> component_or_swizzle_specifier Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#149
component_or_swizzle_specifier -> '[' Â· expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {']'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {']'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {']'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {']'}
expression -> Â· relational_expression : {']'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {']'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {']'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ']' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#150
component_or_swizzle_specifier -> '.' Â· member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> '.' Â· swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
member_ident -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[rgba][rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[xyzw][xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#151
unary_expression -> '&' unary_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#152
unary_expression -> '*' unary_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#153
unary_expression -> '~' unary_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#154
unary_expression -> '!' unary_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#155
unary_expression -> '-' unary_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#156
multiplicative_expression -> multiplicative_expression multiplicative_operator Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#157
multiplicative_operator -> '*' Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#158
multiplicative_operator -> '/' Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#159
multiplicative_operator -> '%' Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#160
shift_expression -> unary_expression _shift_left Â· unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#161
shift_expression -> unary_expression _shift_right Â· unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#162
_shift_left -> /\u200B_shift_left/ Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#163
_shift_right -> /\u200B_shift_right/ Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#164
additive_expression -> additive_expression additive_operator Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#165
additive_operator -> '+' Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#166
additive_operator -> '-' Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#167
binary_xor_expression -> binary_xor_expression '^' Â· unary_expression : {'^'}
bitwise_expression -> binary_xor_expression '^' Â· unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> Â· bool_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> Â· float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> Â· int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> Â· literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'(' ')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}

#168
binary_or_expression -> binary_or_expression '|' Â· unary_expression : {'|'}
bitwise_expression -> binary_or_expression '|' Â· unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> Â· bool_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> Â· float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> Â· int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> Â· literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'(' ')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}

#169
binary_and_expression -> binary_and_expression '&' Â· unary_expression : {'&'}
bitwise_expression -> binary_and_expression '&' Â· unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> Â· bool_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> Â· float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> Â· int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> Â· literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'&' '(' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#170
relational_expression -> shift_expression _less_than Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#171
relational_expression -> shift_expression _greater_than Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#172
relational_expression -> shift_expression _less_than_equal Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#173
relational_expression -> shift_expression _greater_than_equal Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#174
relational_expression -> shift_expression '==' Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#175
relational_expression -> shift_expression '!=' Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#176
_less_than -> /\u200B_less_than/ Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#177
_greater_than -> /\u200B_greater_than/ Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#178
_less_than_equal -> /\u200B_less_than_equal/ Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#179
_greater_than_equal -> /\u200B_greater_than_equal/ Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#180
expression -> short_circuit_and_expression '&&' Â· relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' Â· relational_expression : {'&&'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#181
expression -> short_circuit_or_expression '||' Â· relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' Â· relational_expression : {'||'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> Â· 'false' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· decimal_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#182
attribute -> '@' 'workgroup_size' '(' Â· expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' Â· expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#183
attribute -> '@' 'size' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#184
attribute -> '@' 'location' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#185
attribute -> '@' 'interpolate' '(' Â· expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#186
attribute -> '@' 'id' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#187
attribute -> '@' 'group' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#188
attribute -> '@' 'builtin' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#189
attribute -> '@' 'binding' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#190
attribute -> '@' 'align' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#191
attribute -> '@' 'align' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#192
attribute -> '@' 'binding' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#193
attribute -> '@' 'builtin' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#194
attribute -> '@' 'group' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#195
attribute -> '@' 'id' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#196
attribute -> '@' 'interpolate' '(' expression Â· ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#197
attribute -> '@' 'location' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#198
attribute -> '@' 'size' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#199
attribute -> '@' 'workgroup_size' '(' expression Â· ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression Â· ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#200
expression -> short_circuit_or_expression '||' relational_expression Â· : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression Â· : {'||'}

#201
multiplicative_expression -> unary_expression Â· : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression Â· _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression Â· _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
_shift_left -> Â· /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> Â· /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#202
expression -> short_circuit_and_expression '&&' relational_expression Â· : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression Â· : {'&&'}

#203
relational_expression -> shift_expression '!=' shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#204
relational_expression -> shift_expression '==' shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#205
relational_expression -> shift_expression _greater_than_equal shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#206
relational_expression -> shift_expression _less_than_equal shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#207
relational_expression -> shift_expression _greater_than shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#208
relational_expression -> shift_expression _less_than shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#209
binary_and_expression -> binary_and_expression '&' unary_expression Â· : {'&'}
bitwise_expression -> binary_and_expression '&' unary_expression Â· : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#210
binary_or_expression -> binary_or_expression '|' unary_expression Â· : {'|'}
bitwise_expression -> binary_or_expression '|' unary_expression Â· : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#211
binary_xor_expression -> binary_xor_expression '^' unary_expression Â· : {'^'}
bitwise_expression -> binary_xor_expression '^' unary_expression Â· : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#212
additive_expression -> additive_expression additive_operator multiplicative_expression Â· : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression Â· multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> Â· '%' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> Â· '*' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> Â· '/' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#213
multiplicative_expression -> unary_expression Â· : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#214
shift_expression -> unary_expression _shift_right unary_expression Â· : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#215
shift_expression -> unary_expression _shift_left unary_expression Â· : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#216
multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression Â· : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#217
component_or_swizzle_specifier -> '.' member_ident Â· component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2 -> Â· component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#218
component_or_swizzle_specifier -> '.' swizzle_name Â· component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2 -> Â· component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#219
member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#220
swizzle_name -> '/[rgba]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#221
swizzle_name -> '/[rgba][rgba]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#222
swizzle_name -> '/[rgba][rgba][rgba]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#223
swizzle_name -> '/[rgba][rgba][rgba][rgba]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#224
swizzle_name -> '/[xyzw]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#225
swizzle_name -> '/[xyzw][xyzw]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#226
swizzle_name -> '/[xyzw][xyzw][xyzw]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#227
swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#228
component_or_swizzle_specifier -> '[' expression Â· ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#229
argument_expression_list -> '(' argument_expression_list/0.1 Â· ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#230
argument_expression_list/0.1 -> expression_comma_list Â· : {')'}

#231
expression_comma_list -> expression Â· expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
expression_comma_list/0.1 -> Â· expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> Â· expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> Â· ',' expression : {')' ','}

#232
primary_expression -> 'bitcast' _disambiguate_template _template_args_start Â· type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {/\u200B_template_args_end/}

#233
_template_args_start -> /\u200B_template_args_start/ Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#234
template_elaborated_ident -> ident _disambiguate_template template_elaborated_ident/0.2 Â· : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#235
template_elaborated_ident/0.2 -> template_list Â· : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#236
template_list -> _template_args_start Â· template_arg_comma_list _template_args_end : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {',' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_arg_comma_list -> Â· template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 : {/\u200B_template_args_end/}
template_arg_expression -> Â· bitwise_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· short_circuit_and_expression '&&' relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· short_circuit_or_expression '||' relational_expression : {',' /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#237
paren_expression -> '(' expression ')' Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#238
compound_statement -> '{' compound_statement/0.1 Â· '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#239
compound_statement/0.1 -> compound_statement/0.1/0 Â· : {'}'}

#240
compound_statement/0.1/0 -> statement Â· compound_statement/0.1/0 : {'}'}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.1/0 -> Â· statement compound_statement/0.1/0 : {'}'}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#241
statement -> ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#242
statement -> return_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#243
statement -> if_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#244
statement -> switch_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#245
statement -> loop_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#246
statement -> for_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#247
statement -> while_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#248
statement -> func_call_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#249
statement -> variable_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#250
statement -> break_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#251
statement -> continue_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#252
statement -> 'discard' Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#253
statement -> variable_updating_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#254
statement -> compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#255
statement -> const_assert_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#256
return_statement -> 'return' Â· return_statement/0.1 : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
return_statement/0.1 -> Â· expression : {';'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#257
if_statement -> if_clause Â· if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> Â· 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1 -> Â· if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1/0 -> Â· else_if_clause if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#258
switch_statement -> 'switch' Â· expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {'{'}
expression -> Â· relational_expression : {'{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#259
loop_statement -> 'loop' Â· '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#260
for_statement -> 'for' Â· '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#261
while_statement -> 'while' Â· expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {'{'}
expression -> Â· relational_expression : {'{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#262
func_call_statement -> template_elaborated_ident Â· argument_expression_list : {')' ';'}
argument_expression_list -> Â· '(' argument_expression_list/0.1 ')' : {')' ';'}

#263
variable_statement -> variable_decl Â· '=' expression : {';'}
variable_statement -> variable_decl Â· : {';'}

#264
variable_statement -> 'let' Â· optionally_typed_ident '=' expression : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {':' '='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> Â· ident optionally_typed_ident/0.1 : {'='}

#265
variable_statement -> 'const' Â· optionally_typed_ident '=' expression : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {':' '='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> Â· ident optionally_typed_ident/0.1 : {'='}

#266
break_statement -> 'break' Â· : {';'}

#267
continue_statement -> 'continue' Â· : {';'}

#268
variable_updating_statement -> assignment_statement Â· : {')' ';'}

#269
variable_updating_statement -> increment_statement Â· : {')' ';'}

#270
variable_updating_statement -> decrement_statement Â· : {')' ';'}

#271
if_clause -> 'if' Â· expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {'{'}
expression -> Â· relational_expression : {'{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#272
core_lhs_expression -> ident Â· _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> ident Â· _disambiguate_template template_elaborated_ident/0.2 : {'('}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/ /\u200B_template_args_start/}

#273
assignment_statement -> lhs_expression Â· assignment_statement/0.1 expression : {')' ';'}
decrement_statement -> lhs_expression Â· '--' : {')' ';'}
increment_statement -> lhs_expression Â· '++' : {')' ';'}
_shift_left_assign -> Â· /\u200B_shift_left_assign/ : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right_assign -> Â· /\u200B_shift_right_assign/ : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> Â· '=' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> Â· compound_assignment_operator : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '%=' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '&=' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '*=' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '+=' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '-=' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '/=' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '^=' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '|=' : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· _shift_left_assign : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· _shift_right_assign : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#274
assignment_statement -> '_' Â· '=' expression : {')' ';'}

#275
lhs_expression -> core_lhs_expression Â· lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> Â· '.' member_ident component_or_swizzle_specifier/1.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> Â· '.' swizzle_name component_or_swizzle_specifier/2.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> Â· '[' expression ']' component_or_swizzle_specifier/0.3 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression/0.1 -> Â· component_or_swizzle_specifier : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#276
lhs_expression -> '*' Â· lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#277
lhs_expression -> '&' Â· lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#278
core_lhs_expression -> '(' Â· lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· '(' lhs_expression ')' : {')' '.' '['}
core_lhs_expression -> Â· ident _disambiguate_template : {')' '.' '['}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
lhs_expression -> Â· '&' lhs_expression : {')'}
lhs_expression -> Â· '*' lhs_expression : {')'}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {')'}

#279
function_header -> 'fn' ident '(' Â· function_header/0.3 ')' function_header/0.5 : {'{'}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.3 -> Â· param_list : {')'}
param -> Â· param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> Â· param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> Â· attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list -> Â· param param_list/0.1 param_list/0.2 : {')'}

#280
struct_body_decl -> '{' struct_member Â· struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.2 -> Â· struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> Â· struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> Â· ',' struct_member : {',' '}'}

#281
struct_member -> struct_member/0.0 Â· member_ident ':' type_specifier : {',' '}'}
member_ident -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':'}

#282
struct_member/0.0 -> struct_member/0.0/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#283
struct_member/0.0/0 -> attribute Â· struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> Â· attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#284
type_alias_decl -> 'alias' ident '=' type_specifier Â· : {';'}

#285
type_specifier -> ident Â· _disambiguate_template template_elaborated_ident/0.2 : {')' ',' ';' '=' '}' /\u200B_template_args_end/}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {')' ',' ';' '=' '}' /\u200B_template_args_end/ /\u200B_template_args_start/}

#286
global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 Â· : {';'}

#287
global_constant_decl/1.3 -> '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#288
global_constant_decl -> 'const' optionally_typed_ident '=' expression Â· : {';'}

#289
optionally_typed_ident/0.1 -> ':' type_specifier Â· : {';' '='}

#290
global_variable_decl/0.2 -> '=' expression Â· : {';'}

#291
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 Â· optionally_typed_ident : {';' '='}
ident -> Â· ident_pattern_token _disambiguate_template : {':' ';' '='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> Â· ident optionally_typed_ident/0.1 : {';' '='}

#292
variable_decl/0.2 -> template_list Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#293
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident Â· : {';' '='}

#294
global_constant_decl/1.3 -> '=' expression Â· : {';'}

#295
type_specifier -> ident _disambiguate_template Â· template_elaborated_ident/0.2 : {')' ',' ';' '=' '}' /\u200B_template_args_end/}
_template_args_start -> Â· /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_elaborated_ident/0.2 -> Â· template_list : {')' ',' ';' '=' '}' /\u200B_template_args_end/}
template_list -> Â· _template_args_start template_arg_comma_list _template_args_end : {')' ',' ';' '=' '}' /\u200B_template_args_end/}

#296
struct_member/0.0/0 -> attribute struct_member/0.0/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#297
struct_member -> struct_member/0.0 member_ident Â· ':' type_specifier : {',' '}'}

#298
struct_body_decl -> '{' struct_member struct_body_decl/0.2 Â· struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.3 -> Â· ',' : {'}'}

#299
struct_body_decl/0.2 -> struct_body_decl/0.2/0 Â· : {',' '}'}

#300
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 Â· struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> Â· struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> Â· ',' struct_member : {',' '}'}

#301
struct_body_decl/0.2/0/0.0 -> ',' Â· struct_member : {',' '}'}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> Â· struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> Â· struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> Â· attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#302
function_header -> 'fn' ident '(' function_header/0.3 Â· ')' function_header/0.5 : {'{'}

#303
function_header/0.3 -> param_list Â· : {')'}

#304
param_list -> param Â· param_list/0.1 param_list/0.2 : {')'}
param_list/0.1 -> Â· param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> Â· param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> Â· ',' param : {')' ','}

#305
param -> param/0.0 Â· ident ':' type_specifier : {')' ','}
ident -> Â· ident_pattern_token _disambiguate_template : {':'}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#306
param/0.0 -> param/0.0/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#307
param/0.0/0 -> attribute Â· param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> Â· attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#308
core_lhs_expression -> '(' lhs_expression Â· ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#309
core_lhs_expression -> ident Â· _disambiguate_template : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#310
lhs_expression -> '&' lhs_expression Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#311
lhs_expression -> '*' lhs_expression Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#312
lhs_expression -> core_lhs_expression lhs_expression/0.1 Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#313
lhs_expression/0.1 -> component_or_swizzle_specifier Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#314
assignment_statement -> '_' '=' Â· expression : {')' ';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ';'}
expression -> Â· relational_expression : {')' ';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#315
assignment_statement -> lhs_expression assignment_statement/0.1 Â· expression : {')' ';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ';'}
expression -> Â· relational_expression : {')' ';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#316
increment_statement -> lhs_expression '++' Â· : {')' ';'}

#317
decrement_statement -> lhs_expression '--' Â· : {')' ';'}

#318
assignment_statement/0.1 -> '=' Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#319
assignment_statement/0.1 -> compound_assignment_operator Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#320
compound_assignment_operator -> '+=' Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#321
compound_assignment_operator -> '-=' Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#322
compound_assignment_operator -> '*=' Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#323
compound_assignment_operator -> '/=' Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#324
compound_assignment_operator -> '%=' Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#325
compound_assignment_operator -> '&=' Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#326
compound_assignment_operator -> '|=' Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#327
compound_assignment_operator -> '^=' Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#328
compound_assignment_operator -> _shift_right_assign Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#329
compound_assignment_operator -> _shift_left_assign Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#330
_shift_right_assign -> /\u200B_shift_right_assign/ Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#331
_shift_left_assign -> /\u200B_shift_left_assign/ Â· : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#332
core_lhs_expression -> ident _disambiguate_template Â· : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> ident _disambiguate_template Â· template_elaborated_ident/0.2 : {'('}
_template_args_start -> Â· /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'bitcast' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_elaborated_ident/0.2 -> Â· template_list : {'('}
template_list -> Â· _template_args_start template_arg_comma_list _template_args_end : {'('}

#333
if_clause -> 'if' expression Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#334
variable_statement -> 'const' optionally_typed_ident Â· '=' expression : {';'}

#335
variable_statement -> 'let' optionally_typed_ident Â· '=' expression : {';'}

#336
variable_statement -> variable_decl '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#337
func_call_statement -> template_elaborated_ident argument_expression_list Â· : {')' ';'}

#338
while_statement -> 'while' expression Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#339
for_statement -> 'for' '(' Â· for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_header -> Â· for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 : {')'}
for_header/0.0 -> Â· for_init : {';'}
for_init -> Â· func_call_statement : {';'}
for_init -> Â· variable_statement : {';'}
for_init -> Â· variable_updating_statement : {';'}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}

#340
loop_statement -> 'loop' '{' Â· loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.2 -> Â· loop_statement/0.2/0 : {'continuing' '}'}
loop_statement/0.2/0 -> Â· statement loop_statement/0.2/0 : {'continuing' '}'}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#341
switch_statement -> 'switch' expression Â· '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#342
if_statement -> if_clause if_statement/0.1 Â· if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause -> Â· 'else' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2 -> Â· else_clause : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#343
if_statement/0.1 -> if_statement/0.1/0 Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#344
if_statement/0.1/0 -> else_if_clause Â· if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> Â· 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1/0 -> Â· else_if_clause if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#345
else_if_clause -> 'else' Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#346
return_statement -> 'return' return_statement/0.1 Â· : {';'}

#347
return_statement/0.1 -> expression Â· : {';'}

#348
statement -> const_assert_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#349
statement -> variable_updating_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#350
statement -> 'discard' ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#351
statement -> continue_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#352
statement -> break_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#353
statement -> variable_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#354
statement -> func_call_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#355
statement -> return_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#356
compound_statement/0.1/0 -> statement compound_statement/0.1/0 Â· : {'}'}

#357
compound_statement -> '{' compound_statement/0.1 '}' Â· : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#358
template_list -> _template_args_start template_arg_comma_list Â· _template_args_end : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_end -> Â· /\u200B_template_args_end/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#359
template_arg_comma_list -> template_arg_expression Â· template_arg_comma_list/0.1 template_arg_comma_list/0.2 : {/\u200B_template_args_end/}
template_arg_comma_list/0.1 -> Â· template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0 -> Â· template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0/0.0 -> Â· ',' template_arg_expression : {',' /\u200B_template_args_end/}

#360
short_circuit_and_expression -> relational_expression Â· : {'&&'}
short_circuit_or_expression -> relational_expression Â· : {'||'}
template_arg_expression -> relational_expression Â· : {',' /\u200B_template_args_end/}

#361
short_circuit_or_expression -> short_circuit_or_expression Â· '||' relational_expression : {'||'}
template_arg_expression -> short_circuit_or_expression Â· '||' relational_expression : {',' /\u200B_template_args_end/}

#362
short_circuit_and_expression -> short_circuit_and_expression Â· '&&' relational_expression : {'&&'}
template_arg_expression -> short_circuit_and_expression Â· '&&' relational_expression : {',' /\u200B_template_args_end/}

#363
template_arg_expression -> bitwise_expression Â· : {',' /\u200B_template_args_end/}

#364
primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier Â· _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_end -> Â· /\u200B_template_args_end/ : {'('}

#365
expression_comma_list -> expression expression_comma_list/0.1 Â· expression_comma_list/0.2 : {')'}
expression_comma_list/0.2 -> Â· ',' : {')'}

#366
expression_comma_list/0.1 -> expression_comma_list/0.1/0 Â· : {')' ','}

#367
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 Â· expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> Â· expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> Â· ',' expression : {')' ','}

#368
expression_comma_list/0.1/0/0.0 -> ',' Â· expression : {')' ','}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#369
argument_expression_list -> '(' argument_expression_list/0.1 ')' Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#370
component_or_swizzle_specifier -> '[' expression ']' Â· component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/0.3 -> Â· component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#371
component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#372
component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#373
component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#374
component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#375
attribute -> '@' 'workgroup_size' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#376
attrib_end/0.0 -> ',' Â· : {')'}
attribute -> '@' 'workgroup_size' '(' expression ',' Â· expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression ',' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#377
attrib_end -> attrib_end/0.0 Â· ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#378
attribute -> '@' 'size' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#379
attrib_end/0.0 -> ',' Â· : {')'}

#380
attribute -> '@' 'location' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#381
attribute -> '@' 'interpolate' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#382
attrib_end/0.0 -> ',' Â· : {')'}
attribute -> '@' 'interpolate' '(' expression ',' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#383
attribute -> '@' 'id' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#384
attribute -> '@' 'group' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#385
attribute -> '@' 'builtin' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#386
attribute -> '@' 'binding' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#387
attribute -> '@' 'align' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#388
attribute -> '@' 'interpolate' '(' expression ',' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#389
attrib_end -> attrib_end/0.0 ')' Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#390
attribute -> '@' 'workgroup_size' '(' expression ',' expression Â· ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression ',' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#391
component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#392
component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#393
expression_comma_list/0.1/0/0.0 -> ',' expression Â· : {')' ','}

#394
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 Â· : {')' ','}

#395
expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 Â· : {')'}

#396
expression_comma_list/0.2 -> ',' Â· : {')'}

#397
primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#398
_template_args_end -> /\u200B_template_args_end/ Â· : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#399
short_circuit_and_expression -> short_circuit_and_expression '&&' Â· relational_expression : {'&&'}
template_arg_expression -> short_circuit_and_expression '&&' Â· relational_expression : {',' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ',' /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'!=' '&&' ',' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ',' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ',' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#400
short_circuit_or_expression -> short_circuit_or_expression '||' Â· relational_expression : {'||'}
template_arg_expression -> short_circuit_or_expression '||' Â· relational_expression : {',' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'!=' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '!=' shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '==' shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {',' '||' /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'!=' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '(' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#401
template_arg_comma_list -> template_arg_expression template_arg_comma_list/0.1 Â· template_arg_comma_list/0.2 : {/\u200B_template_args_end/}
template_arg_comma_list/0.2 -> Â· ',' : {/\u200B_template_args_end/}

#402
template_arg_comma_list/0.1 -> template_arg_comma_list/0.1/0 Â· : {',' /\u200B_template_args_end/}

#403
template_arg_comma_list/0.1/0 -> template_arg_comma_list/0.1/0/0.0 Â· template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0 -> Â· template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0/0.0 -> Â· ',' template_arg_expression : {',' /\u200B_template_args_end/}

#404
template_arg_comma_list/0.1/0/0.0 -> ',' Â· template_arg_expression : {',' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {',' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_arg_expression -> Â· bitwise_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· short_circuit_and_expression '&&' relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· short_circuit_or_expression '||' relational_expression : {',' /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#405
template_list -> _template_args_start template_arg_comma_list _template_args_end Â· : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#406
else_if_clause -> 'else' 'if' Â· expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {'{'}
expression -> Â· relational_expression : {'{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#407
if_statement/0.1/0 -> else_if_clause if_statement/0.1/0 Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#408
if_statement -> if_clause if_statement/0.1 if_statement/0.2 Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#409
if_statement/0.2 -> else_clause Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#410
else_clause -> 'else' Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#411
switch_statement -> 'switch' expression '{' Â· switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
case_clause -> Â· 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> Â· 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body -> Â· case_clause : {'case' 'default' '}'}
switch_body -> Â· default_alone_clause : {'case' 'default' '}'}
switch_statement/0.3 -> Â· switch_statement/0.3/0 : {'}'}
switch_statement/0.3/0 -> Â· switch_body switch_statement/0.3/0 : {'}'}

#412
loop_statement -> 'loop' '{' loop_statement/0.2 Â· loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
continuing_statement -> Â· 'continuing' continuing_compound_statement : {'}'}
loop_statement/0.3 -> Â· continuing_statement : {'}'}

#413
loop_statement/0.2 -> loop_statement/0.2/0 Â· : {'continuing' '}'}

#414
loop_statement/0.2/0 -> statement Â· loop_statement/0.2/0 : {'continuing' '}'}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.2/0 -> Â· statement loop_statement/0.2/0 : {'continuing' '}'}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#415
for_statement -> 'for' '(' for_header Â· ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#416
for_header -> for_header/0.0 Â· ';' for_header/0.2 ';' for_header/0.4 : {')'}

#417
for_header/0.0 -> for_init Â· : {';'}

#418
for_init -> variable_statement Â· : {';'}

#419
for_init -> variable_updating_statement Â· : {';'}

#420
for_init -> func_call_statement Â· : {';'}

#421
while_statement -> 'while' expression compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#422
variable_statement -> variable_decl '=' expression Â· : {';'}

#423
variable_statement -> 'let' optionally_typed_ident '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#424
variable_statement -> 'const' optionally_typed_ident '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#425
if_clause -> 'if' expression compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#426
assignment_statement -> lhs_expression assignment_statement/0.1 expression Â· : {')' ';'}

#427
assignment_statement -> '_' '=' expression Â· : {')' ';'}

#428
core_lhs_expression -> ident _disambiguate_template Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#429
core_lhs_expression -> '(' lhs_expression ')' Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#430
param/0.0/0 -> attribute param/0.0/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#431
param -> param/0.0 ident Â· ':' type_specifier : {')' ','}

#432
param_list -> param param_list/0.1 Â· param_list/0.2 : {')'}
param_list/0.2 -> Â· ',' : {')'}

#433
param_list/0.1 -> param_list/0.1/0 Â· : {')' ','}

#434
param_list/0.1/0 -> param_list/0.1/0/0.0 Â· param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> Â· param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> Â· ',' param : {')' ','}

#435
param_list/0.1/0/0.0 -> ',' Â· param : {')' ','}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param -> Â· param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> Â· param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> Â· attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#436
function_header -> 'fn' ident '(' function_header/0.3 ')' Â· function_header/0.5 : {'{'}
function_header/0.5 -> Â· '->' function_header/0.5/0.1 template_elaborated_ident : {'{'}

#437
struct_body_decl/0.2/0/0.0 -> ',' struct_member Â· : {',' '}'}

#438
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 Â· : {',' '}'}

#439
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 Â· '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#440
struct_body_decl/0.3 -> ',' Â· : {'}'}

#441
struct_member -> struct_member/0.0 member_ident ':' Â· type_specifier : {',' '}'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {',' '}'}

#442
type_specifier -> ident _disambiguate_template template_elaborated_ident/0.2 Â· : {')' ',' ';' '=' '}' /\u200B_template_args_end/}

#443
struct_member -> struct_member/0.0 member_ident ':' type_specifier Â· : {',' '}'}

#444
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#445
function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 Â· : {'{'}

#446
function_header/0.5 -> '->' Â· function_header/0.5/0.1 template_elaborated_ident : {'{'}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1 -> Â· function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> Â· attribute function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#447
param_list/0.1/0/0.0 -> ',' param Â· : {')' ','}

#448
param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 Â· : {')' ','}

#449
param_list -> param param_list/0.1 param_list/0.2 Â· : {')'}

#450
param_list/0.2 -> ',' Â· : {')'}

#451
param -> param/0.0 ident ':' Â· type_specifier : {')' ','}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {')' ','}

#452
variable_statement -> 'const' optionally_typed_ident '=' expression Â· : {';'}

#453
variable_statement -> 'let' optionally_typed_ident '=' expression Â· : {';'}

#454
for_header -> for_header/0.0 ';' Â· for_header/0.2 ';' for_header/0.4 : {')'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
for_header/0.2 -> Â· expression : {';'}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#455
for_statement -> 'for' '(' for_header ')' Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#456
loop_statement/0.2/0 -> statement loop_statement/0.2/0 Â· : {'continuing' '}'}

#457
loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 Â· '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#458
loop_statement/0.3 -> continuing_statement Â· : {'}'}

#459
continuing_statement -> 'continuing' Â· continuing_compound_statement : {'}'}
continuing_compound_statement -> Â· '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' : {'}'}

#460
switch_statement -> 'switch' expression '{' switch_statement/0.3 Â· '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#461
switch_statement/0.3 -> switch_statement/0.3/0 Â· : {'}'}

#462
switch_statement/0.3/0 -> switch_body Â· switch_statement/0.3/0 : {'}'}
case_clause -> Â· 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> Â· 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body -> Â· case_clause : {'case' 'default' '}'}
switch_body -> Â· default_alone_clause : {'case' 'default' '}'}
switch_statement/0.3/0 -> Â· switch_body switch_statement/0.3/0 : {'}'}

#463
switch_body -> case_clause Â· : {'case' 'default' '}'}

#464
switch_body -> default_alone_clause Â· : {'case' 'default' '}'}

#465
case_clause -> 'case' Â· case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {',' ':' '{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {',' ':' '{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {',' ':' '{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
case_selector -> Â· 'default' : {',' ':' '{'}
case_selector -> Â· expression : {',' ':' '{'}
case_selectors -> Â· case_selector case_selectors/0.1 case_selectors/0.2 : {':' '{'}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {',' ':' '{'}
expression -> Â· relational_expression : {',' ':' '{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {',' ':' '{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {',' ':' '{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#466
default_alone_clause -> 'default' Â· default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
default_alone_clause/0.1 -> Â· ':' : {'{'}

#467
else_clause -> 'else' compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#468
else_if_clause -> 'else' 'if' expression Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#469
template_arg_comma_list/0.1/0/0.0 -> ',' template_arg_expression Â· : {',' /\u200B_template_args_end/}

#470
template_arg_comma_list/0.1/0 -> template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 Â· : {',' /\u200B_template_args_end/}

#471
template_arg_comma_list -> template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 Â· : {/\u200B_template_args_end/}

#472
template_arg_comma_list/0.2 -> ',' Â· : {/\u200B_template_args_end/}

#473
short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression Â· : {'||'}
template_arg_expression -> short_circuit_or_expression '||' relational_expression Â· : {',' /\u200B_template_args_end/}

#474
short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression Â· : {'&&'}
template_arg_expression -> short_circuit_and_expression '&&' relational_expression Â· : {',' /\u200B_template_args_end/}

#475
primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#476
attribute -> '@' 'workgroup_size' '(' expression ',' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#477
attrib_end/0.0 -> ',' Â· : {')'}
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#478
attribute -> '@' 'interpolate' '(' expression ',' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#479
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#480
else_if_clause -> 'else' 'if' expression compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#481
default_alone_clause -> 'default' default_alone_clause/0.1 Â· compound_statement : {'case' 'default' '}'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'case' 'default' '}'}

#482
default_alone_clause/0.1 -> ':' Â· : {'{'}

#483
case_clause -> 'case' case_selectors Â· case_clause/0.2 compound_statement : {'case' 'default' '}'}
case_clause/0.2 -> Â· ':' : {'{'}

#484
case_selectors -> case_selector Â· case_selectors/0.1 case_selectors/0.2 : {':' '{'}
case_selectors/0.1 -> Â· case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0 -> Â· case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0/0.0 -> Â· ',' case_selector : {',' ':' '{'}

#485
case_selector -> 'default' Â· : {',' ':' '{'}

#486
case_selector -> expression Â· : {',' ':' '{'}

#487
switch_statement/0.3/0 -> switch_body switch_statement/0.3/0 Â· : {'}'}

#488
switch_statement -> 'switch' expression '{' switch_statement/0.3 '}' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#489
continuing_statement -> 'continuing' continuing_compound_statement Â· : {'}'}

#490
continuing_compound_statement -> '{' Â· continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' : {'}'}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
continuing_compound_statement/0.1 -> Â· continuing_compound_statement/0.1/0 : {'break' '}'}
continuing_compound_statement/0.1/0 -> Â· statement continuing_compound_statement/0.1/0 : {'break' '}'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#491
loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#492
for_statement -> 'for' '(' for_header ')' compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#493
for_header -> for_header/0.0 ';' for_header/0.2 Â· ';' for_header/0.4 : {')'}

#494
for_header/0.2 -> expression Â· : {';'}

#495
param -> param/0.0 ident ':' type_specifier Â· : {')' ','}

#496
function_header/0.5 -> '->' function_header/0.5/0.1 Â· template_elaborated_ident : {'{'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'{'}

#497
function_header/0.5/0.1 -> function_header/0.5/0.1/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#498
function_header/0.5/0.1/0 -> attribute Â· function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> Â· attribute function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#499
function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#500
function_header/0.5 -> '->' function_header/0.5/0.1 template_elaborated_ident Â· : {'{'}

#501
for_header -> for_header/0.0 ';' for_header/0.2 ';' Â· for_header/0.4 : {')'}
assignment_statement -> Â· '_' '=' expression : {')'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {')'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {')'}
for_header/0.4 -> Â· for_update : {')'}
for_update -> Â· func_call_statement : {')'}
for_update -> Â· variable_updating_statement : {')'}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {')'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
increment_statement -> Â· lhs_expression '++' : {')'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_updating_statement -> Â· assignment_statement : {')'}
variable_updating_statement -> Â· decrement_statement : {')'}
variable_updating_statement -> Â· increment_statement : {')'}

#502
continuing_compound_statement -> '{' continuing_compound_statement/0.1 Â· continuing_compound_statement/0.2 '}' : {'}'}
break_if_statement -> Â· 'break' 'if' expression ';' : {'}'}
continuing_compound_statement/0.2 -> Â· break_if_statement : {'}'}

#503
continuing_compound_statement/0.1 -> continuing_compound_statement/0.1/0 Â· : {'break' '}'}

#504
continuing_compound_statement/0.1/0 -> statement Â· continuing_compound_statement/0.1/0 : {'break' '}'}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
continuing_compound_statement/0.1/0 -> Â· statement continuing_compound_statement/0.1/0 : {'break' '}'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#505
case_selectors -> case_selector case_selectors/0.1 Â· case_selectors/0.2 : {':' '{'}
case_selectors/0.2 -> Â· ',' : {':' '{'}

#506
case_selectors/0.1 -> case_selectors/0.1/0 Â· : {',' ':' '{'}

#507
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 Â· case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0 -> Â· case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0/0.0 -> Â· ',' case_selector : {',' ':' '{'}

#508
case_selectors/0.1/0/0.0 -> ',' Â· case_selector : {',' ':' '{'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {',' ':' '{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {',' ':' '{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {',' ':' '{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
case_selector -> Â· 'default' : {',' ':' '{'}
case_selector -> Â· expression : {',' ':' '{'}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {',' ':' '{'}
expression -> Â· relational_expression : {',' ':' '{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {',' ':' '{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {',' ':' '{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#509
case_clause -> 'case' case_selectors case_clause/0.2 Â· compound_statement : {'case' 'default' '}'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'case' 'default' '}'}

#510
case_clause/0.2 -> ':' Â· : {'{'}

#511
default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement Â· : {'case' 'default' '}'}

#512
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#513
case_clause -> 'case' case_selectors case_clause/0.2 compound_statement Â· : {'case' 'default' '}'}

#514
case_selectors/0.1/0/0.0 -> ',' case_selector Â· : {',' ':' '{'}

#515
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 Â· : {',' ':' '{'}

#516
case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 Â· : {':' '{'}

#517
case_selectors/0.2 -> ',' Â· : {':' '{'}

#518
continuing_compound_statement/0.1/0 -> statement continuing_compound_statement/0.1/0 Â· : {'break' '}'}

#519
continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 Â· '}' : {'}'}

#520
continuing_compound_statement/0.2 -> break_if_statement Â· : {'}'}

#521
break_if_statement -> 'break' Â· 'if' expression ';' : {'}'}

#522
for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 Â· : {')'}

#523
for_header/0.4 -> for_update Â· : {')'}

#524
for_update -> variable_updating_statement Â· : {')'}

#525
for_update -> func_call_statement Â· : {')'}

#526
break_if_statement -> 'break' 'if' Â· expression ';' : {'}'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#527
continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' Â· : {'}'}

#528
break_if_statement -> 'break' 'if' expression Â· ';' : {'}'}

#529
break_if_statement -> 'break' 'if' expression ';' Â· : {'}'}


=Reductions:
r#0 translation_unit/0.0 -> translation_unit/0.0/0 Â·
r#1 global_directive -> enable_directive Â·
r#2 global_directive -> requires_directive Â·
r#3 software_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â·
r#4 enable_extension_name -> 'f16' Â·
r#5 translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 Â·
r#6 translation_unit -> translation_unit/0.0 translation_unit/0.1 Â·
r#7 translation_unit/0.1 -> translation_unit/0.1/0 Â·
r#8 global_decl -> ';' Â·
r#9 global_decl -> struct_decl Â·
r#10 global_decl -> function_decl Â·
r#11 global_variable_decl/0.0 -> global_variable_decl/0.0/0 Â·
r#12 global_constant_decl/1.0 -> global_constant_decl/1.0/0 Â·
r#13 function_decl/0.0 -> function_decl/0.0/0 Â·
r#14 attribute -> '@' 'const' Â·
r#15 attribute -> '@' 'invariant' Â·
r#16 attribute -> '@' 'must_use' Â·
r#17 attribute -> '@' 'vertex' Â·
r#18 attribute -> '@' 'fragment' Â·
r#19 attribute -> '@' 'compute' Â·
r#20 global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 Â·
r#21 global_constant_decl/1.0/0 -> attribute global_constant_decl/1.0/0 Â·
r#22 function_decl/0.0/0 -> attribute function_decl/0.0/0 Â·
r#23 const_assert_statement -> 'const_assert' expression Â·
r#24 expression -> relational_expression Â·
r#25 short_circuit_or_expression -> relational_expression Â·
r#26 short_circuit_and_expression -> relational_expression Â·
r#27 expression -> bitwise_expression Â·
r#28 relational_expression -> shift_expression Â·
r#29 shift_expression -> additive_expression Â·
r#30 binary_and_expression -> unary_expression Â·
r#31 binary_or_expression -> unary_expression Â·
r#32 binary_xor_expression -> unary_expression Â·
r#33 multiplicative_expression -> unary_expression Â·
r#34 additive_expression -> multiplicative_expression Â·
r#35 unary_expression -> singular_expression Â·
r#36 primary_expression -> template_elaborated_ident Â·
r#37 primary_expression -> call_expression Â·
r#38 primary_expression -> literal Â·
r#39 primary_expression -> paren_expression Â·
r#40 literal -> int_literal Â·
r#41 literal -> float_literal Â·
r#42 literal -> bool_literal Â·
r#43 int_literal -> decimal_int_literal Â·
r#44 int_literal -> hex_int_literal Â·
r#45 float_literal -> decimal_float_literal Â·
r#46 float_literal -> hex_float_literal Â·
r#47 bool_literal -> 'true' Â·
r#48 bool_literal -> 'false' Â·
r#49 ident_pattern_token -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â·
r#50 decimal_int_literal -> /0[iu]?/ Â·
r#51 decimal_int_literal -> /[1-9][0-9]*[iu]?/ Â·
r#52 hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ Â·
r#53 decimal_float_literal -> /0[fh]/ Â·
r#54 decimal_float_literal -> /[1-9][0-9]*[fh]/ Â·
r#55 decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ Â·
r#56 decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ Â·
r#57 decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ Â·
r#58 hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ Â·
r#59 hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ Â·
r#60 hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ Â·
r#61 global_decl -> const_assert_statement ';' Â·
r#62 global_decl -> type_alias_decl ';' Â·
r#63 global_decl -> global_constant_decl ';' Â·
r#64 global_decl -> global_variable_decl ';' Â·
r#65 translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 Â·
r#66 enable_directive -> 'enable' enable_extension_name ';' Â·
r#67 software_extension_list/0.1 -> software_extension_list/0.1/0 Â·
r#68 requires_directive -> 'requires' software_extension_list ';' Â·
r#69 software_extension_list/0.1/0/0.0 -> ',' software_extension_name Â·
r#70 software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 Â·
r#71 software_extension_list -> software_extension_name software_extension_list/0.1 software_extension_list/0.2 Â·
r#72 software_extension_list/0.2 -> ',' Â·
r#73 _disambiguate_template -> /\u200B_disambiguate_template/ Â·
r#74 global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 Â·
r#75 optionally_typed_ident -> ident optionally_typed_ident/0.1 Â·
r#76 struct_decl -> 'struct' ident struct_body_decl Â·
r#77 function_decl -> function_decl/0.0 function_header compound_statement Â·
r#78 ident -> ident_pattern_token _disambiguate_template Â·
r#79 call_expression -> template_elaborated_ident argument_expression_list Â·
r#80 singular_expression -> primary_expression singular_expression/0.1 Â·
r#81 singular_expression/0.1 -> component_or_swizzle_specifier Â·
r#82 unary_expression -> '&' unary_expression Â·
r#83 unary_expression -> '*' unary_expression Â·
r#84 unary_expression -> '~' unary_expression Â·
r#85 unary_expression -> '!' unary_expression Â·
r#86 unary_expression -> '-' unary_expression Â·
r#87 multiplicative_operator -> '*' Â·
r#88 multiplicative_operator -> '/' Â·
r#89 multiplicative_operator -> '%' Â·
r#90 _shift_left -> /\u200B_shift_left/ Â·
r#91 _shift_right -> /\u200B_shift_right/ Â·
r#92 additive_operator -> '+' Â·
r#93 additive_operator -> '-' Â·
r#94 _less_than -> /\u200B_less_than/ Â·
r#95 _greater_than -> /\u200B_greater_than/ Â·
r#96 _less_than_equal -> /\u200B_less_than_equal/ Â·
r#97 _greater_than_equal -> /\u200B_greater_than_equal/ Â·
r#98 expression -> short_circuit_or_expression '||' relational_expression Â·
r#99 short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression Â·
r#100 expression -> short_circuit_and_expression '&&' relational_expression Â·
r#101 short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression Â·
r#102 relational_expression -> shift_expression '!=' shift_expression Â·
r#103 relational_expression -> shift_expression '==' shift_expression Â·
r#104 relational_expression -> shift_expression _greater_than_equal shift_expression Â·
r#105 relational_expression -> shift_expression _less_than_equal shift_expression Â·
r#106 relational_expression -> shift_expression _greater_than shift_expression Â·
r#107 relational_expression -> shift_expression _less_than shift_expression Â·
r#108 bitwise_expression -> binary_and_expression '&' unary_expression Â·
r#109 binary_and_expression -> binary_and_expression '&' unary_expression Â·
r#110 bitwise_expression -> binary_or_expression '|' unary_expression Â·
r#111 binary_or_expression -> binary_or_expression '|' unary_expression Â·
r#112 bitwise_expression -> binary_xor_expression '^' unary_expression Â·
r#113 binary_xor_expression -> binary_xor_expression '^' unary_expression Â·
r#114 additive_expression -> additive_expression additive_operator multiplicative_expression Â·
r#115 shift_expression -> unary_expression _shift_right unary_expression Â·
r#116 shift_expression -> unary_expression _shift_left unary_expression Â·
r#117 multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression Â·
r#118 member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â·
r#119 swizzle_name -> '/[rgba]/' Â·
r#120 swizzle_name -> '/[rgba][rgba]/' Â·
r#121 swizzle_name -> '/[rgba][rgba][rgba]/' Â·
r#122 swizzle_name -> '/[rgba][rgba][rgba][rgba]/' Â·
r#123 swizzle_name -> '/[xyzw]/' Â·
r#124 swizzle_name -> '/[xyzw][xyzw]/' Â·
r#125 swizzle_name -> '/[xyzw][xyzw][xyzw]/' Â·
r#126 swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' Â·
r#127 argument_expression_list/0.1 -> expression_comma_list Â·
r#128 _template_args_start -> /\u200B_template_args_start/ Â·
r#129 template_elaborated_ident -> ident _disambiguate_template template_elaborated_ident/0.2 Â·
r#130 template_elaborated_ident/0.2 -> template_list Â·
r#131 paren_expression -> '(' expression ')' Â·
r#132 compound_statement/0.1 -> compound_statement/0.1/0 Â·
r#133 statement -> ';' Â·
r#134 statement -> if_statement Â·
r#135 statement -> switch_statement Â·
r#136 statement -> loop_statement Â·
r#137 statement -> for_statement Â·
r#138 statement -> while_statement Â·
r#139 statement -> compound_statement Â·
r#140 variable_statement -> variable_decl Â·
r#141 break_statement -> 'break' Â·
r#142 continue_statement -> 'continue' Â·
r#143 variable_updating_statement -> assignment_statement Â·
r#144 variable_updating_statement -> increment_statement Â·
r#145 variable_updating_statement -> decrement_statement Â·
r#146 struct_member/0.0 -> struct_member/0.0/0 Â·
r#147 type_alias_decl -> 'alias' ident '=' type_specifier Â·
r#148 global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 Â·
r#149 global_constant_decl -> 'const' optionally_typed_ident '=' expression Â·
r#150 optionally_typed_ident/0.1 -> ':' type_specifier Â·
r#151 global_variable_decl/0.2 -> '=' expression Â·
r#152 variable_decl/0.2 -> template_list Â·
r#153 variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident Â·
r#154 global_constant_decl/1.3 -> '=' expression Â·
r#155 struct_member/0.0/0 -> attribute struct_member/0.0/0 Â·
r#156 struct_body_decl/0.2 -> struct_body_decl/0.2/0 Â·
r#157 function_header/0.3 -> param_list Â·
r#158 param/0.0 -> param/0.0/0 Â·
r#159 lhs_expression -> '&' lhs_expression Â·
r#160 lhs_expression -> '*' lhs_expression Â·
r#161 lhs_expression -> core_lhs_expression lhs_expression/0.1 Â·
r#162 lhs_expression/0.1 -> component_or_swizzle_specifier Â·
r#163 increment_statement -> lhs_expression '++' Â·
r#164 decrement_statement -> lhs_expression '--' Â·
r#165 assignment_statement/0.1 -> '=' Â·
r#166 assignment_statement/0.1 -> compound_assignment_operator Â·
r#167 compound_assignment_operator -> '+=' Â·
r#168 compound_assignment_operator -> '-=' Â·
r#169 compound_assignment_operator -> '*=' Â·
r#170 compound_assignment_operator -> '/=' Â·
r#171 compound_assignment_operator -> '%=' Â·
r#172 compound_assignment_operator -> '&=' Â·
r#173 compound_assignment_operator -> '|=' Â·
r#174 compound_assignment_operator -> '^=' Â·
r#175 compound_assignment_operator -> _shift_right_assign Â·
r#176 compound_assignment_operator -> _shift_left_assign Â·
r#177 _shift_right_assign -> /\u200B_shift_right_assign/ Â·
r#178 _shift_left_assign -> /\u200B_shift_left_assign/ Â·
r#179 core_lhs_expression -> ident _disambiguate_template Â·
r#180 func_call_statement -> template_elaborated_ident argument_expression_list Â·
r#181 if_statement/0.1 -> if_statement/0.1/0 Â·
r#182 return_statement -> 'return' return_statement/0.1 Â·
r#183 return_statement/0.1 -> expression Â·
r#184 statement -> const_assert_statement ';' Â·
r#185 statement -> variable_updating_statement ';' Â·
r#186 statement -> 'discard' ';' Â·
r#187 statement -> continue_statement ';' Â·
r#188 statement -> break_statement ';' Â·
r#189 statement -> variable_statement ';' Â·
r#190 statement -> func_call_statement ';' Â·
r#191 statement -> return_statement ';' Â·
r#192 compound_statement/0.1/0 -> statement compound_statement/0.1/0 Â·
r#193 compound_statement -> '{' compound_statement/0.1 '}' Â·
r#194 template_arg_expression -> relational_expression Â·
r#195 template_arg_expression -> bitwise_expression Â·
r#196 expression_comma_list/0.1 -> expression_comma_list/0.1/0 Â·
r#197 argument_expression_list -> '(' argument_expression_list/0.1 ')' Â·
r#198 component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 Â·
r#199 component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier Â·
r#200 component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 Â·
r#201 component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier Â·
r#202 attribute -> '@' 'workgroup_size' '(' expression attrib_end Â·
r#203 attrib_end/0.0 -> ',' Â·
r#204 attribute -> '@' 'size' '(' expression attrib_end Â·
r#205 attribute -> '@' 'location' '(' expression attrib_end Â·
r#206 attribute -> '@' 'interpolate' '(' expression attrib_end Â·
r#207 attribute -> '@' 'id' '(' expression attrib_end Â·
r#208 attribute -> '@' 'group' '(' expression attrib_end Â·
r#209 attribute -> '@' 'builtin' '(' expression attrib_end Â·
r#210 attribute -> '@' 'binding' '(' expression attrib_end Â·
r#211 attribute -> '@' 'align' '(' expression attrib_end Â·
r#212 attrib_end -> attrib_end/0.0 ')' Â·
r#213 component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 Â·
r#214 component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier Â·
r#215 expression_comma_list/0.1/0/0.0 -> ',' expression Â·
r#216 expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 Â·
r#217 expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 Â·
r#218 expression_comma_list/0.2 -> ',' Â·
r#219 _template_args_end -> /\u200B_template_args_end/ Â·
r#220 template_arg_comma_list/0.1 -> template_arg_comma_list/0.1/0 Â·
r#221 template_list -> _template_args_start template_arg_comma_list _template_args_end Â·
r#222 if_statement/0.1/0 -> else_if_clause if_statement/0.1/0 Â·
r#223 if_statement -> if_clause if_statement/0.1 if_statement/0.2 Â·
r#224 if_statement/0.2 -> else_clause Â·
r#225 loop_statement/0.2 -> loop_statement/0.2/0 Â·
r#226 for_header/0.0 -> for_init Â·
r#227 for_init -> variable_statement Â·
r#228 for_init -> variable_updating_statement Â·
r#229 for_init -> func_call_statement Â·
r#230 while_statement -> 'while' expression compound_statement Â·
r#231 variable_statement -> variable_decl '=' expression Â·
r#232 if_clause -> 'if' expression compound_statement Â·
r#233 assignment_statement -> lhs_expression assignment_statement/0.1 expression Â·
r#234 assignment_statement -> '_' '=' expression Â·
r#235 core_lhs_expression -> '(' lhs_expression ')' Â·
r#236 param/0.0/0 -> attribute param/0.0/0 Â·
r#237 param_list/0.1 -> param_list/0.1/0 Â·
r#238 struct_body_decl/0.2/0/0.0 -> ',' struct_member Â·
r#239 struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 Â·
r#240 struct_body_decl/0.3 -> ',' Â·
r#241 type_specifier -> ident _disambiguate_template template_elaborated_ident/0.2 Â·
r#242 struct_member -> struct_member/0.0 member_ident ':' type_specifier Â·
r#243 struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' Â·
r#244 function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 Â·
r#245 param_list/0.1/0/0.0 -> ',' param Â·
r#246 param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 Â·
r#247 param_list -> param param_list/0.1 param_list/0.2 Â·
r#248 param_list/0.2 -> ',' Â·
r#249 variable_statement -> 'const' optionally_typed_ident '=' expression Â·
r#250 variable_statement -> 'let' optionally_typed_ident '=' expression Â·
r#251 loop_statement/0.2/0 -> statement loop_statement/0.2/0 Â·
r#252 loop_statement/0.3 -> continuing_statement Â·
r#253 switch_statement/0.3 -> switch_statement/0.3/0 Â·
r#254 switch_body -> case_clause Â·
r#255 switch_body -> default_alone_clause Â·
r#256 else_clause -> 'else' compound_statement Â·
r#257 template_arg_comma_list/0.1/0/0.0 -> ',' template_arg_expression Â·
r#258 template_arg_comma_list/0.1/0 -> template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 Â·
r#259 template_arg_comma_list -> template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 Â·
r#260 template_arg_comma_list/0.2 -> ',' Â·
r#261 template_arg_expression -> short_circuit_or_expression '||' relational_expression Â·
r#262 template_arg_expression -> short_circuit_and_expression '&&' relational_expression Â·
r#263 primary_expression -> 'bitcast' _disambiguate_template _template_args_start type_specifier _template_args_end paren_expression Â·
r#264 attribute -> '@' 'workgroup_size' '(' expression ',' expression attrib_end Â·
r#265 attribute -> '@' 'interpolate' '(' expression ',' expression attrib_end Â·
r#266 else_if_clause -> 'else' 'if' expression compound_statement Â·
r#267 default_alone_clause/0.1 -> ':' Â·
r#268 case_selector -> 'default' Â·
r#269 case_selector -> expression Â·
r#270 switch_statement/0.3/0 -> switch_body switch_statement/0.3/0 Â·
r#271 switch_statement -> 'switch' expression '{' switch_statement/0.3 '}' Â·
r#272 continuing_statement -> 'continuing' continuing_compound_statement Â·
r#273 loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' Â·
r#274 for_statement -> 'for' '(' for_header ')' compound_statement Â·
r#275 for_header/0.2 -> expression Â·
r#276 param -> param/0.0 ident ':' type_specifier Â·
r#277 function_header/0.5/0.1 -> function_header/0.5/0.1/0 Â·
r#278 function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 Â·
r#279 function_header/0.5 -> '->' function_header/0.5/0.1 template_elaborated_ident Â·
r#280 continuing_compound_statement/0.1 -> continuing_compound_statement/0.1/0 Â·
r#281 case_selectors/0.1 -> case_selectors/0.1/0 Â·
r#282 case_clause/0.2 -> ':' Â·
r#283 default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement Â·
r#284 attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end Â·
r#285 case_clause -> 'case' case_selectors case_clause/0.2 compound_statement Â·
r#286 case_selectors/0.1/0/0.0 -> ',' case_selector Â·
r#287 case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 Â·
r#288 case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 Â·
r#289 case_selectors/0.2 -> ',' Â·
r#290 continuing_compound_statement/0.1/0 -> statement continuing_compound_statement/0.1/0 Â·
r#291 continuing_compound_statement/0.2 -> break_if_statement Â·
r#292 for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 Â·
r#293 for_header/0.4 -> for_update Â·
r#294 for_update -> variable_updating_statement Â·
r#295 for_update -> func_call_statement Â·
r#296 continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' Â·
r#297 break_if_statement -> 'break' 'if' expression ';' Â·

=Action:
[#0 'enable']: s#7
[#0 'requires']: s#8
[#1 EndOfText]: acc
[#2 ';']: s#18
[#2 '@']: s#36
[#2 'alias']: s#28
[#2 'const']: s#26
[#2 'const_assert']: s#31
[#2 'struct']: s#29
[#3 ';']: r#0
[#3 '@']: r#0
[#3 'alias']: r#0
[#3 'const']: r#0
[#3 'const_assert']: r#0
[#3 'fn']: r#0
[#3 'override']: r#0
[#3 'struct']: r#0
[#3 'var']: r#0
[#3 EndOfText]: r#0
[#4 'enable']: s#7
[#4 'requires']: s#8
[#5 ';']: r#1
[#5 '@']: r#1
[#5 'alias']: r#1
[#5 'const']: r#1
[#5 'const_assert']: r#1
[#5 'enable']: r#1
[#5 'fn']: r#1
[#5 'override']: r#1
[#5 'requires']: r#1
[#5 'struct']: r#1
[#5 'var']: r#1
[#5 EndOfText]: r#1
[#6 ';']: r#2
[#6 '@']: r#2
[#6 'alias']: r#2
[#6 'const']: r#2
[#6 'const_assert']: r#2
[#6 'enable']: r#2
[#6 'fn']: r#2
[#6 'override']: r#2
[#6 'requires']: r#2
[#6 'struct']: r#2
[#6 'var']: r#2
[#6 EndOfText]: r#2
[#7 'f16']: s#13
[#8 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#11
[#9 ';']: s#122
[#10 ',']: s#121
[#11 ',']: r#3
[#11 ';']: r#3
[#12 ';']: s#117
[#13 ';']: r#4
[#14 ';']: r#5
[#14 '@']: r#5
[#14 'alias']: r#5
[#14 'const']: r#5
[#14 'const_assert']: r#5
[#14 'fn']: r#5
[#14 'override']: r#5
[#14 'struct']: r#5
[#14 'var']: r#5
[#14 EndOfText]: r#5
[#15 EndOfText]: r#6
[#16 EndOfText]: r#7
[#17 ';']: s#18
[#17 '@']: s#36
[#17 'alias']: s#28
[#17 'const']: s#26
[#17 'const_assert']: s#31
[#17 'struct']: s#29
[#18 ';']: r#8
[#18 '@']: r#8
[#18 'alias']: r#8
[#18 'const']: r#8
[#18 'const_assert']: r#8
[#18 'fn']: r#8
[#18 'override']: r#8
[#18 'struct']: r#8
[#18 'var']: r#8
[#18 EndOfText]: r#8
[#19 ';']: s#115
[#20 ';']: s#114
[#21 ';']: s#113
[#22 ';']: r#9
[#22 '@']: r#9
[#22 'alias']: r#9
[#22 'const']: r#9
[#22 'const_assert']: r#9
[#22 'fn']: r#9
[#22 'override']: r#9
[#22 'struct']: r#9
[#22 'var']: r#9
[#22 EndOfText]: r#9
[#23 ';']: r#10
[#23 '@']: r#10
[#23 'alias']: r#10
[#23 'const']: r#10
[#23 'const_assert']: r#10
[#23 'fn']: r#10
[#23 'override']: r#10
[#23 'struct']: r#10
[#23 'var']: r#10
[#23 EndOfText]: r#10
[#24 ';']: s#112
[#25 'var']: s#111
[#26 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#27 'override']: s#107
[#28 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#29 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#30 'fn']: s#104
[#31 '!']: s#69
[#31 '&']: s#72
[#31 '(']: s#83
[#31 '*']: s#71
[#31 '-']: s#68
[#31 'bitcast']: s#78
[#31 'false']: s#90
[#31 'true']: s#89
[#31 '~']: s#70
[#31 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#31 /0[fh]/]: s#95
[#31 /0[iu]?/]: s#92
[#31 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#31 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#31 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#31 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#31 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#31 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#31 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#31 /[1-9][0-9]*[fh]/]: s#96
[#31 /[1-9][0-9]*[iu]?/]: s#93
[#32 'var']: r#11
[#33 'override']: r#12
[#34 'fn']: r#13
[#35 '@']: s#36
[#36 'align']: s#37
[#36 'binding']: s#38
[#36 'builtin']: s#39
[#36 'compute']: s#51
[#36 'const']: s#40
[#36 'fragment']: s#50
[#36 'group']: s#41
[#36 'id']: s#42
[#36 'interpolate']: s#43
[#36 'invariant']: s#44
[#36 'location']: s#45
[#36 'must_use']: s#46
[#36 'size']: s#47
[#36 'vertex']: s#49
[#36 'workgroup_size']: s#48
[#37 '(']: s#190
[#38 '(']: s#189
[#39 '(']: s#188
[#40 '@']: r#14
[#40 'fn']: r#14
[#40 'override']: r#14
[#40 'var']: r#14
[#40 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#14
[#41 '(']: s#187
[#42 '(']: s#186
[#43 '(']: s#185
[#44 '@']: r#15
[#44 'fn']: r#15
[#44 'override']: r#15
[#44 'var']: r#15
[#44 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#15
[#45 '(']: s#184
[#46 '@']: r#16
[#46 'fn']: r#16
[#46 'override']: r#16
[#46 'var']: r#16
[#46 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#16
[#47 '(']: s#183
[#48 '(']: s#182
[#49 '@']: r#17
[#49 'fn']: r#17
[#49 'override']: r#17
[#49 'var']: r#17
[#49 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#17
[#50 '@']: r#18
[#50 'fn']: r#18
[#50 'override']: r#18
[#50 'var']: r#18
[#50 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#18
[#51 '@']: r#19
[#51 'fn']: r#19
[#51 'override']: r#19
[#51 'var']: r#19
[#51 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#19
[#52 'var']: r#20
[#53 'override']: r#21
[#54 'fn']: r#22
[#55 ';']: r#23
[#56 '&&']: r#26
[#56 ')']: r#24
[#56 ',']: r#24
[#56 ':']: r#24
[#56 ';']: r#24
[#56 ']']: r#24
[#56 '{']: r#24
[#56 '||']: r#25
[#57 '||']: s#181
[#58 '&&']: s#180
[#59 ')']: r#27
[#59 ',']: r#27
[#59 ':']: r#27
[#59 ';']: r#27
[#59 ']']: r#27
[#59 '{']: r#27
[#60 '!=']: s#175
[#60 '&&']: r#28
[#60 ')']: r#28
[#60 ',']: r#28
[#60 ':']: r#28
[#60 ';']: r#28
[#60 '==']: s#174
[#60 ']']: r#28
[#60 '{']: r#28
[#60 '||']: r#28
[#60 /\u200B_greater_than/]: s#177
[#60 /\u200B_greater_than_equal/]: s#179
[#60 /\u200B_less_than/]: s#176
[#60 /\u200B_less_than_equal/]: s#178
[#60 /\u200B_template_args_end/]: r#28
[#61 '&']: s#169
[#62 '|']: s#168
[#63 '^']: s#167
[#64 '!=']: r#29
[#64 '&&']: r#29
[#64 ')']: r#29
[#64 '+']: s#165
[#64 ',']: r#29
[#64 '-']: s#166
[#64 ':']: r#29
[#64 ';']: r#29
[#64 '==']: r#29
[#64 ']']: r#29
[#64 '{']: r#29
[#64 '||']: r#29
[#64 /\u200B_greater_than/]: r#29
[#64 /\u200B_greater_than_equal/]: r#29
[#64 /\u200B_less_than/]: r#29
[#64 /\u200B_less_than_equal/]: r#29
[#64 /\u200B_template_args_end/]: r#29
[#65 '!=']: r#33
[#65 '%']: r#33
[#65 '&&']: r#33
[#65 '&']: r#30
[#65 ')']: r#33
[#65 '*']: r#33
[#65 '+']: r#33
[#65 ',']: r#33
[#65 '-']: r#33
[#65 '/']: r#33
[#65 ':']: r#33
[#65 ';']: r#33
[#65 '==']: r#33
[#65 ']']: r#33
[#65 '^']: r#32
[#65 '{']: r#33
[#65 '|']: r#31
[#65 '||']: r#33
[#65 /\u200B_greater_than/]: r#33
[#65 /\u200B_greater_than_equal/]: r#33
[#65 /\u200B_less_than/]: r#33
[#65 /\u200B_less_than_equal/]: r#33
[#65 /\u200B_shift_left/]: s#162
[#65 /\u200B_shift_right/]: s#163
[#65 /\u200B_template_args_end/]: r#33
[#66 '!=']: r#34
[#66 '%']: s#159
[#66 '&&']: r#34
[#66 ')']: r#34
[#66 '*']: s#157
[#66 '+']: r#34
[#66 ',']: r#34
[#66 '-']: r#34
[#66 '/']: s#158
[#66 ':']: r#34
[#66 ';']: r#34
[#66 '==']: r#34
[#66 ']']: r#34
[#66 '{']: r#34
[#66 '||']: r#34
[#66 /\u200B_greater_than/]: r#34
[#66 /\u200B_greater_than_equal/]: r#34
[#66 /\u200B_less_than/]: r#34
[#66 /\u200B_less_than_equal/]: r#34
[#66 /\u200B_template_args_end/]: r#34
[#67 '!=']: r#35
[#67 '%']: r#35
[#67 '&&']: r#35
[#67 '&']: r#35
[#67 ')']: r#35
[#67 '*']: r#35
[#67 '+']: r#35
[#67 ',']: r#35
[#67 '-']: r#35
[#67 '/']: r#35
[#67 ':']: r#35
[#67 ';']: r#35
[#67 '==']: r#35
[#67 ']']: r#35
[#67 '^']: r#35
[#67 '{']: r#35
[#67 '|']: r#35
[#67 '||']: r#35
[#67 /\u200B_greater_than/]: r#35
[#67 /\u200B_greater_than_equal/]: r#35
[#67 /\u200B_less_than/]: r#35
[#67 /\u200B_less_than_equal/]: r#35
[#67 /\u200B_shift_left/]: r#35
[#67 /\u200B_shift_right/]: r#35
[#67 /\u200B_template_args_end/]: r#35
[#68 '!']: s#69
[#68 '&']: s#72
[#68 '(']: s#83
[#68 '*']: s#71
[#68 '-']: s#68
[#68 'bitcast']: s#78
[#68 'false']: s#90
[#68 'true']: s#89
[#68 '~']: s#70
[#68 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#68 /0[fh]/]: s#95
[#68 /0[iu]?/]: s#92
[#68 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#68 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#68 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#68 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#68 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#68 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#68 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#68 /[1-9][0-9]*[fh]/]: s#96
[#68 /[1-9][0-9]*[iu]?/]: s#93
[#69 '!']: s#69
[#69 '&']: s#72
[#69 '(']: s#83
[#69 '*']: s#71
[#69 '-']: s#68
[#69 'bitcast']: s#78
[#69 'false']: s#90
[#69 'true']: s#89
[#69 '~']: s#70
[#69 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#69 /0[fh]/]: s#95
[#69 /0[iu]?/]: s#92
[#69 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#69 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#69 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#69 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#69 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#69 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#69 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#69 /[1-9][0-9]*[fh]/]: s#96
[#69 /[1-9][0-9]*[iu]?/]: s#93
[#70 '!']: s#69
[#70 '&']: s#72
[#70 '(']: s#83
[#70 '*']: s#71
[#70 '-']: s#68
[#70 'bitcast']: s#78
[#70 'false']: s#90
[#70 'true']: s#89
[#70 '~']: s#70
[#70 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#70 /0[fh]/]: s#95
[#70 /0[iu]?/]: s#92
[#70 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#70 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#70 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#70 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#70 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#70 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#70 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#70 /[1-9][0-9]*[fh]/]: s#96
[#70 /[1-9][0-9]*[iu]?/]: s#93
[#71 '!']: s#69
[#71 '&']: s#72
[#71 '(']: s#83
[#71 '*']: s#71
[#71 '-']: s#68
[#71 'bitcast']: s#78
[#71 'false']: s#90
[#71 'true']: s#89
[#71 '~']: s#70
[#71 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#71 /0[fh]/]: s#95
[#71 /0[iu]?/]: s#92
[#71 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#71 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#71 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#71 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#71 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#71 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#71 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#71 /[1-9][0-9]*[fh]/]: s#96
[#71 /[1-9][0-9]*[iu]?/]: s#93
[#72 '!']: s#69
[#72 '&']: s#72
[#72 '(']: s#83
[#72 '*']: s#71
[#72 '-']: s#68
[#72 'bitcast']: s#78
[#72 'false']: s#90
[#72 'true']: s#89
[#72 '~']: s#70
[#72 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#72 /0[fh]/]: s#95
[#72 /0[iu]?/]: s#92
[#72 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#72 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#72 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#72 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#72 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#72 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#72 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#72 /[1-9][0-9]*[fh]/]: s#96
[#72 /[1-9][0-9]*[iu]?/]: s#93
[#73 '.']: s#150
[#73 '[']: s#149
[#74 '!=']: r#36
[#74 '%']: r#36
[#74 '&&']: r#36
[#74 '&']: r#36
[#74 '(']: s#146
[#74 ')']: r#36
[#74 '*']: r#36
[#74 '+']: r#36
[#74 ',']: r#36
[#74 '-']: r#36
[#74 '.']: r#36
[#74 '/']: r#36
[#74 ':']: r#36
[#74 ';']: r#36
[#74 '==']: r#36
[#74 '[']: r#36
[#74 ']']: r#36
[#74 '^']: r#36
[#74 '{']: r#36
[#74 '|']: r#36
[#74 '||']: r#36
[#74 /\u200B_greater_than/]: r#36
[#74 /\u200B_greater_than_equal/]: r#36
[#74 /\u200B_less_than/]: r#36
[#74 /\u200B_less_than_equal/]: r#36
[#74 /\u200B_shift_left/]: r#36
[#74 /\u200B_shift_right/]: r#36
[#74 /\u200B_template_args_end/]: r#36
[#75 '!=']: r#37
[#75 '%']: r#37
[#75 '&&']: r#37
[#75 '&']: r#37
[#75 ')']: r#37
[#75 '*']: r#37
[#75 '+']: r#37
[#75 ',']: r#37
[#75 '-']: r#37
[#75 '.']: r#37
[#75 '/']: r#37
[#75 ':']: r#37
[#75 ';']: r#37
[#75 '==']: r#37
[#75 '[']: r#37
[#75 ']']: r#37
[#75 '^']: r#37
[#75 '{']: r#37
[#75 '|']: r#37
[#75 '||']: r#37
[#75 /\u200B_greater_than/]: r#37
[#75 /\u200B_greater_than_equal/]: r#37
[#75 /\u200B_less_than/]: r#37
[#75 /\u200B_less_than_equal/]: r#37
[#75 /\u200B_shift_left/]: r#37
[#75 /\u200B_shift_right/]: r#37
[#75 /\u200B_template_args_end/]: r#37
[#76 '!=']: r#38
[#76 '%']: r#38
[#76 '&&']: r#38
[#76 '&']: r#38
[#76 ')']: r#38
[#76 '*']: r#38
[#76 '+']: r#38
[#76 ',']: r#38
[#76 '-']: r#38
[#76 '.']: r#38
[#76 '/']: r#38
[#76 ':']: r#38
[#76 ';']: r#38
[#76 '==']: r#38
[#76 '[']: r#38
[#76 ']']: r#38
[#76 '^']: r#38
[#76 '{']: r#38
[#76 '|']: r#38
[#76 '||']: r#38
[#76 /\u200B_greater_than/]: r#38
[#76 /\u200B_greater_than_equal/]: r#38
[#76 /\u200B_less_than/]: r#38
[#76 /\u200B_less_than_equal/]: r#38
[#76 /\u200B_shift_left/]: r#38
[#76 /\u200B_shift_right/]: r#38
[#76 /\u200B_template_args_end/]: r#38
[#77 '!=']: r#39
[#77 '%']: r#39
[#77 '&&']: r#39
[#77 '&']: r#39
[#77 ')']: r#39
[#77 '*']: r#39
[#77 '+']: r#39
[#77 ',']: r#39
[#77 '-']: r#39
[#77 '.']: r#39
[#77 '/']: r#39
[#77 ':']: r#39
[#77 ';']: r#39
[#77 '==']: r#39
[#77 '[']: r#39
[#77 ']']: r#39
[#77 '^']: r#39
[#77 '{']: r#39
[#77 '|']: r#39
[#77 '||']: r#39
[#77 /\u200B_greater_than/]: r#39
[#77 /\u200B_greater_than_equal/]: r#39
[#77 /\u200B_less_than/]: r#39
[#77 /\u200B_less_than_equal/]: r#39
[#77 /\u200B_shift_left/]: r#39
[#77 /\u200B_shift_right/]: r#39
[#77 /\u200B_template_args_end/]: r#39
[#78 /\u200B_disambiguate_template/]: s#128
[#79 /\u200B_disambiguate_template/]: s#128
[#80 '!=']: r#40
[#80 '%']: r#40
[#80 '&&']: r#40
[#80 '&']: r#40
[#80 ')']: r#40
[#80 '*']: r#40
[#80 '+']: r#40
[#80 ',']: r#40
[#80 '-']: r#40
[#80 '.']: r#40
[#80 '/']: r#40
[#80 ':']: r#40
[#80 ';']: r#40
[#80 '==']: r#40
[#80 '[']: r#40
[#80 ']']: r#40
[#80 '^']: r#40
[#80 '{']: r#40
[#80 '|']: r#40
[#80 '||']: r#40
[#80 /\u200B_greater_than/]: r#40
[#80 /\u200B_greater_than_equal/]: r#40
[#80 /\u200B_less_than/]: r#40
[#80 /\u200B_less_than_equal/]: r#40
[#80 /\u200B_shift_left/]: r#40
[#80 /\u200B_shift_right/]: r#40
[#80 /\u200B_template_args_end/]: r#40
[#81 '!=']: r#41
[#81 '%']: r#41
[#81 '&&']: r#41
[#81 '&']: r#41
[#81 ')']: r#41
[#81 '*']: r#41
[#81 '+']: r#41
[#81 ',']: r#41
[#81 '-']: r#41
[#81 '.']: r#41
[#81 '/']: r#41
[#81 ':']: r#41
[#81 ';']: r#41
[#81 '==']: r#41
[#81 '[']: r#41
[#81 ']']: r#41
[#81 '^']: r#41
[#81 '{']: r#41
[#81 '|']: r#41
[#81 '||']: r#41
[#81 /\u200B_greater_than/]: r#41
[#81 /\u200B_greater_than_equal/]: r#41
[#81 /\u200B_less_than/]: r#41
[#81 /\u200B_less_than_equal/]: r#41
[#81 /\u200B_shift_left/]: r#41
[#81 /\u200B_shift_right/]: r#41
[#81 /\u200B_template_args_end/]: r#41
[#82 '!=']: r#42
[#82 '%']: r#42
[#82 '&&']: r#42
[#82 '&']: r#42
[#82 ')']: r#42
[#82 '*']: r#42
[#82 '+']: r#42
[#82 ',']: r#42
[#82 '-']: r#42
[#82 '.']: r#42
[#82 '/']: r#42
[#82 ':']: r#42
[#82 ';']: r#42
[#82 '==']: r#42
[#82 '[']: r#42
[#82 ']']: r#42
[#82 '^']: r#42
[#82 '{']: r#42
[#82 '|']: r#42
[#82 '||']: r#42
[#82 /\u200B_greater_than/]: r#42
[#82 /\u200B_greater_than_equal/]: r#42
[#82 /\u200B_less_than/]: r#42
[#82 /\u200B_less_than_equal/]: r#42
[#82 /\u200B_shift_left/]: r#42
[#82 /\u200B_shift_right/]: r#42
[#82 /\u200B_template_args_end/]: r#42
[#83 '!']: s#69
[#83 '&']: s#72
[#83 '(']: s#83
[#83 '*']: s#71
[#83 '-']: s#68
[#83 'bitcast']: s#78
[#83 'false']: s#90
[#83 'true']: s#89
[#83 '~']: s#70
[#83 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#83 /0[fh]/]: s#95
[#83 /0[iu]?/]: s#92
[#83 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#83 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#83 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#83 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#83 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#83 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#83 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#83 /[1-9][0-9]*[fh]/]: s#96
[#83 /[1-9][0-9]*[iu]?/]: s#93
[#84 /\u200B_disambiguate_template/]: s#128
[#85 '!=']: r#43
[#85 '%']: r#43
[#85 '&&']: r#43
[#85 '&']: r#43
[#85 ')']: r#43
[#85 '*']: r#43
[#85 '+']: r#43
[#85 ',']: r#43
[#85 '-']: r#43
[#85 '.']: r#43
[#85 '/']: r#43
[#85 ':']: r#43
[#85 ';']: r#43
[#85 '==']: r#43
[#85 '[']: r#43
[#85 ']']: r#43
[#85 '^']: r#43
[#85 '{']: r#43
[#85 '|']: r#43
[#85 '||']: r#43
[#85 /\u200B_greater_than/]: r#43
[#85 /\u200B_greater_than_equal/]: r#43
[#85 /\u200B_less_than/]: r#43
[#85 /\u200B_less_than_equal/]: r#43
[#85 /\u200B_shift_left/]: r#43
[#85 /\u200B_shift_right/]: r#43
[#85 /\u200B_template_args_end/]: r#43
[#86 '!=']: r#44
[#86 '%']: r#44
[#86 '&&']: r#44
[#86 '&']: r#44
[#86 ')']: r#44
[#86 '*']: r#44
[#86 '+']: r#44
[#86 ',']: r#44
[#86 '-']: r#44
[#86 '.']: r#44
[#86 '/']: r#44
[#86 ':']: r#44
[#86 ';']: r#44
[#86 '==']: r#44
[#86 '[']: r#44
[#86 ']']: r#44
[#86 '^']: r#44
[#86 '{']: r#44
[#86 '|']: r#44
[#86 '||']: r#44
[#86 /\u200B_greater_than/]: r#44
[#86 /\u200B_greater_than_equal/]: r#44
[#86 /\u200B_less_than/]: r#44
[#86 /\u200B_less_than_equal/]: r#44
[#86 /\u200B_shift_left/]: r#44
[#86 /\u200B_shift_right/]: r#44
[#86 /\u200B_template_args_end/]: r#44
[#87 '!=']: r#45
[#87 '%']: r#45
[#87 '&&']: r#45
[#87 '&']: r#45
[#87 ')']: r#45
[#87 '*']: r#45
[#87 '+']: r#45
[#87 ',']: r#45
[#87 '-']: r#45
[#87 '.']: r#45
[#87 '/']: r#45
[#87 ':']: r#45
[#87 ';']: r#45
[#87 '==']: r#45
[#87 '[']: r#45
[#87 ']']: r#45
[#87 '^']: r#45
[#87 '{']: r#45
[#87 '|']: r#45
[#87 '||']: r#45
[#87 /\u200B_greater_than/]: r#45
[#87 /\u200B_greater_than_equal/]: r#45
[#87 /\u200B_less_than/]: r#45
[#87 /\u200B_less_than_equal/]: r#45
[#87 /\u200B_shift_left/]: r#45
[#87 /\u200B_shift_right/]: r#45
[#87 /\u200B_template_args_end/]: r#45
[#88 '!=']: r#46
[#88 '%']: r#46
[#88 '&&']: r#46
[#88 '&']: r#46
[#88 ')']: r#46
[#88 '*']: r#46
[#88 '+']: r#46
[#88 ',']: r#46
[#88 '-']: r#46
[#88 '.']: r#46
[#88 '/']: r#46
[#88 ':']: r#46
[#88 ';']: r#46
[#88 '==']: r#46
[#88 '[']: r#46
[#88 ']']: r#46
[#88 '^']: r#46
[#88 '{']: r#46
[#88 '|']: r#46
[#88 '||']: r#46
[#88 /\u200B_greater_than/]: r#46
[#88 /\u200B_greater_than_equal/]: r#46
[#88 /\u200B_less_than/]: r#46
[#88 /\u200B_less_than_equal/]: r#46
[#88 /\u200B_shift_left/]: r#46
[#88 /\u200B_shift_right/]: r#46
[#88 /\u200B_template_args_end/]: r#46
[#89 '!=']: r#47
[#89 '%']: r#47
[#89 '&&']: r#47
[#89 '&']: r#47
[#89 ')']: r#47
[#89 '*']: r#47
[#89 '+']: r#47
[#89 ',']: r#47
[#89 '-']: r#47
[#89 '.']: r#47
[#89 '/']: r#47
[#89 ':']: r#47
[#89 ';']: r#47
[#89 '==']: r#47
[#89 '[']: r#47
[#89 ']']: r#47
[#89 '^']: r#47
[#89 '{']: r#47
[#89 '|']: r#47
[#89 '||']: r#47
[#89 /\u200B_greater_than/]: r#47
[#89 /\u200B_greater_than_equal/]: r#47
[#89 /\u200B_less_than/]: r#47
[#89 /\u200B_less_than_equal/]: r#47
[#89 /\u200B_shift_left/]: r#47
[#89 /\u200B_shift_right/]: r#47
[#89 /\u200B_template_args_end/]: r#47
[#90 '!=']: r#48
[#90 '%']: r#48
[#90 '&&']: r#48
[#90 '&']: r#48
[#90 ')']: r#48
[#90 '*']: r#48
[#90 '+']: r#48
[#90 ',']: r#48
[#90 '-']: r#48
[#90 '.']: r#48
[#90 '/']: r#48
[#90 ':']: r#48
[#90 ';']: r#48
[#90 '==']: r#48
[#90 '[']: r#48
[#90 ']']: r#48
[#90 '^']: r#48
[#90 '{']: r#48
[#90 '|']: r#48
[#90 '||']: r#48
[#90 /\u200B_greater_than/]: r#48
[#90 /\u200B_greater_than_equal/]: r#48
[#90 /\u200B_less_than/]: r#48
[#90 /\u200B_less_than_equal/]: r#48
[#90 /\u200B_shift_left/]: r#48
[#90 /\u200B_shift_right/]: r#48
[#90 /\u200B_template_args_end/]: r#48
[#91 /\u200B_disambiguate_template/]: r#49
[#92 '!=']: r#50
[#92 '%']: r#50
[#92 '&&']: r#50
[#92 '&']: r#50
[#92 ')']: r#50
[#92 '*']: r#50
[#92 '+']: r#50
[#92 ',']: r#50
[#92 '-']: r#50
[#92 '.']: r#50
[#92 '/']: r#50
[#92 ':']: r#50
[#92 ';']: r#50
[#92 '==']: r#50
[#92 '[']: r#50
[#92 ']']: r#50
[#92 '^']: r#50
[#92 '{']: r#50
[#92 '|']: r#50
[#92 '||']: r#50
[#92 /\u200B_greater_than/]: r#50
[#92 /\u200B_greater_than_equal/]: r#50
[#92 /\u200B_less_than/]: r#50
[#92 /\u200B_less_than_equal/]: r#50
[#92 /\u200B_shift_left/]: r#50
[#92 /\u200B_shift_right/]: r#50
[#92 /\u200B_template_args_end/]: r#50
[#93 '!=']: r#51
[#93 '%']: r#51
[#93 '&&']: r#51
[#93 '&']: r#51
[#93 ')']: r#51
[#93 '*']: r#51
[#93 '+']: r#51
[#93 ',']: r#51
[#93 '-']: r#51
[#93 '.']: r#51
[#93 '/']: r#51
[#93 ':']: r#51
[#93 ';']: r#51
[#93 '==']: r#51
[#93 '[']: r#51
[#93 ']']: r#51
[#93 '^']: r#51
[#93 '{']: r#51
[#93 '|']: r#51
[#93 '||']: r#51
[#93 /\u200B_greater_than/]: r#51
[#93 /\u200B_greater_than_equal/]: r#51
[#93 /\u200B_less_than/]: r#51
[#93 /\u200B_less_than_equal/]: r#51
[#93 /\u200B_shift_left/]: r#51
[#93 /\u200B_shift_right/]: r#51
[#93 /\u200B_template_args_end/]: r#51
[#94 '!=']: r#52
[#94 '%']: r#52
[#94 '&&']: r#52
[#94 '&']: r#52
[#94 ')']: r#52
[#94 '*']: r#52
[#94 '+']: r#52
[#94 ',']: r#52
[#94 '-']: r#52
[#94 '.']: r#52
[#94 '/']: r#52
[#94 ':']: r#52
[#94 ';']: r#52
[#94 '==']: r#52
[#94 '[']: r#52
[#94 ']']: r#52
[#94 '^']: r#52
[#94 '{']: r#52
[#94 '|']: r#52
[#94 '||']: r#52
[#94 /\u200B_greater_than/]: r#52
[#94 /\u200B_greater_than_equal/]: r#52
[#94 /\u200B_less_than/]: r#52
[#94 /\u200B_less_than_equal/]: r#52
[#94 /\u200B_shift_left/]: r#52
[#94 /\u200B_shift_right/]: r#52
[#94 /\u200B_template_args_end/]: r#52
[#95 '!=']: r#53
[#95 '%']: r#53
[#95 '&&']: r#53
[#95 '&']: r#53
[#95 ')']: r#53
[#95 '*']: r#53
[#95 '+']: r#53
[#95 ',']: r#53
[#95 '-']: r#53
[#95 '.']: r#53
[#95 '/']: r#53
[#95 ':']: r#53
[#95 ';']: r#53
[#95 '==']: r#53
[#95 '[']: r#53
[#95 ']']: r#53
[#95 '^']: r#53
[#95 '{']: r#53
[#95 '|']: r#53
[#95 '||']: r#53
[#95 /\u200B_greater_than/]: r#53
[#95 /\u200B_greater_than_equal/]: r#53
[#95 /\u200B_less_than/]: r#53
[#95 /\u200B_less_than_equal/]: r#53
[#95 /\u200B_shift_left/]: r#53
[#95 /\u200B_shift_right/]: r#53
[#95 /\u200B_template_args_end/]: r#53
[#96 '!=']: r#54
[#96 '%']: r#54
[#96 '&&']: r#54
[#96 '&']: r#54
[#96 ')']: r#54
[#96 '*']: r#54
[#96 '+']: r#54
[#96 ',']: r#54
[#96 '-']: r#54
[#96 '.']: r#54
[#96 '/']: r#54
[#96 ':']: r#54
[#96 ';']: r#54
[#96 '==']: r#54
[#96 '[']: r#54
[#96 ']']: r#54
[#96 '^']: r#54
[#96 '{']: r#54
[#96 '|']: r#54
[#96 '||']: r#54
[#96 /\u200B_greater_than/]: r#54
[#96 /\u200B_greater_than_equal/]: r#54
[#96 /\u200B_less_than/]: r#54
[#96 /\u200B_less_than_equal/]: r#54
[#96 /\u200B_shift_left/]: r#54
[#96 /\u200B_shift_right/]: r#54
[#96 /\u200B_template_args_end/]: r#54
[#97 '!=']: r#55
[#97 '%']: r#55
[#97 '&&']: r#55
[#97 '&']: r#55
[#97 ')']: r#55
[#97 '*']: r#55
[#97 '+']: r#55
[#97 ',']: r#55
[#97 '-']: r#55
[#97 '.']: r#55
[#97 '/']: r#55
[#97 ':']: r#55
[#97 ';']: r#55
[#97 '==']: r#55
[#97 '[']: r#55
[#97 ']']: r#55
[#97 '^']: r#55
[#97 '{']: r#55
[#97 '|']: r#55
[#97 '||']: r#55
[#97 /\u200B_greater_than/]: r#55
[#97 /\u200B_greater_than_equal/]: r#55
[#97 /\u200B_less_than/]: r#55
[#97 /\u200B_less_than_equal/]: r#55
[#97 /\u200B_shift_left/]: r#55
[#97 /\u200B_shift_right/]: r#55
[#97 /\u200B_template_args_end/]: r#55
[#98 '!=']: r#56
[#98 '%']: r#56
[#98 '&&']: r#56
[#98 '&']: r#56
[#98 ')']: r#56
[#98 '*']: r#56
[#98 '+']: r#56
[#98 ',']: r#56
[#98 '-']: r#56
[#98 '.']: r#56
[#98 '/']: r#56
[#98 ':']: r#56
[#98 ';']: r#56
[#98 '==']: r#56
[#98 '[']: r#56
[#98 ']']: r#56
[#98 '^']: r#56
[#98 '{']: r#56
[#98 '|']: r#56
[#98 '||']: r#56
[#98 /\u200B_greater_than/]: r#56
[#98 /\u200B_greater_than_equal/]: r#56
[#98 /\u200B_less_than/]: r#56
[#98 /\u200B_less_than_equal/]: r#56
[#98 /\u200B_shift_left/]: r#56
[#98 /\u200B_shift_right/]: r#56
[#98 /\u200B_template_args_end/]: r#56
[#99 '!=']: r#57
[#99 '%']: r#57
[#99 '&&']: r#57
[#99 '&']: r#57
[#99 ')']: r#57
[#99 '*']: r#57
[#99 '+']: r#57
[#99 ',']: r#57
[#99 '-']: r#57
[#99 '.']: r#57
[#99 '/']: r#57
[#99 ':']: r#57
[#99 ';']: r#57
[#99 '==']: r#57
[#99 '[']: r#57
[#99 ']']: r#57
[#99 '^']: r#57
[#99 '{']: r#57
[#99 '|']: r#57
[#99 '||']: r#57
[#99 /\u200B_greater_than/]: r#57
[#99 /\u200B_greater_than_equal/]: r#57
[#99 /\u200B_less_than/]: r#57
[#99 /\u200B_less_than_equal/]: r#57
[#99 /\u200B_shift_left/]: r#57
[#99 /\u200B_shift_right/]: r#57
[#99 /\u200B_template_args_end/]: r#57
[#100 '!=']: r#58
[#100 '%']: r#58
[#100 '&&']: r#58
[#100 '&']: r#58
[#100 ')']: r#58
[#100 '*']: r#58
[#100 '+']: r#58
[#100 ',']: r#58
[#100 '-']: r#58
[#100 '.']: r#58
[#100 '/']: r#58
[#100 ':']: r#58
[#100 ';']: r#58
[#100 '==']: r#58
[#100 '[']: r#58
[#100 ']']: r#58
[#100 '^']: r#58
[#100 '{']: r#58
[#100 '|']: r#58
[#100 '||']: r#58
[#100 /\u200B_greater_than/]: r#58
[#100 /\u200B_greater_than_equal/]: r#58
[#100 /\u200B_less_than/]: r#58
[#100 /\u200B_less_than_equal/]: r#58
[#100 /\u200B_shift_left/]: r#58
[#100 /\u200B_shift_right/]: r#58
[#100 /\u200B_template_args_end/]: r#58
[#101 '!=']: r#59
[#101 '%']: r#59
[#101 '&&']: r#59
[#101 '&']: r#59
[#101 ')']: r#59
[#101 '*']: r#59
[#101 '+']: r#59
[#101 ',']: r#59
[#101 '-']: r#59
[#101 '.']: r#59
[#101 '/']: r#59
[#101 ':']: r#59
[#101 ';']: r#59
[#101 '==']: r#59
[#101 '[']: r#59
[#101 ']']: r#59
[#101 '^']: r#59
[#101 '{']: r#59
[#101 '|']: r#59
[#101 '||']: r#59
[#101 /\u200B_greater_than/]: r#59
[#101 /\u200B_greater_than_equal/]: r#59
[#101 /\u200B_less_than/]: r#59
[#101 /\u200B_less_than_equal/]: r#59
[#101 /\u200B_shift_left/]: r#59
[#101 /\u200B_shift_right/]: r#59
[#101 /\u200B_template_args_end/]: r#59
[#102 '!=']: r#60
[#102 '%']: r#60
[#102 '&&']: r#60
[#102 '&']: r#60
[#102 ')']: r#60
[#102 '*']: r#60
[#102 '+']: r#60
[#102 ',']: r#60
[#102 '-']: r#60
[#102 '.']: r#60
[#102 '/']: r#60
[#102 ':']: r#60
[#102 ';']: r#60
[#102 '==']: r#60
[#102 '[']: r#60
[#102 ']']: r#60
[#102 '^']: r#60
[#102 '{']: r#60
[#102 '|']: r#60
[#102 '||']: r#60
[#102 /\u200B_greater_than/]: r#60
[#102 /\u200B_greater_than_equal/]: r#60
[#102 /\u200B_less_than/]: r#60
[#102 /\u200B_less_than_equal/]: r#60
[#102 /\u200B_shift_left/]: r#60
[#102 /\u200B_shift_right/]: r#60
[#102 /\u200B_template_args_end/]: r#60
[#103 '{']: s#140
[#104 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#105 '{']: s#137
[#106 '=']: s#135
[#107 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#108 '=']: s#133
[#109 ':']: s#132
[#110 '=']: s#130
[#111 /\u200B_disambiguate_template/]: s#128
[#112 ';']: r#61
[#112 '@']: r#61
[#112 'alias']: r#61
[#112 'const']: r#61
[#112 'const_assert']: r#61
[#112 'fn']: r#61
[#112 'override']: r#61
[#112 'struct']: r#61
[#112 'var']: r#61
[#112 EndOfText]: r#61
[#113 ';']: r#62
[#113 '@']: r#62
[#113 'alias']: r#62
[#113 'const']: r#62
[#113 'const_assert']: r#62
[#113 'fn']: r#62
[#113 'override']: r#62
[#113 'struct']: r#62
[#113 'var']: r#62
[#113 EndOfText]: r#62
[#114 ';']: r#63
[#114 '@']: r#63
[#114 'alias']: r#63
[#114 'const']: r#63
[#114 'const_assert']: r#63
[#114 'fn']: r#63
[#114 'override']: r#63
[#114 'struct']: r#63
[#114 'var']: r#63
[#114 EndOfText]: r#63
[#115 ';']: r#64
[#115 '@']: r#64
[#115 'alias']: r#64
[#115 'const']: r#64
[#115 'const_assert']: r#64
[#115 'fn']: r#64
[#115 'override']: r#64
[#115 'struct']: r#64
[#115 'var']: r#64
[#115 EndOfText]: r#64
[#116 EndOfText]: r#65
[#117 ';']: r#66
[#117 '@']: r#66
[#117 'alias']: r#66
[#117 'const']: r#66
[#117 'const_assert']: r#66
[#117 'enable']: r#66
[#117 'fn']: r#66
[#117 'override']: r#66
[#117 'requires']: r#66
[#117 'struct']: r#66
[#117 'var']: r#66
[#117 EndOfText]: r#66
[#118 ',']: s#126
[#119 ',']: r#67
[#119 ';']: r#67
[#120 ',']: s#121
[#121 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#11
[#122 ';']: r#68
[#122 '@']: r#68
[#122 'alias']: r#68
[#122 'const']: r#68
[#122 'const_assert']: r#68
[#122 'enable']: r#68
[#122 'fn']: r#68
[#122 'override']: r#68
[#122 'requires']: r#68
[#122 'struct']: r#68
[#122 'var']: r#68
[#122 EndOfText]: r#68
[#123 ',']: r#69
[#123 ';']: r#69
[#124 ',']: r#70
[#124 ';']: r#70
[#125 ';']: r#71
[#126 ';']: r#72
[#127 /\u200B_template_args_start/]: s#233
[#128 '!=']: r#73
[#128 '%']: r#73
[#128 '%=']: r#73
[#128 '&&']: r#73
[#128 '&']: r#73
[#128 '&=']: r#73
[#128 '(']: r#73
[#128 ')']: r#73
[#128 '*']: r#73
[#128 '*=']: r#73
[#128 '+']: r#73
[#128 '++']: r#73
[#128 '+=']: r#73
[#128 ',']: r#73
[#128 '-']: r#73
[#128 '--']: r#73
[#128 '-=']: r#73
[#128 '.']: r#73
[#128 '/']: r#73
[#128 '/=']: r#73
[#128 ':']: r#73
[#128 ';']: r#73
[#128 '=']: r#73
[#128 '==']: r#73
[#128 '[']: r#73
[#128 ']']: r#73
[#128 '^']: r#73
[#128 '^=']: r#73
[#128 '{']: r#73
[#128 '|']: r#73
[#128 '|=']: r#73
[#128 '||']: r#73
[#128 '}']: r#73
[#128 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#73
[#128 /\u200B_disambiguate_template/]: r#73
[#128 /\u200B_greater_than/]: r#73
[#128 /\u200B_greater_than_equal/]: r#73
[#128 /\u200B_less_than/]: r#73
[#128 /\u200B_less_than_equal/]: r#73
[#128 /\u200B_shift_left/]: r#73
[#128 /\u200B_shift_left_assign/]: r#73
[#128 /\u200B_shift_right/]: r#73
[#128 /\u200B_shift_right_assign/]: r#73
[#128 /\u200B_template_args_end/]: r#73
[#128 /\u200B_template_args_start/]: r#73
[#129 ';']: r#74
[#130 '!']: s#69
[#130 '&']: s#72
[#130 '(']: s#83
[#130 '*']: s#71
[#130 '-']: s#68
[#130 'bitcast']: s#78
[#130 'false']: s#90
[#130 'true']: s#89
[#130 '~']: s#70
[#130 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#130 /0[fh]/]: s#95
[#130 /0[iu]?/]: s#92
[#130 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#130 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#130 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#130 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#130 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#130 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#130 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#130 /[1-9][0-9]*[fh]/]: s#96
[#130 /[1-9][0-9]*[iu]?/]: s#93
[#131 ';']: r#75
[#131 '=']: r#75
[#132 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#133 '!']: s#69
[#133 '&']: s#72
[#133 '(']: s#83
[#133 '*']: s#71
[#133 '-']: s#68
[#133 'bitcast']: s#78
[#133 'false']: s#90
[#133 'true']: s#89
[#133 '~']: s#70
[#133 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#133 /0[fh]/]: s#95
[#133 /0[iu]?/]: s#92
[#133 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#133 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#133 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#133 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#133 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#133 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#133 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#133 /[1-9][0-9]*[fh]/]: s#96
[#133 /[1-9][0-9]*[iu]?/]: s#93
[#134 '=']: s#287
[#135 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#136 ';']: r#76
[#136 '@']: r#76
[#136 'alias']: r#76
[#136 'const']: r#76
[#136 'const_assert']: r#76
[#136 'fn']: r#76
[#136 'override']: r#76
[#136 'struct']: r#76
[#136 'var']: r#76
[#136 EndOfText]: r#76
[#137 '@']: s#36
[#138 '(']: s#279
[#139 ';']: r#77
[#139 '@']: r#77
[#139 'alias']: r#77
[#139 'const']: r#77
[#139 'const_assert']: r#77
[#139 'fn']: r#77
[#139 'override']: r#77
[#139 'struct']: r#77
[#139 'var']: r#77
[#139 EndOfText]: r#77
[#140 '&']: s#277
[#140 '(']: s#278
[#140 '*']: s#276
[#140 ';']: s#241
[#140 '_']: s#274
[#140 'break']: s#266
[#140 'const']: s#265
[#140 'const_assert']: s#31
[#140 'continue']: s#267
[#140 'discard']: s#252
[#140 'for']: s#260
[#140 'if']: s#271
[#140 'let']: s#264
[#140 'loop']: s#259
[#140 'return']: s#256
[#140 'switch']: s#258
[#140 'var']: s#111
[#140 'while']: s#261
[#140 '{']: s#140
[#140 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#141 '(']: r#78
[#141 ':']: r#78
[#141 ';']: r#78
[#141 '=']: r#78
[#141 '{']: r#78
[#141 /\u200B_disambiguate_template/]: r#78
[#142 ')']: s#237
[#143 /\u200B_template_args_start/]: s#233
[#144 /\u200B_template_args_start/]: s#233
[#145 '!=']: r#79
[#145 '%']: r#79
[#145 '&&']: r#79
[#145 '&']: r#79
[#145 ')']: r#79
[#145 '*']: r#79
[#145 '+']: r#79
[#145 ',']: r#79
[#145 '-']: r#79
[#145 '.']: r#79
[#145 '/']: r#79
[#145 ':']: r#79
[#145 ';']: r#79
[#145 '==']: r#79
[#145 '[']: r#79
[#145 ']']: r#79
[#145 '^']: r#79
[#145 '{']: r#79
[#145 '|']: r#79
[#145 '||']: r#79
[#145 /\u200B_greater_than/]: r#79
[#145 /\u200B_greater_than_equal/]: r#79
[#145 /\u200B_less_than/]: r#79
[#145 /\u200B_less_than_equal/]: r#79
[#145 /\u200B_shift_left/]: r#79
[#145 /\u200B_shift_right/]: r#79
[#145 /\u200B_template_args_end/]: r#79
[#146 '!']: s#69
[#146 '&']: s#72
[#146 '(']: s#83
[#146 '*']: s#71
[#146 '-']: s#68
[#146 'bitcast']: s#78
[#146 'false']: s#90
[#146 'true']: s#89
[#146 '~']: s#70
[#146 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#146 /0[fh]/]: s#95
[#146 /0[iu]?/]: s#92
[#146 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#146 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#146 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#146 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#146 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#146 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#146 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#146 /[1-9][0-9]*[fh]/]: s#96
[#146 /[1-9][0-9]*[iu]?/]: s#93
[#147 '!=']: r#80
[#147 '%']: r#80
[#147 '&&']: r#80
[#147 '&']: r#80
[#147 ')']: r#80
[#147 '*']: r#80
[#147 '+']: r#80
[#147 ',']: r#80
[#147 '-']: r#80
[#147 '/']: r#80
[#147 ':']: r#80
[#147 ';']: r#80
[#147 '==']: r#80
[#147 ']']: r#80
[#147 '^']: r#80
[#147 '{']: r#80
[#147 '|']: r#80
[#147 '||']: r#80
[#147 /\u200B_greater_than/]: r#80
[#147 /\u200B_greater_than_equal/]: r#80
[#147 /\u200B_less_than/]: r#80
[#147 /\u200B_less_than_equal/]: r#80
[#147 /\u200B_shift_left/]: r#80
[#147 /\u200B_shift_right/]: r#80
[#147 /\u200B_template_args_end/]: r#80
[#148 '!=']: r#81
[#148 '%']: r#81
[#148 '&&']: r#81
[#148 '&']: r#81
[#148 ')']: r#81
[#148 '*']: r#81
[#148 '+']: r#81
[#148 ',']: r#81
[#148 '-']: r#81
[#148 '/']: r#81
[#148 ':']: r#81
[#148 ';']: r#81
[#148 '==']: r#81
[#148 ']']: r#81
[#148 '^']: r#81
[#148 '{']: r#81
[#148 '|']: r#81
[#148 '||']: r#81
[#148 /\u200B_greater_than/]: r#81
[#148 /\u200B_greater_than_equal/]: r#81
[#148 /\u200B_less_than/]: r#81
[#148 /\u200B_less_than_equal/]: r#81
[#148 /\u200B_shift_left/]: r#81
[#148 /\u200B_shift_right/]: r#81
[#148 /\u200B_template_args_end/]: r#81
[#149 '!']: s#69
[#149 '&']: s#72
[#149 '(']: s#83
[#149 '*']: s#71
[#149 '-']: s#68
[#149 'bitcast']: s#78
[#149 'false']: s#90
[#149 'true']: s#89
[#149 '~']: s#70
[#149 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#149 /0[fh]/]: s#95
[#149 /0[iu]?/]: s#92
[#149 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#149 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#149 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#149 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#149 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#149 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#149 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#149 /[1-9][0-9]*[fh]/]: s#96
[#149 /[1-9][0-9]*[iu]?/]: s#93
[#150 '/[rgba]/']: s#220
[#150 '/[rgba][rgba]/']: s#221
[#150 '/[rgba][rgba][rgba]/']: s#222
[#150 '/[rgba][rgba][rgba][rgba]/']: s#223
[#150 '/[xyzw]/']: s#224
[#150 '/[xyzw][xyzw]/']: s#225
[#150 '/[xyzw][xyzw][xyzw]/']: s#226
[#150 '/[xyzw][xyzw][xyzw][xyzw]/']: s#227
[#150 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#219
[#151 '!=']: r#82
[#151 '%']: r#82
[#151 '&&']: r#82
[#151 '&']: r#82
[#151 ')']: r#82
[#151 '*']: r#82
[#151 '+']: r#82
[#151 ',']: r#82
[#151 '-']: r#82
[#151 '/']: r#82
[#151 ':']: r#82
[#151 ';']: r#82
[#151 '==']: r#82
[#151 ']']: r#82
[#151 '^']: r#82
[#151 '{']: r#82
[#151 '|']: r#82
[#151 '||']: r#82
[#151 /\u200B_greater_than/]: r#82
[#151 /\u200B_greater_than_equal/]: r#82
[#151 /\u200B_less_than/]: r#82
[#151 /\u200B_less_than_equal/]: r#82
[#151 /\u200B_shift_left/]: r#82
[#151 /\u200B_shift_right/]: r#82
[#151 /\u200B_template_args_end/]: r#82
[#152 '!=']: r#83
[#152 '%']: r#83
[#152 '&&']: r#83
[#152 '&']: r#83
[#152 ')']: r#83
[#152 '*']: r#83
[#152 '+']: r#83
[#152 ',']: r#83
[#152 '-']: r#83
[#152 '/']: r#83
[#152 ':']: r#83
[#152 ';']: r#83
[#152 '==']: r#83
[#152 ']']: r#83
[#152 '^']: r#83
[#152 '{']: r#83
[#152 '|']: r#83
[#152 '||']: r#83
[#152 /\u200B_greater_than/]: r#83
[#152 /\u200B_greater_than_equal/]: r#83
[#152 /\u200B_less_than/]: r#83
[#152 /\u200B_less_than_equal/]: r#83
[#152 /\u200B_shift_left/]: r#83
[#152 /\u200B_shift_right/]: r#83
[#152 /\u200B_template_args_end/]: r#83
[#153 '!=']: r#84
[#153 '%']: r#84
[#153 '&&']: r#84
[#153 '&']: r#84
[#153 ')']: r#84
[#153 '*']: r#84
[#153 '+']: r#84
[#153 ',']: r#84
[#153 '-']: r#84
[#153 '/']: r#84
[#153 ':']: r#84
[#153 ';']: r#84
[#153 '==']: r#84
[#153 ']']: r#84
[#153 '^']: r#84
[#153 '{']: r#84
[#153 '|']: r#84
[#153 '||']: r#84
[#153 /\u200B_greater_than/]: r#84
[#153 /\u200B_greater_than_equal/]: r#84
[#153 /\u200B_less_than/]: r#84
[#153 /\u200B_less_than_equal/]: r#84
[#153 /\u200B_shift_left/]: r#84
[#153 /\u200B_shift_right/]: r#84
[#153 /\u200B_template_args_end/]: r#84
[#154 '!=']: r#85
[#154 '%']: r#85
[#154 '&&']: r#85
[#154 '&']: r#85
[#154 ')']: r#85
[#154 '*']: r#85
[#154 '+']: r#85
[#154 ',']: r#85
[#154 '-']: r#85
[#154 '/']: r#85
[#154 ':']: r#85
[#154 ';']: r#85
[#154 '==']: r#85
[#154 ']']: r#85
[#154 '^']: r#85
[#154 '{']: r#85
[#154 '|']: r#85
[#154 '||']: r#85
[#154 /\u200B_greater_than/]: r#85
[#154 /\u200B_greater_than_equal/]: r#85
[#154 /\u200B_less_than/]: r#85
[#154 /\u200B_less_than_equal/]: r#85
[#154 /\u200B_shift_left/]: r#85
[#154 /\u200B_shift_right/]: r#85
[#154 /\u200B_template_args_end/]: r#85
[#155 '!=']: r#86
[#155 '%']: r#86
[#155 '&&']: r#86
[#155 '&']: r#86
[#155 ')']: r#86
[#155 '*']: r#86
[#155 '+']: r#86
[#155 ',']: r#86
[#155 '-']: r#86
[#155 '/']: r#86
[#155 ':']: r#86
[#155 ';']: r#86
[#155 '==']: r#86
[#155 ']']: r#86
[#155 '^']: r#86
[#155 '{']: r#86
[#155 '|']: r#86
[#155 '||']: r#86
[#155 /\u200B_greater_than/]: r#86
[#155 /\u200B_greater_than_equal/]: r#86
[#155 /\u200B_less_than/]: r#86
[#155 /\u200B_less_than_equal/]: r#86
[#155 /\u200B_shift_left/]: r#86
[#155 /\u200B_shift_right/]: r#86
[#155 /\u200B_template_args_end/]: r#86
[#156 '!']: s#69
[#156 '&']: s#72
[#156 '(']: s#83
[#156 '*']: s#71
[#156 '-']: s#68
[#156 'bitcast']: s#78
[#156 'false']: s#90
[#156 'true']: s#89
[#156 '~']: s#70
[#156 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#156 /0[fh]/]: s#95
[#156 /0[iu]?/]: s#92
[#156 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#156 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#156 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#156 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#156 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#156 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#156 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#156 /[1-9][0-9]*[fh]/]: s#96
[#156 /[1-9][0-9]*[iu]?/]: s#93
[#157 '!']: r#87
[#157 '&']: r#87
[#157 '(']: r#87
[#157 '*']: r#87
[#157 '-']: r#87
[#157 'bitcast']: r#87
[#157 'false']: r#87
[#157 'true']: r#87
[#157 '~']: r#87
[#157 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#87
[#157 /0[fh]/]: r#87
[#157 /0[iu]?/]: r#87
[#157 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#87
[#157 /0[xX][0-9a-fA-F]+[iu]?/]: r#87
[#157 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#87
[#157 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#87
[#157 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#87
[#157 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#87
[#157 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#87
[#157 /[1-9][0-9]*[fh]/]: r#87
[#157 /[1-9][0-9]*[iu]?/]: r#87
[#158 '!']: r#88
[#158 '&']: r#88
[#158 '(']: r#88
[#158 '*']: r#88
[#158 '-']: r#88
[#158 'bitcast']: r#88
[#158 'false']: r#88
[#158 'true']: r#88
[#158 '~']: r#88
[#158 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#88
[#158 /0[fh]/]: r#88
[#158 /0[iu]?/]: r#88
[#158 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#88
[#158 /0[xX][0-9a-fA-F]+[iu]?/]: r#88
[#158 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#88
[#158 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#88
[#158 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#88
[#158 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#88
[#158 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#88
[#158 /[1-9][0-9]*[fh]/]: r#88
[#158 /[1-9][0-9]*[iu]?/]: r#88
[#159 '!']: r#89
[#159 '&']: r#89
[#159 '(']: r#89
[#159 '*']: r#89
[#159 '-']: r#89
[#159 'bitcast']: r#89
[#159 'false']: r#89
[#159 'true']: r#89
[#159 '~']: r#89
[#159 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#89
[#159 /0[fh]/]: r#89
[#159 /0[iu]?/]: r#89
[#159 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#89
[#159 /0[xX][0-9a-fA-F]+[iu]?/]: r#89
[#159 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#89
[#159 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#89
[#159 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#89
[#159 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#89
[#159 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#89
[#159 /[1-9][0-9]*[fh]/]: r#89
[#159 /[1-9][0-9]*[iu]?/]: r#89
[#160 '!']: s#69
[#160 '&']: s#72
[#160 '(']: s#83
[#160 '*']: s#71
[#160 '-']: s#68
[#160 'bitcast']: s#78
[#160 'false']: s#90
[#160 'true']: s#89
[#160 '~']: s#70
[#160 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#160 /0[fh]/]: s#95
[#160 /0[iu]?/]: s#92
[#160 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#160 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#160 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#160 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#160 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#160 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#160 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#160 /[1-9][0-9]*[fh]/]: s#96
[#160 /[1-9][0-9]*[iu]?/]: s#93
[#161 '!']: s#69
[#161 '&']: s#72
[#161 '(']: s#83
[#161 '*']: s#71
[#161 '-']: s#68
[#161 'bitcast']: s#78
[#161 'false']: s#90
[#161 'true']: s#89
[#161 '~']: s#70
[#161 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#161 /0[fh]/]: s#95
[#161 /0[iu]?/]: s#92
[#161 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#161 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#161 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#161 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#161 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#161 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#161 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#161 /[1-9][0-9]*[fh]/]: s#96
[#161 /[1-9][0-9]*[iu]?/]: s#93
[#162 '!']: r#90
[#162 '&']: r#90
[#162 '(']: r#90
[#162 '*']: r#90
[#162 '-']: r#90
[#162 'bitcast']: r#90
[#162 'false']: r#90
[#162 'true']: r#90
[#162 '~']: r#90
[#162 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#90
[#162 /0[fh]/]: r#90
[#162 /0[iu]?/]: r#90
[#162 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#90
[#162 /0[xX][0-9a-fA-F]+[iu]?/]: r#90
[#162 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#90
[#162 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#90
[#162 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#90
[#162 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#90
[#162 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#90
[#162 /[1-9][0-9]*[fh]/]: r#90
[#162 /[1-9][0-9]*[iu]?/]: r#90
[#163 '!']: r#91
[#163 '&']: r#91
[#163 '(']: r#91
[#163 '*']: r#91
[#163 '-']: r#91
[#163 'bitcast']: r#91
[#163 'false']: r#91
[#163 'true']: r#91
[#163 '~']: r#91
[#163 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#91
[#163 /0[fh]/]: r#91
[#163 /0[iu]?/]: r#91
[#163 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#91
[#163 /0[xX][0-9a-fA-F]+[iu]?/]: r#91
[#163 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#91
[#163 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#91
[#163 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#91
[#163 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#91
[#163 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#91
[#163 /[1-9][0-9]*[fh]/]: r#91
[#163 /[1-9][0-9]*[iu]?/]: r#91
[#164 '!']: s#69
[#164 '&']: s#72
[#164 '(']: s#83
[#164 '*']: s#71
[#164 '-']: s#68
[#164 'bitcast']: s#78
[#164 'false']: s#90
[#164 'true']: s#89
[#164 '~']: s#70
[#164 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#164 /0[fh]/]: s#95
[#164 /0[iu]?/]: s#92
[#164 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#164 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#164 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#164 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#164 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#164 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#164 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#164 /[1-9][0-9]*[fh]/]: s#96
[#164 /[1-9][0-9]*[iu]?/]: s#93
[#165 '!']: r#92
[#165 '&']: r#92
[#165 '(']: r#92
[#165 '*']: r#92
[#165 '-']: r#92
[#165 'bitcast']: r#92
[#165 'false']: r#92
[#165 'true']: r#92
[#165 '~']: r#92
[#165 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#92
[#165 /0[fh]/]: r#92
[#165 /0[iu]?/]: r#92
[#165 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#92
[#165 /0[xX][0-9a-fA-F]+[iu]?/]: r#92
[#165 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#92
[#165 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#92
[#165 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#92
[#165 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#92
[#165 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#92
[#165 /[1-9][0-9]*[fh]/]: r#92
[#165 /[1-9][0-9]*[iu]?/]: r#92
[#166 '!']: r#93
[#166 '&']: r#93
[#166 '(']: r#93
[#166 '*']: r#93
[#166 '-']: r#93
[#166 'bitcast']: r#93
[#166 'false']: r#93
[#166 'true']: r#93
[#166 '~']: r#93
[#166 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#93
[#166 /0[fh]/]: r#93
[#166 /0[iu]?/]: r#93
[#166 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#93
[#166 /0[xX][0-9a-fA-F]+[iu]?/]: r#93
[#166 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#93
[#166 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#93
[#166 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#93
[#166 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#93
[#166 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#93
[#166 /[1-9][0-9]*[fh]/]: r#93
[#166 /[1-9][0-9]*[iu]?/]: r#93
[#167 '!']: s#69
[#167 '&']: s#72
[#167 '(']: s#83
[#167 '*']: s#71
[#167 '-']: s#68
[#167 'bitcast']: s#78
[#167 'false']: s#90
[#167 'true']: s#89
[#167 '~']: s#70
[#167 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#167 /0[fh]/]: s#95
[#167 /0[iu]?/]: s#92
[#167 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#167 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#167 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#167 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#167 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#167 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#167 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#167 /[1-9][0-9]*[fh]/]: s#96
[#167 /[1-9][0-9]*[iu]?/]: s#93
[#168 '!']: s#69
[#168 '&']: s#72
[#168 '(']: s#83
[#168 '*']: s#71
[#168 '-']: s#68
[#168 'bitcast']: s#78
[#168 'false']: s#90
[#168 'true']: s#89
[#168 '~']: s#70
[#168 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#168 /0[fh]/]: s#95
[#168 /0[iu]?/]: s#92
[#168 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#168 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#168 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#168 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#168 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#168 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#168 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#168 /[1-9][0-9]*[fh]/]: s#96
[#168 /[1-9][0-9]*[iu]?/]: s#93
[#169 '!']: s#69
[#169 '&']: s#72
[#169 '(']: s#83
[#169 '*']: s#71
[#169 '-']: s#68
[#169 'bitcast']: s#78
[#169 'false']: s#90
[#169 'true']: s#89
[#169 '~']: s#70
[#169 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#169 /0[fh]/]: s#95
[#169 /0[iu]?/]: s#92
[#169 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#169 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#169 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#169 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#169 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#169 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#169 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#169 /[1-9][0-9]*[fh]/]: s#96
[#169 /[1-9][0-9]*[iu]?/]: s#93
[#170 '!']: s#69
[#170 '&']: s#72
[#170 '(']: s#83
[#170 '*']: s#71
[#170 '-']: s#68
[#170 'bitcast']: s#78
[#170 'false']: s#90
[#170 'true']: s#89
[#170 '~']: s#70
[#170 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#170 /0[fh]/]: s#95
[#170 /0[iu]?/]: s#92
[#170 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#170 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#170 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#170 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#170 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#170 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#170 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#170 /[1-9][0-9]*[fh]/]: s#96
[#170 /[1-9][0-9]*[iu]?/]: s#93
[#171 '!']: s#69
[#171 '&']: s#72
[#171 '(']: s#83
[#171 '*']: s#71
[#171 '-']: s#68
[#171 'bitcast']: s#78
[#171 'false']: s#90
[#171 'true']: s#89
[#171 '~']: s#70
[#171 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#171 /0[fh]/]: s#95
[#171 /0[iu]?/]: s#92
[#171 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#171 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#171 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#171 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#171 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#171 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#171 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#171 /[1-9][0-9]*[fh]/]: s#96
[#171 /[1-9][0-9]*[iu]?/]: s#93
[#172 '!']: s#69
[#172 '&']: s#72
[#172 '(']: s#83
[#172 '*']: s#71
[#172 '-']: s#68
[#172 'bitcast']: s#78
[#172 'false']: s#90
[#172 'true']: s#89
[#172 '~']: s#70
[#172 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#172 /0[fh]/]: s#95
[#172 /0[iu]?/]: s#92
[#172 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#172 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#172 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#172 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#172 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#172 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#172 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#172 /[1-9][0-9]*[fh]/]: s#96
[#172 /[1-9][0-9]*[iu]?/]: s#93
[#173 '!']: s#69
[#173 '&']: s#72
[#173 '(']: s#83
[#173 '*']: s#71
[#173 '-']: s#68
[#173 'bitcast']: s#78
[#173 'false']: s#90
[#173 'true']: s#89
[#173 '~']: s#70
[#173 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#173 /0[fh]/]: s#95
[#173 /0[iu]?/]: s#92
[#173 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#173 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#173 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#173 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#173 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#173 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#173 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#173 /[1-9][0-9]*[fh]/]: s#96
[#173 /[1-9][0-9]*[iu]?/]: s#93
[#174 '!']: s#69
[#174 '&']: s#72
[#174 '(']: s#83
[#174 '*']: s#71
[#174 '-']: s#68
[#174 'bitcast']: s#78
[#174 'false']: s#90
[#174 'true']: s#89
[#174 '~']: s#70
[#174 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#174 /0[fh]/]: s#95
[#174 /0[iu]?/]: s#92
[#174 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#174 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#174 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#174 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#174 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#174 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#174 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#174 /[1-9][0-9]*[fh]/]: s#96
[#174 /[1-9][0-9]*[iu]?/]: s#93
[#175 '!']: s#69
[#175 '&']: s#72
[#175 '(']: s#83
[#175 '*']: s#71
[#175 '-']: s#68
[#175 'bitcast']: s#78
[#175 'false']: s#90
[#175 'true']: s#89
[#175 '~']: s#70
[#175 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#175 /0[fh]/]: s#95
[#175 /0[iu]?/]: s#92
[#175 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#175 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#175 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#175 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#175 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#175 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#175 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#175 /[1-9][0-9]*[fh]/]: s#96
[#175 /[1-9][0-9]*[iu]?/]: s#93
[#176 '!']: r#94
[#176 '&']: r#94
[#176 '(']: r#94
[#176 '*']: r#94
[#176 '-']: r#94
[#176 'bitcast']: r#94
[#176 'false']: r#94
[#176 'true']: r#94
[#176 '~']: r#94
[#176 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#94
[#176 /0[fh]/]: r#94
[#176 /0[iu]?/]: r#94
[#176 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#94
[#176 /0[xX][0-9a-fA-F]+[iu]?/]: r#94
[#176 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#94
[#176 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#94
[#176 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#94
[#176 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#94
[#176 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#94
[#176 /[1-9][0-9]*[fh]/]: r#94
[#176 /[1-9][0-9]*[iu]?/]: r#94
[#177 '!']: r#95
[#177 '&']: r#95
[#177 '(']: r#95
[#177 '*']: r#95
[#177 '-']: r#95
[#177 'bitcast']: r#95
[#177 'false']: r#95
[#177 'true']: r#95
[#177 '~']: r#95
[#177 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#95
[#177 /0[fh]/]: r#95
[#177 /0[iu]?/]: r#95
[#177 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#95
[#177 /0[xX][0-9a-fA-F]+[iu]?/]: r#95
[#177 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#95
[#177 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#95
[#177 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#95
[#177 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#95
[#177 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#95
[#177 /[1-9][0-9]*[fh]/]: r#95
[#177 /[1-9][0-9]*[iu]?/]: r#95
[#178 '!']: r#96
[#178 '&']: r#96
[#178 '(']: r#96
[#178 '*']: r#96
[#178 '-']: r#96
[#178 'bitcast']: r#96
[#178 'false']: r#96
[#178 'true']: r#96
[#178 '~']: r#96
[#178 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#96
[#178 /0[fh]/]: r#96
[#178 /0[iu]?/]: r#96
[#178 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#96
[#178 /0[xX][0-9a-fA-F]+[iu]?/]: r#96
[#178 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#96
[#178 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#96
[#178 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#96
[#178 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#96
[#178 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#96
[#178 /[1-9][0-9]*[fh]/]: r#96
[#178 /[1-9][0-9]*[iu]?/]: r#96
[#179 '!']: r#97
[#179 '&']: r#97
[#179 '(']: r#97
[#179 '*']: r#97
[#179 '-']: r#97
[#179 'bitcast']: r#97
[#179 'false']: r#97
[#179 'true']: r#97
[#179 '~']: r#97
[#179 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#97
[#179 /0[fh]/]: r#97
[#179 /0[iu]?/]: r#97
[#179 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#97
[#179 /0[xX][0-9a-fA-F]+[iu]?/]: r#97
[#179 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#97
[#179 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#97
[#179 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#97
[#179 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#97
[#179 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#97
[#179 /[1-9][0-9]*[fh]/]: r#97
[#179 /[1-9][0-9]*[iu]?/]: r#97
[#180 '!']: s#69
[#180 '&']: s#72
[#180 '(']: s#83
[#180 '*']: s#71
[#180 '-']: s#68
[#180 'bitcast']: s#78
[#180 'false']: s#90
[#180 'true']: s#89
[#180 '~']: s#70
[#180 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#180 /0[fh]/]: s#95
[#180 /0[iu]?/]: s#92
[#180 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#180 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#180 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#180 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#180 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#180 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#180 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#180 /[1-9][0-9]*[fh]/]: s#96
[#180 /[1-9][0-9]*[iu]?/]: s#93
[#181 '!']: s#69
[#181 '&']: s#72
[#181 '(']: s#83
[#181 '*']: s#71
[#181 '-']: s#68
[#181 'bitcast']: s#78
[#181 'false']: s#90
[#181 'true']: s#89
[#181 '~']: s#70
[#181 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#181 /0[fh]/]: s#95
[#181 /0[iu]?/]: s#92
[#181 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#181 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#181 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#181 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#181 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#181 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#181 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#181 /[1-9][0-9]*[fh]/]: s#96
[#181 /[1-9][0-9]*[iu]?/]: s#93
[#182 '!']: s#69
[#182 '&']: s#72
[#182 '(']: s#83
[#182 '*']: s#71
[#182 '-']: s#68
[#182 'bitcast']: s#78
[#182 'false']: s#90
[#182 'true']: s#89
[#182 '~']: s#70
[#182 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#182 /0[fh]/]: s#95
[#182 /0[iu]?/]: s#92
[#182 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#182 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#182 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#182 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#182 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#182 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#182 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#182 /[1-9][0-9]*[fh]/]: s#96
[#182 /[1-9][0-9]*[iu]?/]: s#93
[#183 '!']: s#69
[#183 '&']: s#72
[#183 '(']: s#83
[#183 '*']: s#71
[#183 '-']: s#68
[#183 'bitcast']: s#78
[#183 'false']: s#90
[#183 'true']: s#89
[#183 '~']: s#70
[#183 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#183 /0[fh]/]: s#95
[#183 /0[iu]?/]: s#92
[#183 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#183 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#183 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#183 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#183 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#183 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#183 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#183 /[1-9][0-9]*[fh]/]: s#96
[#183 /[1-9][0-9]*[iu]?/]: s#93
[#184 '!']: s#69
[#184 '&']: s#72
[#184 '(']: s#83
[#184 '*']: s#71
[#184 '-']: s#68
[#184 'bitcast']: s#78
[#184 'false']: s#90
[#184 'true']: s#89
[#184 '~']: s#70
[#184 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#184 /0[fh]/]: s#95
[#184 /0[iu]?/]: s#92
[#184 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#184 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#184 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#184 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#184 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#184 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#184 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#184 /[1-9][0-9]*[fh]/]: s#96
[#184 /[1-9][0-9]*[iu]?/]: s#93
[#185 '!']: s#69
[#185 '&']: s#72
[#185 '(']: s#83
[#185 '*']: s#71
[#185 '-']: s#68
[#185 'bitcast']: s#78
[#185 'false']: s#90
[#185 'true']: s#89
[#185 '~']: s#70
[#185 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#185 /0[fh]/]: s#95
[#185 /0[iu]?/]: s#92
[#185 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#185 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#185 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#185 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#185 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#185 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#185 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#185 /[1-9][0-9]*[fh]/]: s#96
[#185 /[1-9][0-9]*[iu]?/]: s#93
[#186 '!']: s#69
[#186 '&']: s#72
[#186 '(']: s#83
[#186 '*']: s#71
[#186 '-']: s#68
[#186 'bitcast']: s#78
[#186 'false']: s#90
[#186 'true']: s#89
[#186 '~']: s#70
[#186 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#186 /0[fh]/]: s#95
[#186 /0[iu]?/]: s#92
[#186 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#186 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#186 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#186 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#186 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#186 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#186 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#186 /[1-9][0-9]*[fh]/]: s#96
[#186 /[1-9][0-9]*[iu]?/]: s#93
[#187 '!']: s#69
[#187 '&']: s#72
[#187 '(']: s#83
[#187 '*']: s#71
[#187 '-']: s#68
[#187 'bitcast']: s#78
[#187 'false']: s#90
[#187 'true']: s#89
[#187 '~']: s#70
[#187 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#187 /0[fh]/]: s#95
[#187 /0[iu]?/]: s#92
[#187 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#187 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#187 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#187 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#187 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#187 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#187 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#187 /[1-9][0-9]*[fh]/]: s#96
[#187 /[1-9][0-9]*[iu]?/]: s#93
[#188 '!']: s#69
[#188 '&']: s#72
[#188 '(']: s#83
[#188 '*']: s#71
[#188 '-']: s#68
[#188 'bitcast']: s#78
[#188 'false']: s#90
[#188 'true']: s#89
[#188 '~']: s#70
[#188 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#188 /0[fh]/]: s#95
[#188 /0[iu]?/]: s#92
[#188 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#188 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#188 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#188 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#188 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#188 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#188 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#188 /[1-9][0-9]*[fh]/]: s#96
[#188 /[1-9][0-9]*[iu]?/]: s#93
[#189 '!']: s#69
[#189 '&']: s#72
[#189 '(']: s#83
[#189 '*']: s#71
[#189 '-']: s#68
[#189 'bitcast']: s#78
[#189 'false']: s#90
[#189 'true']: s#89
[#189 '~']: s#70
[#189 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#189 /0[fh]/]: s#95
[#189 /0[iu]?/]: s#92
[#189 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#189 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#189 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#189 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#189 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#189 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#189 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#189 /[1-9][0-9]*[fh]/]: s#96
[#189 /[1-9][0-9]*[iu]?/]: s#93
[#190 '!']: s#69
[#190 '&']: s#72
[#190 '(']: s#83
[#190 '*']: s#71
[#190 '-']: s#68
[#190 'bitcast']: s#78
[#190 'false']: s#90
[#190 'true']: s#89
[#190 '~']: s#70
[#190 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#190 /0[fh]/]: s#95
[#190 /0[iu]?/]: s#92
[#190 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#190 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#190 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#190 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#190 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#190 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#190 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#190 /[1-9][0-9]*[fh]/]: s#96
[#190 /[1-9][0-9]*[iu]?/]: s#93
[#191 ',']: s#379
[#192 ',']: s#379
[#193 ',']: s#379
[#194 ',']: s#379
[#195 ',']: s#379
[#196 ',']: s#382
[#197 ',']: s#379
[#198 ',']: s#379
[#199 ',']: s#376
[#200 ')']: r#98
[#200 ',']: r#98
[#200 ':']: r#98
[#200 ';']: r#98
[#200 ']']: r#98
[#200 '{']: r#98
[#200 '||']: r#99
[#201 '!=']: r#33
[#201 '%']: r#33
[#201 '&&']: r#33
[#201 ')']: r#33
[#201 '*']: r#33
[#201 '+']: r#33
[#201 ',']: r#33
[#201 '-']: r#33
[#201 '/']: r#33
[#201 ':']: r#33
[#201 ';']: r#33
[#201 '==']: r#33
[#201 ']']: r#33
[#201 '{']: r#33
[#201 '||']: r#33
[#201 /\u200B_greater_than/]: r#33
[#201 /\u200B_greater_than_equal/]: r#33
[#201 /\u200B_less_than/]: r#33
[#201 /\u200B_less_than_equal/]: r#33
[#201 /\u200B_shift_left/]: s#162
[#201 /\u200B_shift_right/]: s#163
[#201 /\u200B_template_args_end/]: r#33
[#202 '&&']: r#101
[#202 ')']: r#100
[#202 ',']: r#100
[#202 ':']: r#100
[#202 ';']: r#100
[#202 ']']: r#100
[#202 '{']: r#100
[#203 '&&']: r#102
[#203 ')']: r#102
[#203 ',']: r#102
[#203 ':']: r#102
[#203 ';']: r#102
[#203 ']']: r#102
[#203 '{']: r#102
[#203 '||']: r#102
[#203 /\u200B_template_args_end/]: r#102
[#204 '&&']: r#103
[#204 ')']: r#103
[#204 ',']: r#103
[#204 ':']: r#103
[#204 ';']: r#103
[#204 ']']: r#103
[#204 '{']: r#103
[#204 '||']: r#103
[#204 /\u200B_template_args_end/]: r#103
[#205 '&&']: r#104
[#205 ')']: r#104
[#205 ',']: r#104
[#205 ':']: r#104
[#205 ';']: r#104
[#205 ']']: r#104
[#205 '{']: r#104
[#205 '||']: r#104
[#205 /\u200B_template_args_end/]: r#104
[#206 '&&']: r#105
[#206 ')']: r#105
[#206 ',']: r#105
[#206 ':']: r#105
[#206 ';']: r#105
[#206 ']']: r#105
[#206 '{']: r#105
[#206 '||']: r#105
[#206 /\u200B_template_args_end/]: r#105
[#207 '&&']: r#106
[#207 ')']: r#106
[#207 ',']: r#106
[#207 ':']: r#106
[#207 ';']: r#106
[#207 ']']: r#106
[#207 '{']: r#106
[#207 '||']: r#106
[#207 /\u200B_template_args_end/]: r#106
[#208 '&&']: r#107
[#208 ')']: r#107
[#208 ',']: r#107
[#208 ':']: r#107
[#208 ';']: r#107
[#208 ']']: r#107
[#208 '{']: r#107
[#208 '||']: r#107
[#208 /\u200B_template_args_end/]: r#107
[#209 '&']: r#109
[#209 ')']: r#108
[#209 ',']: r#108
[#209 ':']: r#108
[#209 ';']: r#108
[#209 ']']: r#108
[#209 '{']: r#108
[#209 /\u200B_template_args_end/]: r#108
[#210 ')']: r#110
[#210 ',']: r#110
[#210 ':']: r#110
[#210 ';']: r#110
[#210 ']']: r#110
[#210 '{']: r#110
[#210 '|']: r#111
[#210 /\u200B_template_args_end/]: r#110
[#211 ')']: r#112
[#211 ',']: r#112
[#211 ':']: r#112
[#211 ';']: r#112
[#211 ']']: r#112
[#211 '^']: r#113
[#211 '{']: r#112
[#211 /\u200B_template_args_end/]: r#112
[#212 '!=']: r#114
[#212 '%']: s#159
[#212 '&&']: r#114
[#212 ')']: r#114
[#212 '*']: s#157
[#212 '+']: r#114
[#212 ',']: r#114
[#212 '-']: r#114
[#212 '/']: s#158
[#212 ':']: r#114
[#212 ';']: r#114
[#212 '==']: r#114
[#212 ']']: r#114
[#212 '{']: r#114
[#212 '||']: r#114
[#212 /\u200B_greater_than/]: r#114
[#212 /\u200B_greater_than_equal/]: r#114
[#212 /\u200B_less_than/]: r#114
[#212 /\u200B_less_than_equal/]: r#114
[#212 /\u200B_template_args_end/]: r#114
[#213 '!=']: r#33
[#213 '%']: r#33
[#213 '&&']: r#33
[#213 ')']: r#33
[#213 '*']: r#33
[#213 '+']: r#33
[#213 ',']: r#33
[#213 '-']: r#33
[#213 '/']: r#33
[#213 ':']: r#33
[#213 ';']: r#33
[#213 '==']: r#33
[#213 ']']: r#33
[#213 '{']: r#33
[#213 '||']: r#33
[#213 /\u200B_greater_than/]: r#33
[#213 /\u200B_greater_than_equal/]: r#33
[#213 /\u200B_less_than/]: r#33
[#213 /\u200B_less_than_equal/]: r#33
[#213 /\u200B_template_args_end/]: r#33
[#214 '!=']: r#115
[#214 '&&']: r#115
[#214 ')']: r#115
[#214 ',']: r#115
[#214 ':']: r#115
[#214 ';']: r#115
[#214 '==']: r#115
[#214 ']']: r#115
[#214 '{']: r#115
[#214 '||']: r#115
[#214 /\u200B_greater_than/]: r#115
[#214 /\u200B_greater_than_equal/]: r#115
[#214 /\u200B_less_than/]: r#115
[#214 /\u200B_less_than_equal/]: r#115
[#214 /\u200B_template_args_end/]: r#115
[#215 '!=']: r#116
[#215 '&&']: r#116
[#215 ')']: r#116
[#215 ',']: r#116
[#215 ':']: r#116
[#215 ';']: r#116
[#215 '==']: r#116
[#215 ']']: r#116
[#215 '{']: r#116
[#215 '||']: r#116
[#215 /\u200B_greater_than/]: r#116
[#215 /\u200B_greater_than_equal/]: r#116
[#215 /\u200B_less_than/]: r#116
[#215 /\u200B_less_than_equal/]: r#116
[#215 /\u200B_template_args_end/]: r#116
[#216 '!=']: r#117
[#216 '%']: r#117
[#216 '&&']: r#117
[#216 ')']: r#117
[#216 '*']: r#117
[#216 '+']: r#117
[#216 ',']: r#117
[#216 '-']: r#117
[#216 '/']: r#117
[#216 ':']: r#117
[#216 ';']: r#117
[#216 '==']: r#117
[#216 ']']: r#117
[#216 '{']: r#117
[#216 '||']: r#117
[#216 /\u200B_greater_than/]: r#117
[#216 /\u200B_greater_than_equal/]: r#117
[#216 /\u200B_less_than/]: r#117
[#216 /\u200B_less_than_equal/]: r#117
[#216 /\u200B_template_args_end/]: r#117
[#217 '.']: s#150
[#217 '[']: s#149
[#218 '.']: s#150
[#218 '[']: s#149
[#219 '!=']: r#118
[#219 '%']: r#118
[#219 '%=']: r#118
[#219 '&&']: r#118
[#219 '&']: r#118
[#219 '&=']: r#118
[#219 ')']: r#118
[#219 '*']: r#118
[#219 '*=']: r#118
[#219 '+']: r#118
[#219 '++']: r#118
[#219 '+=']: r#118
[#219 ',']: r#118
[#219 '-']: r#118
[#219 '--']: r#118
[#219 '-=']: r#118
[#219 '.']: r#118
[#219 '/']: r#118
[#219 '/=']: r#118
[#219 ':']: r#118
[#219 ';']: r#118
[#219 '=']: r#118
[#219 '==']: r#118
[#219 '[']: r#118
[#219 ']']: r#118
[#219 '^']: r#118
[#219 '^=']: r#118
[#219 '{']: r#118
[#219 '|']: r#118
[#219 '|=']: r#118
[#219 '||']: r#118
[#219 /\u200B_greater_than/]: r#118
[#219 /\u200B_greater_than_equal/]: r#118
[#219 /\u200B_less_than/]: r#118
[#219 /\u200B_less_than_equal/]: r#118
[#219 /\u200B_shift_left/]: r#118
[#219 /\u200B_shift_left_assign/]: r#118
[#219 /\u200B_shift_right/]: r#118
[#219 /\u200B_shift_right_assign/]: r#118
[#219 /\u200B_template_args_end/]: r#118
[#220 '!=']: r#119
[#220 '%']: r#119
[#220 '%=']: r#119
[#220 '&&']: r#119
[#220 '&']: r#119
[#220 '&=']: r#119
[#220 ')']: r#119
[#220 '*']: r#119
[#220 '*=']: r#119
[#220 '+']: r#119
[#220 '++']: r#119
[#220 '+=']: r#119
[#220 ',']: r#119
[#220 '-']: r#119
[#220 '--']: r#119
[#220 '-=']: r#119
[#220 '.']: r#119
[#220 '/']: r#119
[#220 '/=']: r#119
[#220 ':']: r#119
[#220 ';']: r#119
[#220 '=']: r#119
[#220 '==']: r#119
[#220 '[']: r#119
[#220 ']']: r#119
[#220 '^']: r#119
[#220 '^=']: r#119
[#220 '{']: r#119
[#220 '|']: r#119
[#220 '|=']: r#119
[#220 '||']: r#119
[#220 /\u200B_greater_than/]: r#119
[#220 /\u200B_greater_than_equal/]: r#119
[#220 /\u200B_less_than/]: r#119
[#220 /\u200B_less_than_equal/]: r#119
[#220 /\u200B_shift_left/]: r#119
[#220 /\u200B_shift_left_assign/]: r#119
[#220 /\u200B_shift_right/]: r#119
[#220 /\u200B_shift_right_assign/]: r#119
[#220 /\u200B_template_args_end/]: r#119
[#221 '!=']: r#120
[#221 '%']: r#120
[#221 '%=']: r#120
[#221 '&&']: r#120
[#221 '&']: r#120
[#221 '&=']: r#120
[#221 ')']: r#120
[#221 '*']: r#120
[#221 '*=']: r#120
[#221 '+']: r#120
[#221 '++']: r#120
[#221 '+=']: r#120
[#221 ',']: r#120
[#221 '-']: r#120
[#221 '--']: r#120
[#221 '-=']: r#120
[#221 '.']: r#120
[#221 '/']: r#120
[#221 '/=']: r#120
[#221 ':']: r#120
[#221 ';']: r#120
[#221 '=']: r#120
[#221 '==']: r#120
[#221 '[']: r#120
[#221 ']']: r#120
[#221 '^']: r#120
[#221 '^=']: r#120
[#221 '{']: r#120
[#221 '|']: r#120
[#221 '|=']: r#120
[#221 '||']: r#120
[#221 /\u200B_greater_than/]: r#120
[#221 /\u200B_greater_than_equal/]: r#120
[#221 /\u200B_less_than/]: r#120
[#221 /\u200B_less_than_equal/]: r#120
[#221 /\u200B_shift_left/]: r#120
[#221 /\u200B_shift_left_assign/]: r#120
[#221 /\u200B_shift_right/]: r#120
[#221 /\u200B_shift_right_assign/]: r#120
[#221 /\u200B_template_args_end/]: r#120
[#222 '!=']: r#121
[#222 '%']: r#121
[#222 '%=']: r#121
[#222 '&&']: r#121
[#222 '&']: r#121
[#222 '&=']: r#121
[#222 ')']: r#121
[#222 '*']: r#121
[#222 '*=']: r#121
[#222 '+']: r#121
[#222 '++']: r#121
[#222 '+=']: r#121
[#222 ',']: r#121
[#222 '-']: r#121
[#222 '--']: r#121
[#222 '-=']: r#121
[#222 '.']: r#121
[#222 '/']: r#121
[#222 '/=']: r#121
[#222 ':']: r#121
[#222 ';']: r#121
[#222 '=']: r#121
[#222 '==']: r#121
[#222 '[']: r#121
[#222 ']']: r#121
[#222 '^']: r#121
[#222 '^=']: r#121
[#222 '{']: r#121
[#222 '|']: r#121
[#222 '|=']: r#121
[#222 '||']: r#121
[#222 /\u200B_greater_than/]: r#121
[#222 /\u200B_greater_than_equal/]: r#121
[#222 /\u200B_less_than/]: r#121
[#222 /\u200B_less_than_equal/]: r#121
[#222 /\u200B_shift_left/]: r#121
[#222 /\u200B_shift_left_assign/]: r#121
[#222 /\u200B_shift_right/]: r#121
[#222 /\u200B_shift_right_assign/]: r#121
[#222 /\u200B_template_args_end/]: r#121
[#223 '!=']: r#122
[#223 '%']: r#122
[#223 '%=']: r#122
[#223 '&&']: r#122
[#223 '&']: r#122
[#223 '&=']: r#122
[#223 ')']: r#122
[#223 '*']: r#122
[#223 '*=']: r#122
[#223 '+']: r#122
[#223 '++']: r#122
[#223 '+=']: r#122
[#223 ',']: r#122
[#223 '-']: r#122
[#223 '--']: r#122
[#223 '-=']: r#122
[#223 '.']: r#122
[#223 '/']: r#122
[#223 '/=']: r#122
[#223 ':']: r#122
[#223 ';']: r#122
[#223 '=']: r#122
[#223 '==']: r#122
[#223 '[']: r#122
[#223 ']']: r#122
[#223 '^']: r#122
[#223 '^=']: r#122
[#223 '{']: r#122
[#223 '|']: r#122
[#223 '|=']: r#122
[#223 '||']: r#122
[#223 /\u200B_greater_than/]: r#122
[#223 /\u200B_greater_than_equal/]: r#122
[#223 /\u200B_less_than/]: r#122
[#223 /\u200B_less_than_equal/]: r#122
[#223 /\u200B_shift_left/]: r#122
[#223 /\u200B_shift_left_assign/]: r#122
[#223 /\u200B_shift_right/]: r#122
[#223 /\u200B_shift_right_assign/]: r#122
[#223 /\u200B_template_args_end/]: r#122
[#224 '!=']: r#123
[#224 '%']: r#123
[#224 '%=']: r#123
[#224 '&&']: r#123
[#224 '&']: r#123
[#224 '&=']: r#123
[#224 ')']: r#123
[#224 '*']: r#123
[#224 '*=']: r#123
[#224 '+']: r#123
[#224 '++']: r#123
[#224 '+=']: r#123
[#224 ',']: r#123
[#224 '-']: r#123
[#224 '--']: r#123
[#224 '-=']: r#123
[#224 '.']: r#123
[#224 '/']: r#123
[#224 '/=']: r#123
[#224 ':']: r#123
[#224 ';']: r#123
[#224 '=']: r#123
[#224 '==']: r#123
[#224 '[']: r#123
[#224 ']']: r#123
[#224 '^']: r#123
[#224 '^=']: r#123
[#224 '{']: r#123
[#224 '|']: r#123
[#224 '|=']: r#123
[#224 '||']: r#123
[#224 /\u200B_greater_than/]: r#123
[#224 /\u200B_greater_than_equal/]: r#123
[#224 /\u200B_less_than/]: r#123
[#224 /\u200B_less_than_equal/]: r#123
[#224 /\u200B_shift_left/]: r#123
[#224 /\u200B_shift_left_assign/]: r#123
[#224 /\u200B_shift_right/]: r#123
[#224 /\u200B_shift_right_assign/]: r#123
[#224 /\u200B_template_args_end/]: r#123
[#225 '!=']: r#124
[#225 '%']: r#124
[#225 '%=']: r#124
[#225 '&&']: r#124
[#225 '&']: r#124
[#225 '&=']: r#124
[#225 ')']: r#124
[#225 '*']: r#124
[#225 '*=']: r#124
[#225 '+']: r#124
[#225 '++']: r#124
[#225 '+=']: r#124
[#225 ',']: r#124
[#225 '-']: r#124
[#225 '--']: r#124
[#225 '-=']: r#124
[#225 '.']: r#124
[#225 '/']: r#124
[#225 '/=']: r#124
[#225 ':']: r#124
[#225 ';']: r#124
[#225 '=']: r#124
[#225 '==']: r#124
[#225 '[']: r#124
[#225 ']']: r#124
[#225 '^']: r#124
[#225 '^=']: r#124
[#225 '{']: r#124
[#225 '|']: r#124
[#225 '|=']: r#124
[#225 '||']: r#124
[#225 /\u200B_greater_than/]: r#124
[#225 /\u200B_greater_than_equal/]: r#124
[#225 /\u200B_less_than/]: r#124
[#225 /\u200B_less_than_equal/]: r#124
[#225 /\u200B_shift_left/]: r#124
[#225 /\u200B_shift_left_assign/]: r#124
[#225 /\u200B_shift_right/]: r#124
[#225 /\u200B_shift_right_assign/]: r#124
[#225 /\u200B_template_args_end/]: r#124
[#226 '!=']: r#125
[#226 '%']: r#125
[#226 '%=']: r#125
[#226 '&&']: r#125
[#226 '&']: r#125
[#226 '&=']: r#125
[#226 ')']: r#125
[#226 '*']: r#125
[#226 '*=']: r#125
[#226 '+']: r#125
[#226 '++']: r#125
[#226 '+=']: r#125
[#226 ',']: r#125
[#226 '-']: r#125
[#226 '--']: r#125
[#226 '-=']: r#125
[#226 '.']: r#125
[#226 '/']: r#125
[#226 '/=']: r#125
[#226 ':']: r#125
[#226 ';']: r#125
[#226 '=']: r#125
[#226 '==']: r#125
[#226 '[']: r#125
[#226 ']']: r#125
[#226 '^']: r#125
[#226 '^=']: r#125
[#226 '{']: r#125
[#226 '|']: r#125
[#226 '|=']: r#125
[#226 '||']: r#125
[#226 /\u200B_greater_than/]: r#125
[#226 /\u200B_greater_than_equal/]: r#125
[#226 /\u200B_less_than/]: r#125
[#226 /\u200B_less_than_equal/]: r#125
[#226 /\u200B_shift_left/]: r#125
[#226 /\u200B_shift_left_assign/]: r#125
[#226 /\u200B_shift_right/]: r#125
[#226 /\u200B_shift_right_assign/]: r#125
[#226 /\u200B_template_args_end/]: r#125
[#227 '!=']: r#126
[#227 '%']: r#126
[#227 '%=']: r#126
[#227 '&&']: r#126
[#227 '&']: r#126
[#227 '&=']: r#126
[#227 ')']: r#126
[#227 '*']: r#126
[#227 '*=']: r#126
[#227 '+']: r#126
[#227 '++']: r#126
[#227 '+=']: r#126
[#227 ',']: r#126
[#227 '-']: r#126
[#227 '--']: r#126
[#227 '-=']: r#126
[#227 '.']: r#126
[#227 '/']: r#126
[#227 '/=']: r#126
[#227 ':']: r#126
[#227 ';']: r#126
[#227 '=']: r#126
[#227 '==']: r#126
[#227 '[']: r#126
[#227 ']']: r#126
[#227 '^']: r#126
[#227 '^=']: r#126
[#227 '{']: r#126
[#227 '|']: r#126
[#227 '|=']: r#126
[#227 '||']: r#126
[#227 /\u200B_greater_than/]: r#126
[#227 /\u200B_greater_than_equal/]: r#126
[#227 /\u200B_less_than/]: r#126
[#227 /\u200B_less_than_equal/]: r#126
[#227 /\u200B_shift_left/]: r#126
[#227 /\u200B_shift_left_assign/]: r#126
[#227 /\u200B_shift_right/]: r#126
[#227 /\u200B_shift_right_assign/]: r#126
[#227 /\u200B_template_args_end/]: r#126
[#228 ']']: s#370
[#229 ')']: s#369
[#230 ')']: r#127
[#231 ',']: s#368
[#232 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#233 '!']: r#128
[#233 '&']: r#128
[#233 '(']: r#128
[#233 '*']: r#128
[#233 '-']: r#128
[#233 'bitcast']: r#128
[#233 'false']: r#128
[#233 'true']: r#128
[#233 '~']: r#128
[#233 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#128
[#233 /0[fh]/]: r#128
[#233 /0[iu]?/]: r#128
[#233 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#128
[#233 /0[xX][0-9a-fA-F]+[iu]?/]: r#128
[#233 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#128
[#233 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#128
[#233 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#128
[#233 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#128
[#233 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#128
[#233 /[1-9][0-9]*[fh]/]: r#128
[#233 /[1-9][0-9]*[iu]?/]: r#128
[#234 '!=']: r#129
[#234 '%']: r#129
[#234 '&&']: r#129
[#234 '&']: r#129
[#234 '(']: r#129
[#234 ')']: r#129
[#234 '*']: r#129
[#234 '+']: r#129
[#234 ',']: r#129
[#234 '-']: r#129
[#234 '.']: r#129
[#234 '/']: r#129
[#234 ':']: r#129
[#234 ';']: r#129
[#234 '==']: r#129
[#234 '[']: r#129
[#234 ']']: r#129
[#234 '^']: r#129
[#234 '{']: r#129
[#234 '|']: r#129
[#234 '||']: r#129
[#234 /\u200B_greater_than/]: r#129
[#234 /\u200B_greater_than_equal/]: r#129
[#234 /\u200B_less_than/]: r#129
[#234 /\u200B_less_than_equal/]: r#129
[#234 /\u200B_shift_left/]: r#129
[#234 /\u200B_shift_right/]: r#129
[#234 /\u200B_template_args_end/]: r#129
[#235 '!=']: r#130
[#235 '%']: r#130
[#235 '&&']: r#130
[#235 '&']: r#130
[#235 '(']: r#130
[#235 ')']: r#130
[#235 '*']: r#130
[#235 '+']: r#130
[#235 ',']: r#130
[#235 '-']: r#130
[#235 '.']: r#130
[#235 '/']: r#130
[#235 ':']: r#130
[#235 ';']: r#130
[#235 '=']: r#130
[#235 '==']: r#130
[#235 '[']: r#130
[#235 ']']: r#130
[#235 '^']: r#130
[#235 '{']: r#130
[#235 '|']: r#130
[#235 '||']: r#130
[#235 '}']: r#130
[#235 /\u200B_greater_than/]: r#130
[#235 /\u200B_greater_than_equal/]: r#130
[#235 /\u200B_less_than/]: r#130
[#235 /\u200B_less_than_equal/]: r#130
[#235 /\u200B_shift_left/]: r#130
[#235 /\u200B_shift_right/]: r#130
[#235 /\u200B_template_args_end/]: r#130
[#236 '!']: s#69
[#236 '&']: s#72
[#236 '(']: s#83
[#236 '*']: s#71
[#236 '-']: s#68
[#236 'bitcast']: s#78
[#236 'false']: s#90
[#236 'true']: s#89
[#236 '~']: s#70
[#236 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#236 /0[fh]/]: s#95
[#236 /0[iu]?/]: s#92
[#236 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#236 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#236 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#236 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#236 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#236 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#236 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#236 /[1-9][0-9]*[fh]/]: s#96
[#236 /[1-9][0-9]*[iu]?/]: s#93
[#237 '!=']: r#131
[#237 '%']: r#131
[#237 '&&']: r#131
[#237 '&']: r#131
[#237 ')']: r#131
[#237 '*']: r#131
[#237 '+']: r#131
[#237 ',']: r#131
[#237 '-']: r#131
[#237 '.']: r#131
[#237 '/']: r#131
[#237 ':']: r#131
[#237 ';']: r#131
[#237 '==']: r#131
[#237 '[']: r#131
[#237 ']']: r#131
[#237 '^']: r#131
[#237 '{']: r#131
[#237 '|']: r#131
[#237 '||']: r#131
[#237 /\u200B_greater_than/]: r#131
[#237 /\u200B_greater_than_equal/]: r#131
[#237 /\u200B_less_than/]: r#131
[#237 /\u200B_less_than_equal/]: r#131
[#237 /\u200B_shift_left/]: r#131
[#237 /\u200B_shift_right/]: r#131
[#237 /\u200B_template_args_end/]: r#131
[#238 '}']: s#357
[#239 '}']: r#132
[#240 '&']: s#277
[#240 '(']: s#278
[#240 '*']: s#276
[#240 ';']: s#241
[#240 '_']: s#274
[#240 'break']: s#266
[#240 'const']: s#265
[#240 'const_assert']: s#31
[#240 'continue']: s#267
[#240 'discard']: s#252
[#240 'for']: s#260
[#240 'if']: s#271
[#240 'let']: s#264
[#240 'loop']: s#259
[#240 'return']: s#256
[#240 'switch']: s#258
[#240 'var']: s#111
[#240 'while']: s#261
[#240 '{']: s#140
[#240 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#241 '&']: r#133
[#241 '(']: r#133
[#241 '*']: r#133
[#241 ';']: r#133
[#241 '_']: r#133
[#241 'break']: r#133
[#241 'const']: r#133
[#241 'const_assert']: r#133
[#241 'continue']: r#133
[#241 'continuing']: r#133
[#241 'discard']: r#133
[#241 'for']: r#133
[#241 'if']: r#133
[#241 'let']: r#133
[#241 'loop']: r#133
[#241 'return']: r#133
[#241 'switch']: r#133
[#241 'var']: r#133
[#241 'while']: r#133
[#241 '{']: r#133
[#241 '}']: r#133
[#241 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#133
[#242 ';']: s#355
[#243 '&']: r#134
[#243 '(']: r#134
[#243 '*']: r#134
[#243 ';']: r#134
[#243 '_']: r#134
[#243 'break']: r#134
[#243 'const']: r#134
[#243 'const_assert']: r#134
[#243 'continue']: r#134
[#243 'continuing']: r#134
[#243 'discard']: r#134
[#243 'for']: r#134
[#243 'if']: r#134
[#243 'let']: r#134
[#243 'loop']: r#134
[#243 'return']: r#134
[#243 'switch']: r#134
[#243 'var']: r#134
[#243 'while']: r#134
[#243 '{']: r#134
[#243 '}']: r#134
[#243 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#134
[#244 '&']: r#135
[#244 '(']: r#135
[#244 '*']: r#135
[#244 ';']: r#135
[#244 '_']: r#135
[#244 'break']: r#135
[#244 'const']: r#135
[#244 'const_assert']: r#135
[#244 'continue']: r#135
[#244 'continuing']: r#135
[#244 'discard']: r#135
[#244 'for']: r#135
[#244 'if']: r#135
[#244 'let']: r#135
[#244 'loop']: r#135
[#244 'return']: r#135
[#244 'switch']: r#135
[#244 'var']: r#135
[#244 'while']: r#135
[#244 '{']: r#135
[#244 '}']: r#135
[#244 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#135
[#245 '&']: r#136
[#245 '(']: r#136
[#245 '*']: r#136
[#245 ';']: r#136
[#245 '_']: r#136
[#245 'break']: r#136
[#245 'const']: r#136
[#245 'const_assert']: r#136
[#245 'continue']: r#136
[#245 'continuing']: r#136
[#245 'discard']: r#136
[#245 'for']: r#136
[#245 'if']: r#136
[#245 'let']: r#136
[#245 'loop']: r#136
[#245 'return']: r#136
[#245 'switch']: r#136
[#245 'var']: r#136
[#245 'while']: r#136
[#245 '{']: r#136
[#245 '}']: r#136
[#245 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#136
[#246 '&']: r#137
[#246 '(']: r#137
[#246 '*']: r#137
[#246 ';']: r#137
[#246 '_']: r#137
[#246 'break']: r#137
[#246 'const']: r#137
[#246 'const_assert']: r#137
[#246 'continue']: r#137
[#246 'continuing']: r#137
[#246 'discard']: r#137
[#246 'for']: r#137
[#246 'if']: r#137
[#246 'let']: r#137
[#246 'loop']: r#137
[#246 'return']: r#137
[#246 'switch']: r#137
[#246 'var']: r#137
[#246 'while']: r#137
[#246 '{']: r#137
[#246 '}']: r#137
[#246 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#137
[#247 '&']: r#138
[#247 '(']: r#138
[#247 '*']: r#138
[#247 ';']: r#138
[#247 '_']: r#138
[#247 'break']: r#138
[#247 'const']: r#138
[#247 'const_assert']: r#138
[#247 'continue']: r#138
[#247 'continuing']: r#138
[#247 'discard']: r#138
[#247 'for']: r#138
[#247 'if']: r#138
[#247 'let']: r#138
[#247 'loop']: r#138
[#247 'return']: r#138
[#247 'switch']: r#138
[#247 'var']: r#138
[#247 'while']: r#138
[#247 '{']: r#138
[#247 '}']: r#138
[#247 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#138
[#248 ';']: s#354
[#249 ';']: s#353
[#250 ';']: s#352
[#251 ';']: s#351
[#252 ';']: s#350
[#253 ';']: s#349
[#254 '&']: r#139
[#254 '(']: r#139
[#254 '*']: r#139
[#254 ';']: r#139
[#254 '_']: r#139
[#254 'break']: r#139
[#254 'const']: r#139
[#254 'const_assert']: r#139
[#254 'continue']: r#139
[#254 'continuing']: r#139
[#254 'discard']: r#139
[#254 'for']: r#139
[#254 'if']: r#139
[#254 'let']: r#139
[#254 'loop']: r#139
[#254 'return']: r#139
[#254 'switch']: r#139
[#254 'var']: r#139
[#254 'while']: r#139
[#254 '{']: r#139
[#254 '}']: r#139
[#254 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#139
[#255 ';']: s#348
[#256 '!']: s#69
[#256 '&']: s#72
[#256 '(']: s#83
[#256 '*']: s#71
[#256 '-']: s#68
[#256 'bitcast']: s#78
[#256 'false']: s#90
[#256 'true']: s#89
[#256 '~']: s#70
[#256 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#256 /0[fh]/]: s#95
[#256 /0[iu]?/]: s#92
[#256 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#256 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#256 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#256 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#256 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#256 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#256 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#256 /[1-9][0-9]*[fh]/]: s#96
[#256 /[1-9][0-9]*[iu]?/]: s#93
[#257 'else']: s#345
[#258 '!']: s#69
[#258 '&']: s#72
[#258 '(']: s#83
[#258 '*']: s#71
[#258 '-']: s#68
[#258 'bitcast']: s#78
[#258 'false']: s#90
[#258 'true']: s#89
[#258 '~']: s#70
[#258 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#258 /0[fh]/]: s#95
[#258 /0[iu]?/]: s#92
[#258 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#258 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#258 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#258 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#258 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#258 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#258 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#258 /[1-9][0-9]*[fh]/]: s#96
[#258 /[1-9][0-9]*[iu]?/]: s#93
[#259 '{']: s#340
[#260 '(']: s#339
[#261 '!']: s#69
[#261 '&']: s#72
[#261 '(']: s#83
[#261 '*']: s#71
[#261 '-']: s#68
[#261 'bitcast']: s#78
[#261 'false']: s#90
[#261 'true']: s#89
[#261 '~']: s#70
[#261 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#261 /0[fh]/]: s#95
[#261 /0[iu]?/]: s#92
[#261 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#261 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#261 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#261 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#261 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#261 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#261 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#261 /[1-9][0-9]*[fh]/]: s#96
[#261 /[1-9][0-9]*[iu]?/]: s#93
[#262 '(']: s#146
[#263 ';']: r#140
[#263 '=']: s#336
[#264 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#265 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#266 ';']: r#141
[#267 ';']: r#142
[#268 ')']: r#143
[#268 ';']: r#143
[#269 ')']: r#144
[#269 ';']: r#144
[#270 ')']: r#145
[#270 ';']: r#145
[#271 '!']: s#69
[#271 '&']: s#72
[#271 '(']: s#83
[#271 '*']: s#71
[#271 '-']: s#68
[#271 'bitcast']: s#78
[#271 'false']: s#90
[#271 'true']: s#89
[#271 '~']: s#70
[#271 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#271 /0[fh]/]: s#95
[#271 /0[iu]?/]: s#92
[#271 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#271 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#271 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#271 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#271 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#271 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#271 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#271 /[1-9][0-9]*[fh]/]: s#96
[#271 /[1-9][0-9]*[iu]?/]: s#93
[#272 /\u200B_disambiguate_template/]: s#128
[#273 '%=']: s#324
[#273 '&=']: s#325
[#273 '*=']: s#322
[#273 '++']: s#316
[#273 '+=']: s#320
[#273 '--']: s#317
[#273 '-=']: s#321
[#273 '/=']: s#323
[#273 '=']: s#318
[#273 '^=']: s#327
[#273 '|=']: s#326
[#273 /\u200B_shift_left_assign/]: s#331
[#273 /\u200B_shift_right_assign/]: s#330
[#274 '=']: s#314
[#275 '.']: s#150
[#275 '[']: s#149
[#276 '&']: s#277
[#276 '(']: s#278
[#276 '*']: s#276
[#276 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#277 '&']: s#277
[#277 '(']: s#278
[#277 '*']: s#276
[#277 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#278 '&']: s#277
[#278 '(']: s#278
[#278 '*']: s#276
[#278 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#279 '@']: s#36
[#280 ',']: s#301
[#281 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#219
[#282 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#146
[#283 '@']: s#36
[#284 ';']: r#147
[#285 /\u200B_disambiguate_template/]: s#128
[#286 ';']: r#148
[#287 '!']: s#69
[#287 '&']: s#72
[#287 '(']: s#83
[#287 '*']: s#71
[#287 '-']: s#68
[#287 'bitcast']: s#78
[#287 'false']: s#90
[#287 'true']: s#89
[#287 '~']: s#70
[#287 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#287 /0[fh]/]: s#95
[#287 /0[iu]?/]: s#92
[#287 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#287 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#287 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#287 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#287 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#287 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#287 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#287 /[1-9][0-9]*[fh]/]: s#96
[#287 /[1-9][0-9]*[iu]?/]: s#93
[#288 ';']: r#149
[#289 ';']: r#150
[#289 '=']: r#150
[#290 ';']: r#151
[#291 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#292 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#152
[#293 ';']: r#153
[#293 '=']: r#153
[#294 ';']: r#154
[#295 /\u200B_template_args_start/]: s#233
[#296 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#155
[#297 ':']: s#441
[#298 ',']: s#440
[#299 ',']: r#156
[#299 '}']: r#156
[#300 ',']: s#301
[#301 '@']: s#36
[#302 ')']: s#436
[#303 ')']: r#157
[#304 ',']: s#435
[#305 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#306 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#158
[#307 '@']: s#36
[#308 ')']: s#429
[#309 /\u200B_disambiguate_template/]: s#128
[#310 '%=']: r#159
[#310 '&=']: r#159
[#310 ')']: r#159
[#310 '*=']: r#159
[#310 '++']: r#159
[#310 '+=']: r#159
[#310 '--']: r#159
[#310 '-=']: r#159
[#310 '/=']: r#159
[#310 '=']: r#159
[#310 '^=']: r#159
[#310 '|=']: r#159
[#310 /\u200B_shift_left_assign/]: r#159
[#310 /\u200B_shift_right_assign/]: r#159
[#311 '%=']: r#160
[#311 '&=']: r#160
[#311 ')']: r#160
[#311 '*=']: r#160
[#311 '++']: r#160
[#311 '+=']: r#160
[#311 '--']: r#160
[#311 '-=']: r#160
[#311 '/=']: r#160
[#311 '=']: r#160
[#311 '^=']: r#160
[#311 '|=']: r#160
[#311 /\u200B_shift_left_assign/]: r#160
[#311 /\u200B_shift_right_assign/]: r#160
[#312 '%=']: r#161
[#312 '&=']: r#161
[#312 ')']: r#161
[#312 '*=']: r#161
[#312 '++']: r#161
[#312 '+=']: r#161
[#312 '--']: r#161
[#312 '-=']: r#161
[#312 '/=']: r#161
[#312 '=']: r#161
[#312 '^=']: r#161
[#312 '|=']: r#161
[#312 /\u200B_shift_left_assign/]: r#161
[#312 /\u200B_shift_right_assign/]: r#161
[#313 '%=']: r#162
[#313 '&=']: r#162
[#313 ')']: r#162
[#313 '*=']: r#162
[#313 '++']: r#162
[#313 '+=']: r#162
[#313 '--']: r#162
[#313 '-=']: r#162
[#313 '/=']: r#162
[#313 '=']: r#162
[#313 '^=']: r#162
[#313 '|=']: r#162
[#313 /\u200B_shift_left_assign/]: r#162
[#313 /\u200B_shift_right_assign/]: r#162
[#314 '!']: s#69
[#314 '&']: s#72
[#314 '(']: s#83
[#314 '*']: s#71
[#314 '-']: s#68
[#314 'bitcast']: s#78
[#314 'false']: s#90
[#314 'true']: s#89
[#314 '~']: s#70
[#314 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#314 /0[fh]/]: s#95
[#314 /0[iu]?/]: s#92
[#314 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#314 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#314 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#314 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#314 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#314 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#314 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#314 /[1-9][0-9]*[fh]/]: s#96
[#314 /[1-9][0-9]*[iu]?/]: s#93
[#315 '!']: s#69
[#315 '&']: s#72
[#315 '(']: s#83
[#315 '*']: s#71
[#315 '-']: s#68
[#315 'bitcast']: s#78
[#315 'false']: s#90
[#315 'true']: s#89
[#315 '~']: s#70
[#315 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#315 /0[fh]/]: s#95
[#315 /0[iu]?/]: s#92
[#315 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#315 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#315 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#315 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#315 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#315 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#315 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#315 /[1-9][0-9]*[fh]/]: s#96
[#315 /[1-9][0-9]*[iu]?/]: s#93
[#316 ')']: r#163
[#316 ';']: r#163
[#317 ')']: r#164
[#317 ';']: r#164
[#318 '!']: r#165
[#318 '&']: r#165
[#318 '(']: r#165
[#318 '*']: r#165
[#318 '-']: r#165
[#318 'bitcast']: r#165
[#318 'false']: r#165
[#318 'true']: r#165
[#318 '~']: r#165
[#318 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#165
[#318 /0[fh]/]: r#165
[#318 /0[iu]?/]: r#165
[#318 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#165
[#318 /0[xX][0-9a-fA-F]+[iu]?/]: r#165
[#318 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#165
[#318 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#165
[#318 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#165
[#318 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#165
[#318 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#165
[#318 /[1-9][0-9]*[fh]/]: r#165
[#318 /[1-9][0-9]*[iu]?/]: r#165
[#319 '!']: r#166
[#319 '&']: r#166
[#319 '(']: r#166
[#319 '*']: r#166
[#319 '-']: r#166
[#319 'bitcast']: r#166
[#319 'false']: r#166
[#319 'true']: r#166
[#319 '~']: r#166
[#319 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#166
[#319 /0[fh]/]: r#166
[#319 /0[iu]?/]: r#166
[#319 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#166
[#319 /0[xX][0-9a-fA-F]+[iu]?/]: r#166
[#319 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#166
[#319 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#166
[#319 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#166
[#319 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#166
[#319 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#166
[#319 /[1-9][0-9]*[fh]/]: r#166
[#319 /[1-9][0-9]*[iu]?/]: r#166
[#320 '!']: r#167
[#320 '&']: r#167
[#320 '(']: r#167
[#320 '*']: r#167
[#320 '-']: r#167
[#320 'bitcast']: r#167
[#320 'false']: r#167
[#320 'true']: r#167
[#320 '~']: r#167
[#320 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#167
[#320 /0[fh]/]: r#167
[#320 /0[iu]?/]: r#167
[#320 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#167
[#320 /0[xX][0-9a-fA-F]+[iu]?/]: r#167
[#320 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#167
[#320 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#167
[#320 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#167
[#320 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#167
[#320 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#167
[#320 /[1-9][0-9]*[fh]/]: r#167
[#320 /[1-9][0-9]*[iu]?/]: r#167
[#321 '!']: r#168
[#321 '&']: r#168
[#321 '(']: r#168
[#321 '*']: r#168
[#321 '-']: r#168
[#321 'bitcast']: r#168
[#321 'false']: r#168
[#321 'true']: r#168
[#321 '~']: r#168
[#321 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#168
[#321 /0[fh]/]: r#168
[#321 /0[iu]?/]: r#168
[#321 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#168
[#321 /0[xX][0-9a-fA-F]+[iu]?/]: r#168
[#321 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#168
[#321 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#168
[#321 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#168
[#321 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#168
[#321 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#168
[#321 /[1-9][0-9]*[fh]/]: r#168
[#321 /[1-9][0-9]*[iu]?/]: r#168
[#322 '!']: r#169
[#322 '&']: r#169
[#322 '(']: r#169
[#322 '*']: r#169
[#322 '-']: r#169
[#322 'bitcast']: r#169
[#322 'false']: r#169
[#322 'true']: r#169
[#322 '~']: r#169
[#322 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#169
[#322 /0[fh]/]: r#169
[#322 /0[iu]?/]: r#169
[#322 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#169
[#322 /0[xX][0-9a-fA-F]+[iu]?/]: r#169
[#322 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#169
[#322 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#169
[#322 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#169
[#322 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#169
[#322 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#169
[#322 /[1-9][0-9]*[fh]/]: r#169
[#322 /[1-9][0-9]*[iu]?/]: r#169
[#323 '!']: r#170
[#323 '&']: r#170
[#323 '(']: r#170
[#323 '*']: r#170
[#323 '-']: r#170
[#323 'bitcast']: r#170
[#323 'false']: r#170
[#323 'true']: r#170
[#323 '~']: r#170
[#323 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#170
[#323 /0[fh]/]: r#170
[#323 /0[iu]?/]: r#170
[#323 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#170
[#323 /0[xX][0-9a-fA-F]+[iu]?/]: r#170
[#323 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#170
[#323 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#170
[#323 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#170
[#323 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#170
[#323 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#170
[#323 /[1-9][0-9]*[fh]/]: r#170
[#323 /[1-9][0-9]*[iu]?/]: r#170
[#324 '!']: r#171
[#324 '&']: r#171
[#324 '(']: r#171
[#324 '*']: r#171
[#324 '-']: r#171
[#324 'bitcast']: r#171
[#324 'false']: r#171
[#324 'true']: r#171
[#324 '~']: r#171
[#324 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#171
[#324 /0[fh]/]: r#171
[#324 /0[iu]?/]: r#171
[#324 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#171
[#324 /0[xX][0-9a-fA-F]+[iu]?/]: r#171
[#324 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#171
[#324 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#171
[#324 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#171
[#324 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#171
[#324 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#171
[#324 /[1-9][0-9]*[fh]/]: r#171
[#324 /[1-9][0-9]*[iu]?/]: r#171
[#325 '!']: r#172
[#325 '&']: r#172
[#325 '(']: r#172
[#325 '*']: r#172
[#325 '-']: r#172
[#325 'bitcast']: r#172
[#325 'false']: r#172
[#325 'true']: r#172
[#325 '~']: r#172
[#325 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#172
[#325 /0[fh]/]: r#172
[#325 /0[iu]?/]: r#172
[#325 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#172
[#325 /0[xX][0-9a-fA-F]+[iu]?/]: r#172
[#325 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#172
[#325 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#172
[#325 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#172
[#325 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#172
[#325 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#172
[#325 /[1-9][0-9]*[fh]/]: r#172
[#325 /[1-9][0-9]*[iu]?/]: r#172
[#326 '!']: r#173
[#326 '&']: r#173
[#326 '(']: r#173
[#326 '*']: r#173
[#326 '-']: r#173
[#326 'bitcast']: r#173
[#326 'false']: r#173
[#326 'true']: r#173
[#326 '~']: r#173
[#326 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#173
[#326 /0[fh]/]: r#173
[#326 /0[iu]?/]: r#173
[#326 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#173
[#326 /0[xX][0-9a-fA-F]+[iu]?/]: r#173
[#326 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#173
[#326 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#173
[#326 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#173
[#326 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#173
[#326 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#173
[#326 /[1-9][0-9]*[fh]/]: r#173
[#326 /[1-9][0-9]*[iu]?/]: r#173
[#327 '!']: r#174
[#327 '&']: r#174
[#327 '(']: r#174
[#327 '*']: r#174
[#327 '-']: r#174
[#327 'bitcast']: r#174
[#327 'false']: r#174
[#327 'true']: r#174
[#327 '~']: r#174
[#327 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#174
[#327 /0[fh]/]: r#174
[#327 /0[iu]?/]: r#174
[#327 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#174
[#327 /0[xX][0-9a-fA-F]+[iu]?/]: r#174
[#327 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#174
[#327 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#174
[#327 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#174
[#327 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#174
[#327 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#174
[#327 /[1-9][0-9]*[fh]/]: r#174
[#327 /[1-9][0-9]*[iu]?/]: r#174
[#328 '!']: r#175
[#328 '&']: r#175
[#328 '(']: r#175
[#328 '*']: r#175
[#328 '-']: r#175
[#328 'bitcast']: r#175
[#328 'false']: r#175
[#328 'true']: r#175
[#328 '~']: r#175
[#328 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#175
[#328 /0[fh]/]: r#175
[#328 /0[iu]?/]: r#175
[#328 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#175
[#328 /0[xX][0-9a-fA-F]+[iu]?/]: r#175
[#328 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#175
[#328 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#175
[#328 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#175
[#328 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#175
[#328 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#175
[#328 /[1-9][0-9]*[fh]/]: r#175
[#328 /[1-9][0-9]*[iu]?/]: r#175
[#329 '!']: r#176
[#329 '&']: r#176
[#329 '(']: r#176
[#329 '*']: r#176
[#329 '-']: r#176
[#329 'bitcast']: r#176
[#329 'false']: r#176
[#329 'true']: r#176
[#329 '~']: r#176
[#329 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#176
[#329 /0[fh]/]: r#176
[#329 /0[iu]?/]: r#176
[#329 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#176
[#329 /0[xX][0-9a-fA-F]+[iu]?/]: r#176
[#329 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#176
[#329 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#176
[#329 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#176
[#329 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#176
[#329 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#176
[#329 /[1-9][0-9]*[fh]/]: r#176
[#329 /[1-9][0-9]*[iu]?/]: r#176
[#330 '!']: r#177
[#330 '&']: r#177
[#330 '(']: r#177
[#330 '*']: r#177
[#330 '-']: r#177
[#330 'bitcast']: r#177
[#330 'false']: r#177
[#330 'true']: r#177
[#330 '~']: r#177
[#330 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#177
[#330 /0[fh]/]: r#177
[#330 /0[iu]?/]: r#177
[#330 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#177
[#330 /0[xX][0-9a-fA-F]+[iu]?/]: r#177
[#330 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#177
[#330 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#177
[#330 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#177
[#330 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#177
[#330 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#177
[#330 /[1-9][0-9]*[fh]/]: r#177
[#330 /[1-9][0-9]*[iu]?/]: r#177
[#331 '!']: r#178
[#331 '&']: r#178
[#331 '(']: r#178
[#331 '*']: r#178
[#331 '-']: r#178
[#331 'bitcast']: r#178
[#331 'false']: r#178
[#331 'true']: r#178
[#331 '~']: r#178
[#331 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#178
[#331 /0[fh]/]: r#178
[#331 /0[iu]?/]: r#178
[#331 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#178
[#331 /0[xX][0-9a-fA-F]+[iu]?/]: r#178
[#331 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#178
[#331 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#178
[#331 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#178
[#331 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#178
[#331 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#178
[#331 /[1-9][0-9]*[fh]/]: r#178
[#331 /[1-9][0-9]*[iu]?/]: r#178
[#332 '%=']: r#179
[#332 '&=']: r#179
[#332 '*=']: r#179
[#332 '++']: r#179
[#332 '+=']: r#179
[#332 '--']: r#179
[#332 '-=']: r#179
[#332 '.']: r#179
[#332 '/=']: r#179
[#332 '=']: r#179
[#332 '[']: r#179
[#332 '^=']: r#179
[#332 '|=']: r#179
[#332 /\u200B_shift_left_assign/]: r#179
[#332 /\u200B_shift_right_assign/]: r#179
[#332 /\u200B_template_args_start/]: s#233
[#333 '{']: s#140
[#334 '=']: s#424
[#335 '=']: s#423
[#336 '!']: s#69
[#336 '&']: s#72
[#336 '(']: s#83
[#336 '*']: s#71
[#336 '-']: s#68
[#336 'bitcast']: s#78
[#336 'false']: s#90
[#336 'true']: s#89
[#336 '~']: s#70
[#336 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#336 /0[fh]/]: s#95
[#336 /0[iu]?/]: s#92
[#336 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#336 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#336 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#336 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#336 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#336 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#336 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#336 /[1-9][0-9]*[fh]/]: s#96
[#336 /[1-9][0-9]*[iu]?/]: s#93
[#337 ')']: r#180
[#337 ';']: r#180
[#338 '{']: s#140
[#339 '&']: s#277
[#339 '(']: s#278
[#339 '*']: s#276
[#339 '_']: s#274
[#339 'const']: s#265
[#339 'let']: s#264
[#339 'var']: s#111
[#339 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#340 '&']: s#277
[#340 '(']: s#278
[#340 '*']: s#276
[#340 ';']: s#241
[#340 '_']: s#274
[#340 'break']: s#266
[#340 'const']: s#265
[#340 'const_assert']: s#31
[#340 'continue']: s#267
[#340 'discard']: s#252
[#340 'for']: s#260
[#340 'if']: s#271
[#340 'let']: s#264
[#340 'loop']: s#259
[#340 'return']: s#256
[#340 'switch']: s#258
[#340 'var']: s#111
[#340 'while']: s#261
[#340 '{']: s#140
[#340 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#341 '{']: s#411
[#342 'else']: s#410
[#343 '&']: r#181
[#343 '(']: r#181
[#343 '*']: r#181
[#343 ';']: r#181
[#343 '_']: r#181
[#343 'break']: r#181
[#343 'const']: r#181
[#343 'const_assert']: r#181
[#343 'continue']: r#181
[#343 'continuing']: r#181
[#343 'discard']: r#181
[#343 'else']: r#181
[#343 'for']: r#181
[#343 'if']: r#181
[#343 'let']: r#181
[#343 'loop']: r#181
[#343 'return']: r#181
[#343 'switch']: r#181
[#343 'var']: r#181
[#343 'while']: r#181
[#343 '{']: r#181
[#343 '}']: r#181
[#343 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#181
[#344 'else']: s#345
[#345 'if']: s#406
[#346 ';']: r#182
[#347 ';']: r#183
[#348 '&']: r#184
[#348 '(']: r#184
[#348 '*']: r#184
[#348 ';']: r#184
[#348 '_']: r#184
[#348 'break']: r#184
[#348 'const']: r#184
[#348 'const_assert']: r#184
[#348 'continue']: r#184
[#348 'continuing']: r#184
[#348 'discard']: r#184
[#348 'for']: r#184
[#348 'if']: r#184
[#348 'let']: r#184
[#348 'loop']: r#184
[#348 'return']: r#184
[#348 'switch']: r#184
[#348 'var']: r#184
[#348 'while']: r#184
[#348 '{']: r#184
[#348 '}']: r#184
[#348 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#184
[#349 '&']: r#185
[#349 '(']: r#185
[#349 '*']: r#185
[#349 ';']: r#185
[#349 '_']: r#185
[#349 'break']: r#185
[#349 'const']: r#185
[#349 'const_assert']: r#185
[#349 'continue']: r#185
[#349 'continuing']: r#185
[#349 'discard']: r#185
[#349 'for']: r#185
[#349 'if']: r#185
[#349 'let']: r#185
[#349 'loop']: r#185
[#349 'return']: r#185
[#349 'switch']: r#185
[#349 'var']: r#185
[#349 'while']: r#185
[#349 '{']: r#185
[#349 '}']: r#185
[#349 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#185
[#350 '&']: r#186
[#350 '(']: r#186
[#350 '*']: r#186
[#350 ';']: r#186
[#350 '_']: r#186
[#350 'break']: r#186
[#350 'const']: r#186
[#350 'const_assert']: r#186
[#350 'continue']: r#186
[#350 'continuing']: r#186
[#350 'discard']: r#186
[#350 'for']: r#186
[#350 'if']: r#186
[#350 'let']: r#186
[#350 'loop']: r#186
[#350 'return']: r#186
[#350 'switch']: r#186
[#350 'var']: r#186
[#350 'while']: r#186
[#350 '{']: r#186
[#350 '}']: r#186
[#350 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#186
[#351 '&']: r#187
[#351 '(']: r#187
[#351 '*']: r#187
[#351 ';']: r#187
[#351 '_']: r#187
[#351 'break']: r#187
[#351 'const']: r#187
[#351 'const_assert']: r#187
[#351 'continue']: r#187
[#351 'continuing']: r#187
[#351 'discard']: r#187
[#351 'for']: r#187
[#351 'if']: r#187
[#351 'let']: r#187
[#351 'loop']: r#187
[#351 'return']: r#187
[#351 'switch']: r#187
[#351 'var']: r#187
[#351 'while']: r#187
[#351 '{']: r#187
[#351 '}']: r#187
[#351 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#187
[#352 '&']: r#188
[#352 '(']: r#188
[#352 '*']: r#188
[#352 ';']: r#188
[#352 '_']: r#188
[#352 'break']: r#188
[#352 'const']: r#188
[#352 'const_assert']: r#188
[#352 'continue']: r#188
[#352 'continuing']: r#188
[#352 'discard']: r#188
[#352 'for']: r#188
[#352 'if']: r#188
[#352 'let']: r#188
[#352 'loop']: r#188
[#352 'return']: r#188
[#352 'switch']: r#188
[#352 'var']: r#188
[#352 'while']: r#188
[#352 '{']: r#188
[#352 '}']: r#188
[#352 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#188
[#353 '&']: r#189
[#353 '(']: r#189
[#353 '*']: r#189
[#353 ';']: r#189
[#353 '_']: r#189
[#353 'break']: r#189
[#353 'const']: r#189
[#353 'const_assert']: r#189
[#353 'continue']: r#189
[#353 'continuing']: r#189
[#353 'discard']: r#189
[#353 'for']: r#189
[#353 'if']: r#189
[#353 'let']: r#189
[#353 'loop']: r#189
[#353 'return']: r#189
[#353 'switch']: r#189
[#353 'var']: r#189
[#353 'while']: r#189
[#353 '{']: r#189
[#353 '}']: r#189
[#353 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#189
[#354 '&']: r#190
[#354 '(']: r#190
[#354 '*']: r#190
[#354 ';']: r#190
[#354 '_']: r#190
[#354 'break']: r#190
[#354 'const']: r#190
[#354 'const_assert']: r#190
[#354 'continue']: r#190
[#354 'continuing']: r#190
[#354 'discard']: r#190
[#354 'for']: r#190
[#354 'if']: r#190
[#354 'let']: r#190
[#354 'loop']: r#190
[#354 'return']: r#190
[#354 'switch']: r#190
[#354 'var']: r#190
[#354 'while']: r#190
[#354 '{']: r#190
[#354 '}']: r#190
[#354 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#190
[#355 '&']: r#191
[#355 '(']: r#191
[#355 '*']: r#191
[#355 ';']: r#191
[#355 '_']: r#191
[#355 'break']: r#191
[#355 'const']: r#191
[#355 'const_assert']: r#191
[#355 'continue']: r#191
[#355 'continuing']: r#191
[#355 'discard']: r#191
[#355 'for']: r#191
[#355 'if']: r#191
[#355 'let']: r#191
[#355 'loop']: r#191
[#355 'return']: r#191
[#355 'switch']: r#191
[#355 'var']: r#191
[#355 'while']: r#191
[#355 '{']: r#191
[#355 '}']: r#191
[#355 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#191
[#356 '}']: r#192
[#357 '&']: r#193
[#357 '(']: r#193
[#357 '*']: r#193
[#357 ';']: r#193
[#357 '@']: r#193
[#357 '_']: r#193
[#357 'alias']: r#193
[#357 'break']: r#193
[#357 'case']: r#193
[#357 'const']: r#193
[#357 'const_assert']: r#193
[#357 'continue']: r#193
[#357 'continuing']: r#193
[#357 'default']: r#193
[#357 'discard']: r#193
[#357 'else']: r#193
[#357 'fn']: r#193
[#357 'for']: r#193
[#357 'if']: r#193
[#357 'let']: r#193
[#357 'loop']: r#193
[#357 'override']: r#193
[#357 'return']: r#193
[#357 'struct']: r#193
[#357 'switch']: r#193
[#357 'var']: r#193
[#357 'while']: r#193
[#357 '{']: r#193
[#357 '}']: r#193
[#357 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#193
[#357 EndOfText]: r#193
[#358 /\u200B_template_args_end/]: s#398
[#359 ',']: s#404
[#360 '&&']: r#26
[#360 ',']: r#194
[#360 '||']: r#25
[#360 /\u200B_template_args_end/]: r#194
[#361 '||']: s#400
[#362 '&&']: s#399
[#363 ',']: r#195
[#363 /\u200B_template_args_end/]: r#195
[#364 /\u200B_template_args_end/]: s#398
[#365 ',']: s#396
[#366 ')']: r#196
[#366 ',']: r#196
[#367 ',']: s#368
[#368 '!']: s#69
[#368 '&']: s#72
[#368 '(']: s#83
[#368 '*']: s#71
[#368 '-']: s#68
[#368 'bitcast']: s#78
[#368 'false']: s#90
[#368 'true']: s#89
[#368 '~']: s#70
[#368 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#368 /0[fh]/]: s#95
[#368 /0[iu]?/]: s#92
[#368 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#368 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#368 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#368 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#368 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#368 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#368 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#368 /[1-9][0-9]*[fh]/]: s#96
[#368 /[1-9][0-9]*[iu]?/]: s#93
[#369 '!=']: r#197
[#369 '%']: r#197
[#369 '&&']: r#197
[#369 '&']: r#197
[#369 ')']: r#197
[#369 '*']: r#197
[#369 '+']: r#197
[#369 ',']: r#197
[#369 '-']: r#197
[#369 '.']: r#197
[#369 '/']: r#197
[#369 ':']: r#197
[#369 ';']: r#197
[#369 '==']: r#197
[#369 '[']: r#197
[#369 ']']: r#197
[#369 '^']: r#197
[#369 '{']: r#197
[#369 '|']: r#197
[#369 '||']: r#197
[#369 /\u200B_greater_than/]: r#197
[#369 /\u200B_greater_than_equal/]: r#197
[#369 /\u200B_less_than/]: r#197
[#369 /\u200B_less_than_equal/]: r#197
[#369 /\u200B_shift_left/]: r#197
[#369 /\u200B_shift_right/]: r#197
[#369 /\u200B_template_args_end/]: r#197
[#370 '.']: s#150
[#370 '[']: s#149
[#371 '!=']: r#198
[#371 '%']: r#198
[#371 '%=']: r#198
[#371 '&&']: r#198
[#371 '&']: r#198
[#371 '&=']: r#198
[#371 ')']: r#198
[#371 '*']: r#198
[#371 '*=']: r#198
[#371 '+']: r#198
[#371 '++']: r#198
[#371 '+=']: r#198
[#371 ',']: r#198
[#371 '-']: r#198
[#371 '--']: r#198
[#371 '-=']: r#198
[#371 '/']: r#198
[#371 '/=']: r#198
[#371 ':']: r#198
[#371 ';']: r#198
[#371 '=']: r#198
[#371 '==']: r#198
[#371 ']']: r#198
[#371 '^']: r#198
[#371 '^=']: r#198
[#371 '{']: r#198
[#371 '|']: r#198
[#371 '|=']: r#198
[#371 '||']: r#198
[#371 /\u200B_greater_than/]: r#198
[#371 /\u200B_greater_than_equal/]: r#198
[#371 /\u200B_less_than/]: r#198
[#371 /\u200B_less_than_equal/]: r#198
[#371 /\u200B_shift_left/]: r#198
[#371 /\u200B_shift_left_assign/]: r#198
[#371 /\u200B_shift_right/]: r#198
[#371 /\u200B_shift_right_assign/]: r#198
[#371 /\u200B_template_args_end/]: r#198
[#372 '!=']: r#199
[#372 '%']: r#199
[#372 '%=']: r#199
[#372 '&&']: r#199
[#372 '&']: r#199
[#372 '&=']: r#199
[#372 ')']: r#199
[#372 '*']: r#199
[#372 '*=']: r#199
[#372 '+']: r#199
[#372 '++']: r#199
[#372 '+=']: r#199
[#372 ',']: r#199
[#372 '-']: r#199
[#372 '--']: r#199
[#372 '-=']: r#199
[#372 '/']: r#199
[#372 '/=']: r#199
[#372 ':']: r#199
[#372 ';']: r#199
[#372 '=']: r#199
[#372 '==']: r#199
[#372 ']']: r#199
[#372 '^']: r#199
[#372 '^=']: r#199
[#372 '{']: r#199
[#372 '|']: r#199
[#372 '|=']: r#199
[#372 '||']: r#199
[#372 /\u200B_greater_than/]: r#199
[#372 /\u200B_greater_than_equal/]: r#199
[#372 /\u200B_less_than/]: r#199
[#372 /\u200B_less_than_equal/]: r#199
[#372 /\u200B_shift_left/]: r#199
[#372 /\u200B_shift_left_assign/]: r#199
[#372 /\u200B_shift_right/]: r#199
[#372 /\u200B_shift_right_assign/]: r#199
[#372 /\u200B_template_args_end/]: r#199
[#373 '!=']: r#200
[#373 '%']: r#200
[#373 '%=']: r#200
[#373 '&&']: r#200
[#373 '&']: r#200
[#373 '&=']: r#200
[#373 ')']: r#200
[#373 '*']: r#200
[#373 '*=']: r#200
[#373 '+']: r#200
[#373 '++']: r#200
[#373 '+=']: r#200
[#373 ',']: r#200
[#373 '-']: r#200
[#373 '--']: r#200
[#373 '-=']: r#200
[#373 '/']: r#200
[#373 '/=']: r#200
[#373 ':']: r#200
[#373 ';']: r#200
[#373 '=']: r#200
[#373 '==']: r#200
[#373 ']']: r#200
[#373 '^']: r#200
[#373 '^=']: r#200
[#373 '{']: r#200
[#373 '|']: r#200
[#373 '|=']: r#200
[#373 '||']: r#200
[#373 /\u200B_greater_than/]: r#200
[#373 /\u200B_greater_than_equal/]: r#200
[#373 /\u200B_less_than/]: r#200
[#373 /\u200B_less_than_equal/]: r#200
[#373 /\u200B_shift_left/]: r#200
[#373 /\u200B_shift_left_assign/]: r#200
[#373 /\u200B_shift_right/]: r#200
[#373 /\u200B_shift_right_assign/]: r#200
[#373 /\u200B_template_args_end/]: r#200
[#374 '!=']: r#201
[#374 '%']: r#201
[#374 '%=']: r#201
[#374 '&&']: r#201
[#374 '&']: r#201
[#374 '&=']: r#201
[#374 ')']: r#201
[#374 '*']: r#201
[#374 '*=']: r#201
[#374 '+']: r#201
[#374 '++']: r#201
[#374 '+=']: r#201
[#374 ',']: r#201
[#374 '-']: r#201
[#374 '--']: r#201
[#374 '-=']: r#201
[#374 '/']: r#201
[#374 '/=']: r#201
[#374 ':']: r#201
[#374 ';']: r#201
[#374 '=']: r#201
[#374 '==']: r#201
[#374 ']']: r#201
[#374 '^']: r#201
[#374 '^=']: r#201
[#374 '{']: r#201
[#374 '|']: r#201
[#374 '|=']: r#201
[#374 '||']: r#201
[#374 /\u200B_greater_than/]: r#201
[#374 /\u200B_greater_than_equal/]: r#201
[#374 /\u200B_less_than/]: r#201
[#374 /\u200B_less_than_equal/]: r#201
[#374 /\u200B_shift_left/]: r#201
[#374 /\u200B_shift_left_assign/]: r#201
[#374 /\u200B_shift_right/]: r#201
[#374 /\u200B_shift_right_assign/]: r#201
[#374 /\u200B_template_args_end/]: r#201
[#375 '@']: r#202
[#375 'fn']: r#202
[#375 'override']: r#202
[#375 'var']: r#202
[#375 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#202
[#376 '!']: s#69
[#376 '&']: s#72
[#376 '(']: s#83
[#376 ')']: r#203
[#376 '*']: s#71
[#376 '-']: s#68
[#376 'bitcast']: s#78
[#376 'false']: s#90
[#376 'true']: s#89
[#376 '~']: s#70
[#376 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#376 /0[fh]/]: s#95
[#376 /0[iu]?/]: s#92
[#376 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#376 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#376 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#376 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#376 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#376 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#376 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#376 /[1-9][0-9]*[fh]/]: s#96
[#376 /[1-9][0-9]*[iu]?/]: s#93
[#377 ')']: s#389
[#378 '@']: r#204
[#378 'fn']: r#204
[#378 'override']: r#204
[#378 'var']: r#204
[#378 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#204
[#379 ')']: r#203
[#380 '@']: r#205
[#380 'fn']: r#205
[#380 'override']: r#205
[#380 'var']: r#205
[#380 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#205
[#381 '@']: r#206
[#381 'fn']: r#206
[#381 'override']: r#206
[#381 'var']: r#206
[#381 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#206
[#382 '!']: s#69
[#382 '&']: s#72
[#382 '(']: s#83
[#382 ')']: r#203
[#382 '*']: s#71
[#382 '-']: s#68
[#382 'bitcast']: s#78
[#382 'false']: s#90
[#382 'true']: s#89
[#382 '~']: s#70
[#382 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#382 /0[fh]/]: s#95
[#382 /0[iu]?/]: s#92
[#382 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#382 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#382 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#382 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#382 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#382 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#382 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#382 /[1-9][0-9]*[fh]/]: s#96
[#382 /[1-9][0-9]*[iu]?/]: s#93
[#383 '@']: r#207
[#383 'fn']: r#207
[#383 'override']: r#207
[#383 'var']: r#207
[#383 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#207
[#384 '@']: r#208
[#384 'fn']: r#208
[#384 'override']: r#208
[#384 'var']: r#208
[#384 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#208
[#385 '@']: r#209
[#385 'fn']: r#209
[#385 'override']: r#209
[#385 'var']: r#209
[#385 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#209
[#386 '@']: r#210
[#386 'fn']: r#210
[#386 'override']: r#210
[#386 'var']: r#210
[#386 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#210
[#387 '@']: r#211
[#387 'fn']: r#211
[#387 'override']: r#211
[#387 'var']: r#211
[#387 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#211
[#388 ',']: s#379
[#389 '@']: r#212
[#389 'fn']: r#212
[#389 'override']: r#212
[#389 'var']: r#212
[#389 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#212
[#390 ',']: s#477
[#391 '!=']: r#213
[#391 '%']: r#213
[#391 '%=']: r#213
[#391 '&&']: r#213
[#391 '&']: r#213
[#391 '&=']: r#213
[#391 ')']: r#213
[#391 '*']: r#213
[#391 '*=']: r#213
[#391 '+']: r#213
[#391 '++']: r#213
[#391 '+=']: r#213
[#391 ',']: r#213
[#391 '-']: r#213
[#391 '--']: r#213
[#391 '-=']: r#213
[#391 '/']: r#213
[#391 '/=']: r#213
[#391 ':']: r#213
[#391 ';']: r#213
[#391 '=']: r#213
[#391 '==']: r#213
[#391 ']']: r#213
[#391 '^']: r#213
[#391 '^=']: r#213
[#391 '{']: r#213
[#391 '|']: r#213
[#391 '|=']: r#213
[#391 '||']: r#213
[#391 /\u200B_greater_than/]: r#213
[#391 /\u200B_greater_than_equal/]: r#213
[#391 /\u200B_less_than/]: r#213
[#391 /\u200B_less_than_equal/]: r#213
[#391 /\u200B_shift_left/]: r#213
[#391 /\u200B_shift_left_assign/]: r#213
[#391 /\u200B_shift_right/]: r#213
[#391 /\u200B_shift_right_assign/]: r#213
[#391 /\u200B_template_args_end/]: r#213
[#392 '!=']: r#214
[#392 '%']: r#214
[#392 '%=']: r#214
[#392 '&&']: r#214
[#392 '&']: r#214
[#392 '&=']: r#214
[#392 ')']: r#214
[#392 '*']: r#214
[#392 '*=']: r#214
[#392 '+']: r#214
[#392 '++']: r#214
[#392 '+=']: r#214
[#392 ',']: r#214
[#392 '-']: r#214
[#392 '--']: r#214
[#392 '-=']: r#214
[#392 '/']: r#214
[#392 '/=']: r#214
[#392 ':']: r#214
[#392 ';']: r#214
[#392 '=']: r#214
[#392 '==']: r#214
[#392 ']']: r#214
[#392 '^']: r#214
[#392 '^=']: r#214
[#392 '{']: r#214
[#392 '|']: r#214
[#392 '|=']: r#214
[#392 '||']: r#214
[#392 /\u200B_greater_than/]: r#214
[#392 /\u200B_greater_than_equal/]: r#214
[#392 /\u200B_less_than/]: r#214
[#392 /\u200B_less_than_equal/]: r#214
[#392 /\u200B_shift_left/]: r#214
[#392 /\u200B_shift_left_assign/]: r#214
[#392 /\u200B_shift_right/]: r#214
[#392 /\u200B_shift_right_assign/]: r#214
[#392 /\u200B_template_args_end/]: r#214
[#393 ')']: r#215
[#393 ',']: r#215
[#394 ')']: r#216
[#394 ',']: r#216
[#395 ')']: r#217
[#396 ')']: r#218
[#397 '(']: s#83
[#398 '!=']: r#219
[#398 '%']: r#219
[#398 '&&']: r#219
[#398 '&']: r#219
[#398 '(']: r#219
[#398 ')']: r#219
[#398 '*']: r#219
[#398 '+']: r#219
[#398 ',']: r#219
[#398 '-']: r#219
[#398 '.']: r#219
[#398 '/']: r#219
[#398 ':']: r#219
[#398 ';']: r#219
[#398 '=']: r#219
[#398 '==']: r#219
[#398 '[']: r#219
[#398 ']']: r#219
[#398 '^']: r#219
[#398 '{']: r#219
[#398 '|']: r#219
[#398 '||']: r#219
[#398 '}']: r#219
[#398 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#219
[#398 /\u200B_greater_than/]: r#219
[#398 /\u200B_greater_than_equal/]: r#219
[#398 /\u200B_less_than/]: r#219
[#398 /\u200B_less_than_equal/]: r#219
[#398 /\u200B_shift_left/]: r#219
[#398 /\u200B_shift_right/]: r#219
[#398 /\u200B_template_args_end/]: r#219
[#399 '!']: s#69
[#399 '&']: s#72
[#399 '(']: s#83
[#399 '*']: s#71
[#399 '-']: s#68
[#399 'bitcast']: s#78
[#399 'false']: s#90
[#399 'true']: s#89
[#399 '~']: s#70
[#399 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#399 /0[fh]/]: s#95
[#399 /0[iu]?/]: s#92
[#399 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#399 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#399 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#399 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#399 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#399 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#399 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#399 /[1-9][0-9]*[fh]/]: s#96
[#399 /[1-9][0-9]*[iu]?/]: s#93
[#400 '!']: s#69
[#400 '&']: s#72
[#400 '(']: s#83
[#400 '*']: s#71
[#400 '-']: s#68
[#400 'bitcast']: s#78
[#400 'false']: s#90
[#400 'true']: s#89
[#400 '~']: s#70
[#400 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#400 /0[fh]/]: s#95
[#400 /0[iu]?/]: s#92
[#400 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#400 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#400 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#400 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#400 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#400 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#400 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#400 /[1-9][0-9]*[fh]/]: s#96
[#400 /[1-9][0-9]*[iu]?/]: s#93
[#401 ',']: s#472
[#402 ',']: r#220
[#402 /\u200B_template_args_end/]: r#220
[#403 ',']: s#404
[#404 '!']: s#69
[#404 '&']: s#72
[#404 '(']: s#83
[#404 '*']: s#71
[#404 '-']: s#68
[#404 'bitcast']: s#78
[#404 'false']: s#90
[#404 'true']: s#89
[#404 '~']: s#70
[#404 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#404 /0[fh]/]: s#95
[#404 /0[iu]?/]: s#92
[#404 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#404 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#404 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#404 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#404 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#404 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#404 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#404 /[1-9][0-9]*[fh]/]: s#96
[#404 /[1-9][0-9]*[iu]?/]: s#93
[#405 '!=']: r#221
[#405 '%']: r#221
[#405 '&&']: r#221
[#405 '&']: r#221
[#405 '(']: r#221
[#405 ')']: r#221
[#405 '*']: r#221
[#405 '+']: r#221
[#405 ',']: r#221
[#405 '-']: r#221
[#405 '.']: r#221
[#405 '/']: r#221
[#405 ':']: r#221
[#405 ';']: r#221
[#405 '=']: r#221
[#405 '==']: r#221
[#405 '[']: r#221
[#405 ']']: r#221
[#405 '^']: r#221
[#405 '{']: r#221
[#405 '|']: r#221
[#405 '||']: r#221
[#405 '}']: r#221
[#405 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#221
[#405 /\u200B_greater_than/]: r#221
[#405 /\u200B_greater_than_equal/]: r#221
[#405 /\u200B_less_than/]: r#221
[#405 /\u200B_less_than_equal/]: r#221
[#405 /\u200B_shift_left/]: r#221
[#405 /\u200B_shift_right/]: r#221
[#405 /\u200B_template_args_end/]: r#221
[#406 '!']: s#69
[#406 '&']: s#72
[#406 '(']: s#83
[#406 '*']: s#71
[#406 '-']: s#68
[#406 'bitcast']: s#78
[#406 'false']: s#90
[#406 'true']: s#89
[#406 '~']: s#70
[#406 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#406 /0[fh]/]: s#95
[#406 /0[iu]?/]: s#92
[#406 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#406 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#406 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#406 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#406 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#406 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#406 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#406 /[1-9][0-9]*[fh]/]: s#96
[#406 /[1-9][0-9]*[iu]?/]: s#93
[#407 '&']: r#222
[#407 '(']: r#222
[#407 '*']: r#222
[#407 ';']: r#222
[#407 '_']: r#222
[#407 'break']: r#222
[#407 'const']: r#222
[#407 'const_assert']: r#222
[#407 'continue']: r#222
[#407 'continuing']: r#222
[#407 'discard']: r#222
[#407 'else']: r#222
[#407 'for']: r#222
[#407 'if']: r#222
[#407 'let']: r#222
[#407 'loop']: r#222
[#407 'return']: r#222
[#407 'switch']: r#222
[#407 'var']: r#222
[#407 'while']: r#222
[#407 '{']: r#222
[#407 '}']: r#222
[#407 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#222
[#408 '&']: r#223
[#408 '(']: r#223
[#408 '*']: r#223
[#408 ';']: r#223
[#408 '_']: r#223
[#408 'break']: r#223
[#408 'const']: r#223
[#408 'const_assert']: r#223
[#408 'continue']: r#223
[#408 'continuing']: r#223
[#408 'discard']: r#223
[#408 'for']: r#223
[#408 'if']: r#223
[#408 'let']: r#223
[#408 'loop']: r#223
[#408 'return']: r#223
[#408 'switch']: r#223
[#408 'var']: r#223
[#408 'while']: r#223
[#408 '{']: r#223
[#408 '}']: r#223
[#408 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#223
[#409 '&']: r#224
[#409 '(']: r#224
[#409 '*']: r#224
[#409 ';']: r#224
[#409 '_']: r#224
[#409 'break']: r#224
[#409 'const']: r#224
[#409 'const_assert']: r#224
[#409 'continue']: r#224
[#409 'continuing']: r#224
[#409 'discard']: r#224
[#409 'for']: r#224
[#409 'if']: r#224
[#409 'let']: r#224
[#409 'loop']: r#224
[#409 'return']: r#224
[#409 'switch']: r#224
[#409 'var']: r#224
[#409 'while']: r#224
[#409 '{']: r#224
[#409 '}']: r#224
[#409 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#224
[#410 '{']: s#140
[#411 'case']: s#465
[#411 'default']: s#466
[#412 'continuing']: s#459
[#413 'continuing']: r#225
[#413 '}']: r#225
[#414 '&']: s#277
[#414 '(']: s#278
[#414 '*']: s#276
[#414 ';']: s#241
[#414 '_']: s#274
[#414 'break']: s#266
[#414 'const']: s#265
[#414 'const_assert']: s#31
[#414 'continue']: s#267
[#414 'discard']: s#252
[#414 'for']: s#260
[#414 'if']: s#271
[#414 'let']: s#264
[#414 'loop']: s#259
[#414 'return']: s#256
[#414 'switch']: s#258
[#414 'var']: s#111
[#414 'while']: s#261
[#414 '{']: s#140
[#414 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#415 ')']: s#455
[#416 ';']: s#454
[#417 ';']: r#226
[#418 ';']: r#227
[#419 ';']: r#228
[#420 ';']: r#229
[#421 '&']: r#230
[#421 '(']: r#230
[#421 '*']: r#230
[#421 ';']: r#230
[#421 '_']: r#230
[#421 'break']: r#230
[#421 'const']: r#230
[#421 'const_assert']: r#230
[#421 'continue']: r#230
[#421 'continuing']: r#230
[#421 'discard']: r#230
[#421 'for']: r#230
[#421 'if']: r#230
[#421 'let']: r#230
[#421 'loop']: r#230
[#421 'return']: r#230
[#421 'switch']: r#230
[#421 'var']: r#230
[#421 'while']: r#230
[#421 '{']: r#230
[#421 '}']: r#230
[#421 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#230
[#422 ';']: r#231
[#423 '!']: s#69
[#423 '&']: s#72
[#423 '(']: s#83
[#423 '*']: s#71
[#423 '-']: s#68
[#423 'bitcast']: s#78
[#423 'false']: s#90
[#423 'true']: s#89
[#423 '~']: s#70
[#423 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#423 /0[fh]/]: s#95
[#423 /0[iu]?/]: s#92
[#423 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#423 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#423 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#423 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#423 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#423 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#423 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#423 /[1-9][0-9]*[fh]/]: s#96
[#423 /[1-9][0-9]*[iu]?/]: s#93
[#424 '!']: s#69
[#424 '&']: s#72
[#424 '(']: s#83
[#424 '*']: s#71
[#424 '-']: s#68
[#424 'bitcast']: s#78
[#424 'false']: s#90
[#424 'true']: s#89
[#424 '~']: s#70
[#424 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#424 /0[fh]/]: s#95
[#424 /0[iu]?/]: s#92
[#424 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#424 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#424 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#424 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#424 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#424 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#424 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#424 /[1-9][0-9]*[fh]/]: s#96
[#424 /[1-9][0-9]*[iu]?/]: s#93
[#425 '&']: r#232
[#425 '(']: r#232
[#425 '*']: r#232
[#425 ';']: r#232
[#425 '_']: r#232
[#425 'break']: r#232
[#425 'const']: r#232
[#425 'const_assert']: r#232
[#425 'continue']: r#232
[#425 'continuing']: r#232
[#425 'discard']: r#232
[#425 'else']: r#232
[#425 'for']: r#232
[#425 'if']: r#232
[#425 'let']: r#232
[#425 'loop']: r#232
[#425 'return']: r#232
[#425 'switch']: r#232
[#425 'var']: r#232
[#425 'while']: r#232
[#425 '{']: r#232
[#425 '}']: r#232
[#425 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#232
[#426 ')']: r#233
[#426 ';']: r#233
[#427 ')']: r#234
[#427 ';']: r#234
[#428 '%=']: r#179
[#428 '&=']: r#179
[#428 ')']: r#179
[#428 '*=']: r#179
[#428 '++']: r#179
[#428 '+=']: r#179
[#428 '--']: r#179
[#428 '-=']: r#179
[#428 '.']: r#179
[#428 '/=']: r#179
[#428 '=']: r#179
[#428 '[']: r#179
[#428 '^=']: r#179
[#428 '|=']: r#179
[#428 /\u200B_shift_left_assign/]: r#179
[#428 /\u200B_shift_right_assign/]: r#179
[#429 '%=']: r#235
[#429 '&=']: r#235
[#429 ')']: r#235
[#429 '*=']: r#235
[#429 '++']: r#235
[#429 '+=']: r#235
[#429 '--']: r#235
[#429 '-=']: r#235
[#429 '.']: r#235
[#429 '/=']: r#235
[#429 '=']: r#235
[#429 '[']: r#235
[#429 '^=']: r#235
[#429 '|=']: r#235
[#429 /\u200B_shift_left_assign/]: r#235
[#429 /\u200B_shift_right_assign/]: r#235
[#430 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#236
[#431 ':']: s#451
[#432 ',']: s#450
[#433 ')']: r#237
[#433 ',']: r#237
[#434 ',']: s#435
[#435 '@']: s#36
[#436 '->']: s#446
[#437 ',']: r#238
[#437 '}']: r#238
[#438 ',']: r#239
[#438 '}']: r#239
[#439 '}']: s#444
[#440 '}']: r#240
[#441 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#442 ')']: r#241
[#442 ',']: r#241
[#442 ';']: r#241
[#442 '=']: r#241
[#442 '}']: r#241
[#442 /\u200B_template_args_end/]: r#241
[#443 ',']: r#242
[#443 '}']: r#242
[#444 ';']: r#243
[#444 '@']: r#243
[#444 'alias']: r#243
[#444 'const']: r#243
[#444 'const_assert']: r#243
[#444 'fn']: r#243
[#444 'override']: r#243
[#444 'struct']: r#243
[#444 'var']: r#243
[#444 EndOfText]: r#243
[#445 '{']: r#244
[#446 '@']: s#36
[#447 ')']: r#245
[#447 ',']: r#245
[#448 ')']: r#246
[#448 ',']: r#246
[#449 ')']: r#247
[#450 ')']: r#248
[#451 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#452 ';']: r#249
[#453 ';']: r#250
[#454 '!']: s#69
[#454 '&']: s#72
[#454 '(']: s#83
[#454 '*']: s#71
[#454 '-']: s#68
[#454 'bitcast']: s#78
[#454 'false']: s#90
[#454 'true']: s#89
[#454 '~']: s#70
[#454 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#454 /0[fh]/]: s#95
[#454 /0[iu]?/]: s#92
[#454 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#454 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#454 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#454 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#454 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#454 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#454 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#454 /[1-9][0-9]*[fh]/]: s#96
[#454 /[1-9][0-9]*[iu]?/]: s#93
[#455 '{']: s#140
[#456 'continuing']: r#251
[#456 '}']: r#251
[#457 '}']: s#491
[#458 '}']: r#252
[#459 '{']: s#490
[#460 '}']: s#488
[#461 '}']: r#253
[#462 'case']: s#465
[#462 'default']: s#466
[#463 'case']: r#254
[#463 'default']: r#254
[#463 '}']: r#254
[#464 'case']: r#255
[#464 'default']: r#255
[#464 '}']: r#255
[#465 '!']: s#69
[#465 '&']: s#72
[#465 '(']: s#83
[#465 '*']: s#71
[#465 '-']: s#68
[#465 'bitcast']: s#78
[#465 'default']: s#485
[#465 'false']: s#90
[#465 'true']: s#89
[#465 '~']: s#70
[#465 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#465 /0[fh]/]: s#95
[#465 /0[iu]?/]: s#92
[#465 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#465 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#465 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#465 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#465 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#465 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#465 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#465 /[1-9][0-9]*[fh]/]: s#96
[#465 /[1-9][0-9]*[iu]?/]: s#93
[#466 ':']: s#482
[#467 '&']: r#256
[#467 '(']: r#256
[#467 '*']: r#256
[#467 ';']: r#256
[#467 '_']: r#256
[#467 'break']: r#256
[#467 'const']: r#256
[#467 'const_assert']: r#256
[#467 'continue']: r#256
[#467 'continuing']: r#256
[#467 'discard']: r#256
[#467 'for']: r#256
[#467 'if']: r#256
[#467 'let']: r#256
[#467 'loop']: r#256
[#467 'return']: r#256
[#467 'switch']: r#256
[#467 'var']: r#256
[#467 'while']: r#256
[#467 '{']: r#256
[#467 '}']: r#256
[#467 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#256
[#468 '{']: s#140
[#469 ',']: r#257
[#469 /\u200B_template_args_end/]: r#257
[#470 ',']: r#258
[#470 /\u200B_template_args_end/]: r#258
[#471 /\u200B_template_args_end/]: r#259
[#472 /\u200B_template_args_end/]: r#260
[#473 ',']: r#261
[#473 '||']: r#99
[#473 /\u200B_template_args_end/]: r#261
[#474 '&&']: r#101
[#474 ',']: r#262
[#474 /\u200B_template_args_end/]: r#262
[#475 '!=']: r#263
[#475 '%']: r#263
[#475 '&&']: r#263
[#475 '&']: r#263
[#475 ')']: r#263
[#475 '*']: r#263
[#475 '+']: r#263
[#475 ',']: r#263
[#475 '-']: r#263
[#475 '.']: r#263
[#475 '/']: r#263
[#475 ':']: r#263
[#475 ';']: r#263
[#475 '==']: r#263
[#475 '[']: r#263
[#475 ']']: r#263
[#475 '^']: r#263
[#475 '{']: r#263
[#475 '|']: r#263
[#475 '||']: r#263
[#475 /\u200B_greater_than/]: r#263
[#475 /\u200B_greater_than_equal/]: r#263
[#475 /\u200B_less_than/]: r#263
[#475 /\u200B_less_than_equal/]: r#263
[#475 /\u200B_shift_left/]: r#263
[#475 /\u200B_shift_right/]: r#263
[#475 /\u200B_template_args_end/]: r#263
[#476 '@']: r#264
[#476 'fn']: r#264
[#476 'override']: r#264
[#476 'var']: r#264
[#476 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#264
[#477 '!']: s#69
[#477 '&']: s#72
[#477 '(']: s#83
[#477 ')']: r#203
[#477 '*']: s#71
[#477 '-']: s#68
[#477 'bitcast']: s#78
[#477 'false']: s#90
[#477 'true']: s#89
[#477 '~']: s#70
[#477 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#477 /0[fh]/]: s#95
[#477 /0[iu]?/]: s#92
[#477 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#477 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#477 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#477 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#477 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#477 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#477 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#477 /[1-9][0-9]*[fh]/]: s#96
[#477 /[1-9][0-9]*[iu]?/]: s#93
[#478 '@']: r#265
[#478 'fn']: r#265
[#478 'override']: r#265
[#478 'var']: r#265
[#478 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#265
[#479 ',']: s#379
[#480 '&']: r#266
[#480 '(']: r#266
[#480 '*']: r#266
[#480 ';']: r#266
[#480 '_']: r#266
[#480 'break']: r#266
[#480 'const']: r#266
[#480 'const_assert']: r#266
[#480 'continue']: r#266
[#480 'continuing']: r#266
[#480 'discard']: r#266
[#480 'else']: r#266
[#480 'for']: r#266
[#480 'if']: r#266
[#480 'let']: r#266
[#480 'loop']: r#266
[#480 'return']: r#266
[#480 'switch']: r#266
[#480 'var']: r#266
[#480 'while']: r#266
[#480 '{']: r#266
[#480 '}']: r#266
[#480 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#266
[#481 '{']: s#140
[#482 '{']: r#267
[#483 ':']: s#510
[#484 ',']: s#508
[#485 ',']: r#268
[#485 ':']: r#268
[#485 '{']: r#268
[#486 ',']: r#269
[#486 ':']: r#269
[#486 '{']: r#269
[#487 '}']: r#270
[#488 '&']: r#271
[#488 '(']: r#271
[#488 '*']: r#271
[#488 ';']: r#271
[#488 '_']: r#271
[#488 'break']: r#271
[#488 'const']: r#271
[#488 'const_assert']: r#271
[#488 'continue']: r#271
[#488 'continuing']: r#271
[#488 'discard']: r#271
[#488 'for']: r#271
[#488 'if']: r#271
[#488 'let']: r#271
[#488 'loop']: r#271
[#488 'return']: r#271
[#488 'switch']: r#271
[#488 'var']: r#271
[#488 'while']: r#271
[#488 '{']: r#271
[#488 '}']: r#271
[#488 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#271
[#489 '}']: r#272
[#490 '&']: s#277
[#490 '(']: s#278
[#490 '*']: s#276
[#490 ';']: s#241
[#490 '_']: s#274
[#490 'break']: s#266
[#490 'const']: s#265
[#490 'const_assert']: s#31
[#490 'continue']: s#267
[#490 'discard']: s#252
[#490 'for']: s#260
[#490 'if']: s#271
[#490 'let']: s#264
[#490 'loop']: s#259
[#490 'return']: s#256
[#490 'switch']: s#258
[#490 'var']: s#111
[#490 'while']: s#261
[#490 '{']: s#140
[#490 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#491 '&']: r#273
[#491 '(']: r#273
[#491 '*']: r#273
[#491 ';']: r#273
[#491 '_']: r#273
[#491 'break']: r#273
[#491 'const']: r#273
[#491 'const_assert']: r#273
[#491 'continue']: r#273
[#491 'continuing']: r#273
[#491 'discard']: r#273
[#491 'for']: r#273
[#491 'if']: r#273
[#491 'let']: r#273
[#491 'loop']: r#273
[#491 'return']: r#273
[#491 'switch']: r#273
[#491 'var']: r#273
[#491 'while']: r#273
[#491 '{']: r#273
[#491 '}']: r#273
[#491 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#273
[#492 '&']: r#274
[#492 '(']: r#274
[#492 '*']: r#274
[#492 ';']: r#274
[#492 '_']: r#274
[#492 'break']: r#274
[#492 'const']: r#274
[#492 'const_assert']: r#274
[#492 'continue']: r#274
[#492 'continuing']: r#274
[#492 'discard']: r#274
[#492 'for']: r#274
[#492 'if']: r#274
[#492 'let']: r#274
[#492 'loop']: r#274
[#492 'return']: r#274
[#492 'switch']: r#274
[#492 'var']: r#274
[#492 'while']: r#274
[#492 '{']: r#274
[#492 '}']: r#274
[#492 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#274
[#493 ';']: s#501
[#494 ';']: r#275
[#495 ')']: r#276
[#495 ',']: r#276
[#496 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#497 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#277
[#498 '@']: s#36
[#499 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#278
[#500 '{']: r#279
[#501 '&']: s#277
[#501 '(']: s#278
[#501 '*']: s#276
[#501 '_']: s#274
[#501 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#502 'break']: s#521
[#503 'break']: r#280
[#503 '}']: r#280
[#504 '&']: s#277
[#504 '(']: s#278
[#504 '*']: s#276
[#504 ';']: s#241
[#504 '_']: s#274
[#504 'break']: s#266
[#504 'const']: s#265
[#504 'const_assert']: s#31
[#504 'continue']: s#267
[#504 'discard']: s#252
[#504 'for']: s#260
[#504 'if']: s#271
[#504 'let']: s#264
[#504 'loop']: s#259
[#504 'return']: s#256
[#504 'switch']: s#258
[#504 'var']: s#111
[#504 'while']: s#261
[#504 '{']: s#140
[#504 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#505 ',']: s#517
[#506 ',']: r#281
[#506 ':']: r#281
[#506 '{']: r#281
[#507 ',']: s#508
[#508 '!']: s#69
[#508 '&']: s#72
[#508 '(']: s#83
[#508 '*']: s#71
[#508 '-']: s#68
[#508 'bitcast']: s#78
[#508 'default']: s#485
[#508 'false']: s#90
[#508 'true']: s#89
[#508 '~']: s#70
[#508 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#508 /0[fh]/]: s#95
[#508 /0[iu]?/]: s#92
[#508 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#508 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#508 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#508 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#508 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#508 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#508 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#508 /[1-9][0-9]*[fh]/]: s#96
[#508 /[1-9][0-9]*[iu]?/]: s#93
[#509 '{']: s#140
[#510 '{']: r#282
[#511 'case']: r#283
[#511 'default']: r#283
[#511 '}']: r#283
[#512 '@']: r#284
[#512 'fn']: r#284
[#512 'override']: r#284
[#512 'var']: r#284
[#512 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#284
[#513 'case']: r#285
[#513 'default']: r#285
[#513 '}']: r#285
[#514 ',']: r#286
[#514 ':']: r#286
[#514 '{']: r#286
[#515 ',']: r#287
[#515 ':']: r#287
[#515 '{']: r#287
[#516 ':']: r#288
[#516 '{']: r#288
[#517 ':']: r#289
[#517 '{']: r#289
[#518 'break']: r#290
[#518 '}']: r#290
[#519 '}']: s#527
[#520 '}']: r#291
[#521 'if']: s#526
[#522 ')']: r#292
[#523 ')']: r#293
[#524 ')']: r#294
[#525 ')']: r#295
[#526 '!']: s#69
[#526 '&']: s#72
[#526 '(']: s#83
[#526 '*']: s#71
[#526 '-']: s#68
[#526 'bitcast']: s#78
[#526 'false']: s#90
[#526 'true']: s#89
[#526 '~']: s#70
[#526 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#91
[#526 /0[fh]/]: s#95
[#526 /0[iu]?/]: s#92
[#526 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#526 /0[xX][0-9a-fA-F]+[iu]?/]: s#94
[#526 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#102
[#526 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#101
[#526 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#526 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#99
[#526 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#98
[#526 /[1-9][0-9]*[fh]/]: s#96
[#526 /[1-9][0-9]*[iu]?/]: s#93
[#527 '}']: r#296
[#528 ';']: s#529
[#529 '}']: r#297

=Goto:
[#0 enable_directive]: #5
[#0 global_directive]: #4
[#0 requires_directive]: #6
[#0 translation_unit]: #1
[#0 translation_unit/0.0]: #2
[#0 translation_unit/0.0/0]: #3
[#2 attribute]: #35
[#2 const_assert_statement]: #24
[#2 function_decl]: #23
[#2 function_decl/0.0]: #30
[#2 function_decl/0.0/0]: #34
[#2 global_constant_decl]: #20
[#2 global_constant_decl/1.0]: #27
[#2 global_constant_decl/1.0/0]: #33
[#2 global_decl]: #17
[#2 global_variable_decl]: #19
[#2 global_variable_decl/0.0]: #25
[#2 global_variable_decl/0.0/0]: #32
[#2 struct_decl]: #22
[#2 translation_unit/0.1]: #15
[#2 translation_unit/0.1/0]: #16
[#2 type_alias_decl]: #21
[#4 enable_directive]: #5
[#4 global_directive]: #4
[#4 requires_directive]: #6
[#4 translation_unit/0.0/0]: #14
[#7 enable_extension_name]: #12
[#8 software_extension_list]: #9
[#8 software_extension_name]: #10
[#10 software_extension_list/0.1]: #118
[#10 software_extension_list/0.1/0]: #119
[#10 software_extension_list/0.1/0/0.0]: #120
[#17 attribute]: #35
[#17 const_assert_statement]: #24
[#17 function_decl]: #23
[#17 function_decl/0.0]: #30
[#17 function_decl/0.0/0]: #34
[#17 global_constant_decl]: #20
[#17 global_constant_decl/1.0]: #27
[#17 global_constant_decl/1.0/0]: #33
[#17 global_decl]: #17
[#17 global_variable_decl]: #19
[#17 global_variable_decl/0.0]: #25
[#17 global_variable_decl/0.0/0]: #32
[#17 struct_decl]: #22
[#17 translation_unit/0.1/0]: #116
[#17 type_alias_decl]: #21
[#25 variable_decl]: #110
[#26 ident]: #109
[#26 ident_pattern_token]: #84
[#26 optionally_typed_ident]: #108
[#28 ident]: #106
[#28 ident_pattern_token]: #84
[#29 ident]: #105
[#29 ident_pattern_token]: #84
[#30 function_header]: #103
[#31 additive_expression]: #64
[#31 binary_and_expression]: #61
[#31 binary_or_expression]: #62
[#31 binary_xor_expression]: #63
[#31 bitwise_expression]: #59
[#31 bool_literal]: #82
[#31 call_expression]: #75
[#31 decimal_float_literal]: #87
[#31 decimal_int_literal]: #85
[#31 expression]: #55
[#31 float_literal]: #81
[#31 hex_float_literal]: #88
[#31 hex_int_literal]: #86
[#31 ident]: #79
[#31 ident_pattern_token]: #84
[#31 int_literal]: #80
[#31 literal]: #76
[#31 multiplicative_expression]: #66
[#31 paren_expression]: #77
[#31 primary_expression]: #73
[#31 relational_expression]: #56
[#31 shift_expression]: #60
[#31 short_circuit_and_expression]: #58
[#31 short_circuit_or_expression]: #57
[#31 singular_expression]: #67
[#31 template_elaborated_ident]: #74
[#31 unary_expression]: #65
[#35 attribute]: #35
[#35 function_decl/0.0/0]: #54
[#35 global_constant_decl/1.0/0]: #53
[#35 global_variable_decl/0.0/0]: #52
[#60 _greater_than]: #171
[#60 _greater_than_equal]: #173
[#60 _less_than]: #170
[#60 _less_than_equal]: #172
[#64 additive_operator]: #164
[#65 _shift_left]: #160
[#65 _shift_right]: #161
[#66 multiplicative_operator]: #156
[#68 bool_literal]: #82
[#68 call_expression]: #75
[#68 decimal_float_literal]: #87
[#68 decimal_int_literal]: #85
[#68 float_literal]: #81
[#68 hex_float_literal]: #88
[#68 hex_int_literal]: #86
[#68 ident]: #79
[#68 ident_pattern_token]: #84
[#68 int_literal]: #80
[#68 literal]: #76
[#68 paren_expression]: #77
[#68 primary_expression]: #73
[#68 singular_expression]: #67
[#68 template_elaborated_ident]: #74
[#68 unary_expression]: #155
[#69 bool_literal]: #82
[#69 call_expression]: #75
[#69 decimal_float_literal]: #87
[#69 decimal_int_literal]: #85
[#69 float_literal]: #81
[#69 hex_float_literal]: #88
[#69 hex_int_literal]: #86
[#69 ident]: #79
[#69 ident_pattern_token]: #84
[#69 int_literal]: #80
[#69 literal]: #76
[#69 paren_expression]: #77
[#69 primary_expression]: #73
[#69 singular_expression]: #67
[#69 template_elaborated_ident]: #74
[#69 unary_expression]: #154
[#70 bool_literal]: #82
[#70 call_expression]: #75
[#70 decimal_float_literal]: #87
[#70 decimal_int_literal]: #85
[#70 float_literal]: #81
[#70 hex_float_literal]: #88
[#70 hex_int_literal]: #86
[#70 ident]: #79
[#70 ident_pattern_token]: #84
[#70 int_literal]: #80
[#70 literal]: #76
[#70 paren_expression]: #77
[#70 primary_expression]: #73
[#70 singular_expression]: #67
[#70 template_elaborated_ident]: #74
[#70 unary_expression]: #153
[#71 bool_literal]: #82
[#71 call_expression]: #75
[#71 decimal_float_literal]: #87
[#71 decimal_int_literal]: #85
[#71 float_literal]: #81
[#71 hex_float_literal]: #88
[#71 hex_int_literal]: #86
[#71 ident]: #79
[#71 ident_pattern_token]: #84
[#71 int_literal]: #80
[#71 literal]: #76
[#71 paren_expression]: #77
[#71 primary_expression]: #73
[#71 singular_expression]: #67
[#71 template_elaborated_ident]: #74
[#71 unary_expression]: #152
[#72 bool_literal]: #82
[#72 call_expression]: #75
[#72 decimal_float_literal]: #87
[#72 decimal_int_literal]: #85
[#72 float_literal]: #81
[#72 hex_float_literal]: #88
[#72 hex_int_literal]: #86
[#72 ident]: #79
[#72 ident_pattern_token]: #84
[#72 int_literal]: #80
[#72 literal]: #76
[#72 paren_expression]: #77
[#72 primary_expression]: #73
[#72 singular_expression]: #67
[#72 template_elaborated_ident]: #74
[#72 unary_expression]: #151
[#73 component_or_swizzle_specifier]: #148
[#73 singular_expression/0.1]: #147
[#74 argument_expression_list]: #145
[#78 _disambiguate_template]: #144
[#79 _disambiguate_template]: #143
[#83 additive_expression]: #64
[#83 binary_and_expression]: #61
[#83 binary_or_expression]: #62
[#83 binary_xor_expression]: #63
[#83 bitwise_expression]: #59
[#83 bool_literal]: #82
[#83 call_expression]: #75
[#83 decimal_float_literal]: #87
[#83 decimal_int_literal]: #85
[#83 expression]: #142
[#83 float_literal]: #81
[#83 hex_float_literal]: #88
[#83 hex_int_literal]: #86
[#83 ident]: #79
[#83 ident_pattern_token]: #84
[#83 int_literal]: #80
[#83 literal]: #76
[#83 multiplicative_expression]: #66
[#83 paren_expression]: #77
[#83 primary_expression]: #73
[#83 relational_expression]: #56
[#83 shift_expression]: #60
[#83 short_circuit_and_expression]: #58
[#83 short_circuit_or_expression]: #57
[#83 singular_expression]: #67
[#83 template_elaborated_ident]: #74
[#83 unary_expression]: #65
[#84 _disambiguate_template]: #141
[#103 compound_statement]: #139
[#104 ident]: #138
[#104 ident_pattern_token]: #84
[#105 struct_body_decl]: #136
[#107 ident]: #109
[#107 ident_pattern_token]: #84
[#107 optionally_typed_ident]: #134
[#109 optionally_typed_ident/0.1]: #131
[#110 global_variable_decl/0.2]: #129
[#111 _disambiguate_template]: #127
[#118 software_extension_list/0.2]: #125
[#120 software_extension_list/0.1/0]: #124
[#120 software_extension_list/0.1/0/0.0]: #120
[#121 software_extension_name]: #123
[#127 _template_args_start]: #236
[#127 template_list]: #292
[#127 variable_decl/0.2]: #291
[#130 additive_expression]: #64
[#130 binary_and_expression]: #61
[#130 binary_or_expression]: #62
[#130 binary_xor_expression]: #63
[#130 bitwise_expression]: #59
[#130 bool_literal]: #82
[#130 call_expression]: #75
[#130 decimal_float_literal]: #87
[#130 decimal_int_literal]: #85
[#130 expression]: #290
[#130 float_literal]: #81
[#130 hex_float_literal]: #88
[#130 hex_int_literal]: #86
[#130 ident]: #79
[#130 ident_pattern_token]: #84
[#130 int_literal]: #80
[#130 literal]: #76
[#130 multiplicative_expression]: #66
[#130 paren_expression]: #77
[#130 primary_expression]: #73
[#130 relational_expression]: #56
[#130 shift_expression]: #60
[#130 short_circuit_and_expression]: #58
[#130 short_circuit_or_expression]: #57
[#130 singular_expression]: #67
[#130 template_elaborated_ident]: #74
[#130 unary_expression]: #65
[#132 ident]: #285
[#132 ident_pattern_token]: #84
[#132 type_specifier]: #289
[#133 additive_expression]: #64
[#133 binary_and_expression]: #61
[#133 binary_or_expression]: #62
[#133 binary_xor_expression]: #63
[#133 bitwise_expression]: #59
[#133 bool_literal]: #82
[#133 call_expression]: #75
[#133 decimal_float_literal]: #87
[#133 decimal_int_literal]: #85
[#133 expression]: #288
[#133 float_literal]: #81
[#133 hex_float_literal]: #88
[#133 hex_int_literal]: #86
[#133 ident]: #79
[#133 ident_pattern_token]: #84
[#133 int_literal]: #80
[#133 literal]: #76
[#133 multiplicative_expression]: #66
[#133 paren_expression]: #77
[#133 primary_expression]: #73
[#133 relational_expression]: #56
[#133 shift_expression]: #60
[#133 short_circuit_and_expression]: #58
[#133 short_circuit_or_expression]: #57
[#133 singular_expression]: #67
[#133 template_elaborated_ident]: #74
[#133 unary_expression]: #65
[#134 global_constant_decl/1.3]: #286
[#135 ident]: #285
[#135 ident_pattern_token]: #84
[#135 type_specifier]: #284
[#137 attribute]: #283
[#137 struct_member]: #280
[#137 struct_member/0.0]: #281
[#137 struct_member/0.0/0]: #282
[#140 assignment_statement]: #268
[#140 break_statement]: #250
[#140 compound_statement]: #254
[#140 compound_statement/0.1]: #238
[#140 compound_statement/0.1/0]: #239
[#140 const_assert_statement]: #255
[#140 continue_statement]: #251
[#140 core_lhs_expression]: #275
[#140 decrement_statement]: #270
[#140 for_statement]: #246
[#140 func_call_statement]: #248
[#140 ident]: #272
[#140 ident_pattern_token]: #84
[#140 if_clause]: #257
[#140 if_statement]: #243
[#140 increment_statement]: #269
[#140 lhs_expression]: #273
[#140 loop_statement]: #245
[#140 return_statement]: #242
[#140 statement]: #240
[#140 switch_statement]: #244
[#140 template_elaborated_ident]: #262
[#140 variable_decl]: #263
[#140 variable_statement]: #249
[#140 variable_updating_statement]: #253
[#140 while_statement]: #247
[#143 _template_args_start]: #236
[#143 template_elaborated_ident/0.2]: #234
[#143 template_list]: #235
[#144 _template_args_start]: #232
[#146 additive_expression]: #64
[#146 argument_expression_list/0.1]: #229
[#146 binary_and_expression]: #61
[#146 binary_or_expression]: #62
[#146 binary_xor_expression]: #63
[#146 bitwise_expression]: #59
[#146 bool_literal]: #82
[#146 call_expression]: #75
[#146 decimal_float_literal]: #87
[#146 decimal_int_literal]: #85
[#146 expression]: #231
[#146 expression_comma_list]: #230
[#146 float_literal]: #81
[#146 hex_float_literal]: #88
[#146 hex_int_literal]: #86
[#146 ident]: #79
[#146 ident_pattern_token]: #84
[#146 int_literal]: #80
[#146 literal]: #76
[#146 multiplicative_expression]: #66
[#146 paren_expression]: #77
[#146 primary_expression]: #73
[#146 relational_expression]: #56
[#146 shift_expression]: #60
[#146 short_circuit_and_expression]: #58
[#146 short_circuit_or_expression]: #57
[#146 singular_expression]: #67
[#146 template_elaborated_ident]: #74
[#146 unary_expression]: #65
[#149 additive_expression]: #64
[#149 binary_and_expression]: #61
[#149 binary_or_expression]: #62
[#149 binary_xor_expression]: #63
[#149 bitwise_expression]: #59
[#149 bool_literal]: #82
[#149 call_expression]: #75
[#149 decimal_float_literal]: #87
[#149 decimal_int_literal]: #85
[#149 expression]: #228
[#149 float_literal]: #81
[#149 hex_float_literal]: #88
[#149 hex_int_literal]: #86
[#149 ident]: #79
[#149 ident_pattern_token]: #84
[#149 int_literal]: #80
[#149 literal]: #76
[#149 multiplicative_expression]: #66
[#149 paren_expression]: #77
[#149 primary_expression]: #73
[#149 relational_expression]: #56
[#149 shift_expression]: #60
[#149 short_circuit_and_expression]: #58
[#149 short_circuit_or_expression]: #57
[#149 singular_expression]: #67
[#149 template_elaborated_ident]: #74
[#149 unary_expression]: #65
[#150 member_ident]: #217
[#150 swizzle_name]: #218
[#156 bool_literal]: #82
[#156 call_expression]: #75
[#156 decimal_float_literal]: #87
[#156 decimal_int_literal]: #85
[#156 float_literal]: #81
[#156 hex_float_literal]: #88
[#156 hex_int_literal]: #86
[#156 ident]: #79
[#156 ident_pattern_token]: #84
[#156 int_literal]: #80
[#156 literal]: #76
[#156 paren_expression]: #77
[#156 primary_expression]: #73
[#156 singular_expression]: #67
[#156 template_elaborated_ident]: #74
[#156 unary_expression]: #216
[#160 bool_literal]: #82
[#160 call_expression]: #75
[#160 decimal_float_literal]: #87
[#160 decimal_int_literal]: #85
[#160 float_literal]: #81
[#160 hex_float_literal]: #88
[#160 hex_int_literal]: #86
[#160 ident]: #79
[#160 ident_pattern_token]: #84
[#160 int_literal]: #80
[#160 literal]: #76
[#160 paren_expression]: #77
[#160 primary_expression]: #73
[#160 singular_expression]: #67
[#160 template_elaborated_ident]: #74
[#160 unary_expression]: #215
[#161 bool_literal]: #82
[#161 call_expression]: #75
[#161 decimal_float_literal]: #87
[#161 decimal_int_literal]: #85
[#161 float_literal]: #81
[#161 hex_float_literal]: #88
[#161 hex_int_literal]: #86
[#161 ident]: #79
[#161 ident_pattern_token]: #84
[#161 int_literal]: #80
[#161 literal]: #76
[#161 paren_expression]: #77
[#161 primary_expression]: #73
[#161 singular_expression]: #67
[#161 template_elaborated_ident]: #74
[#161 unary_expression]: #214
[#164 bool_literal]: #82
[#164 call_expression]: #75
[#164 decimal_float_literal]: #87
[#164 decimal_int_literal]: #85
[#164 float_literal]: #81
[#164 hex_float_literal]: #88
[#164 hex_int_literal]: #86
[#164 ident]: #79
[#164 ident_pattern_token]: #84
[#164 int_literal]: #80
[#164 literal]: #76
[#164 multiplicative_expression]: #212
[#164 paren_expression]: #77
[#164 primary_expression]: #73
[#164 singular_expression]: #67
[#164 template_elaborated_ident]: #74
[#164 unary_expression]: #213
[#167 bool_literal]: #82
[#167 call_expression]: #75
[#167 decimal_float_literal]: #87
[#167 decimal_int_literal]: #85
[#167 float_literal]: #81
[#167 hex_float_literal]: #88
[#167 hex_int_literal]: #86
[#167 ident]: #79
[#167 ident_pattern_token]: #84
[#167 int_literal]: #80
[#167 literal]: #76
[#167 paren_expression]: #77
[#167 primary_expression]: #73
[#167 singular_expression]: #67
[#167 template_elaborated_ident]: #74
[#167 unary_expression]: #211
[#168 bool_literal]: #82
[#168 call_expression]: #75
[#168 decimal_float_literal]: #87
[#168 decimal_int_literal]: #85
[#168 float_literal]: #81
[#168 hex_float_literal]: #88
[#168 hex_int_literal]: #86
[#168 ident]: #79
[#168 ident_pattern_token]: #84
[#168 int_literal]: #80
[#168 literal]: #76
[#168 paren_expression]: #77
[#168 primary_expression]: #73
[#168 singular_expression]: #67
[#168 template_elaborated_ident]: #74
[#168 unary_expression]: #210
[#169 bool_literal]: #82
[#169 call_expression]: #75
[#169 decimal_float_literal]: #87
[#169 decimal_int_literal]: #85
[#169 float_literal]: #81
[#169 hex_float_literal]: #88
[#169 hex_int_literal]: #86
[#169 ident]: #79
[#169 ident_pattern_token]: #84
[#169 int_literal]: #80
[#169 literal]: #76
[#169 paren_expression]: #77
[#169 primary_expression]: #73
[#169 singular_expression]: #67
[#169 template_elaborated_ident]: #74
[#169 unary_expression]: #209
[#170 additive_expression]: #64
[#170 bool_literal]: #82
[#170 call_expression]: #75
[#170 decimal_float_literal]: #87
[#170 decimal_int_literal]: #85
[#170 float_literal]: #81
[#170 hex_float_literal]: #88
[#170 hex_int_literal]: #86
[#170 ident]: #79
[#170 ident_pattern_token]: #84
[#170 int_literal]: #80
[#170 literal]: #76
[#170 multiplicative_expression]: #66
[#170 paren_expression]: #77
[#170 primary_expression]: #73
[#170 shift_expression]: #208
[#170 singular_expression]: #67
[#170 template_elaborated_ident]: #74
[#170 unary_expression]: #201
[#171 additive_expression]: #64
[#171 bool_literal]: #82
[#171 call_expression]: #75
[#171 decimal_float_literal]: #87
[#171 decimal_int_literal]: #85
[#171 float_literal]: #81
[#171 hex_float_literal]: #88
[#171 hex_int_literal]: #86
[#171 ident]: #79
[#171 ident_pattern_token]: #84
[#171 int_literal]: #80
[#171 literal]: #76
[#171 multiplicative_expression]: #66
[#171 paren_expression]: #77
[#171 primary_expression]: #73
[#171 shift_expression]: #207
[#171 singular_expression]: #67
[#171 template_elaborated_ident]: #74
[#171 unary_expression]: #201
[#172 additive_expression]: #64
[#172 bool_literal]: #82
[#172 call_expression]: #75
[#172 decimal_float_literal]: #87
[#172 decimal_int_literal]: #85
[#172 float_literal]: #81
[#172 hex_float_literal]: #88
[#172 hex_int_literal]: #86
[#172 ident]: #79
[#172 ident_pattern_token]: #84
[#172 int_literal]: #80
[#172 literal]: #76
[#172 multiplicative_expression]: #66
[#172 paren_expression]: #77
[#172 primary_expression]: #73
[#172 shift_expression]: #206
[#172 singular_expression]: #67
[#172 template_elaborated_ident]: #74
[#172 unary_expression]: #201
[#173 additive_expression]: #64
[#173 bool_literal]: #82
[#173 call_expression]: #75
[#173 decimal_float_literal]: #87
[#173 decimal_int_literal]: #85
[#173 float_literal]: #81
[#173 hex_float_literal]: #88
[#173 hex_int_literal]: #86
[#173 ident]: #79
[#173 ident_pattern_token]: #84
[#173 int_literal]: #80
[#173 literal]: #76
[#173 multiplicative_expression]: #66
[#173 paren_expression]: #77
[#173 primary_expression]: #73
[#173 shift_expression]: #205
[#173 singular_expression]: #67
[#173 template_elaborated_ident]: #74
[#173 unary_expression]: #201
[#174 additive_expression]: #64
[#174 bool_literal]: #82
[#174 call_expression]: #75
[#174 decimal_float_literal]: #87
[#174 decimal_int_literal]: #85
[#174 float_literal]: #81
[#174 hex_float_literal]: #88
[#174 hex_int_literal]: #86
[#174 ident]: #79
[#174 ident_pattern_token]: #84
[#174 int_literal]: #80
[#174 literal]: #76
[#174 multiplicative_expression]: #66
[#174 paren_expression]: #77
[#174 primary_expression]: #73
[#174 shift_expression]: #204
[#174 singular_expression]: #67
[#174 template_elaborated_ident]: #74
[#174 unary_expression]: #201
[#175 additive_expression]: #64
[#175 bool_literal]: #82
[#175 call_expression]: #75
[#175 decimal_float_literal]: #87
[#175 decimal_int_literal]: #85
[#175 float_literal]: #81
[#175 hex_float_literal]: #88
[#175 hex_int_literal]: #86
[#175 ident]: #79
[#175 ident_pattern_token]: #84
[#175 int_literal]: #80
[#175 literal]: #76
[#175 multiplicative_expression]: #66
[#175 paren_expression]: #77
[#175 primary_expression]: #73
[#175 shift_expression]: #203
[#175 singular_expression]: #67
[#175 template_elaborated_ident]: #74
[#175 unary_expression]: #201
[#180 additive_expression]: #64
[#180 bool_literal]: #82
[#180 call_expression]: #75
[#180 decimal_float_literal]: #87
[#180 decimal_int_literal]: #85
[#180 float_literal]: #81
[#180 hex_float_literal]: #88
[#180 hex_int_literal]: #86
[#180 ident]: #79
[#180 ident_pattern_token]: #84
[#180 int_literal]: #80
[#180 literal]: #76
[#180 multiplicative_expression]: #66
[#180 paren_expression]: #77
[#180 primary_expression]: #73
[#180 relational_expression]: #202
[#180 shift_expression]: #60
[#180 singular_expression]: #67
[#180 template_elaborated_ident]: #74
[#180 unary_expression]: #201
[#181 additive_expression]: #64
[#181 bool_literal]: #82
[#181 call_expression]: #75
[#181 decimal_float_literal]: #87
[#181 decimal_int_literal]: #85
[#181 float_literal]: #81
[#181 hex_float_literal]: #88
[#181 hex_int_literal]: #86
[#181 ident]: #79
[#181 ident_pattern_token]: #84
[#181 int_literal]: #80
[#181 literal]: #76
[#181 multiplicative_expression]: #66
[#181 paren_expression]: #77
[#181 primary_expression]: #73
[#181 relational_expression]: #200
[#181 shift_expression]: #60
[#181 singular_expression]: #67
[#181 template_elaborated_ident]: #74
[#181 unary_expression]: #201
[#182 additive_expression]: #64
[#182 binary_and_expression]: #61
[#182 binary_or_expression]: #62
[#182 binary_xor_expression]: #63
[#182 bitwise_expression]: #59
[#182 bool_literal]: #82
[#182 call_expression]: #75
[#182 decimal_float_literal]: #87
[#182 decimal_int_literal]: #85
[#182 expression]: #199
[#182 float_literal]: #81
[#182 hex_float_literal]: #88
[#182 hex_int_literal]: #86
[#182 ident]: #79
[#182 ident_pattern_token]: #84
[#182 int_literal]: #80
[#182 literal]: #76
[#182 multiplicative_expression]: #66
[#182 paren_expression]: #77
[#182 primary_expression]: #73
[#182 relational_expression]: #56
[#182 shift_expression]: #60
[#182 short_circuit_and_expression]: #58
[#182 short_circuit_or_expression]: #57
[#182 singular_expression]: #67
[#182 template_elaborated_ident]: #74
[#182 unary_expression]: #65
[#183 additive_expression]: #64
[#183 binary_and_expression]: #61
[#183 binary_or_expression]: #62
[#183 binary_xor_expression]: #63
[#183 bitwise_expression]: #59
[#183 bool_literal]: #82
[#183 call_expression]: #75
[#183 decimal_float_literal]: #87
[#183 decimal_int_literal]: #85
[#183 expression]: #198
[#183 float_literal]: #81
[#183 hex_float_literal]: #88
[#183 hex_int_literal]: #86
[#183 ident]: #79
[#183 ident_pattern_token]: #84
[#183 int_literal]: #80
[#183 literal]: #76
[#183 multiplicative_expression]: #66
[#183 paren_expression]: #77
[#183 primary_expression]: #73
[#183 relational_expression]: #56
[#183 shift_expression]: #60
[#183 short_circuit_and_expression]: #58
[#183 short_circuit_or_expression]: #57
[#183 singular_expression]: #67
[#183 template_elaborated_ident]: #74
[#183 unary_expression]: #65
[#184 additive_expression]: #64
[#184 binary_and_expression]: #61
[#184 binary_or_expression]: #62
[#184 binary_xor_expression]: #63
[#184 bitwise_expression]: #59
[#184 bool_literal]: #82
[#184 call_expression]: #75
[#184 decimal_float_literal]: #87
[#184 decimal_int_literal]: #85
[#184 expression]: #197
[#184 float_literal]: #81
[#184 hex_float_literal]: #88
[#184 hex_int_literal]: #86
[#184 ident]: #79
[#184 ident_pattern_token]: #84
[#184 int_literal]: #80
[#184 literal]: #76
[#184 multiplicative_expression]: #66
[#184 paren_expression]: #77
[#184 primary_expression]: #73
[#184 relational_expression]: #56
[#184 shift_expression]: #60
[#184 short_circuit_and_expression]: #58
[#184 short_circuit_or_expression]: #57
[#184 singular_expression]: #67
[#184 template_elaborated_ident]: #74
[#184 unary_expression]: #65
[#185 additive_expression]: #64
[#185 binary_and_expression]: #61
[#185 binary_or_expression]: #62
[#185 binary_xor_expression]: #63
[#185 bitwise_expression]: #59
[#185 bool_literal]: #82
[#185 call_expression]: #75
[#185 decimal_float_literal]: #87
[#185 decimal_int_literal]: #85
[#185 expression]: #196
[#185 float_literal]: #81
[#185 hex_float_literal]: #88
[#185 hex_int_literal]: #86
[#185 ident]: #79
[#185 ident_pattern_token]: #84
[#185 int_literal]: #80
[#185 literal]: #76
[#185 multiplicative_expression]: #66
[#185 paren_expression]: #77
[#185 primary_expression]: #73
[#185 relational_expression]: #56
[#185 shift_expression]: #60
[#185 short_circuit_and_expression]: #58
[#185 short_circuit_or_expression]: #57
[#185 singular_expression]: #67
[#185 template_elaborated_ident]: #74
[#185 unary_expression]: #65
[#186 additive_expression]: #64
[#186 binary_and_expression]: #61
[#186 binary_or_expression]: #62
[#186 binary_xor_expression]: #63
[#186 bitwise_expression]: #59
[#186 bool_literal]: #82
[#186 call_expression]: #75
[#186 decimal_float_literal]: #87
[#186 decimal_int_literal]: #85
[#186 expression]: #195
[#186 float_literal]: #81
[#186 hex_float_literal]: #88
[#186 hex_int_literal]: #86
[#186 ident]: #79
[#186 ident_pattern_token]: #84
[#186 int_literal]: #80
[#186 literal]: #76
[#186 multiplicative_expression]: #66
[#186 paren_expression]: #77
[#186 primary_expression]: #73
[#186 relational_expression]: #56
[#186 shift_expression]: #60
[#186 short_circuit_and_expression]: #58
[#186 short_circuit_or_expression]: #57
[#186 singular_expression]: #67
[#186 template_elaborated_ident]: #74
[#186 unary_expression]: #65
[#187 additive_expression]: #64
[#187 binary_and_expression]: #61
[#187 binary_or_expression]: #62
[#187 binary_xor_expression]: #63
[#187 bitwise_expression]: #59
[#187 bool_literal]: #82
[#187 call_expression]: #75
[#187 decimal_float_literal]: #87
[#187 decimal_int_literal]: #85
[#187 expression]: #194
[#187 float_literal]: #81
[#187 hex_float_literal]: #88
[#187 hex_int_literal]: #86
[#187 ident]: #79
[#187 ident_pattern_token]: #84
[#187 int_literal]: #80
[#187 literal]: #76
[#187 multiplicative_expression]: #66
[#187 paren_expression]: #77
[#187 primary_expression]: #73
[#187 relational_expression]: #56
[#187 shift_expression]: #60
[#187 short_circuit_and_expression]: #58
[#187 short_circuit_or_expression]: #57
[#187 singular_expression]: #67
[#187 template_elaborated_ident]: #74
[#187 unary_expression]: #65
[#188 additive_expression]: #64
[#188 binary_and_expression]: #61
[#188 binary_or_expression]: #62
[#188 binary_xor_expression]: #63
[#188 bitwise_expression]: #59
[#188 bool_literal]: #82
[#188 call_expression]: #75
[#188 decimal_float_literal]: #87
[#188 decimal_int_literal]: #85
[#188 expression]: #193
[#188 float_literal]: #81
[#188 hex_float_literal]: #88
[#188 hex_int_literal]: #86
[#188 ident]: #79
[#188 ident_pattern_token]: #84
[#188 int_literal]: #80
[#188 literal]: #76
[#188 multiplicative_expression]: #66
[#188 paren_expression]: #77
[#188 primary_expression]: #73
[#188 relational_expression]: #56
[#188 shift_expression]: #60
[#188 short_circuit_and_expression]: #58
[#188 short_circuit_or_expression]: #57
[#188 singular_expression]: #67
[#188 template_elaborated_ident]: #74
[#188 unary_expression]: #65
[#189 additive_expression]: #64
[#189 binary_and_expression]: #61
[#189 binary_or_expression]: #62
[#189 binary_xor_expression]: #63
[#189 bitwise_expression]: #59
[#189 bool_literal]: #82
[#189 call_expression]: #75
[#189 decimal_float_literal]: #87
[#189 decimal_int_literal]: #85
[#189 expression]: #192
[#189 float_literal]: #81
[#189 hex_float_literal]: #88
[#189 hex_int_literal]: #86
[#189 ident]: #79
[#189 ident_pattern_token]: #84
[#189 int_literal]: #80
[#189 literal]: #76
[#189 multiplicative_expression]: #66
[#189 paren_expression]: #77
[#189 primary_expression]: #73
[#189 relational_expression]: #56
[#189 shift_expression]: #60
[#189 short_circuit_and_expression]: #58
[#189 short_circuit_or_expression]: #57
[#189 singular_expression]: #67
[#189 template_elaborated_ident]: #74
[#189 unary_expression]: #65
[#190 additive_expression]: #64
[#190 binary_and_expression]: #61
[#190 binary_or_expression]: #62
[#190 binary_xor_expression]: #63
[#190 bitwise_expression]: #59
[#190 bool_literal]: #82
[#190 call_expression]: #75
[#190 decimal_float_literal]: #87
[#190 decimal_int_literal]: #85
[#190 expression]: #191
[#190 float_literal]: #81
[#190 hex_float_literal]: #88
[#190 hex_int_literal]: #86
[#190 ident]: #79
[#190 ident_pattern_token]: #84
[#190 int_literal]: #80
[#190 literal]: #76
[#190 multiplicative_expression]: #66
[#190 paren_expression]: #77
[#190 primary_expression]: #73
[#190 relational_expression]: #56
[#190 shift_expression]: #60
[#190 short_circuit_and_expression]: #58
[#190 short_circuit_or_expression]: #57
[#190 singular_expression]: #67
[#190 template_elaborated_ident]: #74
[#190 unary_expression]: #65
[#191 attrib_end]: #387
[#191 attrib_end/0.0]: #377
[#192 attrib_end]: #386
[#192 attrib_end/0.0]: #377
[#193 attrib_end]: #385
[#193 attrib_end/0.0]: #377
[#194 attrib_end]: #384
[#194 attrib_end/0.0]: #377
[#195 attrib_end]: #383
[#195 attrib_end/0.0]: #377
[#196 attrib_end]: #381
[#196 attrib_end/0.0]: #377
[#197 attrib_end]: #380
[#197 attrib_end/0.0]: #377
[#198 attrib_end]: #378
[#198 attrib_end/0.0]: #377
[#199 attrib_end]: #375
[#199 attrib_end/0.0]: #377
[#201 _shift_left]: #160
[#201 _shift_right]: #161
[#212 multiplicative_operator]: #156
[#217 component_or_swizzle_specifier]: #374
[#217 component_or_swizzle_specifier/1.2]: #373
[#218 component_or_swizzle_specifier]: #372
[#218 component_or_swizzle_specifier/2.2]: #371
[#231 expression_comma_list/0.1]: #365
[#231 expression_comma_list/0.1/0]: #366
[#231 expression_comma_list/0.1/0/0.0]: #367
[#232 ident]: #285
[#232 ident_pattern_token]: #84
[#232 type_specifier]: #364
[#236 additive_expression]: #64
[#236 binary_and_expression]: #61
[#236 binary_or_expression]: #62
[#236 binary_xor_expression]: #63
[#236 bitwise_expression]: #363
[#236 bool_literal]: #82
[#236 call_expression]: #75
[#236 decimal_float_literal]: #87
[#236 decimal_int_literal]: #85
[#236 float_literal]: #81
[#236 hex_float_literal]: #88
[#236 hex_int_literal]: #86
[#236 ident]: #79
[#236 ident_pattern_token]: #84
[#236 int_literal]: #80
[#236 literal]: #76
[#236 multiplicative_expression]: #66
[#236 paren_expression]: #77
[#236 primary_expression]: #73
[#236 relational_expression]: #360
[#236 shift_expression]: #60
[#236 short_circuit_and_expression]: #362
[#236 short_circuit_or_expression]: #361
[#236 singular_expression]: #67
[#236 template_arg_comma_list]: #358
[#236 template_arg_expression]: #359
[#236 template_elaborated_ident]: #74
[#236 unary_expression]: #65
[#240 assignment_statement]: #268
[#240 break_statement]: #250
[#240 compound_statement]: #254
[#240 compound_statement/0.1/0]: #356
[#240 const_assert_statement]: #255
[#240 continue_statement]: #251
[#240 core_lhs_expression]: #275
[#240 decrement_statement]: #270
[#240 for_statement]: #246
[#240 func_call_statement]: #248
[#240 ident]: #272
[#240 ident_pattern_token]: #84
[#240 if_clause]: #257
[#240 if_statement]: #243
[#240 increment_statement]: #269
[#240 lhs_expression]: #273
[#240 loop_statement]: #245
[#240 return_statement]: #242
[#240 statement]: #240
[#240 switch_statement]: #244
[#240 template_elaborated_ident]: #262
[#240 variable_decl]: #263
[#240 variable_statement]: #249
[#240 variable_updating_statement]: #253
[#240 while_statement]: #247
[#256 additive_expression]: #64
[#256 binary_and_expression]: #61
[#256 binary_or_expression]: #62
[#256 binary_xor_expression]: #63
[#256 bitwise_expression]: #59
[#256 bool_literal]: #82
[#256 call_expression]: #75
[#256 decimal_float_literal]: #87
[#256 decimal_int_literal]: #85
[#256 expression]: #347
[#256 float_literal]: #81
[#256 hex_float_literal]: #88
[#256 hex_int_literal]: #86
[#256 ident]: #79
[#256 ident_pattern_token]: #84
[#256 int_literal]: #80
[#256 literal]: #76
[#256 multiplicative_expression]: #66
[#256 paren_expression]: #77
[#256 primary_expression]: #73
[#256 relational_expression]: #56
[#256 return_statement/0.1]: #346
[#256 shift_expression]: #60
[#256 short_circuit_and_expression]: #58
[#256 short_circuit_or_expression]: #57
[#256 singular_expression]: #67
[#256 template_elaborated_ident]: #74
[#256 unary_expression]: #65
[#257 else_if_clause]: #344
[#257 if_statement/0.1]: #342
[#257 if_statement/0.1/0]: #343
[#258 additive_expression]: #64
[#258 binary_and_expression]: #61
[#258 binary_or_expression]: #62
[#258 binary_xor_expression]: #63
[#258 bitwise_expression]: #59
[#258 bool_literal]: #82
[#258 call_expression]: #75
[#258 decimal_float_literal]: #87
[#258 decimal_int_literal]: #85
[#258 expression]: #341
[#258 float_literal]: #81
[#258 hex_float_literal]: #88
[#258 hex_int_literal]: #86
[#258 ident]: #79
[#258 ident_pattern_token]: #84
[#258 int_literal]: #80
[#258 literal]: #76
[#258 multiplicative_expression]: #66
[#258 paren_expression]: #77
[#258 primary_expression]: #73
[#258 relational_expression]: #56
[#258 shift_expression]: #60
[#258 short_circuit_and_expression]: #58
[#258 short_circuit_or_expression]: #57
[#258 singular_expression]: #67
[#258 template_elaborated_ident]: #74
[#258 unary_expression]: #65
[#261 additive_expression]: #64
[#261 binary_and_expression]: #61
[#261 binary_or_expression]: #62
[#261 binary_xor_expression]: #63
[#261 bitwise_expression]: #59
[#261 bool_literal]: #82
[#261 call_expression]: #75
[#261 decimal_float_literal]: #87
[#261 decimal_int_literal]: #85
[#261 expression]: #338
[#261 float_literal]: #81
[#261 hex_float_literal]: #88
[#261 hex_int_literal]: #86
[#261 ident]: #79
[#261 ident_pattern_token]: #84
[#261 int_literal]: #80
[#261 literal]: #76
[#261 multiplicative_expression]: #66
[#261 paren_expression]: #77
[#261 primary_expression]: #73
[#261 relational_expression]: #56
[#261 shift_expression]: #60
[#261 short_circuit_and_expression]: #58
[#261 short_circuit_or_expression]: #57
[#261 singular_expression]: #67
[#261 template_elaborated_ident]: #74
[#261 unary_expression]: #65
[#262 argument_expression_list]: #337
[#264 ident]: #109
[#264 ident_pattern_token]: #84
[#264 optionally_typed_ident]: #335
[#265 ident]: #109
[#265 ident_pattern_token]: #84
[#265 optionally_typed_ident]: #334
[#271 additive_expression]: #64
[#271 binary_and_expression]: #61
[#271 binary_or_expression]: #62
[#271 binary_xor_expression]: #63
[#271 bitwise_expression]: #59
[#271 bool_literal]: #82
[#271 call_expression]: #75
[#271 decimal_float_literal]: #87
[#271 decimal_int_literal]: #85
[#271 expression]: #333
[#271 float_literal]: #81
[#271 hex_float_literal]: #88
[#271 hex_int_literal]: #86
[#271 ident]: #79
[#271 ident_pattern_token]: #84
[#271 int_literal]: #80
[#271 literal]: #76
[#271 multiplicative_expression]: #66
[#271 paren_expression]: #77
[#271 primary_expression]: #73
[#271 relational_expression]: #56
[#271 shift_expression]: #60
[#271 short_circuit_and_expression]: #58
[#271 short_circuit_or_expression]: #57
[#271 singular_expression]: #67
[#271 template_elaborated_ident]: #74
[#271 unary_expression]: #65
[#272 _disambiguate_template]: #332
[#273 _shift_left_assign]: #329
[#273 _shift_right_assign]: #328
[#273 assignment_statement/0.1]: #315
[#273 compound_assignment_operator]: #319
[#275 component_or_swizzle_specifier]: #313
[#275 lhs_expression/0.1]: #312
[#276 core_lhs_expression]: #275
[#276 ident]: #309
[#276 ident_pattern_token]: #84
[#276 lhs_expression]: #311
[#277 core_lhs_expression]: #275
[#277 ident]: #309
[#277 ident_pattern_token]: #84
[#277 lhs_expression]: #310
[#278 core_lhs_expression]: #275
[#278 ident]: #309
[#278 ident_pattern_token]: #84
[#278 lhs_expression]: #308
[#279 attribute]: #307
[#279 function_header/0.3]: #302
[#279 param]: #304
[#279 param/0.0]: #305
[#279 param/0.0/0]: #306
[#279 param_list]: #303
[#280 struct_body_decl/0.2]: #298
[#280 struct_body_decl/0.2/0]: #299
[#280 struct_body_decl/0.2/0/0.0]: #300
[#281 member_ident]: #297
[#283 attribute]: #283
[#283 struct_member/0.0/0]: #296
[#285 _disambiguate_template]: #295
[#287 additive_expression]: #64
[#287 binary_and_expression]: #61
[#287 binary_or_expression]: #62
[#287 binary_xor_expression]: #63
[#287 bitwise_expression]: #59
[#287 bool_literal]: #82
[#287 call_expression]: #75
[#287 decimal_float_literal]: #87
[#287 decimal_int_literal]: #85
[#287 expression]: #294
[#287 float_literal]: #81
[#287 hex_float_literal]: #88
[#287 hex_int_literal]: #86
[#287 ident]: #79
[#287 ident_pattern_token]: #84
[#287 int_literal]: #80
[#287 literal]: #76
[#287 multiplicative_expression]: #66
[#287 paren_expression]: #77
[#287 primary_expression]: #73
[#287 relational_expression]: #56
[#287 shift_expression]: #60
[#287 short_circuit_and_expression]: #58
[#287 short_circuit_or_expression]: #57
[#287 singular_expression]: #67
[#287 template_elaborated_ident]: #74
[#287 unary_expression]: #65
[#291 ident]: #109
[#291 ident_pattern_token]: #84
[#291 optionally_typed_ident]: #293
[#295 _template_args_start]: #236
[#295 template_elaborated_ident/0.2]: #442
[#295 template_list]: #235
[#298 struct_body_decl/0.3]: #439
[#300 struct_body_decl/0.2/0]: #438
[#300 struct_body_decl/0.2/0/0.0]: #300
[#301 attribute]: #283
[#301 struct_member]: #437
[#301 struct_member/0.0]: #281
[#301 struct_member/0.0/0]: #282
[#304 param_list/0.1]: #432
[#304 param_list/0.1/0]: #433
[#304 param_list/0.1/0/0.0]: #434
[#305 ident]: #431
[#305 ident_pattern_token]: #84
[#307 attribute]: #307
[#307 param/0.0/0]: #430
[#309 _disambiguate_template]: #428
[#314 additive_expression]: #64
[#314 binary_and_expression]: #61
[#314 binary_or_expression]: #62
[#314 binary_xor_expression]: #63
[#314 bitwise_expression]: #59
[#314 bool_literal]: #82
[#314 call_expression]: #75
[#314 decimal_float_literal]: #87
[#314 decimal_int_literal]: #85
[#314 expression]: #427
[#314 float_literal]: #81
[#314 hex_float_literal]: #88
[#314 hex_int_literal]: #86
[#314 ident]: #79
[#314 ident_pattern_token]: #84
[#314 int_literal]: #80
[#314 literal]: #76
[#314 multiplicative_expression]: #66
[#314 paren_expression]: #77
[#314 primary_expression]: #73
[#314 relational_expression]: #56
[#314 shift_expression]: #60
[#314 short_circuit_and_expression]: #58
[#314 short_circuit_or_expression]: #57
[#314 singular_expression]: #67
[#314 template_elaborated_ident]: #74
[#314 unary_expression]: #65
[#315 additive_expression]: #64
[#315 binary_and_expression]: #61
[#315 binary_or_expression]: #62
[#315 binary_xor_expression]: #63
[#315 bitwise_expression]: #59
[#315 bool_literal]: #82
[#315 call_expression]: #75
[#315 decimal_float_literal]: #87
[#315 decimal_int_literal]: #85
[#315 expression]: #426
[#315 float_literal]: #81
[#315 hex_float_literal]: #88
[#315 hex_int_literal]: #86
[#315 ident]: #79
[#315 ident_pattern_token]: #84
[#315 int_literal]: #80
[#315 literal]: #76
[#315 multiplicative_expression]: #66
[#315 paren_expression]: #77
[#315 primary_expression]: #73
[#315 relational_expression]: #56
[#315 shift_expression]: #60
[#315 short_circuit_and_expression]: #58
[#315 short_circuit_or_expression]: #57
[#315 singular_expression]: #67
[#315 template_elaborated_ident]: #74
[#315 unary_expression]: #65
[#332 _template_args_start]: #236
[#332 template_elaborated_ident/0.2]: #234
[#332 template_list]: #235
[#333 compound_statement]: #425
[#336 additive_expression]: #64
[#336 binary_and_expression]: #61
[#336 binary_or_expression]: #62
[#336 binary_xor_expression]: #63
[#336 bitwise_expression]: #59
[#336 bool_literal]: #82
[#336 call_expression]: #75
[#336 decimal_float_literal]: #87
[#336 decimal_int_literal]: #85
[#336 expression]: #422
[#336 float_literal]: #81
[#336 hex_float_literal]: #88
[#336 hex_int_literal]: #86
[#336 ident]: #79
[#336 ident_pattern_token]: #84
[#336 int_literal]: #80
[#336 literal]: #76
[#336 multiplicative_expression]: #66
[#336 paren_expression]: #77
[#336 primary_expression]: #73
[#336 relational_expression]: #56
[#336 shift_expression]: #60
[#336 short_circuit_and_expression]: #58
[#336 short_circuit_or_expression]: #57
[#336 singular_expression]: #67
[#336 template_elaborated_ident]: #74
[#336 unary_expression]: #65
[#338 compound_statement]: #421
[#339 assignment_statement]: #268
[#339 core_lhs_expression]: #275
[#339 decrement_statement]: #270
[#339 for_header]: #415
[#339 for_header/0.0]: #416
[#339 for_init]: #417
[#339 func_call_statement]: #420
[#339 ident]: #272
[#339 ident_pattern_token]: #84
[#339 increment_statement]: #269
[#339 lhs_expression]: #273
[#339 template_elaborated_ident]: #262
[#339 variable_decl]: #263
[#339 variable_statement]: #418
[#339 variable_updating_statement]: #419
[#340 assignment_statement]: #268
[#340 break_statement]: #250
[#340 compound_statement]: #254
[#340 const_assert_statement]: #255
[#340 continue_statement]: #251
[#340 core_lhs_expression]: #275
[#340 decrement_statement]: #270
[#340 for_statement]: #246
[#340 func_call_statement]: #248
[#340 ident]: #272
[#340 ident_pattern_token]: #84
[#340 if_clause]: #257
[#340 if_statement]: #243
[#340 increment_statement]: #269
[#340 lhs_expression]: #273
[#340 loop_statement]: #245
[#340 loop_statement/0.2]: #412
[#340 loop_statement/0.2/0]: #413
[#340 return_statement]: #242
[#340 statement]: #414
[#340 switch_statement]: #244
[#340 template_elaborated_ident]: #262
[#340 variable_decl]: #263
[#340 variable_statement]: #249
[#340 variable_updating_statement]: #253
[#340 while_statement]: #247
[#342 else_clause]: #409
[#342 if_statement/0.2]: #408
[#344 else_if_clause]: #344
[#344 if_statement/0.1/0]: #407
[#358 _template_args_end]: #405
[#359 template_arg_comma_list/0.1]: #401
[#359 template_arg_comma_list/0.1/0]: #402
[#359 template_arg_comma_list/0.1/0/0.0]: #403
[#364 _template_args_end]: #397
[#365 expression_comma_list/0.2]: #395
[#367 expression_comma_list/0.1/0]: #394
[#367 expression_comma_list/0.1/0/0.0]: #367
[#368 additive_expression]: #64
[#368 binary_and_expression]: #61
[#368 binary_or_expression]: #62
[#368 binary_xor_expression]: #63
[#368 bitwise_expression]: #59
[#368 bool_literal]: #82
[#368 call_expression]: #75
[#368 decimal_float_literal]: #87
[#368 decimal_int_literal]: #85
[#368 expression]: #393
[#368 float_literal]: #81
[#368 hex_float_literal]: #88
[#368 hex_int_literal]: #86
[#368 ident]: #79
[#368 ident_pattern_token]: #84
[#368 int_literal]: #80
[#368 literal]: #76
[#368 multiplicative_expression]: #66
[#368 paren_expression]: #77
[#368 primary_expression]: #73
[#368 relational_expression]: #56
[#368 shift_expression]: #60
[#368 short_circuit_and_expression]: #58
[#368 short_circuit_or_expression]: #57
[#368 singular_expression]: #67
[#368 template_elaborated_ident]: #74
[#368 unary_expression]: #65
[#370 component_or_swizzle_specifier]: #392
[#370 component_or_swizzle_specifier/0.3]: #391
[#376 additive_expression]: #64
[#376 binary_and_expression]: #61
[#376 binary_or_expression]: #62
[#376 binary_xor_expression]: #63
[#376 bitwise_expression]: #59
[#376 bool_literal]: #82
[#376 call_expression]: #75
[#376 decimal_float_literal]: #87
[#376 decimal_int_literal]: #85
[#376 expression]: #390
[#376 float_literal]: #81
[#376 hex_float_literal]: #88
[#376 hex_int_literal]: #86
[#376 ident]: #79
[#376 ident_pattern_token]: #84
[#376 int_literal]: #80
[#376 literal]: #76
[#376 multiplicative_expression]: #66
[#376 paren_expression]: #77
[#376 primary_expression]: #73
[#376 relational_expression]: #56
[#376 shift_expression]: #60
[#376 short_circuit_and_expression]: #58
[#376 short_circuit_or_expression]: #57
[#376 singular_expression]: #67
[#376 template_elaborated_ident]: #74
[#376 unary_expression]: #65
[#382 additive_expression]: #64
[#382 binary_and_expression]: #61
[#382 binary_or_expression]: #62
[#382 binary_xor_expression]: #63
[#382 bitwise_expression]: #59
[#382 bool_literal]: #82
[#382 call_expression]: #75
[#382 decimal_float_literal]: #87
[#382 decimal_int_literal]: #85
[#382 expression]: #388
[#382 float_literal]: #81
[#382 hex_float_literal]: #88
[#382 hex_int_literal]: #86
[#382 ident]: #79
[#382 ident_pattern_token]: #84
[#382 int_literal]: #80
[#382 literal]: #76
[#382 multiplicative_expression]: #66
[#382 paren_expression]: #77
[#382 primary_expression]: #73
[#382 relational_expression]: #56
[#382 shift_expression]: #60
[#382 short_circuit_and_expression]: #58
[#382 short_circuit_or_expression]: #57
[#382 singular_expression]: #67
[#382 template_elaborated_ident]: #74
[#382 unary_expression]: #65
[#388 attrib_end]: #478
[#388 attrib_end/0.0]: #377
[#390 attrib_end]: #476
[#390 attrib_end/0.0]: #377
[#397 paren_expression]: #475
[#399 additive_expression]: #64
[#399 bool_literal]: #82
[#399 call_expression]: #75
[#399 decimal_float_literal]: #87
[#399 decimal_int_literal]: #85
[#399 float_literal]: #81
[#399 hex_float_literal]: #88
[#399 hex_int_literal]: #86
[#399 ident]: #79
[#399 ident_pattern_token]: #84
[#399 int_literal]: #80
[#399 literal]: #76
[#399 multiplicative_expression]: #66
[#399 paren_expression]: #77
[#399 primary_expression]: #73
[#399 relational_expression]: #474
[#399 shift_expression]: #60
[#399 singular_expression]: #67
[#399 template_elaborated_ident]: #74
[#399 unary_expression]: #201
[#400 additive_expression]: #64
[#400 bool_literal]: #82
[#400 call_expression]: #75
[#400 decimal_float_literal]: #87
[#400 decimal_int_literal]: #85
[#400 float_literal]: #81
[#400 hex_float_literal]: #88
[#400 hex_int_literal]: #86
[#400 ident]: #79
[#400 ident_pattern_token]: #84
[#400 int_literal]: #80
[#400 literal]: #76
[#400 multiplicative_expression]: #66
[#400 paren_expression]: #77
[#400 primary_expression]: #73
[#400 relational_expression]: #473
[#400 shift_expression]: #60
[#400 singular_expression]: #67
[#400 template_elaborated_ident]: #74
[#400 unary_expression]: #201
[#401 template_arg_comma_list/0.2]: #471
[#403 template_arg_comma_list/0.1/0]: #470
[#403 template_arg_comma_list/0.1/0/0.0]: #403
[#404 additive_expression]: #64
[#404 binary_and_expression]: #61
[#404 binary_or_expression]: #62
[#404 binary_xor_expression]: #63
[#404 bitwise_expression]: #363
[#404 bool_literal]: #82
[#404 call_expression]: #75
[#404 decimal_float_literal]: #87
[#404 decimal_int_literal]: #85
[#404 float_literal]: #81
[#404 hex_float_literal]: #88
[#404 hex_int_literal]: #86
[#404 ident]: #79
[#404 ident_pattern_token]: #84
[#404 int_literal]: #80
[#404 literal]: #76
[#404 multiplicative_expression]: #66
[#404 paren_expression]: #77
[#404 primary_expression]: #73
[#404 relational_expression]: #360
[#404 shift_expression]: #60
[#404 short_circuit_and_expression]: #362
[#404 short_circuit_or_expression]: #361
[#404 singular_expression]: #67
[#404 template_arg_expression]: #469
[#404 template_elaborated_ident]: #74
[#404 unary_expression]: #65
[#406 additive_expression]: #64
[#406 binary_and_expression]: #61
[#406 binary_or_expression]: #62
[#406 binary_xor_expression]: #63
[#406 bitwise_expression]: #59
[#406 bool_literal]: #82
[#406 call_expression]: #75
[#406 decimal_float_literal]: #87
[#406 decimal_int_literal]: #85
[#406 expression]: #468
[#406 float_literal]: #81
[#406 hex_float_literal]: #88
[#406 hex_int_literal]: #86
[#406 ident]: #79
[#406 ident_pattern_token]: #84
[#406 int_literal]: #80
[#406 literal]: #76
[#406 multiplicative_expression]: #66
[#406 paren_expression]: #77
[#406 primary_expression]: #73
[#406 relational_expression]: #56
[#406 shift_expression]: #60
[#406 short_circuit_and_expression]: #58
[#406 short_circuit_or_expression]: #57
[#406 singular_expression]: #67
[#406 template_elaborated_ident]: #74
[#406 unary_expression]: #65
[#410 compound_statement]: #467
[#411 case_clause]: #463
[#411 default_alone_clause]: #464
[#411 switch_body]: #462
[#411 switch_statement/0.3]: #460
[#411 switch_statement/0.3/0]: #461
[#412 continuing_statement]: #458
[#412 loop_statement/0.3]: #457
[#414 assignment_statement]: #268
[#414 break_statement]: #250
[#414 compound_statement]: #254
[#414 const_assert_statement]: #255
[#414 continue_statement]: #251
[#414 core_lhs_expression]: #275
[#414 decrement_statement]: #270
[#414 for_statement]: #246
[#414 func_call_statement]: #248
[#414 ident]: #272
[#414 ident_pattern_token]: #84
[#414 if_clause]: #257
[#414 if_statement]: #243
[#414 increment_statement]: #269
[#414 lhs_expression]: #273
[#414 loop_statement]: #245
[#414 loop_statement/0.2/0]: #456
[#414 return_statement]: #242
[#414 statement]: #414
[#414 switch_statement]: #244
[#414 template_elaborated_ident]: #262
[#414 variable_decl]: #263
[#414 variable_statement]: #249
[#414 variable_updating_statement]: #253
[#414 while_statement]: #247
[#423 additive_expression]: #64
[#423 binary_and_expression]: #61
[#423 binary_or_expression]: #62
[#423 binary_xor_expression]: #63
[#423 bitwise_expression]: #59
[#423 bool_literal]: #82
[#423 call_expression]: #75
[#423 decimal_float_literal]: #87
[#423 decimal_int_literal]: #85
[#423 expression]: #453
[#423 float_literal]: #81
[#423 hex_float_literal]: #88
[#423 hex_int_literal]: #86
[#423 ident]: #79
[#423 ident_pattern_token]: #84
[#423 int_literal]: #80
[#423 literal]: #76
[#423 multiplicative_expression]: #66
[#423 paren_expression]: #77
[#423 primary_expression]: #73
[#423 relational_expression]: #56
[#423 shift_expression]: #60
[#423 short_circuit_and_expression]: #58
[#423 short_circuit_or_expression]: #57
[#423 singular_expression]: #67
[#423 template_elaborated_ident]: #74
[#423 unary_expression]: #65
[#424 additive_expression]: #64
[#424 binary_and_expression]: #61
[#424 binary_or_expression]: #62
[#424 binary_xor_expression]: #63
[#424 bitwise_expression]: #59
[#424 bool_literal]: #82
[#424 call_expression]: #75
[#424 decimal_float_literal]: #87
[#424 decimal_int_literal]: #85
[#424 expression]: #452
[#424 float_literal]: #81
[#424 hex_float_literal]: #88
[#424 hex_int_literal]: #86
[#424 ident]: #79
[#424 ident_pattern_token]: #84
[#424 int_literal]: #80
[#424 literal]: #76
[#424 multiplicative_expression]: #66
[#424 paren_expression]: #77
[#424 primary_expression]: #73
[#424 relational_expression]: #56
[#424 shift_expression]: #60
[#424 short_circuit_and_expression]: #58
[#424 short_circuit_or_expression]: #57
[#424 singular_expression]: #67
[#424 template_elaborated_ident]: #74
[#424 unary_expression]: #65
[#432 param_list/0.2]: #449
[#434 param_list/0.1/0]: #448
[#434 param_list/0.1/0/0.0]: #434
[#435 attribute]: #307
[#435 param]: #447
[#435 param/0.0]: #305
[#435 param/0.0/0]: #306
[#436 function_header/0.5]: #445
[#441 ident]: #285
[#441 ident_pattern_token]: #84
[#441 type_specifier]: #443
[#446 attribute]: #498
[#446 function_header/0.5/0.1]: #496
[#446 function_header/0.5/0.1/0]: #497
[#451 ident]: #285
[#451 ident_pattern_token]: #84
[#451 type_specifier]: #495
[#454 additive_expression]: #64
[#454 binary_and_expression]: #61
[#454 binary_or_expression]: #62
[#454 binary_xor_expression]: #63
[#454 bitwise_expression]: #59
[#454 bool_literal]: #82
[#454 call_expression]: #75
[#454 decimal_float_literal]: #87
[#454 decimal_int_literal]: #85
[#454 expression]: #494
[#454 float_literal]: #81
[#454 for_header/0.2]: #493
[#454 hex_float_literal]: #88
[#454 hex_int_literal]: #86
[#454 ident]: #79
[#454 ident_pattern_token]: #84
[#454 int_literal]: #80
[#454 literal]: #76
[#454 multiplicative_expression]: #66
[#454 paren_expression]: #77
[#454 primary_expression]: #73
[#454 relational_expression]: #56
[#454 shift_expression]: #60
[#454 short_circuit_and_expression]: #58
[#454 short_circuit_or_expression]: #57
[#454 singular_expression]: #67
[#454 template_elaborated_ident]: #74
[#454 unary_expression]: #65
[#455 compound_statement]: #492
[#459 continuing_compound_statement]: #489
[#462 case_clause]: #463
[#462 default_alone_clause]: #464
[#462 switch_body]: #462
[#462 switch_statement/0.3/0]: #487
[#465 additive_expression]: #64
[#465 binary_and_expression]: #61
[#465 binary_or_expression]: #62
[#465 binary_xor_expression]: #63
[#465 bitwise_expression]: #59
[#465 bool_literal]: #82
[#465 call_expression]: #75
[#465 case_selector]: #484
[#465 case_selectors]: #483
[#465 decimal_float_literal]: #87
[#465 decimal_int_literal]: #85
[#465 expression]: #486
[#465 float_literal]: #81
[#465 hex_float_literal]: #88
[#465 hex_int_literal]: #86
[#465 ident]: #79
[#465 ident_pattern_token]: #84
[#465 int_literal]: #80
[#465 literal]: #76
[#465 multiplicative_expression]: #66
[#465 paren_expression]: #77
[#465 primary_expression]: #73
[#465 relational_expression]: #56
[#465 shift_expression]: #60
[#465 short_circuit_and_expression]: #58
[#465 short_circuit_or_expression]: #57
[#465 singular_expression]: #67
[#465 template_elaborated_ident]: #74
[#465 unary_expression]: #65
[#466 default_alone_clause/0.1]: #481
[#468 compound_statement]: #480
[#477 additive_expression]: #64
[#477 binary_and_expression]: #61
[#477 binary_or_expression]: #62
[#477 binary_xor_expression]: #63
[#477 bitwise_expression]: #59
[#477 bool_literal]: #82
[#477 call_expression]: #75
[#477 decimal_float_literal]: #87
[#477 decimal_int_literal]: #85
[#477 expression]: #479
[#477 float_literal]: #81
[#477 hex_float_literal]: #88
[#477 hex_int_literal]: #86
[#477 ident]: #79
[#477 ident_pattern_token]: #84
[#477 int_literal]: #80
[#477 literal]: #76
[#477 multiplicative_expression]: #66
[#477 paren_expression]: #77
[#477 primary_expression]: #73
[#477 relational_expression]: #56
[#477 shift_expression]: #60
[#477 short_circuit_and_expression]: #58
[#477 short_circuit_or_expression]: #57
[#477 singular_expression]: #67
[#477 template_elaborated_ident]: #74
[#477 unary_expression]: #65
[#479 attrib_end]: #512
[#479 attrib_end/0.0]: #377
[#481 compound_statement]: #511
[#483 case_clause/0.2]: #509
[#484 case_selectors/0.1]: #505
[#484 case_selectors/0.1/0]: #506
[#484 case_selectors/0.1/0/0.0]: #507
[#490 assignment_statement]: #268
[#490 break_statement]: #250
[#490 compound_statement]: #254
[#490 const_assert_statement]: #255
[#490 continue_statement]: #251
[#490 continuing_compound_statement/0.1]: #502
[#490 continuing_compound_statement/0.1/0]: #503
[#490 core_lhs_expression]: #275
[#490 decrement_statement]: #270
[#490 for_statement]: #246
[#490 func_call_statement]: #248
[#490 ident]: #272
[#490 ident_pattern_token]: #84
[#490 if_clause]: #257
[#490 if_statement]: #243
[#490 increment_statement]: #269
[#490 lhs_expression]: #273
[#490 loop_statement]: #245
[#490 return_statement]: #242
[#490 statement]: #504
[#490 switch_statement]: #244
[#490 template_elaborated_ident]: #262
[#490 variable_decl]: #263
[#490 variable_statement]: #249
[#490 variable_updating_statement]: #253
[#490 while_statement]: #247
[#496 ident]: #79
[#496 ident_pattern_token]: #84
[#496 template_elaborated_ident]: #500
[#498 attribute]: #498
[#498 function_header/0.5/0.1/0]: #499
[#501 assignment_statement]: #268
[#501 core_lhs_expression]: #275
[#501 decrement_statement]: #270
[#501 for_header/0.4]: #522
[#501 for_update]: #523
[#501 func_call_statement]: #525
[#501 ident]: #272
[#501 ident_pattern_token]: #84
[#501 increment_statement]: #269
[#501 lhs_expression]: #273
[#501 template_elaborated_ident]: #262
[#501 variable_updating_statement]: #524
[#502 break_if_statement]: #520
[#502 continuing_compound_statement/0.2]: #519
[#504 assignment_statement]: #268
[#504 break_statement]: #250
[#504 compound_statement]: #254
[#504 const_assert_statement]: #255
[#504 continue_statement]: #251
[#504 continuing_compound_statement/0.1/0]: #518
[#504 core_lhs_expression]: #275
[#504 decrement_statement]: #270
[#504 for_statement]: #246
[#504 func_call_statement]: #248
[#504 ident]: #272
[#504 ident_pattern_token]: #84
[#504 if_clause]: #257
[#504 if_statement]: #243
[#504 increment_statement]: #269
[#504 lhs_expression]: #273
[#504 loop_statement]: #245
[#504 return_statement]: #242
[#504 statement]: #504
[#504 switch_statement]: #244
[#504 template_elaborated_ident]: #262
[#504 variable_decl]: #263
[#504 variable_statement]: #249
[#504 variable_updating_statement]: #253
[#504 while_statement]: #247
[#505 case_selectors/0.2]: #516
[#507 case_selectors/0.1/0]: #515
[#507 case_selectors/0.1/0/0.0]: #507
[#508 additive_expression]: #64
[#508 binary_and_expression]: #61
[#508 binary_or_expression]: #62
[#508 binary_xor_expression]: #63
[#508 bitwise_expression]: #59
[#508 bool_literal]: #82
[#508 call_expression]: #75
[#508 case_selector]: #514
[#508 decimal_float_literal]: #87
[#508 decimal_int_literal]: #85
[#508 expression]: #486
[#508 float_literal]: #81
[#508 hex_float_literal]: #88
[#508 hex_int_literal]: #86
[#508 ident]: #79
[#508 ident_pattern_token]: #84
[#508 int_literal]: #80
[#508 literal]: #76
[#508 multiplicative_expression]: #66
[#508 paren_expression]: #77
[#508 primary_expression]: #73
[#508 relational_expression]: #56
[#508 shift_expression]: #60
[#508 short_circuit_and_expression]: #58
[#508 short_circuit_or_expression]: #57
[#508 singular_expression]: #67
[#508 template_elaborated_ident]: #74
[#508 unary_expression]: #65
[#509 compound_statement]: #513
[#526 additive_expression]: #64
[#526 binary_and_expression]: #61
[#526 binary_or_expression]: #62
[#526 binary_xor_expression]: #63
[#526 bitwise_expression]: #59
[#526 bool_literal]: #82
[#526 call_expression]: #75
[#526 decimal_float_literal]: #87
[#526 decimal_int_literal]: #85
[#526 expression]: #528
[#526 float_literal]: #81
[#526 hex_float_literal]: #88
[#526 hex_int_literal]: #86
[#526 ident]: #79
[#526 ident_pattern_token]: #84
[#526 int_literal]: #80
[#526 literal]: #76
[#526 multiplicative_expression]: #66
[#526 paren_expression]: #77
[#526 primary_expression]: #73
[#526 relational_expression]: #56
[#526 shift_expression]: #60
[#526 short_circuit_and_expression]: #58
[#526 short_circuit_or_expression]: #57
[#526 singular_expression]: #67
[#526 template_elaborated_ident]: #74
[#526 unary_expression]: #65
