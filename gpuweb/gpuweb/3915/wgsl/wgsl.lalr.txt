=Grammar:

_blankspace:/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_block_comment:/\u200B_block_comment/
_comment:/\/\/.*/
_disambiguate_template:/\u200B_disambiguate_template/
_error_sentinel:/\u200B_error_sentinel/
_greater_than:/\u200B_greater_than/
_greater_than_equal:/\u200B_greater_than_equal/
_less_than:/\u200B_less_than/
_less_than_equal:/\u200B_less_than_equal/
_shift_left:/\u200B_shift_left/
_shift_left_assign:/\u200B_shift_left_assign/
_shift_right:/\u200B_shift_right/
_shift_right_assign:/\u200B_shift_right_assign/
_template_args_end:/\u200B_template_args_end/
_template_args_start:/\u200B_template_args_start/
additive_expression:
   additive_expression additive_operator multiplicative_expression
 | multiplicative_expression
additive_operator:
   '+'
 | '-'
argument_expression_list:
   '(' expression_comma_list ? ')'
assignment_statement:
   '_' '=' expression
 | lhs_expression ( '=' | compound_assignment_operator ) expression
assignment_statement/0.1:
   '='
 | compound_assignment_operator
attrib_end:
   ',' ? ')'
attribute:
   '@' 'align' '(' expression attrib_end
 | '@' 'binding' '(' expression attrib_end
 | '@' 'builtin' '(' expression attrib_end
 | '@' 'compute'
 | '@' 'const'
 | '@' 'fragment'
 | '@' 'group' '(' expression attrib_end
 | '@' 'id' '(' expression attrib_end
 | '@' 'interpolate' '(' expression ',' expression attrib_end
 | '@' 'interpolate' '(' expression attrib_end
 | '@' 'invariant'
 | '@' 'location' '(' expression attrib_end
 | '@' 'must_use'
 | '@' 'size' '(' expression attrib_end
 | '@' 'vertex'
 | '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end
 | '@' 'workgroup_size' '(' expression ',' expression attrib_end
 | '@' 'workgroup_size' '(' expression attrib_end
binary_and_expression:
   binary_and_expression '&' unary_expression
 | unary_expression
binary_or_expression:
   binary_or_expression '|' unary_expression
 | unary_expression
binary_xor_expression:
   binary_xor_expression '^' unary_expression
 | unary_expression
bitwise_expression:
   binary_and_expression '&' unary_expression
 | binary_or_expression '|' unary_expression
 | binary_xor_expression '^' unary_expression
bool_literal:
   'false'
 | 'true'
break_if_statement:
   'break' 'if' expression ';'
break_statement:'break'
call_expression:call_phrase
call_phrase:
   template_elaborated_ident argument_expression_list
case_clause:
   'case' case_selectors ':' ? compound_statement
case_selector:
   'default'
 | expression
case_selectors:
   case_selector ( ',' case_selector ) * ? ',' ?
case_selectors/0.1/0/0.0:
   ',' case_selector
component_or_swizzle_specifier:
   '.' member_ident component_or_swizzle_specifier ?
 | '.' swizzle_name component_or_swizzle_specifier ?
 | '[' expression ']' component_or_swizzle_specifier ?
compound_assignment_operator:
   '%='
 | '&='
 | '*='
 | '+='
 | '-='
 | '/='
 | '^='
 | '|='
 | _shift_left_assign
 | _shift_right_assign
compound_statement:
   '{' statement * ? '}'
const_assert_statement:
   'const_assert' expression
continue_statement:'continue'
continuing_compound_statement:
   '{' statement * ? break_if_statement ? '}'
continuing_statement:
   'continuing' continuing_compound_statement
core_lhs_expression:
   '(' lhs_expression ')'
 | ident _disambiguate_template
decimal_float_literal:
   /0[fh]/
 | /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/
 | /[0-9]+[eE][+-]?[0-9]+[fh]?/
 | /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/
 | /[1-9][0-9]*[fh]/
decimal_int_literal:
   /0[iu]?/
 | /[1-9][0-9]*[iu]?/
decrement_statement:
   lhs_expression '--'
default_alone_clause:
   'default' ':' ? compound_statement
else_clause:
   'else' compound_statement
else_if_clause:
   'else' 'if' expression compound_statement
enable_directive:
   'enable' enable_extension_name ';'
enable_extension_name:ident_pattern_token
expression:
   bitwise_expression
 | relational_expression
 | short_circuit_and_expression '&&' relational_expression
 | short_circuit_or_expression '||' relational_expression
expression_comma_list:
   expression ( ',' expression ) * ? ',' ?
expression_comma_list/0.1/0/0.0:
   ',' expression
float_literal:
   decimal_float_literal
 | hex_float_literal
for_header:
   for_init ? ';' expression ? ';' for_update ?
for_init:
   func_call_statement
 | variable_statement
 | variable_updating_statement
for_statement:
   'for' '(' for_header ')' compound_statement
for_update:
   func_call_statement
 | variable_updating_statement
func_call_statement:call_phrase
function_decl:
   attribute * ? function_header compound_statement
function_header:
   'fn' ident '(' param_list ? ')' ( '->' attribute * ? template_elaborated_ident )?
global_constant_decl:
   'const' optionally_typed_ident '=' expression
 | attribute * ? 'override' optionally_typed_ident ( '=' expression )?
global_decl:
   ';'
 | const_assert_statement ';'
 | function_decl
 | global_constant_decl ';'
 | global_variable_decl ';'
 | struct_decl
 | type_alias_decl ';'
global_directive:
   enable_directive
 | requires_directive
global_variable_decl:
   attribute * ? variable_decl ( '=' expression )?
hex_float_literal:
   /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/
 | /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/
 | /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/
hex_int_literal:/0[xX][0-9a-fA-F]+[iu]?/
ident:
   ident_pattern_token _disambiguate_template
ident_pattern_token:/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
if_clause:
   'if' expression compound_statement
if_statement:
   if_clause else_if_clause * ? else_clause ?
increment_statement:
   lhs_expression '++'
int_literal:
   decimal_int_literal
 | hex_int_literal
lhs_expression:
   '&' lhs_expression
 | '*' lhs_expression
 | core_lhs_expression component_or_swizzle_specifier ?
literal:
   bool_literal
 | float_literal
 | int_literal
loop_statement:
   'loop' '{' statement * ? continuing_statement ? '}'
member_ident:ident_pattern_token
multiplicative_expression:
   multiplicative_expression multiplicative_operator unary_expression
 | unary_expression
multiplicative_operator:
   '%'
 | '*'
 | '/'
optionally_typed_ident:
   ident ( ':' type_specifier )?
param:
   attribute * ? ident ':' type_specifier
param_list:
   param ( ',' param ) * ? ',' ?
param_list/0.1/0/0.0:
   ',' param
paren_expression:
   '(' expression ')'
primary_expression:
   call_expression
 | literal
 | paren_expression
 | template_elaborated_ident
relational_expression:
   shift_expression
 | shift_expression '!=' shift_expression
 | shift_expression '==' shift_expression
 | shift_expression _greater_than shift_expression
 | shift_expression _greater_than_equal shift_expression
 | shift_expression _less_than shift_expression
 | shift_expression _less_than_equal shift_expression
requires_directive:
   'requires' software_extension_list ';'
return_statement:
   'return' expression ?
shift_expression:
   additive_expression
 | unary_expression _shift_left unary_expression
 | unary_expression _shift_right unary_expression
short_circuit_and_expression:
   relational_expression
 | short_circuit_and_expression '&&' relational_expression
short_circuit_or_expression:
   relational_expression
 | short_circuit_or_expression '||' relational_expression
singular_expression:
   primary_expression component_or_swizzle_specifier ?
software_extension_list:
   software_extension_name ( ',' software_extension_name ) * ? ',' ?
software_extension_list/0.1/0/0.0:
   ',' software_extension_name
software_extension_name:ident_pattern_token
statement:
   ';'
 | 'discard' ';'
 | break_statement ';'
 | compound_statement
 | const_assert_statement ';'
 | continue_statement ';'
 | for_statement
 | func_call_statement ';'
 | if_statement
 | loop_statement
 | return_statement ';'
 | switch_statement
 | variable_statement ';'
 | variable_updating_statement ';'
 | while_statement
struct_body_decl:
   '{' struct_member ( ',' struct_member ) * ? ',' ? '}'
struct_body_decl/0.2/0/0.0:
   ',' struct_member
struct_decl:
   'struct' ident struct_body_decl
struct_member:
   attribute * ? member_ident ':' type_specifier
switch_body:
   case_clause
 | default_alone_clause
switch_statement:
   'switch' expression '{' ( switch_body * ) '}'
switch_statement/0.3:
   switch_body *
swizzle_name:
   '/[rgba]/'
 | '/[rgba][rgba]/'
 | '/[rgba][rgba][rgba]/'
 | '/[rgba][rgba][rgba][rgba]/'
 | '/[xyzw]/'
 | '/[xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw][xyzw]/'
template_arg_comma_list:
   template_arg_expression ( ',' template_arg_expression ) * ? ',' ?
template_arg_comma_list/0.1/0/0.0:
   ',' template_arg_expression
template_arg_expression:expression
template_elaborated_ident:
   ident _disambiguate_template template_list ?
template_list:
   _template_args_start template_arg_comma_list _template_args_end
translation_unit:
   global_directive * ? global_decl * ?
type_alias_decl:
   'alias' ident '=' type_specifier
type_specifier:template_elaborated_ident
unary_expression:
   '!' unary_expression
 | '&' unary_expression
 | '*' unary_expression
 | '-' unary_expression
 | '~' unary_expression
 | singular_expression
variable_decl:
   'var' _disambiguate_template template_list ? optionally_typed_ident
variable_statement:
   'const' optionally_typed_ident '=' expression
 | 'let' optionally_typed_ident '=' expression
 | variable_decl
 | variable_decl '=' expression
variable_updating_statement:
   assignment_statement
 | decrement_statement
 | increment_statement
while_statement:
   'while' expression compound_statement

=Raw rules:
translation_unit  -> ( Choice ( Seq translation_unit/0.0 translation_unit/0.1 ) )
translation_unit .reg_info.index: 472
translation_unit .first: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' Îµ}
translation_unit .derives_empty: True
translation_unit .follow: {EndOfText}
global_directive  -> ( Choice enable_directive requires_directive )
global_directive .reg_info.index: 123
global_directive .first: {'enable' 'requires'}
global_directive .derives_empty: False
global_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_decl  -> ( Choice ';' ( Seq global_variable_decl ';' ) ( Seq global_constant_decl ';' ) ( Seq type_alias_decl ';' ) struct_decl function_decl ( Seq const_assert_statement ';' ) )
global_decl .reg_info.index: 134
global_decl .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var'}
global_decl .derives_empty: False
global_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
bool_literal  -> ( Choice 'true' 'false' )
bool_literal .reg_info.index: 135
bool_literal .first: {'false' 'true'}
bool_literal .derives_empty: False
bool_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal  -> ( Choice decimal_int_literal hex_int_literal )
int_literal .reg_info.index: 138
int_literal .first: {/0[iu]?/ /0[xX][0-9a-fA-F]+[iu]?/ /[1-9][0-9]*[iu]?/}
int_literal .derives_empty: False
int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal  -> ( Choice /0[iu]?/ /[1-9][0-9]*[iu]?/ )
decimal_int_literal .reg_info.index: 139
decimal_int_literal .first: {/0[iu]?/ /[1-9][0-9]*[iu]?/}
decimal_int_literal .derives_empty: False
decimal_int_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal  -> /0[xX][0-9a-fA-F]+[iu]?/
hex_int_literal .reg_info.index: 7
hex_int_literal .first: {/0[xX][0-9a-fA-F]+[iu]?/}
hex_int_literal .derives_empty: False
hex_int_literal .follow: {}
float_literal  -> ( Choice decimal_float_literal hex_float_literal )
float_literal .reg_info.index: 142
float_literal .first: {/0[fh]/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
float_literal .derives_empty: False
float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal  -> ( Choice /0[fh]/ /[1-9][0-9]*[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ )
decimal_float_literal .reg_info.index: 143
decimal_float_literal .first: {/0[fh]/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/}
decimal_float_literal .derives_empty: False
decimal_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal  -> ( Choice /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ )
hex_float_literal .reg_info.index: 144
hex_float_literal .first: {/0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/}
hex_float_literal .derives_empty: False
hex_float_literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal  -> ( Choice int_literal float_literal bool_literal )
literal .reg_info.index: 148
literal .first: {'false' 'true' /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
literal .derives_empty: False
literal .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident  -> ( Choice ( Seq ident_pattern_token _disambiguate_template ) )
ident .reg_info.index: 421
ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident .derives_empty: False
ident .follow: {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}
member_ident  -> ident_pattern_token
member_ident .reg_info.index: 149
member_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
member_ident .derives_empty: False
member_ident .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
template_list  -> ( Choice ( Seq _template_args_start template_arg_comma_list _template_args_end ) )
template_list .reg_info.index: 422
template_list .first: {/\u200B_template_args_start/}
template_list .derives_empty: False
template_list .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_arg_comma_list  -> ( Choice ( Seq template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 ) )
template_arg_comma_list .reg_info.index: 523
template_arg_comma_list .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_arg_comma_list .derives_empty: False
template_arg_comma_list .follow: {/\u200B_template_args_end/}
template_arg_expression  -> expression
template_arg_expression .reg_info.index: 162
template_arg_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_arg_expression .derives_empty: False
template_arg_expression .follow: {',' /\u200B_template_args_end/}
attribute  -> ( Choice ( Seq '@' 'align' '(' expression attrib_end ) ( Seq '@' 'binding' '(' expression attrib_end ) ( Seq '@' 'builtin' '(' expression attrib_end ) ( Seq '@' 'const' ) ( Seq '@' 'group' '(' expression attrib_end ) ( Seq '@' 'id' '(' expression attrib_end ) ( Seq '@' 'interpolate' '(' expression attrib_end ) ( Seq '@' 'interpolate' '(' expression ',' expression attrib_end ) ( Seq '@' 'invariant' ) ( Seq '@' 'location' '(' expression attrib_end ) ( Seq '@' 'must_use' ) ( Seq '@' 'size' '(' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression ',' expression attrib_end ) ( Seq '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end ) ( Seq '@' 'vertex' ) ( Seq '@' 'fragment' ) ( Seq '@' 'compute' ) )
attribute .reg_info.index: 182
attribute .first: {'@'}
attribute .derives_empty: False
attribute .follow: {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end  -> ( Choice ( Seq attrib_end/0.0 ')' ) )
attrib_end .reg_info.index: 626
attrib_end .first: {')' ','}
attrib_end .derives_empty: False
attrib_end .follow: {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_decl  -> ( Choice ( Seq 'struct' ident struct_body_decl ) )
struct_decl .reg_info.index: 425
struct_decl .first: {'struct'}
struct_decl .derives_empty: False
struct_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl  -> ( Choice ( Seq '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' ) )
struct_body_decl .reg_info.index: 639
struct_body_decl .first: {'{'}
struct_body_decl .derives_empty: False
struct_body_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_member  -> ( Choice ( Seq struct_member/0.0 member_ident ':' type_specifier ) )
struct_member .reg_info.index: 647
struct_member .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member .derives_empty: False
struct_member .follow: {',' '}'}
type_alias_decl  -> ( Choice ( Seq 'alias' ident '=' type_specifier ) )
type_alias_decl .reg_info.index: 428
type_alias_decl .first: {'alias'}
type_alias_decl .derives_empty: False
type_alias_decl .follow: {';'}
type_specifier  -> template_elaborated_ident
type_specifier .reg_info.index: 199
type_specifier .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
type_specifier .derives_empty: False
type_specifier .follow: {')' ',' ';' '=' '}'}
template_elaborated_ident  -> ( Choice ( Seq ident _disambiguate_template template_elaborated_ident/0.2 ) )
template_elaborated_ident .reg_info.index: 659
template_elaborated_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident .derives_empty: False
template_elaborated_ident .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
variable_statement  -> ( Choice variable_decl ( Seq variable_decl '=' expression ) ( Seq 'let' optionally_typed_ident '=' expression ) ( Seq 'const' optionally_typed_ident '=' expression ) )
variable_statement .reg_info.index: 208
variable_statement .first: {'const' 'let' 'var'}
variable_statement .derives_empty: False
variable_statement .follow: {';'}
variable_decl  -> ( Choice ( Seq 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident ) )
variable_decl .reg_info.index: 681
variable_decl .first: {'var'}
variable_decl .derives_empty: False
variable_decl .follow: {';' '='}
optionally_typed_ident  -> ( Choice ( Seq ident optionally_typed_ident/0.1 ) )
optionally_typed_ident .reg_info.index: 687
optionally_typed_ident .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
optionally_typed_ident .derives_empty: False
optionally_typed_ident .follow: {';' '='}
global_variable_decl  -> ( Choice ( Seq global_variable_decl/0.0 variable_decl global_variable_decl/0.2 ) )
global_variable_decl .reg_info.index: 694
global_variable_decl .first: {'@' 'var'}
global_variable_decl .derives_empty: False
global_variable_decl .follow: {';'}
global_constant_decl  -> ( Choice ( Seq 'const' optionally_typed_ident '=' expression ) ( Seq global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 ) )
global_constant_decl .reg_info.index: 706
global_constant_decl .first: {'@' 'const' 'override'}
global_constant_decl .derives_empty: False
global_constant_decl .follow: {';'}
primary_expression  -> ( Choice template_elaborated_ident call_expression literal paren_expression )
primary_expression .reg_info.index: 221
primary_expression .first: {'(' 'false' 'true' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
primary_expression .derives_empty: False
primary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression  -> call_phrase
call_expression .reg_info.index: 222
call_expression .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_expression .derives_empty: False
call_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_phrase  -> ( Choice ( Seq template_elaborated_ident argument_expression_list ) )
call_phrase .reg_info.index: 433
call_phrase .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
call_phrase .derives_empty: False
call_phrase .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression  -> ( Choice ( Seq '(' expression ')' ) )
paren_expression .reg_info.index: 434
paren_expression .first: {'('}
paren_expression .derives_empty: False
paren_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list  -> ( Choice ( Seq '(' argument_expression_list/0.1 ')' ) )
argument_expression_list .reg_info.index: 724
argument_expression_list .first: {'('}
argument_expression_list .derives_empty: False
argument_expression_list .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
expression_comma_list  -> ( Choice ( Seq expression expression_comma_list/0.1 expression_comma_list/0.2 ) )
expression_comma_list .reg_info.index: 731
expression_comma_list .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression_comma_list .derives_empty: False
expression_comma_list .follow: {')'}
component_or_swizzle_specifier  -> ( Choice ( Seq '[' expression ']' component_or_swizzle_specifier/0.3 ) ( Seq '.' member_ident component_or_swizzle_specifier/1.2 ) ( Seq '.' swizzle_name component_or_swizzle_specifier/2.2 ) )
component_or_swizzle_specifier .reg_info.index: 749
component_or_swizzle_specifier .first: {'.' '['}
component_or_swizzle_specifier .derives_empty: False
component_or_swizzle_specifier .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
unary_expression  -> ( Choice singular_expression ( Seq '-' unary_expression ) ( Seq '!' unary_expression ) ( Seq '~' unary_expression ) ( Seq '*' unary_expression ) ( Seq '&' unary_expression ) )
unary_expression .reg_info.index: 247
unary_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
unary_expression .derives_empty: False
unary_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression  -> ( Choice ( Seq primary_expression singular_expression/0.1 ) )
singular_expression .reg_info.index: 770
singular_expression .first: {'(' 'false' 'true' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
singular_expression .derives_empty: False
singular_expression .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
lhs_expression  -> ( Choice ( Seq core_lhs_expression lhs_expression/0.1 ) ( Seq '*' lhs_expression ) ( Seq '&' lhs_expression ) )
lhs_expression .reg_info.index: 781
lhs_expression .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
lhs_expression .derives_empty: False
lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression  -> ( Choice ( Seq ident _disambiguate_template ) ( Seq '(' lhs_expression ')' ) )
core_lhs_expression .reg_info.index: 258
core_lhs_expression .first: {'(' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
core_lhs_expression .derives_empty: False
core_lhs_expression .follow: {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
multiplicative_expression  -> ( Choice unary_expression ( Seq multiplicative_expression multiplicative_operator unary_expression ) )
multiplicative_expression .reg_info.index: 262
multiplicative_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_expression .derives_empty: False
multiplicative_expression .follow: {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator  -> ( Choice '*' '/' '%' )
multiplicative_operator .reg_info.index: 263
multiplicative_operator .first: {'%' '*' '/'}
multiplicative_operator .derives_empty: False
multiplicative_operator .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression  -> ( Choice multiplicative_expression ( Seq additive_expression additive_operator multiplicative_expression ) )
additive_expression .reg_info.index: 267
additive_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_expression .derives_empty: False
additive_expression .follow: {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_operator  -> ( Choice '+' '-' )
additive_operator .reg_info.index: 268
additive_operator .first: {'+' '-'}
additive_operator .derives_empty: False
additive_operator .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression  -> ( Choice additive_expression ( Seq unary_expression _shift_left unary_expression ) ( Seq unary_expression _shift_right unary_expression ) )
shift_expression .reg_info.index: 273
shift_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
shift_expression .derives_empty: False
shift_expression .follow: {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
relational_expression  -> ( Choice shift_expression ( Seq shift_expression _less_than shift_expression ) ( Seq shift_expression _greater_than shift_expression ) ( Seq shift_expression _less_than_equal shift_expression ) ( Seq shift_expression _greater_than_equal shift_expression ) ( Seq shift_expression '==' shift_expression ) ( Seq shift_expression '!=' shift_expression ) )
relational_expression .reg_info.index: 285
relational_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
relational_expression .derives_empty: False
relational_expression .follow: {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
short_circuit_and_expression  -> ( Choice relational_expression ( Seq short_circuit_and_expression '&&' relational_expression ) )
short_circuit_and_expression .reg_info.index: 289
short_circuit_and_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_and_expression .derives_empty: False
short_circuit_and_expression .follow: {'&&'}
short_circuit_or_expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) )
short_circuit_or_expression .reg_info.index: 292
short_circuit_or_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
short_circuit_or_expression .derives_empty: False
short_circuit_or_expression .follow: {'||'}
binary_or_expression  -> ( Choice unary_expression ( Seq binary_or_expression '|' unary_expression ) )
binary_or_expression .reg_info.index: 295
binary_or_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_or_expression .derives_empty: False
binary_or_expression .follow: {'|'}
binary_and_expression  -> ( Choice unary_expression ( Seq binary_and_expression '&' unary_expression ) )
binary_and_expression .reg_info.index: 298
binary_and_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_and_expression .derives_empty: False
binary_and_expression .follow: {'&'}
binary_xor_expression  -> ( Choice unary_expression ( Seq binary_xor_expression '^' unary_expression ) )
binary_xor_expression .reg_info.index: 301
binary_xor_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
binary_xor_expression .derives_empty: False
binary_xor_expression .follow: {'^'}
bitwise_expression  -> ( Choice ( Seq binary_and_expression '&' unary_expression ) ( Seq binary_or_expression '|' unary_expression ) ( Seq binary_xor_expression '^' unary_expression ) )
bitwise_expression .reg_info.index: 302
bitwise_expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
bitwise_expression .derives_empty: False
bitwise_expression .follow: {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
expression  -> ( Choice relational_expression ( Seq short_circuit_or_expression '||' relational_expression ) ( Seq short_circuit_and_expression '&&' relational_expression ) bitwise_expression )
expression .reg_info.index: 304
expression .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
expression .derives_empty: False
expression .follow: {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
compound_statement  -> ( Choice ( Seq '{' compound_statement/0.1 '}' ) )
compound_statement .reg_info.index: 891
compound_statement .first: {'{'}
compound_statement .derives_empty: False
compound_statement .follow: {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
assignment_statement  -> ( Choice ( Seq lhs_expression assignment_statement/0.1 expression ) ( Seq '_' '=' expression ) )
assignment_statement .reg_info.index: 902
assignment_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement .derives_empty: False
assignment_statement .follow: {')' ';'}
compound_assignment_operator  -> ( Choice '+=' '-=' '*=' '/=' '%=' '&=' '|=' '^=' _shift_right_assign _shift_left_assign )
compound_assignment_operator .reg_info.index: 316
compound_assignment_operator .first: {'%=' '&=' '*=' '+=' '-=' '/=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
compound_assignment_operator .derives_empty: False
compound_assignment_operator .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
increment_statement  -> ( Choice ( Seq lhs_expression '++' ) )
increment_statement .reg_info.index: 439
increment_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement .derives_empty: False
increment_statement .follow: {')' ';'}
decrement_statement  -> ( Choice ( Seq lhs_expression '--' ) )
decrement_statement .reg_info.index: 440
decrement_statement .first: {'&' '(' '*' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
decrement_statement .derives_empty: False
decrement_statement .follow: {')' ';'}
if_statement  -> ( Choice ( Seq if_clause if_statement/0.1 if_statement/0.2 ) )
if_statement .reg_info.index: 926
if_statement .first: {'if'}
if_statement .derives_empty: False
if_statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_clause  -> ( Choice ( Seq 'if' expression compound_statement ) )
if_clause .reg_info.index: 442
if_clause .first: {'if'}
if_clause .derives_empty: False
if_clause .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause  -> ( Choice ( Seq 'else' 'if' expression compound_statement ) )
else_if_clause .reg_info.index: 443
else_if_clause .first: {'else'}
else_if_clause .derives_empty: False
else_if_clause .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause  -> ( Choice ( Seq 'else' compound_statement ) )
else_clause .reg_info.index: 444
else_clause .first: {'else'}
else_clause .derives_empty: False
else_clause .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement  -> ( Choice ( Seq 'switch' expression '{' switch_statement/0.3 '}' ) )
switch_statement .reg_info.index: 947
switch_statement .first: {'switch'}
switch_statement .derives_empty: False
switch_statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_body  -> ( Choice case_clause default_alone_clause )
switch_body .reg_info.index: 335
switch_body .first: {'case' 'default'}
switch_body .derives_empty: False
switch_body .follow: {'case' 'default' '}'}
case_clause  -> ( Choice ( Seq 'case' case_selectors case_clause/0.2 compound_statement ) )
case_clause .reg_info.index: 957
case_clause .first: {'case'}
case_clause .derives_empty: False
case_clause .follow: {'case' 'default' '}'}
default_alone_clause  -> ( Choice ( Seq 'default' default_alone_clause/0.1 compound_statement ) )
default_alone_clause .reg_info.index: 963
default_alone_clause .first: {'default'}
default_alone_clause .derives_empty: False
default_alone_clause .follow: {'case' 'default' '}'}
case_selectors  -> ( Choice ( Seq case_selector case_selectors/0.1 case_selectors/0.2 ) )
case_selectors .reg_info.index: 970
case_selectors .first: {'!' '&' '(' '*' '-' 'default' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selectors .derives_empty: False
case_selectors .follow: {':' '{'}
case_selector  -> ( Choice 'default' expression )
case_selector .reg_info.index: 345
case_selector .first: {'!' '&' '(' '*' '-' 'default' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
case_selector .derives_empty: False
case_selector .follow: {',' ':' '{'}
loop_statement  -> ( Choice ( Seq 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' ) )
loop_statement .reg_info.index: 981
loop_statement .first: {'loop'}
loop_statement .derives_empty: False
loop_statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_statement  -> ( Choice ( Seq 'for' '(' for_header ')' compound_statement ) )
for_statement .reg_info.index: 450
for_statement .first: {'for'}
for_statement .derives_empty: False
for_statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header  -> ( Choice ( Seq for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 ) )
for_header .reg_info.index: 998
for_header .first: {'&' '(' '*' ';' '_' 'const' 'let' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_header .derives_empty: False
for_header .follow: {')'}
for_init  -> ( Choice variable_statement variable_updating_statement func_call_statement )
for_init .reg_info.index: 360
for_init .first: {'&' '(' '*' '_' 'const' 'let' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_init .derives_empty: False
for_init .follow: {';'}
for_update  -> ( Choice variable_updating_statement func_call_statement )
for_update .reg_info.index: 361
for_update .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
for_update .derives_empty: False
for_update .follow: {')'}
while_statement  -> ( Choice ( Seq 'while' expression compound_statement ) )
while_statement .reg_info.index: 452
while_statement .first: {'while'}
while_statement .derives_empty: False
while_statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
break_statement  -> 'break'
break_statement .reg_info.index: 80
break_statement .first: {'break'}
break_statement .derives_empty: False
break_statement .follow: {}
break_if_statement  -> ( Choice ( Seq 'break' 'if' expression ';' ) )
break_if_statement .reg_info.index: 453
break_if_statement .first: {'break'}
break_if_statement .derives_empty: False
break_if_statement .follow: {'}'}
continue_statement  -> 'continue'
continue_statement .reg_info.index: 81
continue_statement .first: {'continue'}
continue_statement .derives_empty: False
continue_statement .follow: {}
continuing_statement  -> ( Choice ( Seq 'continuing' continuing_compound_statement ) )
continuing_statement .reg_info.index: 454
continuing_statement .first: {'continuing'}
continuing_statement .derives_empty: False
continuing_statement .follow: {'}'}
continuing_compound_statement  -> ( Choice ( Seq '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' ) )
continuing_compound_statement .reg_info.index: 1023
continuing_compound_statement .first: {'{'}
continuing_compound_statement .derives_empty: False
continuing_compound_statement .follow: {'}'}
return_statement  -> ( Choice ( Seq 'return' return_statement/0.1 ) )
return_statement .reg_info.index: 1028
return_statement .first: {'return'}
return_statement .derives_empty: False
return_statement .follow: {';'}
func_call_statement  -> call_phrase
func_call_statement .reg_info.index: 222
func_call_statement .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement .derives_empty: False
func_call_statement .follow: {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
const_assert_statement  -> ( Choice ( Seq 'const_assert' expression ) )
const_assert_statement .reg_info.index: 457
const_assert_statement .first: {'const_assert'}
const_assert_statement .derives_empty: False
const_assert_statement .follow: {';'}
statement  -> ( Choice ';' ( Seq return_statement ';' ) if_statement switch_statement loop_statement for_statement while_statement ( Seq func_call_statement ';' ) ( Seq variable_statement ';' ) ( Seq break_statement ';' ) ( Seq continue_statement ';' ) ( Seq 'discard' ';' ) ( Seq variable_updating_statement ';' ) compound_statement ( Seq const_assert_statement ';' ) )
statement .reg_info.index: 386
statement .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement .derives_empty: False
statement .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement  -> ( Choice assignment_statement increment_statement decrement_statement )
variable_updating_statement .reg_info.index: 390
variable_updating_statement .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_updating_statement .derives_empty: False
variable_updating_statement .follow: {')' ';'}
function_decl  -> ( Choice ( Seq function_decl/0.0 function_header compound_statement ) )
function_decl .reg_info.index: 1071
function_decl .first: {'@' 'fn'}
function_decl .derives_empty: False
function_decl .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header  -> ( Choice ( Seq 'fn' ident '(' function_header/0.3 ')' function_header/0.5 ) )
function_header .reg_info.index: 1082
function_header .first: {'fn'}
function_header .derives_empty: False
function_header .follow: {'{'}
param_list  -> ( Choice ( Seq param param_list/0.1 param_list/0.2 ) )
param_list .reg_info.index: 1089
param_list .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list .derives_empty: False
param_list .follow: {')'}
param  -> ( Choice ( Seq param/0.0 ident ':' type_specifier ) )
param .reg_info.index: 1096
param .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param .derives_empty: False
param .follow: {')' ','}
enable_directive  -> ( Choice ( Seq 'enable' enable_extension_name ';' ) )
enable_directive .reg_info.index: 462
enable_directive .first: {'enable'}
enable_directive .derives_empty: False
enable_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive  -> ( Choice ( Seq 'requires' software_extension_list ';' ) )
requires_directive .reg_info.index: 463
requires_directive .first: {'requires'}
requires_directive .derives_empty: False
requires_directive .follow: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
software_extension_list  -> ( Choice ( Seq software_extension_name software_extension_list/0.1 software_extension_list/0.2 ) )
software_extension_list .reg_info.index: 1111
software_extension_list .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list .derives_empty: False
software_extension_list .follow: {';'}
enable_extension_name  -> ident_pattern_token
enable_extension_name .reg_info.index: 149
enable_extension_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
enable_extension_name .derives_empty: False
enable_extension_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
software_extension_name  -> ident_pattern_token
software_extension_name .reg_info.index: 149
software_extension_name .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_name .derives_empty: False
software_extension_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
ident_pattern_token  -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
ident_pattern_token .reg_info.index: 90
ident_pattern_token .first: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
ident_pattern_token .derives_empty: False
ident_pattern_token .follow: {}
swizzle_name  -> ( Choice '/[rgba]/' '/[rgba][rgba]/' '/[rgba][rgba][rgba]/' '/[rgba][rgba][rgba][rgba]/' '/[xyzw]/' '/[xyzw][xyzw]/' '/[xyzw][xyzw][xyzw]/' '/[xyzw][xyzw][xyzw][xyzw]/' )
swizzle_name .reg_info.index: 413
swizzle_name .first: {'/[rgba]/' '/[rgba][rgba]/' '/[rgba][rgba][rgba]/' '/[rgba][rgba][rgba][rgba]/' '/[xyzw]/' '/[xyzw][xyzw]/' '/[xyzw][xyzw][xyzw]/' '/[xyzw][xyzw][xyzw][xyzw]/'}
swizzle_name .derives_empty: False
swizzle_name .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
_comment  -> /\/\/.*/
_comment .reg_info.index: 99
_comment .first: {/\/\/.*/}
_comment .derives_empty: False
_comment .follow: {}
_blankspace  -> /[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_blankspace .reg_info.index: 100
_blankspace .first: {/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/}
_blankspace .derives_empty: False
_blankspace .follow: {}
_shift_left_assign  -> /\u200B_shift_left_assign/
_shift_left_assign .reg_info.index: 101
_shift_left_assign .first: {/\u200B_shift_left_assign/}
_shift_left_assign .derives_empty: False
_shift_left_assign .follow: {}
_disambiguate_template  -> /\u200B_disambiguate_template/
_disambiguate_template .reg_info.index: 102
_disambiguate_template .first: {/\u200B_disambiguate_template/}
_disambiguate_template .derives_empty: False
_disambiguate_template .follow: {}
_greater_than_equal  -> /\u200B_greater_than_equal/
_greater_than_equal .reg_info.index: 103
_greater_than_equal .first: {/\u200B_greater_than_equal/}
_greater_than_equal .derives_empty: False
_greater_than_equal .follow: {}
_template_args_start  -> /\u200B_template_args_start/
_template_args_start .reg_info.index: 104
_template_args_start .first: {/\u200B_template_args_start/}
_template_args_start .derives_empty: False
_template_args_start .follow: {}
_less_than  -> /\u200B_less_than/
_less_than .reg_info.index: 105
_less_than .first: {/\u200B_less_than/}
_less_than .derives_empty: False
_less_than .follow: {}
_greater_than  -> /\u200B_greater_than/
_greater_than .reg_info.index: 106
_greater_than .first: {/\u200B_greater_than/}
_greater_than .derives_empty: False
_greater_than .follow: {}
_shift_right  -> /\u200B_shift_right/
_shift_right .reg_info.index: 107
_shift_right .first: {/\u200B_shift_right/}
_shift_right .derives_empty: False
_shift_right .follow: {}
_template_args_end  -> /\u200B_template_args_end/
_template_args_end .reg_info.index: 108
_template_args_end .first: {/\u200B_template_args_end/}
_template_args_end .derives_empty: False
_template_args_end .follow: {}
_shift_left  -> /\u200B_shift_left/
_shift_left .reg_info.index: 109
_shift_left .first: {/\u200B_shift_left/}
_shift_left .derives_empty: False
_shift_left .follow: {}
_shift_right_assign  -> /\u200B_shift_right_assign/
_shift_right_assign .reg_info.index: 110
_shift_right_assign .first: {/\u200B_shift_right_assign/}
_shift_right_assign .derives_empty: False
_shift_right_assign .follow: {}
_error_sentinel  -> /\u200B_error_sentinel/
_error_sentinel .reg_info.index: 111
_error_sentinel .first: {/\u200B_error_sentinel/}
_error_sentinel .derives_empty: False
_error_sentinel .follow: {}
_less_than_equal  -> /\u200B_less_than_equal/
_less_than_equal .reg_info.index: 112
_less_than_equal .first: {/\u200B_less_than_equal/}
_less_than_equal .derives_empty: False
_less_than_equal .follow: {}
_block_comment  -> /\u200B_block_comment/
_block_comment .reg_info.index: 113
_block_comment .first: {/\u200B_block_comment/}
_block_comment .derives_empty: False
_block_comment .follow: {}
language  -> ( Choice ( Seq translation_unit EndOfText ) )
language .reg_info.index: 465
language .first: {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
language .derives_empty: False
language .follow: {}
translation_unit/0.0  -> ( Choice translation_unit/0.0/0 Îµ )
translation_unit/0.0 .reg_info.index: 1177
translation_unit/0.0 .first: {'enable' 'requires' Îµ}
translation_unit/0.0 .derives_empty: True
translation_unit/0.0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1  -> ( Choice translation_unit/0.1/0 Îµ )
translation_unit/0.1 .reg_info.index: 1181
translation_unit/0.1 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' Îµ}
translation_unit/0.1 .derives_empty: True
translation_unit/0.1 .follow: {EndOfText}
template_arg_comma_list/0.1  -> ( Choice template_arg_comma_list/0.1/0 Îµ )
template_arg_comma_list/0.1 .reg_info.index: 1185
template_arg_comma_list/0.1 .first: {',' Îµ}
template_arg_comma_list/0.1 .derives_empty: True
template_arg_comma_list/0.1 .follow: {',' /\u200B_template_args_end/}
template_arg_comma_list/0.2  -> ( Choice ',' Îµ )
template_arg_comma_list/0.2 .reg_info.index: 160
template_arg_comma_list/0.2 .first: {',' Îµ}
template_arg_comma_list/0.2 .derives_empty: True
template_arg_comma_list/0.2 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
attrib_end/0.0  -> ( Choice ',' Îµ )
attrib_end/0.0 .reg_info.index: 160
attrib_end/0.0 .first: {',' Îµ}
attrib_end/0.0 .derives_empty: True
attrib_end/0.0 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
struct_body_decl/0.2  -> ( Choice struct_body_decl/0.2/0 Îµ )
struct_body_decl/0.2 .reg_info.index: 1191
struct_body_decl/0.2 .first: {',' Îµ}
struct_body_decl/0.2 .derives_empty: True
struct_body_decl/0.2 .follow: {',' '}'}
struct_body_decl/0.3  -> ( Choice ',' Îµ )
struct_body_decl/0.3 .reg_info.index: 160
struct_body_decl/0.3 .first: {',' Îµ}
struct_body_decl/0.3 .derives_empty: True
struct_body_decl/0.3 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
struct_member/0.0  -> ( Choice struct_member/0.0/0 Îµ )
struct_member/0.0 .reg_info.index: 1196
struct_member/0.0 .first: {'@' Îµ}
struct_member/0.0 .derives_empty: True
struct_member/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident/0.2  -> ( Choice template_list Îµ )
template_elaborated_ident/0.2 .reg_info.index: 201
template_elaborated_ident/0.2 .first: {/\u200B_template_args_start/ Îµ}
template_elaborated_ident/0.2 .derives_empty: True
template_elaborated_ident/0.2 .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
variable_decl/0.2  -> ( Choice template_list Îµ )
variable_decl/0.2 .reg_info.index: 201
variable_decl/0.2 .first: {/\u200B_template_args_start/ Îµ}
variable_decl/0.2 .derives_empty: True
variable_decl/0.2 .follow: {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
optionally_typed_ident/0.1  -> ( Choice ( Seq ':' type_specifier ) Îµ )
optionally_typed_ident/0.1 .reg_info.index: 211
optionally_typed_ident/0.1 .first: {':' Îµ}
optionally_typed_ident/0.1 .derives_empty: True
optionally_typed_ident/0.1 .follow: {';' '='}
global_variable_decl/0.0  -> ( Choice global_variable_decl/0.0/0 Îµ )
global_variable_decl/0.0 .reg_info.index: 1205
global_variable_decl/0.0 .first: {'@' Îµ}
global_variable_decl/0.0 .derives_empty: True
global_variable_decl/0.0 .follow: {'var'}
global_variable_decl/0.2  -> ( Choice ( Seq '=' expression ) Îµ )
global_variable_decl/0.2 .reg_info.index: 214
global_variable_decl/0.2 .first: {'=' Îµ}
global_variable_decl/0.2 .derives_empty: True
global_variable_decl/0.2 .follow: {';'}
global_constant_decl/1.0  -> ( Choice global_constant_decl/1.0/0 Îµ )
global_constant_decl/1.0 .reg_info.index: 1212
global_constant_decl/1.0 .first: {'@' Îµ}
global_constant_decl/1.0 .derives_empty: True
global_constant_decl/1.0 .follow: {'override'}
global_constant_decl/1.3  -> ( Choice ( Seq '=' expression ) Îµ )
global_constant_decl/1.3 .reg_info.index: 214
global_constant_decl/1.3 .first: {'=' Îµ}
global_constant_decl/1.3 .derives_empty: True
global_constant_decl/1.3 .follow: {';'}
argument_expression_list/0.1  -> ( Choice expression_comma_list Îµ )
argument_expression_list/0.1 .reg_info.index: 227
argument_expression_list/0.1 .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ Îµ}
argument_expression_list/0.1 .derives_empty: True
argument_expression_list/0.1 .follow: {')'}
expression_comma_list/0.1  -> ( Choice expression_comma_list/0.1/0 Îµ )
expression_comma_list/0.1 .reg_info.index: 1220
expression_comma_list/0.1 .first: {',' Îµ}
expression_comma_list/0.1 .derives_empty: True
expression_comma_list/0.1 .follow: {')' ','}
expression_comma_list/0.2  -> ( Choice ',' Îµ )
expression_comma_list/0.2 .reg_info.index: 160
expression_comma_list/0.2 .first: {',' Îµ}
expression_comma_list/0.2 .derives_empty: True
expression_comma_list/0.2 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
component_or_swizzle_specifier/0.3  -> ( Choice component_or_swizzle_specifier Îµ )
component_or_swizzle_specifier/0.3 .reg_info.index: 234
component_or_swizzle_specifier/0.3 .first: {'.' '[' Îµ}
component_or_swizzle_specifier/0.3 .derives_empty: True
component_or_swizzle_specifier/0.3 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2  -> ( Choice component_or_swizzle_specifier Îµ )
component_or_swizzle_specifier/1.2 .reg_info.index: 234
component_or_swizzle_specifier/1.2 .first: {'.' '[' Îµ}
component_or_swizzle_specifier/1.2 .derives_empty: True
component_or_swizzle_specifier/1.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2  -> ( Choice component_or_swizzle_specifier Îµ )
component_or_swizzle_specifier/2.2 .reg_info.index: 234
component_or_swizzle_specifier/2.2 .first: {'.' '[' Îµ}
component_or_swizzle_specifier/2.2 .derives_empty: True
component_or_swizzle_specifier/2.2 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
singular_expression/0.1  -> ( Choice component_or_swizzle_specifier Îµ )
singular_expression/0.1 .reg_info.index: 234
singular_expression/0.1 .first: {'.' '[' Îµ}
singular_expression/0.1 .derives_empty: True
singular_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
lhs_expression/0.1  -> ( Choice component_or_swizzle_specifier Îµ )
lhs_expression/0.1 .reg_info.index: 234
lhs_expression/0.1 .first: {'.' '[' Îµ}
lhs_expression/0.1 .derives_empty: True
lhs_expression/0.1 .follow: {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
compound_statement/0.1  -> ( Choice compound_statement/0.1/0 Îµ )
compound_statement/0.1 .reg_info.index: 1230
compound_statement/0.1 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
compound_statement/0.1 .derives_empty: True
compound_statement/0.1 .follow: {'}'}
assignment_statement/0.1  -> ( Choice '=' compound_assignment_operator )
assignment_statement/0.1 .reg_info.index: 310
assignment_statement/0.1 .first: {'%=' '&=' '*=' '+=' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
assignment_statement/0.1 .derives_empty: False
assignment_statement/0.1 .follow: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
if_statement/0.1  -> ( Choice if_statement/0.1/0 Îµ )
if_statement/0.1 .reg_info.index: 1235
if_statement/0.1 .first: {'else' Îµ}
if_statement/0.1 .derives_empty: True
if_statement/0.1 .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2  -> ( Choice else_clause Îµ )
if_statement/0.2 .reg_info.index: 324
if_statement/0.2 .first: {'else' Îµ}
if_statement/0.2 .derives_empty: True
if_statement/0.2 .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement/0.3  -> ( Choice switch_statement/0.3/0 )
switch_statement/0.3 .reg_info.index: 1153
switch_statement/0.3 .first: {'case' 'default' Îµ}
switch_statement/0.3 .derives_empty: True
switch_statement/0.3 .follow: {'}'}
case_clause/0.2  -> ( Choice ':' Îµ )
case_clause/0.2 .reg_info.index: 337
case_clause/0.2 .first: {':' Îµ}
case_clause/0.2 .derives_empty: True
case_clause/0.2 .follow: {'{'}
default_alone_clause/0.1  -> ( Choice ':' Îµ )
default_alone_clause/0.1 .reg_info.index: 337
default_alone_clause/0.1 .first: {':' Îµ}
default_alone_clause/0.1 .derives_empty: True
default_alone_clause/0.1 .follow: {'{'}
case_selectors/0.1  -> ( Choice case_selectors/0.1/0 Îµ )
case_selectors/0.1 .reg_info.index: 1242
case_selectors/0.1 .first: {',' Îµ}
case_selectors/0.1 .derives_empty: True
case_selectors/0.1 .follow: {',' ':' '{'}
case_selectors/0.2  -> ( Choice ',' Îµ )
case_selectors/0.2 .reg_info.index: 160
case_selectors/0.2 .first: {',' Îµ}
case_selectors/0.2 .derives_empty: True
case_selectors/0.2 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
loop_statement/0.2  -> ( Choice loop_statement/0.2/0 Îµ )
loop_statement/0.2 .reg_info.index: 1247
loop_statement/0.2 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
loop_statement/0.2 .derives_empty: True
loop_statement/0.2 .follow: {'continuing' '}'}
loop_statement/0.3  -> ( Choice continuing_statement Îµ )
loop_statement/0.3 .reg_info.index: 347
loop_statement/0.3 .first: {'continuing' Îµ}
loop_statement/0.3 .derives_empty: True
loop_statement/0.3 .follow: {'}'}
for_header/0.0  -> ( Choice for_init Îµ )
for_header/0.0 .reg_info.index: 352
for_header/0.0 .first: {'&' '(' '*' '_' 'const' 'let' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
for_header/0.0 .derives_empty: True
for_header/0.0 .follow: {';'}
for_header/0.2  -> ( Choice expression Îµ )
for_header/0.2 .reg_info.index: 353
for_header/0.2 .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ Îµ}
for_header/0.2 .derives_empty: True
for_header/0.2 .follow: {';'}
for_header/0.4  -> ( Choice for_update Îµ )
for_header/0.4 .reg_info.index: 355
for_header/0.4 .first: {'&' '(' '*' '_' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
for_header/0.4 .derives_empty: True
for_header/0.4 .follow: {')'}
continuing_compound_statement/0.1  -> ( Choice continuing_compound_statement/0.1/0 Îµ )
continuing_compound_statement/0.1 .reg_info.index: 1255
continuing_compound_statement/0.1 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
continuing_compound_statement/0.1 .derives_empty: True
continuing_compound_statement/0.1 .follow: {'break' '}'}
continuing_compound_statement/0.2  -> ( Choice break_if_statement Îµ )
continuing_compound_statement/0.2 .reg_info.index: 367
continuing_compound_statement/0.2 .first: {'break' Îµ}
continuing_compound_statement/0.2 .derives_empty: True
continuing_compound_statement/0.2 .follow: {'}'}
return_statement/0.1  -> ( Choice expression Îµ )
return_statement/0.1 .reg_info.index: 353
return_statement/0.1 .first: {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/ Îµ}
return_statement/0.1 .derives_empty: True
return_statement/0.1 .follow: {';'}
function_decl/0.0  -> ( Choice function_decl/0.0/0 Îµ )
function_decl/0.0 .reg_info.index: 1261
function_decl/0.0 .first: {'@' Îµ}
function_decl/0.0 .derives_empty: True
function_decl/0.0 .follow: {'fn'}
function_header/0.3  -> ( Choice param_list Îµ )
function_header/0.3 .reg_info.index: 394
function_header/0.3 .first: {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
function_header/0.3 .derives_empty: True
function_header/0.3 .follow: {')'}
function_header/0.5  -> ( Choice ( Seq '->' function_header/0.5/0.1 template_elaborated_ident ) Îµ )
function_header/0.5 .reg_info.index: 1268
function_header/0.5 .first: {'->' Îµ}
function_header/0.5 .derives_empty: True
function_header/0.5 .follow: {'{'}
param_list/0.1  -> ( Choice param_list/0.1/0 Îµ )
param_list/0.1 .reg_info.index: 1272
param_list/0.1 .first: {',' Îµ}
param_list/0.1 .derives_empty: True
param_list/0.1 .follow: {')' ','}
param_list/0.2  -> ( Choice ',' Îµ )
param_list/0.2 .reg_info.index: 160
param_list/0.2 .first: {',' Îµ}
param_list/0.2 .derives_empty: True
param_list/0.2 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
param/0.0  -> ( Choice param/0.0/0 Îµ )
param/0.0 .reg_info.index: 1277
param/0.0 .first: {'@' Îµ}
param/0.0 .derives_empty: True
param/0.0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list/0.1  -> ( Choice software_extension_list/0.1/0 Îµ )
software_extension_list/0.1 .reg_info.index: 1281
software_extension_list/0.1 .first: {',' Îµ}
software_extension_list/0.1 .derives_empty: True
software_extension_list/0.1 .follow: {',' ';'}
software_extension_list/0.2  -> ( Choice ',' Îµ )
software_extension_list/0.2 .reg_info.index: 160
software_extension_list/0.2 .first: {',' Îµ}
software_extension_list/0.2 .derives_empty: True
software_extension_list/0.2 .follow: {')' ':' ';' '{' '}' /\u200B_template_args_end/}
switch_statement/0.3/0  -> ( Choice ( Seq switch_body switch_statement/0.3/0 ) Îµ )
switch_statement/0.3/0 .reg_info.index: 1152
switch_statement/0.3/0 .first: {'case' 'default' Îµ}
switch_statement/0.3/0 .derives_empty: True
switch_statement/0.3/0 .follow: {'}'}
translation_unit/0.0/0  -> ( Choice ( Seq global_directive translation_unit/0.0/0 ) Îµ )
translation_unit/0.0/0 .reg_info.index: 1175
translation_unit/0.0/0 .first: {'enable' 'requires' Îµ}
translation_unit/0.0/0 .derives_empty: True
translation_unit/0.0/0 .follow: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0  -> ( Choice ( Seq global_decl translation_unit/0.1/0 ) Îµ )
translation_unit/0.1/0 .reg_info.index: 1179
translation_unit/0.1/0 .first: {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' Îµ}
translation_unit/0.1/0 .derives_empty: True
translation_unit/0.1/0 .follow: {EndOfText}
template_arg_comma_list/0.1/0  -> ( Choice ( Seq template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 ) Îµ )
template_arg_comma_list/0.1/0 .reg_info.index: 1301
template_arg_comma_list/0.1/0 .first: {',' Îµ}
template_arg_comma_list/0.1/0 .derives_empty: True
template_arg_comma_list/0.1/0 .follow: {',' /\u200B_template_args_end/}
struct_body_decl/0.2/0  -> ( Choice ( Seq struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 ) Îµ )
struct_body_decl/0.2/0 .reg_info.index: 1308
struct_body_decl/0.2/0 .first: {',' Îµ}
struct_body_decl/0.2/0 .derives_empty: True
struct_body_decl/0.2/0 .follow: {',' '}'}
struct_member/0.0/0  -> ( Choice ( Seq attribute struct_member/0.0/0 ) Îµ )
struct_member/0.0/0 .reg_info.index: 1194
struct_member/0.0/0 .first: {'@' Îµ}
struct_member/0.0/0 .derives_empty: True
struct_member/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
global_variable_decl/0.0/0  -> ( Choice ( Seq attribute global_variable_decl/0.0/0 ) Îµ )
global_variable_decl/0.0/0 .reg_info.index: 1203
global_variable_decl/0.0/0 .first: {'@' Îµ}
global_variable_decl/0.0/0 .derives_empty: True
global_variable_decl/0.0/0 .follow: {'var'}
global_constant_decl/1.0/0  -> ( Choice ( Seq attribute global_constant_decl/1.0/0 ) Îµ )
global_constant_decl/1.0/0 .reg_info.index: 1210
global_constant_decl/1.0/0 .first: {'@' Îµ}
global_constant_decl/1.0/0 .derives_empty: True
global_constant_decl/1.0/0 .follow: {'override'}
expression_comma_list/0.1/0  -> ( Choice ( Seq expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 ) Îµ )
expression_comma_list/0.1/0 .reg_info.index: 1327
expression_comma_list/0.1/0 .first: {',' Îµ}
expression_comma_list/0.1/0 .derives_empty: True
expression_comma_list/0.1/0 .follow: {')' ','}
compound_statement/0.1/0  -> ( Choice ( Seq statement compound_statement/0.1/0 ) Îµ )
compound_statement/0.1/0 .reg_info.index: 1228
compound_statement/0.1/0 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
compound_statement/0.1/0 .derives_empty: True
compound_statement/0.1/0 .follow: {'}'}
if_statement/0.1/0  -> ( Choice ( Seq else_if_clause if_statement/0.1/0 ) Îµ )
if_statement/0.1/0 .reg_info.index: 1233
if_statement/0.1/0 .first: {'else' Îµ}
if_statement/0.1/0 .derives_empty: True
if_statement/0.1/0 .follow: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
case_selectors/0.1/0  -> ( Choice ( Seq case_selectors/0.1/0/0.0 case_selectors/0.1/0 ) Îµ )
case_selectors/0.1/0 .reg_info.index: 1342
case_selectors/0.1/0 .first: {',' Îµ}
case_selectors/0.1/0 .derives_empty: True
case_selectors/0.1/0 .follow: {',' ':' '{'}
loop_statement/0.2/0  -> ( Choice ( Seq statement loop_statement/0.2/0 ) Îµ )
loop_statement/0.2/0 .reg_info.index: 1245
loop_statement/0.2/0 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
loop_statement/0.2/0 .derives_empty: True
loop_statement/0.2/0 .follow: {'continuing' '}'}
continuing_compound_statement/0.1/0  -> ( Choice ( Seq statement continuing_compound_statement/0.1/0 ) Îµ )
continuing_compound_statement/0.1/0 .reg_info.index: 1253
continuing_compound_statement/0.1/0 .first: {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Îµ}
continuing_compound_statement/0.1/0 .derives_empty: True
continuing_compound_statement/0.1/0 .follow: {'break' '}'}
function_decl/0.0/0  -> ( Choice ( Seq attribute function_decl/0.0/0 ) Îµ )
function_decl/0.0/0 .reg_info.index: 1259
function_decl/0.0/0 .first: {'@' Îµ}
function_decl/0.0/0 .derives_empty: True
function_decl/0.0/0 .follow: {'fn'}
function_header/0.5/0.1  -> ( Choice function_header/0.5/0.1/0 Îµ )
function_header/0.5/0.1 .reg_info.index: 1377
function_header/0.5/0.1 .first: {'@' Îµ}
function_header/0.5/0.1 .derives_empty: True
function_header/0.5/0.1 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list/0.1/0  -> ( Choice ( Seq param_list/0.1/0/0.0 param_list/0.1/0 ) Îµ )
param_list/0.1/0 .reg_info.index: 1362
param_list/0.1/0 .first: {',' Îµ}
param_list/0.1/0 .derives_empty: True
param_list/0.1/0 .follow: {')' ','}
param/0.0/0  -> ( Choice ( Seq attribute param/0.0/0 ) Îµ )
param/0.0/0 .reg_info.index: 1275
param/0.0/0 .first: {'@' Îµ}
param/0.0/0 .derives_empty: True
param/0.0/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
software_extension_list/0.1/0  -> ( Choice ( Seq software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 ) Îµ )
software_extension_list/0.1/0 .reg_info.index: 1373
software_extension_list/0.1/0 .first: {',' Îµ}
software_extension_list/0.1/0 .derives_empty: True
software_extension_list/0.1/0 .follow: {',' ';'}
template_arg_comma_list/0.1/0/0.0  -> ( Choice ( Seq ',' template_arg_expression ) )
template_arg_comma_list/0.1/0/0.0 .reg_info.index: 1297
template_arg_comma_list/0.1/0/0.0 .first: {','}
template_arg_comma_list/0.1/0/0.0 .derives_empty: False
template_arg_comma_list/0.1/0/0.0 .follow: {',' /\u200B_template_args_end/}
struct_body_decl/0.2/0/0.0  -> ( Choice ( Seq ',' struct_member ) )
struct_body_decl/0.2/0/0.0 .reg_info.index: 1304
struct_body_decl/0.2/0/0.0 .first: {','}
struct_body_decl/0.2/0/0.0 .derives_empty: False
struct_body_decl/0.2/0/0.0 .follow: {',' '}'}
expression_comma_list/0.1/0/0.0  -> ( Choice ( Seq ',' expression ) )
expression_comma_list/0.1/0/0.0 .reg_info.index: 1323
expression_comma_list/0.1/0/0.0 .first: {','}
expression_comma_list/0.1/0/0.0 .derives_empty: False
expression_comma_list/0.1/0/0.0 .follow: {')' ','}
case_selectors/0.1/0/0.0  -> ( Choice ( Seq ',' case_selector ) )
case_selectors/0.1/0/0.0 .reg_info.index: 1338
case_selectors/0.1/0/0.0 .first: {','}
case_selectors/0.1/0/0.0 .derives_empty: False
case_selectors/0.1/0/0.0 .follow: {',' ':' '{'}
param_list/0.1/0/0.0  -> ( Choice ( Seq ',' param ) )
param_list/0.1/0/0.0 .reg_info.index: 1358
param_list/0.1/0/0.0 .first: {','}
param_list/0.1/0/0.0 .derives_empty: False
param_list/0.1/0/0.0 .follow: {')' ','}
software_extension_list/0.1/0/0.0  -> ( Choice ( Seq ',' software_extension_name ) )
software_extension_list/0.1/0/0.0 .reg_info.index: 1369
software_extension_list/0.1/0/0.0 .first: {','}
software_extension_list/0.1/0/0.0 .derives_empty: False
software_extension_list/0.1/0/0.0 .follow: {',' ';'}
function_header/0.5/0.1/0  -> ( Choice ( Seq attribute function_header/0.5/0.1/0 ) Îµ )
function_header/0.5/0.1/0 .reg_info.index: 1375
function_header/0.5/0.1/0 .first: {'@' Îµ}
function_header/0.5/0.1/0 .derives_empty: True
function_header/0.5/0.1/0 .follow: {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

=LALR1 item sets:
#0
language -> Â· translation_unit EndOfText : {EndOfText}
enable_directive -> Â· 'enable' enable_extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> Â· enable_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> Â· requires_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive -> Â· 'requires' software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
translation_unit -> Â· translation_unit/0.0 translation_unit/0.1 : {EndOfText}
translation_unit/0.0 -> Â· translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> Â· global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#1
language -> translation_unit Â· EndOfText : {EndOfText}

#2
translation_unit -> translation_unit/0.0 Â· translation_unit/0.1 : {EndOfText}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'must_use' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
const_assert_statement -> Â· 'const_assert' expression : {';'}
function_decl -> Â· function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> Â· function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> Â· attribute function_decl/0.0/0 : {'fn'}
global_constant_decl -> Â· 'const' optionally_typed_ident '=' expression : {';'}
global_constant_decl -> Â· global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}
global_constant_decl/1.0 -> Â· global_constant_decl/1.0/0 : {'override'}
global_constant_decl/1.0/0 -> Â· attribute global_constant_decl/1.0/0 : {'override'}
global_decl -> Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· global_constant_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_variable_decl -> Â· global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> Â· global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> Â· attribute global_variable_decl/0.0/0 : {'var'}
struct_decl -> Â· 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1 -> Â· translation_unit/0.1/0 : {EndOfText}
translation_unit/0.1/0 -> Â· global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> Â· 'alias' ident '=' type_specifier : {';'}

#3
translation_unit/0.0 -> translation_unit/0.0/0 Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#4
translation_unit/0.0/0 -> global_directive Â· translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
enable_directive -> Â· 'enable' enable_extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> Â· enable_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
global_directive -> Â· requires_directive : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
requires_directive -> Â· 'requires' software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
translation_unit/0.0/0 -> Â· global_directive translation_unit/0.0/0 : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#5
global_directive -> enable_directive Â· : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#6
global_directive -> requires_directive Â· : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#7
enable_directive -> 'enable' Â· enable_extension_name ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
enable_extension_name -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {';'}

#8
requires_directive -> 'requires' Â· software_extension_list ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}
software_extension_list -> Â· software_extension_name software_extension_list/0.1 software_extension_list/0.2 : {';'}
software_extension_name -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' ';'}

#9
requires_directive -> 'requires' software_extension_list Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#10
software_extension_list -> software_extension_name Â· software_extension_list/0.1 software_extension_list/0.2 : {';'}
software_extension_list/0.1 -> Â· software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0 -> Â· software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0/0.0 -> Â· ',' software_extension_name : {',' ';'}

#11
software_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â· : {',' ';'}

#12
enable_directive -> 'enable' enable_extension_name Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#13
enable_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â· : {';'}

#14
translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#15
translation_unit -> translation_unit/0.0 translation_unit/0.1 Â· : {EndOfText}

#16
translation_unit/0.1 -> translation_unit/0.1/0 Â· : {EndOfText}

#17
translation_unit/0.1/0 -> global_decl Â· translation_unit/0.1/0 : {EndOfText}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'must_use' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
const_assert_statement -> Â· 'const_assert' expression : {';'}
function_decl -> Â· function_decl/0.0 function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_decl/0.0 -> Â· function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> Â· attribute function_decl/0.0/0 : {'fn'}
global_constant_decl -> Â· 'const' optionally_typed_ident '=' expression : {';'}
global_constant_decl -> Â· global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}
global_constant_decl/1.0 -> Â· global_constant_decl/1.0/0 : {'override'}
global_constant_decl/1.0/0 -> Â· attribute global_constant_decl/1.0/0 : {'override'}
global_decl -> Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· const_assert_statement ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· function_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· global_constant_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· global_variable_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· struct_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_decl -> Â· type_alias_decl ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
global_variable_decl -> Â· global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> Â· global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> Â· attribute global_variable_decl/0.0/0 : {'var'}
struct_decl -> Â· 'struct' ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
translation_unit/0.1/0 -> Â· global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> Â· 'alias' ident '=' type_specifier : {';'}

#18
global_decl -> ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#19
global_decl -> global_variable_decl Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#20
global_decl -> global_constant_decl Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#21
global_decl -> type_alias_decl Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#22
global_decl -> struct_decl Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#23
global_decl -> function_decl Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#24
global_decl -> const_assert_statement Â· ';' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#25
global_variable_decl -> global_variable_decl/0.0 Â· variable_decl global_variable_decl/0.2 : {';'}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}

#26
global_constant_decl -> 'const' Â· optionally_typed_ident '=' expression : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {':' '='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> Â· ident optionally_typed_ident/0.1 : {'='}

#27
global_constant_decl -> global_constant_decl/1.0 Â· 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}

#28
type_alias_decl -> 'alias' Â· ident '=' type_specifier : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {'='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#29
struct_decl -> 'struct' Â· ident struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
ident -> Â· ident_pattern_token _disambiguate_template : {'{'}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#30
function_decl -> function_decl/0.0 Â· function_header compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
function_header -> Â· 'fn' ident '(' function_header/0.3 ')' function_header/0.5 : {'{'}

#31
const_assert_statement -> 'const_assert' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#32
global_variable_decl/0.0 -> global_variable_decl/0.0/0 Â· : {'var'}

#33
global_constant_decl/1.0 -> global_constant_decl/1.0/0 Â· : {'override'}

#34
function_decl/0.0 -> function_decl/0.0/0 Â· : {'fn'}

#35
function_decl/0.0/0 -> attribute Â· function_decl/0.0/0 : {'fn'}
global_constant_decl/1.0/0 -> attribute Â· global_constant_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> attribute Â· global_variable_decl/0.0/0 : {'var'}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'const' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'must_use' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var'}
function_decl/0.0/0 -> Â· attribute function_decl/0.0/0 : {'fn'}
global_constant_decl/1.0/0 -> Â· attribute global_constant_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> Â· attribute global_variable_decl/0.0/0 : {'var'}

#36
attribute -> '@' Â· 'align' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'binding' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'builtin' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'compute' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'const' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'fragment' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'group' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'id' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'interpolate' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'interpolate' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'invariant' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'location' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'must_use' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'size' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'vertex' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'workgroup_size' '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' Â· 'workgroup_size' '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#37
attribute -> '@' 'align' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#38
attribute -> '@' 'binding' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#39
attribute -> '@' 'builtin' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#40
attribute -> '@' 'const' Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#41
attribute -> '@' 'group' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#42
attribute -> '@' 'id' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#43
attribute -> '@' 'interpolate' Â· '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#44
attribute -> '@' 'invariant' Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#45
attribute -> '@' 'location' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#46
attribute -> '@' 'must_use' Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#47
attribute -> '@' 'size' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#48
attribute -> '@' 'workgroup_size' Â· '(' expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' Â· '(' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' Â· '(' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#49
attribute -> '@' 'vertex' Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#50
attribute -> '@' 'fragment' Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#51
attribute -> '@' 'compute' Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#52
global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 Â· : {'var'}

#53
global_constant_decl/1.0/0 -> attribute global_constant_decl/1.0/0 Â· : {'override'}

#54
function_decl/0.0/0 -> attribute function_decl/0.0/0 Â· : {'fn'}

#55
const_assert_statement -> 'const_assert' expression Â· : {';'}

#56
expression -> relational_expression Â· : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> relational_expression Â· : {'&&'}
short_circuit_or_expression -> relational_expression Â· : {'||'}

#57
expression -> short_circuit_or_expression Â· '||' relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression Â· '||' relational_expression : {'||'}

#58
expression -> short_circuit_and_expression Â· '&&' relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression Â· '&&' relational_expression : {'&&'}

#59
expression -> bitwise_expression Â· : {')' ',' ':' ';' ']' '{'}

#60
relational_expression -> shift_expression Â· '!=' shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· '==' shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· _greater_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· _less_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
relational_expression -> shift_expression Â· _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
_greater_than -> Â· /\u200B_greater_than/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_greater_than_equal -> Â· /\u200B_greater_than_equal/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than -> Â· /\u200B_less_than/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_less_than_equal -> Â· /\u200B_less_than_equal/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#61
binary_and_expression -> binary_and_expression Â· '&' unary_expression : {'&'}
bitwise_expression -> binary_and_expression Â· '&' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#62
binary_or_expression -> binary_or_expression Â· '|' unary_expression : {'|'}
bitwise_expression -> binary_or_expression Â· '|' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#63
binary_xor_expression -> binary_xor_expression Â· '^' unary_expression : {'^'}
bitwise_expression -> binary_xor_expression Â· '^' unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#64
additive_expression -> additive_expression Â· additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> additive_expression Â· : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_operator -> Â· '+' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
additive_operator -> Â· '-' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#65
binary_and_expression -> unary_expression Â· : {'&'}
binary_or_expression -> unary_expression Â· : {'|'}
binary_xor_expression -> unary_expression Â· : {'^'}
multiplicative_expression -> unary_expression Â· : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression Â· _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression Â· _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
_shift_left -> Â· /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> Â· /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#66
additive_expression -> multiplicative_expression Â· : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression Â· multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> Â· '%' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> Â· '*' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> Â· '/' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#67
unary_expression -> singular_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#68
unary_expression -> '-' Â· unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#69
unary_expression -> '!' Â· unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#70
unary_expression -> '~' Â· unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#71
unary_expression -> '*' Â· unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#72
unary_expression -> '&' Â· unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#73
singular_expression -> primary_expression Â· singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
singular_expression/0.1 -> Â· component_or_swizzle_specifier : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#74
call_expression -> template_elaborated_ident Â· argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> template_elaborated_ident Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
argument_expression_list -> Â· '(' argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#75
primary_expression -> call_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#76
primary_expression -> literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#77
primary_expression -> paren_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#78
template_elaborated_ident -> ident Â· _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/ /\u200B_template_args_start/}

#79
literal -> int_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#80
literal -> float_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#81
literal -> bool_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#82
paren_expression -> '(' Â· expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')'}
expression -> Â· relational_expression : {')'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#83
ident -> ident_pattern_token Â· _disambiguate_template : {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}

#84
int_literal -> decimal_int_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#85
int_literal -> hex_int_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#86
float_literal -> decimal_float_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#87
float_literal -> hex_float_literal Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#88
bool_literal -> 'true' Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#89
bool_literal -> 'false' Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#90
ident_pattern_token -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â· : {/\u200B_disambiguate_template/}

#91
decimal_int_literal -> /0[iu]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#92
decimal_int_literal -> /[1-9][0-9]*[iu]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#93
hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#94
decimal_float_literal -> /0[fh]/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#95
decimal_float_literal -> /[1-9][0-9]*[fh]/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#96
decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#97
decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#98
decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#99
hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#100
hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#101
hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#102
function_decl -> function_decl/0.0 function_header Â· compound_statement : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#103
function_header -> 'fn' Â· ident '(' function_header/0.3 ')' function_header/0.5 : {'{'}
ident -> Â· ident_pattern_token _disambiguate_template : {'('}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#104
struct_decl -> 'struct' ident Â· struct_body_decl : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl -> Â· '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#105
type_alias_decl -> 'alias' ident Â· '=' type_specifier : {';'}

#106
global_constant_decl -> global_constant_decl/1.0 'override' Â· optionally_typed_ident global_constant_decl/1.3 : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {':' ';' '='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> Â· ident optionally_typed_ident/0.1 : {';' '='}

#107
global_constant_decl -> 'const' optionally_typed_ident Â· '=' expression : {';'}

#108
optionally_typed_ident -> ident Â· optionally_typed_ident/0.1 : {';' '='}
optionally_typed_ident/0.1 -> Â· ':' type_specifier : {';' '='}

#109
global_variable_decl -> global_variable_decl/0.0 variable_decl Â· global_variable_decl/0.2 : {';'}
global_variable_decl/0.2 -> Â· '=' expression : {';'}

#110
variable_decl -> 'var' Â· _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_template_args_start/}

#111
global_decl -> const_assert_statement ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#112
global_decl -> type_alias_decl ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#113
global_decl -> global_constant_decl ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#114
global_decl -> global_variable_decl ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#115
translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 Â· : {EndOfText}

#116
enable_directive -> 'enable' enable_extension_name ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#117
software_extension_list -> software_extension_name software_extension_list/0.1 Â· software_extension_list/0.2 : {';'}
software_extension_list/0.2 -> Â· ',' : {';'}

#118
software_extension_list/0.1 -> software_extension_list/0.1/0 Â· : {',' ';'}

#119
software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 Â· software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0 -> Â· software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 : {',' ';'}
software_extension_list/0.1/0/0.0 -> Â· ',' software_extension_name : {',' ';'}

#120
software_extension_list/0.1/0/0.0 -> ',' Â· software_extension_name : {',' ';'}
software_extension_name -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' ';'}

#121
requires_directive -> 'requires' software_extension_list ';' Â· : {';' '@' 'alias' 'const' 'const_assert' 'enable' 'fn' 'override' 'requires' 'struct' 'var' EndOfText}

#122
software_extension_list/0.1/0/0.0 -> ',' software_extension_name Â· : {',' ';'}

#123
software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 Â· : {',' ';'}

#124
software_extension_list -> software_extension_name software_extension_list/0.1 software_extension_list/0.2 Â· : {';'}

#125
software_extension_list/0.2 -> ',' Â· : {';'}

#126
variable_decl -> 'var' _disambiguate_template Â· variable_decl/0.2 optionally_typed_ident : {';' '='}
_template_args_start -> Â· /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_list -> Â· _template_args_start template_arg_comma_list _template_args_end : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_decl/0.2 -> Â· template_list : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#127
_disambiguate_template -> /\u200B_disambiguate_template/ Â· : {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_disambiguate_template/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/ /\u200B_template_args_start/}

#128
global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 Â· : {';'}

#129
global_variable_decl/0.2 -> '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#130
optionally_typed_ident -> ident optionally_typed_ident/0.1 Â· : {';' '='}

#131
optionally_typed_ident/0.1 -> ':' Â· type_specifier : {';' '='}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {';' '='}

#132
global_constant_decl -> 'const' optionally_typed_ident '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#133
global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident Â· global_constant_decl/1.3 : {';'}
global_constant_decl/1.3 -> Â· '=' expression : {';'}

#134
type_alias_decl -> 'alias' ident '=' Â· type_specifier : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {';'}

#135
struct_decl -> 'struct' ident struct_body_decl Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#136
struct_body_decl -> '{' Â· struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> Â· struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> Â· struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> Â· attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#137
function_header -> 'fn' ident Â· '(' function_header/0.3 ')' function_header/0.5 : {'{'}

#138
function_decl -> function_decl/0.0 function_header compound_statement Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#139
compound_statement -> '{' Â· compound_statement/0.1 '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.1 -> Â· compound_statement/0.1/0 : {'}'}
compound_statement/0.1/0 -> Â· statement compound_statement/0.1/0 : {'}'}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#140
ident -> ident_pattern_token _disambiguate_template Â· : {'(' ':' ';' '=' '{' /\u200B_disambiguate_template/}

#141
paren_expression -> '(' expression Â· ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#142
template_elaborated_ident -> ident _disambiguate_template Â· template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_start -> Â· /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_elaborated_ident/0.2 -> Â· template_list : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_list -> Â· _template_args_start template_arg_comma_list _template_args_end : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#143
call_expression -> template_elaborated_ident argument_expression_list Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#144
argument_expression_list -> '(' Â· argument_expression_list/0.1 ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
argument_expression_list/0.1 -> Â· expression_comma_list : {')'}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
expression_comma_list -> Â· expression expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#145
singular_expression -> primary_expression singular_expression/0.1 Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#146
singular_expression/0.1 -> component_or_swizzle_specifier Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#147
component_or_swizzle_specifier -> '[' Â· expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {']'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {']'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {']'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {']'}
expression -> Â· relational_expression : {']'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {']'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {']'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ']' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ']' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' '==' ']' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' ']' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#148
component_or_swizzle_specifier -> '.' Â· member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> '.' Â· swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
member_ident -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[rgba][rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
swizzle_name -> Â· '/[xyzw][xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#149
unary_expression -> '&' unary_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#150
unary_expression -> '*' unary_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#151
unary_expression -> '~' unary_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#152
unary_expression -> '!' unary_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#153
unary_expression -> '-' unary_expression Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#154
multiplicative_expression -> multiplicative_expression multiplicative_operator Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#155
multiplicative_operator -> '*' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#156
multiplicative_operator -> '/' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#157
multiplicative_operator -> '%' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#158
shift_expression -> unary_expression _shift_left Â· unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#159
shift_expression -> unary_expression _shift_right Â· unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '&&' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '&&' '(' ')' ',' '.' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#160
_shift_left -> /\u200B_shift_left/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#161
_shift_right -> /\u200B_shift_right/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#162
additive_expression -> additive_expression additive_operator Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#163
additive_operator -> '+' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#164
additive_operator -> '-' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#165
binary_xor_expression -> binary_xor_expression '^' Â· unary_expression : {'^'}
bitwise_expression -> binary_xor_expression '^' Â· unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> Â· bool_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> Â· float_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
literal -> Â· int_literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> Â· literal : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'(' ')' ',' '.' ':' ';' '[' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {')' ',' ':' ';' ']' '^' '{' /\u200B_template_args_end/}

#166
binary_or_expression -> binary_or_expression '|' Â· unary_expression : {'|'}
bitwise_expression -> binary_or_expression '|' Â· unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> Â· bool_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> Â· float_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
literal -> Â· int_literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> Â· literal : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'(' ')' ',' '.' ':' ';' '[' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {')' ',' ':' ';' ']' '{' '|' /\u200B_template_args_end/}

#167
binary_and_expression -> binary_and_expression '&' Â· unary_expression : {'&'}
bitwise_expression -> binary_and_expression '&' Â· unary_expression : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> Â· bool_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> Â· float_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
literal -> Â· int_literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> Â· literal : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'&' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'&' '(' ')' ',' '.' ':' ';' '[' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'&' ')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#168
relational_expression -> shift_expression _less_than Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#169
relational_expression -> shift_expression _greater_than Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#170
relational_expression -> shift_expression _less_than_equal Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#171
relational_expression -> shift_expression _greater_than_equal Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#172
relational_expression -> shift_expression '==' Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#173
relational_expression -> shift_expression '!=' Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '[' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||' /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#174
_less_than -> /\u200B_less_than/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#175
_greater_than -> /\u200B_greater_than/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#176
_less_than_equal -> /\u200B_less_than_equal/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#177
_greater_than_equal -> /\u200B_greater_than_equal/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#178
expression -> short_circuit_and_expression '&&' Â· relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' Â· relational_expression : {'&&'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#179
expression -> short_circuit_or_expression '||' Â· relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' Â· relational_expression : {'||'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
bool_literal -> Â· 'false' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· decimal_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#180
attribute -> '@' 'workgroup_size' '(' Â· expression ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' Â· expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#181
attribute -> '@' 'size' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#182
attribute -> '@' 'location' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#183
attribute -> '@' 'interpolate' '(' Â· expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#184
attribute -> '@' 'id' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#185
attribute -> '@' 'group' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#186
attribute -> '@' 'builtin' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#187
attribute -> '@' 'binding' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#188
attribute -> '@' 'align' '(' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#189
attribute -> '@' 'align' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#190
attribute -> '@' 'binding' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#191
attribute -> '@' 'builtin' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#192
attribute -> '@' 'group' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#193
attribute -> '@' 'id' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#194
attribute -> '@' 'interpolate' '(' expression Â· ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'interpolate' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#195
attribute -> '@' 'location' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#196
attribute -> '@' 'size' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#197
attribute -> '@' 'workgroup_size' '(' expression Â· ',' expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression Â· ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#198
expression -> short_circuit_or_expression '||' relational_expression Â· : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression Â· : {'||'}

#199
multiplicative_expression -> unary_expression Â· : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression Â· _shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> unary_expression Â· _shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
_shift_left -> Â· /\u200B_shift_left/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right -> Â· /\u200B_shift_right/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#200
expression -> short_circuit_and_expression '&&' relational_expression Â· : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression Â· : {'&&'}

#201
relational_expression -> shift_expression '!=' shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#202
relational_expression -> shift_expression '==' shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#203
relational_expression -> shift_expression _greater_than_equal shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#204
relational_expression -> shift_expression _less_than_equal shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#205
relational_expression -> shift_expression _greater_than shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#206
relational_expression -> shift_expression _less_than shift_expression Â· : {'&&' ')' ',' ':' ';' ']' '{' '||' /\u200B_template_args_end/}

#207
binary_and_expression -> binary_and_expression '&' unary_expression Â· : {'&'}
bitwise_expression -> binary_and_expression '&' unary_expression Â· : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#208
binary_or_expression -> binary_or_expression '|' unary_expression Â· : {'|'}
bitwise_expression -> binary_or_expression '|' unary_expression Â· : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#209
binary_xor_expression -> binary_xor_expression '^' unary_expression Â· : {'^'}
bitwise_expression -> binary_xor_expression '^' unary_expression Â· : {')' ',' ':' ';' ']' '{' /\u200B_template_args_end/}

#210
additive_expression -> additive_expression additive_operator multiplicative_expression Â· : {'!=' '&&' ')' '+' ',' '-' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> multiplicative_expression Â· multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_operator -> Â· '%' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> Â· '*' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
multiplicative_operator -> Â· '/' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#211
multiplicative_expression -> unary_expression Â· : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#212
shift_expression -> unary_expression _shift_right unary_expression Â· : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#213
shift_expression -> unary_expression _shift_left unary_expression Â· : {'!=' '&&' ')' ',' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#214
multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression Â· : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '==' ']' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}

#215
component_or_swizzle_specifier -> '.' member_ident Â· component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/1.2 -> Â· component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#216
component_or_swizzle_specifier -> '.' swizzle_name Â· component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/2.2 -> Â· component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#217
member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#218
swizzle_name -> '/[rgba]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#219
swizzle_name -> '/[rgba][rgba]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#220
swizzle_name -> '/[rgba][rgba][rgba]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#221
swizzle_name -> '/[rgba][rgba][rgba][rgba]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#222
swizzle_name -> '/[xyzw]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#223
swizzle_name -> '/[xyzw][xyzw]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#224
swizzle_name -> '/[xyzw][xyzw][xyzw]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#225
swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '=' '==' '[' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#226
component_or_swizzle_specifier -> '[' expression Â· ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#227
argument_expression_list -> '(' argument_expression_list/0.1 Â· ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#228
argument_expression_list/0.1 -> expression_comma_list Â· : {')'}

#229
expression_comma_list -> expression Â· expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
expression_comma_list/0.1 -> Â· expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> Â· expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> Â· ',' expression : {')' ','}

#230
template_elaborated_ident -> ident _disambiguate_template template_elaborated_ident/0.2 Â· : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#231
template_elaborated_ident/0.2 -> template_list Â· : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#232
template_list -> _template_args_start Â· template_arg_comma_list _template_args_end : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {',' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_arg_comma_list -> Â· template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 : {/\u200B_template_args_end/}
template_arg_expression -> Â· bitwise_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· short_circuit_and_expression '&&' relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· short_circuit_or_expression '||' relational_expression : {',' /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#233
_template_args_start -> /\u200B_template_args_start/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#234
paren_expression -> '(' expression ')' Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#235
compound_statement -> '{' compound_statement/0.1 Â· '}' : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#236
compound_statement/0.1 -> compound_statement/0.1/0 Â· : {'}'}

#237
compound_statement/0.1/0 -> statement Â· compound_statement/0.1/0 : {'}'}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement/0.1/0 -> Â· statement compound_statement/0.1/0 : {'}'}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#238
statement -> ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#239
statement -> return_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#240
statement -> if_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#241
statement -> switch_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#242
statement -> loop_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#243
statement -> for_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#244
statement -> while_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#245
statement -> func_call_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#246
statement -> variable_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#247
statement -> break_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#248
statement -> continue_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#249
statement -> 'discard' Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#250
statement -> variable_updating_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#251
statement -> compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#252
statement -> const_assert_statement Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#253
return_statement -> 'return' Â· return_statement/0.1 : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
return_statement/0.1 -> Â· expression : {';'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#254
if_statement -> if_clause Â· if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> Â· 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1 -> Â· if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1/0 -> Â· else_if_clause if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#255
switch_statement -> 'switch' Â· expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {'{'}
expression -> Â· relational_expression : {'{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#256
loop_statement -> 'loop' Â· '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#257
for_statement -> 'for' Â· '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#258
while_statement -> 'while' Â· expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {'{'}
expression -> Â· relational_expression : {'{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#259
func_call_statement -> template_elaborated_ident Â· argument_expression_list : {')' ';'}
argument_expression_list -> Â· '(' argument_expression_list/0.1 ')' : {')' ';'}

#260
variable_statement -> variable_decl Â· '=' expression : {';'}
variable_statement -> variable_decl Â· : {';'}

#261
variable_statement -> 'let' Â· optionally_typed_ident '=' expression : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {':' '='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> Â· ident optionally_typed_ident/0.1 : {'='}

#262
variable_statement -> 'const' Â· optionally_typed_ident '=' expression : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {':' '='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> Â· ident optionally_typed_ident/0.1 : {'='}

#263
break_statement -> 'break' Â· : {';'}

#264
continue_statement -> 'continue' Â· : {';'}

#265
variable_updating_statement -> assignment_statement Â· : {')' ';'}

#266
variable_updating_statement -> increment_statement Â· : {')' ';'}

#267
variable_updating_statement -> decrement_statement Â· : {')' ';'}

#268
if_clause -> 'if' Â· expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {'{'}
expression -> Â· relational_expression : {'{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#269
core_lhs_expression -> ident Â· _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> ident Â· _disambiguate_template template_elaborated_ident/0.2 : {'('}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {'%=' '&=' '(' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/ /\u200B_template_args_start/}

#270
assignment_statement -> lhs_expression Â· assignment_statement/0.1 expression : {')' ';'}
decrement_statement -> lhs_expression Â· '--' : {')' ';'}
increment_statement -> lhs_expression Â· '++' : {')' ';'}
_shift_left_assign -> Â· /\u200B_shift_left_assign/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
_shift_right_assign -> Â· /\u200B_shift_right_assign/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> Â· '=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
assignment_statement/0.1 -> Â· compound_assignment_operator : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '%=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '&=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '*=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '+=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '-=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '/=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '^=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· '|=' : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· _shift_left_assign : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
compound_assignment_operator -> Â· _shift_right_assign : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#271
assignment_statement -> '_' Â· '=' expression : {')' ';'}

#272
lhs_expression -> core_lhs_expression Â· lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> Â· '.' member_ident component_or_swizzle_specifier/1.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> Â· '.' swizzle_name component_or_swizzle_specifier/2.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
component_or_swizzle_specifier -> Â· '[' expression ']' component_or_swizzle_specifier/0.3 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression/0.1 -> Â· component_or_swizzle_specifier : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#273
lhs_expression -> '*' Â· lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#274
lhs_expression -> '&' Â· lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#275
core_lhs_expression -> '(' Â· lhs_expression ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· '(' lhs_expression ')' : {')' '.' '['}
core_lhs_expression -> Â· ident _disambiguate_template : {')' '.' '['}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
lhs_expression -> Â· '&' lhs_expression : {')'}
lhs_expression -> Â· '*' lhs_expression : {')'}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {')'}

#276
function_header -> 'fn' ident '(' Â· function_header/0.3 ')' function_header/0.5 : {'{'}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.3 -> Â· param_list : {')'}
param -> Â· param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> Â· param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> Â· attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list -> Â· param param_list/0.1 param_list/0.2 : {')'}

#277
struct_body_decl -> '{' struct_member Â· struct_body_decl/0.2 struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.2 -> Â· struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> Â· struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> Â· ',' struct_member : {',' '}'}

#278
struct_member -> struct_member/0.0 Â· member_ident ':' type_specifier : {',' '}'}
member_ident -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':'}

#279
struct_member/0.0 -> struct_member/0.0/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#280
struct_member/0.0/0 -> attribute Â· struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> Â· attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#281
type_alias_decl -> 'alias' ident '=' type_specifier Â· : {';'}

#282
type_specifier -> ident Â· _disambiguate_template template_elaborated_ident/0.2 : {')' ',' ';' '=' '}'}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {')' ',' ';' '=' '}' /\u200B_template_args_start/}

#283
global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 Â· : {';'}

#284
global_constant_decl/1.3 -> '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#285
global_constant_decl -> 'const' optionally_typed_ident '=' expression Â· : {';'}

#286
optionally_typed_ident/0.1 -> ':' type_specifier Â· : {';' '='}

#287
global_variable_decl/0.2 -> '=' expression Â· : {';'}

#288
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 Â· optionally_typed_ident : {';' '='}
ident -> Â· ident_pattern_token _disambiguate_template : {':' ';' '='}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
optionally_typed_ident -> Â· ident optionally_typed_ident/0.1 : {';' '='}

#289
variable_decl/0.2 -> template_list Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#290
variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident Â· : {';' '='}

#291
global_constant_decl/1.3 -> '=' expression Â· : {';'}

#292
type_specifier -> ident _disambiguate_template Â· template_elaborated_ident/0.2 : {')' ',' ';' '=' '}'}
_template_args_start -> Â· /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_elaborated_ident/0.2 -> Â· template_list : {')' ',' ';' '=' '}'}
template_list -> Â· _template_args_start template_arg_comma_list _template_args_end : {')' ',' ';' '=' '}'}

#293
struct_member/0.0/0 -> attribute struct_member/0.0/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#294
struct_member -> struct_member/0.0 member_ident Â· ':' type_specifier : {',' '}'}

#295
struct_body_decl -> '{' struct_member struct_body_decl/0.2 Â· struct_body_decl/0.3 '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}
struct_body_decl/0.3 -> Â· ',' : {'}'}

#296
struct_body_decl/0.2 -> struct_body_decl/0.2/0 Â· : {',' '}'}

#297
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 Â· struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> Â· struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> Â· ',' struct_member : {',' '}'}

#298
struct_body_decl/0.2/0/0.0 -> ',' Â· struct_member : {',' '}'}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member -> Â· struct_member/0.0 member_ident ':' type_specifier : {',' '}'}
struct_member/0.0 -> Â· struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_member/0.0/0 -> Â· attribute struct_member/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#299
function_header -> 'fn' ident '(' function_header/0.3 Â· ')' function_header/0.5 : {'{'}

#300
function_header/0.3 -> param_list Â· : {')'}

#301
param_list -> param Â· param_list/0.1 param_list/0.2 : {')'}
param_list/0.1 -> Â· param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> Â· param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> Â· ',' param : {')' ','}

#302
param -> param/0.0 Â· ident ':' type_specifier : {')' ','}
ident -> Â· ident_pattern_token _disambiguate_template : {':'}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}

#303
param/0.0 -> param/0.0/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#304
param/0.0/0 -> attribute Â· param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> Â· attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#305
core_lhs_expression -> '(' lhs_expression Â· ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#306
core_lhs_expression -> ident Â· _disambiguate_template : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
_disambiguate_template -> Â· /\u200B_disambiguate_template/ : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#307
lhs_expression -> '&' lhs_expression Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#308
lhs_expression -> '*' lhs_expression Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#309
lhs_expression -> core_lhs_expression lhs_expression/0.1 Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#310
lhs_expression/0.1 -> component_or_swizzle_specifier Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#311
assignment_statement -> '_' '=' Â· expression : {')' ';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ';'}
expression -> Â· relational_expression : {')' ';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#312
assignment_statement -> lhs_expression assignment_statement/0.1 Â· expression : {')' ';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ';'}
expression -> Â· relational_expression : {')' ';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#313
increment_statement -> lhs_expression '++' Â· : {')' ';'}

#314
decrement_statement -> lhs_expression '--' Â· : {')' ';'}

#315
assignment_statement/0.1 -> '=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#316
assignment_statement/0.1 -> compound_assignment_operator Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#317
compound_assignment_operator -> '+=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#318
compound_assignment_operator -> '-=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#319
compound_assignment_operator -> '*=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#320
compound_assignment_operator -> '/=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#321
compound_assignment_operator -> '%=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#322
compound_assignment_operator -> '&=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#323
compound_assignment_operator -> '|=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#324
compound_assignment_operator -> '^=' Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#325
compound_assignment_operator -> _shift_right_assign Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#326
compound_assignment_operator -> _shift_left_assign Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#327
_shift_right_assign -> /\u200B_shift_right_assign/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#328
_shift_left_assign -> /\u200B_shift_left_assign/ Â· : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}

#329
core_lhs_expression -> ident _disambiguate_template Â· : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> ident _disambiguate_template Â· template_elaborated_ident/0.2 : {'('}
_template_args_start -> Â· /\u200B_template_args_start/ : {'!' '&' '(' '*' '-' 'false' 'true' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[fh]/ /0[iu]?/ /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ /0[xX][0-9a-fA-F]+[iu]?/ /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ /[0-9]+[eE][+-]?[0-9]+[fh]?/ /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ /[1-9][0-9]*[fh]/ /[1-9][0-9]*[iu]?/}
template_elaborated_ident/0.2 -> Â· template_list : {'('}
template_list -> Â· _template_args_start template_arg_comma_list _template_args_end : {'('}

#330
if_clause -> 'if' expression Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#331
variable_statement -> 'const' optionally_typed_ident Â· '=' expression : {';'}

#332
variable_statement -> 'let' optionally_typed_ident Â· '=' expression : {';'}

#333
variable_statement -> variable_decl '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#334
func_call_statement -> template_elaborated_ident argument_expression_list Â· : {')' ';'}

#335
while_statement -> 'while' expression Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#336
for_statement -> 'for' '(' Â· for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_header -> Â· for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 : {')'}
for_header/0.0 -> Â· for_init : {';'}
for_init -> Â· func_call_statement : {';'}
for_init -> Â· variable_statement : {';'}
for_init -> Â· variable_updating_statement : {';'}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}

#337
loop_statement -> 'loop' '{' Â· loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.2 -> Â· loop_statement/0.2/0 : {'continuing' '}'}
loop_statement/0.2/0 -> Â· statement loop_statement/0.2/0 : {'continuing' '}'}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#338
switch_statement -> 'switch' expression Â· '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#339
if_statement -> if_clause if_statement/0.1 Â· if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_clause -> Â· 'else' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.2 -> Â· else_clause : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#340
if_statement/0.1 -> if_statement/0.1/0 Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#341
if_statement/0.1/0 -> else_if_clause Â· if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
else_if_clause -> Â· 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement/0.1/0 -> Â· else_if_clause if_statement/0.1/0 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#342
else_if_clause -> 'else' Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#343
return_statement -> 'return' return_statement/0.1 Â· : {';'}

#344
return_statement/0.1 -> expression Â· : {';'}

#345
statement -> const_assert_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#346
statement -> variable_updating_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#347
statement -> 'discard' ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#348
statement -> continue_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#349
statement -> break_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#350
statement -> variable_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#351
statement -> func_call_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#352
statement -> return_statement ';' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#353
compound_statement/0.1/0 -> statement compound_statement/0.1/0 Â· : {'}'}

#354
compound_statement -> '{' compound_statement/0.1 '}' Â· : {'&' '(' '*' ';' '@' '_' 'alias' 'break' 'case' 'const' 'const_assert' 'continue' 'continuing' 'default' 'discard' 'else' 'fn' 'for' 'if' 'let' 'loop' 'override' 'return' 'struct' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ EndOfText}

#355
template_list -> _template_args_start template_arg_comma_list Â· _template_args_end : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
_template_args_end -> Â· /\u200B_template_args_end/ : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#356
template_arg_comma_list -> template_arg_expression Â· template_arg_comma_list/0.1 template_arg_comma_list/0.2 : {/\u200B_template_args_end/}
template_arg_comma_list/0.1 -> Â· template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0 -> Â· template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0/0.0 -> Â· ',' template_arg_expression : {',' /\u200B_template_args_end/}

#357
short_circuit_and_expression -> relational_expression Â· : {'&&'}
short_circuit_or_expression -> relational_expression Â· : {'||'}
template_arg_expression -> relational_expression Â· : {',' /\u200B_template_args_end/}

#358
short_circuit_or_expression -> short_circuit_or_expression Â· '||' relational_expression : {'||'}
template_arg_expression -> short_circuit_or_expression Â· '||' relational_expression : {',' /\u200B_template_args_end/}

#359
short_circuit_and_expression -> short_circuit_and_expression Â· '&&' relational_expression : {'&&'}
template_arg_expression -> short_circuit_and_expression Â· '&&' relational_expression : {',' /\u200B_template_args_end/}

#360
template_arg_expression -> bitwise_expression Â· : {',' /\u200B_template_args_end/}

#361
expression_comma_list -> expression expression_comma_list/0.1 Â· expression_comma_list/0.2 : {')'}
expression_comma_list/0.2 -> Â· ',' : {')'}

#362
expression_comma_list/0.1 -> expression_comma_list/0.1/0 Â· : {')' ','}

#363
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 Â· expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> Â· expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> Â· ',' expression : {')' ','}

#364
expression_comma_list/0.1/0/0.0 -> ',' Â· expression : {')' ','}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#365
argument_expression_list -> '(' argument_expression_list/0.1 ')' Â· : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '==' '[' ']' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#366
component_or_swizzle_specifier -> '[' expression ']' Â· component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '.' swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier -> Â· '[' expression ']' component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}
component_or_swizzle_specifier/0.3 -> Â· component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#367
component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#368
component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#369
component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#370
component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#371
attribute -> '@' 'workgroup_size' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#372
attrib_end/0.0 -> ',' Â· : {')'}
attribute -> '@' 'workgroup_size' '(' expression ',' Â· expression ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression ',' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#373
attrib_end -> attrib_end/0.0 Â· ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#374
attribute -> '@' 'size' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#375
attrib_end/0.0 -> ',' Â· : {')'}

#376
attribute -> '@' 'location' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#377
attribute -> '@' 'interpolate' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#378
attrib_end/0.0 -> ',' Â· : {')'}
attribute -> '@' 'interpolate' '(' expression ',' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#379
attribute -> '@' 'id' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#380
attribute -> '@' 'group' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#381
attribute -> '@' 'builtin' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#382
attribute -> '@' 'binding' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#383
attribute -> '@' 'align' '(' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#384
attribute -> '@' 'interpolate' '(' expression ',' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#385
attrib_end -> attrib_end/0.0 ')' Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#386
attribute -> '@' 'workgroup_size' '(' expression ',' expression Â· ',' expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> '@' 'workgroup_size' '(' expression ',' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#387
component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#388
component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier Â· : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '=' '==' ']' '^' '^=' '{' '|' '|=' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_left_assign/ /\u200B_shift_right/ /\u200B_shift_right_assign/ /\u200B_template_args_end/}

#389
expression_comma_list/0.1/0/0.0 -> ',' expression Â· : {')' ','}

#390
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 Â· : {')' ','}

#391
expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 Â· : {')'}

#392
expression_comma_list/0.2 -> ',' Â· : {')'}

#393
short_circuit_and_expression -> short_circuit_and_expression '&&' Â· relational_expression : {'&&'}
template_arg_expression -> short_circuit_and_expression '&&' Â· relational_expression : {',' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ',' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ',' /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'!=' '&&' ',' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ',' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ',' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '(' '*' '+' ',' '-' '.' '/' '==' '[' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#394
short_circuit_or_expression -> short_circuit_or_expression '||' Â· relational_expression : {'||'}
template_arg_expression -> short_circuit_or_expression '||' Â· relational_expression : {',' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'!=' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '!=' shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '==' shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than shift_expression : {',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {',' '||' /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'!=' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '(' '*' '+' ',' '-' '.' '/' '==' '[' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#395
template_arg_comma_list -> template_arg_expression template_arg_comma_list/0.1 Â· template_arg_comma_list/0.2 : {/\u200B_template_args_end/}
template_arg_comma_list/0.2 -> Â· ',' : {/\u200B_template_args_end/}

#396
template_arg_comma_list/0.1 -> template_arg_comma_list/0.1/0 Â· : {',' /\u200B_template_args_end/}

#397
template_arg_comma_list/0.1/0 -> template_arg_comma_list/0.1/0/0.0 Â· template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0 -> Â· template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 : {',' /\u200B_template_args_end/}
template_arg_comma_list/0.1/0/0.0 -> Â· ',' template_arg_expression : {',' /\u200B_template_args_end/}

#398
template_arg_comma_list/0.1/0/0.0 -> ',' Â· template_arg_expression : {',' /\u200B_template_args_end/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {',' /\u200B_template_args_end/}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {',' /\u200B_template_args_end/}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ',' '||' /\u200B_template_args_end/}
shift_expression -> Â· additive_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_template_args_end/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
template_arg_expression -> Â· bitwise_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· short_circuit_and_expression '&&' relational_expression : {',' /\u200B_template_args_end/}
template_arg_expression -> Â· short_circuit_or_expression '||' relational_expression : {',' /\u200B_template_args_end/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#399
template_list -> _template_args_start template_arg_comma_list _template_args_end Â· : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#400
_template_args_end -> /\u200B_template_args_end/ Â· : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' ':' ';' '=' '==' '[' ']' '^' '{' '|' '||' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/ /\u200B_template_args_end/}

#401
else_if_clause -> 'else' 'if' Â· expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {'{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {'{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {'{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {'{'}
expression -> Â· relational_expression : {'{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {'{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {'{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#402
if_statement/0.1/0 -> else_if_clause if_statement/0.1/0 Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#403
if_statement -> if_clause if_statement/0.1 if_statement/0.2 Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#404
if_statement/0.2 -> else_clause Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#405
else_clause -> 'else' Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#406
switch_statement -> 'switch' expression '{' Â· switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
case_clause -> Â· 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> Â· 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body -> Â· case_clause : {'case' 'default' '}'}
switch_body -> Â· default_alone_clause : {'case' 'default' '}'}
switch_statement/0.3 -> Â· switch_statement/0.3/0 : {'}'}
switch_statement/0.3/0 -> Â· switch_body switch_statement/0.3/0 : {'}'}

#407
loop_statement -> 'loop' '{' loop_statement/0.2 Â· loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
continuing_statement -> Â· 'continuing' continuing_compound_statement : {'}'}
loop_statement/0.3 -> Â· continuing_statement : {'}'}

#408
loop_statement/0.2 -> loop_statement/0.2/0 Â· : {'continuing' '}'}

#409
loop_statement/0.2/0 -> statement Â· loop_statement/0.2/0 : {'continuing' '}'}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
loop_statement/0.2/0 -> Â· statement loop_statement/0.2/0 : {'continuing' '}'}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#410
for_statement -> 'for' '(' for_header Â· ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#411
for_header -> for_header/0.0 Â· ';' for_header/0.2 ';' for_header/0.4 : {')'}

#412
for_header/0.0 -> for_init Â· : {';'}

#413
for_init -> variable_statement Â· : {';'}

#414
for_init -> variable_updating_statement Â· : {';'}

#415
for_init -> func_call_statement Â· : {';'}

#416
while_statement -> 'while' expression compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#417
variable_statement -> variable_decl '=' expression Â· : {';'}

#418
variable_statement -> 'let' optionally_typed_ident '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#419
variable_statement -> 'const' optionally_typed_ident '=' Â· expression : {';'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#420
if_clause -> 'if' expression compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#421
assignment_statement -> lhs_expression assignment_statement/0.1 expression Â· : {')' ';'}

#422
assignment_statement -> '_' '=' expression Â· : {')' ';'}

#423
core_lhs_expression -> ident _disambiguate_template Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#424
core_lhs_expression -> '(' lhs_expression ')' Â· : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}

#425
param/0.0/0 -> attribute param/0.0/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#426
param -> param/0.0 ident Â· ':' type_specifier : {')' ','}

#427
param_list -> param param_list/0.1 Â· param_list/0.2 : {')'}
param_list/0.2 -> Â· ',' : {')'}

#428
param_list/0.1 -> param_list/0.1/0 Â· : {')' ','}

#429
param_list/0.1/0 -> param_list/0.1/0/0.0 Â· param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> Â· param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> Â· ',' param : {')' ','}

#430
param_list/0.1/0/0.0 -> ',' Â· param : {')' ','}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param -> Â· param/0.0 ident ':' type_specifier : {')' ','}
param/0.0 -> Â· param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param/0.0/0 -> Â· attribute param/0.0/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#431
function_header -> 'fn' ident '(' function_header/0.3 ')' Â· function_header/0.5 : {'{'}
function_header/0.5 -> Â· '->' function_header/0.5/0.1 template_elaborated_ident : {'{'}

#432
struct_body_decl/0.2/0/0.0 -> ',' struct_member Â· : {',' '}'}

#433
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 Â· : {',' '}'}

#434
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 Â· '}' : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#435
struct_body_decl/0.3 -> ',' Â· : {'}'}

#436
struct_member -> struct_member/0.0 member_ident ':' Â· type_specifier : {',' '}'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {',' '}'}

#437
type_specifier -> ident _disambiguate_template template_elaborated_ident/0.2 Â· : {')' ',' ';' '=' '}'}

#438
struct_member -> struct_member/0.0 member_ident ':' type_specifier Â· : {',' '}'}

#439
struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' Â· : {';' '@' 'alias' 'const' 'const_assert' 'fn' 'override' 'struct' 'var' EndOfText}

#440
function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 Â· : {'{'}

#441
function_header/0.5 -> '->' Â· function_header/0.5/0.1 template_elaborated_ident : {'{'}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1 -> Â· function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> Â· attribute function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#442
param_list/0.1/0/0.0 -> ',' param Â· : {')' ','}

#443
param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 Â· : {')' ','}

#444
param_list -> param param_list/0.1 param_list/0.2 Â· : {')'}

#445
param_list/0.2 -> ',' Â· : {')'}

#446
param -> param/0.0 ident ':' Â· type_specifier : {')' ','}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
type_specifier -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {')' ','}

#447
variable_statement -> 'const' optionally_typed_ident '=' expression Â· : {';'}

#448
variable_statement -> 'let' optionally_typed_ident '=' expression Â· : {';'}

#449
for_header -> for_header/0.0 ';' Â· for_header/0.2 ';' for_header/0.4 : {')'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
for_header/0.2 -> Â· expression : {';'}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#450
for_statement -> 'for' '(' for_header ')' Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#451
loop_statement/0.2/0 -> statement loop_statement/0.2/0 Â· : {'continuing' '}'}

#452
loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 Â· '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#453
loop_statement/0.3 -> continuing_statement Â· : {'}'}

#454
continuing_statement -> 'continuing' Â· continuing_compound_statement : {'}'}
continuing_compound_statement -> Â· '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' : {'}'}

#455
switch_statement -> 'switch' expression '{' switch_statement/0.3 Â· '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#456
switch_statement/0.3 -> switch_statement/0.3/0 Â· : {'}'}

#457
switch_statement/0.3/0 -> switch_body Â· switch_statement/0.3/0 : {'}'}
case_clause -> Â· 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> Â· 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body -> Â· case_clause : {'case' 'default' '}'}
switch_body -> Â· default_alone_clause : {'case' 'default' '}'}
switch_statement/0.3/0 -> Â· switch_body switch_statement/0.3/0 : {'}'}

#458
switch_body -> case_clause Â· : {'case' 'default' '}'}

#459
switch_body -> default_alone_clause Â· : {'case' 'default' '}'}

#460
case_clause -> 'case' Â· case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {',' ':' '{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {',' ':' '{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {',' ':' '{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
case_selector -> Â· 'default' : {',' ':' '{'}
case_selector -> Â· expression : {',' ':' '{'}
case_selectors -> Â· case_selector case_selectors/0.1 case_selectors/0.2 : {':' '{'}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {',' ':' '{'}
expression -> Â· relational_expression : {',' ':' '{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {',' ':' '{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {',' ':' '{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#461
default_alone_clause -> 'default' Â· default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
default_alone_clause/0.1 -> Â· ':' : {'{'}

#462
else_clause -> 'else' compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#463
else_if_clause -> 'else' 'if' expression Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#464
template_arg_comma_list/0.1/0/0.0 -> ',' template_arg_expression Â· : {',' /\u200B_template_args_end/}

#465
template_arg_comma_list/0.1/0 -> template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 Â· : {',' /\u200B_template_args_end/}

#466
template_arg_comma_list -> template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 Â· : {/\u200B_template_args_end/}

#467
template_arg_comma_list/0.2 -> ',' Â· : {/\u200B_template_args_end/}

#468
short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression Â· : {'||'}
template_arg_expression -> short_circuit_or_expression '||' relational_expression Â· : {',' /\u200B_template_args_end/}

#469
short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression Â· : {'&&'}
template_arg_expression -> short_circuit_and_expression '&&' relational_expression Â· : {',' /\u200B_template_args_end/}

#470
attribute -> '@' 'workgroup_size' '(' expression ',' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#471
attrib_end/0.0 -> ',' Â· : {')'}
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' Â· expression attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {')' ','}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {')' ','}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {')' ','}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {')' ','}
expression -> Â· relational_expression : {')' ','}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {')' ','}
expression -> Â· short_circuit_or_expression '||' relational_expression : {')' ','}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ')' ',' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' ')' '*' '+' ',' '-' '.' '/' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#472
attribute -> '@' 'interpolate' '(' expression ',' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#473
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression Â· attrib_end : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end -> Â· attrib_end/0.0 ')' : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attrib_end/0.0 -> Â· ',' : {')'}

#474
else_if_clause -> 'else' 'if' expression compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#475
default_alone_clause -> 'default' default_alone_clause/0.1 Â· compound_statement : {'case' 'default' '}'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'case' 'default' '}'}

#476
default_alone_clause/0.1 -> ':' Â· : {'{'}

#477
case_clause -> 'case' case_selectors Â· case_clause/0.2 compound_statement : {'case' 'default' '}'}
case_clause/0.2 -> Â· ':' : {'{'}

#478
case_selectors -> case_selector Â· case_selectors/0.1 case_selectors/0.2 : {':' '{'}
case_selectors/0.1 -> Â· case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0 -> Â· case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0/0.0 -> Â· ',' case_selector : {',' ':' '{'}

#479
case_selector -> 'default' Â· : {',' ':' '{'}

#480
case_selector -> expression Â· : {',' ':' '{'}

#481
switch_statement/0.3/0 -> switch_body switch_statement/0.3/0 Â· : {'}'}

#482
switch_statement -> 'switch' expression '{' switch_statement/0.3 '}' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#483
continuing_statement -> 'continuing' continuing_compound_statement Â· : {'}'}

#484
continuing_compound_statement -> '{' Â· continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' : {'}'}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
continuing_compound_statement/0.1 -> Â· continuing_compound_statement/0.1/0 : {'break' '}'}
continuing_compound_statement/0.1/0 -> Â· statement continuing_compound_statement/0.1/0 : {'break' '}'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#485
loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#486
for_statement -> 'for' '(' for_header ')' compound_statement Â· : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'continuing' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#487
for_header -> for_header/0.0 ';' for_header/0.2 Â· ';' for_header/0.4 : {')'}

#488
for_header/0.2 -> expression Â· : {';'}

#489
param -> param/0.0 ident ':' type_specifier Â· : {')' ','}

#490
function_header/0.5 -> '->' function_header/0.5/0.1 Â· template_elaborated_ident : {'{'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'{'}

#491
function_header/0.5/0.1 -> function_header/0.5/0.1/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#492
function_header/0.5/0.1/0 -> attribute Â· function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'align' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'binding' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'builtin' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'compute' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'const' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'fragment' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'group' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'id' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'interpolate' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'invariant' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'location' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'must_use' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'vertex' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression ',' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
attribute -> Â· '@' 'workgroup_size' '(' expression attrib_end : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
function_header/0.5/0.1/0 -> Â· attribute function_header/0.5/0.1/0 : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#493
function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 Â· : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#494
function_header/0.5 -> '->' function_header/0.5/0.1 template_elaborated_ident Â· : {'{'}

#495
for_header -> for_header/0.0 ';' for_header/0.2 ';' Â· for_header/0.4 : {')'}
assignment_statement -> Â· '_' '=' expression : {')'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {')'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {')'}
for_header/0.4 -> Â· for_update : {')'}
for_update -> Â· func_call_statement : {')'}
for_update -> Â· variable_updating_statement : {')'}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {')'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
increment_statement -> Â· lhs_expression '++' : {')'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_updating_statement -> Â· assignment_statement : {')'}
variable_updating_statement -> Â· decrement_statement : {')'}
variable_updating_statement -> Â· increment_statement : {')'}

#496
continuing_compound_statement -> '{' continuing_compound_statement/0.1 Â· continuing_compound_statement/0.2 '}' : {'}'}
break_if_statement -> Â· 'break' 'if' expression ';' : {'}'}
continuing_compound_statement/0.2 -> Â· break_if_statement : {'}'}

#497
continuing_compound_statement/0.1 -> continuing_compound_statement/0.1/0 Â· : {'break' '}'}

#498
continuing_compound_statement/0.1/0 -> statement Â· continuing_compound_statement/0.1/0 : {'break' '}'}
assignment_statement -> Â· '_' '=' expression : {';'}
assignment_statement -> Â· lhs_expression assignment_statement/0.1 expression : {';'}
break_statement -> Â· 'break' : {';'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
const_assert_statement -> Â· 'const_assert' expression : {';'}
continue_statement -> Â· 'continue' : {';'}
continuing_compound_statement/0.1/0 -> Â· statement continuing_compound_statement/0.1/0 : {'break' '}'}
core_lhs_expression -> Â· '(' lhs_expression ')' : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
core_lhs_expression -> Â· ident _disambiguate_template : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '=' '[' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
decrement_statement -> Â· lhs_expression '--' : {';'}
for_statement -> Â· 'for' '(' for_header ')' compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
func_call_statement -> Â· template_elaborated_ident argument_expression_list : {';'}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
if_clause -> Â· 'if' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'else' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
if_statement -> Â· if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
increment_statement -> Â· lhs_expression '++' : {';'}
lhs_expression -> Â· '&' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· '*' lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
lhs_expression -> Â· core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '=' '^=' '|=' /\u200B_shift_left_assign/ /\u200B_shift_right_assign/}
loop_statement -> Â· 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
return_statement -> Â· 'return' return_statement/0.1 : {';'}
statement -> Â· ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· 'discard' ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· break_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· const_assert_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· continue_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· for_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· func_call_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· if_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· loop_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· return_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· switch_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· variable_updating_statement ';' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
statement -> Â· while_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
switch_statement -> Â· 'switch' expression '{' switch_statement/0.3 '}' : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'('}
variable_decl -> Â· 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident : {';' '='}
variable_statement -> Â· 'const' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· 'let' optionally_typed_ident '=' expression : {';'}
variable_statement -> Â· variable_decl '=' expression : {';'}
variable_statement -> Â· variable_decl : {';'}
variable_updating_statement -> Â· assignment_statement : {';'}
variable_updating_statement -> Â· decrement_statement : {';'}
variable_updating_statement -> Â· increment_statement : {';'}
while_statement -> Â· 'while' expression compound_statement : {'&' '(' '*' ';' '_' 'break' 'const' 'const_assert' 'continue' 'discard' 'for' 'if' 'let' 'loop' 'return' 'switch' 'var' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#499
case_selectors -> case_selector case_selectors/0.1 Â· case_selectors/0.2 : {':' '{'}
case_selectors/0.2 -> Â· ',' : {':' '{'}

#500
case_selectors/0.1 -> case_selectors/0.1/0 Â· : {',' ':' '{'}

#501
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 Â· case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0 -> Â· case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0/0.0 -> Â· ',' case_selector : {',' ':' '{'}

#502
case_selectors/0.1/0/0.0 -> ',' Â· case_selector : {',' ':' '{'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {',' ':' '{'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {',' ':' '{'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {',' ':' '{'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
case_selector -> Â· 'default' : {',' ':' '{'}
case_selector -> Â· expression : {',' ':' '{'}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {',' ':' '{'}
expression -> Â· relational_expression : {',' ':' '{'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {',' ':' '{'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {',' ':' '{'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ',' ':' '==' '{' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' ',' '-' '.' '/' ':' '==' '[' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '==' '^' '{' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#503
case_clause -> 'case' case_selectors case_clause/0.2 Â· compound_statement : {'case' 'default' '}'}
compound_statement -> Â· '{' compound_statement/0.1 '}' : {'case' 'default' '}'}

#504
case_clause/0.2 -> ':' Â· : {'{'}

#505
default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement Â· : {'case' 'default' '}'}

#506
attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end Â· : {'@' 'fn' 'override' 'var' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#507
case_clause -> 'case' case_selectors case_clause/0.2 compound_statement Â· : {'case' 'default' '}'}

#508
case_selectors/0.1/0/0.0 -> ',' case_selector Â· : {',' ':' '{'}

#509
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 Â· : {',' ':' '{'}

#510
case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 Â· : {':' '{'}

#511
case_selectors/0.2 -> ',' Â· : {':' '{'}

#512
continuing_compound_statement/0.1/0 -> statement continuing_compound_statement/0.1/0 Â· : {'break' '}'}

#513
continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 Â· '}' : {'}'}

#514
continuing_compound_statement/0.2 -> break_if_statement Â· : {'}'}

#515
break_if_statement -> 'break' Â· 'if' expression ';' : {'}'}

#516
for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 Â· : {')'}

#517
for_header/0.4 -> for_update Â· : {')'}

#518
for_update -> variable_updating_statement Â· : {')'}

#519
for_update -> func_call_statement Â· : {')'}

#520
break_if_statement -> 'break' 'if' Â· expression ';' : {'}'}
additive_expression -> Â· additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
additive_expression -> Â· multiplicative_expression : {'!=' '&&' '+' '-' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
binary_and_expression -> Â· binary_and_expression '&' unary_expression : {'&'}
binary_and_expression -> Â· unary_expression : {'&'}
binary_or_expression -> Â· binary_or_expression '|' unary_expression : {'|'}
binary_or_expression -> Â· unary_expression : {'|'}
binary_xor_expression -> Â· binary_xor_expression '^' unary_expression : {'^'}
binary_xor_expression -> Â· unary_expression : {'^'}
bitwise_expression -> Â· binary_and_expression '&' unary_expression : {';'}
bitwise_expression -> Â· binary_or_expression '|' unary_expression : {';'}
bitwise_expression -> Â· binary_xor_expression '^' unary_expression : {';'}
bool_literal -> Â· 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
bool_literal -> Â· 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
call_expression -> Â· template_elaborated_ident argument_expression_list : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_float_literal -> Â· /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
decimal_int_literal -> Â· /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
expression -> Â· bitwise_expression : {';'}
expression -> Â· relational_expression : {';'}
expression -> Â· short_circuit_and_expression '&&' relational_expression : {';'}
expression -> Â· short_circuit_or_expression '||' relational_expression : {';'}
float_literal -> Â· decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
float_literal -> Â· hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_float_literal -> Â· /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
hex_int_literal -> Â· /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
ident -> Â· ident_pattern_token _disambiguate_template : {/\u200B_disambiguate_template/}
ident_pattern_token -> Â· /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {/\u200B_disambiguate_template/}
int_literal -> Â· decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
int_literal -> Â· hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
literal -> Â· int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
multiplicative_expression -> Â· multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
multiplicative_expression -> Â· unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
paren_expression -> Â· '(' expression ')' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· call_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
primary_expression -> Â· template_elaborated_ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
relational_expression -> Â· shift_expression '!=' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression '==' shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than shift_expression : {'&&' ';' '||'}
relational_expression -> Â· shift_expression _less_than_equal shift_expression : {'&&' ';' '||'}
shift_expression -> Â· additive_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_left unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
shift_expression -> Â· unary_expression _shift_right unary_expression : {'!=' '&&' ';' '==' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/}
short_circuit_and_expression -> Â· relational_expression : {'&&'}
short_circuit_and_expression -> Â· short_circuit_and_expression '&&' relational_expression : {'&&'}
short_circuit_or_expression -> Â· relational_expression : {'||'}
short_circuit_or_expression -> Â· short_circuit_or_expression '||' relational_expression : {'||'}
singular_expression -> Â· primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
template_elaborated_ident -> Â· ident _disambiguate_template template_elaborated_ident/0.2 : {'!=' '%' '&&' '&' '(' '*' '+' '-' '.' '/' ';' '==' '[' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '!' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '&' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '*' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '-' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· '~' unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}
unary_expression -> Â· singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '==' '^' '|' '||' /\u200B_greater_than/ /\u200B_greater_than_equal/ /\u200B_less_than/ /\u200B_less_than_equal/ /\u200B_shift_left/ /\u200B_shift_right/}

#521
continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' Â· : {'}'}

#522
break_if_statement -> 'break' 'if' expression Â· ';' : {'}'}

#523
break_if_statement -> 'break' 'if' expression ';' Â· : {'}'}


=Reductions:
r#0 translation_unit/0.0 -> translation_unit/0.0/0 Â·
r#1 global_directive -> enable_directive Â·
r#2 global_directive -> requires_directive Â·
r#3 software_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â·
r#4 enable_extension_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â·
r#5 translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 Â·
r#6 translation_unit -> translation_unit/0.0 translation_unit/0.1 Â·
r#7 translation_unit/0.1 -> translation_unit/0.1/0 Â·
r#8 global_decl -> ';' Â·
r#9 global_decl -> struct_decl Â·
r#10 global_decl -> function_decl Â·
r#11 global_variable_decl/0.0 -> global_variable_decl/0.0/0 Â·
r#12 global_constant_decl/1.0 -> global_constant_decl/1.0/0 Â·
r#13 function_decl/0.0 -> function_decl/0.0/0 Â·
r#14 attribute -> '@' 'const' Â·
r#15 attribute -> '@' 'invariant' Â·
r#16 attribute -> '@' 'must_use' Â·
r#17 attribute -> '@' 'vertex' Â·
r#18 attribute -> '@' 'fragment' Â·
r#19 attribute -> '@' 'compute' Â·
r#20 global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 Â·
r#21 global_constant_decl/1.0/0 -> attribute global_constant_decl/1.0/0 Â·
r#22 function_decl/0.0/0 -> attribute function_decl/0.0/0 Â·
r#23 const_assert_statement -> 'const_assert' expression Â·
r#24 expression -> relational_expression Â·
r#25 short_circuit_or_expression -> relational_expression Â·
r#26 short_circuit_and_expression -> relational_expression Â·
r#27 expression -> bitwise_expression Â·
r#28 relational_expression -> shift_expression Â·
r#29 shift_expression -> additive_expression Â·
r#30 binary_and_expression -> unary_expression Â·
r#31 binary_or_expression -> unary_expression Â·
r#32 binary_xor_expression -> unary_expression Â·
r#33 multiplicative_expression -> unary_expression Â·
r#34 additive_expression -> multiplicative_expression Â·
r#35 unary_expression -> singular_expression Â·
r#36 primary_expression -> template_elaborated_ident Â·
r#37 primary_expression -> call_expression Â·
r#38 primary_expression -> literal Â·
r#39 primary_expression -> paren_expression Â·
r#40 literal -> int_literal Â·
r#41 literal -> float_literal Â·
r#42 literal -> bool_literal Â·
r#43 int_literal -> decimal_int_literal Â·
r#44 int_literal -> hex_int_literal Â·
r#45 float_literal -> decimal_float_literal Â·
r#46 float_literal -> hex_float_literal Â·
r#47 bool_literal -> 'true' Â·
r#48 bool_literal -> 'false' Â·
r#49 ident_pattern_token -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â·
r#50 decimal_int_literal -> /0[iu]?/ Â·
r#51 decimal_int_literal -> /[1-9][0-9]*[iu]?/ Â·
r#52 hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ Â·
r#53 decimal_float_literal -> /0[fh]/ Â·
r#54 decimal_float_literal -> /[1-9][0-9]*[fh]/ Â·
r#55 decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ Â·
r#56 decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ Â·
r#57 decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ Â·
r#58 hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ Â·
r#59 hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ Â·
r#60 hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ Â·
r#61 global_decl -> const_assert_statement ';' Â·
r#62 global_decl -> type_alias_decl ';' Â·
r#63 global_decl -> global_constant_decl ';' Â·
r#64 global_decl -> global_variable_decl ';' Â·
r#65 translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 Â·
r#66 enable_directive -> 'enable' enable_extension_name ';' Â·
r#67 software_extension_list/0.1 -> software_extension_list/0.1/0 Â·
r#68 requires_directive -> 'requires' software_extension_list ';' Â·
r#69 software_extension_list/0.1/0/0.0 -> ',' software_extension_name Â·
r#70 software_extension_list/0.1/0 -> software_extension_list/0.1/0/0.0 software_extension_list/0.1/0 Â·
r#71 software_extension_list -> software_extension_name software_extension_list/0.1 software_extension_list/0.2 Â·
r#72 software_extension_list/0.2 -> ',' Â·
r#73 _disambiguate_template -> /\u200B_disambiguate_template/ Â·
r#74 global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 Â·
r#75 optionally_typed_ident -> ident optionally_typed_ident/0.1 Â·
r#76 struct_decl -> 'struct' ident struct_body_decl Â·
r#77 function_decl -> function_decl/0.0 function_header compound_statement Â·
r#78 ident -> ident_pattern_token _disambiguate_template Â·
r#79 call_expression -> template_elaborated_ident argument_expression_list Â·
r#80 singular_expression -> primary_expression singular_expression/0.1 Â·
r#81 singular_expression/0.1 -> component_or_swizzle_specifier Â·
r#82 unary_expression -> '&' unary_expression Â·
r#83 unary_expression -> '*' unary_expression Â·
r#84 unary_expression -> '~' unary_expression Â·
r#85 unary_expression -> '!' unary_expression Â·
r#86 unary_expression -> '-' unary_expression Â·
r#87 multiplicative_operator -> '*' Â·
r#88 multiplicative_operator -> '/' Â·
r#89 multiplicative_operator -> '%' Â·
r#90 _shift_left -> /\u200B_shift_left/ Â·
r#91 _shift_right -> /\u200B_shift_right/ Â·
r#92 additive_operator -> '+' Â·
r#93 additive_operator -> '-' Â·
r#94 _less_than -> /\u200B_less_than/ Â·
r#95 _greater_than -> /\u200B_greater_than/ Â·
r#96 _less_than_equal -> /\u200B_less_than_equal/ Â·
r#97 _greater_than_equal -> /\u200B_greater_than_equal/ Â·
r#98 expression -> short_circuit_or_expression '||' relational_expression Â·
r#99 short_circuit_or_expression -> short_circuit_or_expression '||' relational_expression Â·
r#100 expression -> short_circuit_and_expression '&&' relational_expression Â·
r#101 short_circuit_and_expression -> short_circuit_and_expression '&&' relational_expression Â·
r#102 relational_expression -> shift_expression '!=' shift_expression Â·
r#103 relational_expression -> shift_expression '==' shift_expression Â·
r#104 relational_expression -> shift_expression _greater_than_equal shift_expression Â·
r#105 relational_expression -> shift_expression _less_than_equal shift_expression Â·
r#106 relational_expression -> shift_expression _greater_than shift_expression Â·
r#107 relational_expression -> shift_expression _less_than shift_expression Â·
r#108 bitwise_expression -> binary_and_expression '&' unary_expression Â·
r#109 binary_and_expression -> binary_and_expression '&' unary_expression Â·
r#110 bitwise_expression -> binary_or_expression '|' unary_expression Â·
r#111 binary_or_expression -> binary_or_expression '|' unary_expression Â·
r#112 bitwise_expression -> binary_xor_expression '^' unary_expression Â·
r#113 binary_xor_expression -> binary_xor_expression '^' unary_expression Â·
r#114 additive_expression -> additive_expression additive_operator multiplicative_expression Â·
r#115 shift_expression -> unary_expression _shift_right unary_expression Â·
r#116 shift_expression -> unary_expression _shift_left unary_expression Â·
r#117 multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression Â·
r#118 member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ Â·
r#119 swizzle_name -> '/[rgba]/' Â·
r#120 swizzle_name -> '/[rgba][rgba]/' Â·
r#121 swizzle_name -> '/[rgba][rgba][rgba]/' Â·
r#122 swizzle_name -> '/[rgba][rgba][rgba][rgba]/' Â·
r#123 swizzle_name -> '/[xyzw]/' Â·
r#124 swizzle_name -> '/[xyzw][xyzw]/' Â·
r#125 swizzle_name -> '/[xyzw][xyzw][xyzw]/' Â·
r#126 swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' Â·
r#127 argument_expression_list/0.1 -> expression_comma_list Â·
r#128 template_elaborated_ident -> ident _disambiguate_template template_elaborated_ident/0.2 Â·
r#129 template_elaborated_ident/0.2 -> template_list Â·
r#130 _template_args_start -> /\u200B_template_args_start/ Â·
r#131 paren_expression -> '(' expression ')' Â·
r#132 compound_statement/0.1 -> compound_statement/0.1/0 Â·
r#133 statement -> ';' Â·
r#134 statement -> if_statement Â·
r#135 statement -> switch_statement Â·
r#136 statement -> loop_statement Â·
r#137 statement -> for_statement Â·
r#138 statement -> while_statement Â·
r#139 statement -> compound_statement Â·
r#140 variable_statement -> variable_decl Â·
r#141 break_statement -> 'break' Â·
r#142 continue_statement -> 'continue' Â·
r#143 variable_updating_statement -> assignment_statement Â·
r#144 variable_updating_statement -> increment_statement Â·
r#145 variable_updating_statement -> decrement_statement Â·
r#146 struct_member/0.0 -> struct_member/0.0/0 Â·
r#147 type_alias_decl -> 'alias' ident '=' type_specifier Â·
r#148 global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 Â·
r#149 global_constant_decl -> 'const' optionally_typed_ident '=' expression Â·
r#150 optionally_typed_ident/0.1 -> ':' type_specifier Â·
r#151 global_variable_decl/0.2 -> '=' expression Â·
r#152 variable_decl/0.2 -> template_list Â·
r#153 variable_decl -> 'var' _disambiguate_template variable_decl/0.2 optionally_typed_ident Â·
r#154 global_constant_decl/1.3 -> '=' expression Â·
r#155 struct_member/0.0/0 -> attribute struct_member/0.0/0 Â·
r#156 struct_body_decl/0.2 -> struct_body_decl/0.2/0 Â·
r#157 function_header/0.3 -> param_list Â·
r#158 param/0.0 -> param/0.0/0 Â·
r#159 lhs_expression -> '&' lhs_expression Â·
r#160 lhs_expression -> '*' lhs_expression Â·
r#161 lhs_expression -> core_lhs_expression lhs_expression/0.1 Â·
r#162 lhs_expression/0.1 -> component_or_swizzle_specifier Â·
r#163 increment_statement -> lhs_expression '++' Â·
r#164 decrement_statement -> lhs_expression '--' Â·
r#165 assignment_statement/0.1 -> '=' Â·
r#166 assignment_statement/0.1 -> compound_assignment_operator Â·
r#167 compound_assignment_operator -> '+=' Â·
r#168 compound_assignment_operator -> '-=' Â·
r#169 compound_assignment_operator -> '*=' Â·
r#170 compound_assignment_operator -> '/=' Â·
r#171 compound_assignment_operator -> '%=' Â·
r#172 compound_assignment_operator -> '&=' Â·
r#173 compound_assignment_operator -> '|=' Â·
r#174 compound_assignment_operator -> '^=' Â·
r#175 compound_assignment_operator -> _shift_right_assign Â·
r#176 compound_assignment_operator -> _shift_left_assign Â·
r#177 _shift_right_assign -> /\u200B_shift_right_assign/ Â·
r#178 _shift_left_assign -> /\u200B_shift_left_assign/ Â·
r#179 core_lhs_expression -> ident _disambiguate_template Â·
r#180 func_call_statement -> template_elaborated_ident argument_expression_list Â·
r#181 if_statement/0.1 -> if_statement/0.1/0 Â·
r#182 return_statement -> 'return' return_statement/0.1 Â·
r#183 return_statement/0.1 -> expression Â·
r#184 statement -> const_assert_statement ';' Â·
r#185 statement -> variable_updating_statement ';' Â·
r#186 statement -> 'discard' ';' Â·
r#187 statement -> continue_statement ';' Â·
r#188 statement -> break_statement ';' Â·
r#189 statement -> variable_statement ';' Â·
r#190 statement -> func_call_statement ';' Â·
r#191 statement -> return_statement ';' Â·
r#192 compound_statement/0.1/0 -> statement compound_statement/0.1/0 Â·
r#193 compound_statement -> '{' compound_statement/0.1 '}' Â·
r#194 template_arg_expression -> relational_expression Â·
r#195 template_arg_expression -> bitwise_expression Â·
r#196 expression_comma_list/0.1 -> expression_comma_list/0.1/0 Â·
r#197 argument_expression_list -> '(' argument_expression_list/0.1 ')' Â·
r#198 component_or_swizzle_specifier -> '.' swizzle_name component_or_swizzle_specifier/2.2 Â·
r#199 component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier Â·
r#200 component_or_swizzle_specifier -> '.' member_ident component_or_swizzle_specifier/1.2 Â·
r#201 component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier Â·
r#202 attribute -> '@' 'workgroup_size' '(' expression attrib_end Â·
r#203 attrib_end/0.0 -> ',' Â·
r#204 attribute -> '@' 'size' '(' expression attrib_end Â·
r#205 attribute -> '@' 'location' '(' expression attrib_end Â·
r#206 attribute -> '@' 'interpolate' '(' expression attrib_end Â·
r#207 attribute -> '@' 'id' '(' expression attrib_end Â·
r#208 attribute -> '@' 'group' '(' expression attrib_end Â·
r#209 attribute -> '@' 'builtin' '(' expression attrib_end Â·
r#210 attribute -> '@' 'binding' '(' expression attrib_end Â·
r#211 attribute -> '@' 'align' '(' expression attrib_end Â·
r#212 attrib_end -> attrib_end/0.0 ')' Â·
r#213 component_or_swizzle_specifier -> '[' expression ']' component_or_swizzle_specifier/0.3 Â·
r#214 component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier Â·
r#215 expression_comma_list/0.1/0/0.0 -> ',' expression Â·
r#216 expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 Â·
r#217 expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 Â·
r#218 expression_comma_list/0.2 -> ',' Â·
r#219 template_arg_comma_list/0.1 -> template_arg_comma_list/0.1/0 Â·
r#220 template_list -> _template_args_start template_arg_comma_list _template_args_end Â·
r#221 _template_args_end -> /\u200B_template_args_end/ Â·
r#222 if_statement/0.1/0 -> else_if_clause if_statement/0.1/0 Â·
r#223 if_statement -> if_clause if_statement/0.1 if_statement/0.2 Â·
r#224 if_statement/0.2 -> else_clause Â·
r#225 loop_statement/0.2 -> loop_statement/0.2/0 Â·
r#226 for_header/0.0 -> for_init Â·
r#227 for_init -> variable_statement Â·
r#228 for_init -> variable_updating_statement Â·
r#229 for_init -> func_call_statement Â·
r#230 while_statement -> 'while' expression compound_statement Â·
r#231 variable_statement -> variable_decl '=' expression Â·
r#232 if_clause -> 'if' expression compound_statement Â·
r#233 assignment_statement -> lhs_expression assignment_statement/0.1 expression Â·
r#234 assignment_statement -> '_' '=' expression Â·
r#235 core_lhs_expression -> '(' lhs_expression ')' Â·
r#236 param/0.0/0 -> attribute param/0.0/0 Â·
r#237 param_list/0.1 -> param_list/0.1/0 Â·
r#238 struct_body_decl/0.2/0/0.0 -> ',' struct_member Â·
r#239 struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 Â·
r#240 struct_body_decl/0.3 -> ',' Â·
r#241 type_specifier -> ident _disambiguate_template template_elaborated_ident/0.2 Â·
r#242 struct_member -> struct_member/0.0 member_ident ':' type_specifier Â·
r#243 struct_body_decl -> '{' struct_member struct_body_decl/0.2 struct_body_decl/0.3 '}' Â·
r#244 function_header -> 'fn' ident '(' function_header/0.3 ')' function_header/0.5 Â·
r#245 param_list/0.1/0/0.0 -> ',' param Â·
r#246 param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 Â·
r#247 param_list -> param param_list/0.1 param_list/0.2 Â·
r#248 param_list/0.2 -> ',' Â·
r#249 variable_statement -> 'const' optionally_typed_ident '=' expression Â·
r#250 variable_statement -> 'let' optionally_typed_ident '=' expression Â·
r#251 loop_statement/0.2/0 -> statement loop_statement/0.2/0 Â·
r#252 loop_statement/0.3 -> continuing_statement Â·
r#253 switch_statement/0.3 -> switch_statement/0.3/0 Â·
r#254 switch_body -> case_clause Â·
r#255 switch_body -> default_alone_clause Â·
r#256 else_clause -> 'else' compound_statement Â·
r#257 template_arg_comma_list/0.1/0/0.0 -> ',' template_arg_expression Â·
r#258 template_arg_comma_list/0.1/0 -> template_arg_comma_list/0.1/0/0.0 template_arg_comma_list/0.1/0 Â·
r#259 template_arg_comma_list -> template_arg_expression template_arg_comma_list/0.1 template_arg_comma_list/0.2 Â·
r#260 template_arg_comma_list/0.2 -> ',' Â·
r#261 template_arg_expression -> short_circuit_or_expression '||' relational_expression Â·
r#262 template_arg_expression -> short_circuit_and_expression '&&' relational_expression Â·
r#263 attribute -> '@' 'workgroup_size' '(' expression ',' expression attrib_end Â·
r#264 attribute -> '@' 'interpolate' '(' expression ',' expression attrib_end Â·
r#265 else_if_clause -> 'else' 'if' expression compound_statement Â·
r#266 default_alone_clause/0.1 -> ':' Â·
r#267 case_selector -> 'default' Â·
r#268 case_selector -> expression Â·
r#269 switch_statement/0.3/0 -> switch_body switch_statement/0.3/0 Â·
r#270 switch_statement -> 'switch' expression '{' switch_statement/0.3 '}' Â·
r#271 continuing_statement -> 'continuing' continuing_compound_statement Â·
r#272 loop_statement -> 'loop' '{' loop_statement/0.2 loop_statement/0.3 '}' Â·
r#273 for_statement -> 'for' '(' for_header ')' compound_statement Â·
r#274 for_header/0.2 -> expression Â·
r#275 param -> param/0.0 ident ':' type_specifier Â·
r#276 function_header/0.5/0.1 -> function_header/0.5/0.1/0 Â·
r#277 function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 Â·
r#278 function_header/0.5 -> '->' function_header/0.5/0.1 template_elaborated_ident Â·
r#279 continuing_compound_statement/0.1 -> continuing_compound_statement/0.1/0 Â·
r#280 case_selectors/0.1 -> case_selectors/0.1/0 Â·
r#281 case_clause/0.2 -> ':' Â·
r#282 default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement Â·
r#283 attribute -> '@' 'workgroup_size' '(' expression ',' expression ',' expression attrib_end Â·
r#284 case_clause -> 'case' case_selectors case_clause/0.2 compound_statement Â·
r#285 case_selectors/0.1/0/0.0 -> ',' case_selector Â·
r#286 case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 Â·
r#287 case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 Â·
r#288 case_selectors/0.2 -> ',' Â·
r#289 continuing_compound_statement/0.1/0 -> statement continuing_compound_statement/0.1/0 Â·
r#290 continuing_compound_statement/0.2 -> break_if_statement Â·
r#291 for_header -> for_header/0.0 ';' for_header/0.2 ';' for_header/0.4 Â·
r#292 for_header/0.4 -> for_update Â·
r#293 for_update -> variable_updating_statement Â·
r#294 for_update -> func_call_statement Â·
r#295 continuing_compound_statement -> '{' continuing_compound_statement/0.1 continuing_compound_statement/0.2 '}' Â·
r#296 break_if_statement -> 'break' 'if' expression ';' Â·

=Action:
[#0 'enable']: s#7
[#0 'requires']: s#8
[#1 EndOfText]: acc
[#2 ';']: s#18
[#2 '@']: s#36
[#2 'alias']: s#28
[#2 'const']: s#26
[#2 'const_assert']: s#31
[#2 'struct']: s#29
[#3 ';']: r#0
[#3 '@']: r#0
[#3 'alias']: r#0
[#3 'const']: r#0
[#3 'const_assert']: r#0
[#3 'fn']: r#0
[#3 'override']: r#0
[#3 'struct']: r#0
[#3 'var']: r#0
[#3 EndOfText]: r#0
[#4 'enable']: s#7
[#4 'requires']: s#8
[#5 ';']: r#1
[#5 '@']: r#1
[#5 'alias']: r#1
[#5 'const']: r#1
[#5 'const_assert']: r#1
[#5 'enable']: r#1
[#5 'fn']: r#1
[#5 'override']: r#1
[#5 'requires']: r#1
[#5 'struct']: r#1
[#5 'var']: r#1
[#5 EndOfText]: r#1
[#6 ';']: r#2
[#6 '@']: r#2
[#6 'alias']: r#2
[#6 'const']: r#2
[#6 'const_assert']: r#2
[#6 'enable']: r#2
[#6 'fn']: r#2
[#6 'override']: r#2
[#6 'requires']: r#2
[#6 'struct']: r#2
[#6 'var']: r#2
[#6 EndOfText]: r#2
[#7 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#13
[#8 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#11
[#9 ';']: s#121
[#10 ',']: s#120
[#11 ',']: r#3
[#11 ';']: r#3
[#12 ';']: s#116
[#13 ';']: r#4
[#14 ';']: r#5
[#14 '@']: r#5
[#14 'alias']: r#5
[#14 'const']: r#5
[#14 'const_assert']: r#5
[#14 'fn']: r#5
[#14 'override']: r#5
[#14 'struct']: r#5
[#14 'var']: r#5
[#14 EndOfText]: r#5
[#15 EndOfText]: r#6
[#16 EndOfText]: r#7
[#17 ';']: s#18
[#17 '@']: s#36
[#17 'alias']: s#28
[#17 'const']: s#26
[#17 'const_assert']: s#31
[#17 'struct']: s#29
[#18 ';']: r#8
[#18 '@']: r#8
[#18 'alias']: r#8
[#18 'const']: r#8
[#18 'const_assert']: r#8
[#18 'fn']: r#8
[#18 'override']: r#8
[#18 'struct']: r#8
[#18 'var']: r#8
[#18 EndOfText]: r#8
[#19 ';']: s#114
[#20 ';']: s#113
[#21 ';']: s#112
[#22 ';']: r#9
[#22 '@']: r#9
[#22 'alias']: r#9
[#22 'const']: r#9
[#22 'const_assert']: r#9
[#22 'fn']: r#9
[#22 'override']: r#9
[#22 'struct']: r#9
[#22 'var']: r#9
[#22 EndOfText]: r#9
[#23 ';']: r#10
[#23 '@']: r#10
[#23 'alias']: r#10
[#23 'const']: r#10
[#23 'const_assert']: r#10
[#23 'fn']: r#10
[#23 'override']: r#10
[#23 'struct']: r#10
[#23 'var']: r#10
[#23 EndOfText]: r#10
[#24 ';']: s#111
[#25 'var']: s#110
[#26 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#27 'override']: s#106
[#28 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#29 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#30 'fn']: s#103
[#31 '!']: s#69
[#31 '&']: s#72
[#31 '(']: s#82
[#31 '*']: s#71
[#31 '-']: s#68
[#31 'false']: s#89
[#31 'true']: s#88
[#31 '~']: s#70
[#31 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#31 /0[fh]/]: s#94
[#31 /0[iu]?/]: s#91
[#31 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#31 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#31 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#31 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#31 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#31 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#31 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#31 /[1-9][0-9]*[fh]/]: s#95
[#31 /[1-9][0-9]*[iu]?/]: s#92
[#32 'var']: r#11
[#33 'override']: r#12
[#34 'fn']: r#13
[#35 '@']: s#36
[#36 'align']: s#37
[#36 'binding']: s#38
[#36 'builtin']: s#39
[#36 'compute']: s#51
[#36 'const']: s#40
[#36 'fragment']: s#50
[#36 'group']: s#41
[#36 'id']: s#42
[#36 'interpolate']: s#43
[#36 'invariant']: s#44
[#36 'location']: s#45
[#36 'must_use']: s#46
[#36 'size']: s#47
[#36 'vertex']: s#49
[#36 'workgroup_size']: s#48
[#37 '(']: s#188
[#38 '(']: s#187
[#39 '(']: s#186
[#40 '@']: r#14
[#40 'fn']: r#14
[#40 'override']: r#14
[#40 'var']: r#14
[#40 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#14
[#41 '(']: s#185
[#42 '(']: s#184
[#43 '(']: s#183
[#44 '@']: r#15
[#44 'fn']: r#15
[#44 'override']: r#15
[#44 'var']: r#15
[#44 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#15
[#45 '(']: s#182
[#46 '@']: r#16
[#46 'fn']: r#16
[#46 'override']: r#16
[#46 'var']: r#16
[#46 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#16
[#47 '(']: s#181
[#48 '(']: s#180
[#49 '@']: r#17
[#49 'fn']: r#17
[#49 'override']: r#17
[#49 'var']: r#17
[#49 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#17
[#50 '@']: r#18
[#50 'fn']: r#18
[#50 'override']: r#18
[#50 'var']: r#18
[#50 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#18
[#51 '@']: r#19
[#51 'fn']: r#19
[#51 'override']: r#19
[#51 'var']: r#19
[#51 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#19
[#52 'var']: r#20
[#53 'override']: r#21
[#54 'fn']: r#22
[#55 ';']: r#23
[#56 '&&']: r#26
[#56 ')']: r#24
[#56 ',']: r#24
[#56 ':']: r#24
[#56 ';']: r#24
[#56 ']']: r#24
[#56 '{']: r#24
[#56 '||']: r#25
[#57 '||']: s#179
[#58 '&&']: s#178
[#59 ')']: r#27
[#59 ',']: r#27
[#59 ':']: r#27
[#59 ';']: r#27
[#59 ']']: r#27
[#59 '{']: r#27
[#60 '!=']: s#173
[#60 '&&']: r#28
[#60 ')']: r#28
[#60 ',']: r#28
[#60 ':']: r#28
[#60 ';']: r#28
[#60 '==']: s#172
[#60 ']']: r#28
[#60 '{']: r#28
[#60 '||']: r#28
[#60 /\u200B_greater_than/]: s#175
[#60 /\u200B_greater_than_equal/]: s#177
[#60 /\u200B_less_than/]: s#174
[#60 /\u200B_less_than_equal/]: s#176
[#60 /\u200B_template_args_end/]: r#28
[#61 '&']: s#167
[#62 '|']: s#166
[#63 '^']: s#165
[#64 '!=']: r#29
[#64 '&&']: r#29
[#64 ')']: r#29
[#64 '+']: s#163
[#64 ',']: r#29
[#64 '-']: s#164
[#64 ':']: r#29
[#64 ';']: r#29
[#64 '==']: r#29
[#64 ']']: r#29
[#64 '{']: r#29
[#64 '||']: r#29
[#64 /\u200B_greater_than/]: r#29
[#64 /\u200B_greater_than_equal/]: r#29
[#64 /\u200B_less_than/]: r#29
[#64 /\u200B_less_than_equal/]: r#29
[#64 /\u200B_template_args_end/]: r#29
[#65 '!=']: r#33
[#65 '%']: r#33
[#65 '&&']: r#33
[#65 '&']: r#30
[#65 ')']: r#33
[#65 '*']: r#33
[#65 '+']: r#33
[#65 ',']: r#33
[#65 '-']: r#33
[#65 '/']: r#33
[#65 ':']: r#33
[#65 ';']: r#33
[#65 '==']: r#33
[#65 ']']: r#33
[#65 '^']: r#32
[#65 '{']: r#33
[#65 '|']: r#31
[#65 '||']: r#33
[#65 /\u200B_greater_than/]: r#33
[#65 /\u200B_greater_than_equal/]: r#33
[#65 /\u200B_less_than/]: r#33
[#65 /\u200B_less_than_equal/]: r#33
[#65 /\u200B_shift_left/]: s#160
[#65 /\u200B_shift_right/]: s#161
[#65 /\u200B_template_args_end/]: r#33
[#66 '!=']: r#34
[#66 '%']: s#157
[#66 '&&']: r#34
[#66 ')']: r#34
[#66 '*']: s#155
[#66 '+']: r#34
[#66 ',']: r#34
[#66 '-']: r#34
[#66 '/']: s#156
[#66 ':']: r#34
[#66 ';']: r#34
[#66 '==']: r#34
[#66 ']']: r#34
[#66 '{']: r#34
[#66 '||']: r#34
[#66 /\u200B_greater_than/]: r#34
[#66 /\u200B_greater_than_equal/]: r#34
[#66 /\u200B_less_than/]: r#34
[#66 /\u200B_less_than_equal/]: r#34
[#66 /\u200B_template_args_end/]: r#34
[#67 '!=']: r#35
[#67 '%']: r#35
[#67 '&&']: r#35
[#67 '&']: r#35
[#67 ')']: r#35
[#67 '*']: r#35
[#67 '+']: r#35
[#67 ',']: r#35
[#67 '-']: r#35
[#67 '/']: r#35
[#67 ':']: r#35
[#67 ';']: r#35
[#67 '==']: r#35
[#67 ']']: r#35
[#67 '^']: r#35
[#67 '{']: r#35
[#67 '|']: r#35
[#67 '||']: r#35
[#67 /\u200B_greater_than/]: r#35
[#67 /\u200B_greater_than_equal/]: r#35
[#67 /\u200B_less_than/]: r#35
[#67 /\u200B_less_than_equal/]: r#35
[#67 /\u200B_shift_left/]: r#35
[#67 /\u200B_shift_right/]: r#35
[#67 /\u200B_template_args_end/]: r#35
[#68 '!']: s#69
[#68 '&']: s#72
[#68 '(']: s#82
[#68 '*']: s#71
[#68 '-']: s#68
[#68 'false']: s#89
[#68 'true']: s#88
[#68 '~']: s#70
[#68 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#68 /0[fh]/]: s#94
[#68 /0[iu]?/]: s#91
[#68 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#68 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#68 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#68 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#68 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#68 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#68 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#68 /[1-9][0-9]*[fh]/]: s#95
[#68 /[1-9][0-9]*[iu]?/]: s#92
[#69 '!']: s#69
[#69 '&']: s#72
[#69 '(']: s#82
[#69 '*']: s#71
[#69 '-']: s#68
[#69 'false']: s#89
[#69 'true']: s#88
[#69 '~']: s#70
[#69 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#69 /0[fh]/]: s#94
[#69 /0[iu]?/]: s#91
[#69 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#69 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#69 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#69 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#69 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#69 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#69 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#69 /[1-9][0-9]*[fh]/]: s#95
[#69 /[1-9][0-9]*[iu]?/]: s#92
[#70 '!']: s#69
[#70 '&']: s#72
[#70 '(']: s#82
[#70 '*']: s#71
[#70 '-']: s#68
[#70 'false']: s#89
[#70 'true']: s#88
[#70 '~']: s#70
[#70 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#70 /0[fh]/]: s#94
[#70 /0[iu]?/]: s#91
[#70 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#70 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#70 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#70 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#70 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#70 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#70 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#70 /[1-9][0-9]*[fh]/]: s#95
[#70 /[1-9][0-9]*[iu]?/]: s#92
[#71 '!']: s#69
[#71 '&']: s#72
[#71 '(']: s#82
[#71 '*']: s#71
[#71 '-']: s#68
[#71 'false']: s#89
[#71 'true']: s#88
[#71 '~']: s#70
[#71 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#71 /0[fh]/]: s#94
[#71 /0[iu]?/]: s#91
[#71 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#71 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#71 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#71 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#71 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#71 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#71 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#71 /[1-9][0-9]*[fh]/]: s#95
[#71 /[1-9][0-9]*[iu]?/]: s#92
[#72 '!']: s#69
[#72 '&']: s#72
[#72 '(']: s#82
[#72 '*']: s#71
[#72 '-']: s#68
[#72 'false']: s#89
[#72 'true']: s#88
[#72 '~']: s#70
[#72 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#72 /0[fh]/]: s#94
[#72 /0[iu]?/]: s#91
[#72 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#72 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#72 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#72 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#72 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#72 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#72 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#72 /[1-9][0-9]*[fh]/]: s#95
[#72 /[1-9][0-9]*[iu]?/]: s#92
[#73 '.']: s#148
[#73 '[']: s#147
[#74 '!=']: r#36
[#74 '%']: r#36
[#74 '&&']: r#36
[#74 '&']: r#36
[#74 '(']: s#144
[#74 ')']: r#36
[#74 '*']: r#36
[#74 '+']: r#36
[#74 ',']: r#36
[#74 '-']: r#36
[#74 '.']: r#36
[#74 '/']: r#36
[#74 ':']: r#36
[#74 ';']: r#36
[#74 '==']: r#36
[#74 '[']: r#36
[#74 ']']: r#36
[#74 '^']: r#36
[#74 '{']: r#36
[#74 '|']: r#36
[#74 '||']: r#36
[#74 /\u200B_greater_than/]: r#36
[#74 /\u200B_greater_than_equal/]: r#36
[#74 /\u200B_less_than/]: r#36
[#74 /\u200B_less_than_equal/]: r#36
[#74 /\u200B_shift_left/]: r#36
[#74 /\u200B_shift_right/]: r#36
[#74 /\u200B_template_args_end/]: r#36
[#75 '!=']: r#37
[#75 '%']: r#37
[#75 '&&']: r#37
[#75 '&']: r#37
[#75 ')']: r#37
[#75 '*']: r#37
[#75 '+']: r#37
[#75 ',']: r#37
[#75 '-']: r#37
[#75 '.']: r#37
[#75 '/']: r#37
[#75 ':']: r#37
[#75 ';']: r#37
[#75 '==']: r#37
[#75 '[']: r#37
[#75 ']']: r#37
[#75 '^']: r#37
[#75 '{']: r#37
[#75 '|']: r#37
[#75 '||']: r#37
[#75 /\u200B_greater_than/]: r#37
[#75 /\u200B_greater_than_equal/]: r#37
[#75 /\u200B_less_than/]: r#37
[#75 /\u200B_less_than_equal/]: r#37
[#75 /\u200B_shift_left/]: r#37
[#75 /\u200B_shift_right/]: r#37
[#75 /\u200B_template_args_end/]: r#37
[#76 '!=']: r#38
[#76 '%']: r#38
[#76 '&&']: r#38
[#76 '&']: r#38
[#76 ')']: r#38
[#76 '*']: r#38
[#76 '+']: r#38
[#76 ',']: r#38
[#76 '-']: r#38
[#76 '.']: r#38
[#76 '/']: r#38
[#76 ':']: r#38
[#76 ';']: r#38
[#76 '==']: r#38
[#76 '[']: r#38
[#76 ']']: r#38
[#76 '^']: r#38
[#76 '{']: r#38
[#76 '|']: r#38
[#76 '||']: r#38
[#76 /\u200B_greater_than/]: r#38
[#76 /\u200B_greater_than_equal/]: r#38
[#76 /\u200B_less_than/]: r#38
[#76 /\u200B_less_than_equal/]: r#38
[#76 /\u200B_shift_left/]: r#38
[#76 /\u200B_shift_right/]: r#38
[#76 /\u200B_template_args_end/]: r#38
[#77 '!=']: r#39
[#77 '%']: r#39
[#77 '&&']: r#39
[#77 '&']: r#39
[#77 ')']: r#39
[#77 '*']: r#39
[#77 '+']: r#39
[#77 ',']: r#39
[#77 '-']: r#39
[#77 '.']: r#39
[#77 '/']: r#39
[#77 ':']: r#39
[#77 ';']: r#39
[#77 '==']: r#39
[#77 '[']: r#39
[#77 ']']: r#39
[#77 '^']: r#39
[#77 '{']: r#39
[#77 '|']: r#39
[#77 '||']: r#39
[#77 /\u200B_greater_than/]: r#39
[#77 /\u200B_greater_than_equal/]: r#39
[#77 /\u200B_less_than/]: r#39
[#77 /\u200B_less_than_equal/]: r#39
[#77 /\u200B_shift_left/]: r#39
[#77 /\u200B_shift_right/]: r#39
[#77 /\u200B_template_args_end/]: r#39
[#78 /\u200B_disambiguate_template/]: s#127
[#79 '!=']: r#40
[#79 '%']: r#40
[#79 '&&']: r#40
[#79 '&']: r#40
[#79 ')']: r#40
[#79 '*']: r#40
[#79 '+']: r#40
[#79 ',']: r#40
[#79 '-']: r#40
[#79 '.']: r#40
[#79 '/']: r#40
[#79 ':']: r#40
[#79 ';']: r#40
[#79 '==']: r#40
[#79 '[']: r#40
[#79 ']']: r#40
[#79 '^']: r#40
[#79 '{']: r#40
[#79 '|']: r#40
[#79 '||']: r#40
[#79 /\u200B_greater_than/]: r#40
[#79 /\u200B_greater_than_equal/]: r#40
[#79 /\u200B_less_than/]: r#40
[#79 /\u200B_less_than_equal/]: r#40
[#79 /\u200B_shift_left/]: r#40
[#79 /\u200B_shift_right/]: r#40
[#79 /\u200B_template_args_end/]: r#40
[#80 '!=']: r#41
[#80 '%']: r#41
[#80 '&&']: r#41
[#80 '&']: r#41
[#80 ')']: r#41
[#80 '*']: r#41
[#80 '+']: r#41
[#80 ',']: r#41
[#80 '-']: r#41
[#80 '.']: r#41
[#80 '/']: r#41
[#80 ':']: r#41
[#80 ';']: r#41
[#80 '==']: r#41
[#80 '[']: r#41
[#80 ']']: r#41
[#80 '^']: r#41
[#80 '{']: r#41
[#80 '|']: r#41
[#80 '||']: r#41
[#80 /\u200B_greater_than/]: r#41
[#80 /\u200B_greater_than_equal/]: r#41
[#80 /\u200B_less_than/]: r#41
[#80 /\u200B_less_than_equal/]: r#41
[#80 /\u200B_shift_left/]: r#41
[#80 /\u200B_shift_right/]: r#41
[#80 /\u200B_template_args_end/]: r#41
[#81 '!=']: r#42
[#81 '%']: r#42
[#81 '&&']: r#42
[#81 '&']: r#42
[#81 ')']: r#42
[#81 '*']: r#42
[#81 '+']: r#42
[#81 ',']: r#42
[#81 '-']: r#42
[#81 '.']: r#42
[#81 '/']: r#42
[#81 ':']: r#42
[#81 ';']: r#42
[#81 '==']: r#42
[#81 '[']: r#42
[#81 ']']: r#42
[#81 '^']: r#42
[#81 '{']: r#42
[#81 '|']: r#42
[#81 '||']: r#42
[#81 /\u200B_greater_than/]: r#42
[#81 /\u200B_greater_than_equal/]: r#42
[#81 /\u200B_less_than/]: r#42
[#81 /\u200B_less_than_equal/]: r#42
[#81 /\u200B_shift_left/]: r#42
[#81 /\u200B_shift_right/]: r#42
[#81 /\u200B_template_args_end/]: r#42
[#82 '!']: s#69
[#82 '&']: s#72
[#82 '(']: s#82
[#82 '*']: s#71
[#82 '-']: s#68
[#82 'false']: s#89
[#82 'true']: s#88
[#82 '~']: s#70
[#82 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#82 /0[fh]/]: s#94
[#82 /0[iu]?/]: s#91
[#82 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#82 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#82 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#82 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#82 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#82 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#82 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#82 /[1-9][0-9]*[fh]/]: s#95
[#82 /[1-9][0-9]*[iu]?/]: s#92
[#83 /\u200B_disambiguate_template/]: s#127
[#84 '!=']: r#43
[#84 '%']: r#43
[#84 '&&']: r#43
[#84 '&']: r#43
[#84 ')']: r#43
[#84 '*']: r#43
[#84 '+']: r#43
[#84 ',']: r#43
[#84 '-']: r#43
[#84 '.']: r#43
[#84 '/']: r#43
[#84 ':']: r#43
[#84 ';']: r#43
[#84 '==']: r#43
[#84 '[']: r#43
[#84 ']']: r#43
[#84 '^']: r#43
[#84 '{']: r#43
[#84 '|']: r#43
[#84 '||']: r#43
[#84 /\u200B_greater_than/]: r#43
[#84 /\u200B_greater_than_equal/]: r#43
[#84 /\u200B_less_than/]: r#43
[#84 /\u200B_less_than_equal/]: r#43
[#84 /\u200B_shift_left/]: r#43
[#84 /\u200B_shift_right/]: r#43
[#84 /\u200B_template_args_end/]: r#43
[#85 '!=']: r#44
[#85 '%']: r#44
[#85 '&&']: r#44
[#85 '&']: r#44
[#85 ')']: r#44
[#85 '*']: r#44
[#85 '+']: r#44
[#85 ',']: r#44
[#85 '-']: r#44
[#85 '.']: r#44
[#85 '/']: r#44
[#85 ':']: r#44
[#85 ';']: r#44
[#85 '==']: r#44
[#85 '[']: r#44
[#85 ']']: r#44
[#85 '^']: r#44
[#85 '{']: r#44
[#85 '|']: r#44
[#85 '||']: r#44
[#85 /\u200B_greater_than/]: r#44
[#85 /\u200B_greater_than_equal/]: r#44
[#85 /\u200B_less_than/]: r#44
[#85 /\u200B_less_than_equal/]: r#44
[#85 /\u200B_shift_left/]: r#44
[#85 /\u200B_shift_right/]: r#44
[#85 /\u200B_template_args_end/]: r#44
[#86 '!=']: r#45
[#86 '%']: r#45
[#86 '&&']: r#45
[#86 '&']: r#45
[#86 ')']: r#45
[#86 '*']: r#45
[#86 '+']: r#45
[#86 ',']: r#45
[#86 '-']: r#45
[#86 '.']: r#45
[#86 '/']: r#45
[#86 ':']: r#45
[#86 ';']: r#45
[#86 '==']: r#45
[#86 '[']: r#45
[#86 ']']: r#45
[#86 '^']: r#45
[#86 '{']: r#45
[#86 '|']: r#45
[#86 '||']: r#45
[#86 /\u200B_greater_than/]: r#45
[#86 /\u200B_greater_than_equal/]: r#45
[#86 /\u200B_less_than/]: r#45
[#86 /\u200B_less_than_equal/]: r#45
[#86 /\u200B_shift_left/]: r#45
[#86 /\u200B_shift_right/]: r#45
[#86 /\u200B_template_args_end/]: r#45
[#87 '!=']: r#46
[#87 '%']: r#46
[#87 '&&']: r#46
[#87 '&']: r#46
[#87 ')']: r#46
[#87 '*']: r#46
[#87 '+']: r#46
[#87 ',']: r#46
[#87 '-']: r#46
[#87 '.']: r#46
[#87 '/']: r#46
[#87 ':']: r#46
[#87 ';']: r#46
[#87 '==']: r#46
[#87 '[']: r#46
[#87 ']']: r#46
[#87 '^']: r#46
[#87 '{']: r#46
[#87 '|']: r#46
[#87 '||']: r#46
[#87 /\u200B_greater_than/]: r#46
[#87 /\u200B_greater_than_equal/]: r#46
[#87 /\u200B_less_than/]: r#46
[#87 /\u200B_less_than_equal/]: r#46
[#87 /\u200B_shift_left/]: r#46
[#87 /\u200B_shift_right/]: r#46
[#87 /\u200B_template_args_end/]: r#46
[#88 '!=']: r#47
[#88 '%']: r#47
[#88 '&&']: r#47
[#88 '&']: r#47
[#88 ')']: r#47
[#88 '*']: r#47
[#88 '+']: r#47
[#88 ',']: r#47
[#88 '-']: r#47
[#88 '.']: r#47
[#88 '/']: r#47
[#88 ':']: r#47
[#88 ';']: r#47
[#88 '==']: r#47
[#88 '[']: r#47
[#88 ']']: r#47
[#88 '^']: r#47
[#88 '{']: r#47
[#88 '|']: r#47
[#88 '||']: r#47
[#88 /\u200B_greater_than/]: r#47
[#88 /\u200B_greater_than_equal/]: r#47
[#88 /\u200B_less_than/]: r#47
[#88 /\u200B_less_than_equal/]: r#47
[#88 /\u200B_shift_left/]: r#47
[#88 /\u200B_shift_right/]: r#47
[#88 /\u200B_template_args_end/]: r#47
[#89 '!=']: r#48
[#89 '%']: r#48
[#89 '&&']: r#48
[#89 '&']: r#48
[#89 ')']: r#48
[#89 '*']: r#48
[#89 '+']: r#48
[#89 ',']: r#48
[#89 '-']: r#48
[#89 '.']: r#48
[#89 '/']: r#48
[#89 ':']: r#48
[#89 ';']: r#48
[#89 '==']: r#48
[#89 '[']: r#48
[#89 ']']: r#48
[#89 '^']: r#48
[#89 '{']: r#48
[#89 '|']: r#48
[#89 '||']: r#48
[#89 /\u200B_greater_than/]: r#48
[#89 /\u200B_greater_than_equal/]: r#48
[#89 /\u200B_less_than/]: r#48
[#89 /\u200B_less_than_equal/]: r#48
[#89 /\u200B_shift_left/]: r#48
[#89 /\u200B_shift_right/]: r#48
[#89 /\u200B_template_args_end/]: r#48
[#90 /\u200B_disambiguate_template/]: r#49
[#91 '!=']: r#50
[#91 '%']: r#50
[#91 '&&']: r#50
[#91 '&']: r#50
[#91 ')']: r#50
[#91 '*']: r#50
[#91 '+']: r#50
[#91 ',']: r#50
[#91 '-']: r#50
[#91 '.']: r#50
[#91 '/']: r#50
[#91 ':']: r#50
[#91 ';']: r#50
[#91 '==']: r#50
[#91 '[']: r#50
[#91 ']']: r#50
[#91 '^']: r#50
[#91 '{']: r#50
[#91 '|']: r#50
[#91 '||']: r#50
[#91 /\u200B_greater_than/]: r#50
[#91 /\u200B_greater_than_equal/]: r#50
[#91 /\u200B_less_than/]: r#50
[#91 /\u200B_less_than_equal/]: r#50
[#91 /\u200B_shift_left/]: r#50
[#91 /\u200B_shift_right/]: r#50
[#91 /\u200B_template_args_end/]: r#50
[#92 '!=']: r#51
[#92 '%']: r#51
[#92 '&&']: r#51
[#92 '&']: r#51
[#92 ')']: r#51
[#92 '*']: r#51
[#92 '+']: r#51
[#92 ',']: r#51
[#92 '-']: r#51
[#92 '.']: r#51
[#92 '/']: r#51
[#92 ':']: r#51
[#92 ';']: r#51
[#92 '==']: r#51
[#92 '[']: r#51
[#92 ']']: r#51
[#92 '^']: r#51
[#92 '{']: r#51
[#92 '|']: r#51
[#92 '||']: r#51
[#92 /\u200B_greater_than/]: r#51
[#92 /\u200B_greater_than_equal/]: r#51
[#92 /\u200B_less_than/]: r#51
[#92 /\u200B_less_than_equal/]: r#51
[#92 /\u200B_shift_left/]: r#51
[#92 /\u200B_shift_right/]: r#51
[#92 /\u200B_template_args_end/]: r#51
[#93 '!=']: r#52
[#93 '%']: r#52
[#93 '&&']: r#52
[#93 '&']: r#52
[#93 ')']: r#52
[#93 '*']: r#52
[#93 '+']: r#52
[#93 ',']: r#52
[#93 '-']: r#52
[#93 '.']: r#52
[#93 '/']: r#52
[#93 ':']: r#52
[#93 ';']: r#52
[#93 '==']: r#52
[#93 '[']: r#52
[#93 ']']: r#52
[#93 '^']: r#52
[#93 '{']: r#52
[#93 '|']: r#52
[#93 '||']: r#52
[#93 /\u200B_greater_than/]: r#52
[#93 /\u200B_greater_than_equal/]: r#52
[#93 /\u200B_less_than/]: r#52
[#93 /\u200B_less_than_equal/]: r#52
[#93 /\u200B_shift_left/]: r#52
[#93 /\u200B_shift_right/]: r#52
[#93 /\u200B_template_args_end/]: r#52
[#94 '!=']: r#53
[#94 '%']: r#53
[#94 '&&']: r#53
[#94 '&']: r#53
[#94 ')']: r#53
[#94 '*']: r#53
[#94 '+']: r#53
[#94 ',']: r#53
[#94 '-']: r#53
[#94 '.']: r#53
[#94 '/']: r#53
[#94 ':']: r#53
[#94 ';']: r#53
[#94 '==']: r#53
[#94 '[']: r#53
[#94 ']']: r#53
[#94 '^']: r#53
[#94 '{']: r#53
[#94 '|']: r#53
[#94 '||']: r#53
[#94 /\u200B_greater_than/]: r#53
[#94 /\u200B_greater_than_equal/]: r#53
[#94 /\u200B_less_than/]: r#53
[#94 /\u200B_less_than_equal/]: r#53
[#94 /\u200B_shift_left/]: r#53
[#94 /\u200B_shift_right/]: r#53
[#94 /\u200B_template_args_end/]: r#53
[#95 '!=']: r#54
[#95 '%']: r#54
[#95 '&&']: r#54
[#95 '&']: r#54
[#95 ')']: r#54
[#95 '*']: r#54
[#95 '+']: r#54
[#95 ',']: r#54
[#95 '-']: r#54
[#95 '.']: r#54
[#95 '/']: r#54
[#95 ':']: r#54
[#95 ';']: r#54
[#95 '==']: r#54
[#95 '[']: r#54
[#95 ']']: r#54
[#95 '^']: r#54
[#95 '{']: r#54
[#95 '|']: r#54
[#95 '||']: r#54
[#95 /\u200B_greater_than/]: r#54
[#95 /\u200B_greater_than_equal/]: r#54
[#95 /\u200B_less_than/]: r#54
[#95 /\u200B_less_than_equal/]: r#54
[#95 /\u200B_shift_left/]: r#54
[#95 /\u200B_shift_right/]: r#54
[#95 /\u200B_template_args_end/]: r#54
[#96 '!=']: r#55
[#96 '%']: r#55
[#96 '&&']: r#55
[#96 '&']: r#55
[#96 ')']: r#55
[#96 '*']: r#55
[#96 '+']: r#55
[#96 ',']: r#55
[#96 '-']: r#55
[#96 '.']: r#55
[#96 '/']: r#55
[#96 ':']: r#55
[#96 ';']: r#55
[#96 '==']: r#55
[#96 '[']: r#55
[#96 ']']: r#55
[#96 '^']: r#55
[#96 '{']: r#55
[#96 '|']: r#55
[#96 '||']: r#55
[#96 /\u200B_greater_than/]: r#55
[#96 /\u200B_greater_than_equal/]: r#55
[#96 /\u200B_less_than/]: r#55
[#96 /\u200B_less_than_equal/]: r#55
[#96 /\u200B_shift_left/]: r#55
[#96 /\u200B_shift_right/]: r#55
[#96 /\u200B_template_args_end/]: r#55
[#97 '!=']: r#56
[#97 '%']: r#56
[#97 '&&']: r#56
[#97 '&']: r#56
[#97 ')']: r#56
[#97 '*']: r#56
[#97 '+']: r#56
[#97 ',']: r#56
[#97 '-']: r#56
[#97 '.']: r#56
[#97 '/']: r#56
[#97 ':']: r#56
[#97 ';']: r#56
[#97 '==']: r#56
[#97 '[']: r#56
[#97 ']']: r#56
[#97 '^']: r#56
[#97 '{']: r#56
[#97 '|']: r#56
[#97 '||']: r#56
[#97 /\u200B_greater_than/]: r#56
[#97 /\u200B_greater_than_equal/]: r#56
[#97 /\u200B_less_than/]: r#56
[#97 /\u200B_less_than_equal/]: r#56
[#97 /\u200B_shift_left/]: r#56
[#97 /\u200B_shift_right/]: r#56
[#97 /\u200B_template_args_end/]: r#56
[#98 '!=']: r#57
[#98 '%']: r#57
[#98 '&&']: r#57
[#98 '&']: r#57
[#98 ')']: r#57
[#98 '*']: r#57
[#98 '+']: r#57
[#98 ',']: r#57
[#98 '-']: r#57
[#98 '.']: r#57
[#98 '/']: r#57
[#98 ':']: r#57
[#98 ';']: r#57
[#98 '==']: r#57
[#98 '[']: r#57
[#98 ']']: r#57
[#98 '^']: r#57
[#98 '{']: r#57
[#98 '|']: r#57
[#98 '||']: r#57
[#98 /\u200B_greater_than/]: r#57
[#98 /\u200B_greater_than_equal/]: r#57
[#98 /\u200B_less_than/]: r#57
[#98 /\u200B_less_than_equal/]: r#57
[#98 /\u200B_shift_left/]: r#57
[#98 /\u200B_shift_right/]: r#57
[#98 /\u200B_template_args_end/]: r#57
[#99 '!=']: r#58
[#99 '%']: r#58
[#99 '&&']: r#58
[#99 '&']: r#58
[#99 ')']: r#58
[#99 '*']: r#58
[#99 '+']: r#58
[#99 ',']: r#58
[#99 '-']: r#58
[#99 '.']: r#58
[#99 '/']: r#58
[#99 ':']: r#58
[#99 ';']: r#58
[#99 '==']: r#58
[#99 '[']: r#58
[#99 ']']: r#58
[#99 '^']: r#58
[#99 '{']: r#58
[#99 '|']: r#58
[#99 '||']: r#58
[#99 /\u200B_greater_than/]: r#58
[#99 /\u200B_greater_than_equal/]: r#58
[#99 /\u200B_less_than/]: r#58
[#99 /\u200B_less_than_equal/]: r#58
[#99 /\u200B_shift_left/]: r#58
[#99 /\u200B_shift_right/]: r#58
[#99 /\u200B_template_args_end/]: r#58
[#100 '!=']: r#59
[#100 '%']: r#59
[#100 '&&']: r#59
[#100 '&']: r#59
[#100 ')']: r#59
[#100 '*']: r#59
[#100 '+']: r#59
[#100 ',']: r#59
[#100 '-']: r#59
[#100 '.']: r#59
[#100 '/']: r#59
[#100 ':']: r#59
[#100 ';']: r#59
[#100 '==']: r#59
[#100 '[']: r#59
[#100 ']']: r#59
[#100 '^']: r#59
[#100 '{']: r#59
[#100 '|']: r#59
[#100 '||']: r#59
[#100 /\u200B_greater_than/]: r#59
[#100 /\u200B_greater_than_equal/]: r#59
[#100 /\u200B_less_than/]: r#59
[#100 /\u200B_less_than_equal/]: r#59
[#100 /\u200B_shift_left/]: r#59
[#100 /\u200B_shift_right/]: r#59
[#100 /\u200B_template_args_end/]: r#59
[#101 '!=']: r#60
[#101 '%']: r#60
[#101 '&&']: r#60
[#101 '&']: r#60
[#101 ')']: r#60
[#101 '*']: r#60
[#101 '+']: r#60
[#101 ',']: r#60
[#101 '-']: r#60
[#101 '.']: r#60
[#101 '/']: r#60
[#101 ':']: r#60
[#101 ';']: r#60
[#101 '==']: r#60
[#101 '[']: r#60
[#101 ']']: r#60
[#101 '^']: r#60
[#101 '{']: r#60
[#101 '|']: r#60
[#101 '||']: r#60
[#101 /\u200B_greater_than/]: r#60
[#101 /\u200B_greater_than_equal/]: r#60
[#101 /\u200B_less_than/]: r#60
[#101 /\u200B_less_than_equal/]: r#60
[#101 /\u200B_shift_left/]: r#60
[#101 /\u200B_shift_right/]: r#60
[#101 /\u200B_template_args_end/]: r#60
[#102 '{']: s#139
[#103 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#104 '{']: s#136
[#105 '=']: s#134
[#106 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#107 '=']: s#132
[#108 ':']: s#131
[#109 '=']: s#129
[#110 /\u200B_disambiguate_template/]: s#127
[#111 ';']: r#61
[#111 '@']: r#61
[#111 'alias']: r#61
[#111 'const']: r#61
[#111 'const_assert']: r#61
[#111 'fn']: r#61
[#111 'override']: r#61
[#111 'struct']: r#61
[#111 'var']: r#61
[#111 EndOfText]: r#61
[#112 ';']: r#62
[#112 '@']: r#62
[#112 'alias']: r#62
[#112 'const']: r#62
[#112 'const_assert']: r#62
[#112 'fn']: r#62
[#112 'override']: r#62
[#112 'struct']: r#62
[#112 'var']: r#62
[#112 EndOfText]: r#62
[#113 ';']: r#63
[#113 '@']: r#63
[#113 'alias']: r#63
[#113 'const']: r#63
[#113 'const_assert']: r#63
[#113 'fn']: r#63
[#113 'override']: r#63
[#113 'struct']: r#63
[#113 'var']: r#63
[#113 EndOfText]: r#63
[#114 ';']: r#64
[#114 '@']: r#64
[#114 'alias']: r#64
[#114 'const']: r#64
[#114 'const_assert']: r#64
[#114 'fn']: r#64
[#114 'override']: r#64
[#114 'struct']: r#64
[#114 'var']: r#64
[#114 EndOfText]: r#64
[#115 EndOfText]: r#65
[#116 ';']: r#66
[#116 '@']: r#66
[#116 'alias']: r#66
[#116 'const']: r#66
[#116 'const_assert']: r#66
[#116 'enable']: r#66
[#116 'fn']: r#66
[#116 'override']: r#66
[#116 'requires']: r#66
[#116 'struct']: r#66
[#116 'var']: r#66
[#116 EndOfText]: r#66
[#117 ',']: s#125
[#118 ',']: r#67
[#118 ';']: r#67
[#119 ',']: s#120
[#120 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#11
[#121 ';']: r#68
[#121 '@']: r#68
[#121 'alias']: r#68
[#121 'const']: r#68
[#121 'const_assert']: r#68
[#121 'enable']: r#68
[#121 'fn']: r#68
[#121 'override']: r#68
[#121 'requires']: r#68
[#121 'struct']: r#68
[#121 'var']: r#68
[#121 EndOfText]: r#68
[#122 ',']: r#69
[#122 ';']: r#69
[#123 ',']: r#70
[#123 ';']: r#70
[#124 ';']: r#71
[#125 ';']: r#72
[#126 /\u200B_template_args_start/]: s#233
[#127 '!=']: r#73
[#127 '%']: r#73
[#127 '%=']: r#73
[#127 '&&']: r#73
[#127 '&']: r#73
[#127 '&=']: r#73
[#127 '(']: r#73
[#127 ')']: r#73
[#127 '*']: r#73
[#127 '*=']: r#73
[#127 '+']: r#73
[#127 '++']: r#73
[#127 '+=']: r#73
[#127 ',']: r#73
[#127 '-']: r#73
[#127 '--']: r#73
[#127 '-=']: r#73
[#127 '.']: r#73
[#127 '/']: r#73
[#127 '/=']: r#73
[#127 ':']: r#73
[#127 ';']: r#73
[#127 '=']: r#73
[#127 '==']: r#73
[#127 '[']: r#73
[#127 ']']: r#73
[#127 '^']: r#73
[#127 '^=']: r#73
[#127 '{']: r#73
[#127 '|']: r#73
[#127 '|=']: r#73
[#127 '||']: r#73
[#127 '}']: r#73
[#127 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#73
[#127 /\u200B_disambiguate_template/]: r#73
[#127 /\u200B_greater_than/]: r#73
[#127 /\u200B_greater_than_equal/]: r#73
[#127 /\u200B_less_than/]: r#73
[#127 /\u200B_less_than_equal/]: r#73
[#127 /\u200B_shift_left/]: r#73
[#127 /\u200B_shift_left_assign/]: r#73
[#127 /\u200B_shift_right/]: r#73
[#127 /\u200B_shift_right_assign/]: r#73
[#127 /\u200B_template_args_end/]: r#73
[#127 /\u200B_template_args_start/]: r#73
[#128 ';']: r#74
[#129 '!']: s#69
[#129 '&']: s#72
[#129 '(']: s#82
[#129 '*']: s#71
[#129 '-']: s#68
[#129 'false']: s#89
[#129 'true']: s#88
[#129 '~']: s#70
[#129 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#129 /0[fh]/]: s#94
[#129 /0[iu]?/]: s#91
[#129 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#129 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#129 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#129 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#129 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#129 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#129 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#129 /[1-9][0-9]*[fh]/]: s#95
[#129 /[1-9][0-9]*[iu]?/]: s#92
[#130 ';']: r#75
[#130 '=']: r#75
[#131 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#132 '!']: s#69
[#132 '&']: s#72
[#132 '(']: s#82
[#132 '*']: s#71
[#132 '-']: s#68
[#132 'false']: s#89
[#132 'true']: s#88
[#132 '~']: s#70
[#132 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#132 /0[fh]/]: s#94
[#132 /0[iu]?/]: s#91
[#132 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#132 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#132 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#132 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#132 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#132 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#132 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#132 /[1-9][0-9]*[fh]/]: s#95
[#132 /[1-9][0-9]*[iu]?/]: s#92
[#133 '=']: s#284
[#134 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#135 ';']: r#76
[#135 '@']: r#76
[#135 'alias']: r#76
[#135 'const']: r#76
[#135 'const_assert']: r#76
[#135 'fn']: r#76
[#135 'override']: r#76
[#135 'struct']: r#76
[#135 'var']: r#76
[#135 EndOfText]: r#76
[#136 '@']: s#36
[#137 '(']: s#276
[#138 ';']: r#77
[#138 '@']: r#77
[#138 'alias']: r#77
[#138 'const']: r#77
[#138 'const_assert']: r#77
[#138 'fn']: r#77
[#138 'override']: r#77
[#138 'struct']: r#77
[#138 'var']: r#77
[#138 EndOfText]: r#77
[#139 '&']: s#274
[#139 '(']: s#275
[#139 '*']: s#273
[#139 ';']: s#238
[#139 '_']: s#271
[#139 'break']: s#263
[#139 'const']: s#262
[#139 'const_assert']: s#31
[#139 'continue']: s#264
[#139 'discard']: s#249
[#139 'for']: s#257
[#139 'if']: s#268
[#139 'let']: s#261
[#139 'loop']: s#256
[#139 'return']: s#253
[#139 'switch']: s#255
[#139 'var']: s#110
[#139 'while']: s#258
[#139 '{']: s#139
[#139 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#140 '(']: r#78
[#140 ':']: r#78
[#140 ';']: r#78
[#140 '=']: r#78
[#140 '{']: r#78
[#140 /\u200B_disambiguate_template/]: r#78
[#141 ')']: s#234
[#142 /\u200B_template_args_start/]: s#233
[#143 '!=']: r#79
[#143 '%']: r#79
[#143 '&&']: r#79
[#143 '&']: r#79
[#143 ')']: r#79
[#143 '*']: r#79
[#143 '+']: r#79
[#143 ',']: r#79
[#143 '-']: r#79
[#143 '.']: r#79
[#143 '/']: r#79
[#143 ':']: r#79
[#143 ';']: r#79
[#143 '==']: r#79
[#143 '[']: r#79
[#143 ']']: r#79
[#143 '^']: r#79
[#143 '{']: r#79
[#143 '|']: r#79
[#143 '||']: r#79
[#143 /\u200B_greater_than/]: r#79
[#143 /\u200B_greater_than_equal/]: r#79
[#143 /\u200B_less_than/]: r#79
[#143 /\u200B_less_than_equal/]: r#79
[#143 /\u200B_shift_left/]: r#79
[#143 /\u200B_shift_right/]: r#79
[#143 /\u200B_template_args_end/]: r#79
[#144 '!']: s#69
[#144 '&']: s#72
[#144 '(']: s#82
[#144 '*']: s#71
[#144 '-']: s#68
[#144 'false']: s#89
[#144 'true']: s#88
[#144 '~']: s#70
[#144 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#144 /0[fh]/]: s#94
[#144 /0[iu]?/]: s#91
[#144 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#144 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#144 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#144 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#144 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#144 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#144 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#144 /[1-9][0-9]*[fh]/]: s#95
[#144 /[1-9][0-9]*[iu]?/]: s#92
[#145 '!=']: r#80
[#145 '%']: r#80
[#145 '&&']: r#80
[#145 '&']: r#80
[#145 ')']: r#80
[#145 '*']: r#80
[#145 '+']: r#80
[#145 ',']: r#80
[#145 '-']: r#80
[#145 '/']: r#80
[#145 ':']: r#80
[#145 ';']: r#80
[#145 '==']: r#80
[#145 ']']: r#80
[#145 '^']: r#80
[#145 '{']: r#80
[#145 '|']: r#80
[#145 '||']: r#80
[#145 /\u200B_greater_than/]: r#80
[#145 /\u200B_greater_than_equal/]: r#80
[#145 /\u200B_less_than/]: r#80
[#145 /\u200B_less_than_equal/]: r#80
[#145 /\u200B_shift_left/]: r#80
[#145 /\u200B_shift_right/]: r#80
[#145 /\u200B_template_args_end/]: r#80
[#146 '!=']: r#81
[#146 '%']: r#81
[#146 '&&']: r#81
[#146 '&']: r#81
[#146 ')']: r#81
[#146 '*']: r#81
[#146 '+']: r#81
[#146 ',']: r#81
[#146 '-']: r#81
[#146 '/']: r#81
[#146 ':']: r#81
[#146 ';']: r#81
[#146 '==']: r#81
[#146 ']']: r#81
[#146 '^']: r#81
[#146 '{']: r#81
[#146 '|']: r#81
[#146 '||']: r#81
[#146 /\u200B_greater_than/]: r#81
[#146 /\u200B_greater_than_equal/]: r#81
[#146 /\u200B_less_than/]: r#81
[#146 /\u200B_less_than_equal/]: r#81
[#146 /\u200B_shift_left/]: r#81
[#146 /\u200B_shift_right/]: r#81
[#146 /\u200B_template_args_end/]: r#81
[#147 '!']: s#69
[#147 '&']: s#72
[#147 '(']: s#82
[#147 '*']: s#71
[#147 '-']: s#68
[#147 'false']: s#89
[#147 'true']: s#88
[#147 '~']: s#70
[#147 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#147 /0[fh]/]: s#94
[#147 /0[iu]?/]: s#91
[#147 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#147 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#147 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#147 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#147 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#147 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#147 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#147 /[1-9][0-9]*[fh]/]: s#95
[#147 /[1-9][0-9]*[iu]?/]: s#92
[#148 '/[rgba]/']: s#218
[#148 '/[rgba][rgba]/']: s#219
[#148 '/[rgba][rgba][rgba]/']: s#220
[#148 '/[rgba][rgba][rgba][rgba]/']: s#221
[#148 '/[xyzw]/']: s#222
[#148 '/[xyzw][xyzw]/']: s#223
[#148 '/[xyzw][xyzw][xyzw]/']: s#224
[#148 '/[xyzw][xyzw][xyzw][xyzw]/']: s#225
[#148 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#217
[#149 '!=']: r#82
[#149 '%']: r#82
[#149 '&&']: r#82
[#149 '&']: r#82
[#149 ')']: r#82
[#149 '*']: r#82
[#149 '+']: r#82
[#149 ',']: r#82
[#149 '-']: r#82
[#149 '/']: r#82
[#149 ':']: r#82
[#149 ';']: r#82
[#149 '==']: r#82
[#149 ']']: r#82
[#149 '^']: r#82
[#149 '{']: r#82
[#149 '|']: r#82
[#149 '||']: r#82
[#149 /\u200B_greater_than/]: r#82
[#149 /\u200B_greater_than_equal/]: r#82
[#149 /\u200B_less_than/]: r#82
[#149 /\u200B_less_than_equal/]: r#82
[#149 /\u200B_shift_left/]: r#82
[#149 /\u200B_shift_right/]: r#82
[#149 /\u200B_template_args_end/]: r#82
[#150 '!=']: r#83
[#150 '%']: r#83
[#150 '&&']: r#83
[#150 '&']: r#83
[#150 ')']: r#83
[#150 '*']: r#83
[#150 '+']: r#83
[#150 ',']: r#83
[#150 '-']: r#83
[#150 '/']: r#83
[#150 ':']: r#83
[#150 ';']: r#83
[#150 '==']: r#83
[#150 ']']: r#83
[#150 '^']: r#83
[#150 '{']: r#83
[#150 '|']: r#83
[#150 '||']: r#83
[#150 /\u200B_greater_than/]: r#83
[#150 /\u200B_greater_than_equal/]: r#83
[#150 /\u200B_less_than/]: r#83
[#150 /\u200B_less_than_equal/]: r#83
[#150 /\u200B_shift_left/]: r#83
[#150 /\u200B_shift_right/]: r#83
[#150 /\u200B_template_args_end/]: r#83
[#151 '!=']: r#84
[#151 '%']: r#84
[#151 '&&']: r#84
[#151 '&']: r#84
[#151 ')']: r#84
[#151 '*']: r#84
[#151 '+']: r#84
[#151 ',']: r#84
[#151 '-']: r#84
[#151 '/']: r#84
[#151 ':']: r#84
[#151 ';']: r#84
[#151 '==']: r#84
[#151 ']']: r#84
[#151 '^']: r#84
[#151 '{']: r#84
[#151 '|']: r#84
[#151 '||']: r#84
[#151 /\u200B_greater_than/]: r#84
[#151 /\u200B_greater_than_equal/]: r#84
[#151 /\u200B_less_than/]: r#84
[#151 /\u200B_less_than_equal/]: r#84
[#151 /\u200B_shift_left/]: r#84
[#151 /\u200B_shift_right/]: r#84
[#151 /\u200B_template_args_end/]: r#84
[#152 '!=']: r#85
[#152 '%']: r#85
[#152 '&&']: r#85
[#152 '&']: r#85
[#152 ')']: r#85
[#152 '*']: r#85
[#152 '+']: r#85
[#152 ',']: r#85
[#152 '-']: r#85
[#152 '/']: r#85
[#152 ':']: r#85
[#152 ';']: r#85
[#152 '==']: r#85
[#152 ']']: r#85
[#152 '^']: r#85
[#152 '{']: r#85
[#152 '|']: r#85
[#152 '||']: r#85
[#152 /\u200B_greater_than/]: r#85
[#152 /\u200B_greater_than_equal/]: r#85
[#152 /\u200B_less_than/]: r#85
[#152 /\u200B_less_than_equal/]: r#85
[#152 /\u200B_shift_left/]: r#85
[#152 /\u200B_shift_right/]: r#85
[#152 /\u200B_template_args_end/]: r#85
[#153 '!=']: r#86
[#153 '%']: r#86
[#153 '&&']: r#86
[#153 '&']: r#86
[#153 ')']: r#86
[#153 '*']: r#86
[#153 '+']: r#86
[#153 ',']: r#86
[#153 '-']: r#86
[#153 '/']: r#86
[#153 ':']: r#86
[#153 ';']: r#86
[#153 '==']: r#86
[#153 ']']: r#86
[#153 '^']: r#86
[#153 '{']: r#86
[#153 '|']: r#86
[#153 '||']: r#86
[#153 /\u200B_greater_than/]: r#86
[#153 /\u200B_greater_than_equal/]: r#86
[#153 /\u200B_less_than/]: r#86
[#153 /\u200B_less_than_equal/]: r#86
[#153 /\u200B_shift_left/]: r#86
[#153 /\u200B_shift_right/]: r#86
[#153 /\u200B_template_args_end/]: r#86
[#154 '!']: s#69
[#154 '&']: s#72
[#154 '(']: s#82
[#154 '*']: s#71
[#154 '-']: s#68
[#154 'false']: s#89
[#154 'true']: s#88
[#154 '~']: s#70
[#154 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#154 /0[fh]/]: s#94
[#154 /0[iu]?/]: s#91
[#154 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#154 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#154 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#154 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#154 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#154 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#154 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#154 /[1-9][0-9]*[fh]/]: s#95
[#154 /[1-9][0-9]*[iu]?/]: s#92
[#155 '!']: r#87
[#155 '&']: r#87
[#155 '(']: r#87
[#155 '*']: r#87
[#155 '-']: r#87
[#155 'false']: r#87
[#155 'true']: r#87
[#155 '~']: r#87
[#155 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#87
[#155 /0[fh]/]: r#87
[#155 /0[iu]?/]: r#87
[#155 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#87
[#155 /0[xX][0-9a-fA-F]+[iu]?/]: r#87
[#155 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#87
[#155 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#87
[#155 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#87
[#155 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#87
[#155 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#87
[#155 /[1-9][0-9]*[fh]/]: r#87
[#155 /[1-9][0-9]*[iu]?/]: r#87
[#156 '!']: r#88
[#156 '&']: r#88
[#156 '(']: r#88
[#156 '*']: r#88
[#156 '-']: r#88
[#156 'false']: r#88
[#156 'true']: r#88
[#156 '~']: r#88
[#156 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#88
[#156 /0[fh]/]: r#88
[#156 /0[iu]?/]: r#88
[#156 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#88
[#156 /0[xX][0-9a-fA-F]+[iu]?/]: r#88
[#156 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#88
[#156 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#88
[#156 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#88
[#156 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#88
[#156 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#88
[#156 /[1-9][0-9]*[fh]/]: r#88
[#156 /[1-9][0-9]*[iu]?/]: r#88
[#157 '!']: r#89
[#157 '&']: r#89
[#157 '(']: r#89
[#157 '*']: r#89
[#157 '-']: r#89
[#157 'false']: r#89
[#157 'true']: r#89
[#157 '~']: r#89
[#157 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#89
[#157 /0[fh]/]: r#89
[#157 /0[iu]?/]: r#89
[#157 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#89
[#157 /0[xX][0-9a-fA-F]+[iu]?/]: r#89
[#157 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#89
[#157 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#89
[#157 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#89
[#157 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#89
[#157 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#89
[#157 /[1-9][0-9]*[fh]/]: r#89
[#157 /[1-9][0-9]*[iu]?/]: r#89
[#158 '!']: s#69
[#158 '&']: s#72
[#158 '(']: s#82
[#158 '*']: s#71
[#158 '-']: s#68
[#158 'false']: s#89
[#158 'true']: s#88
[#158 '~']: s#70
[#158 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#158 /0[fh]/]: s#94
[#158 /0[iu]?/]: s#91
[#158 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#158 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#158 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#158 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#158 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#158 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#158 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#158 /[1-9][0-9]*[fh]/]: s#95
[#158 /[1-9][0-9]*[iu]?/]: s#92
[#159 '!']: s#69
[#159 '&']: s#72
[#159 '(']: s#82
[#159 '*']: s#71
[#159 '-']: s#68
[#159 'false']: s#89
[#159 'true']: s#88
[#159 '~']: s#70
[#159 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#159 /0[fh]/]: s#94
[#159 /0[iu]?/]: s#91
[#159 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#159 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#159 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#159 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#159 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#159 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#159 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#159 /[1-9][0-9]*[fh]/]: s#95
[#159 /[1-9][0-9]*[iu]?/]: s#92
[#160 '!']: r#90
[#160 '&']: r#90
[#160 '(']: r#90
[#160 '*']: r#90
[#160 '-']: r#90
[#160 'false']: r#90
[#160 'true']: r#90
[#160 '~']: r#90
[#160 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#90
[#160 /0[fh]/]: r#90
[#160 /0[iu]?/]: r#90
[#160 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#90
[#160 /0[xX][0-9a-fA-F]+[iu]?/]: r#90
[#160 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#90
[#160 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#90
[#160 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#90
[#160 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#90
[#160 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#90
[#160 /[1-9][0-9]*[fh]/]: r#90
[#160 /[1-9][0-9]*[iu]?/]: r#90
[#161 '!']: r#91
[#161 '&']: r#91
[#161 '(']: r#91
[#161 '*']: r#91
[#161 '-']: r#91
[#161 'false']: r#91
[#161 'true']: r#91
[#161 '~']: r#91
[#161 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#91
[#161 /0[fh]/]: r#91
[#161 /0[iu]?/]: r#91
[#161 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#91
[#161 /0[xX][0-9a-fA-F]+[iu]?/]: r#91
[#161 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#91
[#161 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#91
[#161 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#91
[#161 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#91
[#161 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#91
[#161 /[1-9][0-9]*[fh]/]: r#91
[#161 /[1-9][0-9]*[iu]?/]: r#91
[#162 '!']: s#69
[#162 '&']: s#72
[#162 '(']: s#82
[#162 '*']: s#71
[#162 '-']: s#68
[#162 'false']: s#89
[#162 'true']: s#88
[#162 '~']: s#70
[#162 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#162 /0[fh]/]: s#94
[#162 /0[iu]?/]: s#91
[#162 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#162 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#162 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#162 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#162 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#162 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#162 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#162 /[1-9][0-9]*[fh]/]: s#95
[#162 /[1-9][0-9]*[iu]?/]: s#92
[#163 '!']: r#92
[#163 '&']: r#92
[#163 '(']: r#92
[#163 '*']: r#92
[#163 '-']: r#92
[#163 'false']: r#92
[#163 'true']: r#92
[#163 '~']: r#92
[#163 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#92
[#163 /0[fh]/]: r#92
[#163 /0[iu]?/]: r#92
[#163 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#92
[#163 /0[xX][0-9a-fA-F]+[iu]?/]: r#92
[#163 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#92
[#163 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#92
[#163 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#92
[#163 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#92
[#163 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#92
[#163 /[1-9][0-9]*[fh]/]: r#92
[#163 /[1-9][0-9]*[iu]?/]: r#92
[#164 '!']: r#93
[#164 '&']: r#93
[#164 '(']: r#93
[#164 '*']: r#93
[#164 '-']: r#93
[#164 'false']: r#93
[#164 'true']: r#93
[#164 '~']: r#93
[#164 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#93
[#164 /0[fh]/]: r#93
[#164 /0[iu]?/]: r#93
[#164 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#93
[#164 /0[xX][0-9a-fA-F]+[iu]?/]: r#93
[#164 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#93
[#164 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#93
[#164 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#93
[#164 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#93
[#164 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#93
[#164 /[1-9][0-9]*[fh]/]: r#93
[#164 /[1-9][0-9]*[iu]?/]: r#93
[#165 '!']: s#69
[#165 '&']: s#72
[#165 '(']: s#82
[#165 '*']: s#71
[#165 '-']: s#68
[#165 'false']: s#89
[#165 'true']: s#88
[#165 '~']: s#70
[#165 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#165 /0[fh]/]: s#94
[#165 /0[iu]?/]: s#91
[#165 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#165 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#165 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#165 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#165 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#165 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#165 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#165 /[1-9][0-9]*[fh]/]: s#95
[#165 /[1-9][0-9]*[iu]?/]: s#92
[#166 '!']: s#69
[#166 '&']: s#72
[#166 '(']: s#82
[#166 '*']: s#71
[#166 '-']: s#68
[#166 'false']: s#89
[#166 'true']: s#88
[#166 '~']: s#70
[#166 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#166 /0[fh]/]: s#94
[#166 /0[iu]?/]: s#91
[#166 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#166 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#166 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#166 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#166 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#166 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#166 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#166 /[1-9][0-9]*[fh]/]: s#95
[#166 /[1-9][0-9]*[iu]?/]: s#92
[#167 '!']: s#69
[#167 '&']: s#72
[#167 '(']: s#82
[#167 '*']: s#71
[#167 '-']: s#68
[#167 'false']: s#89
[#167 'true']: s#88
[#167 '~']: s#70
[#167 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#167 /0[fh]/]: s#94
[#167 /0[iu]?/]: s#91
[#167 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#167 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#167 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#167 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#167 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#167 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#167 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#167 /[1-9][0-9]*[fh]/]: s#95
[#167 /[1-9][0-9]*[iu]?/]: s#92
[#168 '!']: s#69
[#168 '&']: s#72
[#168 '(']: s#82
[#168 '*']: s#71
[#168 '-']: s#68
[#168 'false']: s#89
[#168 'true']: s#88
[#168 '~']: s#70
[#168 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#168 /0[fh]/]: s#94
[#168 /0[iu]?/]: s#91
[#168 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#168 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#168 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#168 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#168 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#168 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#168 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#168 /[1-9][0-9]*[fh]/]: s#95
[#168 /[1-9][0-9]*[iu]?/]: s#92
[#169 '!']: s#69
[#169 '&']: s#72
[#169 '(']: s#82
[#169 '*']: s#71
[#169 '-']: s#68
[#169 'false']: s#89
[#169 'true']: s#88
[#169 '~']: s#70
[#169 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#169 /0[fh]/]: s#94
[#169 /0[iu]?/]: s#91
[#169 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#169 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#169 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#169 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#169 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#169 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#169 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#169 /[1-9][0-9]*[fh]/]: s#95
[#169 /[1-9][0-9]*[iu]?/]: s#92
[#170 '!']: s#69
[#170 '&']: s#72
[#170 '(']: s#82
[#170 '*']: s#71
[#170 '-']: s#68
[#170 'false']: s#89
[#170 'true']: s#88
[#170 '~']: s#70
[#170 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#170 /0[fh]/]: s#94
[#170 /0[iu]?/]: s#91
[#170 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#170 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#170 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#170 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#170 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#170 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#170 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#170 /[1-9][0-9]*[fh]/]: s#95
[#170 /[1-9][0-9]*[iu]?/]: s#92
[#171 '!']: s#69
[#171 '&']: s#72
[#171 '(']: s#82
[#171 '*']: s#71
[#171 '-']: s#68
[#171 'false']: s#89
[#171 'true']: s#88
[#171 '~']: s#70
[#171 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#171 /0[fh]/]: s#94
[#171 /0[iu]?/]: s#91
[#171 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#171 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#171 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#171 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#171 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#171 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#171 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#171 /[1-9][0-9]*[fh]/]: s#95
[#171 /[1-9][0-9]*[iu]?/]: s#92
[#172 '!']: s#69
[#172 '&']: s#72
[#172 '(']: s#82
[#172 '*']: s#71
[#172 '-']: s#68
[#172 'false']: s#89
[#172 'true']: s#88
[#172 '~']: s#70
[#172 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#172 /0[fh]/]: s#94
[#172 /0[iu]?/]: s#91
[#172 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#172 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#172 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#172 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#172 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#172 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#172 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#172 /[1-9][0-9]*[fh]/]: s#95
[#172 /[1-9][0-9]*[iu]?/]: s#92
[#173 '!']: s#69
[#173 '&']: s#72
[#173 '(']: s#82
[#173 '*']: s#71
[#173 '-']: s#68
[#173 'false']: s#89
[#173 'true']: s#88
[#173 '~']: s#70
[#173 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#173 /0[fh]/]: s#94
[#173 /0[iu]?/]: s#91
[#173 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#173 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#173 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#173 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#173 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#173 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#173 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#173 /[1-9][0-9]*[fh]/]: s#95
[#173 /[1-9][0-9]*[iu]?/]: s#92
[#174 '!']: r#94
[#174 '&']: r#94
[#174 '(']: r#94
[#174 '*']: r#94
[#174 '-']: r#94
[#174 'false']: r#94
[#174 'true']: r#94
[#174 '~']: r#94
[#174 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#94
[#174 /0[fh]/]: r#94
[#174 /0[iu]?/]: r#94
[#174 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#94
[#174 /0[xX][0-9a-fA-F]+[iu]?/]: r#94
[#174 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#94
[#174 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#94
[#174 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#94
[#174 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#94
[#174 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#94
[#174 /[1-9][0-9]*[fh]/]: r#94
[#174 /[1-9][0-9]*[iu]?/]: r#94
[#175 '!']: r#95
[#175 '&']: r#95
[#175 '(']: r#95
[#175 '*']: r#95
[#175 '-']: r#95
[#175 'false']: r#95
[#175 'true']: r#95
[#175 '~']: r#95
[#175 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#95
[#175 /0[fh]/]: r#95
[#175 /0[iu]?/]: r#95
[#175 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#95
[#175 /0[xX][0-9a-fA-F]+[iu]?/]: r#95
[#175 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#95
[#175 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#95
[#175 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#95
[#175 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#95
[#175 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#95
[#175 /[1-9][0-9]*[fh]/]: r#95
[#175 /[1-9][0-9]*[iu]?/]: r#95
[#176 '!']: r#96
[#176 '&']: r#96
[#176 '(']: r#96
[#176 '*']: r#96
[#176 '-']: r#96
[#176 'false']: r#96
[#176 'true']: r#96
[#176 '~']: r#96
[#176 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#96
[#176 /0[fh]/]: r#96
[#176 /0[iu]?/]: r#96
[#176 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#96
[#176 /0[xX][0-9a-fA-F]+[iu]?/]: r#96
[#176 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#96
[#176 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#96
[#176 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#96
[#176 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#96
[#176 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#96
[#176 /[1-9][0-9]*[fh]/]: r#96
[#176 /[1-9][0-9]*[iu]?/]: r#96
[#177 '!']: r#97
[#177 '&']: r#97
[#177 '(']: r#97
[#177 '*']: r#97
[#177 '-']: r#97
[#177 'false']: r#97
[#177 'true']: r#97
[#177 '~']: r#97
[#177 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#97
[#177 /0[fh]/]: r#97
[#177 /0[iu]?/]: r#97
[#177 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#97
[#177 /0[xX][0-9a-fA-F]+[iu]?/]: r#97
[#177 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#97
[#177 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#97
[#177 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#97
[#177 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#97
[#177 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#97
[#177 /[1-9][0-9]*[fh]/]: r#97
[#177 /[1-9][0-9]*[iu]?/]: r#97
[#178 '!']: s#69
[#178 '&']: s#72
[#178 '(']: s#82
[#178 '*']: s#71
[#178 '-']: s#68
[#178 'false']: s#89
[#178 'true']: s#88
[#178 '~']: s#70
[#178 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#178 /0[fh]/]: s#94
[#178 /0[iu]?/]: s#91
[#178 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#178 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#178 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#178 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#178 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#178 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#178 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#178 /[1-9][0-9]*[fh]/]: s#95
[#178 /[1-9][0-9]*[iu]?/]: s#92
[#179 '!']: s#69
[#179 '&']: s#72
[#179 '(']: s#82
[#179 '*']: s#71
[#179 '-']: s#68
[#179 'false']: s#89
[#179 'true']: s#88
[#179 '~']: s#70
[#179 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#179 /0[fh]/]: s#94
[#179 /0[iu]?/]: s#91
[#179 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#179 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#179 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#179 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#179 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#179 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#179 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#179 /[1-9][0-9]*[fh]/]: s#95
[#179 /[1-9][0-9]*[iu]?/]: s#92
[#180 '!']: s#69
[#180 '&']: s#72
[#180 '(']: s#82
[#180 '*']: s#71
[#180 '-']: s#68
[#180 'false']: s#89
[#180 'true']: s#88
[#180 '~']: s#70
[#180 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#180 /0[fh]/]: s#94
[#180 /0[iu]?/]: s#91
[#180 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#180 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#180 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#180 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#180 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#180 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#180 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#180 /[1-9][0-9]*[fh]/]: s#95
[#180 /[1-9][0-9]*[iu]?/]: s#92
[#181 '!']: s#69
[#181 '&']: s#72
[#181 '(']: s#82
[#181 '*']: s#71
[#181 '-']: s#68
[#181 'false']: s#89
[#181 'true']: s#88
[#181 '~']: s#70
[#181 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#181 /0[fh]/]: s#94
[#181 /0[iu]?/]: s#91
[#181 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#181 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#181 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#181 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#181 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#181 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#181 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#181 /[1-9][0-9]*[fh]/]: s#95
[#181 /[1-9][0-9]*[iu]?/]: s#92
[#182 '!']: s#69
[#182 '&']: s#72
[#182 '(']: s#82
[#182 '*']: s#71
[#182 '-']: s#68
[#182 'false']: s#89
[#182 'true']: s#88
[#182 '~']: s#70
[#182 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#182 /0[fh]/]: s#94
[#182 /0[iu]?/]: s#91
[#182 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#182 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#182 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#182 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#182 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#182 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#182 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#182 /[1-9][0-9]*[fh]/]: s#95
[#182 /[1-9][0-9]*[iu]?/]: s#92
[#183 '!']: s#69
[#183 '&']: s#72
[#183 '(']: s#82
[#183 '*']: s#71
[#183 '-']: s#68
[#183 'false']: s#89
[#183 'true']: s#88
[#183 '~']: s#70
[#183 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#183 /0[fh]/]: s#94
[#183 /0[iu]?/]: s#91
[#183 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#183 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#183 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#183 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#183 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#183 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#183 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#183 /[1-9][0-9]*[fh]/]: s#95
[#183 /[1-9][0-9]*[iu]?/]: s#92
[#184 '!']: s#69
[#184 '&']: s#72
[#184 '(']: s#82
[#184 '*']: s#71
[#184 '-']: s#68
[#184 'false']: s#89
[#184 'true']: s#88
[#184 '~']: s#70
[#184 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#184 /0[fh]/]: s#94
[#184 /0[iu]?/]: s#91
[#184 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#184 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#184 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#184 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#184 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#184 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#184 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#184 /[1-9][0-9]*[fh]/]: s#95
[#184 /[1-9][0-9]*[iu]?/]: s#92
[#185 '!']: s#69
[#185 '&']: s#72
[#185 '(']: s#82
[#185 '*']: s#71
[#185 '-']: s#68
[#185 'false']: s#89
[#185 'true']: s#88
[#185 '~']: s#70
[#185 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#185 /0[fh]/]: s#94
[#185 /0[iu]?/]: s#91
[#185 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#185 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#185 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#185 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#185 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#185 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#185 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#185 /[1-9][0-9]*[fh]/]: s#95
[#185 /[1-9][0-9]*[iu]?/]: s#92
[#186 '!']: s#69
[#186 '&']: s#72
[#186 '(']: s#82
[#186 '*']: s#71
[#186 '-']: s#68
[#186 'false']: s#89
[#186 'true']: s#88
[#186 '~']: s#70
[#186 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#186 /0[fh]/]: s#94
[#186 /0[iu]?/]: s#91
[#186 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#186 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#186 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#186 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#186 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#186 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#186 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#186 /[1-9][0-9]*[fh]/]: s#95
[#186 /[1-9][0-9]*[iu]?/]: s#92
[#187 '!']: s#69
[#187 '&']: s#72
[#187 '(']: s#82
[#187 '*']: s#71
[#187 '-']: s#68
[#187 'false']: s#89
[#187 'true']: s#88
[#187 '~']: s#70
[#187 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#187 /0[fh]/]: s#94
[#187 /0[iu]?/]: s#91
[#187 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#187 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#187 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#187 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#187 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#187 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#187 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#187 /[1-9][0-9]*[fh]/]: s#95
[#187 /[1-9][0-9]*[iu]?/]: s#92
[#188 '!']: s#69
[#188 '&']: s#72
[#188 '(']: s#82
[#188 '*']: s#71
[#188 '-']: s#68
[#188 'false']: s#89
[#188 'true']: s#88
[#188 '~']: s#70
[#188 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#188 /0[fh]/]: s#94
[#188 /0[iu]?/]: s#91
[#188 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#188 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#188 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#188 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#188 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#188 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#188 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#188 /[1-9][0-9]*[fh]/]: s#95
[#188 /[1-9][0-9]*[iu]?/]: s#92
[#189 ',']: s#375
[#190 ',']: s#375
[#191 ',']: s#375
[#192 ',']: s#375
[#193 ',']: s#375
[#194 ',']: s#378
[#195 ',']: s#375
[#196 ',']: s#375
[#197 ',']: s#372
[#198 ')']: r#98
[#198 ',']: r#98
[#198 ':']: r#98
[#198 ';']: r#98
[#198 ']']: r#98
[#198 '{']: r#98
[#198 '||']: r#99
[#199 '!=']: r#33
[#199 '%']: r#33
[#199 '&&']: r#33
[#199 ')']: r#33
[#199 '*']: r#33
[#199 '+']: r#33
[#199 ',']: r#33
[#199 '-']: r#33
[#199 '/']: r#33
[#199 ':']: r#33
[#199 ';']: r#33
[#199 '==']: r#33
[#199 ']']: r#33
[#199 '{']: r#33
[#199 '||']: r#33
[#199 /\u200B_greater_than/]: r#33
[#199 /\u200B_greater_than_equal/]: r#33
[#199 /\u200B_less_than/]: r#33
[#199 /\u200B_less_than_equal/]: r#33
[#199 /\u200B_shift_left/]: s#160
[#199 /\u200B_shift_right/]: s#161
[#199 /\u200B_template_args_end/]: r#33
[#200 '&&']: r#101
[#200 ')']: r#100
[#200 ',']: r#100
[#200 ':']: r#100
[#200 ';']: r#100
[#200 ']']: r#100
[#200 '{']: r#100
[#201 '&&']: r#102
[#201 ')']: r#102
[#201 ',']: r#102
[#201 ':']: r#102
[#201 ';']: r#102
[#201 ']']: r#102
[#201 '{']: r#102
[#201 '||']: r#102
[#201 /\u200B_template_args_end/]: r#102
[#202 '&&']: r#103
[#202 ')']: r#103
[#202 ',']: r#103
[#202 ':']: r#103
[#202 ';']: r#103
[#202 ']']: r#103
[#202 '{']: r#103
[#202 '||']: r#103
[#202 /\u200B_template_args_end/]: r#103
[#203 '&&']: r#104
[#203 ')']: r#104
[#203 ',']: r#104
[#203 ':']: r#104
[#203 ';']: r#104
[#203 ']']: r#104
[#203 '{']: r#104
[#203 '||']: r#104
[#203 /\u200B_template_args_end/]: r#104
[#204 '&&']: r#105
[#204 ')']: r#105
[#204 ',']: r#105
[#204 ':']: r#105
[#204 ';']: r#105
[#204 ']']: r#105
[#204 '{']: r#105
[#204 '||']: r#105
[#204 /\u200B_template_args_end/]: r#105
[#205 '&&']: r#106
[#205 ')']: r#106
[#205 ',']: r#106
[#205 ':']: r#106
[#205 ';']: r#106
[#205 ']']: r#106
[#205 '{']: r#106
[#205 '||']: r#106
[#205 /\u200B_template_args_end/]: r#106
[#206 '&&']: r#107
[#206 ')']: r#107
[#206 ',']: r#107
[#206 ':']: r#107
[#206 ';']: r#107
[#206 ']']: r#107
[#206 '{']: r#107
[#206 '||']: r#107
[#206 /\u200B_template_args_end/]: r#107
[#207 '&']: r#109
[#207 ')']: r#108
[#207 ',']: r#108
[#207 ':']: r#108
[#207 ';']: r#108
[#207 ']']: r#108
[#207 '{']: r#108
[#207 /\u200B_template_args_end/]: r#108
[#208 ')']: r#110
[#208 ',']: r#110
[#208 ':']: r#110
[#208 ';']: r#110
[#208 ']']: r#110
[#208 '{']: r#110
[#208 '|']: r#111
[#208 /\u200B_template_args_end/]: r#110
[#209 ')']: r#112
[#209 ',']: r#112
[#209 ':']: r#112
[#209 ';']: r#112
[#209 ']']: r#112
[#209 '^']: r#113
[#209 '{']: r#112
[#209 /\u200B_template_args_end/]: r#112
[#210 '!=']: r#114
[#210 '%']: s#157
[#210 '&&']: r#114
[#210 ')']: r#114
[#210 '*']: s#155
[#210 '+']: r#114
[#210 ',']: r#114
[#210 '-']: r#114
[#210 '/']: s#156
[#210 ':']: r#114
[#210 ';']: r#114
[#210 '==']: r#114
[#210 ']']: r#114
[#210 '{']: r#114
[#210 '||']: r#114
[#210 /\u200B_greater_than/]: r#114
[#210 /\u200B_greater_than_equal/]: r#114
[#210 /\u200B_less_than/]: r#114
[#210 /\u200B_less_than_equal/]: r#114
[#210 /\u200B_template_args_end/]: r#114
[#211 '!=']: r#33
[#211 '%']: r#33
[#211 '&&']: r#33
[#211 ')']: r#33
[#211 '*']: r#33
[#211 '+']: r#33
[#211 ',']: r#33
[#211 '-']: r#33
[#211 '/']: r#33
[#211 ':']: r#33
[#211 ';']: r#33
[#211 '==']: r#33
[#211 ']']: r#33
[#211 '{']: r#33
[#211 '||']: r#33
[#211 /\u200B_greater_than/]: r#33
[#211 /\u200B_greater_than_equal/]: r#33
[#211 /\u200B_less_than/]: r#33
[#211 /\u200B_less_than_equal/]: r#33
[#211 /\u200B_template_args_end/]: r#33
[#212 '!=']: r#115
[#212 '&&']: r#115
[#212 ')']: r#115
[#212 ',']: r#115
[#212 ':']: r#115
[#212 ';']: r#115
[#212 '==']: r#115
[#212 ']']: r#115
[#212 '{']: r#115
[#212 '||']: r#115
[#212 /\u200B_greater_than/]: r#115
[#212 /\u200B_greater_than_equal/]: r#115
[#212 /\u200B_less_than/]: r#115
[#212 /\u200B_less_than_equal/]: r#115
[#212 /\u200B_template_args_end/]: r#115
[#213 '!=']: r#116
[#213 '&&']: r#116
[#213 ')']: r#116
[#213 ',']: r#116
[#213 ':']: r#116
[#213 ';']: r#116
[#213 '==']: r#116
[#213 ']']: r#116
[#213 '{']: r#116
[#213 '||']: r#116
[#213 /\u200B_greater_than/]: r#116
[#213 /\u200B_greater_than_equal/]: r#116
[#213 /\u200B_less_than/]: r#116
[#213 /\u200B_less_than_equal/]: r#116
[#213 /\u200B_template_args_end/]: r#116
[#214 '!=']: r#117
[#214 '%']: r#117
[#214 '&&']: r#117
[#214 ')']: r#117
[#214 '*']: r#117
[#214 '+']: r#117
[#214 ',']: r#117
[#214 '-']: r#117
[#214 '/']: r#117
[#214 ':']: r#117
[#214 ';']: r#117
[#214 '==']: r#117
[#214 ']']: r#117
[#214 '{']: r#117
[#214 '||']: r#117
[#214 /\u200B_greater_than/]: r#117
[#214 /\u200B_greater_than_equal/]: r#117
[#214 /\u200B_less_than/]: r#117
[#214 /\u200B_less_than_equal/]: r#117
[#214 /\u200B_template_args_end/]: r#117
[#215 '.']: s#148
[#215 '[']: s#147
[#216 '.']: s#148
[#216 '[']: s#147
[#217 '!=']: r#118
[#217 '%']: r#118
[#217 '%=']: r#118
[#217 '&&']: r#118
[#217 '&']: r#118
[#217 '&=']: r#118
[#217 ')']: r#118
[#217 '*']: r#118
[#217 '*=']: r#118
[#217 '+']: r#118
[#217 '++']: r#118
[#217 '+=']: r#118
[#217 ',']: r#118
[#217 '-']: r#118
[#217 '--']: r#118
[#217 '-=']: r#118
[#217 '.']: r#118
[#217 '/']: r#118
[#217 '/=']: r#118
[#217 ':']: r#118
[#217 ';']: r#118
[#217 '=']: r#118
[#217 '==']: r#118
[#217 '[']: r#118
[#217 ']']: r#118
[#217 '^']: r#118
[#217 '^=']: r#118
[#217 '{']: r#118
[#217 '|']: r#118
[#217 '|=']: r#118
[#217 '||']: r#118
[#217 /\u200B_greater_than/]: r#118
[#217 /\u200B_greater_than_equal/]: r#118
[#217 /\u200B_less_than/]: r#118
[#217 /\u200B_less_than_equal/]: r#118
[#217 /\u200B_shift_left/]: r#118
[#217 /\u200B_shift_left_assign/]: r#118
[#217 /\u200B_shift_right/]: r#118
[#217 /\u200B_shift_right_assign/]: r#118
[#217 /\u200B_template_args_end/]: r#118
[#218 '!=']: r#119
[#218 '%']: r#119
[#218 '%=']: r#119
[#218 '&&']: r#119
[#218 '&']: r#119
[#218 '&=']: r#119
[#218 ')']: r#119
[#218 '*']: r#119
[#218 '*=']: r#119
[#218 '+']: r#119
[#218 '++']: r#119
[#218 '+=']: r#119
[#218 ',']: r#119
[#218 '-']: r#119
[#218 '--']: r#119
[#218 '-=']: r#119
[#218 '.']: r#119
[#218 '/']: r#119
[#218 '/=']: r#119
[#218 ':']: r#119
[#218 ';']: r#119
[#218 '=']: r#119
[#218 '==']: r#119
[#218 '[']: r#119
[#218 ']']: r#119
[#218 '^']: r#119
[#218 '^=']: r#119
[#218 '{']: r#119
[#218 '|']: r#119
[#218 '|=']: r#119
[#218 '||']: r#119
[#218 /\u200B_greater_than/]: r#119
[#218 /\u200B_greater_than_equal/]: r#119
[#218 /\u200B_less_than/]: r#119
[#218 /\u200B_less_than_equal/]: r#119
[#218 /\u200B_shift_left/]: r#119
[#218 /\u200B_shift_left_assign/]: r#119
[#218 /\u200B_shift_right/]: r#119
[#218 /\u200B_shift_right_assign/]: r#119
[#218 /\u200B_template_args_end/]: r#119
[#219 '!=']: r#120
[#219 '%']: r#120
[#219 '%=']: r#120
[#219 '&&']: r#120
[#219 '&']: r#120
[#219 '&=']: r#120
[#219 ')']: r#120
[#219 '*']: r#120
[#219 '*=']: r#120
[#219 '+']: r#120
[#219 '++']: r#120
[#219 '+=']: r#120
[#219 ',']: r#120
[#219 '-']: r#120
[#219 '--']: r#120
[#219 '-=']: r#120
[#219 '.']: r#120
[#219 '/']: r#120
[#219 '/=']: r#120
[#219 ':']: r#120
[#219 ';']: r#120
[#219 '=']: r#120
[#219 '==']: r#120
[#219 '[']: r#120
[#219 ']']: r#120
[#219 '^']: r#120
[#219 '^=']: r#120
[#219 '{']: r#120
[#219 '|']: r#120
[#219 '|=']: r#120
[#219 '||']: r#120
[#219 /\u200B_greater_than/]: r#120
[#219 /\u200B_greater_than_equal/]: r#120
[#219 /\u200B_less_than/]: r#120
[#219 /\u200B_less_than_equal/]: r#120
[#219 /\u200B_shift_left/]: r#120
[#219 /\u200B_shift_left_assign/]: r#120
[#219 /\u200B_shift_right/]: r#120
[#219 /\u200B_shift_right_assign/]: r#120
[#219 /\u200B_template_args_end/]: r#120
[#220 '!=']: r#121
[#220 '%']: r#121
[#220 '%=']: r#121
[#220 '&&']: r#121
[#220 '&']: r#121
[#220 '&=']: r#121
[#220 ')']: r#121
[#220 '*']: r#121
[#220 '*=']: r#121
[#220 '+']: r#121
[#220 '++']: r#121
[#220 '+=']: r#121
[#220 ',']: r#121
[#220 '-']: r#121
[#220 '--']: r#121
[#220 '-=']: r#121
[#220 '.']: r#121
[#220 '/']: r#121
[#220 '/=']: r#121
[#220 ':']: r#121
[#220 ';']: r#121
[#220 '=']: r#121
[#220 '==']: r#121
[#220 '[']: r#121
[#220 ']']: r#121
[#220 '^']: r#121
[#220 '^=']: r#121
[#220 '{']: r#121
[#220 '|']: r#121
[#220 '|=']: r#121
[#220 '||']: r#121
[#220 /\u200B_greater_than/]: r#121
[#220 /\u200B_greater_than_equal/]: r#121
[#220 /\u200B_less_than/]: r#121
[#220 /\u200B_less_than_equal/]: r#121
[#220 /\u200B_shift_left/]: r#121
[#220 /\u200B_shift_left_assign/]: r#121
[#220 /\u200B_shift_right/]: r#121
[#220 /\u200B_shift_right_assign/]: r#121
[#220 /\u200B_template_args_end/]: r#121
[#221 '!=']: r#122
[#221 '%']: r#122
[#221 '%=']: r#122
[#221 '&&']: r#122
[#221 '&']: r#122
[#221 '&=']: r#122
[#221 ')']: r#122
[#221 '*']: r#122
[#221 '*=']: r#122
[#221 '+']: r#122
[#221 '++']: r#122
[#221 '+=']: r#122
[#221 ',']: r#122
[#221 '-']: r#122
[#221 '--']: r#122
[#221 '-=']: r#122
[#221 '.']: r#122
[#221 '/']: r#122
[#221 '/=']: r#122
[#221 ':']: r#122
[#221 ';']: r#122
[#221 '=']: r#122
[#221 '==']: r#122
[#221 '[']: r#122
[#221 ']']: r#122
[#221 '^']: r#122
[#221 '^=']: r#122
[#221 '{']: r#122
[#221 '|']: r#122
[#221 '|=']: r#122
[#221 '||']: r#122
[#221 /\u200B_greater_than/]: r#122
[#221 /\u200B_greater_than_equal/]: r#122
[#221 /\u200B_less_than/]: r#122
[#221 /\u200B_less_than_equal/]: r#122
[#221 /\u200B_shift_left/]: r#122
[#221 /\u200B_shift_left_assign/]: r#122
[#221 /\u200B_shift_right/]: r#122
[#221 /\u200B_shift_right_assign/]: r#122
[#221 /\u200B_template_args_end/]: r#122
[#222 '!=']: r#123
[#222 '%']: r#123
[#222 '%=']: r#123
[#222 '&&']: r#123
[#222 '&']: r#123
[#222 '&=']: r#123
[#222 ')']: r#123
[#222 '*']: r#123
[#222 '*=']: r#123
[#222 '+']: r#123
[#222 '++']: r#123
[#222 '+=']: r#123
[#222 ',']: r#123
[#222 '-']: r#123
[#222 '--']: r#123
[#222 '-=']: r#123
[#222 '.']: r#123
[#222 '/']: r#123
[#222 '/=']: r#123
[#222 ':']: r#123
[#222 ';']: r#123
[#222 '=']: r#123
[#222 '==']: r#123
[#222 '[']: r#123
[#222 ']']: r#123
[#222 '^']: r#123
[#222 '^=']: r#123
[#222 '{']: r#123
[#222 '|']: r#123
[#222 '|=']: r#123
[#222 '||']: r#123
[#222 /\u200B_greater_than/]: r#123
[#222 /\u200B_greater_than_equal/]: r#123
[#222 /\u200B_less_than/]: r#123
[#222 /\u200B_less_than_equal/]: r#123
[#222 /\u200B_shift_left/]: r#123
[#222 /\u200B_shift_left_assign/]: r#123
[#222 /\u200B_shift_right/]: r#123
[#222 /\u200B_shift_right_assign/]: r#123
[#222 /\u200B_template_args_end/]: r#123
[#223 '!=']: r#124
[#223 '%']: r#124
[#223 '%=']: r#124
[#223 '&&']: r#124
[#223 '&']: r#124
[#223 '&=']: r#124
[#223 ')']: r#124
[#223 '*']: r#124
[#223 '*=']: r#124
[#223 '+']: r#124
[#223 '++']: r#124
[#223 '+=']: r#124
[#223 ',']: r#124
[#223 '-']: r#124
[#223 '--']: r#124
[#223 '-=']: r#124
[#223 '.']: r#124
[#223 '/']: r#124
[#223 '/=']: r#124
[#223 ':']: r#124
[#223 ';']: r#124
[#223 '=']: r#124
[#223 '==']: r#124
[#223 '[']: r#124
[#223 ']']: r#124
[#223 '^']: r#124
[#223 '^=']: r#124
[#223 '{']: r#124
[#223 '|']: r#124
[#223 '|=']: r#124
[#223 '||']: r#124
[#223 /\u200B_greater_than/]: r#124
[#223 /\u200B_greater_than_equal/]: r#124
[#223 /\u200B_less_than/]: r#124
[#223 /\u200B_less_than_equal/]: r#124
[#223 /\u200B_shift_left/]: r#124
[#223 /\u200B_shift_left_assign/]: r#124
[#223 /\u200B_shift_right/]: r#124
[#223 /\u200B_shift_right_assign/]: r#124
[#223 /\u200B_template_args_end/]: r#124
[#224 '!=']: r#125
[#224 '%']: r#125
[#224 '%=']: r#125
[#224 '&&']: r#125
[#224 '&']: r#125
[#224 '&=']: r#125
[#224 ')']: r#125
[#224 '*']: r#125
[#224 '*=']: r#125
[#224 '+']: r#125
[#224 '++']: r#125
[#224 '+=']: r#125
[#224 ',']: r#125
[#224 '-']: r#125
[#224 '--']: r#125
[#224 '-=']: r#125
[#224 '.']: r#125
[#224 '/']: r#125
[#224 '/=']: r#125
[#224 ':']: r#125
[#224 ';']: r#125
[#224 '=']: r#125
[#224 '==']: r#125
[#224 '[']: r#125
[#224 ']']: r#125
[#224 '^']: r#125
[#224 '^=']: r#125
[#224 '{']: r#125
[#224 '|']: r#125
[#224 '|=']: r#125
[#224 '||']: r#125
[#224 /\u200B_greater_than/]: r#125
[#224 /\u200B_greater_than_equal/]: r#125
[#224 /\u200B_less_than/]: r#125
[#224 /\u200B_less_than_equal/]: r#125
[#224 /\u200B_shift_left/]: r#125
[#224 /\u200B_shift_left_assign/]: r#125
[#224 /\u200B_shift_right/]: r#125
[#224 /\u200B_shift_right_assign/]: r#125
[#224 /\u200B_template_args_end/]: r#125
[#225 '!=']: r#126
[#225 '%']: r#126
[#225 '%=']: r#126
[#225 '&&']: r#126
[#225 '&']: r#126
[#225 '&=']: r#126
[#225 ')']: r#126
[#225 '*']: r#126
[#225 '*=']: r#126
[#225 '+']: r#126
[#225 '++']: r#126
[#225 '+=']: r#126
[#225 ',']: r#126
[#225 '-']: r#126
[#225 '--']: r#126
[#225 '-=']: r#126
[#225 '.']: r#126
[#225 '/']: r#126
[#225 '/=']: r#126
[#225 ':']: r#126
[#225 ';']: r#126
[#225 '=']: r#126
[#225 '==']: r#126
[#225 '[']: r#126
[#225 ']']: r#126
[#225 '^']: r#126
[#225 '^=']: r#126
[#225 '{']: r#126
[#225 '|']: r#126
[#225 '|=']: r#126
[#225 '||']: r#126
[#225 /\u200B_greater_than/]: r#126
[#225 /\u200B_greater_than_equal/]: r#126
[#225 /\u200B_less_than/]: r#126
[#225 /\u200B_less_than_equal/]: r#126
[#225 /\u200B_shift_left/]: r#126
[#225 /\u200B_shift_left_assign/]: r#126
[#225 /\u200B_shift_right/]: r#126
[#225 /\u200B_shift_right_assign/]: r#126
[#225 /\u200B_template_args_end/]: r#126
[#226 ']']: s#366
[#227 ')']: s#365
[#228 ')']: r#127
[#229 ',']: s#364
[#230 '!=']: r#128
[#230 '%']: r#128
[#230 '&&']: r#128
[#230 '&']: r#128
[#230 '(']: r#128
[#230 ')']: r#128
[#230 '*']: r#128
[#230 '+']: r#128
[#230 ',']: r#128
[#230 '-']: r#128
[#230 '.']: r#128
[#230 '/']: r#128
[#230 ':']: r#128
[#230 ';']: r#128
[#230 '==']: r#128
[#230 '[']: r#128
[#230 ']']: r#128
[#230 '^']: r#128
[#230 '{']: r#128
[#230 '|']: r#128
[#230 '||']: r#128
[#230 /\u200B_greater_than/]: r#128
[#230 /\u200B_greater_than_equal/]: r#128
[#230 /\u200B_less_than/]: r#128
[#230 /\u200B_less_than_equal/]: r#128
[#230 /\u200B_shift_left/]: r#128
[#230 /\u200B_shift_right/]: r#128
[#230 /\u200B_template_args_end/]: r#128
[#231 '!=']: r#129
[#231 '%']: r#129
[#231 '&&']: r#129
[#231 '&']: r#129
[#231 '(']: r#129
[#231 ')']: r#129
[#231 '*']: r#129
[#231 '+']: r#129
[#231 ',']: r#129
[#231 '-']: r#129
[#231 '.']: r#129
[#231 '/']: r#129
[#231 ':']: r#129
[#231 ';']: r#129
[#231 '=']: r#129
[#231 '==']: r#129
[#231 '[']: r#129
[#231 ']']: r#129
[#231 '^']: r#129
[#231 '{']: r#129
[#231 '|']: r#129
[#231 '||']: r#129
[#231 '}']: r#129
[#231 /\u200B_greater_than/]: r#129
[#231 /\u200B_greater_than_equal/]: r#129
[#231 /\u200B_less_than/]: r#129
[#231 /\u200B_less_than_equal/]: r#129
[#231 /\u200B_shift_left/]: r#129
[#231 /\u200B_shift_right/]: r#129
[#231 /\u200B_template_args_end/]: r#129
[#232 '!']: s#69
[#232 '&']: s#72
[#232 '(']: s#82
[#232 '*']: s#71
[#232 '-']: s#68
[#232 'false']: s#89
[#232 'true']: s#88
[#232 '~']: s#70
[#232 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#232 /0[fh]/]: s#94
[#232 /0[iu]?/]: s#91
[#232 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#232 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#232 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#232 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#232 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#232 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#232 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#232 /[1-9][0-9]*[fh]/]: s#95
[#232 /[1-9][0-9]*[iu]?/]: s#92
[#233 '!']: r#130
[#233 '&']: r#130
[#233 '(']: r#130
[#233 '*']: r#130
[#233 '-']: r#130
[#233 'false']: r#130
[#233 'true']: r#130
[#233 '~']: r#130
[#233 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#130
[#233 /0[fh]/]: r#130
[#233 /0[iu]?/]: r#130
[#233 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#130
[#233 /0[xX][0-9a-fA-F]+[iu]?/]: r#130
[#233 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#130
[#233 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#130
[#233 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#130
[#233 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#130
[#233 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#130
[#233 /[1-9][0-9]*[fh]/]: r#130
[#233 /[1-9][0-9]*[iu]?/]: r#130
[#234 '!=']: r#131
[#234 '%']: r#131
[#234 '&&']: r#131
[#234 '&']: r#131
[#234 ')']: r#131
[#234 '*']: r#131
[#234 '+']: r#131
[#234 ',']: r#131
[#234 '-']: r#131
[#234 '.']: r#131
[#234 '/']: r#131
[#234 ':']: r#131
[#234 ';']: r#131
[#234 '==']: r#131
[#234 '[']: r#131
[#234 ']']: r#131
[#234 '^']: r#131
[#234 '{']: r#131
[#234 '|']: r#131
[#234 '||']: r#131
[#234 /\u200B_greater_than/]: r#131
[#234 /\u200B_greater_than_equal/]: r#131
[#234 /\u200B_less_than/]: r#131
[#234 /\u200B_less_than_equal/]: r#131
[#234 /\u200B_shift_left/]: r#131
[#234 /\u200B_shift_right/]: r#131
[#234 /\u200B_template_args_end/]: r#131
[#235 '}']: s#354
[#236 '}']: r#132
[#237 '&']: s#274
[#237 '(']: s#275
[#237 '*']: s#273
[#237 ';']: s#238
[#237 '_']: s#271
[#237 'break']: s#263
[#237 'const']: s#262
[#237 'const_assert']: s#31
[#237 'continue']: s#264
[#237 'discard']: s#249
[#237 'for']: s#257
[#237 'if']: s#268
[#237 'let']: s#261
[#237 'loop']: s#256
[#237 'return']: s#253
[#237 'switch']: s#255
[#237 'var']: s#110
[#237 'while']: s#258
[#237 '{']: s#139
[#237 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#238 '&']: r#133
[#238 '(']: r#133
[#238 '*']: r#133
[#238 ';']: r#133
[#238 '_']: r#133
[#238 'break']: r#133
[#238 'const']: r#133
[#238 'const_assert']: r#133
[#238 'continue']: r#133
[#238 'continuing']: r#133
[#238 'discard']: r#133
[#238 'for']: r#133
[#238 'if']: r#133
[#238 'let']: r#133
[#238 'loop']: r#133
[#238 'return']: r#133
[#238 'switch']: r#133
[#238 'var']: r#133
[#238 'while']: r#133
[#238 '{']: r#133
[#238 '}']: r#133
[#238 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#133
[#239 ';']: s#352
[#240 '&']: r#134
[#240 '(']: r#134
[#240 '*']: r#134
[#240 ';']: r#134
[#240 '_']: r#134
[#240 'break']: r#134
[#240 'const']: r#134
[#240 'const_assert']: r#134
[#240 'continue']: r#134
[#240 'continuing']: r#134
[#240 'discard']: r#134
[#240 'for']: r#134
[#240 'if']: r#134
[#240 'let']: r#134
[#240 'loop']: r#134
[#240 'return']: r#134
[#240 'switch']: r#134
[#240 'var']: r#134
[#240 'while']: r#134
[#240 '{']: r#134
[#240 '}']: r#134
[#240 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#134
[#241 '&']: r#135
[#241 '(']: r#135
[#241 '*']: r#135
[#241 ';']: r#135
[#241 '_']: r#135
[#241 'break']: r#135
[#241 'const']: r#135
[#241 'const_assert']: r#135
[#241 'continue']: r#135
[#241 'continuing']: r#135
[#241 'discard']: r#135
[#241 'for']: r#135
[#241 'if']: r#135
[#241 'let']: r#135
[#241 'loop']: r#135
[#241 'return']: r#135
[#241 'switch']: r#135
[#241 'var']: r#135
[#241 'while']: r#135
[#241 '{']: r#135
[#241 '}']: r#135
[#241 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#135
[#242 '&']: r#136
[#242 '(']: r#136
[#242 '*']: r#136
[#242 ';']: r#136
[#242 '_']: r#136
[#242 'break']: r#136
[#242 'const']: r#136
[#242 'const_assert']: r#136
[#242 'continue']: r#136
[#242 'continuing']: r#136
[#242 'discard']: r#136
[#242 'for']: r#136
[#242 'if']: r#136
[#242 'let']: r#136
[#242 'loop']: r#136
[#242 'return']: r#136
[#242 'switch']: r#136
[#242 'var']: r#136
[#242 'while']: r#136
[#242 '{']: r#136
[#242 '}']: r#136
[#242 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#136
[#243 '&']: r#137
[#243 '(']: r#137
[#243 '*']: r#137
[#243 ';']: r#137
[#243 '_']: r#137
[#243 'break']: r#137
[#243 'const']: r#137
[#243 'const_assert']: r#137
[#243 'continue']: r#137
[#243 'continuing']: r#137
[#243 'discard']: r#137
[#243 'for']: r#137
[#243 'if']: r#137
[#243 'let']: r#137
[#243 'loop']: r#137
[#243 'return']: r#137
[#243 'switch']: r#137
[#243 'var']: r#137
[#243 'while']: r#137
[#243 '{']: r#137
[#243 '}']: r#137
[#243 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#137
[#244 '&']: r#138
[#244 '(']: r#138
[#244 '*']: r#138
[#244 ';']: r#138
[#244 '_']: r#138
[#244 'break']: r#138
[#244 'const']: r#138
[#244 'const_assert']: r#138
[#244 'continue']: r#138
[#244 'continuing']: r#138
[#244 'discard']: r#138
[#244 'for']: r#138
[#244 'if']: r#138
[#244 'let']: r#138
[#244 'loop']: r#138
[#244 'return']: r#138
[#244 'switch']: r#138
[#244 'var']: r#138
[#244 'while']: r#138
[#244 '{']: r#138
[#244 '}']: r#138
[#244 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#138
[#245 ';']: s#351
[#246 ';']: s#350
[#247 ';']: s#349
[#248 ';']: s#348
[#249 ';']: s#347
[#250 ';']: s#346
[#251 '&']: r#139
[#251 '(']: r#139
[#251 '*']: r#139
[#251 ';']: r#139
[#251 '_']: r#139
[#251 'break']: r#139
[#251 'const']: r#139
[#251 'const_assert']: r#139
[#251 'continue']: r#139
[#251 'continuing']: r#139
[#251 'discard']: r#139
[#251 'for']: r#139
[#251 'if']: r#139
[#251 'let']: r#139
[#251 'loop']: r#139
[#251 'return']: r#139
[#251 'switch']: r#139
[#251 'var']: r#139
[#251 'while']: r#139
[#251 '{']: r#139
[#251 '}']: r#139
[#251 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#139
[#252 ';']: s#345
[#253 '!']: s#69
[#253 '&']: s#72
[#253 '(']: s#82
[#253 '*']: s#71
[#253 '-']: s#68
[#253 'false']: s#89
[#253 'true']: s#88
[#253 '~']: s#70
[#253 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#253 /0[fh]/]: s#94
[#253 /0[iu]?/]: s#91
[#253 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#253 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#253 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#253 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#253 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#253 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#253 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#253 /[1-9][0-9]*[fh]/]: s#95
[#253 /[1-9][0-9]*[iu]?/]: s#92
[#254 'else']: s#342
[#255 '!']: s#69
[#255 '&']: s#72
[#255 '(']: s#82
[#255 '*']: s#71
[#255 '-']: s#68
[#255 'false']: s#89
[#255 'true']: s#88
[#255 '~']: s#70
[#255 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#255 /0[fh]/]: s#94
[#255 /0[iu]?/]: s#91
[#255 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#255 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#255 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#255 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#255 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#255 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#255 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#255 /[1-9][0-9]*[fh]/]: s#95
[#255 /[1-9][0-9]*[iu]?/]: s#92
[#256 '{']: s#337
[#257 '(']: s#336
[#258 '!']: s#69
[#258 '&']: s#72
[#258 '(']: s#82
[#258 '*']: s#71
[#258 '-']: s#68
[#258 'false']: s#89
[#258 'true']: s#88
[#258 '~']: s#70
[#258 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#258 /0[fh]/]: s#94
[#258 /0[iu]?/]: s#91
[#258 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#258 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#258 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#258 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#258 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#258 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#258 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#258 /[1-9][0-9]*[fh]/]: s#95
[#258 /[1-9][0-9]*[iu]?/]: s#92
[#259 '(']: s#144
[#260 ';']: r#140
[#260 '=']: s#333
[#261 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#262 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#263 ';']: r#141
[#264 ';']: r#142
[#265 ')']: r#143
[#265 ';']: r#143
[#266 ')']: r#144
[#266 ';']: r#144
[#267 ')']: r#145
[#267 ';']: r#145
[#268 '!']: s#69
[#268 '&']: s#72
[#268 '(']: s#82
[#268 '*']: s#71
[#268 '-']: s#68
[#268 'false']: s#89
[#268 'true']: s#88
[#268 '~']: s#70
[#268 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#268 /0[fh]/]: s#94
[#268 /0[iu]?/]: s#91
[#268 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#268 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#268 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#268 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#268 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#268 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#268 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#268 /[1-9][0-9]*[fh]/]: s#95
[#268 /[1-9][0-9]*[iu]?/]: s#92
[#269 /\u200B_disambiguate_template/]: s#127
[#270 '%=']: s#321
[#270 '&=']: s#322
[#270 '*=']: s#319
[#270 '++']: s#313
[#270 '+=']: s#317
[#270 '--']: s#314
[#270 '-=']: s#318
[#270 '/=']: s#320
[#270 '=']: s#315
[#270 '^=']: s#324
[#270 '|=']: s#323
[#270 /\u200B_shift_left_assign/]: s#328
[#270 /\u200B_shift_right_assign/]: s#327
[#271 '=']: s#311
[#272 '.']: s#148
[#272 '[']: s#147
[#273 '&']: s#274
[#273 '(']: s#275
[#273 '*']: s#273
[#273 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#274 '&']: s#274
[#274 '(']: s#275
[#274 '*']: s#273
[#274 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#275 '&']: s#274
[#275 '(']: s#275
[#275 '*']: s#273
[#275 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#276 '@']: s#36
[#277 ',']: s#298
[#278 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#217
[#279 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#146
[#280 '@']: s#36
[#281 ';']: r#147
[#282 /\u200B_disambiguate_template/]: s#127
[#283 ';']: r#148
[#284 '!']: s#69
[#284 '&']: s#72
[#284 '(']: s#82
[#284 '*']: s#71
[#284 '-']: s#68
[#284 'false']: s#89
[#284 'true']: s#88
[#284 '~']: s#70
[#284 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#284 /0[fh]/]: s#94
[#284 /0[iu]?/]: s#91
[#284 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#284 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#284 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#284 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#284 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#284 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#284 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#284 /[1-9][0-9]*[fh]/]: s#95
[#284 /[1-9][0-9]*[iu]?/]: s#92
[#285 ';']: r#149
[#286 ';']: r#150
[#286 '=']: r#150
[#287 ';']: r#151
[#288 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#289 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#152
[#290 ';']: r#153
[#290 '=']: r#153
[#291 ';']: r#154
[#292 /\u200B_template_args_start/]: s#233
[#293 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#155
[#294 ':']: s#436
[#295 ',']: s#435
[#296 ',']: r#156
[#296 '}']: r#156
[#297 ',']: s#298
[#298 '@']: s#36
[#299 ')']: s#431
[#300 ')']: r#157
[#301 ',']: s#430
[#302 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#303 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#158
[#304 '@']: s#36
[#305 ')']: s#424
[#306 /\u200B_disambiguate_template/]: s#127
[#307 '%=']: r#159
[#307 '&=']: r#159
[#307 ')']: r#159
[#307 '*=']: r#159
[#307 '++']: r#159
[#307 '+=']: r#159
[#307 '--']: r#159
[#307 '-=']: r#159
[#307 '/=']: r#159
[#307 '=']: r#159
[#307 '^=']: r#159
[#307 '|=']: r#159
[#307 /\u200B_shift_left_assign/]: r#159
[#307 /\u200B_shift_right_assign/]: r#159
[#308 '%=']: r#160
[#308 '&=']: r#160
[#308 ')']: r#160
[#308 '*=']: r#160
[#308 '++']: r#160
[#308 '+=']: r#160
[#308 '--']: r#160
[#308 '-=']: r#160
[#308 '/=']: r#160
[#308 '=']: r#160
[#308 '^=']: r#160
[#308 '|=']: r#160
[#308 /\u200B_shift_left_assign/]: r#160
[#308 /\u200B_shift_right_assign/]: r#160
[#309 '%=']: r#161
[#309 '&=']: r#161
[#309 ')']: r#161
[#309 '*=']: r#161
[#309 '++']: r#161
[#309 '+=']: r#161
[#309 '--']: r#161
[#309 '-=']: r#161
[#309 '/=']: r#161
[#309 '=']: r#161
[#309 '^=']: r#161
[#309 '|=']: r#161
[#309 /\u200B_shift_left_assign/]: r#161
[#309 /\u200B_shift_right_assign/]: r#161
[#310 '%=']: r#162
[#310 '&=']: r#162
[#310 ')']: r#162
[#310 '*=']: r#162
[#310 '++']: r#162
[#310 '+=']: r#162
[#310 '--']: r#162
[#310 '-=']: r#162
[#310 '/=']: r#162
[#310 '=']: r#162
[#310 '^=']: r#162
[#310 '|=']: r#162
[#310 /\u200B_shift_left_assign/]: r#162
[#310 /\u200B_shift_right_assign/]: r#162
[#311 '!']: s#69
[#311 '&']: s#72
[#311 '(']: s#82
[#311 '*']: s#71
[#311 '-']: s#68
[#311 'false']: s#89
[#311 'true']: s#88
[#311 '~']: s#70
[#311 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#311 /0[fh]/]: s#94
[#311 /0[iu]?/]: s#91
[#311 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#311 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#311 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#311 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#311 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#311 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#311 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#311 /[1-9][0-9]*[fh]/]: s#95
[#311 /[1-9][0-9]*[iu]?/]: s#92
[#312 '!']: s#69
[#312 '&']: s#72
[#312 '(']: s#82
[#312 '*']: s#71
[#312 '-']: s#68
[#312 'false']: s#89
[#312 'true']: s#88
[#312 '~']: s#70
[#312 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#312 /0[fh]/]: s#94
[#312 /0[iu]?/]: s#91
[#312 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#312 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#312 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#312 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#312 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#312 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#312 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#312 /[1-9][0-9]*[fh]/]: s#95
[#312 /[1-9][0-9]*[iu]?/]: s#92
[#313 ')']: r#163
[#313 ';']: r#163
[#314 ')']: r#164
[#314 ';']: r#164
[#315 '!']: r#165
[#315 '&']: r#165
[#315 '(']: r#165
[#315 '*']: r#165
[#315 '-']: r#165
[#315 'false']: r#165
[#315 'true']: r#165
[#315 '~']: r#165
[#315 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#165
[#315 /0[fh]/]: r#165
[#315 /0[iu]?/]: r#165
[#315 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#165
[#315 /0[xX][0-9a-fA-F]+[iu]?/]: r#165
[#315 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#165
[#315 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#165
[#315 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#165
[#315 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#165
[#315 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#165
[#315 /[1-9][0-9]*[fh]/]: r#165
[#315 /[1-9][0-9]*[iu]?/]: r#165
[#316 '!']: r#166
[#316 '&']: r#166
[#316 '(']: r#166
[#316 '*']: r#166
[#316 '-']: r#166
[#316 'false']: r#166
[#316 'true']: r#166
[#316 '~']: r#166
[#316 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#166
[#316 /0[fh]/]: r#166
[#316 /0[iu]?/]: r#166
[#316 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#166
[#316 /0[xX][0-9a-fA-F]+[iu]?/]: r#166
[#316 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#166
[#316 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#166
[#316 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#166
[#316 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#166
[#316 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#166
[#316 /[1-9][0-9]*[fh]/]: r#166
[#316 /[1-9][0-9]*[iu]?/]: r#166
[#317 '!']: r#167
[#317 '&']: r#167
[#317 '(']: r#167
[#317 '*']: r#167
[#317 '-']: r#167
[#317 'false']: r#167
[#317 'true']: r#167
[#317 '~']: r#167
[#317 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#167
[#317 /0[fh]/]: r#167
[#317 /0[iu]?/]: r#167
[#317 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#167
[#317 /0[xX][0-9a-fA-F]+[iu]?/]: r#167
[#317 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#167
[#317 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#167
[#317 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#167
[#317 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#167
[#317 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#167
[#317 /[1-9][0-9]*[fh]/]: r#167
[#317 /[1-9][0-9]*[iu]?/]: r#167
[#318 '!']: r#168
[#318 '&']: r#168
[#318 '(']: r#168
[#318 '*']: r#168
[#318 '-']: r#168
[#318 'false']: r#168
[#318 'true']: r#168
[#318 '~']: r#168
[#318 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#168
[#318 /0[fh]/]: r#168
[#318 /0[iu]?/]: r#168
[#318 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#168
[#318 /0[xX][0-9a-fA-F]+[iu]?/]: r#168
[#318 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#168
[#318 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#168
[#318 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#168
[#318 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#168
[#318 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#168
[#318 /[1-9][0-9]*[fh]/]: r#168
[#318 /[1-9][0-9]*[iu]?/]: r#168
[#319 '!']: r#169
[#319 '&']: r#169
[#319 '(']: r#169
[#319 '*']: r#169
[#319 '-']: r#169
[#319 'false']: r#169
[#319 'true']: r#169
[#319 '~']: r#169
[#319 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#169
[#319 /0[fh]/]: r#169
[#319 /0[iu]?/]: r#169
[#319 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#169
[#319 /0[xX][0-9a-fA-F]+[iu]?/]: r#169
[#319 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#169
[#319 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#169
[#319 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#169
[#319 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#169
[#319 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#169
[#319 /[1-9][0-9]*[fh]/]: r#169
[#319 /[1-9][0-9]*[iu]?/]: r#169
[#320 '!']: r#170
[#320 '&']: r#170
[#320 '(']: r#170
[#320 '*']: r#170
[#320 '-']: r#170
[#320 'false']: r#170
[#320 'true']: r#170
[#320 '~']: r#170
[#320 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#170
[#320 /0[fh]/]: r#170
[#320 /0[iu]?/]: r#170
[#320 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#170
[#320 /0[xX][0-9a-fA-F]+[iu]?/]: r#170
[#320 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#170
[#320 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#170
[#320 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#170
[#320 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#170
[#320 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#170
[#320 /[1-9][0-9]*[fh]/]: r#170
[#320 /[1-9][0-9]*[iu]?/]: r#170
[#321 '!']: r#171
[#321 '&']: r#171
[#321 '(']: r#171
[#321 '*']: r#171
[#321 '-']: r#171
[#321 'false']: r#171
[#321 'true']: r#171
[#321 '~']: r#171
[#321 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#171
[#321 /0[fh]/]: r#171
[#321 /0[iu]?/]: r#171
[#321 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#171
[#321 /0[xX][0-9a-fA-F]+[iu]?/]: r#171
[#321 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#171
[#321 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#171
[#321 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#171
[#321 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#171
[#321 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#171
[#321 /[1-9][0-9]*[fh]/]: r#171
[#321 /[1-9][0-9]*[iu]?/]: r#171
[#322 '!']: r#172
[#322 '&']: r#172
[#322 '(']: r#172
[#322 '*']: r#172
[#322 '-']: r#172
[#322 'false']: r#172
[#322 'true']: r#172
[#322 '~']: r#172
[#322 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#172
[#322 /0[fh]/]: r#172
[#322 /0[iu]?/]: r#172
[#322 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#172
[#322 /0[xX][0-9a-fA-F]+[iu]?/]: r#172
[#322 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#172
[#322 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#172
[#322 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#172
[#322 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#172
[#322 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#172
[#322 /[1-9][0-9]*[fh]/]: r#172
[#322 /[1-9][0-9]*[iu]?/]: r#172
[#323 '!']: r#173
[#323 '&']: r#173
[#323 '(']: r#173
[#323 '*']: r#173
[#323 '-']: r#173
[#323 'false']: r#173
[#323 'true']: r#173
[#323 '~']: r#173
[#323 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#173
[#323 /0[fh]/]: r#173
[#323 /0[iu]?/]: r#173
[#323 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#173
[#323 /0[xX][0-9a-fA-F]+[iu]?/]: r#173
[#323 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#173
[#323 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#173
[#323 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#173
[#323 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#173
[#323 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#173
[#323 /[1-9][0-9]*[fh]/]: r#173
[#323 /[1-9][0-9]*[iu]?/]: r#173
[#324 '!']: r#174
[#324 '&']: r#174
[#324 '(']: r#174
[#324 '*']: r#174
[#324 '-']: r#174
[#324 'false']: r#174
[#324 'true']: r#174
[#324 '~']: r#174
[#324 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#174
[#324 /0[fh]/]: r#174
[#324 /0[iu]?/]: r#174
[#324 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#174
[#324 /0[xX][0-9a-fA-F]+[iu]?/]: r#174
[#324 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#174
[#324 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#174
[#324 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#174
[#324 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#174
[#324 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#174
[#324 /[1-9][0-9]*[fh]/]: r#174
[#324 /[1-9][0-9]*[iu]?/]: r#174
[#325 '!']: r#175
[#325 '&']: r#175
[#325 '(']: r#175
[#325 '*']: r#175
[#325 '-']: r#175
[#325 'false']: r#175
[#325 'true']: r#175
[#325 '~']: r#175
[#325 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#175
[#325 /0[fh]/]: r#175
[#325 /0[iu]?/]: r#175
[#325 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#175
[#325 /0[xX][0-9a-fA-F]+[iu]?/]: r#175
[#325 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#175
[#325 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#175
[#325 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#175
[#325 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#175
[#325 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#175
[#325 /[1-9][0-9]*[fh]/]: r#175
[#325 /[1-9][0-9]*[iu]?/]: r#175
[#326 '!']: r#176
[#326 '&']: r#176
[#326 '(']: r#176
[#326 '*']: r#176
[#326 '-']: r#176
[#326 'false']: r#176
[#326 'true']: r#176
[#326 '~']: r#176
[#326 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#176
[#326 /0[fh]/]: r#176
[#326 /0[iu]?/]: r#176
[#326 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#176
[#326 /0[xX][0-9a-fA-F]+[iu]?/]: r#176
[#326 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#176
[#326 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#176
[#326 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#176
[#326 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#176
[#326 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#176
[#326 /[1-9][0-9]*[fh]/]: r#176
[#326 /[1-9][0-9]*[iu]?/]: r#176
[#327 '!']: r#177
[#327 '&']: r#177
[#327 '(']: r#177
[#327 '*']: r#177
[#327 '-']: r#177
[#327 'false']: r#177
[#327 'true']: r#177
[#327 '~']: r#177
[#327 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#177
[#327 /0[fh]/]: r#177
[#327 /0[iu]?/]: r#177
[#327 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#177
[#327 /0[xX][0-9a-fA-F]+[iu]?/]: r#177
[#327 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#177
[#327 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#177
[#327 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#177
[#327 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#177
[#327 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#177
[#327 /[1-9][0-9]*[fh]/]: r#177
[#327 /[1-9][0-9]*[iu]?/]: r#177
[#328 '!']: r#178
[#328 '&']: r#178
[#328 '(']: r#178
[#328 '*']: r#178
[#328 '-']: r#178
[#328 'false']: r#178
[#328 'true']: r#178
[#328 '~']: r#178
[#328 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#178
[#328 /0[fh]/]: r#178
[#328 /0[iu]?/]: r#178
[#328 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: r#178
[#328 /0[xX][0-9a-fA-F]+[iu]?/]: r#178
[#328 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: r#178
[#328 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: r#178
[#328 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: r#178
[#328 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: r#178
[#328 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: r#178
[#328 /[1-9][0-9]*[fh]/]: r#178
[#328 /[1-9][0-9]*[iu]?/]: r#178
[#329 '%=']: r#179
[#329 '&=']: r#179
[#329 '*=']: r#179
[#329 '++']: r#179
[#329 '+=']: r#179
[#329 '--']: r#179
[#329 '-=']: r#179
[#329 '.']: r#179
[#329 '/=']: r#179
[#329 '=']: r#179
[#329 '[']: r#179
[#329 '^=']: r#179
[#329 '|=']: r#179
[#329 /\u200B_shift_left_assign/]: r#179
[#329 /\u200B_shift_right_assign/]: r#179
[#329 /\u200B_template_args_start/]: s#233
[#330 '{']: s#139
[#331 '=']: s#419
[#332 '=']: s#418
[#333 '!']: s#69
[#333 '&']: s#72
[#333 '(']: s#82
[#333 '*']: s#71
[#333 '-']: s#68
[#333 'false']: s#89
[#333 'true']: s#88
[#333 '~']: s#70
[#333 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#333 /0[fh]/]: s#94
[#333 /0[iu]?/]: s#91
[#333 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#333 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#333 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#333 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#333 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#333 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#333 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#333 /[1-9][0-9]*[fh]/]: s#95
[#333 /[1-9][0-9]*[iu]?/]: s#92
[#334 ')']: r#180
[#334 ';']: r#180
[#335 '{']: s#139
[#336 '&']: s#274
[#336 '(']: s#275
[#336 '*']: s#273
[#336 '_']: s#271
[#336 'const']: s#262
[#336 'let']: s#261
[#336 'var']: s#110
[#336 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#337 '&']: s#274
[#337 '(']: s#275
[#337 '*']: s#273
[#337 ';']: s#238
[#337 '_']: s#271
[#337 'break']: s#263
[#337 'const']: s#262
[#337 'const_assert']: s#31
[#337 'continue']: s#264
[#337 'discard']: s#249
[#337 'for']: s#257
[#337 'if']: s#268
[#337 'let']: s#261
[#337 'loop']: s#256
[#337 'return']: s#253
[#337 'switch']: s#255
[#337 'var']: s#110
[#337 'while']: s#258
[#337 '{']: s#139
[#337 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#338 '{']: s#406
[#339 'else']: s#405
[#340 '&']: r#181
[#340 '(']: r#181
[#340 '*']: r#181
[#340 ';']: r#181
[#340 '_']: r#181
[#340 'break']: r#181
[#340 'const']: r#181
[#340 'const_assert']: r#181
[#340 'continue']: r#181
[#340 'continuing']: r#181
[#340 'discard']: r#181
[#340 'else']: r#181
[#340 'for']: r#181
[#340 'if']: r#181
[#340 'let']: r#181
[#340 'loop']: r#181
[#340 'return']: r#181
[#340 'switch']: r#181
[#340 'var']: r#181
[#340 'while']: r#181
[#340 '{']: r#181
[#340 '}']: r#181
[#340 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#181
[#341 'else']: s#342
[#342 'if']: s#401
[#343 ';']: r#182
[#344 ';']: r#183
[#345 '&']: r#184
[#345 '(']: r#184
[#345 '*']: r#184
[#345 ';']: r#184
[#345 '_']: r#184
[#345 'break']: r#184
[#345 'const']: r#184
[#345 'const_assert']: r#184
[#345 'continue']: r#184
[#345 'continuing']: r#184
[#345 'discard']: r#184
[#345 'for']: r#184
[#345 'if']: r#184
[#345 'let']: r#184
[#345 'loop']: r#184
[#345 'return']: r#184
[#345 'switch']: r#184
[#345 'var']: r#184
[#345 'while']: r#184
[#345 '{']: r#184
[#345 '}']: r#184
[#345 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#184
[#346 '&']: r#185
[#346 '(']: r#185
[#346 '*']: r#185
[#346 ';']: r#185
[#346 '_']: r#185
[#346 'break']: r#185
[#346 'const']: r#185
[#346 'const_assert']: r#185
[#346 'continue']: r#185
[#346 'continuing']: r#185
[#346 'discard']: r#185
[#346 'for']: r#185
[#346 'if']: r#185
[#346 'let']: r#185
[#346 'loop']: r#185
[#346 'return']: r#185
[#346 'switch']: r#185
[#346 'var']: r#185
[#346 'while']: r#185
[#346 '{']: r#185
[#346 '}']: r#185
[#346 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#185
[#347 '&']: r#186
[#347 '(']: r#186
[#347 '*']: r#186
[#347 ';']: r#186
[#347 '_']: r#186
[#347 'break']: r#186
[#347 'const']: r#186
[#347 'const_assert']: r#186
[#347 'continue']: r#186
[#347 'continuing']: r#186
[#347 'discard']: r#186
[#347 'for']: r#186
[#347 'if']: r#186
[#347 'let']: r#186
[#347 'loop']: r#186
[#347 'return']: r#186
[#347 'switch']: r#186
[#347 'var']: r#186
[#347 'while']: r#186
[#347 '{']: r#186
[#347 '}']: r#186
[#347 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#186
[#348 '&']: r#187
[#348 '(']: r#187
[#348 '*']: r#187
[#348 ';']: r#187
[#348 '_']: r#187
[#348 'break']: r#187
[#348 'const']: r#187
[#348 'const_assert']: r#187
[#348 'continue']: r#187
[#348 'continuing']: r#187
[#348 'discard']: r#187
[#348 'for']: r#187
[#348 'if']: r#187
[#348 'let']: r#187
[#348 'loop']: r#187
[#348 'return']: r#187
[#348 'switch']: r#187
[#348 'var']: r#187
[#348 'while']: r#187
[#348 '{']: r#187
[#348 '}']: r#187
[#348 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#187
[#349 '&']: r#188
[#349 '(']: r#188
[#349 '*']: r#188
[#349 ';']: r#188
[#349 '_']: r#188
[#349 'break']: r#188
[#349 'const']: r#188
[#349 'const_assert']: r#188
[#349 'continue']: r#188
[#349 'continuing']: r#188
[#349 'discard']: r#188
[#349 'for']: r#188
[#349 'if']: r#188
[#349 'let']: r#188
[#349 'loop']: r#188
[#349 'return']: r#188
[#349 'switch']: r#188
[#349 'var']: r#188
[#349 'while']: r#188
[#349 '{']: r#188
[#349 '}']: r#188
[#349 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#188
[#350 '&']: r#189
[#350 '(']: r#189
[#350 '*']: r#189
[#350 ';']: r#189
[#350 '_']: r#189
[#350 'break']: r#189
[#350 'const']: r#189
[#350 'const_assert']: r#189
[#350 'continue']: r#189
[#350 'continuing']: r#189
[#350 'discard']: r#189
[#350 'for']: r#189
[#350 'if']: r#189
[#350 'let']: r#189
[#350 'loop']: r#189
[#350 'return']: r#189
[#350 'switch']: r#189
[#350 'var']: r#189
[#350 'while']: r#189
[#350 '{']: r#189
[#350 '}']: r#189
[#350 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#189
[#351 '&']: r#190
[#351 '(']: r#190
[#351 '*']: r#190
[#351 ';']: r#190
[#351 '_']: r#190
[#351 'break']: r#190
[#351 'const']: r#190
[#351 'const_assert']: r#190
[#351 'continue']: r#190
[#351 'continuing']: r#190
[#351 'discard']: r#190
[#351 'for']: r#190
[#351 'if']: r#190
[#351 'let']: r#190
[#351 'loop']: r#190
[#351 'return']: r#190
[#351 'switch']: r#190
[#351 'var']: r#190
[#351 'while']: r#190
[#351 '{']: r#190
[#351 '}']: r#190
[#351 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#190
[#352 '&']: r#191
[#352 '(']: r#191
[#352 '*']: r#191
[#352 ';']: r#191
[#352 '_']: r#191
[#352 'break']: r#191
[#352 'const']: r#191
[#352 'const_assert']: r#191
[#352 'continue']: r#191
[#352 'continuing']: r#191
[#352 'discard']: r#191
[#352 'for']: r#191
[#352 'if']: r#191
[#352 'let']: r#191
[#352 'loop']: r#191
[#352 'return']: r#191
[#352 'switch']: r#191
[#352 'var']: r#191
[#352 'while']: r#191
[#352 '{']: r#191
[#352 '}']: r#191
[#352 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#191
[#353 '}']: r#192
[#354 '&']: r#193
[#354 '(']: r#193
[#354 '*']: r#193
[#354 ';']: r#193
[#354 '@']: r#193
[#354 '_']: r#193
[#354 'alias']: r#193
[#354 'break']: r#193
[#354 'case']: r#193
[#354 'const']: r#193
[#354 'const_assert']: r#193
[#354 'continue']: r#193
[#354 'continuing']: r#193
[#354 'default']: r#193
[#354 'discard']: r#193
[#354 'else']: r#193
[#354 'fn']: r#193
[#354 'for']: r#193
[#354 'if']: r#193
[#354 'let']: r#193
[#354 'loop']: r#193
[#354 'override']: r#193
[#354 'return']: r#193
[#354 'struct']: r#193
[#354 'switch']: r#193
[#354 'var']: r#193
[#354 'while']: r#193
[#354 '{']: r#193
[#354 '}']: r#193
[#354 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#193
[#354 EndOfText]: r#193
[#355 /\u200B_template_args_end/]: s#400
[#356 ',']: s#398
[#357 '&&']: r#26
[#357 ',']: r#194
[#357 '||']: r#25
[#357 /\u200B_template_args_end/]: r#194
[#358 '||']: s#394
[#359 '&&']: s#393
[#360 ',']: r#195
[#360 /\u200B_template_args_end/]: r#195
[#361 ',']: s#392
[#362 ')']: r#196
[#362 ',']: r#196
[#363 ',']: s#364
[#364 '!']: s#69
[#364 '&']: s#72
[#364 '(']: s#82
[#364 '*']: s#71
[#364 '-']: s#68
[#364 'false']: s#89
[#364 'true']: s#88
[#364 '~']: s#70
[#364 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#364 /0[fh]/]: s#94
[#364 /0[iu]?/]: s#91
[#364 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#364 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#364 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#364 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#364 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#364 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#364 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#364 /[1-9][0-9]*[fh]/]: s#95
[#364 /[1-9][0-9]*[iu]?/]: s#92
[#365 '!=']: r#197
[#365 '%']: r#197
[#365 '&&']: r#197
[#365 '&']: r#197
[#365 ')']: r#197
[#365 '*']: r#197
[#365 '+']: r#197
[#365 ',']: r#197
[#365 '-']: r#197
[#365 '.']: r#197
[#365 '/']: r#197
[#365 ':']: r#197
[#365 ';']: r#197
[#365 '==']: r#197
[#365 '[']: r#197
[#365 ']']: r#197
[#365 '^']: r#197
[#365 '{']: r#197
[#365 '|']: r#197
[#365 '||']: r#197
[#365 /\u200B_greater_than/]: r#197
[#365 /\u200B_greater_than_equal/]: r#197
[#365 /\u200B_less_than/]: r#197
[#365 /\u200B_less_than_equal/]: r#197
[#365 /\u200B_shift_left/]: r#197
[#365 /\u200B_shift_right/]: r#197
[#365 /\u200B_template_args_end/]: r#197
[#366 '.']: s#148
[#366 '[']: s#147
[#367 '!=']: r#198
[#367 '%']: r#198
[#367 '%=']: r#198
[#367 '&&']: r#198
[#367 '&']: r#198
[#367 '&=']: r#198
[#367 ')']: r#198
[#367 '*']: r#198
[#367 '*=']: r#198
[#367 '+']: r#198
[#367 '++']: r#198
[#367 '+=']: r#198
[#367 ',']: r#198
[#367 '-']: r#198
[#367 '--']: r#198
[#367 '-=']: r#198
[#367 '/']: r#198
[#367 '/=']: r#198
[#367 ':']: r#198
[#367 ';']: r#198
[#367 '=']: r#198
[#367 '==']: r#198
[#367 ']']: r#198
[#367 '^']: r#198
[#367 '^=']: r#198
[#367 '{']: r#198
[#367 '|']: r#198
[#367 '|=']: r#198
[#367 '||']: r#198
[#367 /\u200B_greater_than/]: r#198
[#367 /\u200B_greater_than_equal/]: r#198
[#367 /\u200B_less_than/]: r#198
[#367 /\u200B_less_than_equal/]: r#198
[#367 /\u200B_shift_left/]: r#198
[#367 /\u200B_shift_left_assign/]: r#198
[#367 /\u200B_shift_right/]: r#198
[#367 /\u200B_shift_right_assign/]: r#198
[#367 /\u200B_template_args_end/]: r#198
[#368 '!=']: r#199
[#368 '%']: r#199
[#368 '%=']: r#199
[#368 '&&']: r#199
[#368 '&']: r#199
[#368 '&=']: r#199
[#368 ')']: r#199
[#368 '*']: r#199
[#368 '*=']: r#199
[#368 '+']: r#199
[#368 '++']: r#199
[#368 '+=']: r#199
[#368 ',']: r#199
[#368 '-']: r#199
[#368 '--']: r#199
[#368 '-=']: r#199
[#368 '/']: r#199
[#368 '/=']: r#199
[#368 ':']: r#199
[#368 ';']: r#199
[#368 '=']: r#199
[#368 '==']: r#199
[#368 ']']: r#199
[#368 '^']: r#199
[#368 '^=']: r#199
[#368 '{']: r#199
[#368 '|']: r#199
[#368 '|=']: r#199
[#368 '||']: r#199
[#368 /\u200B_greater_than/]: r#199
[#368 /\u200B_greater_than_equal/]: r#199
[#368 /\u200B_less_than/]: r#199
[#368 /\u200B_less_than_equal/]: r#199
[#368 /\u200B_shift_left/]: r#199
[#368 /\u200B_shift_left_assign/]: r#199
[#368 /\u200B_shift_right/]: r#199
[#368 /\u200B_shift_right_assign/]: r#199
[#368 /\u200B_template_args_end/]: r#199
[#369 '!=']: r#200
[#369 '%']: r#200
[#369 '%=']: r#200
[#369 '&&']: r#200
[#369 '&']: r#200
[#369 '&=']: r#200
[#369 ')']: r#200
[#369 '*']: r#200
[#369 '*=']: r#200
[#369 '+']: r#200
[#369 '++']: r#200
[#369 '+=']: r#200
[#369 ',']: r#200
[#369 '-']: r#200
[#369 '--']: r#200
[#369 '-=']: r#200
[#369 '/']: r#200
[#369 '/=']: r#200
[#369 ':']: r#200
[#369 ';']: r#200
[#369 '=']: r#200
[#369 '==']: r#200
[#369 ']']: r#200
[#369 '^']: r#200
[#369 '^=']: r#200
[#369 '{']: r#200
[#369 '|']: r#200
[#369 '|=']: r#200
[#369 '||']: r#200
[#369 /\u200B_greater_than/]: r#200
[#369 /\u200B_greater_than_equal/]: r#200
[#369 /\u200B_less_than/]: r#200
[#369 /\u200B_less_than_equal/]: r#200
[#369 /\u200B_shift_left/]: r#200
[#369 /\u200B_shift_left_assign/]: r#200
[#369 /\u200B_shift_right/]: r#200
[#369 /\u200B_shift_right_assign/]: r#200
[#369 /\u200B_template_args_end/]: r#200
[#370 '!=']: r#201
[#370 '%']: r#201
[#370 '%=']: r#201
[#370 '&&']: r#201
[#370 '&']: r#201
[#370 '&=']: r#201
[#370 ')']: r#201
[#370 '*']: r#201
[#370 '*=']: r#201
[#370 '+']: r#201
[#370 '++']: r#201
[#370 '+=']: r#201
[#370 ',']: r#201
[#370 '-']: r#201
[#370 '--']: r#201
[#370 '-=']: r#201
[#370 '/']: r#201
[#370 '/=']: r#201
[#370 ':']: r#201
[#370 ';']: r#201
[#370 '=']: r#201
[#370 '==']: r#201
[#370 ']']: r#201
[#370 '^']: r#201
[#370 '^=']: r#201
[#370 '{']: r#201
[#370 '|']: r#201
[#370 '|=']: r#201
[#370 '||']: r#201
[#370 /\u200B_greater_than/]: r#201
[#370 /\u200B_greater_than_equal/]: r#201
[#370 /\u200B_less_than/]: r#201
[#370 /\u200B_less_than_equal/]: r#201
[#370 /\u200B_shift_left/]: r#201
[#370 /\u200B_shift_left_assign/]: r#201
[#370 /\u200B_shift_right/]: r#201
[#370 /\u200B_shift_right_assign/]: r#201
[#370 /\u200B_template_args_end/]: r#201
[#371 '@']: r#202
[#371 'fn']: r#202
[#371 'override']: r#202
[#371 'var']: r#202
[#371 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#202
[#372 '!']: s#69
[#372 '&']: s#72
[#372 '(']: s#82
[#372 ')']: r#203
[#372 '*']: s#71
[#372 '-']: s#68
[#372 'false']: s#89
[#372 'true']: s#88
[#372 '~']: s#70
[#372 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#372 /0[fh]/]: s#94
[#372 /0[iu]?/]: s#91
[#372 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#372 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#372 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#372 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#372 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#372 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#372 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#372 /[1-9][0-9]*[fh]/]: s#95
[#372 /[1-9][0-9]*[iu]?/]: s#92
[#373 ')']: s#385
[#374 '@']: r#204
[#374 'fn']: r#204
[#374 'override']: r#204
[#374 'var']: r#204
[#374 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#204
[#375 ')']: r#203
[#376 '@']: r#205
[#376 'fn']: r#205
[#376 'override']: r#205
[#376 'var']: r#205
[#376 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#205
[#377 '@']: r#206
[#377 'fn']: r#206
[#377 'override']: r#206
[#377 'var']: r#206
[#377 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#206
[#378 '!']: s#69
[#378 '&']: s#72
[#378 '(']: s#82
[#378 ')']: r#203
[#378 '*']: s#71
[#378 '-']: s#68
[#378 'false']: s#89
[#378 'true']: s#88
[#378 '~']: s#70
[#378 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#378 /0[fh]/]: s#94
[#378 /0[iu]?/]: s#91
[#378 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#378 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#378 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#378 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#378 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#378 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#378 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#378 /[1-9][0-9]*[fh]/]: s#95
[#378 /[1-9][0-9]*[iu]?/]: s#92
[#379 '@']: r#207
[#379 'fn']: r#207
[#379 'override']: r#207
[#379 'var']: r#207
[#379 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#207
[#380 '@']: r#208
[#380 'fn']: r#208
[#380 'override']: r#208
[#380 'var']: r#208
[#380 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#208
[#381 '@']: r#209
[#381 'fn']: r#209
[#381 'override']: r#209
[#381 'var']: r#209
[#381 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#209
[#382 '@']: r#210
[#382 'fn']: r#210
[#382 'override']: r#210
[#382 'var']: r#210
[#382 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#210
[#383 '@']: r#211
[#383 'fn']: r#211
[#383 'override']: r#211
[#383 'var']: r#211
[#383 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#211
[#384 ',']: s#375
[#385 '@']: r#212
[#385 'fn']: r#212
[#385 'override']: r#212
[#385 'var']: r#212
[#385 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#212
[#386 ',']: s#471
[#387 '!=']: r#213
[#387 '%']: r#213
[#387 '%=']: r#213
[#387 '&&']: r#213
[#387 '&']: r#213
[#387 '&=']: r#213
[#387 ')']: r#213
[#387 '*']: r#213
[#387 '*=']: r#213
[#387 '+']: r#213
[#387 '++']: r#213
[#387 '+=']: r#213
[#387 ',']: r#213
[#387 '-']: r#213
[#387 '--']: r#213
[#387 '-=']: r#213
[#387 '/']: r#213
[#387 '/=']: r#213
[#387 ':']: r#213
[#387 ';']: r#213
[#387 '=']: r#213
[#387 '==']: r#213
[#387 ']']: r#213
[#387 '^']: r#213
[#387 '^=']: r#213
[#387 '{']: r#213
[#387 '|']: r#213
[#387 '|=']: r#213
[#387 '||']: r#213
[#387 /\u200B_greater_than/]: r#213
[#387 /\u200B_greater_than_equal/]: r#213
[#387 /\u200B_less_than/]: r#213
[#387 /\u200B_less_than_equal/]: r#213
[#387 /\u200B_shift_left/]: r#213
[#387 /\u200B_shift_left_assign/]: r#213
[#387 /\u200B_shift_right/]: r#213
[#387 /\u200B_shift_right_assign/]: r#213
[#387 /\u200B_template_args_end/]: r#213
[#388 '!=']: r#214
[#388 '%']: r#214
[#388 '%=']: r#214
[#388 '&&']: r#214
[#388 '&']: r#214
[#388 '&=']: r#214
[#388 ')']: r#214
[#388 '*']: r#214
[#388 '*=']: r#214
[#388 '+']: r#214
[#388 '++']: r#214
[#388 '+=']: r#214
[#388 ',']: r#214
[#388 '-']: r#214
[#388 '--']: r#214
[#388 '-=']: r#214
[#388 '/']: r#214
[#388 '/=']: r#214
[#388 ':']: r#214
[#388 ';']: r#214
[#388 '=']: r#214
[#388 '==']: r#214
[#388 ']']: r#214
[#388 '^']: r#214
[#388 '^=']: r#214
[#388 '{']: r#214
[#388 '|']: r#214
[#388 '|=']: r#214
[#388 '||']: r#214
[#388 /\u200B_greater_than/]: r#214
[#388 /\u200B_greater_than_equal/]: r#214
[#388 /\u200B_less_than/]: r#214
[#388 /\u200B_less_than_equal/]: r#214
[#388 /\u200B_shift_left/]: r#214
[#388 /\u200B_shift_left_assign/]: r#214
[#388 /\u200B_shift_right/]: r#214
[#388 /\u200B_shift_right_assign/]: r#214
[#388 /\u200B_template_args_end/]: r#214
[#389 ')']: r#215
[#389 ',']: r#215
[#390 ')']: r#216
[#390 ',']: r#216
[#391 ')']: r#217
[#392 ')']: r#218
[#393 '!']: s#69
[#393 '&']: s#72
[#393 '(']: s#82
[#393 '*']: s#71
[#393 '-']: s#68
[#393 'false']: s#89
[#393 'true']: s#88
[#393 '~']: s#70
[#393 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#393 /0[fh]/]: s#94
[#393 /0[iu]?/]: s#91
[#393 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#393 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#393 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#393 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#393 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#393 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#393 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#393 /[1-9][0-9]*[fh]/]: s#95
[#393 /[1-9][0-9]*[iu]?/]: s#92
[#394 '!']: s#69
[#394 '&']: s#72
[#394 '(']: s#82
[#394 '*']: s#71
[#394 '-']: s#68
[#394 'false']: s#89
[#394 'true']: s#88
[#394 '~']: s#70
[#394 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#394 /0[fh]/]: s#94
[#394 /0[iu]?/]: s#91
[#394 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#394 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#394 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#394 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#394 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#394 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#394 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#394 /[1-9][0-9]*[fh]/]: s#95
[#394 /[1-9][0-9]*[iu]?/]: s#92
[#395 ',']: s#467
[#396 ',']: r#219
[#396 /\u200B_template_args_end/]: r#219
[#397 ',']: s#398
[#398 '!']: s#69
[#398 '&']: s#72
[#398 '(']: s#82
[#398 '*']: s#71
[#398 '-']: s#68
[#398 'false']: s#89
[#398 'true']: s#88
[#398 '~']: s#70
[#398 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#398 /0[fh]/]: s#94
[#398 /0[iu]?/]: s#91
[#398 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#398 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#398 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#398 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#398 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#398 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#398 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#398 /[1-9][0-9]*[fh]/]: s#95
[#398 /[1-9][0-9]*[iu]?/]: s#92
[#399 '!=']: r#220
[#399 '%']: r#220
[#399 '&&']: r#220
[#399 '&']: r#220
[#399 '(']: r#220
[#399 ')']: r#220
[#399 '*']: r#220
[#399 '+']: r#220
[#399 ',']: r#220
[#399 '-']: r#220
[#399 '.']: r#220
[#399 '/']: r#220
[#399 ':']: r#220
[#399 ';']: r#220
[#399 '=']: r#220
[#399 '==']: r#220
[#399 '[']: r#220
[#399 ']']: r#220
[#399 '^']: r#220
[#399 '{']: r#220
[#399 '|']: r#220
[#399 '||']: r#220
[#399 '}']: r#220
[#399 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#220
[#399 /\u200B_greater_than/]: r#220
[#399 /\u200B_greater_than_equal/]: r#220
[#399 /\u200B_less_than/]: r#220
[#399 /\u200B_less_than_equal/]: r#220
[#399 /\u200B_shift_left/]: r#220
[#399 /\u200B_shift_right/]: r#220
[#399 /\u200B_template_args_end/]: r#220
[#400 '!=']: r#221
[#400 '%']: r#221
[#400 '&&']: r#221
[#400 '&']: r#221
[#400 '(']: r#221
[#400 ')']: r#221
[#400 '*']: r#221
[#400 '+']: r#221
[#400 ',']: r#221
[#400 '-']: r#221
[#400 '.']: r#221
[#400 '/']: r#221
[#400 ':']: r#221
[#400 ';']: r#221
[#400 '=']: r#221
[#400 '==']: r#221
[#400 '[']: r#221
[#400 ']']: r#221
[#400 '^']: r#221
[#400 '{']: r#221
[#400 '|']: r#221
[#400 '||']: r#221
[#400 '}']: r#221
[#400 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#221
[#400 /\u200B_greater_than/]: r#221
[#400 /\u200B_greater_than_equal/]: r#221
[#400 /\u200B_less_than/]: r#221
[#400 /\u200B_less_than_equal/]: r#221
[#400 /\u200B_shift_left/]: r#221
[#400 /\u200B_shift_right/]: r#221
[#400 /\u200B_template_args_end/]: r#221
[#401 '!']: s#69
[#401 '&']: s#72
[#401 '(']: s#82
[#401 '*']: s#71
[#401 '-']: s#68
[#401 'false']: s#89
[#401 'true']: s#88
[#401 '~']: s#70
[#401 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#401 /0[fh]/]: s#94
[#401 /0[iu]?/]: s#91
[#401 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#401 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#401 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#401 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#401 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#401 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#401 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#401 /[1-9][0-9]*[fh]/]: s#95
[#401 /[1-9][0-9]*[iu]?/]: s#92
[#402 '&']: r#222
[#402 '(']: r#222
[#402 '*']: r#222
[#402 ';']: r#222
[#402 '_']: r#222
[#402 'break']: r#222
[#402 'const']: r#222
[#402 'const_assert']: r#222
[#402 'continue']: r#222
[#402 'continuing']: r#222
[#402 'discard']: r#222
[#402 'else']: r#222
[#402 'for']: r#222
[#402 'if']: r#222
[#402 'let']: r#222
[#402 'loop']: r#222
[#402 'return']: r#222
[#402 'switch']: r#222
[#402 'var']: r#222
[#402 'while']: r#222
[#402 '{']: r#222
[#402 '}']: r#222
[#402 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#222
[#403 '&']: r#223
[#403 '(']: r#223
[#403 '*']: r#223
[#403 ';']: r#223
[#403 '_']: r#223
[#403 'break']: r#223
[#403 'const']: r#223
[#403 'const_assert']: r#223
[#403 'continue']: r#223
[#403 'continuing']: r#223
[#403 'discard']: r#223
[#403 'for']: r#223
[#403 'if']: r#223
[#403 'let']: r#223
[#403 'loop']: r#223
[#403 'return']: r#223
[#403 'switch']: r#223
[#403 'var']: r#223
[#403 'while']: r#223
[#403 '{']: r#223
[#403 '}']: r#223
[#403 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#223
[#404 '&']: r#224
[#404 '(']: r#224
[#404 '*']: r#224
[#404 ';']: r#224
[#404 '_']: r#224
[#404 'break']: r#224
[#404 'const']: r#224
[#404 'const_assert']: r#224
[#404 'continue']: r#224
[#404 'continuing']: r#224
[#404 'discard']: r#224
[#404 'for']: r#224
[#404 'if']: r#224
[#404 'let']: r#224
[#404 'loop']: r#224
[#404 'return']: r#224
[#404 'switch']: r#224
[#404 'var']: r#224
[#404 'while']: r#224
[#404 '{']: r#224
[#404 '}']: r#224
[#404 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#224
[#405 '{']: s#139
[#406 'case']: s#460
[#406 'default']: s#461
[#407 'continuing']: s#454
[#408 'continuing']: r#225
[#408 '}']: r#225
[#409 '&']: s#274
[#409 '(']: s#275
[#409 '*']: s#273
[#409 ';']: s#238
[#409 '_']: s#271
[#409 'break']: s#263
[#409 'const']: s#262
[#409 'const_assert']: s#31
[#409 'continue']: s#264
[#409 'discard']: s#249
[#409 'for']: s#257
[#409 'if']: s#268
[#409 'let']: s#261
[#409 'loop']: s#256
[#409 'return']: s#253
[#409 'switch']: s#255
[#409 'var']: s#110
[#409 'while']: s#258
[#409 '{']: s#139
[#409 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#410 ')']: s#450
[#411 ';']: s#449
[#412 ';']: r#226
[#413 ';']: r#227
[#414 ';']: r#228
[#415 ';']: r#229
[#416 '&']: r#230
[#416 '(']: r#230
[#416 '*']: r#230
[#416 ';']: r#230
[#416 '_']: r#230
[#416 'break']: r#230
[#416 'const']: r#230
[#416 'const_assert']: r#230
[#416 'continue']: r#230
[#416 'continuing']: r#230
[#416 'discard']: r#230
[#416 'for']: r#230
[#416 'if']: r#230
[#416 'let']: r#230
[#416 'loop']: r#230
[#416 'return']: r#230
[#416 'switch']: r#230
[#416 'var']: r#230
[#416 'while']: r#230
[#416 '{']: r#230
[#416 '}']: r#230
[#416 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#230
[#417 ';']: r#231
[#418 '!']: s#69
[#418 '&']: s#72
[#418 '(']: s#82
[#418 '*']: s#71
[#418 '-']: s#68
[#418 'false']: s#89
[#418 'true']: s#88
[#418 '~']: s#70
[#418 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#418 /0[fh]/]: s#94
[#418 /0[iu]?/]: s#91
[#418 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#418 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#418 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#418 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#418 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#418 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#418 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#418 /[1-9][0-9]*[fh]/]: s#95
[#418 /[1-9][0-9]*[iu]?/]: s#92
[#419 '!']: s#69
[#419 '&']: s#72
[#419 '(']: s#82
[#419 '*']: s#71
[#419 '-']: s#68
[#419 'false']: s#89
[#419 'true']: s#88
[#419 '~']: s#70
[#419 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#419 /0[fh]/]: s#94
[#419 /0[iu]?/]: s#91
[#419 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#419 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#419 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#419 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#419 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#419 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#419 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#419 /[1-9][0-9]*[fh]/]: s#95
[#419 /[1-9][0-9]*[iu]?/]: s#92
[#420 '&']: r#232
[#420 '(']: r#232
[#420 '*']: r#232
[#420 ';']: r#232
[#420 '_']: r#232
[#420 'break']: r#232
[#420 'const']: r#232
[#420 'const_assert']: r#232
[#420 'continue']: r#232
[#420 'continuing']: r#232
[#420 'discard']: r#232
[#420 'else']: r#232
[#420 'for']: r#232
[#420 'if']: r#232
[#420 'let']: r#232
[#420 'loop']: r#232
[#420 'return']: r#232
[#420 'switch']: r#232
[#420 'var']: r#232
[#420 'while']: r#232
[#420 '{']: r#232
[#420 '}']: r#232
[#420 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#232
[#421 ')']: r#233
[#421 ';']: r#233
[#422 ')']: r#234
[#422 ';']: r#234
[#423 '%=']: r#179
[#423 '&=']: r#179
[#423 ')']: r#179
[#423 '*=']: r#179
[#423 '++']: r#179
[#423 '+=']: r#179
[#423 '--']: r#179
[#423 '-=']: r#179
[#423 '.']: r#179
[#423 '/=']: r#179
[#423 '=']: r#179
[#423 '[']: r#179
[#423 '^=']: r#179
[#423 '|=']: r#179
[#423 /\u200B_shift_left_assign/]: r#179
[#423 /\u200B_shift_right_assign/]: r#179
[#424 '%=']: r#235
[#424 '&=']: r#235
[#424 ')']: r#235
[#424 '*=']: r#235
[#424 '++']: r#235
[#424 '+=']: r#235
[#424 '--']: r#235
[#424 '-=']: r#235
[#424 '.']: r#235
[#424 '/=']: r#235
[#424 '=']: r#235
[#424 '[']: r#235
[#424 '^=']: r#235
[#424 '|=']: r#235
[#424 /\u200B_shift_left_assign/]: r#235
[#424 /\u200B_shift_right_assign/]: r#235
[#425 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#236
[#426 ':']: s#446
[#427 ',']: s#445
[#428 ')']: r#237
[#428 ',']: r#237
[#429 ',']: s#430
[#430 '@']: s#36
[#431 '->']: s#441
[#432 ',']: r#238
[#432 '}']: r#238
[#433 ',']: r#239
[#433 '}']: r#239
[#434 '}']: s#439
[#435 '}']: r#240
[#436 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#437 ')']: r#241
[#437 ',']: r#241
[#437 ';']: r#241
[#437 '=']: r#241
[#437 '}']: r#241
[#438 ',']: r#242
[#438 '}']: r#242
[#439 ';']: r#243
[#439 '@']: r#243
[#439 'alias']: r#243
[#439 'const']: r#243
[#439 'const_assert']: r#243
[#439 'fn']: r#243
[#439 'override']: r#243
[#439 'struct']: r#243
[#439 'var']: r#243
[#439 EndOfText]: r#243
[#440 '{']: r#244
[#441 '@']: s#36
[#442 ')']: r#245
[#442 ',']: r#245
[#443 ')']: r#246
[#443 ',']: r#246
[#444 ')']: r#247
[#445 ')']: r#248
[#446 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#447 ';']: r#249
[#448 ';']: r#250
[#449 '!']: s#69
[#449 '&']: s#72
[#449 '(']: s#82
[#449 '*']: s#71
[#449 '-']: s#68
[#449 'false']: s#89
[#449 'true']: s#88
[#449 '~']: s#70
[#449 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#449 /0[fh]/]: s#94
[#449 /0[iu]?/]: s#91
[#449 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#449 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#449 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#449 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#449 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#449 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#449 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#449 /[1-9][0-9]*[fh]/]: s#95
[#449 /[1-9][0-9]*[iu]?/]: s#92
[#450 '{']: s#139
[#451 'continuing']: r#251
[#451 '}']: r#251
[#452 '}']: s#485
[#453 '}']: r#252
[#454 '{']: s#484
[#455 '}']: s#482
[#456 '}']: r#253
[#457 'case']: s#460
[#457 'default']: s#461
[#458 'case']: r#254
[#458 'default']: r#254
[#458 '}']: r#254
[#459 'case']: r#255
[#459 'default']: r#255
[#459 '}']: r#255
[#460 '!']: s#69
[#460 '&']: s#72
[#460 '(']: s#82
[#460 '*']: s#71
[#460 '-']: s#68
[#460 'default']: s#479
[#460 'false']: s#89
[#460 'true']: s#88
[#460 '~']: s#70
[#460 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#460 /0[fh]/]: s#94
[#460 /0[iu]?/]: s#91
[#460 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#460 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#460 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#460 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#460 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#460 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#460 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#460 /[1-9][0-9]*[fh]/]: s#95
[#460 /[1-9][0-9]*[iu]?/]: s#92
[#461 ':']: s#476
[#462 '&']: r#256
[#462 '(']: r#256
[#462 '*']: r#256
[#462 ';']: r#256
[#462 '_']: r#256
[#462 'break']: r#256
[#462 'const']: r#256
[#462 'const_assert']: r#256
[#462 'continue']: r#256
[#462 'continuing']: r#256
[#462 'discard']: r#256
[#462 'for']: r#256
[#462 'if']: r#256
[#462 'let']: r#256
[#462 'loop']: r#256
[#462 'return']: r#256
[#462 'switch']: r#256
[#462 'var']: r#256
[#462 'while']: r#256
[#462 '{']: r#256
[#462 '}']: r#256
[#462 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#256
[#463 '{']: s#139
[#464 ',']: r#257
[#464 /\u200B_template_args_end/]: r#257
[#465 ',']: r#258
[#465 /\u200B_template_args_end/]: r#258
[#466 /\u200B_template_args_end/]: r#259
[#467 /\u200B_template_args_end/]: r#260
[#468 ',']: r#261
[#468 '||']: r#99
[#468 /\u200B_template_args_end/]: r#261
[#469 '&&']: r#101
[#469 ',']: r#262
[#469 /\u200B_template_args_end/]: r#262
[#470 '@']: r#263
[#470 'fn']: r#263
[#470 'override']: r#263
[#470 'var']: r#263
[#470 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#263
[#471 '!']: s#69
[#471 '&']: s#72
[#471 '(']: s#82
[#471 ')']: r#203
[#471 '*']: s#71
[#471 '-']: s#68
[#471 'false']: s#89
[#471 'true']: s#88
[#471 '~']: s#70
[#471 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#471 /0[fh]/]: s#94
[#471 /0[iu]?/]: s#91
[#471 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#471 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#471 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#471 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#471 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#471 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#471 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#471 /[1-9][0-9]*[fh]/]: s#95
[#471 /[1-9][0-9]*[iu]?/]: s#92
[#472 '@']: r#264
[#472 'fn']: r#264
[#472 'override']: r#264
[#472 'var']: r#264
[#472 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#264
[#473 ',']: s#375
[#474 '&']: r#265
[#474 '(']: r#265
[#474 '*']: r#265
[#474 ';']: r#265
[#474 '_']: r#265
[#474 'break']: r#265
[#474 'const']: r#265
[#474 'const_assert']: r#265
[#474 'continue']: r#265
[#474 'continuing']: r#265
[#474 'discard']: r#265
[#474 'else']: r#265
[#474 'for']: r#265
[#474 'if']: r#265
[#474 'let']: r#265
[#474 'loop']: r#265
[#474 'return']: r#265
[#474 'switch']: r#265
[#474 'var']: r#265
[#474 'while']: r#265
[#474 '{']: r#265
[#474 '}']: r#265
[#474 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#265
[#475 '{']: s#139
[#476 '{']: r#266
[#477 ':']: s#504
[#478 ',']: s#502
[#479 ',']: r#267
[#479 ':']: r#267
[#479 '{']: r#267
[#480 ',']: r#268
[#480 ':']: r#268
[#480 '{']: r#268
[#481 '}']: r#269
[#482 '&']: r#270
[#482 '(']: r#270
[#482 '*']: r#270
[#482 ';']: r#270
[#482 '_']: r#270
[#482 'break']: r#270
[#482 'const']: r#270
[#482 'const_assert']: r#270
[#482 'continue']: r#270
[#482 'continuing']: r#270
[#482 'discard']: r#270
[#482 'for']: r#270
[#482 'if']: r#270
[#482 'let']: r#270
[#482 'loop']: r#270
[#482 'return']: r#270
[#482 'switch']: r#270
[#482 'var']: r#270
[#482 'while']: r#270
[#482 '{']: r#270
[#482 '}']: r#270
[#482 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#270
[#483 '}']: r#271
[#484 '&']: s#274
[#484 '(']: s#275
[#484 '*']: s#273
[#484 ';']: s#238
[#484 '_']: s#271
[#484 'break']: s#263
[#484 'const']: s#262
[#484 'const_assert']: s#31
[#484 'continue']: s#264
[#484 'discard']: s#249
[#484 'for']: s#257
[#484 'if']: s#268
[#484 'let']: s#261
[#484 'loop']: s#256
[#484 'return']: s#253
[#484 'switch']: s#255
[#484 'var']: s#110
[#484 'while']: s#258
[#484 '{']: s#139
[#484 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#485 '&']: r#272
[#485 '(']: r#272
[#485 '*']: r#272
[#485 ';']: r#272
[#485 '_']: r#272
[#485 'break']: r#272
[#485 'const']: r#272
[#485 'const_assert']: r#272
[#485 'continue']: r#272
[#485 'continuing']: r#272
[#485 'discard']: r#272
[#485 'for']: r#272
[#485 'if']: r#272
[#485 'let']: r#272
[#485 'loop']: r#272
[#485 'return']: r#272
[#485 'switch']: r#272
[#485 'var']: r#272
[#485 'while']: r#272
[#485 '{']: r#272
[#485 '}']: r#272
[#485 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#272
[#486 '&']: r#273
[#486 '(']: r#273
[#486 '*']: r#273
[#486 ';']: r#273
[#486 '_']: r#273
[#486 'break']: r#273
[#486 'const']: r#273
[#486 'const_assert']: r#273
[#486 'continue']: r#273
[#486 'continuing']: r#273
[#486 'discard']: r#273
[#486 'for']: r#273
[#486 'if']: r#273
[#486 'let']: r#273
[#486 'loop']: r#273
[#486 'return']: r#273
[#486 'switch']: r#273
[#486 'var']: r#273
[#486 'while']: r#273
[#486 '{']: r#273
[#486 '}']: r#273
[#486 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#273
[#487 ';']: s#495
[#488 ';']: r#274
[#489 ')']: r#275
[#489 ',']: r#275
[#490 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#491 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#276
[#492 '@']: s#36
[#493 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#277
[#494 '{']: r#278
[#495 '&']: s#274
[#495 '(']: s#275
[#495 '*']: s#273
[#495 '_']: s#271
[#495 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#496 'break']: s#515
[#497 'break']: r#279
[#497 '}']: r#279
[#498 '&']: s#274
[#498 '(']: s#275
[#498 '*']: s#273
[#498 ';']: s#238
[#498 '_']: s#271
[#498 'break']: s#263
[#498 'const']: s#262
[#498 'const_assert']: s#31
[#498 'continue']: s#264
[#498 'discard']: s#249
[#498 'for']: s#257
[#498 'if']: s#268
[#498 'let']: s#261
[#498 'loop']: s#256
[#498 'return']: s#253
[#498 'switch']: s#255
[#498 'var']: s#110
[#498 'while']: s#258
[#498 '{']: s#139
[#498 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#499 ',']: s#511
[#500 ',']: r#280
[#500 ':']: r#280
[#500 '{']: r#280
[#501 ',']: s#502
[#502 '!']: s#69
[#502 '&']: s#72
[#502 '(']: s#82
[#502 '*']: s#71
[#502 '-']: s#68
[#502 'default']: s#479
[#502 'false']: s#89
[#502 'true']: s#88
[#502 '~']: s#70
[#502 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#502 /0[fh]/]: s#94
[#502 /0[iu]?/]: s#91
[#502 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#502 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#502 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#502 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#502 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#502 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#502 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#502 /[1-9][0-9]*[fh]/]: s#95
[#502 /[1-9][0-9]*[iu]?/]: s#92
[#503 '{']: s#139
[#504 '{']: r#281
[#505 'case']: r#282
[#505 'default']: r#282
[#505 '}']: r#282
[#506 '@']: r#283
[#506 'fn']: r#283
[#506 'override']: r#283
[#506 'var']: r#283
[#506 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#283
[#507 'case']: r#284
[#507 'default']: r#284
[#507 '}']: r#284
[#508 ',']: r#285
[#508 ':']: r#285
[#508 '{']: r#285
[#509 ',']: r#286
[#509 ':']: r#286
[#509 '{']: r#286
[#510 ':']: r#287
[#510 '{']: r#287
[#511 ':']: r#288
[#511 '{']: r#288
[#512 'break']: r#289
[#512 '}']: r#289
[#513 '}']: s#521
[#514 '}']: r#290
[#515 'if']: s#520
[#516 ')']: r#291
[#517 ')']: r#292
[#518 ')']: r#293
[#519 ')']: r#294
[#520 '!']: s#69
[#520 '&']: s#72
[#520 '(']: s#82
[#520 '*']: s#71
[#520 '-']: s#68
[#520 'false']: s#89
[#520 'true']: s#88
[#520 '~']: s#70
[#520 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#90
[#520 /0[fh]/]: s#94
[#520 /0[iu]?/]: s#91
[#520 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#99
[#520 /0[xX][0-9a-fA-F]+[iu]?/]: s#93
[#520 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#101
[#520 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#100
[#520 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#96
[#520 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#98
[#520 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#97
[#520 /[1-9][0-9]*[fh]/]: s#95
[#520 /[1-9][0-9]*[iu]?/]: s#92
[#521 '}']: r#295
[#522 ';']: s#523
[#523 '}']: r#296

=Goto:
[#0 enable_directive]: #5
[#0 global_directive]: #4
[#0 requires_directive]: #6
[#0 translation_unit]: #1
[#0 translation_unit/0.0]: #2
[#0 translation_unit/0.0/0]: #3
[#2 attribute]: #35
[#2 const_assert_statement]: #24
[#2 function_decl]: #23
[#2 function_decl/0.0]: #30
[#2 function_decl/0.0/0]: #34
[#2 global_constant_decl]: #20
[#2 global_constant_decl/1.0]: #27
[#2 global_constant_decl/1.0/0]: #33
[#2 global_decl]: #17
[#2 global_variable_decl]: #19
[#2 global_variable_decl/0.0]: #25
[#2 global_variable_decl/0.0/0]: #32
[#2 struct_decl]: #22
[#2 translation_unit/0.1]: #15
[#2 translation_unit/0.1/0]: #16
[#2 type_alias_decl]: #21
[#4 enable_directive]: #5
[#4 global_directive]: #4
[#4 requires_directive]: #6
[#4 translation_unit/0.0/0]: #14
[#7 enable_extension_name]: #12
[#8 software_extension_list]: #9
[#8 software_extension_name]: #10
[#10 software_extension_list/0.1]: #117
[#10 software_extension_list/0.1/0]: #118
[#10 software_extension_list/0.1/0/0.0]: #119
[#17 attribute]: #35
[#17 const_assert_statement]: #24
[#17 function_decl]: #23
[#17 function_decl/0.0]: #30
[#17 function_decl/0.0/0]: #34
[#17 global_constant_decl]: #20
[#17 global_constant_decl/1.0]: #27
[#17 global_constant_decl/1.0/0]: #33
[#17 global_decl]: #17
[#17 global_variable_decl]: #19
[#17 global_variable_decl/0.0]: #25
[#17 global_variable_decl/0.0/0]: #32
[#17 struct_decl]: #22
[#17 translation_unit/0.1/0]: #115
[#17 type_alias_decl]: #21
[#25 variable_decl]: #109
[#26 ident]: #108
[#26 ident_pattern_token]: #83
[#26 optionally_typed_ident]: #107
[#28 ident]: #105
[#28 ident_pattern_token]: #83
[#29 ident]: #104
[#29 ident_pattern_token]: #83
[#30 function_header]: #102
[#31 additive_expression]: #64
[#31 binary_and_expression]: #61
[#31 binary_or_expression]: #62
[#31 binary_xor_expression]: #63
[#31 bitwise_expression]: #59
[#31 bool_literal]: #81
[#31 call_expression]: #75
[#31 decimal_float_literal]: #86
[#31 decimal_int_literal]: #84
[#31 expression]: #55
[#31 float_literal]: #80
[#31 hex_float_literal]: #87
[#31 hex_int_literal]: #85
[#31 ident]: #78
[#31 ident_pattern_token]: #83
[#31 int_literal]: #79
[#31 literal]: #76
[#31 multiplicative_expression]: #66
[#31 paren_expression]: #77
[#31 primary_expression]: #73
[#31 relational_expression]: #56
[#31 shift_expression]: #60
[#31 short_circuit_and_expression]: #58
[#31 short_circuit_or_expression]: #57
[#31 singular_expression]: #67
[#31 template_elaborated_ident]: #74
[#31 unary_expression]: #65
[#35 attribute]: #35
[#35 function_decl/0.0/0]: #54
[#35 global_constant_decl/1.0/0]: #53
[#35 global_variable_decl/0.0/0]: #52
[#60 _greater_than]: #169
[#60 _greater_than_equal]: #171
[#60 _less_than]: #168
[#60 _less_than_equal]: #170
[#64 additive_operator]: #162
[#65 _shift_left]: #158
[#65 _shift_right]: #159
[#66 multiplicative_operator]: #154
[#68 bool_literal]: #81
[#68 call_expression]: #75
[#68 decimal_float_literal]: #86
[#68 decimal_int_literal]: #84
[#68 float_literal]: #80
[#68 hex_float_literal]: #87
[#68 hex_int_literal]: #85
[#68 ident]: #78
[#68 ident_pattern_token]: #83
[#68 int_literal]: #79
[#68 literal]: #76
[#68 paren_expression]: #77
[#68 primary_expression]: #73
[#68 singular_expression]: #67
[#68 template_elaborated_ident]: #74
[#68 unary_expression]: #153
[#69 bool_literal]: #81
[#69 call_expression]: #75
[#69 decimal_float_literal]: #86
[#69 decimal_int_literal]: #84
[#69 float_literal]: #80
[#69 hex_float_literal]: #87
[#69 hex_int_literal]: #85
[#69 ident]: #78
[#69 ident_pattern_token]: #83
[#69 int_literal]: #79
[#69 literal]: #76
[#69 paren_expression]: #77
[#69 primary_expression]: #73
[#69 singular_expression]: #67
[#69 template_elaborated_ident]: #74
[#69 unary_expression]: #152
[#70 bool_literal]: #81
[#70 call_expression]: #75
[#70 decimal_float_literal]: #86
[#70 decimal_int_literal]: #84
[#70 float_literal]: #80
[#70 hex_float_literal]: #87
[#70 hex_int_literal]: #85
[#70 ident]: #78
[#70 ident_pattern_token]: #83
[#70 int_literal]: #79
[#70 literal]: #76
[#70 paren_expression]: #77
[#70 primary_expression]: #73
[#70 singular_expression]: #67
[#70 template_elaborated_ident]: #74
[#70 unary_expression]: #151
[#71 bool_literal]: #81
[#71 call_expression]: #75
[#71 decimal_float_literal]: #86
[#71 decimal_int_literal]: #84
[#71 float_literal]: #80
[#71 hex_float_literal]: #87
[#71 hex_int_literal]: #85
[#71 ident]: #78
[#71 ident_pattern_token]: #83
[#71 int_literal]: #79
[#71 literal]: #76
[#71 paren_expression]: #77
[#71 primary_expression]: #73
[#71 singular_expression]: #67
[#71 template_elaborated_ident]: #74
[#71 unary_expression]: #150
[#72 bool_literal]: #81
[#72 call_expression]: #75
[#72 decimal_float_literal]: #86
[#72 decimal_int_literal]: #84
[#72 float_literal]: #80
[#72 hex_float_literal]: #87
[#72 hex_int_literal]: #85
[#72 ident]: #78
[#72 ident_pattern_token]: #83
[#72 int_literal]: #79
[#72 literal]: #76
[#72 paren_expression]: #77
[#72 primary_expression]: #73
[#72 singular_expression]: #67
[#72 template_elaborated_ident]: #74
[#72 unary_expression]: #149
[#73 component_or_swizzle_specifier]: #146
[#73 singular_expression/0.1]: #145
[#74 argument_expression_list]: #143
[#78 _disambiguate_template]: #142
[#82 additive_expression]: #64
[#82 binary_and_expression]: #61
[#82 binary_or_expression]: #62
[#82 binary_xor_expression]: #63
[#82 bitwise_expression]: #59
[#82 bool_literal]: #81
[#82 call_expression]: #75
[#82 decimal_float_literal]: #86
[#82 decimal_int_literal]: #84
[#82 expression]: #141
[#82 float_literal]: #80
[#82 hex_float_literal]: #87
[#82 hex_int_literal]: #85
[#82 ident]: #78
[#82 ident_pattern_token]: #83
[#82 int_literal]: #79
[#82 literal]: #76
[#82 multiplicative_expression]: #66
[#82 paren_expression]: #77
[#82 primary_expression]: #73
[#82 relational_expression]: #56
[#82 shift_expression]: #60
[#82 short_circuit_and_expression]: #58
[#82 short_circuit_or_expression]: #57
[#82 singular_expression]: #67
[#82 template_elaborated_ident]: #74
[#82 unary_expression]: #65
[#83 _disambiguate_template]: #140
[#102 compound_statement]: #138
[#103 ident]: #137
[#103 ident_pattern_token]: #83
[#104 struct_body_decl]: #135
[#106 ident]: #108
[#106 ident_pattern_token]: #83
[#106 optionally_typed_ident]: #133
[#108 optionally_typed_ident/0.1]: #130
[#109 global_variable_decl/0.2]: #128
[#110 _disambiguate_template]: #126
[#117 software_extension_list/0.2]: #124
[#119 software_extension_list/0.1/0]: #123
[#119 software_extension_list/0.1/0/0.0]: #119
[#120 software_extension_name]: #122
[#126 _template_args_start]: #232
[#126 template_list]: #289
[#126 variable_decl/0.2]: #288
[#129 additive_expression]: #64
[#129 binary_and_expression]: #61
[#129 binary_or_expression]: #62
[#129 binary_xor_expression]: #63
[#129 bitwise_expression]: #59
[#129 bool_literal]: #81
[#129 call_expression]: #75
[#129 decimal_float_literal]: #86
[#129 decimal_int_literal]: #84
[#129 expression]: #287
[#129 float_literal]: #80
[#129 hex_float_literal]: #87
[#129 hex_int_literal]: #85
[#129 ident]: #78
[#129 ident_pattern_token]: #83
[#129 int_literal]: #79
[#129 literal]: #76
[#129 multiplicative_expression]: #66
[#129 paren_expression]: #77
[#129 primary_expression]: #73
[#129 relational_expression]: #56
[#129 shift_expression]: #60
[#129 short_circuit_and_expression]: #58
[#129 short_circuit_or_expression]: #57
[#129 singular_expression]: #67
[#129 template_elaborated_ident]: #74
[#129 unary_expression]: #65
[#131 ident]: #282
[#131 ident_pattern_token]: #83
[#131 type_specifier]: #286
[#132 additive_expression]: #64
[#132 binary_and_expression]: #61
[#132 binary_or_expression]: #62
[#132 binary_xor_expression]: #63
[#132 bitwise_expression]: #59
[#132 bool_literal]: #81
[#132 call_expression]: #75
[#132 decimal_float_literal]: #86
[#132 decimal_int_literal]: #84
[#132 expression]: #285
[#132 float_literal]: #80
[#132 hex_float_literal]: #87
[#132 hex_int_literal]: #85
[#132 ident]: #78
[#132 ident_pattern_token]: #83
[#132 int_literal]: #79
[#132 literal]: #76
[#132 multiplicative_expression]: #66
[#132 paren_expression]: #77
[#132 primary_expression]: #73
[#132 relational_expression]: #56
[#132 shift_expression]: #60
[#132 short_circuit_and_expression]: #58
[#132 short_circuit_or_expression]: #57
[#132 singular_expression]: #67
[#132 template_elaborated_ident]: #74
[#132 unary_expression]: #65
[#133 global_constant_decl/1.3]: #283
[#134 ident]: #282
[#134 ident_pattern_token]: #83
[#134 type_specifier]: #281
[#136 attribute]: #280
[#136 struct_member]: #277
[#136 struct_member/0.0]: #278
[#136 struct_member/0.0/0]: #279
[#139 assignment_statement]: #265
[#139 break_statement]: #247
[#139 compound_statement]: #251
[#139 compound_statement/0.1]: #235
[#139 compound_statement/0.1/0]: #236
[#139 const_assert_statement]: #252
[#139 continue_statement]: #248
[#139 core_lhs_expression]: #272
[#139 decrement_statement]: #267
[#139 for_statement]: #243
[#139 func_call_statement]: #245
[#139 ident]: #269
[#139 ident_pattern_token]: #83
[#139 if_clause]: #254
[#139 if_statement]: #240
[#139 increment_statement]: #266
[#139 lhs_expression]: #270
[#139 loop_statement]: #242
[#139 return_statement]: #239
[#139 statement]: #237
[#139 switch_statement]: #241
[#139 template_elaborated_ident]: #259
[#139 variable_decl]: #260
[#139 variable_statement]: #246
[#139 variable_updating_statement]: #250
[#139 while_statement]: #244
[#142 _template_args_start]: #232
[#142 template_elaborated_ident/0.2]: #230
[#142 template_list]: #231
[#144 additive_expression]: #64
[#144 argument_expression_list/0.1]: #227
[#144 binary_and_expression]: #61
[#144 binary_or_expression]: #62
[#144 binary_xor_expression]: #63
[#144 bitwise_expression]: #59
[#144 bool_literal]: #81
[#144 call_expression]: #75
[#144 decimal_float_literal]: #86
[#144 decimal_int_literal]: #84
[#144 expression]: #229
[#144 expression_comma_list]: #228
[#144 float_literal]: #80
[#144 hex_float_literal]: #87
[#144 hex_int_literal]: #85
[#144 ident]: #78
[#144 ident_pattern_token]: #83
[#144 int_literal]: #79
[#144 literal]: #76
[#144 multiplicative_expression]: #66
[#144 paren_expression]: #77
[#144 primary_expression]: #73
[#144 relational_expression]: #56
[#144 shift_expression]: #60
[#144 short_circuit_and_expression]: #58
[#144 short_circuit_or_expression]: #57
[#144 singular_expression]: #67
[#144 template_elaborated_ident]: #74
[#144 unary_expression]: #65
[#147 additive_expression]: #64
[#147 binary_and_expression]: #61
[#147 binary_or_expression]: #62
[#147 binary_xor_expression]: #63
[#147 bitwise_expression]: #59
[#147 bool_literal]: #81
[#147 call_expression]: #75
[#147 decimal_float_literal]: #86
[#147 decimal_int_literal]: #84
[#147 expression]: #226
[#147 float_literal]: #80
[#147 hex_float_literal]: #87
[#147 hex_int_literal]: #85
[#147 ident]: #78
[#147 ident_pattern_token]: #83
[#147 int_literal]: #79
[#147 literal]: #76
[#147 multiplicative_expression]: #66
[#147 paren_expression]: #77
[#147 primary_expression]: #73
[#147 relational_expression]: #56
[#147 shift_expression]: #60
[#147 short_circuit_and_expression]: #58
[#147 short_circuit_or_expression]: #57
[#147 singular_expression]: #67
[#147 template_elaborated_ident]: #74
[#147 unary_expression]: #65
[#148 member_ident]: #215
[#148 swizzle_name]: #216
[#154 bool_literal]: #81
[#154 call_expression]: #75
[#154 decimal_float_literal]: #86
[#154 decimal_int_literal]: #84
[#154 float_literal]: #80
[#154 hex_float_literal]: #87
[#154 hex_int_literal]: #85
[#154 ident]: #78
[#154 ident_pattern_token]: #83
[#154 int_literal]: #79
[#154 literal]: #76
[#154 paren_expression]: #77
[#154 primary_expression]: #73
[#154 singular_expression]: #67
[#154 template_elaborated_ident]: #74
[#154 unary_expression]: #214
[#158 bool_literal]: #81
[#158 call_expression]: #75
[#158 decimal_float_literal]: #86
[#158 decimal_int_literal]: #84
[#158 float_literal]: #80
[#158 hex_float_literal]: #87
[#158 hex_int_literal]: #85
[#158 ident]: #78
[#158 ident_pattern_token]: #83
[#158 int_literal]: #79
[#158 literal]: #76
[#158 paren_expression]: #77
[#158 primary_expression]: #73
[#158 singular_expression]: #67
[#158 template_elaborated_ident]: #74
[#158 unary_expression]: #213
[#159 bool_literal]: #81
[#159 call_expression]: #75
[#159 decimal_float_literal]: #86
[#159 decimal_int_literal]: #84
[#159 float_literal]: #80
[#159 hex_float_literal]: #87
[#159 hex_int_literal]: #85
[#159 ident]: #78
[#159 ident_pattern_token]: #83
[#159 int_literal]: #79
[#159 literal]: #76
[#159 paren_expression]: #77
[#159 primary_expression]: #73
[#159 singular_expression]: #67
[#159 template_elaborated_ident]: #74
[#159 unary_expression]: #212
[#162 bool_literal]: #81
[#162 call_expression]: #75
[#162 decimal_float_literal]: #86
[#162 decimal_int_literal]: #84
[#162 float_literal]: #80
[#162 hex_float_literal]: #87
[#162 hex_int_literal]: #85
[#162 ident]: #78
[#162 ident_pattern_token]: #83
[#162 int_literal]: #79
[#162 literal]: #76
[#162 multiplicative_expression]: #210
[#162 paren_expression]: #77
[#162 primary_expression]: #73
[#162 singular_expression]: #67
[#162 template_elaborated_ident]: #74
[#162 unary_expression]: #211
[#165 bool_literal]: #81
[#165 call_expression]: #75
[#165 decimal_float_literal]: #86
[#165 decimal_int_literal]: #84
[#165 float_literal]: #80
[#165 hex_float_literal]: #87
[#165 hex_int_literal]: #85
[#165 ident]: #78
[#165 ident_pattern_token]: #83
[#165 int_literal]: #79
[#165 literal]: #76
[#165 paren_expression]: #77
[#165 primary_expression]: #73
[#165 singular_expression]: #67
[#165 template_elaborated_ident]: #74
[#165 unary_expression]: #209
[#166 bool_literal]: #81
[#166 call_expression]: #75
[#166 decimal_float_literal]: #86
[#166 decimal_int_literal]: #84
[#166 float_literal]: #80
[#166 hex_float_literal]: #87
[#166 hex_int_literal]: #85
[#166 ident]: #78
[#166 ident_pattern_token]: #83
[#166 int_literal]: #79
[#166 literal]: #76
[#166 paren_expression]: #77
[#166 primary_expression]: #73
[#166 singular_expression]: #67
[#166 template_elaborated_ident]: #74
[#166 unary_expression]: #208
[#167 bool_literal]: #81
[#167 call_expression]: #75
[#167 decimal_float_literal]: #86
[#167 decimal_int_literal]: #84
[#167 float_literal]: #80
[#167 hex_float_literal]: #87
[#167 hex_int_literal]: #85
[#167 ident]: #78
[#167 ident_pattern_token]: #83
[#167 int_literal]: #79
[#167 literal]: #76
[#167 paren_expression]: #77
[#167 primary_expression]: #73
[#167 singular_expression]: #67
[#167 template_elaborated_ident]: #74
[#167 unary_expression]: #207
[#168 additive_expression]: #64
[#168 bool_literal]: #81
[#168 call_expression]: #75
[#168 decimal_float_literal]: #86
[#168 decimal_int_literal]: #84
[#168 float_literal]: #80
[#168 hex_float_literal]: #87
[#168 hex_int_literal]: #85
[#168 ident]: #78
[#168 ident_pattern_token]: #83
[#168 int_literal]: #79
[#168 literal]: #76
[#168 multiplicative_expression]: #66
[#168 paren_expression]: #77
[#168 primary_expression]: #73
[#168 shift_expression]: #206
[#168 singular_expression]: #67
[#168 template_elaborated_ident]: #74
[#168 unary_expression]: #199
[#169 additive_expression]: #64
[#169 bool_literal]: #81
[#169 call_expression]: #75
[#169 decimal_float_literal]: #86
[#169 decimal_int_literal]: #84
[#169 float_literal]: #80
[#169 hex_float_literal]: #87
[#169 hex_int_literal]: #85
[#169 ident]: #78
[#169 ident_pattern_token]: #83
[#169 int_literal]: #79
[#169 literal]: #76
[#169 multiplicative_expression]: #66
[#169 paren_expression]: #77
[#169 primary_expression]: #73
[#169 shift_expression]: #205
[#169 singular_expression]: #67
[#169 template_elaborated_ident]: #74
[#169 unary_expression]: #199
[#170 additive_expression]: #64
[#170 bool_literal]: #81
[#170 call_expression]: #75
[#170 decimal_float_literal]: #86
[#170 decimal_int_literal]: #84
[#170 float_literal]: #80
[#170 hex_float_literal]: #87
[#170 hex_int_literal]: #85
[#170 ident]: #78
[#170 ident_pattern_token]: #83
[#170 int_literal]: #79
[#170 literal]: #76
[#170 multiplicative_expression]: #66
[#170 paren_expression]: #77
[#170 primary_expression]: #73
[#170 shift_expression]: #204
[#170 singular_expression]: #67
[#170 template_elaborated_ident]: #74
[#170 unary_expression]: #199
[#171 additive_expression]: #64
[#171 bool_literal]: #81
[#171 call_expression]: #75
[#171 decimal_float_literal]: #86
[#171 decimal_int_literal]: #84
[#171 float_literal]: #80
[#171 hex_float_literal]: #87
[#171 hex_int_literal]: #85
[#171 ident]: #78
[#171 ident_pattern_token]: #83
[#171 int_literal]: #79
[#171 literal]: #76
[#171 multiplicative_expression]: #66
[#171 paren_expression]: #77
[#171 primary_expression]: #73
[#171 shift_expression]: #203
[#171 singular_expression]: #67
[#171 template_elaborated_ident]: #74
[#171 unary_expression]: #199
[#172 additive_expression]: #64
[#172 bool_literal]: #81
[#172 call_expression]: #75
[#172 decimal_float_literal]: #86
[#172 decimal_int_literal]: #84
[#172 float_literal]: #80
[#172 hex_float_literal]: #87
[#172 hex_int_literal]: #85
[#172 ident]: #78
[#172 ident_pattern_token]: #83
[#172 int_literal]: #79
[#172 literal]: #76
[#172 multiplicative_expression]: #66
[#172 paren_expression]: #77
[#172 primary_expression]: #73
[#172 shift_expression]: #202
[#172 singular_expression]: #67
[#172 template_elaborated_ident]: #74
[#172 unary_expression]: #199
[#173 additive_expression]: #64
[#173 bool_literal]: #81
[#173 call_expression]: #75
[#173 decimal_float_literal]: #86
[#173 decimal_int_literal]: #84
[#173 float_literal]: #80
[#173 hex_float_literal]: #87
[#173 hex_int_literal]: #85
[#173 ident]: #78
[#173 ident_pattern_token]: #83
[#173 int_literal]: #79
[#173 literal]: #76
[#173 multiplicative_expression]: #66
[#173 paren_expression]: #77
[#173 primary_expression]: #73
[#173 shift_expression]: #201
[#173 singular_expression]: #67
[#173 template_elaborated_ident]: #74
[#173 unary_expression]: #199
[#178 additive_expression]: #64
[#178 bool_literal]: #81
[#178 call_expression]: #75
[#178 decimal_float_literal]: #86
[#178 decimal_int_literal]: #84
[#178 float_literal]: #80
[#178 hex_float_literal]: #87
[#178 hex_int_literal]: #85
[#178 ident]: #78
[#178 ident_pattern_token]: #83
[#178 int_literal]: #79
[#178 literal]: #76
[#178 multiplicative_expression]: #66
[#178 paren_expression]: #77
[#178 primary_expression]: #73
[#178 relational_expression]: #200
[#178 shift_expression]: #60
[#178 singular_expression]: #67
[#178 template_elaborated_ident]: #74
[#178 unary_expression]: #199
[#179 additive_expression]: #64
[#179 bool_literal]: #81
[#179 call_expression]: #75
[#179 decimal_float_literal]: #86
[#179 decimal_int_literal]: #84
[#179 float_literal]: #80
[#179 hex_float_literal]: #87
[#179 hex_int_literal]: #85
[#179 ident]: #78
[#179 ident_pattern_token]: #83
[#179 int_literal]: #79
[#179 literal]: #76
[#179 multiplicative_expression]: #66
[#179 paren_expression]: #77
[#179 primary_expression]: #73
[#179 relational_expression]: #198
[#179 shift_expression]: #60
[#179 singular_expression]: #67
[#179 template_elaborated_ident]: #74
[#179 unary_expression]: #199
[#180 additive_expression]: #64
[#180 binary_and_expression]: #61
[#180 binary_or_expression]: #62
[#180 binary_xor_expression]: #63
[#180 bitwise_expression]: #59
[#180 bool_literal]: #81
[#180 call_expression]: #75
[#180 decimal_float_literal]: #86
[#180 decimal_int_literal]: #84
[#180 expression]: #197
[#180 float_literal]: #80
[#180 hex_float_literal]: #87
[#180 hex_int_literal]: #85
[#180 ident]: #78
[#180 ident_pattern_token]: #83
[#180 int_literal]: #79
[#180 literal]: #76
[#180 multiplicative_expression]: #66
[#180 paren_expression]: #77
[#180 primary_expression]: #73
[#180 relational_expression]: #56
[#180 shift_expression]: #60
[#180 short_circuit_and_expression]: #58
[#180 short_circuit_or_expression]: #57
[#180 singular_expression]: #67
[#180 template_elaborated_ident]: #74
[#180 unary_expression]: #65
[#181 additive_expression]: #64
[#181 binary_and_expression]: #61
[#181 binary_or_expression]: #62
[#181 binary_xor_expression]: #63
[#181 bitwise_expression]: #59
[#181 bool_literal]: #81
[#181 call_expression]: #75
[#181 decimal_float_literal]: #86
[#181 decimal_int_literal]: #84
[#181 expression]: #196
[#181 float_literal]: #80
[#181 hex_float_literal]: #87
[#181 hex_int_literal]: #85
[#181 ident]: #78
[#181 ident_pattern_token]: #83
[#181 int_literal]: #79
[#181 literal]: #76
[#181 multiplicative_expression]: #66
[#181 paren_expression]: #77
[#181 primary_expression]: #73
[#181 relational_expression]: #56
[#181 shift_expression]: #60
[#181 short_circuit_and_expression]: #58
[#181 short_circuit_or_expression]: #57
[#181 singular_expression]: #67
[#181 template_elaborated_ident]: #74
[#181 unary_expression]: #65
[#182 additive_expression]: #64
[#182 binary_and_expression]: #61
[#182 binary_or_expression]: #62
[#182 binary_xor_expression]: #63
[#182 bitwise_expression]: #59
[#182 bool_literal]: #81
[#182 call_expression]: #75
[#182 decimal_float_literal]: #86
[#182 decimal_int_literal]: #84
[#182 expression]: #195
[#182 float_literal]: #80
[#182 hex_float_literal]: #87
[#182 hex_int_literal]: #85
[#182 ident]: #78
[#182 ident_pattern_token]: #83
[#182 int_literal]: #79
[#182 literal]: #76
[#182 multiplicative_expression]: #66
[#182 paren_expression]: #77
[#182 primary_expression]: #73
[#182 relational_expression]: #56
[#182 shift_expression]: #60
[#182 short_circuit_and_expression]: #58
[#182 short_circuit_or_expression]: #57
[#182 singular_expression]: #67
[#182 template_elaborated_ident]: #74
[#182 unary_expression]: #65
[#183 additive_expression]: #64
[#183 binary_and_expression]: #61
[#183 binary_or_expression]: #62
[#183 binary_xor_expression]: #63
[#183 bitwise_expression]: #59
[#183 bool_literal]: #81
[#183 call_expression]: #75
[#183 decimal_float_literal]: #86
[#183 decimal_int_literal]: #84
[#183 expression]: #194
[#183 float_literal]: #80
[#183 hex_float_literal]: #87
[#183 hex_int_literal]: #85
[#183 ident]: #78
[#183 ident_pattern_token]: #83
[#183 int_literal]: #79
[#183 literal]: #76
[#183 multiplicative_expression]: #66
[#183 paren_expression]: #77
[#183 primary_expression]: #73
[#183 relational_expression]: #56
[#183 shift_expression]: #60
[#183 short_circuit_and_expression]: #58
[#183 short_circuit_or_expression]: #57
[#183 singular_expression]: #67
[#183 template_elaborated_ident]: #74
[#183 unary_expression]: #65
[#184 additive_expression]: #64
[#184 binary_and_expression]: #61
[#184 binary_or_expression]: #62
[#184 binary_xor_expression]: #63
[#184 bitwise_expression]: #59
[#184 bool_literal]: #81
[#184 call_expression]: #75
[#184 decimal_float_literal]: #86
[#184 decimal_int_literal]: #84
[#184 expression]: #193
[#184 float_literal]: #80
[#184 hex_float_literal]: #87
[#184 hex_int_literal]: #85
[#184 ident]: #78
[#184 ident_pattern_token]: #83
[#184 int_literal]: #79
[#184 literal]: #76
[#184 multiplicative_expression]: #66
[#184 paren_expression]: #77
[#184 primary_expression]: #73
[#184 relational_expression]: #56
[#184 shift_expression]: #60
[#184 short_circuit_and_expression]: #58
[#184 short_circuit_or_expression]: #57
[#184 singular_expression]: #67
[#184 template_elaborated_ident]: #74
[#184 unary_expression]: #65
[#185 additive_expression]: #64
[#185 binary_and_expression]: #61
[#185 binary_or_expression]: #62
[#185 binary_xor_expression]: #63
[#185 bitwise_expression]: #59
[#185 bool_literal]: #81
[#185 call_expression]: #75
[#185 decimal_float_literal]: #86
[#185 decimal_int_literal]: #84
[#185 expression]: #192
[#185 float_literal]: #80
[#185 hex_float_literal]: #87
[#185 hex_int_literal]: #85
[#185 ident]: #78
[#185 ident_pattern_token]: #83
[#185 int_literal]: #79
[#185 literal]: #76
[#185 multiplicative_expression]: #66
[#185 paren_expression]: #77
[#185 primary_expression]: #73
[#185 relational_expression]: #56
[#185 shift_expression]: #60
[#185 short_circuit_and_expression]: #58
[#185 short_circuit_or_expression]: #57
[#185 singular_expression]: #67
[#185 template_elaborated_ident]: #74
[#185 unary_expression]: #65
[#186 additive_expression]: #64
[#186 binary_and_expression]: #61
[#186 binary_or_expression]: #62
[#186 binary_xor_expression]: #63
[#186 bitwise_expression]: #59
[#186 bool_literal]: #81
[#186 call_expression]: #75
[#186 decimal_float_literal]: #86
[#186 decimal_int_literal]: #84
[#186 expression]: #191
[#186 float_literal]: #80
[#186 hex_float_literal]: #87
[#186 hex_int_literal]: #85
[#186 ident]: #78
[#186 ident_pattern_token]: #83
[#186 int_literal]: #79
[#186 literal]: #76
[#186 multiplicative_expression]: #66
[#186 paren_expression]: #77
[#186 primary_expression]: #73
[#186 relational_expression]: #56
[#186 shift_expression]: #60
[#186 short_circuit_and_expression]: #58
[#186 short_circuit_or_expression]: #57
[#186 singular_expression]: #67
[#186 template_elaborated_ident]: #74
[#186 unary_expression]: #65
[#187 additive_expression]: #64
[#187 binary_and_expression]: #61
[#187 binary_or_expression]: #62
[#187 binary_xor_expression]: #63
[#187 bitwise_expression]: #59
[#187 bool_literal]: #81
[#187 call_expression]: #75
[#187 decimal_float_literal]: #86
[#187 decimal_int_literal]: #84
[#187 expression]: #190
[#187 float_literal]: #80
[#187 hex_float_literal]: #87
[#187 hex_int_literal]: #85
[#187 ident]: #78
[#187 ident_pattern_token]: #83
[#187 int_literal]: #79
[#187 literal]: #76
[#187 multiplicative_expression]: #66
[#187 paren_expression]: #77
[#187 primary_expression]: #73
[#187 relational_expression]: #56
[#187 shift_expression]: #60
[#187 short_circuit_and_expression]: #58
[#187 short_circuit_or_expression]: #57
[#187 singular_expression]: #67
[#187 template_elaborated_ident]: #74
[#187 unary_expression]: #65
[#188 additive_expression]: #64
[#188 binary_and_expression]: #61
[#188 binary_or_expression]: #62
[#188 binary_xor_expression]: #63
[#188 bitwise_expression]: #59
[#188 bool_literal]: #81
[#188 call_expression]: #75
[#188 decimal_float_literal]: #86
[#188 decimal_int_literal]: #84
[#188 expression]: #189
[#188 float_literal]: #80
[#188 hex_float_literal]: #87
[#188 hex_int_literal]: #85
[#188 ident]: #78
[#188 ident_pattern_token]: #83
[#188 int_literal]: #79
[#188 literal]: #76
[#188 multiplicative_expression]: #66
[#188 paren_expression]: #77
[#188 primary_expression]: #73
[#188 relational_expression]: #56
[#188 shift_expression]: #60
[#188 short_circuit_and_expression]: #58
[#188 short_circuit_or_expression]: #57
[#188 singular_expression]: #67
[#188 template_elaborated_ident]: #74
[#188 unary_expression]: #65
[#189 attrib_end]: #383
[#189 attrib_end/0.0]: #373
[#190 attrib_end]: #382
[#190 attrib_end/0.0]: #373
[#191 attrib_end]: #381
[#191 attrib_end/0.0]: #373
[#192 attrib_end]: #380
[#192 attrib_end/0.0]: #373
[#193 attrib_end]: #379
[#193 attrib_end/0.0]: #373
[#194 attrib_end]: #377
[#194 attrib_end/0.0]: #373
[#195 attrib_end]: #376
[#195 attrib_end/0.0]: #373
[#196 attrib_end]: #374
[#196 attrib_end/0.0]: #373
[#197 attrib_end]: #371
[#197 attrib_end/0.0]: #373
[#199 _shift_left]: #158
[#199 _shift_right]: #159
[#210 multiplicative_operator]: #154
[#215 component_or_swizzle_specifier]: #370
[#215 component_or_swizzle_specifier/1.2]: #369
[#216 component_or_swizzle_specifier]: #368
[#216 component_or_swizzle_specifier/2.2]: #367
[#229 expression_comma_list/0.1]: #361
[#229 expression_comma_list/0.1/0]: #362
[#229 expression_comma_list/0.1/0/0.0]: #363
[#232 additive_expression]: #64
[#232 binary_and_expression]: #61
[#232 binary_or_expression]: #62
[#232 binary_xor_expression]: #63
[#232 bitwise_expression]: #360
[#232 bool_literal]: #81
[#232 call_expression]: #75
[#232 decimal_float_literal]: #86
[#232 decimal_int_literal]: #84
[#232 float_literal]: #80
[#232 hex_float_literal]: #87
[#232 hex_int_literal]: #85
[#232 ident]: #78
[#232 ident_pattern_token]: #83
[#232 int_literal]: #79
[#232 literal]: #76
[#232 multiplicative_expression]: #66
[#232 paren_expression]: #77
[#232 primary_expression]: #73
[#232 relational_expression]: #357
[#232 shift_expression]: #60
[#232 short_circuit_and_expression]: #359
[#232 short_circuit_or_expression]: #358
[#232 singular_expression]: #67
[#232 template_arg_comma_list]: #355
[#232 template_arg_expression]: #356
[#232 template_elaborated_ident]: #74
[#232 unary_expression]: #65
[#237 assignment_statement]: #265
[#237 break_statement]: #247
[#237 compound_statement]: #251
[#237 compound_statement/0.1/0]: #353
[#237 const_assert_statement]: #252
[#237 continue_statement]: #248
[#237 core_lhs_expression]: #272
[#237 decrement_statement]: #267
[#237 for_statement]: #243
[#237 func_call_statement]: #245
[#237 ident]: #269
[#237 ident_pattern_token]: #83
[#237 if_clause]: #254
[#237 if_statement]: #240
[#237 increment_statement]: #266
[#237 lhs_expression]: #270
[#237 loop_statement]: #242
[#237 return_statement]: #239
[#237 statement]: #237
[#237 switch_statement]: #241
[#237 template_elaborated_ident]: #259
[#237 variable_decl]: #260
[#237 variable_statement]: #246
[#237 variable_updating_statement]: #250
[#237 while_statement]: #244
[#253 additive_expression]: #64
[#253 binary_and_expression]: #61
[#253 binary_or_expression]: #62
[#253 binary_xor_expression]: #63
[#253 bitwise_expression]: #59
[#253 bool_literal]: #81
[#253 call_expression]: #75
[#253 decimal_float_literal]: #86
[#253 decimal_int_literal]: #84
[#253 expression]: #344
[#253 float_literal]: #80
[#253 hex_float_literal]: #87
[#253 hex_int_literal]: #85
[#253 ident]: #78
[#253 ident_pattern_token]: #83
[#253 int_literal]: #79
[#253 literal]: #76
[#253 multiplicative_expression]: #66
[#253 paren_expression]: #77
[#253 primary_expression]: #73
[#253 relational_expression]: #56
[#253 return_statement/0.1]: #343
[#253 shift_expression]: #60
[#253 short_circuit_and_expression]: #58
[#253 short_circuit_or_expression]: #57
[#253 singular_expression]: #67
[#253 template_elaborated_ident]: #74
[#253 unary_expression]: #65
[#254 else_if_clause]: #341
[#254 if_statement/0.1]: #339
[#254 if_statement/0.1/0]: #340
[#255 additive_expression]: #64
[#255 binary_and_expression]: #61
[#255 binary_or_expression]: #62
[#255 binary_xor_expression]: #63
[#255 bitwise_expression]: #59
[#255 bool_literal]: #81
[#255 call_expression]: #75
[#255 decimal_float_literal]: #86
[#255 decimal_int_literal]: #84
[#255 expression]: #338
[#255 float_literal]: #80
[#255 hex_float_literal]: #87
[#255 hex_int_literal]: #85
[#255 ident]: #78
[#255 ident_pattern_token]: #83
[#255 int_literal]: #79
[#255 literal]: #76
[#255 multiplicative_expression]: #66
[#255 paren_expression]: #77
[#255 primary_expression]: #73
[#255 relational_expression]: #56
[#255 shift_expression]: #60
[#255 short_circuit_and_expression]: #58
[#255 short_circuit_or_expression]: #57
[#255 singular_expression]: #67
[#255 template_elaborated_ident]: #74
[#255 unary_expression]: #65
[#258 additive_expression]: #64
[#258 binary_and_expression]: #61
[#258 binary_or_expression]: #62
[#258 binary_xor_expression]: #63
[#258 bitwise_expression]: #59
[#258 bool_literal]: #81
[#258 call_expression]: #75
[#258 decimal_float_literal]: #86
[#258 decimal_int_literal]: #84
[#258 expression]: #335
[#258 float_literal]: #80
[#258 hex_float_literal]: #87
[#258 hex_int_literal]: #85
[#258 ident]: #78
[#258 ident_pattern_token]: #83
[#258 int_literal]: #79
[#258 literal]: #76
[#258 multiplicative_expression]: #66
[#258 paren_expression]: #77
[#258 primary_expression]: #73
[#258 relational_expression]: #56
[#258 shift_expression]: #60
[#258 short_circuit_and_expression]: #58
[#258 short_circuit_or_expression]: #57
[#258 singular_expression]: #67
[#258 template_elaborated_ident]: #74
[#258 unary_expression]: #65
[#259 argument_expression_list]: #334
[#261 ident]: #108
[#261 ident_pattern_token]: #83
[#261 optionally_typed_ident]: #332
[#262 ident]: #108
[#262 ident_pattern_token]: #83
[#262 optionally_typed_ident]: #331
[#268 additive_expression]: #64
[#268 binary_and_expression]: #61
[#268 binary_or_expression]: #62
[#268 binary_xor_expression]: #63
[#268 bitwise_expression]: #59
[#268 bool_literal]: #81
[#268 call_expression]: #75
[#268 decimal_float_literal]: #86
[#268 decimal_int_literal]: #84
[#268 expression]: #330
[#268 float_literal]: #80
[#268 hex_float_literal]: #87
[#268 hex_int_literal]: #85
[#268 ident]: #78
[#268 ident_pattern_token]: #83
[#268 int_literal]: #79
[#268 literal]: #76
[#268 multiplicative_expression]: #66
[#268 paren_expression]: #77
[#268 primary_expression]: #73
[#268 relational_expression]: #56
[#268 shift_expression]: #60
[#268 short_circuit_and_expression]: #58
[#268 short_circuit_or_expression]: #57
[#268 singular_expression]: #67
[#268 template_elaborated_ident]: #74
[#268 unary_expression]: #65
[#269 _disambiguate_template]: #329
[#270 _shift_left_assign]: #326
[#270 _shift_right_assign]: #325
[#270 assignment_statement/0.1]: #312
[#270 compound_assignment_operator]: #316
[#272 component_or_swizzle_specifier]: #310
[#272 lhs_expression/0.1]: #309
[#273 core_lhs_expression]: #272
[#273 ident]: #306
[#273 ident_pattern_token]: #83
[#273 lhs_expression]: #308
[#274 core_lhs_expression]: #272
[#274 ident]: #306
[#274 ident_pattern_token]: #83
[#274 lhs_expression]: #307
[#275 core_lhs_expression]: #272
[#275 ident]: #306
[#275 ident_pattern_token]: #83
[#275 lhs_expression]: #305
[#276 attribute]: #304
[#276 function_header/0.3]: #299
[#276 param]: #301
[#276 param/0.0]: #302
[#276 param/0.0/0]: #303
[#276 param_list]: #300
[#277 struct_body_decl/0.2]: #295
[#277 struct_body_decl/0.2/0]: #296
[#277 struct_body_decl/0.2/0/0.0]: #297
[#278 member_ident]: #294
[#280 attribute]: #280
[#280 struct_member/0.0/0]: #293
[#282 _disambiguate_template]: #292
[#284 additive_expression]: #64
[#284 binary_and_expression]: #61
[#284 binary_or_expression]: #62
[#284 binary_xor_expression]: #63
[#284 bitwise_expression]: #59
[#284 bool_literal]: #81
[#284 call_expression]: #75
[#284 decimal_float_literal]: #86
[#284 decimal_int_literal]: #84
[#284 expression]: #291
[#284 float_literal]: #80
[#284 hex_float_literal]: #87
[#284 hex_int_literal]: #85
[#284 ident]: #78
[#284 ident_pattern_token]: #83
[#284 int_literal]: #79
[#284 literal]: #76
[#284 multiplicative_expression]: #66
[#284 paren_expression]: #77
[#284 primary_expression]: #73
[#284 relational_expression]: #56
[#284 shift_expression]: #60
[#284 short_circuit_and_expression]: #58
[#284 short_circuit_or_expression]: #57
[#284 singular_expression]: #67
[#284 template_elaborated_ident]: #74
[#284 unary_expression]: #65
[#288 ident]: #108
[#288 ident_pattern_token]: #83
[#288 optionally_typed_ident]: #290
[#292 _template_args_start]: #232
[#292 template_elaborated_ident/0.2]: #437
[#292 template_list]: #231
[#295 struct_body_decl/0.3]: #434
[#297 struct_body_decl/0.2/0]: #433
[#297 struct_body_decl/0.2/0/0.0]: #297
[#298 attribute]: #280
[#298 struct_member]: #432
[#298 struct_member/0.0]: #278
[#298 struct_member/0.0/0]: #279
[#301 param_list/0.1]: #427
[#301 param_list/0.1/0]: #428
[#301 param_list/0.1/0/0.0]: #429
[#302 ident]: #426
[#302 ident_pattern_token]: #83
[#304 attribute]: #304
[#304 param/0.0/0]: #425
[#306 _disambiguate_template]: #423
[#311 additive_expression]: #64
[#311 binary_and_expression]: #61
[#311 binary_or_expression]: #62
[#311 binary_xor_expression]: #63
[#311 bitwise_expression]: #59
[#311 bool_literal]: #81
[#311 call_expression]: #75
[#311 decimal_float_literal]: #86
[#311 decimal_int_literal]: #84
[#311 expression]: #422
[#311 float_literal]: #80
[#311 hex_float_literal]: #87
[#311 hex_int_literal]: #85
[#311 ident]: #78
[#311 ident_pattern_token]: #83
[#311 int_literal]: #79
[#311 literal]: #76
[#311 multiplicative_expression]: #66
[#311 paren_expression]: #77
[#311 primary_expression]: #73
[#311 relational_expression]: #56
[#311 shift_expression]: #60
[#311 short_circuit_and_expression]: #58
[#311 short_circuit_or_expression]: #57
[#311 singular_expression]: #67
[#311 template_elaborated_ident]: #74
[#311 unary_expression]: #65
[#312 additive_expression]: #64
[#312 binary_and_expression]: #61
[#312 binary_or_expression]: #62
[#312 binary_xor_expression]: #63
[#312 bitwise_expression]: #59
[#312 bool_literal]: #81
[#312 call_expression]: #75
[#312 decimal_float_literal]: #86
[#312 decimal_int_literal]: #84
[#312 expression]: #421
[#312 float_literal]: #80
[#312 hex_float_literal]: #87
[#312 hex_int_literal]: #85
[#312 ident]: #78
[#312 ident_pattern_token]: #83
[#312 int_literal]: #79
[#312 literal]: #76
[#312 multiplicative_expression]: #66
[#312 paren_expression]: #77
[#312 primary_expression]: #73
[#312 relational_expression]: #56
[#312 shift_expression]: #60
[#312 short_circuit_and_expression]: #58
[#312 short_circuit_or_expression]: #57
[#312 singular_expression]: #67
[#312 template_elaborated_ident]: #74
[#312 unary_expression]: #65
[#329 _template_args_start]: #232
[#329 template_elaborated_ident/0.2]: #230
[#329 template_list]: #231
[#330 compound_statement]: #420
[#333 additive_expression]: #64
[#333 binary_and_expression]: #61
[#333 binary_or_expression]: #62
[#333 binary_xor_expression]: #63
[#333 bitwise_expression]: #59
[#333 bool_literal]: #81
[#333 call_expression]: #75
[#333 decimal_float_literal]: #86
[#333 decimal_int_literal]: #84
[#333 expression]: #417
[#333 float_literal]: #80
[#333 hex_float_literal]: #87
[#333 hex_int_literal]: #85
[#333 ident]: #78
[#333 ident_pattern_token]: #83
[#333 int_literal]: #79
[#333 literal]: #76
[#333 multiplicative_expression]: #66
[#333 paren_expression]: #77
[#333 primary_expression]: #73
[#333 relational_expression]: #56
[#333 shift_expression]: #60
[#333 short_circuit_and_expression]: #58
[#333 short_circuit_or_expression]: #57
[#333 singular_expression]: #67
[#333 template_elaborated_ident]: #74
[#333 unary_expression]: #65
[#335 compound_statement]: #416
[#336 assignment_statement]: #265
[#336 core_lhs_expression]: #272
[#336 decrement_statement]: #267
[#336 for_header]: #410
[#336 for_header/0.0]: #411
[#336 for_init]: #412
[#336 func_call_statement]: #415
[#336 ident]: #269
[#336 ident_pattern_token]: #83
[#336 increment_statement]: #266
[#336 lhs_expression]: #270
[#336 template_elaborated_ident]: #259
[#336 variable_decl]: #260
[#336 variable_statement]: #413
[#336 variable_updating_statement]: #414
[#337 assignment_statement]: #265
[#337 break_statement]: #247
[#337 compound_statement]: #251
[#337 const_assert_statement]: #252
[#337 continue_statement]: #248
[#337 core_lhs_expression]: #272
[#337 decrement_statement]: #267
[#337 for_statement]: #243
[#337 func_call_statement]: #245
[#337 ident]: #269
[#337 ident_pattern_token]: #83
[#337 if_clause]: #254
[#337 if_statement]: #240
[#337 increment_statement]: #266
[#337 lhs_expression]: #270
[#337 loop_statement]: #242
[#337 loop_statement/0.2]: #407
[#337 loop_statement/0.2/0]: #408
[#337 return_statement]: #239
[#337 statement]: #409
[#337 switch_statement]: #241
[#337 template_elaborated_ident]: #259
[#337 variable_decl]: #260
[#337 variable_statement]: #246
[#337 variable_updating_statement]: #250
[#337 while_statement]: #244
[#339 else_clause]: #404
[#339 if_statement/0.2]: #403
[#341 else_if_clause]: #341
[#341 if_statement/0.1/0]: #402
[#355 _template_args_end]: #399
[#356 template_arg_comma_list/0.1]: #395
[#356 template_arg_comma_list/0.1/0]: #396
[#356 template_arg_comma_list/0.1/0/0.0]: #397
[#361 expression_comma_list/0.2]: #391
[#363 expression_comma_list/0.1/0]: #390
[#363 expression_comma_list/0.1/0/0.0]: #363
[#364 additive_expression]: #64
[#364 binary_and_expression]: #61
[#364 binary_or_expression]: #62
[#364 binary_xor_expression]: #63
[#364 bitwise_expression]: #59
[#364 bool_literal]: #81
[#364 call_expression]: #75
[#364 decimal_float_literal]: #86
[#364 decimal_int_literal]: #84
[#364 expression]: #389
[#364 float_literal]: #80
[#364 hex_float_literal]: #87
[#364 hex_int_literal]: #85
[#364 ident]: #78
[#364 ident_pattern_token]: #83
[#364 int_literal]: #79
[#364 literal]: #76
[#364 multiplicative_expression]: #66
[#364 paren_expression]: #77
[#364 primary_expression]: #73
[#364 relational_expression]: #56
[#364 shift_expression]: #60
[#364 short_circuit_and_expression]: #58
[#364 short_circuit_or_expression]: #57
[#364 singular_expression]: #67
[#364 template_elaborated_ident]: #74
[#364 unary_expression]: #65
[#366 component_or_swizzle_specifier]: #388
[#366 component_or_swizzle_specifier/0.3]: #387
[#372 additive_expression]: #64
[#372 binary_and_expression]: #61
[#372 binary_or_expression]: #62
[#372 binary_xor_expression]: #63
[#372 bitwise_expression]: #59
[#372 bool_literal]: #81
[#372 call_expression]: #75
[#372 decimal_float_literal]: #86
[#372 decimal_int_literal]: #84
[#372 expression]: #386
[#372 float_literal]: #80
[#372 hex_float_literal]: #87
[#372 hex_int_literal]: #85
[#372 ident]: #78
[#372 ident_pattern_token]: #83
[#372 int_literal]: #79
[#372 literal]: #76
[#372 multiplicative_expression]: #66
[#372 paren_expression]: #77
[#372 primary_expression]: #73
[#372 relational_expression]: #56
[#372 shift_expression]: #60
[#372 short_circuit_and_expression]: #58
[#372 short_circuit_or_expression]: #57
[#372 singular_expression]: #67
[#372 template_elaborated_ident]: #74
[#372 unary_expression]: #65
[#378 additive_expression]: #64
[#378 binary_and_expression]: #61
[#378 binary_or_expression]: #62
[#378 binary_xor_expression]: #63
[#378 bitwise_expression]: #59
[#378 bool_literal]: #81
[#378 call_expression]: #75
[#378 decimal_float_literal]: #86
[#378 decimal_int_literal]: #84
[#378 expression]: #384
[#378 float_literal]: #80
[#378 hex_float_literal]: #87
[#378 hex_int_literal]: #85
[#378 ident]: #78
[#378 ident_pattern_token]: #83
[#378 int_literal]: #79
[#378 literal]: #76
[#378 multiplicative_expression]: #66
[#378 paren_expression]: #77
[#378 primary_expression]: #73
[#378 relational_expression]: #56
[#378 shift_expression]: #60
[#378 short_circuit_and_expression]: #58
[#378 short_circuit_or_expression]: #57
[#378 singular_expression]: #67
[#378 template_elaborated_ident]: #74
[#378 unary_expression]: #65
[#384 attrib_end]: #472
[#384 attrib_end/0.0]: #373
[#386 attrib_end]: #470
[#386 attrib_end/0.0]: #373
[#393 additive_expression]: #64
[#393 bool_literal]: #81
[#393 call_expression]: #75
[#393 decimal_float_literal]: #86
[#393 decimal_int_literal]: #84
[#393 float_literal]: #80
[#393 hex_float_literal]: #87
[#393 hex_int_literal]: #85
[#393 ident]: #78
[#393 ident_pattern_token]: #83
[#393 int_literal]: #79
[#393 literal]: #76
[#393 multiplicative_expression]: #66
[#393 paren_expression]: #77
[#393 primary_expression]: #73
[#393 relational_expression]: #469
[#393 shift_expression]: #60
[#393 singular_expression]: #67
[#393 template_elaborated_ident]: #74
[#393 unary_expression]: #199
[#394 additive_expression]: #64
[#394 bool_literal]: #81
[#394 call_expression]: #75
[#394 decimal_float_literal]: #86
[#394 decimal_int_literal]: #84
[#394 float_literal]: #80
[#394 hex_float_literal]: #87
[#394 hex_int_literal]: #85
[#394 ident]: #78
[#394 ident_pattern_token]: #83
[#394 int_literal]: #79
[#394 literal]: #76
[#394 multiplicative_expression]: #66
[#394 paren_expression]: #77
[#394 primary_expression]: #73
[#394 relational_expression]: #468
[#394 shift_expression]: #60
[#394 singular_expression]: #67
[#394 template_elaborated_ident]: #74
[#394 unary_expression]: #199
[#395 template_arg_comma_list/0.2]: #466
[#397 template_arg_comma_list/0.1/0]: #465
[#397 template_arg_comma_list/0.1/0/0.0]: #397
[#398 additive_expression]: #64
[#398 binary_and_expression]: #61
[#398 binary_or_expression]: #62
[#398 binary_xor_expression]: #63
[#398 bitwise_expression]: #360
[#398 bool_literal]: #81
[#398 call_expression]: #75
[#398 decimal_float_literal]: #86
[#398 decimal_int_literal]: #84
[#398 float_literal]: #80
[#398 hex_float_literal]: #87
[#398 hex_int_literal]: #85
[#398 ident]: #78
[#398 ident_pattern_token]: #83
[#398 int_literal]: #79
[#398 literal]: #76
[#398 multiplicative_expression]: #66
[#398 paren_expression]: #77
[#398 primary_expression]: #73
[#398 relational_expression]: #357
[#398 shift_expression]: #60
[#398 short_circuit_and_expression]: #359
[#398 short_circuit_or_expression]: #358
[#398 singular_expression]: #67
[#398 template_arg_expression]: #464
[#398 template_elaborated_ident]: #74
[#398 unary_expression]: #65
[#401 additive_expression]: #64
[#401 binary_and_expression]: #61
[#401 binary_or_expression]: #62
[#401 binary_xor_expression]: #63
[#401 bitwise_expression]: #59
[#401 bool_literal]: #81
[#401 call_expression]: #75
[#401 decimal_float_literal]: #86
[#401 decimal_int_literal]: #84
[#401 expression]: #463
[#401 float_literal]: #80
[#401 hex_float_literal]: #87
[#401 hex_int_literal]: #85
[#401 ident]: #78
[#401 ident_pattern_token]: #83
[#401 int_literal]: #79
[#401 literal]: #76
[#401 multiplicative_expression]: #66
[#401 paren_expression]: #77
[#401 primary_expression]: #73
[#401 relational_expression]: #56
[#401 shift_expression]: #60
[#401 short_circuit_and_expression]: #58
[#401 short_circuit_or_expression]: #57
[#401 singular_expression]: #67
[#401 template_elaborated_ident]: #74
[#401 unary_expression]: #65
[#405 compound_statement]: #462
[#406 case_clause]: #458
[#406 default_alone_clause]: #459
[#406 switch_body]: #457
[#406 switch_statement/0.3]: #455
[#406 switch_statement/0.3/0]: #456
[#407 continuing_statement]: #453
[#407 loop_statement/0.3]: #452
[#409 assignment_statement]: #265
[#409 break_statement]: #247
[#409 compound_statement]: #251
[#409 const_assert_statement]: #252
[#409 continue_statement]: #248
[#409 core_lhs_expression]: #272
[#409 decrement_statement]: #267
[#409 for_statement]: #243
[#409 func_call_statement]: #245
[#409 ident]: #269
[#409 ident_pattern_token]: #83
[#409 if_clause]: #254
[#409 if_statement]: #240
[#409 increment_statement]: #266
[#409 lhs_expression]: #270
[#409 loop_statement]: #242
[#409 loop_statement/0.2/0]: #451
[#409 return_statement]: #239
[#409 statement]: #409
[#409 switch_statement]: #241
[#409 template_elaborated_ident]: #259
[#409 variable_decl]: #260
[#409 variable_statement]: #246
[#409 variable_updating_statement]: #250
[#409 while_statement]: #244
[#418 additive_expression]: #64
[#418 binary_and_expression]: #61
[#418 binary_or_expression]: #62
[#418 binary_xor_expression]: #63
[#418 bitwise_expression]: #59
[#418 bool_literal]: #81
[#418 call_expression]: #75
[#418 decimal_float_literal]: #86
[#418 decimal_int_literal]: #84
[#418 expression]: #448
[#418 float_literal]: #80
[#418 hex_float_literal]: #87
[#418 hex_int_literal]: #85
[#418 ident]: #78
[#418 ident_pattern_token]: #83
[#418 int_literal]: #79
[#418 literal]: #76
[#418 multiplicative_expression]: #66
[#418 paren_expression]: #77
[#418 primary_expression]: #73
[#418 relational_expression]: #56
[#418 shift_expression]: #60
[#418 short_circuit_and_expression]: #58
[#418 short_circuit_or_expression]: #57
[#418 singular_expression]: #67
[#418 template_elaborated_ident]: #74
[#418 unary_expression]: #65
[#419 additive_expression]: #64
[#419 binary_and_expression]: #61
[#419 binary_or_expression]: #62
[#419 binary_xor_expression]: #63
[#419 bitwise_expression]: #59
[#419 bool_literal]: #81
[#419 call_expression]: #75
[#419 decimal_float_literal]: #86
[#419 decimal_int_literal]: #84
[#419 expression]: #447
[#419 float_literal]: #80
[#419 hex_float_literal]: #87
[#419 hex_int_literal]: #85
[#419 ident]: #78
[#419 ident_pattern_token]: #83
[#419 int_literal]: #79
[#419 literal]: #76
[#419 multiplicative_expression]: #66
[#419 paren_expression]: #77
[#419 primary_expression]: #73
[#419 relational_expression]: #56
[#419 shift_expression]: #60
[#419 short_circuit_and_expression]: #58
[#419 short_circuit_or_expression]: #57
[#419 singular_expression]: #67
[#419 template_elaborated_ident]: #74
[#419 unary_expression]: #65
[#427 param_list/0.2]: #444
[#429 param_list/0.1/0]: #443
[#429 param_list/0.1/0/0.0]: #429
[#430 attribute]: #304
[#430 param]: #442
[#430 param/0.0]: #302
[#430 param/0.0/0]: #303
[#431 function_header/0.5]: #440
[#436 ident]: #282
[#436 ident_pattern_token]: #83
[#436 type_specifier]: #438
[#441 attribute]: #492
[#441 function_header/0.5/0.1]: #490
[#441 function_header/0.5/0.1/0]: #491
[#446 ident]: #282
[#446 ident_pattern_token]: #83
[#446 type_specifier]: #489
[#449 additive_expression]: #64
[#449 binary_and_expression]: #61
[#449 binary_or_expression]: #62
[#449 binary_xor_expression]: #63
[#449 bitwise_expression]: #59
[#449 bool_literal]: #81
[#449 call_expression]: #75
[#449 decimal_float_literal]: #86
[#449 decimal_int_literal]: #84
[#449 expression]: #488
[#449 float_literal]: #80
[#449 for_header/0.2]: #487
[#449 hex_float_literal]: #87
[#449 hex_int_literal]: #85
[#449 ident]: #78
[#449 ident_pattern_token]: #83
[#449 int_literal]: #79
[#449 literal]: #76
[#449 multiplicative_expression]: #66
[#449 paren_expression]: #77
[#449 primary_expression]: #73
[#449 relational_expression]: #56
[#449 shift_expression]: #60
[#449 short_circuit_and_expression]: #58
[#449 short_circuit_or_expression]: #57
[#449 singular_expression]: #67
[#449 template_elaborated_ident]: #74
[#449 unary_expression]: #65
[#450 compound_statement]: #486
[#454 continuing_compound_statement]: #483
[#457 case_clause]: #458
[#457 default_alone_clause]: #459
[#457 switch_body]: #457
[#457 switch_statement/0.3/0]: #481
[#460 additive_expression]: #64
[#460 binary_and_expression]: #61
[#460 binary_or_expression]: #62
[#460 binary_xor_expression]: #63
[#460 bitwise_expression]: #59
[#460 bool_literal]: #81
[#460 call_expression]: #75
[#460 case_selector]: #478
[#460 case_selectors]: #477
[#460 decimal_float_literal]: #86
[#460 decimal_int_literal]: #84
[#460 expression]: #480
[#460 float_literal]: #80
[#460 hex_float_literal]: #87
[#460 hex_int_literal]: #85
[#460 ident]: #78
[#460 ident_pattern_token]: #83
[#460 int_literal]: #79
[#460 literal]: #76
[#460 multiplicative_expression]: #66
[#460 paren_expression]: #77
[#460 primary_expression]: #73
[#460 relational_expression]: #56
[#460 shift_expression]: #60
[#460 short_circuit_and_expression]: #58
[#460 short_circuit_or_expression]: #57
[#460 singular_expression]: #67
[#460 template_elaborated_ident]: #74
[#460 unary_expression]: #65
[#461 default_alone_clause/0.1]: #475
[#463 compound_statement]: #474
[#471 additive_expression]: #64
[#471 binary_and_expression]: #61
[#471 binary_or_expression]: #62
[#471 binary_xor_expression]: #63
[#471 bitwise_expression]: #59
[#471 bool_literal]: #81
[#471 call_expression]: #75
[#471 decimal_float_literal]: #86
[#471 decimal_int_literal]: #84
[#471 expression]: #473
[#471 float_literal]: #80
[#471 hex_float_literal]: #87
[#471 hex_int_literal]: #85
[#471 ident]: #78
[#471 ident_pattern_token]: #83
[#471 int_literal]: #79
[#471 literal]: #76
[#471 multiplicative_expression]: #66
[#471 paren_expression]: #77
[#471 primary_expression]: #73
[#471 relational_expression]: #56
[#471 shift_expression]: #60
[#471 short_circuit_and_expression]: #58
[#471 short_circuit_or_expression]: #57
[#471 singular_expression]: #67
[#471 template_elaborated_ident]: #74
[#471 unary_expression]: #65
[#473 attrib_end]: #506
[#473 attrib_end/0.0]: #373
[#475 compound_statement]: #505
[#477 case_clause/0.2]: #503
[#478 case_selectors/0.1]: #499
[#478 case_selectors/0.1/0]: #500
[#478 case_selectors/0.1/0/0.0]: #501
[#484 assignment_statement]: #265
[#484 break_statement]: #247
[#484 compound_statement]: #251
[#484 const_assert_statement]: #252
[#484 continue_statement]: #248
[#484 continuing_compound_statement/0.1]: #496
[#484 continuing_compound_statement/0.1/0]: #497
[#484 core_lhs_expression]: #272
[#484 decrement_statement]: #267
[#484 for_statement]: #243
[#484 func_call_statement]: #245
[#484 ident]: #269
[#484 ident_pattern_token]: #83
[#484 if_clause]: #254
[#484 if_statement]: #240
[#484 increment_statement]: #266
[#484 lhs_expression]: #270
[#484 loop_statement]: #242
[#484 return_statement]: #239
[#484 statement]: #498
[#484 switch_statement]: #241
[#484 template_elaborated_ident]: #259
[#484 variable_decl]: #260
[#484 variable_statement]: #246
[#484 variable_updating_statement]: #250
[#484 while_statement]: #244
[#490 ident]: #78
[#490 ident_pattern_token]: #83
[#490 template_elaborated_ident]: #494
[#492 attribute]: #492
[#492 function_header/0.5/0.1/0]: #493
[#495 assignment_statement]: #265
[#495 core_lhs_expression]: #272
[#495 decrement_statement]: #267
[#495 for_header/0.4]: #516
[#495 for_update]: #517
[#495 func_call_statement]: #519
[#495 ident]: #269
[#495 ident_pattern_token]: #83
[#495 increment_statement]: #266
[#495 lhs_expression]: #270
[#495 template_elaborated_ident]: #259
[#495 variable_updating_statement]: #518
[#496 break_if_statement]: #514
[#496 continuing_compound_statement/0.2]: #513
[#498 assignment_statement]: #265
[#498 break_statement]: #247
[#498 compound_statement]: #251
[#498 const_assert_statement]: #252
[#498 continue_statement]: #248
[#498 continuing_compound_statement/0.1/0]: #512
[#498 core_lhs_expression]: #272
[#498 decrement_statement]: #267
[#498 for_statement]: #243
[#498 func_call_statement]: #245
[#498 ident]: #269
[#498 ident_pattern_token]: #83
[#498 if_clause]: #254
[#498 if_statement]: #240
[#498 increment_statement]: #266
[#498 lhs_expression]: #270
[#498 loop_statement]: #242
[#498 return_statement]: #239
[#498 statement]: #498
[#498 switch_statement]: #241
[#498 template_elaborated_ident]: #259
[#498 variable_decl]: #260
[#498 variable_statement]: #246
[#498 variable_updating_statement]: #250
[#498 while_statement]: #244
[#499 case_selectors/0.2]: #510
[#501 case_selectors/0.1/0]: #509
[#501 case_selectors/0.1/0/0.0]: #501
[#502 additive_expression]: #64
[#502 binary_and_expression]: #61
[#502 binary_or_expression]: #62
[#502 binary_xor_expression]: #63
[#502 bitwise_expression]: #59
[#502 bool_literal]: #81
[#502 call_expression]: #75
[#502 case_selector]: #508
[#502 decimal_float_literal]: #86
[#502 decimal_int_literal]: #84
[#502 expression]: #480
[#502 float_literal]: #80
[#502 hex_float_literal]: #87
[#502 hex_int_literal]: #85
[#502 ident]: #78
[#502 ident_pattern_token]: #83
[#502 int_literal]: #79
[#502 literal]: #76
[#502 multiplicative_expression]: #66
[#502 paren_expression]: #77
[#502 primary_expression]: #73
[#502 relational_expression]: #56
[#502 shift_expression]: #60
[#502 short_circuit_and_expression]: #58
[#502 short_circuit_or_expression]: #57
[#502 singular_expression]: #67
[#502 template_elaborated_ident]: #74
[#502 unary_expression]: #65
[#503 compound_statement]: #507
[#520 additive_expression]: #64
[#520 binary_and_expression]: #61
[#520 binary_or_expression]: #62
[#520 binary_xor_expression]: #63
[#520 bitwise_expression]: #59
[#520 bool_literal]: #81
[#520 call_expression]: #75
[#520 decimal_float_literal]: #86
[#520 decimal_int_literal]: #84
[#520 expression]: #522
[#520 float_literal]: #80
[#520 hex_float_literal]: #87
[#520 hex_int_literal]: #85
[#520 ident]: #78
[#520 ident_pattern_token]: #83
[#520 int_literal]: #79
[#520 literal]: #76
[#520 multiplicative_expression]: #66
[#520 paren_expression]: #77
[#520 primary_expression]: #73
[#520 relational_expression]: #56
[#520 shift_expression]: #60
[#520 short_circuit_and_expression]: #58
[#520 short_circuit_or_expression]: #57
[#520 singular_expression]: #67
[#520 template_elaborated_ident]: #74
[#520 unary_expression]: #65
